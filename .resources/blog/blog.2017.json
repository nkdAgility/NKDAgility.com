[
  {
    "FrontMatter": {
      "title": "Round up for 2017 and beyond: Agility, DevOps, and Everything In-between",
      "description": "Summary of 2017 conferences, talks, and training on Agile, DevOps, Scrum, and team leadership, with insights from global workshops and upcoming course details.",
      "ResourceId": "J0HjcdNvqGW",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 12146,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-11-28",
      "weight": 480.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "round-up-for-2017-and-beyond-agility-devops-and-everything-in-between",
      "aliases": [
        "/resources/J0HjcdNvqGW"
      ],
      "aliasesArchive": [
        "/blog/round-up-for-2017-and-beyond-agility-devops-and-everything-in-between",
        "/round-up-for-2017-and-beyond-agility-devops-and-everything-in-between",
        "/round-up-for-2017-and-beyond--agility,-devops,-and-everything-in-between",
        "/blog/round-up-for-2017-and-beyond--agility,-devops,-and-everything-in-between",
        "/round-up-for-2017-and-beyond--agility--devops--and-everything-in-between",
        "/blog/round-up-for-2017-and-beyond--agility--devops--and-everything-in-between",
        "/resources/blog/round-up-for-2017-and-beyond-agility-devops-and-everything-in-between"
      ],
      "categories": [
        "Uncategorized"
      ],
      "preview": "-1-1.jpg",
      "tags": [],
      "Watermarks": {
        "description": "2025-05-07T13:16:24Z"
      },
      "concepts": []
    },
    "BodyContent": "This year has been relatively busy for conferences. Which is unusual since I usually forget until after the call for papers and wonder what's going on. Well, this time I got some submissions in on time. It does, however, baffle me which papers are selected. I always submit around 6 papers for workshops and talks, and always the one I would least like to present is picked.\n\n![C40AC1A0-41B0-4F01-90D8-87917B7CEC87](images/-1-1.jpg \"C40AC1A0-41B0-4F01-90D8-87917B7CEC87\") Figure: [DevOps Vilnius 2017 (Keynote) - Agile is Dead?](http://nkdagility.net/2jOeQ0c)\n{ .post-img }\n\nGetting out of my comfort zone is something that was instilled in me working with Adam Cogan and Steven Borg. That fear of failure that drives me to be that little bit better is what seems to set me apart…\n\nI worked for Adam Cogan when, on my first visit to Australia, he told me the day before that I was doing two talks at the Silverlight Code Camp; one on TFS and the other on SharePoint. I worked with Steven Borg through the night on his presentation for the ALM Forum. It has been an exciting last seven years since I left the FTE world behind; What's in store for me next…\n\nHere is a round-up of all of the 2017 conferences with links to the presentation that I used:\n\n- [NDC London 2017 - Agile Is Dead](http://nkdagility.net/2zrKU13)\n- [NDC Mini Copenhagen 2017 - Big Scrum: Scaling Scrum to the Enterprise](http://nkdagility.net/2A1XZe9)\n- [DevOps Vilnius 2017 (Keynote) - Agile is Dead?](http://nkdagility.net/2jOeQ0c)\n- [DevOps Vilnius 2017 - DevOps Zero to Hero](http://nkdagility.net/2hUtmDa)\n- [Scrum Day London 2017 - Agile is Dead: Long live DevOps](http://nkdagility.net/2hJG9Er)\n- [NDC Oslo 2017 - Building big Teams with Nexus](http://nkdagility.net/2iHy18o)\n- [Agile In Africa 2017 - Building Big Teams with Nexus](http://nkdagility.net/2zYaf1N)\n- [Agile in Africa 2017 - Leading Agile Change](http://nkdagility.net/2zc3N3G)\n- [Ghana School of Engineering - Students Agile Survival Guide](http://nkdagility.net/2zZ36Oq)\n- [Lean-Agile Glasgow (October 2017) - Leading Agile Change in Africa](http://nkdagility.net/2AmTZbs)\n- [Build Stuff LT 2017 - Sprint Zero and Working Software too](http://nkdagility.net/2A1tCVh)\n\nIn between, I ran many workshops and courses in Norway, Ghana, India, USA, UK, Lithuania, & Poland… I am finding more and more than the value in training vastly outweighs the value in consulting. I believe that every customer I leave should have more knowledge than when I arrived. If we can do that in a structured and fun way that leaves the majority with many more tools in their toolbox, then that's even better. Although I have been teaching a lot of [Scrum]({{< ref \"/categories/scrum\" >}}) classes rather than technical its that technical foundation in building lousy software that gives me the energy to help everyone else.\n\n![nkdAgility-Akaditi-professional-scrum-ghana-police-service-group](images/nkdAgility-Akaditi-professional-scrum-ghana-police-service-group-2-2.jpg \"nkdAgility-Akaditi-professional-scrum-ghana-police-service-group\")\n{ .post-img }\n\nFigure: [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Foundations training for the Ghana Police Service\n\nThe stories I could tell! And I do… if you come to one of my courses you can find out that your practices and processes are not that bad after all…\n\n- [Professional Agile Retreat](https://nkdagility.com/training/courses/professional-agile-retreat-with-psm-pal/) – 3 days of training in Professional Scrum with a two day Professional [Scrum Master]({{< ref \"/tags/scrum-master\" >}}) and a 1-day Professional Agile [Leadership]({{< ref \"/categories/leadership\" >}}). Here is the rub, it's in Cancun.. come for the week and spend the rest on the beach, maybe we will spend all of it on the beach.\n  - [January 29th, 2018 | Cancun, Mexico \\[PAL-e + PSM\\]](https://nkdagility.com/training/scheduled/professional-agile-retreat-with-psm-pal-in-cancun-mexico-on-29th-january-2018/)\n- [Professional Scrum Master Training](https://nkdagility.com/training/courses/professional-scrum-master/) – Everyone wants to be a Scrum Master…\n  - [December 4, 2017 | Oslo, Norway](https://nkdagility.com/training/scheduled/professional-scrum-master-oslo-december-2017/)\n  - [January 8th, 2018 | Edinburgh, Scotland](https://nkdagility.com/training/scheduled/professional-scrum-master-edinburgh-scotland-8th-january-2018/)\n  - [January 15th, 2018 | Oslo, Norway](https://nkdagility.com/training/scheduled/professional-scrum-master-oslo-norway-15th-january-2018/)\n- [Professional Scrum Developer Training](https://nkdagility.com/training/courses/professional-scrum-developer-training/) – Engineering teams learn what [engineering excellence]({{< ref \"/categories/engineering-excellence\" >}}) really means for the [engineering practices]({{< ref \"/tags/engineering-practices\" >}}) that one requires for outstanding agility.\n  - [December 11, 2017 | Accra, Ghana](https://nkdagility.com/training/scheduled/professional-scrum-developer-accra-ghana-11th-december-2017/)\n  - [January 10th, 2018 | Edinburgh, Scotland](https://nkdagility.com/training/scheduled/professional-scrum-developer-edinburgh-scotland-january-2018/)\n\nThat's just a few of the classes that I have already booked for 2018, and you can find more on the [training](https://nkdagility.com/training) page.\n\nI think that 2018 is going to be more training than consulting, although now I have booked a bunch of training I have customers looking for consulting time… ho hum… that's the way it is I guess…\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-11-28-round-up-for-2017-and-beyond-agility-devops-and-everything-in-between\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-11-28-round-up-for-2017-and-beyond-agility-devops-and-everything-in-between"
  },
  {
    "FrontMatter": {
      "title": "Getting started with a modern source control system and DevOps",
      "description": "Learn key practices for adopting modern source control and DevOps, including automation, release pipelines, and team collaboration to improve software delivery quality.",
      "ResourceId": "bkiQSbbO78R",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 11456,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-11-10",
      "weight": 230.0,
      "AudioNative": true,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "getting-started-with-modern-source-control-system-and-devops",
      "aliases": [
        "/resources/bkiQSbbO78R"
      ],
      "aliasesArchive": [
        "/blog/getting-started-with-modern-source-control-system-and-devops",
        "/getting-started-with-modern-source-control-system-and-devops",
        "/getting-started-with-a-modern-source-control-system-and-devops",
        "/blog/getting-started-with-a-modern-source-control-system-and-devops",
        "/resources/blog/getting-started-with-modern-source-control-system-and-devops"
      ],
      "tags": [
        "Technical Mastery",
        "Operational Practices",
        "Software Development",
        "Engineering Practices",
        "Modern Source Control",
        "Pragmatic Thinking"
      ],
      "categories": [
        "Engineering Excellence",
        "DevOps"
      ],
      "preview": "excellence-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:25Z"
      },
      "concepts": [
        "Tool"
      ]
    },
    "BodyContent": "There are a number of things that you have to think about when selecting a [modern source control]({{< ref \"/tags/modern-source-control\" >}}) system. Some of that is purely about code, but modern source control systems are about way more than code. They are about your entire application lifecycle and supporting [DevOps]({{< ref \"/categories/devops\" >}}) practices, they are about the metadata that you use to understand and manage your development processes and deliver great software. The tools you choose should compliment the professional people and practices that you use.\n\n> DevOps is the union of people, processes, and practices to enable continious delivery of value to your end users\n>\n> Donovan Brown\n\n## TL;DR\n\nI have been teaching the [Professional Scrum Developer (PSD) training](https://nkdagility.com/training/courses/professional-scrum-developer-training/) and working with software teams for 7 years. I have never encountered a better platform than [Visual Studio Team Services (VSTS)](https://www.visualstudio.com/team-services/) for managing the metadata required to facilitate the building of professional software on a regular cadence in any technology that is deployed to any platform. I have seen Java, .NET, Web, Android, iOS, and Mainframe teams all working together in VSTS with a shared vision and access to the same metadata. If you have many teams I did a webcast for [Scrum]({{< ref \"/categories/scrum\" >}}).org on [Scaling Professional Scrum with VSTS.](https://nkdagility.com/scaling-professional-scrum-visual-studio-team-services/)\n\n## Let's get some things out the way first\n\nIf you are writing code then it SHOULD be in Source Control. More specifically, if you are writing code for your company then it MUST be in Source Control. Every line of code that you write or change is an asset of your organisation and should be reflected on a balance sheet somewhere. Any value you add is capital expenditure, of which your shareholders/owners should care, and any maintenance is operational expenditure, which your accountants can write off.\n\n**Put your code in source control…** and yes, I still meet organisations that DON’T use source control. No, not only small sweatshops but banks as well. Would you want your real-time transactional banking system under source control? Coz I would!\n\nAnother thing to get out of the way is that deploying directly to production is a BAD IDEA! If you are deploying from your local workstation then you are introducing significant risk to your business and reducing the quality of the organisational asset. Any reduction of quality is a decision that needs to be taken by your executive board on advice from your accountant. Again, organisational asses sitting on a balance sheet. Its fraud to incorrectly represent the value of an asset, ignorance is not an excuse. Even if you have automated builds; if you ship irregularly, or with a lot of time between releases, then you likely have a way to bug-fix production quickly. Bypassing your usual checks and balances for shipping software reduces quality and shows an inherent lack of [engineering excellence]({{< ref \"/categories/engineering-excellence\" >}}) in your organisation.\n\n**Deploy software through an automated release pipeline…** and yes, I have met companies that deploy directly to production from workstations. I even worked with one company that had operations using trial and error mixing and matching DLL's to get the software working in production. One customer required to do 9000+ hours of manual testing to validate that\n\n**Modern source control is more than just code...** in the past, just like operating systems used to be simple things, you could stick your code in source control and call it good. In the past, you used VSS, Subversion, or Perforce and it was good enough. Not anymore. Just as you expect a browser to ship with your OS, you now expect a build engine, [release management]({{< ref \"/tags/release-management\" >}}), and planning tools to ship with your source control system and for them all to be integrated. So don't base your choice on that one thing, think of the integration and other tools that you need to support your modern [software development]({{< ref \"/tags/software-development\" >}}) pipeline.\n\nI would expect my release tools to understand exactly; what changes have been made to the code, which features of the system are affected, and what the resulting impact of that release had on both the user experience and system performance through telemetry. I would expect my work tracking tools to understand exactly; what branches are related to this work, which build include the changes, and who approved the pull requests that brought that code into the system. This is the type of metadata, regardless of the implementation technology, that I would expect to be available to Engineering and Management to help them understand their process and how things are going.\n\nThat all said it is important to remember to focus on [becoming a professional Scrum team](https://nkdagility.com/scrum-tapas-importance-professionalism/) rather than an amateur one. While you need to focus on the Scrum Guide, you also need Engineering Excellence and a set of Values and Principles.\n\n## Recommended good practices for a modern software team\n\nI almost never use the term \"best practices\", especially for software delivery and anyone that gives you a best practice is generally talking out their ass. There are only good practices that fit the current needs of the business or the situation at hand. In the modern software development world, you need to accept that any process or practice that you adopt is imperfectly defined and will need to be adapted to meet your needs. That said, having source control and an automated release pipeline is not optional if you want to continue to be competitive. You need to be able to monitor both your [Lead Time]({{< ref \"/tags/lead-time\" >}}) and your [Cycle Time]({{< ref \"/tags/cycle-time\" >}}).\n\nSome general guidelines you should consider:\n\n- **Never code without Source Control** - Ultimately the tool does not matter but if you are building Open Source Software (OSS) then you need to be on [GitHub]({{< ref \"/tags/github\" >}}). GitHub has cornered the OSS market and has not near competitor. If however, you are building closed source software then there is no better platform than Visual Studio Team Services (VSTS). You get unlimited private repositories and if you have MSDN licences, as most organisations building on the Microsoft stack does, then it is already included in your licence. If you are not on the Microsoft Stack then I would still recommend VSTS as the cheapest and most featureful platform available that supports any platform and any environment.\n- **Use feature flags to minimise branches** - Branches introduce waste with merging and often introduce quality issues. Bypass the whole issue by using Feature flags and other software patterns to avoid it. If you are using a distributed source control system (DVCS) only ever release from MASTER with fully tested code, but you can have an unlimited number of topic and personal branches, as long as they are short lived. If you are using a server-based source control system (SVCS) then you should completely avoid branches where possible, and work to move towards a DVCS. Maybe you need only \\[trunk/master/main\\] and \\[dev/work\\] branches but focus on a zero branch policy.\n- **Move to Git** \\- Regardless of the scale of the software that you are building, you should be developing on Git. If you are clinging to your SVCS (TFVC, Perforce, SVN, whatever) then you are merely clinging to the past and relying on outmoded technology. Even the [Windows]({{< ref \"/tags/windows\" >}}) team at Microsoft has moved to Git, as has Bing, Xbox, & the entire Developer Division.\n- **Meet your [Definition of Done]({{< ref \"/tags/definition-of-done\" >}}) at least every 30 days** - Create a definition of done that represents the minimum bar of quality for everything your develop. Make sure that definition reflects everything that you need to do to ship your software to production, and get there at least every 30 days. If you can get there more regularly that better, and if you can [practice continuous delivery inside of your planning Sprints](https://nkdagility.com/continuous-deliver-sprint/) then that's even better.\n- **Get feedback from your users at least every 30 days** - Part of the trick of delivering awesome software is building just what your customers need, just as they need it. The only way to do this is to get what you have just built into your customer's hands so they can tell you is it is right, then pivot as soon as they give you feedback. [Continuous delivery]({{< ref \"/tags/continuous-delivery\" >}}) to production is the best way to achieve this.\n- **Create tests first so you build what was asked the first time** - You should always work towards test-first practices. While for many this means [Test Driven Development]({{< ref \"/tags/test-driven-development\" >}}) (TDD) I like to look it as any form of test-first. How can your coders ever hope to pass the quality gates when the testers build the test cases separately and only show the coders after they are finished. Get your test cases written first and have the coders make them pass. I also recommend that coders use TDD and pair programming. Following Test First will help you move from testing quality in at the end to building quality in from the start.\n- **Automate every test you can** - Automation is key to a successful delivery because you can't run all your tests every 30 days. Every 30 days you add more tests and without automation, you can't keep up. Ideally, all of your tests are automated from the start. An interesting example is that Microsoft moved all of its testing efforts into the Development Teams around 3 years ago, and got rid of their last external test team about 2 years ago. Make your Development Team(s) accountable for Quality and give them the tools to make it happen.\n- **Create automated release pipeline** - Creating an automated release pipeline is hard but the benefits are numerable. From quality to resilience you just must have one to support modern development practices. You should focus on delivering to production (start with as close as you can get) at least every 30 days, but expect to need to ship many times a day. Automation will make your process quick and easy an lets you focus on improving the pipeline over time as you his issues. This is where [lean]({{< ref \"/categories/lean\" >}}) practices and focusing on flow can really help minimise the waste and improve the process.\n\nIn order to support these things, I use VSTS as my software development platform. With the move by Microsoft to distance its platform from execution and focus on orchestration we get a system that can support any team developing with any technology for any platform. This allows us to have a single unified organisational vision and tool for our orchestration of portfolio, planning, execution, coding, build, test management, and release while leaving the execution of these tasks and the technologies used in and to build our software up to the team. You might have one team that used Nuget and another than uses NPM, or one using Maven and another on Gulp. Regardless of your implementation choice, VSTS can support your teams doing Scrum and deploying anything on a regular cadence to anywhere. When I am teaching a [Professional Scrum Developer (PSD)](https://nkdagility.com/training/courses/professional-scrum-developer-training/) class I always use VSTS regardless of the technology that the students are working on.\n\n**Don’t get locked into a limited set of technologies, VSTS supports every technology on every platform.**\n\nFind out more on [Visual Studio Team Services](https://nkdagility.com/training/) from [naked Agility - Martin Hinshelwood](https://nkdagility.com/company/about-martin-hinshelwood/).\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-11-10-getting-started-with-modern-source-control-system-and-devops\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-11-10-getting-started-with-modern-source-control-system-and-devops"
  },
  {
    "FrontMatter": {
      "title": "Professional Scrum Training for the Ghana Police Service",
      "description": "Professional Scrum training introduced Ghana Police officers to Agile methods, using hands-on sprints to support organisational change and collaboration in policing.",
      "ResourceId": "ozXMaDX0lvp",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 12095,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-10-30",
      "weight": 480.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "professional-scrum-training-ghana-police-service",
      "aliases": [
        "/resources/ozXMaDX0lvp"
      ],
      "aliasesArchive": [
        "/blog/professional-scrum-training-ghana-police-service",
        "/professional-scrum-training-ghana-police-service",
        "/professional-scrum-training-for-the-ghana-police-service",
        "/blog/professional-scrum-training-for-the-ghana-police-service",
        "/resources/blog/professional-scrum-training-ghana-police-service"
      ],
      "tags": [
        "Agile Frameworks",
        "Professional Scrum",
        "Software Development",
        "Pragmatic Thinking",
        "Agile Transformation"
      ],
      "categories": [
        "Scrum",
        "Product Development"
      ],
      "preview": "clip_image006_thumb-3-3.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:27Z"
      },
      "concepts": [
        "Framework"
      ]
    },
    "BodyContent": "Last time I talked about the Ghana Police Service (GPS) I was talking about [Professional Organisational Change](https://nkdagility.com/professional-organisational-change-ghana-police-service/) and the approach the Inspector General of Police (IGP) is taking; using [Scrum]({{< ref \"/categories/scrum\" >}}) to incrementally make changes to the organisation. While Nana Abban and the IGP have been focusing on the big picture, I have been in Ghana to start the grass roots adoption of Scrum with two [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Foundations (PSF) classes, the first ever run in Ghana.\n\n> Note: You can download the [Agility Guide to Evidence-based Change](https://www.scrum.org/resources/agility-guide-evidence-based-change) from Scrum.org\n\n## Kicking off the Professional Scrum Training\n\nI am not kidding or being metaphorical when I say that these fantastic officers split into groups and, with limited IT knowledge, organised around creating [working software]({{< ref \"/tags/working-software\" >}}) in the form of a website. You can imagine the look on their faces when I proposed such a task, but you can't imagine the look of pride and satisfaction in what they produced.\n\n![clip_image002](images/clip_image002-1-1.jpg \"clip_image002\")\n{ .post-img }\n\n> When it comes to complexity of creative work l, there really is nothing as complex as [software development]({{< ref \"/tags/software-development\" >}}).\n>\n> Ken Schwaber, CEO and Founder of Scrum.org\n\n![clip_image004](images/clip_image004_thumb-2-2.jpg \"clip_image004\")\n{ .post-img }\n\nI arrived late on Sunday and first thing Monday I was whisked to the Ghana Police Headquarters to meet with the IGP . We had met before, two years earlier at the very first Agile In Africa conference when he was not the IGP and did a talk on solving complex chases (in this case a serial killer) using agile ideas and practices. He is big on Scrum having seen it used effectively in his time at Interpol, and he understands the foundational agile concepts of empiricism and how they can be applied to policing. The \\[vision and mission\\] I mentioned before is unlikely to be realised predictively and will require significant empirical [experimentation]({{< ref \"/tags/experimentation\" >}}) to get right.\n\n![clip_image006](images/clip_image006_thumb-3-3.jpg \"clip_image006\")\n{ .post-img }\n\nBecause this was the very first class, and the first time many of the rank and file had even heard of Agile or Scrum we had a kick-off ceremony and some photo opportunities. In case you can't find me, I'm sitting in the front row, third from the left, with the IGP in the middle and Nana Abban on the right. The folks behind me are the students for the very first Professional Scrum Foundations class in West Africa. It's important as you move into a new endeavour to make sure that everyone understands the fundamentals of how you plan on achieving your goals, and why it works.\n\n![clip_image008](images/clip_image008_thumb-4-4.jpg \"clip_image008\")\n{ .post-img }\n\nAfter the ceremony it was time to get down to the business of learning Scrum.\n\n## Real Sprints in Professional Scrum Foundations\n\nIf you are not familiar with the PSF it was designed, originally by David Starr, as an intensely practical course. Just explaining agile and Scrum is not enough and students have to live it, and feel it. To that end we do actual sprints building working software in the class. Not only was this the first PSF in West Africa, but it was the first course that the Police and civilians were collaborating on. For most of the officers it was also their first experience building software with their prior experience being in Word and Excel.\n\n![clip_image010](images/clip_image010_thumb-5-5.jpg \"clip_image010\")\n{ .post-img }\n\nI have used the PSF effectively in software organisations to train everyone, from the guy driving the forklift in the warehouse, to the CEO of the company. It's effective because everyone in your company learns how and why Scrum works, and because everyone then understands the problem domain. Software is hard. For Police Officers I had a conundrum; do I change the topic away from software, or do I follow through and take folks out of their comfort zone.\n\n![clip_image012](images/clip_image012_thumb-6-6.jpg \"clip_image012\")\n{ .post-img }\n\nI decided to follow through and the look on everyone's face when I asked them to collaborate on creating a working website was priceless. The PSF is usually made up of 4 sprints of 60 minutes during the class. Since we were also introducing technology we only really had time for 2 of the sprints, but I learned enough to think that I can push for 3 next time around. There were a lot of discussions, that I don't have from software students, on how to relate Scrum and our software exercises to police work. While the goal for the training is focused on facilitating [organisational change]({{< ref \"/tags/organisational-change\" >}}), the reality is that folks in the room care about the work that they do. We had some especially interesting conversations about the difference between creative work, suited for Agile/Scrum and non-creative work, suited for [Lean]({{< ref \"/categories/lean\" >}})/[Kanban]({{< ref \"/categories/kanban\" >}}).\n\n![clip_image014](images/clip_image014_thumb-7-7.jpg \"clip_image014\")\n{ .post-img }\n\nThe overall flow of the class revels the workings of Scrum iteratively with practical exercises helping to allow students to attain the knowledge incrementally:\n\n- **Introductions** - Getting to know each other is important for understanding how to form teams and making sure that every team has the required skills.\n- **Sprint 1 -** The purpose of the first sprint is for students to see that a group of people just working together for a common goal can get things done. No work breakdown structure required.\n- **Fundamentals to Scrum** - We also need an understanding of the problem we are trying to solve. Here we discuss taylorism, predictive vs empirical, and maintaining an ability to change.\n- **Scrum Framework 1** - Then it's time to dive into Scrum and the Roles (for accountability), the Artifacts (for [transparency]({{< ref \"/tags/transparency\" >}})), and the Events (for inspect and adapt) that make it work.\n- **Sprint 2** - In the second sprint the team's have selected a [Scrum Master]({{< ref \"/tags/scrum-master\" >}}), and [Product Owner]({{< ref \"/tags/product-owner\" >}}). They do explicit Sprint Planning, Review, and Retrospective. Things should go a little more smoothly.\n- **Scrum Framework 2** - This is a second deeper iteration over the Roles (for accountability), the Artifacts (for transparency), and the Events (for inspect and adapt) to add a little more detail and answer the new questions that arise from the Second Sprint.\n- **Mastering Scrum** - the added value of Scrum is People working together in self-organising Teams and being given the freedom of self-determination to achieve [technical mastery]({{< ref \"/tags/technical-mastery\" >}}) of their profession. We focus a lot on Autonomy, Mastery, and Purpose here as it is key to maintaining happy and healthy teams.\n- **Sprint 3** - Depending on how folks are getting on I would normally introduce some team dysfunctions for this Sprint, showing how disruptive they can be. Teams generally get frustrated here, and we have some serious discussions in the Retrospective.\n- **Planning in Scrum** - Dispelling the myths that Agile teams don't do any planning, and that more planning leads to more accurate estimates is the order of Planning in Scrum. Lots of exercises and exposure to many of the complimentary practices that often used for planning, like Stories and Story Points.\n- **Sprint 4** - The 4th Sprint generally brings with it some significant change in tactical direction due to a business need. Its common in the real world, and we want to show students that even significant change can be managed and need not result in chaos.\n- **Getting Started** - After the class there is an expectation that students will use what they just learned, and use it in anger. For this class each of the Regional Commanders will be starting Scrum Teams to action organisational change. So lets feed the backlog a little. [Leadership]({{< ref \"/categories/leadership\" >}}), while good at figuring out what changes need to be made, are often quite far from the actual work being done. This leads to a gap, obvious to people on the ground, on what the next most important thing is to change. After a few discussion around how the organization functions the students get some time to write their own Organisational Change backlog items...we got quite a few...\n\n> NOTE: I only managed to get through 2 sprints for the GPS. Part of that was that both classes were shortened by a half day. The first because of a ceremony with the IGP and the second due to the Friday being a holiday. I have had to miss out Sprint 4, but never both 3 and 4 before. I was quite distraught the first class, but accepting in the second. The students still learned so much.\n\n## Retrospective for the Professional Scrum Training in Ghana\n\nI had some assumptions before arriving at the class that were just not true. My biggest mistake was that the students would know why they were there and what they were going to learn. That is not usually a problem in a software organisation since at least we have a frame of reference and a significant body of knowledge. With the group of Police Officers, even though we had a few techies, that reference point was missing. We spent a lot of time in the first class creating that reference point and heading off dead ends and blind allies. Many were confused as to what they were going to use this for.\n\nFor the second class we had already learned from the feedback of the first, yes it was the very next day, and we started differently. We had a short speech by one of the Police Officers from the Organisational Transformation office to frame the class and its purpose, specifically within the context of the attendees. This seamed to help a lot and things were a lot smother. I also got on a lot better relating Scrum and Software Development to Police Work from the first class. I am now totally comfortable teaching this class to 35 people that have no idea how to build software.\n\n![clip_image016](images/clip_image016_thumb-8-8.jpg \"clip_image016\")\n{ .post-img }\n\nSome things I would do differently:\n\n1. Have all students emailed the Scrum Guide as well as an introduction to what we are trying to achieve in the realm of Organisational Change within the Service. This was something we intended to do for these classes but there was a lot of complications in organising 50 officers from many districts. Many of whom has to travel for more than 10 hours just to get to the class.\n2. Frame earlier that the purpose of the class is to familiarise the Police Officers with Scrum as they are stakeholders to, or maybe Team Members on, the Organisational Change team.\n\n## Conclusion\n\nTeaching non techies is hard, especially for a certifiable geek like myself. However I totally enjoyed my time in Ghana teaching Scrum for the Ghana Police Service and am looking forward to doing it again. I'm back in Ghana for the Agile In Africa conference, and again in December to teach a Professional Scrum Developer (this time to techies). More classes are scheduled next year...\n\nIf you are in Ghana or anywhere in West Africa you can get in touch with [Akaditi](http://www.akaditi.com/) for both public and private classes for your Organisation.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-10-30-professional-scrum-training-ghana-police-service\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-10-30-professional-scrum-training-ghana-police-service"
  },
  {
    "FrontMatter": {
      "title": "Professional Organisational Change at the Ghana Police Service",
      "description": "Explores the Ghana Police Service’s shift to a modern, professional model using servant leadership, agile frameworks, and strategic change to restore public trust and effectiveness.",
      "ResourceId": "yv8bhGf1MfF",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 12011,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-09-04",
      "weight": 480.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "professional-organisational-change-ghana-police-service",
      "aliases": [
        "/resources/yv8bhGf1MfF"
      ],
      "aliasesArchive": [
        "/blog/professional-organisational-change-ghana-police-service",
        "/professional-organisational-change-ghana-police-service",
        "/professional-organisational-change-at-the-ghana-police-service",
        "/blog/professional-organisational-change-at-the-ghana-police-service",
        "/resources/blog/professional-organisational-change-ghana-police-service"
      ],
      "tags": [
        "Agile Leadership",
        "Change Management",
        "Organisational Change",
        "Pragmatic Thinking",
        "Agile Transformation",
        "Organisational Agility",
        "Sociotechnical Systems",
        "Digital Transformation",
        "Organisational Culture",
        "Organisational Physics"
      ],
      "categories": [
        "Leadership",
        "Scrum"
      ],
      "preview": "nkdagility-akaditi-ghana-police-scrum-board-4-3.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:28Z"
      },
      "concepts": [
        "Framework"
      ]
    },
    "BodyContent": "The [Ghana Police Service](http://police.gov.gh/) is in trouble. Over the last few last few decades each new Police organisation and government has tried in various ways to carry out some change but most changes have been ad-hoc, temporary, not robust enough or strategic. The old problems return to haunt new administrations and many police officers and the Public have lost hope.\n\nIn order to create any lasting and permanent change, a transformation is required. A departure from the old to a new modern and professional way to provide protective services to the public and uphold the law. For a permanent change to happen it requires 3 things.\n\n1. A clear vision, goal, metrics underpinned by a servant [leadership]({{< ref \"/categories/leadership\" >}}) style that empowers people to believe in the power of possibilities.\n2. A structured and strategic approach supported by a high performance framework to deliver results quickly.\n3. A transformation network made up of change agents who are trained and empowered to promote the transformation nationally.\n\nAs it stands, public confidence has been eroded to record levels. New management plans to change that, and not by nibbling around the edges. The new Inspector General of Police (IGP) is leading the charge to transform the service into a world class police service with radical, and much needed change.\n\n> Only when an organisation has completely and utterly failed to deliver will it contemplate radical change.\n>\n> \\-Ken Schwaber\n\nI have been working with [Akaditi](http://www.akaditi.com) and [Nana Abban](https://www.linkedin.com/in/nana-abban-2a43b460/) on the Ghana Police Service's organisational transformation, one of the first in the world, and I have never seen a clearer vision, nor a more empirical approach. The key to any transformation at the organisational level is leadership and vision. Even more so in a public sector organisation. The Ghana Police Service already have top down buy-in for the transformation, which is rare in any organisation. And when I say top down, you need to understand that not just the IGP, but his boss, the President of Ghana, are all bought in for change.\n\n> #### VISION\n>\n> The Ghana Police Service seeks to become a world class Police Service capable of delivering planned, democratic, protective, and peaceful services up to the standards of international best practice\n>\n> #### MISSION\n>\n> The mission of the Police Service is to ensure crime prevention and detection, apprehension and prosecution of offenders, consistent with the expectations of Ghanaians for safe, secure and peaceful communities.\n\nThe question has always been, how do you adopt [Scrum]({{< ref \"/categories/scrum\" >}}) & Organisational Transformation in an empirical manner rather than a defined and traditional one. Oh the arguments that Steven Borg and I have had. A few years ago Scrum.org quietly released the Agility Path Guide as a way to do just that. It has been slowly gaining traction as more folks have had success.\n\nI should not need to tell you that in order to effect lasting change in an organisation you need a [framework and not a methodology](https://nkdagility.com/organisational-change-create-path/). Since every organisation has its own way of doing things (unique people, processes, & practices) that reflect in a unique culture, why would someone else's blueprint work for you. You need a framework (much like constructing anything physical) around which you can build your custom methodology. The Agility Path Guide introduces a framework, based on Scrum, to effect Professional [Organisational Change]({{< ref \"/tags/organisational-change\" >}}). This framework can be used to productively and creatively deliver organisational change of the highest possible value.\n\n![](images/nkdagility-akaditi-ghana-police-scrum-change-team-800x369-5-6.png)\n{ .post-img }\n\nWe need the framework, and not a methodology, because every team, group, and department within an organisation is different. Accepting that difference, this framework helps us make sure that we are all at least playing the same game from the start. If everything is open to change we can easily end up in chaos or stagnation. Just like Scrum the Professional Organisational Change framework is closed for modification, but open to extension.\n\n![](images/nkdagility-akaditi-ghana-police-scrum-board-800x450-3-4.jpg)\n{ .post-img }\n\nOne such awesome extension that I have seen used to great effect in both software and non-software endeavours is the [Kanban]({{< ref \"/categories/kanban\" >}}) board. It provides both [transparency]({{< ref \"/tags/transparency\" >}}) and at-a-glance status to what is going on. While this is the board from the Organisational Transformation office the Inspector General of Police has both a Kanban and a Scrum board in his 'war room' which is what his change team and visitors gather around to discuss strategy and what comes next. While we maintain the core framework to enshrine empiricism in our process many parts of the organisation will extend that framework in creating and unique ways to help them solve their independent individuals problems.\n\nAs you can imagine the Ghana Police Service is very hierarchical and relies heavily on rank to get things done. It has not had significant change in nearly 60 years, and they are still following the old ways. Command and control is the way things are done, and it is no longer working. The education level of officers has changed a lot in 60 years. By way of example the two [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Foundations classes I ran for them this week had more MBA's, psychology, and other degrees than the same class in Europe or the US. There has been a big push, some say too much, on academic credentials, but it means that the workforce has changed. Command and control, that was designed for an uneducated work force will no longer be effective, and indeed works to erode moral. Command and control is a fallacy in the modern world and an enigma born of Taylorism and ignorance from a lost time.\n\n![](images/nkdagility-akaditi-ghana-police-napolion-702x450-1-2.jpg)\n{ .post-img }\n\nHell, the military realised that command and control was a losing strategy when Napoleon defeated the Persian army 300 years ago. The Ghana Police Service is certainly not the last to realise it as many European and US companies still try to use Command and Control in this way.\n\nIn any Agile organisation management changes from a 'telling people what to do' role, to one of servant leadership. They change from giving instructions to setting goals. They stop being a planner and become a teacher, coach, and leader.\n\nLeadership has very little to do with giving instructions and barking commands.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-09-04-professional-organisational-change-ghana-police-service\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-09-04-professional-organisational-change-ghana-police-service"
  },
  {
    "FrontMatter": {
      "title": "Scrum Tapas: Scrum and Continuous Delivery",
      "description": "Explains how Scrum and Continuous Delivery work together, highlighting their complementary roles in agile software development and practical integration tips.",
      "ResourceId": "LoRDIqNuwD-",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 11946,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-06-28",
      "weight": 1000.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "scrum-tapas-scrum-continuous-delivery",
      "aliases": [
        "/resources/LoRDIqNuwD-"
      ],
      "aliasesArchive": [
        "/blog/scrum-tapas-scrum-continuous-delivery",
        "/scrum-tapas-scrum-continuous-delivery",
        "/scrum-tapas--scrum-and-continuous-delivery",
        "/blog/scrum-tapas--scrum-and-continuous-delivery",
        "/resources/blog/scrum-tapas-scrum-continuous-delivery"
      ],
      "tags": [],
      "categories": [
        "Uncategorized"
      ],
      "preview": "nkdagility-martin-hinshelwood-scrum-tapas-continious-delivery-1-1.png",
      "Watermarks": {
        "description": "2025-05-07T13:16:33Z"
      },
      "concepts": []
    },
    "BodyContent": "I get asked a lot at conferences and at customers how [Scrum]({{< ref \"/categories/scrum\" >}}) and [Continuous Delivery]({{< ref \"/tags/continuous-delivery\" >}}) can work together. The reality is that they complement each other and at the last Scrum.org F2F I sat down to make a little video on the way I think that it works.\n\n\\[embed\\]https://www.youtube.com/watch?v=3XOorzoubYU\\[/embed\\]\n\nScrum Tapas is a series of short videos that give you a bite sized look into the Scrum world on a specific topic.\n\n\\[[More Scrum Tapas](https://www.youtube.com/playlist?list=PLgDaZD8y4z0B4s9rR8-LtyA18DurYu-51)\\]\n\nAlso join me at [Agile In Africa 2017](http://agileinafrica.com/) in Ghana on October 23, 2017 for an awesome event.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-06-28-scrum-tapas-scrum-continuous-delivery\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-06-28-scrum-tapas-scrum-continuous-delivery"
  },
  {
    "FrontMatter": {
      "title": "VSTS Sync Migration Tool Update and Bugfix",
      "description": "VSTS Sync Migration Tool adds new features and bug fixes for bulk work item updates, project migration, query transfer, and improved notifications for TFS and VSTS users.",
      "ResourceId": "QO9MQIxxcoy",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 11944,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-06-21",
      "weight": 1000.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "vsts-sync-migration-tool-update-bugfix",
      "aliases": [
        "/resources/QO9MQIxxcoy"
      ],
      "aliasesArchive": [
        "/blog/vsts-sync-migration-tool-update-bugfix",
        "/vsts-sync-migration-tool-update-bugfix",
        "/vsts-sync-migration-tool-update-and-bugfix",
        "/blog/vsts-sync-migration-tool-update-and-bugfix",
        "/resources/blog/vsts-sync-migration-tool-update-bugfix"
      ],
      "tags": [],
      "categories": [
        "Uncategorized"
      ],
      "preview": "nkdagility-martin-hinshelwood-vsts-sync-migration-1-1.png",
      "Watermarks": {
        "description": "2025-05-07T13:16:35Z"
      },
      "concepts": [
        "Tool"
      ]
    },
    "BodyContent": "The [VSTS Sync Migration tools](https://marketplace.visualstudio.com/items?itemName=nkdagility.vsts-sync-migration) have been updated with new features and bug fixes for common issues reported by users.\n\n[![Chocolatey](https://camo.githubusercontent.com/30eda87c074e892c7b2126ffd0e6b1d3da7f710d/68747470733a2f2f696d672e736869656c64732e696f2f63686f636f6c617465792f762f767374732d73796e632d6d69677261746f722e737667)](https://chocolatey.org/packages/vsts-sync-migrator/)\n{ .post-img }\n\nFor those that are using TFS and VSTS since the demise of the TFS Integration Tools there has been a gap that has only been filled by commercial tools. For a while I have been shipping the [VSTS Sync Migration tool](https://marketplace.visualstudio.com/items?itemName=nkdagility.vsts-sync-migration) as a stop gap measure until more features are available out of the box. If you are looking to:\n\n- Bulk update thousands of work items with regex pattern matches, and other field mappings.\n- Migrate a partial or entire Team Project from one location to another, Collection, Account, or Server\n- Merge two or more Team Projects that should not have been separated\n\nWe have also had a number of awesome contributions from the community of users that have been using this tool to push work items around…and that has resulted in a number of new features in the last few months:\n\n- **Work Item History** – Now you can migrate revisions as well as just the tip with the new **WorkItemRevisionReplayMigrationContext**  \\[[Harald Koestinger](https://github.com/hkoestin)\\]\n- **Query Migration** - Migrate you Work Item Queries from one Team Project to another with the **WorkItemQueryMigrationContext** \\[[Richard Fennell](https://github.com/rfennell)\\]\n- **Closed Date on Tasks** – Fixed a serious bug with the Closed Date that has been blocking a number of users \\[[Darryl James Heath](https://github.com/darryljamesheath)\\]\n- **Update Notification** – When a new version is published through our automated [DevOps]({{< ref \"/categories/devops\" >}}) pipeline you will be notified when you run the tool.\n\nWe are working on the documentation, and folks struggle with the concept of the ReflectedWorkItemId that we use for tracking what you have already processed. Hopefully we can make some changes to fix this in the future.\n\n[![Chocolatey](https://camo.githubusercontent.com/30eda87c074e892c7b2126ffd0e6b1d3da7f710d/68747470733a2f2f696d672e736869656c64732e696f2f63686f636f6c617465792f762f767374732d73796e632d6d69677261746f722e737667)](https://chocolatey.org/packages/vsts-sync-migrator/)\n{ .post-img }\n\nInstall the latest version from chocolate and have it notify you when a new version comes out.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-06-21-vsts-sync-migration-tool-update-bugfix\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-06-21-vsts-sync-migration-tool-update-bugfix"
  },
  {
    "FrontMatter": {
      "title": "Scrum Tapas: The Importance of Professionalism",
      "description": "Explores why professionalism and adherence to engineering excellence are essential for effective Scrum teams, highlighting common pitfalls of amateur software development.",
      "ResourceId": "sdlfWR5wHx7",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 11942,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-06-14",
      "weight": 790.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "scrum-tapas-importance-professionalism",
      "aliases": [
        "/resources/sdlfWR5wHx7"
      ],
      "aliasesArchive": [
        "/blog/scrum-tapas-importance-professionalism",
        "/scrum-tapas-importance-professionalism",
        "/scrum-tapas--the-importance-of-professionalism",
        "/blog/scrum-tapas--the-importance-of-professionalism",
        "/resources/blog/scrum-tapas-importance-professionalism"
      ],
      "tags": [],
      "categories": [
        "Uncategorized"
      ],
      "preview": "nkdagility-martin-hinshelwood-scrum-tapas-professional-1-1.png",
      "Watermarks": {
        "description": "2025-05-07T13:16:36Z"
      },
      "concepts": []
    },
    "BodyContent": "I believe that to create great software you need to have Professional Teams and not just amateur Teams. However most software teams are amateurs that don't follow the rules, don’t subscribe to [engineering excellence]({{< ref \"/categories/engineering-excellence\" >}}), and don't follow the values and principals\n\n\\[embed\\]https://www.youtube.com/watch?v=jnX2I8BMQzw\\[/embed\\]\n\n[Scrum]({{< ref \"/categories/scrum\" >}}) Tapas is a series of short videos that give you a bite sized look into the Scrum world on a specific topic.\n\n\\[[More Scrum Tapas](https://www.youtube.com/playlist?list=PLgDaZD8y4z0B4s9rR8-LtyA18DurYu-51)\\]\n\nAlso join me for a talk on [Building big teams with Nexus](http://ndcoslo.com/talk/tba-21/) at [NDC Oslo](http://ndcoslo.com) this Friday 16th June 2017!\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-06-14-scrum-tapas-importance-professionalism\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-06-14-scrum-tapas-importance-professionalism"
  },
  {
    "FrontMatter": {
      "title": "I do continuous deliver, why should I Sprint?",
      "description": "Explains why Sprints are valuable even with continuous delivery, highlighting benefits for planning, feedback, communication, and predictability in Scrum teams.",
      "ResourceId": "nIIA3IUtX_z",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 11885,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-05-17",
      "weight": 390.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "continuous-deliver-sprint",
      "aliases": [
        "/resources/nIIA3IUtX_z"
      ],
      "aliasesArchive": [
        "/blog/continuous-deliver-sprint",
        "/continuous-deliver-sprint",
        "/i-do-continuous-deliver,-why-should-i-sprint-",
        "/blog/i-do-continuous-deliver,-why-should-i-sprint-",
        "/i-do-continuous-deliver--why-should-i-sprint-",
        "/blog/i-do-continuous-deliver--why-should-i-sprint-",
        "/resources/blog/continuous-deliver-sprint"
      ],
      "tags": [
        "Agile Planning",
        "Agile Frameworks",
        "Professional Scrum",
        "Agile Product Management",
        "Software Development",
        "Product Delivery",
        "Working Software",
        "Empirical Process Control",
        "Increment",
        "Scrum Master",
        "Agile Transformation",
        "Pragmatic Thinking",
        "Value Delivery"
      ],
      "categories": [
        "Scrum",
        "Product Development"
      ],
      "preview": "Continous_Delivery_by_Jez_Humble_and_David_Farley-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:37Z"
      },
      "concepts": [
        "Framework"
      ]
    },
    "BodyContent": "Many folks believe that a Sprint is an arbitrary length of time in which you create and release software. They look at their [continuous delivery]({{< ref \"/tags/continuous-delivery\" >}}) pipeline and say to themselves; _\"Why would I limit myself to shipping only once every two weeks?\"_\n\n_UPDATE: [Scrum]({{< ref \"/categories/scrum\" >}}).org just posted my [Scrum Tapas - Scrum and Continuous Delivery](https://www.scrum.org/resources/scrum-and-continuous-delivery) which is posted inline below._\n\n\\[embed\\]https://www.youtube.com/watch?v=3XOorzoubYU\\[/embed\\]\n\nTo that I say: _\"Where in the Scrum Guide does it say that you can't release every day?\"_\n\nYou will not find it, I know as I have looked. I work with many teams that release software on a continuous delivery model of everything from a few hours, to a few days, and often on-demand. Can you say that they are not doing Scrum? Of course not.\n\nSo why would you want a Sprint at all?\n\n- A Sprint enshrines your empirical process by providing a maximum delivery cadence\n- It increases communication and alignment\n- It Adds some predictability to the unpredictable nature of software by evening the batch sizes.\n- A Sprint is a container for planning!\n\nAs far as the Scrum Guide is concerned you must deliver [working software]({{< ref \"/tags/working-software\" >}}) at least every 30 days, but there is nothing to stop you doing it more frequently than that. Indeed continuous delivery and Scrum go together quite well in my experience.\n\nA Sprint enshrines inspect and adapt by containing your other feedback loops:\n\n- **Sprint Planning** - Inspect the Backlog and Adapt the plan for the next Sprint\n- **[Daily Scrum]({{< ref \"/tags/daily-scrum\" >}})** - Inspect progress and adapt the plan for the next 24hours.\n- **[Sprint Review]({{< ref \"/tags/sprint-review\" >}})** - Inspect the [Increment]({{< ref \"/tags/increment\" >}}) and adapt the Backlog\n- **Sprint Retrospective** - Inspect the Sprint and adapt the process.\n\nWithout a Sprint when would you bring all this together? The Sprint makes the effort required to pull your work together and create a Done increment of software mandatory. It is absolutely crucial to understand that if you don’t at least have working software that meets your [definition of done]({{< ref \"/tags/definition-of-done\" >}}) by the end of the Sprint then you are not doing Scrum.\n\nIf you are an awesome disciplined team then by all means do something that looks a little more like [Kanban]({{< ref \"/categories/kanban\" >}}), but if you don't have the discipline to follow the rules of Scrum, how would you expect Kanban to work.\n\n### Communication & Alignment\n\nAn additional benefit of Sprinting is that it gives a cadence that your management, and other dependant teams, can follow easily. If you are coordinating work, then having a common frame of reference, Sprint 231, will aid in communication.\n\n### Creates Predictability\n\nSoftware is inherently unpredictable. The standard deviation between the amount of work required for seemingly similar tasks is so big that it is very difficult to gain predictability. A Sprint creates an artificial batch of a fixed size (or at least less varied) with a time boxed Sprint so that you can create that cadence of predictability.\n\n### Conclusion\n\nA Sprint is a container for planning rather than releasing and while Scrum requires that you have a working increment of software at least every Sprint, there is nothing to stop you doing it more often. Indeed the recommendation from Scrum.org is that you not only ship your software at least every 30 days, you should endeavour to do so more often.\n\nScrum.org recently changed its mantra from \"Improve the profession of [software development]({{< ref \"/tags/software-development\" >}})\" to \"Improve the profession of software delivery\" to start to enshrine the idea that delivery, to your customers, is no longer optional to get significant actionable feedback that you can reflect on.\n\nIn short, while the Scrum Guide does not explicitly state it, it is no longer optional to ship your software to production at least every 30 days if you want to stay competitive and build the software that your users deserve.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-05-17-continuous-deliver-sprint\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-05-17-continuous-deliver-sprint"
  },
  {
    "FrontMatter": {
      "title": "Choosing a Process Template for your Team Project",
      "description": "Guidance on selecting the best process template for team projects in TFS or VSTS, highlighting why the Scrum template reduces friction for agile teams over Agile or CMMI.",
      "ResourceId": "dGSGEOYRJAo",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 10356,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-05-16",
      "weight": 590.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "choosing-a-process-template-for-your-team-project",
      "aliases": [
        "/resources/dGSGEOYRJAo"
      ],
      "aliasesArchive": [
        "/blog/choosing-a-process-template-for-your-team-project",
        "/choosing-a-process-template-for-your-team-project",
        "/resources/blog/choosing-a-process-template-for-your-team-project"
      ],
      "tags": [
        "Pragmatic Thinking",
        "Software Development",
        "Agile Frameworks"
      ],
      "categories": [
        "Scrum",
        "Product Development"
      ],
      "preview": "IC749984-1-1.png",
      "Watermarks": {
        "description": "2025-05-07T13:16:38Z"
      },
      "concepts": [
        "Framework"
      ]
    },
    "BodyContent": "Over the years I have had many discussions about Agile vs [Scrum]({{< ref \"/categories/scrum\" >}}) process templates with both TFS and VSTS and migrated many Team Projects from Agile or CMMI templates to the Scrum Template.\n\n**_TL;DR - Select the Scrum template if you have an agile team and want to reduce friction. Don't create unnecessary friction for your move to agility by selecting either the CMMI or Agile templates that suffer from the legacy of the Microsoft Solution Framework (MSF)._**\n\nWhen you create a new Team Project in VSTS or TFS you are asked which Process Template that you want to use. This is a decision that you need to make at the time you create your Team Project and you cant change it later. You want to choose the template that is closest to what you are actually doing, or more accurately what you want to be doing.\n\n![](images/image1-2-2.png)Many teams and organisations make very good and seemingly rational arguments for choosing either the Agile or CMMI templates, however I feel that if you are trying to achieve any type of agile implementation for your team then this is the wrong choice. There are two key frictions that I think affect your choice:\n{ .post-img }\n\n- **Current Friction -** If you have a discrepancy between what you are doing now, and the process template you choose then you will have a harder time getting folks to work within the bounded environment that you are trying to create. However you may want some friction if folks are currently doing the wrong thing.\n- **Future Friction** - As your process implementation moves to match your strategic direction, and the template lags behind , then you will have a significant friction for folks who really want to do the old thing.\n\nHaving the right rules to follow is valuable for figuring out the right path:\n\n- Create a Template for the Process that you want, not the process that you have.\n- Make it easy to do the right thing, and hard to do the wrong thing.\n\nMaking the wrong choice can cripple your teams ability to inspect and adapt by making their biggest problem trying to avoid the friction that your choice in template has created. While I also believe that anyÂ  team following any process could, with significant discipline, use any template,Â  if your team is an agile one then both the Agile and CMMI templates will create significant friction. Let me explain; there are three templates available out of the box:\n\n- **CMMI** - This was called \"MSF for CMMI Process Improvement\" and was primarily focused on those teams that need to monitor change and are following CMMI.\n- **Agile** - Formally known as \"MSF for Agile [Software Development]({{< ref \"/tags/software-development\" >}})\" and is designed to support Agile development for teams that don't want to be restricted by Scrum\n- **Scrum** - Also know as \"Microsoft Visual Studio Scrum\" was designed to allow Scrum teams a more familiar with Scrum.\n\nHowever every single one of these templates supports both \"agile\" and \"CMMI\", however only one embodies agility and minimises prescription and constraints, and its not the \"Agile\" template.\n\n## Why you should not select the Agile template\n\nI have had a number of... arguments discussions with the folks that own \"MSDN: Work with team project artefacts, choose a process template\" about its inaccuracies and false choices and some changes have been made. However I have issue with one particular statement in there:\n\n> The Agile template is designed to support Agile development for teams that don't want to be restricted by Scrum.\n\nLets forget for a moment about Scrum and look singly at the contents and expected use of the templates. I completely disagree that the \"Agile\" template is suitable for agile teams and I vehemently disagree that the Scrum template is restrictive. I believe that the opposite is true.\n\nI believe that the \"Agile\" template (as well as the \"CMMI\" template) is in fact not agile and enshrines many common anti-patterns for agile teams. Its not really a surprise as the \"Agile\" template was not designed by agilest for agile teams. The \"Agile\" template is properly called the \"MSF for Agile Software Development\" template and the MSF part is important.\n\nMicrosoft Solution Framework (MSF) was designed by Microsoft Consulting Services (MCS) to help them deliver software to customers when consulting. The MSF for Agile template was originally an attempt to implement that non-agile methodology (don't let the word Framework fool you) in a more agile manor and it failed (oh it gave managers a false sense of agile; vanity agile. Lets call things agile and do the same old thing we have always done.)\n\nThere are main issues with the Agile template:\n\n- **Bugs are not on the backlog** - As any good consulting team (sarcasm) knows you must hide your bugs from the customer and this template promotes that bugs are triaged separately to Stories. Yes you can change this to add bugs to the backlog, however the expected happy path is that you triage your bugs separately. From TFS 2015+ we can choose how bugs are handled on the UI.\n- **Resolved (Code Complete and Unit Tests passes)** \\- Yes I know that many teams still like to create a wall between Code and Test but to enshrine it in the template forces all teams to follow that line. Making this the path of least friction encourages users to do the wrong thing. You really cant be agile and throw bugs or features over the wall to Test.\n\nIn addition to the main issues there are a great number of paper cuts as well. While individually small they add up to significant friction:\n\n- **Story Points** - Why are people encouraged to only use Story Point? Are they the right practice for everyone, on every software? No, Story Points are just a complimentary practice that can be applied to any process. While I am a supporter of Story Points and I encourage teams that I work with to use them they are by no means the only method of estimating in agile. This should have a more generic name, like maybe Effort that allows the team, or organisation, to collectively decide how they are going to do [estimation]({{< ref \"/tags/estimation\" >}}).\n- **User Story** - Is the only way to write backlog items to do so as User Stories? What about Use Cases? Should you struggle to write even constraints or non-functional requirements as User Stories? No, again User Stories are merely another complimentary practice. While user stories are an effective tool to help you decompose your work they are by no means the be all and end all. Having the Requirement type called User Story makes folks feel that every one should have a \"As a | I want | so that\" which is just not the case in any of the agile processes. Would it not be better to have a more generic term, a base class if you will, from which you can form any sort of definition of our work?\n\nForcing people into using these complimentary practices is silly and creates that friction. These practices are not required to be successful at agile however being able to break walls between departments and triage bugs with the rest of our backlog I would argue is. Don't get me wrong, I like practices like Story Points and User Stories and they are right for some teams, although not all.\n\nIf you really want to be able to \"let the team decide\" on the practices that suit their circumstance, experience, technology and choice then you need to stay away from MSF templates entirely.\n\nSo what is the answer? What if I am not doing Scrum, but there are only two other choices, both of them MSF based. Well I would recommend that you use the Scrum Template anyway, and create your own agile process with this as the foundation. For folks that really want to have the Agile template, because they hate the word Scrum and anything associated with it. I kind of lie. I download the Scrum Process Template from TFS and change the same to \"Agile for Company X\" then reload it.\n\n## Why you should use the Scrum Template\n\nRather like the Scrum Framework itself the Scrum template was designed to be as light as possible while still embodying the common lexicon of Agile. Wither you like Scrum or not, it is an implementation of Agile and uses the same terminology. The thing that differentiates Scrum from other agile implementations is the Sprint and the Sprint is not really part of the Scrum template. You can easily change the Iterations to be any flavour you like.\n\nBugs are on the backlog, one state for the team working on something, no push to a particular practice.Â  Almost universally the terminology and workflow of the Scrum framework is understood by teams doing any flavour of agile. And if you have a team that needs a little legacy love you can easily add a column to the [Kanban]({{< ref \"/categories/kanban\" >}}) boards without enshrining dysfunctions in the template.\n\nI always recommend that folks start with the Visual Studio Scrum template as a base and customise from there. There are a few customising that I like to see teams make if they need them, especially to help adoption:\n\n- **Completed & Original Estimate** - The Scrum template only has Remaining Work on a Task as this is the only metric that Scrum requires. However there are many teams that gain value through other metrics and the Scrum Guide does not say anything about not using them. I often add these two fields to the Scrum template for teams, and I never feel bad about it.\n- **Requirement Type Field** - Often organisations like to differentiate between Functional , Technical, or Regulatory PBI's and this is another field to add. Making sure of course that it becomes a dimension in the Cube. Luckily the out-of-the-box template from TFS 2015+ has this field already, just put the values that you need.\n- **Team Field Mode** - Often the case for long term users of TFS is that they already have made good use of the Area Path field. Now they need to use it for team? Well, no. Create a Team drop down and with a little out-of-box wiring you remove the relationship between Team and Area Path. This feature is currently unavailable in VSTS and the product team are looking to make it unnecessary.\n\nThese customisations are non-intrusive and have a limited impact on reporting and upgradability. I spend a lot of time at customers migrating them from the Agile and CMMI templates to the Scrum template and while it is not that hard to do it does take time and money.\n\n## Conclusion\n\nChoose the Microsoft Visual Studio Scrum process template if you don't want to be limited by MSF. What other customisations do you make to your Scrum template to support your [lean]({{< ref \"/categories/lean\" >}})-agile process?\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-05-16-choosing-a-process-template-for-your-team-project\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-05-16-choosing-a-process-template-for-your-team-project"
  },
  {
    "FrontMatter": {
      "title": "Government Cloud First policy",
      "description": "Explains the UK Government Cloud First policy, its mandate for public cloud adoption in central government, and challenges faced by public sector organisations.",
      "ResourceId": "6VDaSknKBPu",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Human",
      "ResourceImport": true,
      "ResourceImportId": 11882,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "date": "2017-05-10",
      "weight": 1000.0,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "slug": "government-cloud-first-policy",
      "aliases": [
        "/resources/6VDaSknKBPu"
      ],
      "aliasesArchive": [
        "/blog/government-cloud-first-policy",
        "/government-cloud-first-policy",
        "/resources/blog/government-cloud-first-policy"
      ],
      "tags": [],
      "categories": [
        "Uncategorized"
      ],
      "preview": "government-cloud-640x400-1-1.png",
      "Watermarks": {
        "description": "2025-05-07T13:16:39Z"
      },
      "concepts": []
    },
    "BodyContent": "Why is it that while there is a Government Cloud First policy there are so much fear of cloud in the public sector? I have been working with a number of government and local council agencies in the UK and I found that they are still trying to decide if cloud is a good idea.\n\n#### UK Government Cloud First Policy\n\nThe UK Government Cloud First Policy was introduced in 2014, it recommends SAAS and makes public cloud mandatory for central government services.\n\n#### US Government Cloud First Policy\n\nThe US Government Cloud First Policy was introduced in 2010.\n\nCloud First was an initiative that came out of the first Obama administration. Launched in 2011 by the then US CIO Vivek Kundra, it mandated that government agencies had to evaluate a cloud computing option first and then come up with a good reason why not to use it before they could carry on spending on traditional on-premises solutions.\n\nI had been searching around to see what others are doing and low and behold [the British government has a policy covering cloud](https://www.gov.uk/guidance/government-cloud-first-policy) that makes things very clear, even better, its been around for years!\n\n> \"When procuring new or existing services, public sector organisations should consider and fully evaluate potential cloud solutions first before considering any other option. This approach is mandatory for central government and strongly recommended to the wider public sector.\"\n\nTo me this could not be made more clear: If you can use cloud then you should use cloud for every public service out there. Indeed if you are creating a service to be consumed by government or public sector then you should be creating a SaaS solution that will jump to the head of the queue for any procurement process.\n\nWhile this is the rule I would be really interested in how this works out in practice!\n\n> \"By Cloud First, we mean the public cloud rather than a community, hybrid or private deployment model.\"\n\nI was very encouraged to see as well that it also stipulates that the first choice should always be \"public cloud\", which should help to disassociate the irrational fear that I regularly encounter for cloud services. One can just utter the word cloud and you can see people running for cover.\n\nI have been working to move many people to Visual Studio Team Services (Microsoft's SaaS version of TFS) and have met some resistance. That the government of the UK has adopted this policy I think will do a lot to dispel the myth that there is something scary about the cloud or that there is some way that your own infrastructure could ever be as secure as cloud.\n\nIf you are in any way trying to achieve [business agility]({{< ref \"/tags/business-agility\" >}}) or embarking on a [digital transformation]({{< ref \"/tags/digital-transformation\" >}}) then you really have no option but to use cloud. Where else can you create on demand environments for testing and deployment? Where else can you easily create configuration as code with little effort?\n\nDon’t make life hard on yourself, even the government has adopted cloud…. Do yourself a favour and make your infrastructure problems someone else's problem.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-05-10-government-cloud-first-policy\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2017\\2017-05-10-government-cloud-first-policy"
  }
]
