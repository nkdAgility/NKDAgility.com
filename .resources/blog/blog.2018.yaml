- FrontMatter:
    title: DOD has made it illegal to do waterfall
    description: Discover how the DOD's new procurement rules outlaw waterfall methods, paving the way for agile practices that enhance efficiency and success in IT projects.
    ResourceId: dnmT3QDhGxx
    ResourceType: blog
    ResourceContentOrigin: Hybrid
    ResourceImport: true
    ResourceImportId: 10204
    ResourceImportSource: Wordpress
    ResourceImportOriginalSource: Wordpress
    date: 2018-05-01
    weight: 360
    creator: Martin Hinshelwood
    layout: blog
    resourceTypes: blog
    slug: dod-has-made-it-illegal-to-do-waterfall
    aliases:
    - /blog/dod-has-made-it-illegal-to-do-waterfall
    - /dod-has-made-it-illegal-to-do-waterfall
    - /resources/dnmT3QDhGxx
    - /resources/blog/dod-has-made-it-illegal-to-do-waterfall
    aliasesArchive:
    - /blog/dod-has-made-it-illegal-to-do-waterfall
    - /dod-has-made-it-illegal-to-do-waterfall
    - /resources/blog/dod-has-made-it-illegal-to-do-waterfall
    tags:
    - Business Agility
    - Organisational Agility
    - Pragmatic Thinking
    - Software Development
    - Value Delivery
    - Working Software
    - Operational Practices
    - Agile Transformation
    - Product Delivery
    - Agile Philosophy
    - Agile Product Management
    - Digital Transformation
    - Continuous Improvement
    - Agile Frameworks
    - Agile Planning
    categories:
    - Engineering Excellence
    preview: nkdAgility-dod-change-procurement-agile-wide-15-15.jpg
  BodyContent: |
    Did you know that the DOD has made it illegal to do waterfall? Well, kind of... For the first time in many years, the Department of Defence (DOD) in the United States had made a major update to its procurement rules. They can no longer be held accountable for holding up our industry, and being culpable for its inability to move towards agility. The last vestiges of the old ways are gone.

    ## TL;DR;

    The benefits of working in an iterative agile process are now painfully obvious to both the FBI as a result of Sentinel and partly as a result to the US DOD.

    - **Higher success rate** – you are three times more likely to be successful with agile
    - **Cost Effective** – As you always have [working software]({{< ref "/tags/working-software" >}}) you can stop at any time without waste
    - **Low Risk** – You only ever have one short iteration of risk at a time.

    In the UK we have government-wide [lean]({{< ref "/categories/lean" >}})-agile initiatives that are producing awesome results already and in the USA lean-agile has effectively become the law.

    > - **Deliver Early and Often** - This principle is aimed at changing the culture from one that is focused typically on a single delivery to a new model that comprises multiple deliveries to establish an environment that supports deployed capabilities every 12 to 18 months.
    > - **Incremental and Iterative Development and Testing** - This principle embraces the concept that incremental and iterative development and testing, including the use of prototyping, yield better outcomes than trying to deploy large complex IT network systems in one "Big Bang."
    > - **Rationalized Requirements** - User involvement is critical to the ultimate success of any IT implementation, and user needs must be met. However, this principle also recognizes the need for users and requirements developers to embrace an enterprise focus across a portfolio of capabilities with established standards and open modular platforms vice customized solutions to ensure interoperability and seamless integration.
    > - **Flexible/Tailored Processes** - The Department's IT needs range from modernizing nuclear command and control systems to updating word processing systems on office computers. This principle acknowledges unique types of IT acquisition and embraces flexible and tailored-and risk-appropriate-IT paths based on the characteristics of the proposed IT acquisition.
    >
    > [A new approach for delivering Information Technology capabilities in the Department of Defence](http://www.afei.org/WorkingGroups/section804tf/Documents/OSD_Sec_804_Report.pdf)

    So with the radical change in approach from two western governments, these positive messages should filter down through anyone who does business with them. The tides are changing…

    ## The changing state of agility in defence

    You may be thinking “But who gives a crap what the DOD does?”. In the USA the Department of Defence employs over 1.2 million people, and that's not counting contractors. This means that, unfortunately,  everything in IT revolves around how the DOD develop software and work with vendors. If you are a vendor that works even third-hand with the DOD you used to be bound by law (the DOD procurement rules) to create software and work in a stage-gated and distinctly waterfall manner. Oh, many teams tried to do agile anyway. However they could only do this within each stage and this is the situation and source of Scrumfall, Agilefall, WaterScrumFall and all of the other "pretending to be agile" processes out there.

    The DOD has influenced Universities by requiring that they create engineers that work within their model and by providing and creating jobs that function this way. How can one learn to be agile in a world governed by waterfall. Indeed our own Ministry of Defence (MOD) has had the same influence, maybe from their own rules but also as a result of working with the Americans and within their rules; like how airports in Europe require you to take your shoes off or go through those big scanners even though you are not flying to the USA.

    > (2) be designed to include—
    >
    > (A) early and continual involvement of the user;
    >
    > (B) multiple, rapidly executed increments or releases of capability;
    >
    > (C) early, successive prototyping to support an evolutionary approach; and
    >
    > (D) a modular, open-systems approach.
    >
    > [804: Implementation of new acquisition process for information technology systems](http://www.afei.org/news/Documents/2010%20NDAA%20Section%20804.pdf)

    With the new rules, there is now freedom to deliver more frequently and iteratively throughout the western world and this effect can be seen in recent UK projects as well as in the US.  There is no better government site than [http://gov.uk](http://gov.uk)! It is quickly becoming the envy of other governments in its simplicity and ones ability to quickly and easily find the information you need.

    One of the defining projects of the last 10 years that has resulted in this change in the USA was the resounding and public failure of the Sentinel project buy the FBI.

    ## The impact of the Sentinal project failure, and success

    I created this presentation based on work that I have done with [Scrum]({{< ref "/categories/scrum" >}}).org and I use it at organisations that have a little more inflexibility and stubbornness than most. Usually, at these customers I hear phrases like “You cant do that here.” and “We are not a software company.” Thus looking at the FBI is a good one as it is not software and government. If the government can do agile then by golly everyone can.

    [![image](images/image_thumb2-2-2.png "image")](http://nkdagility.com/wp-content/uploads/2013/10/image2-9-9.png)
    { .post-img }

    I always like to start a presentation by looking at some data. For good reasons have we moved to agility from waterfall and above you can see that as of 2011 we are three times as likely to succeed doing agile as we were under a waterfall.

    - **Succeed** – Project was on time and on budget
    - **Challenged** – Project was delivered but not on time or on budget
    - **Failed** – Project was not delivered

    Although we still have a lot of challenged projects we can vastly reduce the failure of them. In addition one would hope that an agile project that fails, fails only a few short iterations into the project so the costs are a lot less. Waterfall projects tend to fail near the end as it is not clear what will be delivered, or not delivered until at least testing commences.

    [![image](images/image_thumb3-3-3.png "image")](http://nkdagility.com/wp-content/uploads/2013/10/image3-10-10.png)
    { .post-img }

    Can you imagine a green screen terminal application delivered in 1995? Just to put it in perspective, [Windows]({{< ref "/tags/windows" >}}) 95 was available. Hell, my Atari has a graphical UI. Well the FBI launched their obsolete criminal records system in1995 and used technology that was museum quality at launch. This is all to common with projects that take many years to complete and even more so on government projects.

    So what happened next?

    [![image](images/image_thumb4-4-4.png "image")](http://nkdagility.com/wp-content/uploads/2013/10/image4-11-11.png)
    { .post-img }

    At first all was well and the FBI Director commissioned a 3 year project with a budget of $390 million but very quickly things start to drift and he had to go, cap in hand, to congress and ask for more money. As this is typical government fair he obviously got it but in 2005 there was still nothing delivered. Not a single piece of working functionality existed after 4 years and an extra $170 mullion. How would your boss react if you had nothing to show for 4 weeks… let alone 4 years?

    Would you still have a job?

    In this case obviously the best idea would be to throw away the last 4 years work and start again with a new vendor. Yes… that’s it…now we can really deliver.

    [![image](images/image_thumb5-5-5.png "image")](http://nkdagility.com/wp-content/uploads/2013/10/image5-12-12.png)
    { .post-img }

    Obviously having already spent over $400 million on vaporware the new vendor just needs more time and more money. It obviously also makes sense to pick not only a large defence contractor, co they have a good record of delivering high quality on time and budget, but also not a software company. The rational for this I do not know but that is just what the FBI did. However after 4 years not even a third of the work was complete and almost 90% of the budget had been spent. Indeed rough estimates to complete the project was another 6 years (10 years total) and another $351million (grand total of $772 million.)

    So with over 400 people working on the project the total waste so far is over $700 million and the project is 9 years in. Remember that the out-of-date green screen terminal application has now been in place for 15 years and Windows 7 is just around the corner. We already have the iPhone and iPad so what the hell are these muppets playing at! Its time for a different tack…

    [![image](images/image_thumb6-6-6.png "image")](http://nkdagility.com/wp-content/uploads/2013/10/image6-13-13.png)
    { .post-img }

    The new tack was an agile one and for these guys it was more of a jibe. They created a Scrum Studio in the basement of the hover building and found the 40 best folks that they could to run with the new format. This being the second reset with so many years and dollars under it there needed to be results and quick. Not only did they deliver incrementally but they were code complete with only one year of work and $30 million spent. That’s right… I am not missing a zero.

    Unfortunately the project had taken so long that the hardware that had been bought by the previous attempts was vastly out-dated and needed to be replaced as obsolete.

    [![image](images/image_thumb7-7-7.png "image")](http://nkdagility.com/wp-content/uploads/2013/10/image7-14-14.png)
    { .post-img }

    In early 2012 the FBI shipped to production on the new refreshed hardware and saw significant improvements for a much lower cost.
  FilePath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-05-01-dod-has-made-it-illegal-to-do-waterfall\index.md
  FolderPath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-05-01-dod-has-made-it-illegal-to-do-waterfall
- FrontMatter:
    title: Introducing Kanban for Professional Scrum Teams
    description: Discover how to integrate Kanban with Scrum in our Professional Scrum with Kanban training. Enhance your team's workflow and earn your PSK certification!
    ResourceId: CucU7DN-fJ7
    ResourceType: blog
    ResourceContentOrigin: Hybrid
    ResourceImport: true
    ResourceImportId: 38334
    ResourceImportSource: Wordpress
    ResourceImportOriginalSource: Wordpress
    date: 2018-02-26
    weight: 580
    creator: Martin Hinshelwood
    layout: blog
    resourceTypes: blog
    slug: introducing-kanban-professional-scrum-teams
    aliases:
    - /blog/introducing-kanban-professional-scrum-teams
    - /introducing-kanban-professional-scrum-teams
    - /introducing-kanban-for-professional-scrum-teams
    - /blog/introducing-kanban-for-professional-scrum-teams
    - /resources/CucU7DN-fJ7
    - /resources/blog/introducing-kanban-professional-scrum-teams
    aliasesArchive:
    - /blog/introducing-kanban-professional-scrum-teams
    - /introducing-kanban-professional-scrum-teams
    - /introducing-kanban-for-professional-scrum-teams
    - /blog/introducing-kanban-for-professional-scrum-teams
    - /resources/blog/introducing-kanban-professional-scrum-teams
    tags:
    - Software Development
    - Agile Frameworks
    - Operational Practices
    categories:
    - Uncategorized
    preview: nkdagility-scrum-and-kanban-1900-2-1.png
  BodyContent: |
    A few weeks ago I was in Boston to visit the [Scrum]({{< ref "/categories/scrum" >}}).org offices and learn to teach the [Professional Scrum with Kanban (PSK)](https://nkdagility.com/training/courses/professional-scrum-with-kanban-psk/) training class co-taught by Steve Porter and [Daniel Vacanti](https://www.linkedin.com/in/danielvacanti/). This is a new [Professional Scrum]({{< ref "/tags/professional-scrum" >}}) training course created by Ken Schwaber, Scrum.org, the Professional Scrum Trainer Community and Daniel Vacanti who helped to develop the [Kanban]({{< ref "/categories/kanban" >}}) Method for knowledge work. The new class was [just announced by Ken & Scrum.org](https://www.scrum.org/resources/scrumorg-introduces-scrum-kanban-course-enabling-greater-transparency-among-development) and includes a [Kanban Guide for Scrum Teams](https://www.scrum.org/resources/kanban-guide-scrum-teams) that describes Kanban within the context of the [Scrum Framework](http://scrumguides.org).

    Also Check out:

    - [Scrum with Kanban: It's time to cross the bridge](https://www.scrum.org/resources/blog/scrum-kanban-its-time-cross-bridge)
    - [Scrum with Kanban - building bridges not walls](https://www.scrum.org/resources/blog/scrum-kanban-building-bridges-not-walls)

    ## TL;DR;

    Now you can not only learn Scrum from those that created and maintain it, but you can add the Kanban Method from those that developed it as well. This new class show how to take the core practices of Kanban and implement them within the context of Professional Scrum without changing Scrum. I have already posted on how you [can flow work across the Sprint boundary](https://nkdagility.com/work-can-flow-across-sprint-boundary/) and that was a direct learning from me attending this class.

    ![](images/nkdagility-scrum-and-kanban-1900-800x400-1-2.png)
    { .post-img }

    This is a 2 day class that also has an assessment that will earn you a PSK certification. I'll be teaching this class in combination with [Chris McDermott](https://www.linkedin.com/in/chrisvmcd/), founder of [Lean]({{< ref "/categories/lean" >}}) Agile Scotland, to bring some much needed Kanban team experience to the class. While I have significant experience with Scrum teams, I have only worked with a few Kanban teams.

    ## Kanban Guide for Scrum Teams

    The Kanban community and the Scrum community have been working towards the same end for some time. Since the mission of Scrum.org is to improve the profession of software delivery then anything that we can do to make that a reality is within scope.

    Scrum is more than 20 years old and has been trawling some baggage with it. Since the creation of the [Scrum Guide](http://scrumguides.org) Ken & Jeff have been working to remove much of that baggage from the definitive and agreed definition of Scrum and they have done a fantastic job. You will not find a mention of User Stories, Story Points, or Velocity in the Guide. They are not required to create an empirical control system.

    I am not saying that they are bad, just that they are merely complimentary practices that you can choose to use or not. And let's be super clear, if you have an amateur team then you should be starting with User Stories, Story Points, or Velocity, they are good practices. For more advanced teams that are already delivering [working software]({{< ref "/tags/working-software" >}}) on a regular cadence you might want to change those practices out for ones that focus more on flow, and you might also choose to use User Stories.

    You can read the [Kanban Guide for Scrum Teams](https://www.scrum.org/resources/kanban-guide-scrum-teams) which is an extension to the Scrum Framework. The Scrum Framework is closed for modification and open for extension which is reflected in this new guide. The new Kanban extension adds the following practices:

    - Visualisation of the workflow
    - Limiting WIP
    - Active management of items in progress
    - Inspecting and adapting workflow

    In order to adapt your workflow to maximise the flow of value to your customers we also need to add the following metrics:

    - WIP
    - [Cycle Time]({{< ref "/tags/cycle-time" >}})
    - Work Item Age
    - [Throughput]({{< ref "/tags/throughput" >}})

    This is an implementation of Kanban within the context of Scrum and as such has a definition that might differ from other Kanban implementations. Have a read of the guide and see if it appeals to you. For me the ideas of limiting WIP are ones that I have always encouraged teams to do and velocity always seamed like a broken metric.

    ## Professional Scrum with Kanban Training

    Working with [Daniel Vacanti](https://www.linkedin.com/in/danielvacanti/) has opened my eyes to throughput and how it can replace velocity and help answer many of the questions that I have been asking for some time. His training and this class made so much sense that I don't know why we have not yet adopted these practices in mainstream Scrum. I think that is time for a change.

    If you are interested in the same revelations that I had you can read the Guide, and if you like what you see then attend a [Professional Scrum with Kanban (PSK)](https://nkdagility.com/training/courses/professional-scrum-with-kanban-psk/) training class with [Chris McDermott](https://www.linkedin.com/in/chrisvmcd/) and I.
  FilePath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-02-26-introducing-kanban-professional-scrum-teams\index.md
  FolderPath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-02-26-introducing-kanban-professional-scrum-teams
- FrontMatter:
    title: Work can flow across the Sprint boundary
    description: Discover how to enhance your Scrum process by allowing work to flow across Sprint boundaries, boosting team efficiency and delivering value. Learn more!
    ResourceId: a7UMLdZeVYq
    ResourceType: blog
    ResourceContentOrigin: Hybrid
    ResourceImport: true
    ResourceImportId: 38300
    ResourceImportSource: Wordpress
    ResourceImportOriginalSource: Wordpress
    date: 2018-01-30
    weight: 390
    AudioNative: true
    creator: Martin Hinshelwood
    layout: blog
    resourceTypes: blog
    slug: work-can-flow-across-sprint-boundary
    aliases:
    - /blog/work-can-flow-across-sprint-boundary
    - /work-can-flow-across-sprint-boundary
    - /work-can-flow-across-the-sprint-boundary
    - /blog/work-can-flow-across-the-sprint-boundary
    - /resources/a7UMLdZeVYq
    - /resources/blog/work-can-flow-across-sprint-boundary
    aliasesArchive:
    - /blog/work-can-flow-across-sprint-boundary
    - /work-can-flow-across-sprint-boundary
    - /work-can-flow-across-the-sprint-boundary
    - /blog/work-can-flow-across-the-sprint-boundary
    - /resources/blog/work-can-flow-across-sprint-boundary
    tags:
    - Software Development
    - Empirical Process Control
    - Professional Scrum
    - Transparency
    - Working Software
    - Increment
    - Operational Practices
    - Pragmatic Thinking
    - Agile Frameworks
    - Agile Product Management
    - Agile Planning
    - Flow Efficiency
    - Product Delivery
    categories:
    - Uncategorized
    preview: nkdagility-cross-sprint-boundary-2-1.png
  BodyContent: |
    There is nothing in the [Scrum]({{< ref "/categories/scrum" >}}) Guide that says that you can't have workflow across the Sprint boundary. I'm going to suggest that not only can you, but you should as long as you don't endanger the Sprint Goal.

    **UPDATE: To find out how to allow work to flow across the Sprint boundary you can read the** **[Kanban Guide for Scrum Teams](https://www.scrum.org/resources/kanban-guide-scrum-teams)\*\***, and schedule a\*\* **[Professional Scrum with Kanban](https://nkdagility.com/training/courses/professional-scrum-with-kanban-psk/)** **class.**

    ## TL;DR;

    The [definition of Done](https://nkdagility.com/getting-started-definition-done-dod/) is an instrumental part of maintaining [Transparency]({{< ref "/tags/transparency" >}}) of the past work and is not optional. The Sprint Goal provides focus and direction. In order to maintain flow we need to be able to reduce the batch size of the work, thus we must allow for work to flow across the Sprint boundary. If you have a Professional [Scrum Team]({{< ref "/tags/scrum-team" >}}) that is adept at creating [Done increments of working software](https://nkdagility.com/professional-scrum-teams-build-software-works/) then introducing flow can improve the value delivered by increasing the [throughput]({{< ref "/tags/throughput" >}}) of the team.

    ## ![](images/nkdagility-cross-sprint-boundary-800x390-1-2.png)

    { .post-img }

    Always remember that the Sprint is a container for Planning and not always for Delivery. Just like you can do [Continuous Delivery]({{< ref "/tags/continuous-delivery" >}}) in Scrum, so you can also introduce flow and [Kanban]({{< ref "/categories/kanban" >}}). Less skilled teams can also benefit as long as you make sure that you meet the Sprint Goal and Done Increments are created to provide transparency of the past and build trust for the future.

    ## Starting Work that the Development Team knows that it can't finish

    Although you will not find anything in the Scrum Guide that prevents you from flowing work across Sprints you should consider it an advanced technique. Most teams that I work with are not even at the point where they have [Working Software]({{< ref "/tags/working-software" >}}) at the end of the Sprint and they are often only just achieving their Sprint Goal.

    I also believed the myth that we could not flow work across the Sprint boundary. It took a long conversation with Steve and Daniel to kindle a different idea, and long discussions over a beer to make it concrete. My argument went; "If you have to be Done by the end of the Sprint then how can you have any unfinished work?" My argument was wrong! I was confusing the need to have a Done [Increment]({{< ref "/tags/increment" >}}) with all of the PBI's being finished.

    If you as a Development Team are practising Continuous Delivery (CD) then they always have working software. I would expect that a team doing CD would have every single element of their [Definition of Done]({{< ref "/tags/definition-of-done" >}}) (DOD) automated and every Checkin/Pull Request meets the DOD. If that's true, then when you get to your [Sprint Review]({{< ref "/tags/sprint-review" >}}) you just show the work that you have finished.

    **If you want Flow then** **[CD is no longer optional for a Software Team let along a Professional Scrum Team](https://nkdagility.com/continuous-deliver-sprint/)\*\***.\*\*

    ## Shipping software with Unfinished work can still be Scrum

    There are a number of Engineering consideration that a Development Team will need to take into account if they want to focus on Flow. With CD comes the need to validate early and often, with automation, so that you don’t have to stop and check everything manually. There are a number of practices that can help:

    - **Feature Flags** - Often referred to as Feature Toggles this is a way to insert a switch into the code so that something is visible or not to the customer based on a switch. Advanced toggles might support "controlled Exposure" to customers, as well as A/B testing, and other features. Regardless it is generally accepted that you can't leave all of your toggles in the code indefinitely. Once you have completed the PBI / Feature or tested your hypothesis you need to remove the flag through Refactoring.
    - **Refactoring** - The act of restructuring or rewriting code for clarity of purpose and future maintenance. One would never write a book or article and then just published it. You would normally do your first pass… re-read it and update for clarity. Maybe get someone else to take a look, and incorporate feedback. Same for code…
    - **[Test Driven Development]({{< ref "/tags/test-driven-development" >}}) (TDD)** - Part of the general Test First movement TDD allows an engineer to prove that the code that they wrote fulfils some pre-defined purpose. It’s the only way that a coder can prove that code does at least what they intended. This practice also supports refactoring since I can continue to prove that the code after I change it, does what was originally intended.
    - **Many more**…

    All of these are optional complementary practices that help you achieve CD but it is not an exhaustive list. There are many other practices that will help, try them and see what works for your team.

    While the Scrum Guide does not say that you need to do CD let alone the practices I have listed above, it does require that you create an Increment of Working Software at least once per Sprint. Anything less and you have no transparency of what was done. With no transparency, you lose your [empirical process control]({{< ref "/tags/empirical-process-control" >}}), and without empiricism, you are not doing Scrum.

    **Unfinished Backlog Items are not the same as Undone work.**

    ## How does this impact Scrum elements?

    Within the bounds of the Scrum Framework, you are allowed to flow work from one Sprint to another. The Result is still Scrum if we have working software, and we meet the Sprint Goal.

    - **Sprint Review** - the purpose of the Sprint Review is to inspect what was just created, review and analysis it, and update the [Product Backlog]({{< ref "/tags/product-backlog" >}}) to be an accurate reflection of future work based on this new Increment. At the Sprint Review, we show the work that was completed and discuss what was not completed. It's not a failure if the team did not finish something, [software development]({{< ref "/tags/software-development" >}}) is complex and that will happen, often. As long as we have an Increment of Done work we have fulfilled our obligation to Empirical process control.
    - **Sprint Planning** - The purpose of the Sprint Planning event is to inspect the Product Backlog and create a Sprint Goal, Forecast, and Sprint Backlog for this Sprint. Nothing prevents Stories flowing over into the next Sprint unless it prevents the team cresting a Done Increment, or endangers the Sprint Goal.
    - **Sprint Goal** - The Sprint Goal provides purpose and direction for the team. And that does not mean that we can't have work outside that Sprint Goal inside of the Sprint. We may have production issues, leftover work, or just something super important to the [Product Owner]({{< ref "/tags/product-owner" >}}) that turns up. As long as the team believes that they can achieve the Sprint Goal they can take on any additional work that makes sense.

    I have found that reading the Scrum Guide carefully, turns up all sorts of miss conceptions that we all have as we interpret and use Scrum. If you are not sure, re-read the Scrum Guide, maintain the [Scrum Values]({{< ref "/tags/scrum-values" >}}), focus on empirical process control and maintain transparency.

    At the end of every Sprint, you should have working Software that meets your definition of Done and you should have met your Sprint Goal.

    **UPDATE: To find out how to allow work to flow across the Sprint boundary you can read the** **[Kanban Guide for Scrum Teams](https://www.scrum.org/resources/kanban-guide-scrum-teams)\*\***, and schedule a\*\* **[Professional Scrum with Kanban](https://nkdagility.com/training/courses/professional-scrum-with-kanban-psk/)** **class.**
  FilePath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-01-30-work-can-flow-across-sprint-boundary\index.md
  FolderPath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-01-30-work-can-flow-across-sprint-boundary
- FrontMatter:
    title: Professional Scrum is for everyone in your organisation
    description: Discover how Professional Scrum can empower everyone in your organization to enhance collaboration, drive value, and embrace agile transformation.
    ResourceId: Cr7wjIJ8Uvb
    ResourceType: blog
    ResourceContentOrigin: Hybrid
    ResourceImport: true
    ResourceImportId: 38287
    ResourceImportSource: Wordpress
    ResourceImportOriginalSource: Wordpress
    date: 2018-01-16
    weight: 430
    AudioNative: true
    creator: Martin Hinshelwood
    layout: blog
    resourceTypes: blog
    slug: professional-scrum-everyone-organisation
    aliases:
    - /blog/professional-scrum-everyone-organisation
    - /professional-scrum-everyone-organisation
    - /professional-scrum-is-for-everyone-in-your-organisation
    - /blog/professional-scrum-is-for-everyone-in-your-organisation
    - /resources/Cr7wjIJ8Uvb
    - /resources/blog/professional-scrum-everyone-organisation
    aliasesArchive:
    - /blog/professional-scrum-everyone-organisation
    - /professional-scrum-everyone-organisation
    - /professional-scrum-is-for-everyone-in-your-organisation
    - /blog/professional-scrum-is-for-everyone-in-your-organisation
    - /resources/blog/professional-scrum-everyone-organisation
    tags:
    - Agile Product Management
    - Professional Scrum
    - Social Technologies
    - Pragmatic Thinking
    - Agile Transformation
    - Software Development
    - Organisational Agility
    - Sociotechnical Systems
    - Agile Leadership
    - Team Collaboration
    - Value Delivery
    - Working Software
    - Empirical Process Control
    - Change Management
    - Organisational Change
    categories:
    - Scrum
    preview: nkdagility-professional-scrum-is-for-everyone-1-2-2.jpg
  BodyContent: |
    Recently I worked with a new customer in Denver to help them move towards a greater degree of [Scrum]({{< ref "/categories/scrum" >}}) in their [software development]({{< ref "/tags/software-development" >}}). The idea that Scrum is for everyone in your organisation is kind of new, but it reflects the modern understanding of the way people work, and the rejection of Taylorism and command and control. You [cant use someone else approaches to get to agility](https://nkdagility.com/organisational-change-create-path/), but you can learn from it.

    Healthgrades have been doing Scrum for about 8 years but has recognised that they are struggling to [organise around the delivery of working software](https://nkdagility.com/professional-scrum-teams-build-software-works/). Like every other company, once you have something as complex as software to work on, and knowledge workers to do it, [the old management styles of the 20th century](https://nkdagility.com/professional-organisational-change-ghana-police-service/) are just like pouring water on a fat fire…

    ![image](images/image-1-1.png "image")
    { .post-img }

    This is a common problem that I train Scrum Masters to respond to in the [Professional Scrum Master (PSM)](https://nkdagility.com/training/courses/professional-scrum-foundations/) class, but the fundamental understanding of why this is wrong takes both practical and theoretical knowledge grounded in actual experience. This is why the [Professional Scrum]({{< ref "/tags/professional-scrum" >}}) Foundation (PSF) class [requires that students work in teams to build working software](https://nkdagility.com/professional-scrum-training-ghana-police-service/).

    The real struggle of implementing agile is that of the [old ways, Taylorism, the illusion of command and control, and the belief in magic](https://nkdagility.com/professional-organisational-change-ghana-police-service/).

    ## Professional Scrum is for everyone in your organisation

    Armed with previous experience with Scrum.org, the [PSF](https://nkdagility.com/training/courses/professional-scrum-foundations/) class, and me; the CIO, CJ Singh, asked me to come along and train as many people as we could in the time that we had available. Turns out that looked like 147 people from the engineering department, and my did we had a lot of fun. While they have been constantly moving towards a greater degree of [value delivery]({{< ref "/tags/value-delivery" >}}) there were a lot of misconceptions built up about Scrum over the last 8 years… those misconceptions were creating a glass ceiling and inhibiting the flow of value to the business.

    https://youtu.be/Fm24oKNN--w

    This is the second time that I have worked with CJ, and again he excelled at helping his team understand that it is the makers that are the ones that get things done. They are the [ingenuity that delivers the value that is needed by the business](https://nkdagility.com/backlog-not-refined-wrong/) and they are the ones that need to be nurtured. Without the makers coming up with ideas there would be no company, and there would be no ideas; no backlog.

    I previously worked with CJ at Backcountry in Utah where I trained everyone in the company. I still get emails from folks from Backcountry, even 5 years later, and many folks considered the experience of going through the [PSF](https://nkdagility.com/training/courses/professional-scrum-foundations/) class as "a game changer" for them.

    The purpose of the [PSF](https://nkdagility.com/training/courses/professional-scrum-foundations/) class is to not only to level set everyone on Scrum but to give them a very real understanding of what is required to get significant value from it. If, like at Backcountry (Utah), Healthgrades (Colorado), Fraedom (England), Teleplan (Norway), and HESA, I can get everyone in the organisation to participate something then interesting happens. There is enough of a catalyst, a tipping point, that starts the snowball of change rolling.

    ## Conversations and discussion is the point

    The conversations that take place over the 2-day class are ones that don’t normally take place and all of the [Professional Scrum](https://nkdagility.com/training/scrum-training/) classes are designed to get people talking about their issues and what experiments might be useful to find the right way.

    At Backcountry I had everyone from the CTO to the guy that drove the forklift in the warehouse. That’s right, everyone… including the CEO's assistant… Because everyone in your organisation has good ideas, many are direct stakeholders. Getting them to feel that they are empowered to make suggestions and to have ideas is part of Agility. Getting the CEO to hear all of the questions, and discussion, around why things are not running as smoothly as they could be, and what would need to change to make that happen is invaluable. Getting the Stakeholders to understand what it takes to build software opens their eyes to the involvement they need to have in the process. Getting the developers to hear the business realities that create the pressures again changes the conversation.  How can you possibly hope to change your organisation unless everyone is on board and going in the same direction?

    https://youtu.be/F8a6gtXxLe0

    As with all courses where one trains everyone there are usually many dissenters. Folks that don’t want to be there because they think that they know everything or they just don’t think it will be valuable. David was in the "were doing Scrum already so why bother" category, but it only took 4 hours of the class for him to realise how much his understanding had deviated from core Scrum. The fundamental understanding of how Scrum implements empiricism is something that not only do we need to know, but it's nice to have a reset every so often so that we remember the reasons why.

    ## Creating a bounded environment for change

    So many teams I work with across the world forget, or never knew in the first place, why we have things in Scrum. They forget that we need the [transparency]({{< ref "/tags/transparency" >}}) of the past provided by the [Increment]({{< ref "/tags/increment" >}}) of [Working Software]({{< ref "/tags/working-software" >}}). They forget that without the [Product Backlog]({{< ref "/tags/product-backlog" >}}) we get no transparency on what we are doing next, and without the Sprint Backlog, we have no visibility into what we are doing now. They forget that without that transparency there can be no meaningful inspection of what is going on at each of the Events and no meaningful change to the way that things happen.

    https://youtu.be/XMLdLH6f4N8

    Many attendees of the Professional Scrum Foundations at all of the companies I have done it for, regardless of their existing knowledge level, come away with a new appreciation for Scrum, its Artefacts, its Events, and its Rolls. Even experienced Scrum Masters like Katherine has something to learn and find value in the reset. Its easy to become complacent with the organisational dysfunctions that are the "way that things are done here". I worked closely with Katherine to make sure each of the 6 class that we ran went smoothly and facilitated the right discussions.

    Just as Scrum creates a bounded environment so that we can all be going in the same direction in our work, so the Professional Scrum classes create a guided environment for discussion and revelation.

    ## Iteratively tailored training not content

    Each instance of the PSF class I learned new things about the organisation, its employees, and how it operated that helped me guide the classes to a better understanding of Scrum. I use the same material as every other accredited Scrum.org trainer worldwide, and I tailored the path. I learned which things we can skip over, and which we need to dive headlong into. Some of the experiences were traumatic, and the discussions heated, and by the end, there was not a single detractor from agility or Scrum in those that went through the classes.

    **Healthgrades now has 147 people are the pioneers, evangelists, and change agents that now feel empowered to make meaningful change.**

    One of the outcomes of the Professional Scrum Foundations, along with the new knowledge and excitement, is an [organisational change]({{< ref "/tags/organisational-change" >}}) backlog. One that has been created by those that are doing the work and understand the constraints and challenges of the work. The hope is that management then uses the [Agility Guide for Evidence-based Management](https://www.scrum.org/resources/agility-guide-evidence-based-change) to facilitate changes in the organisation to get rid of those pesky impediments to value delivery that are out with the control of the teams.

    **Healthgrades now has a Backlog of things that need to change in order to facilitate meaningful change.**

    With these two things, agile torchbearers who feel empowered and a list of changes, I am hoping that Healthgrades can change their organisation and increase their ability to take advantage of market opportunities as they arise, and out-manoeuvre their competitors with ease. Refine backlog facilitate meaningful change.
  FilePath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-01-16-professional-scrum-everyone-organisation\index.md
  FolderPath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-01-16-professional-scrum-everyone-organisation
- FrontMatter:
    title: Create your own path to Organisational Agility
    description: Discover how to tailor your path to organisational agility with evidence-based strategies. Empower your team and drive meaningful change today!
    ResourceId: RdwxVidD26i
    ResourceType: blog
    ResourceContentOrigin: Hybrid
    ResourceImport: true
    ResourceImportId: 11214
    ResourceImportSource: Wordpress
    ResourceImportOriginalSource: Wordpress
    date: 2018-01-11
    weight: 290
    creator: Martin Hinshelwood
    layout: blog
    resourceTypes: blog
    slug: organisational-change-create-path
    aliases:
    - /blog/organisational-change-create-path
    - /organisational-change-create-path
    - /create-your-own-path-to-organisational-agility
    - /blog/create-your-own-path-to-organisational-agility
    - /resources/RdwxVidD26i
    - /resources/blog/organisational-change-create-path
    aliasesArchive:
    - /blog/organisational-change-create-path
    - /organisational-change-create-path
    - /create-your-own-path-to-organisational-agility
    - /blog/create-your-own-path-to-organisational-agility
    - /resources/blog/organisational-change-create-path
    tags:
    - Business Agility
    - Enterprise Agility
    - Digital Transformation
    - Operational Practices
    - Organisational Change
    - Value Delivery
    - Agile Transformation
    - Organisational Agility
    - Continuous Improvement
    - Software Development
    - Agile Leadership
    - Change Management
    - Pragmatic Thinking
    - Organisational Culture
    - Agile Planning
    categories:
    - Scrum
    - Leadership
    - Technical Leadership
    preview: nkdagility-create-your-own-path-to-agility-3-3.jpg
  BodyContent: |
    Other scaled [agile frameworks]({{< ref "/tags/agile-frameworks" >}}) employ a cookie-cutter approach to [organisational agility]({{< ref "/tags/organisational-agility" >}}). While I accept that they may have worked somewhere once, the likelihood that the same approach will work in your organisation is small. They were created to get a unique company from their existing state to their personal vision of where they wanted to be. To increase the likelihood of success you need a framework that guides you to change your organisation in an incremental and custom fashion towards your own vision. Cookie-cutter approaches will not work for you.

    ## TL;DR

    If we accept that our path to agility is unique and will always differ from others we can leverage the [Agility Guide to Evidence-based Change](https://nkdagility.com/the-agility-guide-to-evidence-based-change-using-scrum-to-transform-your-enterprise/) to help guide us to a greater degree of organisational and [business agility]({{< ref "/tags/business-agility" >}}). We can use the same ideas that have created so much product value with [Scrum]({{< ref "/categories/scrum" >}}) and leverage them to create organisational value as well.

    Create your [Organisational Change]({{< ref "/tags/organisational-change" >}}) Backlog and Organisational Change Team and create your own path to agility. Then train everyone in your organisation and have them identify, as only those that do the work can, the impediments to [value delivery]({{< ref "/tags/value-delivery" >}}) that you have in your organisation.

    ## Create your own path to Organisational Agility

    Every organisation, and indeed every department, is a little bit different and you need to tailor your approach to suit the culture that you have. A clear vision and an incremental drive is the starting point to enact improvements.

    I have been working with a few companies in the last year to move them towards a greater realisation of their ALM and [DevOps]({{< ref "/categories/devops" >}}) visions. In my world, DevOps is made up of your Processes, Practices, and Tools that you use to deliver on your products vision and achieve some amount of business agility. The greater degree of agility that your organisation can attain the larger the competitive advantage that you will have over your competitors. In today's marketplace, there is no room for inefficient and wasteful organisations that are slow to change. As long as you are building software that your business uses to make money this is indubitably true. It really does not matter if you are selling that software, or that software runs the warehouse that allows you to deliver goods to customers. You rely on the function and features of that software to do business.

    The first step to creating a direction for improvement is to [create an organisational improvement vision](https://nkdagility.com/professional-organisational-change-ghana-police-service/). Think about where you would like to be and write it down. And don’t just think of the short or medium term, this will be a living vision of your end goal. Try to think of the 'whats' and 'whys' that you want to achieve rather than the 'hows'. You want to set direction and not constrain the ingenuity of those working towards the vision. This vision then needs to be communicated to everyone in your organisation. Everyone needs to understand that you stand behind that vision and plan to enact it.

    > "The greatest resistance to moving towards the culture and process that you want is the culture and process that you have"

    You also need to communicate, and often accept, that it takes time to change. Especially in Enterprise where the greatest resistance to moving towards the culture and process that you want is the culture and process that you have. Indeed if you are being truly iterative in achieving your vision the route to get there will likely change many times as your [organisational culture]({{< ref "/tags/organisational-culture" >}}) adapts to the changes. The time it takes to reach your vision is directly related to the amount of support that you get in pursuing it. Bottom-up support is not all that is required to enact the type of organisational change that reaching towards business agility needs. You need full executive buy-in for the initiative and not just the usual lip service. They need to act in the change process, after all, it's their company and if they are not interested in being more efficient and beating competitors then why should you?

    If you get that top-down involvement you can often accelerate the move to a greater degree of business agility by short-circuiting some of the usual resistance. Public buy-in at every level removes a lot of the vision backchat that often accompanies chaotic change.

    > "Scrum is proven to deliver twice the features in half the time"  
    > \-Jeff Sutherland, [Scrum: The art of doing twice the work in half the time](http://nkdalm.net/Scrum-TwiceTheWork)

    Now that we have our vision we need to be able to enact it. Time and again Scrum has proven, worldwide and consistently, to deliver on the 'twice the features in half the time', promise and it can be used not only for delivering a product but also for delivering change within your organisation.

    ![image](images/image-1-1.png "image")
    { .post-img }

    In order to enact our vision, we need a [continuous improvement]({{< ref "/tags/continuous-improvement" >}}) cycle where we:

    1. measure the organisational value that we are getting using common metrics that we may need to tailor to our organisation
    2. diagnose our organisation's capability and determine areas for improvement
    3. Improve based on the direct evidence combined with the organisational capability

    This process allows us to create an organisational improvement backlog while leaving room to change dynamically as we create more organisational value. We can easily switch focus to other areas that will provide more value for less investment. You should focus only on your first few steps towards your vision to maintain your ability to change for as long as possible.

    ## The Organisational Change Team - the guiding coalition

    At this point you should read the [Agility Guide for Evidence-based Change](https://nkdagility.com/the-agility-guide-to-evidence-based-change-using-scrum-to-transform-your-enterprise/) if you have not already as an understanding of the concepts in this document is necessary to understanding this approach. You need to understand that your [engineering practices]({{< ref "/tags/engineering-practices" >}}) will need to keep pace with your cultural and process changes. You can't leave any of these three pillars to lag or your pace of change will slow and may stall.

    Key to moving forward at a sustainable and consistent pace is a guiding coalition that comprises senior representatives of engineering, commercialisation, and portfolio groups. This guiding coalition is the Change Team that will work through the organisational change backlog. You organisational change backlog should reflect the difference between where you are now and the vision that you want to achieve and the guiding coalition would be responsible for working through that backlog and showing improvements within the organisation to the change owner. These roles and accountabilities, just like for a [Scrum Team]({{< ref "/tags/scrum-team" >}}), are key to being successful.

    **Guiding Coalition -** The group of people that are going to take your organisation forward and enact the change.

    - **Change Owner**: The individual who is accountable and responsible for the Organisational Change Backlog. Might be the CEO or senior [Product Owner]({{< ref "/tags/product-owner" >}}).
    - **Change Team**: The Team responsible for delivering against the Organisational Change Backlog. This team should have everyone they need to activate the items that they take on.
    - **Process Manager**: The person responsible for making sure that everyone is effective within the bounds of the framework.

    If your organisation is large then we may want to break our guiding coalition along the lines of the below Practice Domains and have a separate and relevant guiding collision that is accountable for that domain and for working together with the other domains to achieve the vision.

    ![image](images/image1-2-2.png "image")
    { .post-img }

    When you have a large enterprise or even just a large part of that enterprise, it is essential to make sure that you make progress in each of the practice domain identified above. Sometimes that will mean that you need to have a separate and focused guiding coalition for each of the diagnostic practice domains. This will enable progress, in parallel, across each of the disciplines.

    - **Process** - Process is typically owned by your Scrum Masters which may be part of your traditional PMO and should contain all of the key drivers for implementing the Scrum framework with your teams.
    - **Productivity** - Your engineering teams would be the most relevant and effective members of this domain.
    - **Value** - Value is a key factor of your Product Owners and as such their organisation should be the leading members of this guiding coalition.
    - **Quality** - Your commercialisation teams may be a key participant here, and with engineering practices high on the list of activities involvement from engineering would also make sense.
    - **Enterprise** - This domain should be owned by your [leadership]({{< ref "/categories/leadership" >}}) and sales teams. This is where you focus on the high-level organisational culture shifts that need to happen.

    The ideas above for membership and accountability of the domains is by no means strict and should just be taken as a suggestion. In this process, we are accepting that every organisation is different and we will need to adapt the way we implement this organisational change framework to suit.

    Each of the organisational change teams would be accountable and responsible for the delivery of measurable improvements to your organisation on a monthly cadence. While it may seem insurmountable it's about scale and focus. Break those large changes down into things that are achievable and show valuable improvements. The change backlog will help us focus on, and monitor, the pace of improvements.

    As we move towards our vision, after each step, we may need to improve, refactor, or completely redo our organisational change backlog as necessary to maximise achievable organisational value. Another practice that helps with this is communities of practice. Having an organised group of engineers share their knowledge across your teams will help each team assimilate the changes and improve their engineering practices in step with the changes. If you give dedicated time to these communities you should see a marked improvement in everyone's knowledge and skills.

    ## Avoid sabotage and train all your stakeholders

    You should not underestimate the ability of the uneducated members of your organisation, at whatever level, to undermine and often derail the change process. All of your employees are your [stakeholders](https://nkdagility.com/training/audiences/stakeholders/) to any organisational change, and it's hard to do anything without the support of your [stakeholders](https://nkdagility.com/training/audiences/stakeholders/). On top of this one of your greatest challenges will be making sure that your message, and the agile message, does not get diluted with every telling. While at the executive level there may be a keen understanding of agile and [lean]({{< ref "/categories/lean" >}}) and how to implement them the reality is that the further away the message must pass the less likely the message is to remain intact. Think of something as simple as the telephone game; how easily can the message get distorted. Then think of how complex your message of change is.

    If you have a core message, like Scrum, that you can have told the same worldwide you can cut through the human need to change the message to one they want to hear. So instead of focusing on posters and booklets, it is far more valuable to spend time in workshops all learning the same thing. Especially if you can get a wide variety of people into those classes.

    The most effective agile transformations I have encountered have all got consistent and broad-based training in common. Wither you train with an internally created course or through professional training there is value in everyone having the same understanding of the agile principals and the Scrum framework. When I have done this for organisations it has visibly empowered and exited the folks that work there and kick-started the move towards agility. That is why the [Professional Scrum]({{< ref "/tags/professional-scrum" >}}) Foundations class was created, for brawed training at all levels throughout the organization. I have had everyone from the guy that drives the forklift in the warehouse, to the CEO of the company in the same room, working on teams to deliver [working software]({{< ref "/tags/working-software" >}}). The understanding of empiricism and the complexity of [software development]({{< ref "/tags/software-development" >}}) that this provides is invaluable for getting folks moving in the right direction.

    ## Get your stakeholders to create Organisational Change Backlog Items

    The other outcome of the Professional Scrum Foundations class is as a feeder into the organisational change backlog. Who better than the people that are actually doing the work, at all levels, and who have just learned about Scrum, to create Backlog Items? With the learnings of Scrum fresh in their mind, they are eminently perfect for identifying the Impediments in your current organisation to moving towards the new model. The last few hours of the class is dedicated to a workshop that gets all of your [stakeholders](https://nkdagility.com/training/audiences/stakeholders/) thinking about what needs to change to move to the new way.

    How do you create Backlog Items for your Organisational Change Backlog when every employee is a stakeholder?
  FilePath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-01-11-organisational-change-create-path\index.md
  FolderPath: C:\Users\MartinHinshelwoodNKD\source\repos\NKDAgility.com\site\content\resources\blog\2018\2018-01-11-organisational-change-create-path

