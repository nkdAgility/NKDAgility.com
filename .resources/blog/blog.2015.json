[
  {
    "FrontMatter": {
      "title": "Access denied for orchestration plan on Build",
      "short_title": "Access Denied for Orchestration Plan on Build",
      "description": "Explains how to resolve TFS build errors caused by missing write permissions for the Project Collection Build Service on orchestration plans, including permission setup steps.",
      "date": "2015-12-16",
      "weight": 660.0,
      "ResourceId": "l331AonWBuN",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "slug": "access-denied-for-orchestration-plan-on-build",
      "aliases": [
        "/resources/l331AonWBuN"
      ],
      "ResourceContentOrigin": "Human",
      "ResourceImportId": 11411,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/access-denied-orchestration-plan-build",
        "/access-denied-orchestration-plan-build",
        "/access-denied-for-orchestration-plan-on-build",
        "/blog/access-denied-for-orchestration-plan-on-build",
        "/resources/blog/access-denied-orchestration-plan-build"
      ],
      "concepts": [
        "Tool"
      ],
      "categories": [
        "Uncategorized"
      ],
      "tags": [
        "Software Development",
        "Azure DevOps",
        "Azure Pipelines",
        "Troubleshooting",
        "Install and Configuration",
        "Azure Repos",
        "Pragmatic Thinking",
        "Windows",
        "System Configuration"
      ],
      "preview": "clip_image004-4-4.png",
      "Watermarks": {
        "description": "2025-05-07T13:16:54Z",
        "short_title": "2025-07-07T17:59:05Z"
      }
    },
    "BodyContent": "I was trying to setup a Build Agent within one of my current customers. They do over 1 million builds a year through Team City and I need to demonstrate that the new TFS build system is awesome before they will consider it. So it never instils confidence when you get an error…\n\n```\n10:01:25.328098 ---------------------------------------------------------------------------\n10:01:25.341094 System.AggregateException: One or more errors occurred. ---> Microsoft.TeamFoundation.DistributedTask.WebApi.TaskOrchestrationPlanSecurityException: Access denied: Project Collection Build Service does not have write permissions for orchestration plan 13b88515-ebeb-4c2e-9213-cdcc683b8ff4.\n10:01:25.341094 Microsoft.TeamFoundation.DistributedTask.WebApi.TaskOrchestrationPlanSecurityException: Access denied: Project Collection Build Service does not have write permissions for orchestration plan 13b88515-ebeb-4c2e-9213-cdcc683b8ff4.\n```\n\nI had one of their guys setup a TFS agent on one of their many enormously powerful build servers and tried a simple build. The build immediately errored out and greeted me with a \"there was an error\" message with no logs at all. I knew that something fundamental was up because of the lack of logs, and had to go to the server to get the cryptic message, Project Collection Build Service does not have write permissions for orchestration plan, that really did not help me much.\n\n![clip_image001](images/clip_image001-1-1.png \"clip_image001\")\n{ .post-img }\n\nBoy was the lack of logs annoying. Especially since the only way to get any information was to log onto a server that I did not own to go get more info.\n\nAfter much pain and suffering I got with Chris Paterson and isolated the issue to one of permissions. The new build system has two custom user accounts that are used to execute builds:\n\n- Project Build Service\n- Project Collection Build Service\n\nEffectively you can choose to have the build configured to run at the Project level if you only need access to the data in a single project, and the collection level if you need to pull bits from multiple projects. As soon as he mentioned this I thought about one of the options that I changed during the configuration of the build definition.\n\n![image](images/image-8-8.png \"image\")\n{ .post-img }\n\nThese isolation levels make sense, however there is a bug in the TFS 2015 RTM upgrade that may result in the \"Project Collection\" level resulting in the \"Task Orchestration Plan Security Exception\" you see above.\n\nAt this point you can immediately unblock yourself by selecting \"Current Project\" from the list.\n\nHowever if you need access to more than one Team Project, or might in the future, you need to dig a little deeper. If you have a look at the permissions on your build definition you should see the issue.\n\n![clip_image003](images/clip_image003-3-3.png \"clip_image003\")\n{ .post-img }\n\nIf you open the permissions for your build you should see both the \"Project Build Service\" and the \"Project Collection Build Service\" permissions with \"Inherit Allow\". You you don’t have both then you have an issue!\n\nYou can just add them to the Build Definition but you really want it to be inherited so that you don’t have to go add it for every Build Definition. To do that you have to go through Visual Studio to pop the correct UI.\n\n![image](images/image-1-7-7.png \"image\")\n{ .post-img }\n\nIt seams that the only way to pop the security panel for the root node of the Build Definitions, so that we can fix the cause, is in Visual Studio. So launch VS2015, head to the Builds page of Team Explorer, and click the \"Actions\" drop-down under \"Build Definitions\". Then select \"Security\"… this will pop the Web UI and get you strait to the right place.\n\nNote: Not to be confused by the legacy XAML Build Definitions.\n\n![clip_image005](images/clip_image005-5-5.png \"clip_image005\")\n{ .post-img }\n\nOnce there you can see that I only have the \"Project Build Service\" in the \"Users\" list and I also need to have the \"Project Collection Build Service\". So even though this is not a [Windows]({{< ref \"/tags/windows\" >}}) user or group you need to click \"Add\" and then \"Add Windows User or Group\"… Then search for and add the \"Project Collection Build Service\".\n\n![clip_image006](images/clip_image006-6-6.png \"clip_image006\")\n{ .post-img }\n\nNow, even though my build still fails, it fails for better reasons than just exploding. So if you run into the dreaded \"Access denied: Project Collection Build Service does not have write permissions for orchestration plan\" you will now know where to look and what might be the issue…\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2015\\2015-12-16-access-denied-orchestration-plan-build\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2015\\2015-12-16-access-denied-orchestration-plan-build",
    "ReferencePath": "resources/blog/2015/2015-12-16-access-denied-orchestration-plan-build"
  },
  {
    "FrontMatter": {
      "title": "The High of Release",
      "short_title": "Microsoft Web-Based Release Management",
      "description": "Overview of Microsoft’s new web-based Release Management tools for building flexible, integrated DevOps pipelines in VSTS and TFS, supporting diverse deployment options.",
      "date": "2015-12-05",
      "weight": 480.0,
      "ResourceId": "akntzjbRQe2",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "slug": "the-high-of-release",
      "aliases": [
        "/resources/akntzjbRQe2"
      ],
      "ResourceContentOrigin": "Human",
      "ResourceImportId": 11398,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/the-high-of-release",
        "/the-high-of-release",
        "/resources/blog/the-high-of-release"
      ],
      "concepts": [
        "Tool"
      ],
      "categories": [
        "DevOps"
      ],
      "tags": [
        "Release Management",
        "Software Development"
      ],
      "preview": "2016-01-04_15-52-31-1-1.png",
      "Watermarks": {
        "description": "2025-05-07T13:16:55Z",
        "short_title": "2025-07-07T17:59:06Z"
      }
    },
    "BodyContent": "Just a week or so ago I was at Microsoft Future Decoded event in London to talk about the new [Release Management]({{< ref \"/tags/release-management\" >}}) tools that will be made available at [Connect()](https://channel9.msdn.com/Events/Visual-Studio/Connect-event-2015/) and that might make it in to TFS 2015 Update 2. Here is hoping! The focus of the track was on [DevOps]({{< ref \"/categories/devops\" >}}) and the focus of my session was on both Build and Release.\n\nMicrosoft have created a rich set of web based tooling that can allow you to build reliable release pipelines that meet the needs of your teams striving towards [engineering excellence]({{< ref \"/categories/engineering-excellence\" >}}). My favourite thing about the new tooling is that rather than focus on building full stack tools, they are focusing on orchestration and integration. If you want to use Chef, Puppet, or Docker to physically release your software then that's up to you. If you want to use PowerShell DSC, or just plain old PowerShell, then you can do that as well. And if you just want to build a custom task to deploy your software using PowerShell, ShellScript, or anything else you desire, then you can do that to.\n\nThey are getting out of the game of forcing you to use their tachtical toolset while providing a versatile tool to help orchastrate your strategic vision. In short... its awesome! Check out my video below for a full demo...\n\n<iframe width=\"960\" height=\"540\" src=\"https://channel9.msdn.com/Events/FutureDecoded/Future-Decoded-2015-UK/15/player?format=html5\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n\nThe new Release Management tools are completely web based and allow you to create a professional release pipeline right inside VSTS without the need for any other tools. The new Release Management tools are now in Public Preview on Visual Studio Team Services (VSTS) and you can use them to deploy from your on-premises TFS servers as well.\n\nMany of my larger customers might still be working on being able to put their code in the cloud, but they have no problems with deploying the output of their builds to cloud environments on Azure or elsewhere.\n\nOver the next few months I am hoping to get some local build output deployed to Azure where I can spin up 100 servers to deploy my application for the local testers. I will let you know how I get on...\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2015\\2015-12-05-the-high-of-release\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2015\\2015-12-05-the-high-of-release",
    "ReferencePath": "resources/blog/2015/2015-12-05-the-high-of-release"
  }
]
