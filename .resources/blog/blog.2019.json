[
  {
    "FrontMatter": {
      "title": "What is your perspective on collocation?",
      "description": "Explores the benefits and challenges of collocation in Scrum teams, comparing face-to-face collaboration with remote work, and offering practical advice for team setup.",
      "date": "2019-10-21",
      "weight": 500.0,
      "slug": "what-is-your-perspective-on-collocation",
      "aliases": [
        "/resources/AcwMGmMo7iU"
      ],
      "ResourceId": "AcwMGmMo7iU",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39960,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/what-is-your-perspective-on-collocation",
        "/what-is-your-perspective-on-collocation",
        "/what-is-your-perspective-on-collocation-",
        "/blog/what-is-your-perspective-on-collocation-",
        "/resources/blog/what-is-your-perspective-on-collocation"
      ],
      "concepts": [],
      "categories": [
        "Scrum",
        "Product Development"
      ],
      "tags": [
        "Team Collaboration",
        "Team Performance"
      ],
      "preview": "1026661500-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:03Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n> **\\>>I am interested to hear your perspective about collocation. There's a spectrum of opinions, it seems, from \"Distributed teams and remote-only teams are the way of the future\" to \"The most effecient and effective method of communicating to and within the development team is face to face\". My personal experiences and I suggest the vast majority of data indicate collocation is optimal. I'd go so far as to say that collocation is 'empirically' best -- in particular if/when a team is suffering communication challenges. Yet The Scrum Guide(tm) doesn't take a definitive position on this issue. What's your position as a PST? What's your advice to teams?**\n\nLets first define what collocation is:\n\n> Collocation is a complimentary agile practice where all members of the same [Scrum Team]({{< ref \"/tags/scrum-team\" >}}) work on a daily basis in the same room, within visual sight of each other. -MrHinsh\n\nYou may argue with my definition, but thats what I am going with and we should note that its a complimentary practice and not a core practice. That is, its not required to be agile or to do Scrum. However I believe that it is a very rare situation that would result in a distributed Scrum Team to become a high performing Scrum Team. I’m defiantly not saying that it cant happen, I have heard tell of highly efficient and value orientated Teams that were distributed. I just cant help but thing that is they were that awesome distributed, how much more amazing would their output have been if they had been collocated.\n\nWhile collocation is not required, it is highly recommended especially for new teams. The practice of sitting together, solving problems together, and supporting each other is something that humans need in their lives. Its important for our physiological and psychological wellbeing. We need to interact.\n\nYou should [head over to Scott Hanselman blog and read about the plight of the remote worker](https://www.hanselman.com/blog/ReviewLivingWorkingAndUsingTheCiscoUmiPersonalTelepresenceSystemAllThatAndBagOfChips.aspx) from someone whom has been able to leverage technology significantly. As you read I think you will see, as I did, that this is a lot of effort trying to mimic that personal interaction and physical presence. So while [remote working]({{< ref \"/tags/remote-working\" >}}) is certainly a possibility, it requires the judicious use of right technology to make it work.\n\nUltimately for small organisations with few developer's you may have no choice but to be remote, its not ideal, but we can make it work. I believe that ideally we should be collocated at least within the same Scrum Team. We can have a number of Scrum Teams that are not in the same location as long as the members of each Scrum Team are collocated.\n\n![See the source image](images/devops2.png)\n{ .post-img }\n\nMicrosoft has been studying the value of colocation and team rooms for quite some time and its interesting that they have been investing billions of dollars to remodel all of their engineering spaces into fully functional Team Rooms. Every team room is out of earshot of all the others, it has space for up to 12 team members, and has both a video conferencing room that can hold everyone, and two breakout rooms. These rooms are only for the team and are not bookable by anyone else.\n\nThis type of space provides not only a level of Focus, but a level of self, of ownership, that is just not posible in a shared space. These teams fell like they are valued by the organisation, and feel empowered to take control of their own culture.\n\nIts clear from the data that collocation is best, but its just not always available based on company culture and how things are organised. If you are unable to be collocated then the role of the [Scrum Master]({{< ref \"/tags/scrum-master\" >}}) is to work to minimise the negative impact of the team while working on the organisational impediments that resulted in the problem in the first place. Hopefully we will all be working in team rooms in the future.\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer, and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-10-21-what-is-your-perspective-on-collocation\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-10-21-what-is-your-perspective-on-collocation"
  },
  {
    "FrontMatter": {
      "title": "Can the Definition of Done change per Sprint?",
      "description": "The Definition of Done can evolve to improve quality but should not be weakened or vary per backlog item. Consistency ensures transparency and reliable product increments.",
      "date": "2019-10-14",
      "weight": 360.0,
      "slug": "can-the-definition-of-done-change-per-sprint",
      "aliases": [
        "/resources/LdmZbBlwgM-"
      ],
      "ResourceId": "LdmZbBlwgM-",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 40168,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/can-the-definition-of-done-change-per-sprint",
        "/can-the-definition-of-done-change-per-sprint",
        "/can-the-definition-of-done-change-per-sprint-",
        "/blog/can-the-definition-of-done-change-per-sprint-",
        "/resources/blog/can-the-definition-of-done-change-per-sprint"
      ],
      "concepts": [
        "Artifact"
      ],
      "categories": [
        "Scrum",
        "Product Development",
        "Engineering Excellence"
      ],
      "tags": [
        "Definition of Done",
        "Professional Scrum",
        "Working Software",
        "Software Development",
        "Agile Frameworks",
        "Scrum Team",
        "Pragmatic Thinking",
        "Scrum Master",
        "Agile Planning",
        "Empirical Process Control",
        "Team Performance",
        "Product Delivery"
      ],
      "preview": "20190906_152025-2-2.gif",
      "Watermarks": {
        "description": "2025-05-07T13:16:06Z"
      }
    },
    "BodyContent": "I was asked this question today and I think there is a clear answer, however it may change depending on the context of the question.\n\n> \"During each Sprint Retrospective, the [Scrum]({{< ref \"/categories/scrum\" >}}) Team plans ways to increase product quality by improving work processes or adapting the definition of \"Done\", if appropriate and not in conflict with product or organizational standards.\" -Scrum guide\n\n### \\[Question\\] Can the [Definition of Done]({{< ref \"/tags/definition-of-done\" >}}) change per Sprint?\n\nYes; you can and are expected to make improvements to the Definition of Done at the [Sprint Review]({{< ref \"/tags/sprint-review\" >}}). Your Development Team should always be asking themselves:\n\n- Do we have the quality level that we need to release?\n- Is our quality improving?\n- What can we add to the Definition of Done to improve quality.\n\nEvery bug found in work that was done in a previous Sprint is a possible quality issue that should result in a stronger Definition of Done to make sure it never happens again. However I am a little concerned that the brevity of the question could result in enabling activity in a way that can be used to suborn the process. There is a distinct lack of context to this question that could change my answer from a yes, to a no.\n\n### \\[Question\\] Can the Definition of Done change per Sprint so that we can reduce quality and deliver more features?\n\nThe resounding answer here is no. You should never reduce quality as its not within the authority of a [Scrum Team]({{< ref \"/tags/scrum-team\" >}}) to reduce quality. The quality of the product equates to the value added to that product through capital investment. If one chooses to reduce quality then that change in the ROI of the capital investment needs to be reflected in your financial statements. If you are a private company, then I would think that your Shareholders would be unhappy if the value of an organisational asset is misrepresented! What about if its a public company? Now we are in the realm of fraud!It is a board-level responsibility to actively reduce quality and the ramifications of that reduction should be presented to your board. A Development Team does not have the authority to lower quality, the [Product Owner]({{< ref \"/tags/product-owner\" >}}) likely does not have that authority, and your IT Management definitely does not. When I am approached with this question by teams, I always say: \"Let's go have a chat with the CFO and make sure he understands the ramifications of a deduction of quality on his capital investments.\"I've never had anyone take me up on that offer.\n\n### \\[Question\\] Can the Definition of Done change per Sprint because we have different DoD for each backlog item?\n\nNo, you should have a consistent DoD that is applied to all of the work that you do, and that represents a usable [increment]({{< ref \"/tags/increment\" >}}). Sometimes I see some confusion between DoD and Acceptance Criteria. DoD is about how we do things and covers [engineering practices]({{< ref \"/tags/engineering-practices\" >}}), Development Team standards, coding standards, architectural standards, and other Development Team standards. It should reflect both product and engineering qualities. Acceptance Criteria is about the notes that we have to take when we are discussing what we are going to deliver. This is the bit that is different for every Backlog Item.\n\n### \\[Question\\] Can the Definition of Done change per Sprint because we just like mixing it up?\n\nNo; The purpose of the Defenition of Done is to maintain [transparency]({{< ref \"/tags/transparency\" >}}) of the past by allowing everyone to understand what a \"usable increment\" means.\n\n![](images/20190906_152025-1-1-1.gif)\n{ .post-img }\n\nIf we keep changing the goal posts how can:\n\n- Does the development team determine if a Backlog Item fits in a Sprint if we don't know what we will do for it?\n- Does the development team create a Sprint Backlog that contains the about of work that they believe that they can reasonably achieve?\n- How does the Product Owner or the Stakeholders understand what they are looking at at the Sprint Review?\n- Do your stakeholders understand their return on investment?\n\nOn a brownfield project that moves to Scrum, I would expect your DoD to start week, and not reflect releasable. Each Sprint Retrospective, your Scrum Team, should review your DoD and get it closer to releasable. As you make the changes, you will discover more [technical debt]({{< ref \"/tags/technical-debt\" >}}), and it may take some time to pay it off. Keep improving until your definition of Done mirrors shippable. On a Greenfield project, you should always start with a definition of Done that mirrors shippable and have shippable product every Sprint, including the first one.\n\nThere are no right answers, only things that you try to discover if they are right for your Team.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-10-14-can-the-definition-of-done-change-per-sprint\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-10-14-can-the-definition-of-done-change-per-sprint"
  },
  {
    "FrontMatter": {
      "title": "How do you handle conflict in a Scrum Team?",
      "description": "Guidance on resolving conflict in Scrum Teams, including facilitation techniques, escalation steps, and the Scrum Master's role in fostering healthy team dynamics.",
      "date": "2019-10-07",
      "weight": 610.0,
      "slug": "how-do-you-handle-conflict-in-a-scrum-team",
      "aliases": [
        "/resources/xIWBb8Cy_Rv"
      ],
      "ResourceId": "xIWBb8Cy_Rv",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39851,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/how-do-you-handle-conflict-in-a-scrum-team",
        "/how-do-you-handle-conflict-in-a-scrum-team",
        "/how-do-you-handle-conflict-in-a-scrum-team-",
        "/blog/how-do-you-handle-conflict-in-a-scrum-team-",
        "/resources/blog/how-do-you-handle-conflict-in-a-scrum-team"
      ],
      "concepts": [
        "Method"
      ],
      "categories": [
        "Scrum",
        "Technical Leadership"
      ],
      "tags": [
        "Team Performance",
        "Scrum Team",
        "Software Development",
        "Liberating Structures",
        "Professional Scrum",
        "Team Collaboration",
        "Scrum Master",
        "Pragmatic Thinking"
      ],
      "preview": "1061204442-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:07Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n### \\[Question\\] How do you handle conflicts between 2 people when one of them is a disciplinarian, within an agile environment?\n\nThe accountability for conflict resolution within a team lies with that Development Team and with the following escalation:\n\n1. The Development Team is responsible for who is on the team and not\n2. The [Scrum Master]({{< ref \"/tags/scrum-master\" >}}) is responsible for the Development Team’s understanding and implementation of Scrum.\n3. The Scrum Master is responsible for solving impediments.\n\nThe first focus needs to be on the Development Team to solve the problem, the second on giving the [Scrum Team]({{< ref \"/tags/scrum-team\" >}}) the skills required to do that. I want to help the Scrum Team understand the issue with this behaviour and then have it discussed at the next Sprint Retrospective. During the next Sprint I might try to facilitate the Scrum events a little differently to provide some discussion points for the next Sprint Retrospective. I would likely want to focus on facilitation techniques that promote everyone getting a voice, like the 1-2-4-All Liberating Structure. During the Events, or any discussions that involve the overbearing personality, when they try to asserts themselves, change tac immediately to the 1-2-4-All. In 1-2-4-All there is 1 minute of silent reflection, followed by 2 minutes in pairs, then 4 minutes in pairs-of-pairs, then have each group share their best idea with everyone. This should have the effect of mitigating the loud voice, allowing everyone to be heard, and you can focus on [coaching]({{< ref \"/tags/coaching\" >}}) that person to listen. Its important for the Scrum Master to have some skills in Life Coaching, and Cognitive Therapy. These additional skills can help a great Scrum Master more effectively be a guide for the Scrum Team.\n\nAt the Sprint Retrospective you may want to use “Heard, Seen, Respected” to have each team member share share a time when they were not heard. This could facilitate a conversation, and may provoke reflection in loud individuals. Be careful that you dont end up with too much conflict!\n\nThe Third escalation is the one that we dont want to have to enact, go back and try again with the first and second!\n\nIf all else fails then the Scrum Master may need to intervene, or provide intervention through whatever corporate processes that you have. If the Team cant solve the problem, and you have failed to coach that person, you may need to bring in outside help. If you have an Agile friendly HR that is able to provide additional coaching that would be awesome. If HR understands the value of Team, and folks working well together they may have some additional ideas.\n\nIf after all of those avenues have been exhausted then maybe the Team Member is the impediment.\n\nThere is nothing wrong with not being a good fit for a team. A team is a group of people, and people don’t always get along and no matters how much you focus on professionalism; there are always individuals that should not be in the same circles. Maybe you need to look for a way to place that person elsewhere in an environment that more suits their personality.\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer, and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-10-07-how-do-you-handle-conflict-in-a-scrum-team\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-10-07-how-do-you-handle-conflict-in-a-scrum-team"
  },
  {
    "FrontMatter": {
      "title": "In Nexus with 5 Scrum teams, how can the Product Owner attend all Sprint Planning events?",
      "description": "Explains how a Product Owner can manage Sprint Planning across multiple Scrum teams in Nexus by delegating, using area or team owners, and maintaining clear communication.",
      "date": "2019-09-30",
      "weight": 640.0,
      "slug": "in-nexus-with-5-scrum-teams-how-can-the-product-owner-attend-all-sprint-planning-events",
      "aliases": [
        "/resources/As4R5dKsJtU"
      ],
      "ResourceId": "As4R5dKsJtU",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39855,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/in-nexus-with-5-scrum-teams-how-can-the-product-owner-attend-all-sprint-planning-events",
        "/in-nexus-with-5-scrum-teams-how-can-the-product-owner-attend-all-sprint-planning-events",
        "/in-nexus-with-5-scrum-teams,-how-can-the-product-owner-attend-all-sprint-planning-events-",
        "/blog/in-nexus-with-5-scrum-teams,-how-can-the-product-owner-attend-all-sprint-planning-events-",
        "/in-nexus-with-5-scrum-teams--how-can-the-product-owner-attend-all-sprint-planning-events-",
        "/blog/in-nexus-with-5-scrum-teams--how-can-the-product-owner-attend-all-sprint-planning-events-",
        "/resources/blog/in-nexus-with-5-scrum-teams-how-can-the-product-owner-attend-all-sprint-planning-events"
      ],
      "concepts": [
        "Method"
      ],
      "categories": [
        "Scrum",
        "Product Development"
      ],
      "tags": [
        "Agile Frameworks",
        "Agile Product Management",
        "Professional Scrum",
        "Software Development",
        "Scrum Team",
        "Product Owner"
      ],
      "preview": "146713119-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:08Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n### \\[Question\\] In Nexus with 5 Scrum teams, how can the [Product Owner]({{< ref \"/tags/product-owner\" >}}) attend all Sprint Planning events?\n\nAs you increase the number of Teams in a Nexus you can very quickly run into this common [scaling]({{< ref \"/tags/scaling\" >}}) issue. While Nexus talks about a single Product Owner who has overall accountability and ownership of the [Product Backlog]({{< ref \"/tags/product-backlog\" >}}), you may need to scale the Product Owner role as your Nexus grows. My usual starting point here is to look at how the Product Backlog is decomposed. It may be that my Product Owner only provides detailed [leadership]({{< ref \"/categories/leadership\" >}}) down to the Feature level and not to the Product Backlog Level. This leaves the [Scrum Team]({{< ref \"/tags/scrum-team\" >}}) with ownership there, and releases pressure on the Product Owner. The Product Owner would then only require to attend the Nexus Sprint Planning portion, and would delegate the rest. As long as the Product Owner effectively communicates their vision & expectations as part of the Nexus Sprint Goals, the Scrum Teams should be able to work towards fulfilling them.\n\n> Product Backlog Items can be delivered in a singe Sprint with a preference for smaller.\n>\n> Features are too big for a single team Sprint and may be delivered across multiple Sprints or Teams\n>\n> Epics are too big for a Release and would be composed of many Features.\n>\n> \\-Martin Hinshelwood\n\nEach Scrum Team would then be free to choose how they manage this and make sure that they have enough ready Backlog Items for their part of Sprint Planning. Usually they will designate, or have, a virtual Product Owner that is dedicated to their team. This virtual PO role could be called a “Area Owner” if their Scrum Team is focused on only one area of the Product, or a “Team Owner” if there are many teams in the same area. This is roughly how the Azure [DevOps]({{< ref \"/categories/devops\" >}}) engineering teams break down:\n\n\\-Product Owner\n\n> |----Work Item Product Owner\n>\n> |--- Team A Product Owner\n>\n> |---Team B Product Owner\n>\n> |----Source Control Product Owner\n>\n> |----etc.\n\nIn this case they have ~42 teams that roll up to ~6 Product Areas, and is just one example of how you might structure things. The danger is in disrupting the flow of information by increasing the distance between the Product Owner and the Development Team. The [Azure DevOps]({{< ref \"/tags/azure-devops\" >}}) engineering teams mitigate this with Autonomy. Each Area Owner is only looking at their functional area while fulfilling the vision set by the Product Owner, and the Team Owner is communicating constantly with their peers and the Area Owner.\n\nIf you do implement some kind of hierarchy I recommend focusing on keeping it as flat as posible and understanding that each of these folks, Product Owner, Area Owner, & Team Owner are fulfilling the role of the Product Owner as per the Scrum Guide as part of a Scrum Team. For the question above I would likely start with a dedicated Team Owner for each team that is the representative that attends the Nexus Sprint Planning and that works closely with the Product Owner. This will likely need close monitoring and a skilled [Scrum Master]({{< ref \"/tags/scrum-master\" >}}) to help coach the teams to maintain communication and not loose focus.\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer, and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-30-in-nexus-with-5-scrum-teams-how-can-the-product-owner-attend-all-sprint-planning-events\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-30-in-nexus-with-5-scrum-teams-how-can-the-product-owner-attend-all-sprint-planning-events"
  },
  {
    "FrontMatter": {
      "title": "Should the Scrum Master always remove impediments?",
      "description": "Explains when a Scrum Master should remove impediments, focusing on team self-sufficiency, true impediments, and supporting team growth within Scrum practices.",
      "date": "2019-09-23",
      "weight": 640.0,
      "slug": "should-the-scrum-master-always-remove-impediments",
      "aliases": [
        "/resources/xPJL0I4sjDJ"
      ],
      "ResourceId": "xPJL0I4sjDJ",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39856,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/should-the-scrum-master-always-remove-impediments",
        "/should-the-scrum-master-always-remove-impediments",
        "/should-the-scrum-master-always-remove-impediments-",
        "/blog/should-the-scrum-master-always-remove-impediments-",
        "/resources/blog/should-the-scrum-master-always-remove-impediments"
      ],
      "concepts": [],
      "categories": [
        "Scrum"
      ],
      "tags": [
        "Scrum Team",
        "Scrum Master",
        "Professional Scrum",
        "Software Development"
      ],
      "preview": "PSX_20190823_113052-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:09Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n### \\[Question\\] Should the [Scrum Master]({{< ref \"/tags/scrum-master\" >}}) always remove impediments?\n\nYes, the Scrum Master should always remove Impediments. That is their responsibility on the [Scrum Team]({{< ref \"/tags/scrum-team\" >}}). However, what is an impediment?\n\n> An Impediment is something that impedes \\[slows\\] a Teams progress, and that they are unable to deal with themselves.\n\nBoth parts of this are critical. Often the Scrum Master will head off on a mission to solve an impediment that is not really an impediment. They need to stop and ask themselves:\n\n- **Is this something the Scrum Team _can_ solve on their own?**\n  If so, do nothing, and only help the Team resolve it. Hopefully over time the Team will learn to resolve this issue without having to raise it to the Scrum Master at all.\n- **Is this something that the Scrum Team _should_ be able to solve on their own?**\n  If this is the case then the Scrum Masters focus should be on helping the Team learn a new skill or build a new relationship that will allow them to solve this on their own. The Scrum Master is not a problem solver, and refraining from solving problems is one of the most powerful tool in their adrenal.\n\nIf after both of these questions have been fully explored the item still looks like an Impediment then the Scrum Master should work to resolve it, all the while thinking about what they could do to enable the Team to be able to solve them on their own. The future of the Scrum Master is to make the Scrum Team as self-sufficient as posible, within the bounds of their organisation, so that they can go tackle some of those organisational impediments that are preventing even more maturity.\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer, and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-23-should-the-scrum-master-always-remove-impediments\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-23-should-the-scrum-master-always-remove-impediments"
  },
  {
    "FrontMatter": {
      "title": "What's the best way to work around multiple PO?",
      "description": "Guidance on addressing issues with multiple Product Owners in Scrum, highlighting the need for clear backlog ownership and accountability to ensure value delivery.",
      "date": "2019-09-16",
      "weight": 640.0,
      "slug": "what's-the-best-way-to-work-around-multiple-po",
      "aliases": [
        "/resources/blog/what-s-the-best-way-to-work-around-multiple-po",
        "/resources/KIG3LzjF3zK"
      ],
      "aliasesArchive": [
        "/blog/whats-the-best-way-to-work-around-multiple-po",
        "/whats-the-best-way-to-work-around-multiple-po",
        "/what's-the-best-way-to-work-around-multiple-po-",
        "/blog/what's-the-best-way-to-work-around-multiple-po-",
        "/resources/blog/whats-the-best-way-to-work-around-multiple-po",
        "/resources/blog/what-s-the-best-way-to-work-around-multiple-po"
      ],
      "concepts": [],
      "categories": [
        "Scrum",
        "Product Management",
        "Product Development"
      ],
      "tags": [
        "Agile Product Management",
        "Product Owner"
      ],
      "ResourceId": "KIG3LzjF3zK",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39853,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "preview": "495173592-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:11Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n### \\[Question\\] What's the best way to work around multiple POs and the fact that they don't give good stories and do not all show up for BR meetings to break down the incomplete stories. Small company.\n\nIt sounds to me like you don’t have any Product Owners. There does not seem to be anyone at your organisation taking ownership of the backlog and being accountable for [value delivery]({{< ref \"/tags/value-delivery\" >}}).\n\nMy first choice would be to raise this with management and ask:\n\n- Is it ok to spend money on items that have not been validated as needed?\n- Is it ok to spend money on what might not be the next most important thing for the business?\n\nThe value of the [Product Owner]({{< ref \"/tags/product-owner\" >}}) is someone that can focus on the Product and its future direction. While everyone on the [Scrum Team]({{< ref \"/tags/scrum-team\" >}})(s) are responsible for the product future, the Product Owner can focus specifically on market, competition, and user trends to shape and order the [Product Backlog]({{< ref \"/tags/product-backlog\" >}}) so that your Scrum Team is able to deliver the next most important feature for the business. This is hard, a lot of work, and requires specialist skills that need practice, [experimentation]({{< ref \"/tags/experimentation\" >}}), and time to hone. Without these skills, coupled with good data, we are just fumbling in the dark and hoping that we randomly stumble upon a useful feature for our users.\n\nFind the right Product Owner, or select someone from your team to take that responsibility while you find the right person. If it was me I would walk into the CEO’s office and lay the problem out, as well as the cost to the business of building the wrong features.\n\nThe industry average is that we spend 65% (Source: Standish Group) of our time working on the wrong feature. The Product Owners job is to minimise this figure. What does your CEO think is the cost of not having anyone at the helm?\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-16-whats-the-best-way-to-work-around-multiple-po\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-16-whats-the-best-way-to-work-around-multiple-po"
  },
  {
    "FrontMatter": {
      "title": "How do you make a good Forecast?",
      "description": "Explains how to create reliable forecasts in agile projects by using flow metrics like cycle time and throughput, and shifting from project-based to team-based budgeting.",
      "date": "2019-09-09",
      "weight": 540.0,
      "slug": "how-do-you-make-a-good-forecast",
      "aliases": [
        "/resources/fm9Rt6R7JZz"
      ],
      "ResourceId": "fm9Rt6R7JZz",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39852,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/how-do-you-make-a-good-forecast",
        "/how-do-you-make-a-good-forecast",
        "/how-do-you-make-a-good-forecast-",
        "/blog/how-do-you-make-a-good-forecast-",
        "/resources/blog/how-do-you-make-a-good-forecast"
      ],
      "concepts": [],
      "categories": [
        "Scrum",
        "Product Management",
        "Product Development"
      ],
      "tags": [
        "Pragmatic Thinking",
        "Software Development",
        "Throughput",
        "Forecasting",
        "Metrics and Learning"
      ],
      "preview": "993957510-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:12Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n### \\[Question\\] Within an agile Project you have a Product Vision, Smart Goals, Sprint Goals and a Roadmap. How do you make a good Forecast? Burnup chart is to vague and not accepted, even you have 6-month experience and velocity tracking. You need that forecast to get 4 more million of budget you know you will need. On top, you need to staff another team. What kind of forecast you offer and how do consider the thrid team in your forecast?\n\n_The metrics that you are currently using will decrease predictability and increase overall dissatisfaction with the process from teams to management._\n\nMetrics like Story Points, Burnups, and Velocity do not help predictability and indeed may allow your teams to continue delivering chunky features that are difficult to predict. The enemy of predictability is size; large \\[batches\\] PBI have a negative impact on predictability. I find Velocity and Story Points are perfectly valid for teams new to Scrum that are fairly immature. Once your team is getting in the swing of things I try to very quickly introduce flow metrics of Cycle Time, [Throughput]({{< ref \"/tags/throughput\" >}}), Work Item Aging, and Work In Process. Not only do these metrics encourage backlog items to be smaller, which increases predictability, they also don’t really care about the size. You can use your Throughput, [Cycle time]({{< ref \"/tags/cycle-time\" >}}), and WIP to provide evidence for estimates with a far greater degree of statistical certainty.\n\nI highly recommend that you read Actionable Agile Metrics for Predictability from Daniel Vacanti. This book will show you the basis by which you can get the data you desire to increase predictability within your organisation.\n\nThe Budget cycle is a holdover from the Tayloristic ideas of the Industrial Revolution when we were dealing with more defined work that can be predicted. However, in our new world of undefined work where we need to iterate to the most right solution, there is no up-front knowledge of how long things are going to take. In the Tayloristic world, we know how long each widget is going to take to make, so we focus on the delivery of the 10k widgets and we can know very predictably when it will be done. Over the years this evolved into the budget cycle that we know today. As we moved into the knowledge working world applying those tayloristic techniques to this new form of work creates huge complexity, that then resulted in huge numbers of Project Managers, Accountants, and HR to manage it all.\n\nHowever, we can predict to the dollar how much our teams are going to cost! Every year; easily!\n\nIf you have 5 people on a [Scrum Team]({{< ref \"/tags/scrum-team\" >}}) then the cost of running that team is known by your business, just ask. Take your Sprint length, usually 2 weeks, and figure out how much each Sprint costs per team; this may be different between teams. You can then be extrapolated across the number of Sprints you run in a year, for a yearly cost of each team. Let's say that you figure out that you have the people to be able to run 10 teams for 23 Sprints per year, and all your teams cost $50k per sprint. You need a budget of $11.5 million to run those teams. Each Product gets assigned one or more teams, and voila! Moving from a Team-based budget from a Project-based budget is part of that transition from a focus on Project to a focus on Product that needs to happen as your organisations move towards agility & [DevOps]({{< ref \"/categories/devops\" >}}).\n\nThe pushback you get from this transition is generally due to those deep-seated tayloristic ideas and fear of what your company is going to do with all of those Project Managers, Accountants, and HR, as well as those Managers that have to justify their headcount. Don’t surprise them, involve them. Help them understand what the new world will eventually look like, a rough transition timeline, and what other options are open to the folks that you no longer need in their current role. Have them join and form Scrum Teams to solve complex problems and some folks will embrace change and others will not; That's OK.\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-09-how-do-you-make-a-good-forecast\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-09-how-do-you-make-a-good-forecast"
  },
  {
    "FrontMatter": {
      "title": "Are technical skills required to be a Scrum Master?",
      "description": "Technical skills are not required to be a Scrum Master, but understanding technical, business, and organisational contexts helps Scrum Masters better support their teams.",
      "date": "2019-09-01",
      "weight": 275.0,
      "slug": "are-technical-skills-required-to-be-a-scrum-master",
      "aliases": [
        "/resources/foi9MYyc1vq"
      ],
      "ResourceId": "foi9MYyc1vq",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39894,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/are-technical-skills-required-to-be-a-scrum-master",
        "/are-technical-skills-required-to-be-a-scrum-master",
        "/are-technical-skills-required-to-be-a-scrum-master-",
        "/blog/are-technical-skills-required-to-be-a-scrum-master-",
        "/resources/blog/are-technical-skills-required-to-be-a-scrum-master"
      ],
      "concepts": [],
      "categories": [
        "Scrum",
        "Technical Leadership"
      ],
      "tags": [
        "Scrum Master",
        "Professional Scrum",
        "Scrum Team",
        "Pragmatic Thinking",
        "Software Development",
        "Agile Frameworks",
        "Competence"
      ],
      "preview": "1029723898-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:13Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n### \\[Question\\] Are technical skills required to be a [Scrum Master]({{< ref \"/tags/scrum-master\" >}})?\n\n**_As per the Scrum Guide there is no requirement for a Scrum Master to have technical skills._**\n\n> The Scrum Master is responsible for promoting and supporting Scrum as defined in the Scrum Guide. Scrum Masters do this by helping everyone understand Scrum theory, practices, rules, and values.\n>\n> The Scrum Master is a servant-leader for the [Scrum Team]({{< ref \"/tags/scrum-team\" >}}). The Scrum Master helps those outside the Scrum Team understand which of their interactions with the Scrum Team are helpful and which aren’t. The Scrum Master helps everyone change these interactions to maximize the value created by the Scrum Team.\n>\n> \\-[The Scrum Master, Scrum Guide](https://scrumguides.org/scrum-guide.html#team-sm)\n\nWhen I discuss the Scrum Master in class and with customers I talk about them as being someone that can be a Teacher, Mentor, Coach, & Facilitator for your Scrum Team. So let's ask a question: If you were the Scrum Master for a Scrum Team building some financial software for a bank, how would you expect to guide and mentor the [Product Owner]({{< ref \"/tags/product-owner\" >}}) without some understanding of what their challenges are? Oh, you can coach them, one does not need expert knowledge of the problem to coach a subject. The Product Owner is the one that knows the answer, the Scrum Master just needs to facilitate their own discovery. That is only part of the Scrum Master role, I also need to teach & mentor the Product Owner to become better at realising value; for that, I need to have an understanding of the context within which they operate.\n\nI think that while you can be a non-technical Scrum Master, you can be a better Scrum Master with more knowledge of the context for each of the roles; you need more than technical skills! In order to be an awesome Scrum Master you are going to need 3 main masteries that you can leverage to help each of the roles, as well as the wider organisation:\n\n- **[Technical Mastery]({{< ref \"/tags/technical-mastery\" >}})** – While I would not expect a Scrum Master to have to be able to do everything that the Engineering team members can, they need to understand what the mastery of that profession looks like as well as the context within which the engineering team are practising. For example, they should be able to tell if TDD is appropriate for this team, what does it look like, and if so, are they doing it well. There are a wide range of [engineering practices]({{< ref \"/tags/engineering-practices\" >}}) that I would expect a Scrum Master to guide the team towards which include, but is not limited to: Pair programming, (A)TDD, Refactoring, UI testing, Functional testing, [Continuous Integration]({{< ref \"/tags/continuous-integration\" >}}) (unit, deployment, build, integration, regression, … tests), Performance testing. How would they change their approach if the technical team was at Boeing, or if it was a call centre line-of-business app?\n  > **Scrum Master Service to the Development Team**\n  >\n  > The Scrum Master serves the Development Team in several ways, including:\n  >\n  > - [Coaching]({{< ref \"/tags/coaching\" >}}) the Development Team in self-organization and cross-functionality;\n  > - _Helping the Development Team to create high-value products;_\n  > - Removing impediments to the Development Team’s progress;\n  > - Facilitating Scrum events as requested or needed; and,\n  > - Coaching the Development Team in organizational environments in which Scrum is not yet fully adopted and understood.\n  >\n  > \\-[The Scrum Master, Scrum Guide](https://scrumguides.org/scrum-guide.html#team-sm)\n  > Without technical mastery, I think it would be very difficult to help the development team build high-value products.\n- **Business Mastery** – The Scrum Team, and especially the Product Owner need to understand the business, and how they can optimise the product they are delivering to best support it. Does everyone understand the product qualities that are required within their context? Do you have Quality code base (clean, readable, naming conventions), Valuable functionality only, Architectural conventions respected, According to design/style guide, According to usability standards, Documented, Service levels guaranteed (uptime, performance, response time)? How would you help the Scrum Team get better at meeting the business goals without a keen understanding of what those are?\n  > **Scrum Master Service to the Product Owner**\n  >\n  > The Scrum Master serves the Product Owner in several ways, including:\n  >\n  > - _Ensuring that goals, scope, and product domain are understood by everyone on the Scrum Team as well as possible;_\n  > - Finding techniques for effective [Product Backlog]({{< ref \"/tags/product-backlog\" >}}) management;\n  > - Helping the Scrum Team understand the need for clear and concise Product Backlog items;\n  > - Understanding product planning in an empirical environment;\n  > - _Ensuring the Product Owner knows how to arrange the Product Backlog to maximize value;_\n  > - Understanding and practicing agility; and,\n  > - Facilitating Scrum events as requested or needed.\n  >\n  > \\-[The Scrum Master, Scrum Guide](https://scrumguides.org/scrum-guide.html#team-sm)\n  > Without business mastery how could the Scrum Master ensure that the backlog maximizes value; without the context of the business how can they ensure that everyone understands the goals, scope, and domain?\n- **Organisational Transformational Mastery** – Have you ever tried to change an organization without really understanding the structure, people, and history that led to the current culture and organisation? This is why so many organisational transformations fail. If the Scrum Master really understands the organisation, the people, and the key players that need to come together to effect real change then they can make a difference. Without that knowledge, they have little hope of success.\n  > **Scrum Master Service to the Organization**\n  >\n  > The Scrum Master serves the organization in several ways, including:\n  >\n  > - Leading and coaching the organization in its Scrum adoption;\n  > - Planning Scrum implementations within the organization;\n  > - Helping employees and stakeholders understand and enact Scrum and empirical [product development]({{< ref \"/categories/product-development\" >}});\n  > - Causing change that increases the productivity of the Scrum Team; and,\n  > - _Working with other Scrum Masters to increase the effectiveness of the application of Scrum in the organization_.\n  >\n  > \\-[The Scrum Master, Scrum Guide](https://scrumguides.org/scrum-guide.html#team-sm)\n  > Without organisational transformational mastery, and the context of the organisation there is very little likelihood of real lasting change.\n\nThese masteries for me mean that a Scrum Master needs to be fully familiar with the Technical, Business, and Organisational context within which they are operating and how and when to encourage the Scrum Team to particular practices based on the Scrum Teams and the Organisational maturity.\n\n**Does it sound to you as if the Scrum Master can be awesome if they don’t have technical, business, and [organisational change]({{< ref \"/tags/organisational-change\" >}}) skills?**\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-01-are-technical-skills-required-to-be-a-scrum-master\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-09-01-are-technical-skills-required-to-be-a-scrum-master"
  },
  {
    "FrontMatter": {
      "title": "No Estimates and is it advisable for a Scrum Team to adopt it?",
      "description": "Explores whether Scrum Teams should adopt No Estimates, comparing estimation methods, team maturity, and metrics like cycle time, throughput, WIP, and work item ageing.",
      "date": "2019-08-22",
      "weight": 440.0,
      "slug": "no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it",
      "aliases": [
        "/resources/Lv1CLfk5cPM"
      ],
      "ResourceId": "Lv1CLfk5cPM",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39684,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it",
        "/no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it",
        "/no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it-",
        "/blog/no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it-",
        "/resources/blog/no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it"
      ],
      "concepts": [],
      "categories": [
        "Product Development",
        "Scrum"
      ],
      "tags": [
        "Software Development"
      ],
      "preview": "iStock-847664136-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:14Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\nIn case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n## \\[Question\\] NoEstimates and is it advisable for a [Scrum Team]({{< ref \"/tags/scrum-team\" >}}) to adopt it?\n\n[Estimation]({{< ref \"/tags/estimation\" >}}) is a tricky topic as many folks are heavily invested in it. My feeling is that the value of estimation is not in the resultant numbers, but in the discussion and illuminations that the activity brings to the Scrum Team. They understand more by discussing it than is wasted in the time it takes. As the Scrum Team builds up its inherent knowledge of the product, the market and the technology they these activities should naturally streamline, and anything you can bring as they mature to minimise the waste in this process is a good thing. Remember though, it's not waste if it results in useful learnings.\n\nWhen a Scrum Team is first starting out they have enough on their plate trying to deliver [working software]({{< ref \"/tags/working-software\" >}}) every Sprint to worry about the deep mechanics of Flow. So Story Points and Velocity are a good starting place that provides a balance of the team learning how to communicate and decompose their work. Story Points are easy to understand, easy to implement and great for immature teams. Once the team gets past the basics they need to start thinking about optimisation of their process. At the very least they should be optimising at every Sprint Retrospective and very quickly the question should come up: “Should we keep doing planning poker”. If the question comes up, then the answer is a resounding no!.\n\nOnce a Scrum Team is able to deliver working software at least at the end of every Sprint then they should be ready to start focusing on optimising their Flow. That means dropping Velocity and Story Points in favour of four new metrics that will help them on the next leg of their journey of [continuous improvement]({{< ref \"/tags/continuous-improvement\" >}}):\n\n- [Cycle Time]({{< ref \"/tags/cycle-time\" >}})\n- [Throughput]({{< ref \"/tags/throughput\" >}})\n- WIP\n- Work Item Aging\n\nThese metrics enable the Development Team to start having a lot more interesting conversations about the work that is happening and the state of that work. Once Teams have a few Sprints worth of data they start to realise that to game the metrics they can just reduce the size of PBI. They spend more time looking at Sprint Refinement, the work gets smaller, and their flow gets better. In this new world of small PBI and a greater degree of predictability the need to spend a lot of time on relative sizing disappears and is naturally replaced by boolean sizing. Does a PBI fit or does it not.\n\nMy feeling is that #NoEstimated is one way to do boolean estimation. You can read about [NoEstimates on Ron Jeffers](https://ronjeffries.com/xprog/articles/the-noestimates-movement/) post.\n\nRead the [Kanban Guide for Scrum Teams](https://www.scrum.org/resources/kanban-guide-scrum-teams) and [Actionable Agile Metrics for Predictability from Daniel Vacanti](https://actionableagile.com/publications).\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-08-22-no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-08-22-no-estimates-and-is-it-advisable-for-a-scrum-team-to-adopt-it"
  },
  {
    "FrontMatter": {
      "title": "How do you incorporate a Design Sprint in Scrum?",
      "description": "Explains how to integrate Design Sprint activities within Scrum by embedding design and UX work into regular sprints and backlog refinement, avoiding separate design sprints.",
      "date": "2019-08-16",
      "weight": 540.0,
      "slug": "how-do-you-incorporate-a-design-sprint-in-scrum",
      "aliases": [
        "/resources/MHeGFYrasBx"
      ],
      "ResourceId": "MHeGFYrasBx",
      "ResourceImport": true,
      "ResourceImportSource": "Wordpress",
      "ResourceImportOriginalSource": "Wordpress",
      "ResourceType": "blog",
      "ResourceContentOrigin": "Hybrid",
      "ResourceImportId": 39682,
      "creator": "Martin Hinshelwood",
      "layout": "blog",
      "resourceTypes": "blog",
      "aliasesArchive": [
        "/blog/how-do-you-incorporate-a-design-sprint-in-scrum",
        "/how-do-you-incorporate-a-design-sprint-in-scrum",
        "/how-do-you-incorporate-a-design-sprint-in-scrum-",
        "/blog/how-do-you-incorporate-a-design-sprint-in-scrum-",
        "/resources/blog/how-do-you-incorporate-a-design-sprint-in-scrum"
      ],
      "concepts": [],
      "categories": [
        "Scrum",
        "Product Development"
      ],
      "tags": [
        "Software Development",
        "Agile Frameworks"
      ],
      "preview": "1130646316-1-1-1.jpg",
      "Watermarks": {
        "description": "2025-05-07T13:16:15Z"
      }
    },
    "BodyContent": "As part of the [Scrum]({{< ref \"/categories/scrum\" >}}).org webinar “Ask a [Professional Scrum]({{< ref \"/tags/professional-scrum\" >}}) Trainer - Martin Hinshelwood - Answering Your Most Pressing Scrum Questions” I was asked a number of questions. Since not only was I on the spot and live, I thought that I should answer each question that was asked again here, as well as those questions I did not get to.\n\n> In case you missed it, here is the recording of yesterday's Ask a Professional Scrum Trainer webinar with Martin Hinshelwood! Watch here: [http://ow.ly/ijiM50vwEkD](http://ow.ly/ijiM50vwEkD)\n\n## How do you incorporate a Design Sprint in Scrum?\n\nThere are no special sprints; No Sprint 0, no release sprints, no hardening sprints, and absolutely no design sprints. The teachings of Frederik Winston Taylor lead to a successful Industrial Revolution but are inadequate today for leading knowledge workers solving creative problems. The notion that we need specialist teams of Coders, Testers, Operations, Architects, or UX is founded in those ideas and needs rejecting. As such, the idea that you would need a special Sprint to gain some specialist outcome is also founded in these ideas and is antagonistic to the desired outcome of high-quality [working software]({{< ref \"/tags/working-software\" >}}).\n\nAll work from Development Team members that seem to fall into a specialisation (e.g. UX) is all done in one of two places:\n\n1. **Activities that need to be completed inside of the Sprint, targeting the work towards the current Sprint Goal**This is the work that every Team Member needs to contribute during the Sprint to meet the Sprint Goal. While there are no specialisms there will always be team members that have more skills to bring to bear on that particular activity. The Development Team should learn to leverage those skills to build a better product. So if we need to rework an interaction or come up with a new interaction that we did not know that we needed, then we can do this work in Sprint.\n2. **Activities that pertain to work that will be delivered in future Sprints**Work that is for the future in Scrum is called Refinement and it happens constantly throughout the Sprint. While we want to minimise it as work don’t for something too far in the future that it never makes it to the top of the backlog is waste. We need to balance that with the need to have all the bits in place just in time for the activity for the Sprint Goal to be completed. So if we require to have a UX strategy developed and tested with real users that included Prototyping then that work needs to be done early. Don’t be afraid to build something as right as you can, given the information you have, and iterate as you get real users telemetry.\n\nAll that work that is UX falls into 2 categories:\n\n1. **UX activities that are done inside of the Sprint for the current activities of the Sprint.** This is Development Team work with UX included in that definition.\n2. **UX Activities that pertain to work coming up in future sprints.** This is Refinement work and is done as needed and should include the entire [Scrum Team]({{< ref \"/tags/scrum-team\" >}}) as required.\n\nUltimately no work should be done in a vacuum or away from the scrutiny of the entire team involved in the work. At scale, it makes sense that one of the activities required of the UX Community of Practice is to get the right people together to work on creating reusable and consistent interactions as part of a framework that can then be used as part of a products DoD. This group should not be dedicated and should be made up of representatives from all of the teams to make sure that the information disseminates at Scale.\n\nLinking Team of Teams and Communities of Practice are critical for incorporating all of the skills required to build awesome software.\n\nWhile there are no right answers there are some answers that are better than others. For your given situation select the most right answer and iteration to the best version of it.\n",
    "FilePath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-08-16-how-do-you-incorporate-a-design-sprint-in-scrum\\index.md",
    "FolderPath": "C:\\Users\\MartinHinshelwoodNKD\\source\\repos\\NKDAgility.com\\site\\content\\resources\\blog\\2019\\2019-08-16-how-do-you-incorporate-a-design-sprint-in-scrum"
  }
]
