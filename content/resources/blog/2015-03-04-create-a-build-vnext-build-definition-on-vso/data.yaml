post:
  title: Create a Build vNext build definition
  link: https://nkdagility.com/blog/create-a-build-vnext-build-definition-on-vso/
  pubDate: Wed, 04 Mar 2015 17:37:00 +0000
  creator: MrHinsh
  guid:
    _: http://nakedalmweb.wpengine.com/?p=11047
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p class=\"lead\">I am going to show how to create a Build vNext build definition on VSO. Microsoft recently announced the creation of a brand new build system for TFS and VSO at the Connect event last year. This new build system will eventually replace the current one and be much more modular and friendly. Happily I am in the early adopter program and the product team just made an early alfa of the service available for that program and I have been giving it a spin.</p>\r\n<div class=\"bs-callout bs-callout-info\">\r\n<h4>Download Team Foundation Server 2015 today</h4>\r\n<p>Microsoft has released a CTP of TFS 2015 that includes the vNext build system. You can <a href=\"https://www.visualstudio.com/en-us/downloads/visual-studio-2015-ctp-vs\" target=\"_blank\">download TFS 2015</a> and try it out today. Remember that this is <em>not</em> a go-live version and you should <em>not </em>install it in production.</p>\r\n</div>\r\n<p>Now that we have <a href=\"http://nkdagility.com/configure-a-build-vnext-agent-on-vso/\">configured a Build vNext agent</a> we can get on with the job of creating a build. I had hoped that for my <a href=\"http://nkdagility.com/ndc-london-2014-why-tfs-no-longer-sucks-and-vso-is-awesome/\">demo at NDC London last month</a> that I would have been able to use this but it took an extra month for the product team to get the Alfa ready. This is really just part of the realities of software development that we can't know how long something will take until its done.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"Create a vNext Build on VSO\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image001.png\" alt=\"Create a vNext Build on VSO\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>There are a number of out-of-the-box templates available and I believe that there will be more by launch. For my FabirikamFiber site I will be using the standard \"Visual Studio\" definition.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image002\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image002.png\" alt=\"clip_image002\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>You will get dropped out at Build tab of the \"New Visual Studio definition 1\" definition that has been created for you. Here you can add new tasks and configure them, which we will discuss in a moment.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image003\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image003.png\" alt=\"clip_image003\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>This has not yet been saved, so the first thing I am going to do is save my detention with a little more memorable name.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image004\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image004.png\" alt=\"clip_image004\" width=\"661\" height=\"418\" border=\"0\" /></p>\r\n<p>Back at the \"Task\" list you can click \"Add new task\" to get a list of all of the available tasks. This is probably pretty close to the list of tasks that we will see initially when the preview becomes more generally available and it is extensive:</p>\r\n<ul>\r\n<li><b>Android Build</b> - Run an Android build using Gradle and optionally start the emulator for unit tests.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image005\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image005.png\" alt=\"clip_image005\" width=\"400\" height=\"157\" border=\"0\" /></p>\r\n</li>\r\n<li><b>CMake</b> - Cross platform build system. I have never used it but it really does sound handy.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image006\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image006.png\" alt=\"clip_image006\" width=\"400\" height=\"111\" border=\"0\" /></p>\r\n</li>\r\n<li><b>Cmd Script</b> - Run a Windows cmd or batch script and optionally allow it to change the environment\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image007\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image007.png\" alt=\"clip_image007\" width=\"400\" height=\"151\" border=\"0\" /></p>\r\n</li>\r\n<li><b>Jake</b> - Javascript build tool, similar to Make or Rake. Built to work with Node.js\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image008\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image008.png\" alt=\"clip_image008\" width=\"400\" height=\"125\" border=\"0\" /></p>\r\n</li>\r\n<li><b>MSBuild</b> - Build with MSBuild; In the pre-2010 builds everything was done in MSBuild and in 2010+ (XAML Builds) these build types were only supported in the legacy build template, \"UpgradeTemnplate.xaml\". You do not need Visual Studio installed to execute this, but your compilation might.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image009\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image009.png\" alt=\"clip_image009\" width=\"400\" height=\"217\" border=\"0\" /></p>\r\n</li>\r\n<li><b>Visual Studio Build</b> - This build is executed through Visual Studio and should run in the same way that it would locally.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image010\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image010.png\" alt=\"clip_image010\" width=\"400\" height=\"238\" border=\"0\" /></p>\r\n</li>\r\n<li><b>VSTest</b> - You can run tests using the Visual Studio Test Runner. This runner will load tests from any framework that has a test adapter so it supports; MS Test, jUnit, xUnit, mbUnit, and others.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image011\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image011.png\" alt=\"clip_image011\" width=\"400\" height=\"108\" border=\"0\" /></p></li>\r\n<li><b>Xcode Build</b> - This task allows you to build an Xcode project with the xcodebuild tool. Microsoft has had a new strategy for a while to support everyone else's stuff and as they release new versions of their products is it becoming more and more obvious that this is no longer a case of lip service.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image012\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image012.png\" alt=\"clip_image012\" width=\"400\" height=\"197\" border=\"0\" /></p>\r\n</li>\r\n<li><b>PowerShell</b> - Need to run a PowerShell? In TFS 2013 the build workflows were simplified to allow PowerShell both post and pre build as well as post and pre-test. Now you can insert a task any place you like in the build process. PowerShell will let you do anything from moving files around to manipulating the build numbers.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image013\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image013.png\" alt=\"clip_image013\" width=\"400\" height=\"128\" border=\"0\" /></p>\r\n</li>\r\n<li><b>Process Runner</b> - Is the logic that you need to run wrapped up in an executable? Use the Process Runner to execute any executable process.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image014\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image014.png\" alt=\"clip_image014\" width=\"400\" height=\"170\" border=\"0\" /></p>\r\n</li>\r\n<li><b>Azure Cloud Service Deployment via PowerShell</b> – Just like the old Xaml templates to do the same job here is a pre-configured PowerShell command to do the deployment. You can always create a customer PowerShell is you need it, but this is a helper.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image015\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image015.png\" alt=\"clip_image015\" width=\"400\" height=\"240\" border=\"0\" /></p>\r\n</li>\r\n<li><b>Azure PowerShell</b> – Do you ever feel the need to run some PowerShell on one of your servers as part of a build? I don't, as I use Release Management for environmental bits, but if you have an immature build process you may need this.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image016\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image016.png\" alt=\"clip_image016\" width=\"400\" height=\"124\" border=\"0\" /></p>\r\n</li>\r\n<li><b>Azure Web Site Deployment via PowerShell</b> – I just want to deploy my website to azure! Well here you you go.\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image017\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image017.png\" alt=\"clip_image017\" width=\"400\" height=\"141\" border=\"0\" /></p>\r\n</li>\r\n</ul>\r\n<p>This is just the list that is available in the preview, which is alfa. The plan, as I currently understand it, is to make this extensible so that you can create any sort of tasks that you like and have them listed in the system. At the moment however there is no way to do this and I am not sure when this will happen.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image018\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image018.png\" alt=\"clip_image018\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>The second tab is the \"Options\" tab. This is a list of general options that applicable to any build that you would run. Here we can select:</p>\r\n<ul>\r\n<li><strong>MultiConfiguration</strong> - This allows us to build more than one configuration as part of the same pass. You can even elect to run them in parallel. You just enter the same name that you have in the configuration pick-list in Visual Studio to either build more than one, or something other than the default. I have used this before to have websites built locally use different parameters than those built on the server. That way I can have my local developer setting built by default, and then have things like the connection string replaced at compilation time with a generic \"__connectionStrong__\" value for Release management.</li>\r\n<li><strong>Copy to Staging Folder</strong> - In previous versions of Team Build this was more or less a non-optional step as the VS Test platform needed all of the files copied to the staging location for testing. Now you can control both what files are picked up and where to. This will be very useful for output that is not the traditional \"bin\" output.</li>\r\n<li><strong>Create Build Drop</strong> - You might ask why you would not want to have a build drop created but I have seen this for teams with large output and many CI's. I may not need all the output. The traditional option here is to drop everything onto a network share with a UNC path. However TFS 2012 introduced the concept of a \"Server drop\". This is where the build output is stored as a zip files inside TFS. The advantage to this is that you have one location to backup as the build output is an organisational asset. I prefer server drops every time.</li>\r\n</ul>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image019\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image019.png\" alt=\"clip_image019\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>Currently the new Team Build vNext system only support Git as the source repository, but you can also select Github and point to any repository that you like. Although I have not tried it I believe that it will support any Git repository that uses the same protocols as GitHub. Nice…</p>\r\n<p>Info: VSO Build vNext has built in support for GitHub builds</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image020\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image020.png\" alt=\"clip_image020\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>In addition to where to get the source code from you may need to create some custom variables that will be available as part of the build. These would be available in your scripts and any other location. There are some enforced variables and most are configurable.</p>\r\n<p>You may use this to inject an option like \"HardenPlatfrorm\" that takes a Boolean option and you can then use that in your scripts and commands to choose wither you apply your application hardening techniques for piracy protection. Allows you to easily turn it off and on per build...</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image021\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image021.png\" alt=\"clip_image021\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>At the moment the only trigger available is \"Continuous Integration\" or CI. I would expect in the future to maintain the ability to Schedule builds as well and I really like the fact that you select it with a check-box rather than a radio-button. That bodes well for the future.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image022\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image022.png\" alt=\"clip_image022\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>\"General\" configuration contains the last few nuggets of usefulness. First is the pre-defined default queue and maybe a description for the build. I am hoping that we can dynamically update the build number from within the tasks as this is what the majority of my customers want. It just makes sense, to me, to be able to have the build number reflect the version of the code that is being built.</p>\r\n<p>For TFVC I normally change the build number to be something like \"1.3.$(YY)$(DayofYear)$(rev:.r)\" which would produce something like \"1.3.15001.1\" as the build number. I would then have a PowerShell that stripped that build number and used it for the DLL's and the Nuget packages that are produced as part of the build. This works great when we have a single build definition per branch.</p>\r\n<p>However, for Git we need something a little different. With Git builds we build all branches (potentially) with the same build definition. So here we want to have a file checked into the branch that has the filter above so that it can be different per branch. That means that the first thing that we need to do as part of the build is to have a PowerShell execute that reads that file and changes the build name in TFS to match. We will see if that is possible in the new build system as it was hard, but not impossible, in the old one.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image023\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image023.png\" alt=\"clip_image023\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>Finally, a much requested feature. Most folks want to do a little bit of audit on their build configuration as from some reason folks go in there and change stuff. Now you will know not only who did the change but what they changed. Just above the entry is a little \"Diff\" button…</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image024\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image024.png\" alt=\"clip_image024\" width=\"762\" height=\"418\" border=\"0\" /></p>\r\n<p>…Where you get a full diff of the configuration changes that were made between edits. This makes it really easy to see what was changed and the comment should give you an idea of why. Here you can see that I added a trigger of type 2 (CI).</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image025\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image025.png\" alt=\"clip_image025\" width=\"661\" height=\"418\" border=\"0\" /></p>\r\n<p>You now have a build definition configured and you can queue a new build. You can see the Associated commits and other information coming in immediately and there is a new real-time (kinda) command window where it shows the status of the build as it executes.</p>\r\n<h3>Conclusion</h3>\r\n<p>All in all I am very impressed with the current system. My only issue, as you see the build failed above, is that I get a PowerShell version miss match during execution. This may be due to me using Windows Server Technical Preview as by build platform and I have reached out to the awesome build guys to find out what the issue is. In the mean time I will likely build out a Server 2012 R2 to do more testing…</p>"
  - >-
    <p class="lead">I am going to show how to create a Build.vNext build
    definition on VSO. Microsoft recently announced the creation of a brand new
    build system for TFS and VSO at the Connect event last year. This new build
    system will eventually replace the current one and be much more modular and
    friendly. Happily I am in the early adopter program and the product team
    just made an early alfa of the service available for that program and I have
    been giving it a spin.  </p>
  post_id: '11047'
  post_date: '2015-03-04 17:37:00'
  post_date_gmt: '2015-03-04 17:37:00'
  post_modified: '2015-03-05 11:01:37'
  post_modified_gmt: '2015-03-05 11:01:37'
  comment_status: open
  ping_status: open
  post_name: create-a-build-vnext-build-definition-on-vso
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _yoast_wpseo_focuskw
    meta_value: Build vNext build
  - meta_key: _syn_slave_post_states
    meta_value: a:0:{}
  - meta_key: _yoast_wpseo_linkdex
    meta_value: '72'
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1xUH3iU
  - meta_key: _thumbnail_id
    meta_value: '11141'
  - meta_key: _pagelines_gallery_slider
    meta_value: 'off'
  - meta_key: _pagelines_quote
    meta_value: ''
  - meta_key: _pagelines_link
    meta_value: ''
  - meta_key: _pagelines_video_m4v
    meta_value: ''
  - meta_key: _pagelines_video_ogv
    meta_value: ''
  - meta_key: _pagelines_video_poster
    meta_value: ''
  - meta_key: _pagelines_video_embed
    meta_value: ''
  - meta_key: _pagelines_audio_mp3
    meta_value: ''
  - meta_key: _pagelines_audio_ogg
    meta_value: ''
  - meta_key: _oembed_fa07f62bbee3912f5bb3d6c9b3fdc3ba
    meta_value: '{{unknown}}'
  - meta_key: dsq_thread_id
    meta_value: '3566295963'
  - meta_key: _pl_karma
    meta_value: '0'
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474923656;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:11021;}i:1;a:1:{s:2:"id";i:11081;}i:2;a:1:{s:2:"id";i:11097;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2015-03-04-create-a-build-vnext-build-definition-on-vso.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '1746'
  comment:
  - comment_id: '11212'
    comment_author: AimeR
    comment_author_email: aimer_bg@hotmail.com
    comment_author_url: ''
    comment_author_IP: 77.70.65.86
    comment_date: '2015-03-04 21:29:00'
    comment_date_gmt: '2015-03-04 21:29:00'
    comment_content: >-
      MSBuild – Build with MSBuild; this is equivalent to the old legacy builds
      from pre-2010 days. 




      The pre-2010 build definitions used MSBuild scripts to get the source
      code, run tests and a whole lot of other stuff, which I would suspect
      would be in conflict with the statement that the new build system only
      supports Git as a source control provider.


      It sounds like this option is the 2010-2013 default build template. It
      would be odd not to have that somewhere in there (those templates DO NOT
      use Visual Studio to build your projects). It sounds much more logical for
      the TFS guys to have dropped support for pre-2010 templates rather than
      basic MSBuild calls.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1887672132'
  - comment_id: '11213'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 84.212.194.116
    comment_date: '2015-03-04 21:43:00'
    comment_date_gmt: '2015-03-04 21:43:00'
    comment_content: Yea, some context got lost there. I will fix it tomorrow....
    comment_approved: '1'
    comment_type: comment
    comment_parent: '11212'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1887672132'
    - meta_key: dsq_post_id
      meta_value: '1887696563'
  - comment_id: '11229'
    comment_author: Dew Drop &#8211; March 5, 2015 (#1968) | Morning Dew
    comment_author_email: ''
    comment_author_url: http://www.alvinashcraft.com/2015/03/05/dew-drop-march-5-2015-1968/
    comment_author_IP: 168.62.48.19
    comment_date: '2015-03-05 13:14:34'
    comment_date_gmt: '2015-03-05 13:14:34'
    comment_content: >-
      [&#8230;] Create a Build vNext build definition (Martin Hinshelwood)
      [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1425561275.026321;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1426144195.547288;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '11237'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 84.212.194.116
    comment_date: '2015-03-05 20:21:00'
    comment_date_gmt: '2015-03-05 20:21:00'
    comment_content: I have updated... can you see if it makes more sense?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '11212'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1887672132'
    - meta_key: dsq_post_id
      meta_value: '1890207059'
  - comment_id: '11270'
    comment_author: Philippe
    comment_author_email: pmiossec@gmail.com
    comment_author_url: ''
    comment_author_IP: 88.162.235.38
    comment_date: '2015-03-06 23:03:00'
    comment_date_gmt: '2015-03-06 23:03:00'
    comment_content: >-
      These evolutions, longly awaited, are very promising! I hope it will easy
      a lot of things with tfs...

      And I hope it will be possible to trigger a build based on the result of a
      previous build. A feature highly desired!!!


      &gt;However TFS 2012 introduced the concept of a “Server drop”. This is 

      where the build output is stored as a zip files inside TFS. The 

      advantage to this is that you have one location to backup as the build 

      output is an organisational asset. I prefer server drops every time.


      One of the multiple bad practices that Tfs encourage by letting the user
      check in binaries files in source control :( As a consequence, your
      database become huge and is difficult to backup, store,...

      A notion that is difficult to understand by tfs users because "that's
      possible..." And that's like that that you end up with huge workspaces to
      checkout :(


      I'm pretty sure that you do that because "Release management" push you to
      do that. That's why I highly prefer "Octopus Deploy" (even if it's not a
      Microsoft software) because it enforce you to use good practicies like
      building nuget packages and store them OUTSIDE of Tfs. This software
      really worth the try and id MUCH more easier and powerfull than "Release
      Management"...


      To return on the original subject, with git and the new build system, Tfs
      will at last replace (or propose an alternative) to its two worst pieces.
      Will become interesting (for those like my that are obliged to work with
      that tool!)
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1892724344'
  - comment_id: '11348'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 87.252.86.170
    comment_date: '2015-03-11 07:09:00'
    comment_date_gmt: '2015-03-11 07:09:00'
    comment_content: >-
      @pmiossec:disqus , the "Server Drop" is not in source control. You are
      thinking of the "Store drop in Version Control" option that shipped with
      TFS 2012 but was quickly surpassed by the "Server Drop" location in VSO
      and shipped in 2013. 

      Server Drops are not stored in Source Control and instead are stored in a
      separate un-versioned repository inside of TFS. Its like a network share,
      except that it is backed up along with the rest of your organisational
      assets. This would be the recommended place to store your drops.

      I like Nuget packages too (not always for deployment) and at Connect()
      Microsoft announced that TFS would have a built in Nuget server. As an
      aside, the Nuget packages on the server will likely also be stored in that
      un-versioned store that was specifically designed for loose (ish) files.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '11270'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1892724344'
    - meta_key: dsq_post_id
      meta_value: '1900718796'
  - comment_id: '11351'
    comment_author: >-
      Using the Build vNext capabilities and demands system | naked ALM -
      Experts in ALM, TFS &amp; lean-agile with Scrum
    comment_author_email: ''
    comment_author_url: http://nkdagility.com/using-build-vnext-capabilities-demands-system/
    comment_author_IP: 97.107.139.31
    comment_date: '2015-03-11 14:10:14'
    comment_date_gmt: '2015-03-11 14:10:14'
    comment_content: >-
      [&#8230;] can now create a Build vNext build definition and configure the
      capabilities as you see above. On the General tab there is a list of
      Demands for [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1426083014.609776;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1426144187.049062;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '11434'
    comment_author: Alon Amsalem
    comment_author_email: alon.amsalem@gmail.com
    comment_author_url: ''
    comment_author_IP: 91.231.192.149
    comment_date: '2015-03-15 07:44:00'
    comment_date_gmt: '2015-03-15 07:44:00'
    comment_content: This looks very much like TeamCity build configuration style
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1907947947'
  - comment_id: '11635'
    comment_author: LECOQ Vincent
    comment_author_email: vincent.lecoq@gmail.com
    comment_author_url: ''
    comment_author_IP: 82.235.225.243
    comment_date: '2015-03-28 21:12:00'
    comment_date_gmt: '2015-03-28 21:12:00'
    comment_content: >-
      Bonjour Philippe,



      Je cherche à te contacter suite au commentaire que tu avais posté sur
      korben.info au sujet d'un concours raspberry pi organisé par microsoft.

      J'ai bien participé, enregistré mon site et reçu la confirmation.
      Cependant Strictement aucune nouvelle depuis la fin du concours et je ne
      trouve aucun moyen de les contacter pour savoir ce qui se passe.


      As tu complété la procédure de ton coté ? si oui as tu eu des retours ?


      Merci.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '11270'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1892724344'
    - meta_key: dsq_post_id
      meta_value: '1933589469'
  - comment_id: '12253'
    comment_author: Venkata Sai
    comment_author_email: venkat5b3@gmail.com
    comment_author_url: ''
    comment_author_IP: 167.220.236.22
    comment_date: '2015-06-10 06:24:00'
    comment_date_gmt: '2015-06-10 05:24:00'
    comment_content: >-
      Hi Martin

      I am looking for some guidance on building a consolidated build definition
      using Build vNext like we do in XAML build system using master template
      i.e.Invoking other builds as part of this build.Would you be able to guide
      me to any article that you have already written?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2071294257'
  - comment_id: '12524'
    comment_author: Dominic Perreault
    comment_author_email: doum.perreault@gmail.com
    comment_author_url: ''
    comment_author_IP: 199.84.132.4
    comment_date: '2015-06-26 18:43:00'
    comment_date_gmt: '2015-06-26 17:43:00'
    comment_content: >-
      What's really missing is to be able to interact with the build past the
      Staging and Dropping build dont you think?


      It's way easy to launch scripts during the build process but it doesn't
      seem to be a way to launch scripts after the build is dropped in the
      DropFolder. For deployement for exemple...


      Just the way TfvcTemplate.12.2.xaml would allow with the Pre and PostDrop
      powershell scripts.


      Have you found a way to do so?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2101798667'
  - comment_id: '12549'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 82.12.112.139
    comment_date: '2015-06-28 10:14:00'
    comment_date_gmt: '2015-06-28 09:14:00'
    comment_content: >-
      The TfvcTemplate.12.2 allows post-compile and post-test, but no post Drop.
      You should really look at Release Management for deployment through a
      pipeline and only use a deployment from build for your Development Teams
      CD. You get RM with VSO is you are deploying to Azure.


      The new build system in VSO and TFS 2015 will come with an integrated set
      of deployment tools and capabilities that were announced at Build.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12524'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2101798667'
    - meta_key: dsq_post_id
      meta_value: '2104700640'
  - comment_id: '12550'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 82.12.112.139
    comment_date: '2015-06-28 10:18:00'
    comment_date_gmt: '2015-06-28 09:18:00'
    comment_content: >-
      You would do all of that in PowerShell. I will be building this out for a
      customer that does 40k builds a month on a single product in Q4. I will be
      posting on all of my findings and troubles :)
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12253'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2071294257'
    - meta_key: dsq_post_id
      meta_value: '2104702935'
  - comment_id: '12552'
    comment_author: Dominic Perreault
    comment_author_email: doum.perreault@gmail.com
    comment_author_url: ''
    comment_author_IP: 184.163.169.213
    comment_date: '2015-06-28 13:48:00'
    comment_date_gmt: '2015-06-28 12:48:00'
    comment_content: >-
      The TfvcTemplate.12.xaml only allows Pre/Post Build and Pre/Post Test
      while the TfvcTemplate.12.2.xaml added the Pre/Post Drop exactly for using
      RM with the vNext Release Template which are triggered from a REST API. We
      are using RM since it was named InRelease from InCycle we kinda know a lot
      about it :)


      We needed to change the build process template from 12 to 12.2 to use the
      PostDrop sequence because the build process "ReleaseTfvcTemplate.12.xaml"
      shipped with RM 2013 Update 1 or 2 was only a an "Agent Based" deployement
      scenario. When we moved from agent based scenarios to Powershell based
      deployement we searched for a new way to trigger the release attached to
      the build sequence.


      Here's what we found:
      http://blogs.msdn.com/b/visualstudioalm/archive/2014/10/10/trigger-release-from-build-with-release-management-for-visual-studio-2013-update-3.aspx
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12549'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2104700640'
    - meta_key: dsq_post_id
      meta_value: '2104889714'
  - comment_id: '12658'
    comment_author: Jaans
    comment_author_email: johann@hough.email
    comment_author_url: ''
    comment_author_IP: 14.202.40.142
    comment_date: '2015-07-13 13:10:00'
    comment_date_gmt: '2015-07-13 12:10:00'
    comment_content: >-
      Just gave TFS2015 Build vnext a go with VS Online. Deployed an agent and
      all seemed to go well until the Restore of Nuget packages failed. The
      failure was due to custom/private package source not being picked up from
      the installed VS configuration, so those packages could not be found.



      How do I specify the additional package sources for NuGet to use when
      using an agent?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2133165578'
  - comment_id: '12660'
    comment_author: Jaans
    comment_author_email: johann@hough.email
    comment_author_url: ''
    comment_author_IP: 14.202.40.142
    comment_date: '2015-07-13 13:55:00'
    comment_date_gmt: '2015-07-13 12:55:00'
    comment_content: >-
      OK It seems that the package sources configured for NuGet.config is stored
      per user account, e.g. c:Users&lt;&gt;AppDataRoamingNuGetNuGet.config


      My issue is I'm using the system account, so the following path is what
      you'll need:

      C:WindowsSysWOW64configsystemprofileAppDataRoamingNuGetNuGet.Config


      PS: This info was very hard to come by!
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12658'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2133165578'
    - meta_key: dsq_post_id
      meta_value: '2133219218'
  - comment_id: '12663'
    comment_author: Peter
    comment_author_email: peter.seehaus@sew-eurodrive.de
    comment_author_url: ''
    comment_author_IP: 194.180.1.201
    comment_date: '2015-07-13 16:49:00'
    comment_date_gmt: '2015-07-13 15:49:00'
    comment_content: >-
      I am wondering, if there is a discription of the variables where I can get
      build information like the changeset number (and other things) the agent
      is building to make this information available in my program.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2133557524'
  - comment_id: '12665'
    comment_author: Dominic Perreault
    comment_author_email: doum.perreault@gmail.com
    comment_author_url: ''
    comment_author_IP: 199.84.132.4
    comment_date: '2015-07-13 17:50:00'
    comment_date_gmt: '2015-07-13 16:50:00'
    comment_content: >-
      Hi Peter,


      Here's the documentation if you use XAML build system:


      https://msdn.microsoft.com/en-ca/library/hh850448.aspx


      Here's the documentation if you use the new Build vNext system:


      https://msdn.microsoft.com/Library/vs/alm/Build/scripts/variables?f=255&amp;MSPPError=-2147217396
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12663'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2133557524'
    - meta_key: dsq_post_id
      meta_value: '2133708453'
  - comment_id: '12671'
    comment_author: Peter
    comment_author_email: peter.seehaus@sew-eurodrive.de
    comment_author_url: ''
    comment_author_IP: 194.180.1.201
    comment_date: '2015-07-14 07:03:00'
    comment_date_gmt: '2015-07-14 06:03:00'
    comment_content: |-
      Hi Dominic,
      Thanks a lot. That is exactly what I am looking for.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12665'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2133708453'
    - meta_key: dsq_post_id
      meta_value: '2135339122'
  - comment_id: '12837'
    comment_author: Venkata Sai
    comment_author_email: venkat5b3@gmail.com
    comment_author_url: ''
    comment_author_IP: 167.220.236.9
    comment_date: '2015-07-30 07:11:00'
    comment_date_gmt: '2015-07-30 06:11:00'
    comment_content: >-
      Hi Martin,

      I am creating a Build definition for a solution which has both web apps
      and Cloud services.I wanted to create a single build step and individual
      deployment for each component.I am using Visualstudio Build step.But I am
      facing some issues with MS Build parameters as they are different for
      bothweb apps and cloud services.Is there any way to achieve that?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12550'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2104702935'
    - meta_key: dsq_post_id
      meta_value: '2164645745'
  - comment_id: '12966'
    comment_author: Matthew Cole
    comment_author_email: mattc@kjr.com.au
    comment_author_url: ''
    comment_author_IP: 58.161.247.92
    comment_date: '2015-08-12 00:57:00'
    comment_date_gmt: '2015-08-11 23:57:00'
    comment_content: >-
      Hi Martin,

      Have just upgraded an on-prem tfs to 2015, and configured the new builds,
      but it appears I have 'broken' reporting. none of the new builds are
      showing in our SSRS Reports for the build quality, or build success over
      time? Any Ideas where I may have messed up?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2187698674'
  - comment_id: '12974'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 62.92.230.142
    comment_date: '2015-08-12 13:29:00'
    comment_date_gmt: '2015-08-12 12:29:00'
    comment_content: >-
      The data from the new build system does not end up in the Data Warehouse,
      and thus not in the cube either. You need to go through the REST API for
      this...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12966'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2187698674'
    - meta_key: dsq_post_id
      meta_value: '2188401801'
  - comment_id: '12981'
    comment_author: Matthew Cole
    comment_author_email: mattc@kjr.com.au
    comment_author_url: ''
    comment_author_IP: 202.146.24.22
    comment_date: '2015-08-13 01:10:00'
    comment_date_gmt: '2015-08-13 00:10:00'
    comment_content: >-
      ahh, that would explain it then.

      Do you know if MS have any plans to include said data in to the warehouse
      and hence the cube? (because i know you have contacts)
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12974'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2188401801'
    - meta_key: dsq_post_id
      meta_value: '2189807710'
  - comment_id: '12983'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 62.92.230.142
    comment_date: '2015-08-13 08:05:00'
    comment_date_gmt: '2015-08-13 07:05:00'
    comment_content: >-
      I have no special insight on this subject but based on history to date, I
      don't believe that there will be any future investments in the current
      data warehouse and cube. There has been no investment in new data in there
      since 2010 and that smacks of a feature in maintenance mode. The team seam
      to be focusing on surfacing data via a fast and efficient REST API. I
      would focus my efforts on data retrieval from the Rest API...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12981'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2189807710'
    - meta_key: dsq_post_id
      meta_value: '2190208742'
  - comment_id: '13989'
    comment_author: Allen
    comment_author_email: zlphoenix@gmail.com
    comment_author_url: ''
    comment_author_IP: 60.213.186.250
    comment_date: '2016-05-30 04:15:00'
    comment_date_gmt: '2016-05-30 03:15:00'
    comment_content: >-
      How can I get Build status(succeed or failed) in Build Task such as
      command line Task?Are there any Build variable to get this status?I have a
      task to do something that is different when status is succeed or failed.
      Thanks a lot.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2702341086'
  - comment_id: '13990'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 193.213.57.165
    comment_date: '2016-05-30 05:31:00'
    comment_date_gmt: '2016-05-30 04:31:00'
    comment_content: >-
      Allan, if you go to the Variables tab on your build there is a link at the
      top that takes you to a list of all available build variables.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13989'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2702341086'
    - meta_key: dsq_post_id
      meta_value: '2702404108'
  - comment_id: '14050'
    comment_author: xxxdevxxx
    comment_author_email: bert.sachs@live.de
    comment_author_url: ''
    comment_author_IP: 81.200.198.120
    comment_date: '2016-06-24 09:59:00'
    comment_date_gmt: '2016-06-24 08:59:00'
    comment_content: >-
      Well, i don't really understand how they can make a distinction between
      OLAP and a REST Query that is servered by the collection database.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12983'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2190208742'
    - meta_key: dsq_post_id
      meta_value: '2748000643'
  - comment_id: '14143'
    comment_author: Allen
    comment_author_email: zlphoenix@gmail.com
    comment_author_url: ''
    comment_author_IP: 176.58.122.22
    comment_date: '2016-10-29 04:26:00'
    comment_date_gmt: '2016-10-29 03:26:00'
    comment_content: Thanks
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13990'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2702404108'
    - meta_key: dsq_post_id
      meta_value: '2974242151'
