post:
  title: >-
    When should I use Areas in TFS instead of Team Projects in Team Foundation
    Server 2010
  link: >-
    https://nkdagility.com/blog/when-should-i-use-areas-in-tfs-instead-of-team-projects-in-team-foundation-server-2010/
  pubDate: Tue, 09 Mar 2010 12:27:20 +0000
  creator: MrHinsh
  guid:
    _: >-
      http://geekswithblogs.net/hinshelm/archive/2010/03/09/when-should-i-use-areas-in-tfs-instead-of-team.aspx
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p class=\"lead\">Well, it depends… If you are a small company that creates a finite number of internal projects then you will find it easier to create a single project for each of your products and have TFS do the heavy lifting with reporting, SharePoint sites and Version Control.</p>\r\n<p>But what if you are not…</p>\r\n<div id=\"accordion2\" class=\"accordion\">\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120814\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 14th August 2012 - Superseded</a></div>\r\n<div id=\"update20120814\" class=\"accordion-body collapse in\">\r\n<div class=\"accordion-inner\">\r\n<p>I have updated this as <a title=\"One Team Project with Visual Studio 2012\" href=\"http://blog.hinshelwood.com/one-team-project/\" target=\"_blank\">One Team Project for Visual Studio 2012</a>.</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120413-3\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 13th April 2010 - feedback incorporated </a></div>\r\n<div id=\"update20120413-3\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p><a href=\"http://sharepoint.ssw.com.au/AboutUs/Employees/Pages/Paul.aspx\" target=\"_blank\">Paul Neumeyer</a> – I asked Paul for a comment, and true to form he wrote an essay and with an evening with Sam Guckenheimer firing his blood it’s a good un’..</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120413-2\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 13th April 2010 - Content update</a></div>\r\n<div id=\"update20120413-2\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p><a href=\"http://sharepoint.ssw.com.au/AboutUs/Employees/Pages/Eric.aspx\" target=\"_blank\">Eric Phan</a>, <a href=\"http://sharepoint.ssw.com.au/AboutUs/Employees/Pages/Paul.aspx\" target=\"_blank\">Paul Neumeyer</a> – After having long discussions with Eric and Paul I have added strategy for Migration to new process templates and of archiving old projects.</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120413-1\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 13th April 2010 - Content update</a></div>\r\n<div id=\"update20120413-1\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p>I ran into the problem of not being able to find a build called “Build” and had to search through 172 projects to find it. With Areas there would be substantially less projects to search. A good naming convention would also work <img class=\"wlEmoticon wlEmoticon-smile\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-WindowsLiveWriter-e81a0b914d47_8DFC-wlEmoticon-smile_2.png\" alt=\"Smile\" /></p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120408\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 8th April 2010 - Content update</a></div>\r\n<div id=\"update20120408\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p><a href=\"http://ognjenbajic.com/blog\" target=\"_blank\">Ognjen Bajic</a> – Ognjen from Ekobit who make <a href=\"http://www.ekobit.com/productsdetailview.aspx?id=1\" target=\"_blank\">Team Companion</a> made some comments that I found useful, which I have added.</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120311\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 11th March 2010 - Content update</a></div>\r\n<div id=\"update20120311\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p><a href=\"http://adamcogan.com/\" target=\"_blank\">Adam Cogan</a> – Adam suggested I get our disagreement out in the open, improve the proposed solution description with some visual cues and move the Pros and Cons to the top. Last but not least, to plug out custom TFS template :)</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120309-3\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 9th March 2010 - feedback incorporated </a></div>\r\n<div id=\"update20120309-3\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p><a href=\"http://www.ewaldhofman.nl/\" target=\"_blank\">Ewald Hofman</a> gave me a couple of Cons, and maybe a few more soon. Ewald’s company, Avanade, currently uses Areas, but it looks like the manual management is getting too much and the project is getting cluttered.</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120309-2\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 9th March 2010 - feedback incorporated </a></div>\r\n<div id=\"update20120309-2\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p><a href=\"http://www.freetodev.com/\" target=\"_blank\">Michael Fourie</a> gave me some feedback which I have integrated.</p>\r\n</div>\r\n</div>\r\n</div>\r\n<div class=\"accordion-group\">\r\n<div class=\"accordion-heading\"><a class=\"accordion-toggle\" href=\"#update20120309-1\" data-parent=\"#accordion2\" data-toggle=\"collapse\">Update - 9th March 2010 - feedback incorporated </a></div>\r\n<div id=\"update20120309-1\" class=\"accordion-body collapse\">\r\n<div class=\"accordion-inner\">\r\n<p><a href=\"http://www.edsquared.com\" target=\"_blank\">Ed Blankenship</a> via <a href=\"http://twitter.com/edblankenship/status/10221184645\" target=\"_blank\">@edblankenship</a> offered encouragement and a nice quote.</p>\r\n</div>\r\n</div>\r\n</div>\r\n</div>\r\n<hr />\r\n<p>What if you are likely to have hundreds of projects, possibly with a multitude of internal and external projects? You might have 1 project for a customer or 10. This is the situation that most consultancies find themselves in and thus they need a more sustainable and maintainable option. What I am advocating is that we should have 1 “Team Project” per customer, and use areas to create “sub projects” within that single “Team Project”.</p>\r\n<blockquote>\r\n<p>\"<em>What you describe is what we generally do internally and what we recommend. We make very heavy use of area path to categorize the work within a larger project</em>.\" <br /> - <strong><a href=\"http://blogs.msdn.com/bharry/\" target=\"_blank\">Brian Harry</a></strong>, Microsoft Technical Fellow &amp; Product Unit Manager for Team Foundation Server</p>\r\n</blockquote>\r\n<p>This post has an ulterior motive as I am having this debate with my boss, Adam Cogan, and we both decided that we wanted to find out what the community at large thinks of this approach to managing projects in TFS. Adam thinks this is a bad idea as it is not supported “out-of-the-box”, and I think that a lot of things are not supported “out-of-the-box” in TFS which never the less, are a good idea, including this one.</p>\r\n<blockquote>\r\n<p>I’ve been a big advocate of using a single project per client for years because from experience a client will want to merge products or&nbsp; have their name changed, a component form their existing project code base a client will want to ‘spin-off’ as a separate product with a different team without losing any work items or history, and there are always tasks that development teams can’t decide where to put when there are multiple, but related products in separate TFS projects.&nbsp; All of that is easier with a&nbsp; single project per client and using Areas.&nbsp; Last night I spent an evening with Sam Guckenheimer and it is clear his vision of TFS was always targeted at a lot more that source control and a task tracking, TFS is a flexible application lifecycle management (ALM) system that if setup with Areas can streamline the decade+ lifecycle of interaction between developers and the guys with budget that is the reality we live in. <br /> -<a href=\"http://sharepoint.ssw.com.au/AboutUs/Employees/Pages/Paul.aspx\" target=\"_blank\">Dr Paul Neumeyer</a>, Ph.D Parallel Processes, ScrumMaster and SSW Solution Architect</p>\r\n</blockquote>\r\n<blockquote>\r\n<p>Using areas in existing team project instead of creating a new team project (a.k.a. “prefer small number of big team projects over large number of small team projects”) has been established best practice for long time. Microsoft works that way internally and they recommend everyone should. We use it internally and all of our partners have been thought to use it as well. <br /> <a href=\"http://ognjenbajic.com/blog\" target=\"_blank\"><strong>Ognjen Bajic</strong></a>, Visual Studio ALM MVP, Ekobit</p>\r\n</blockquote>\r\n<blockquote>\r\n<p>\"<em>We tend to use areas to segregate multiple projects in the same team project and it works well</em>.\" <br /> - <strong><a href=\"http://agilior.pt/blogs/tiago.pascoal/\" target=\"_blank\">Tiago Pascoal</a></strong>, Visual Studio ALM MVP</p>\r\n</blockquote>\r\n<blockquote>\r\n<p><em>\"In general, I believe this approach provides consistency [to multi-product engagements] and lowers the administration and maintenance costs. All good.\" <br /> </em>- <a href=\"http://www.freetodev.com/\" target=\"_blank\"><strong>Michael Fourie</strong></a>, Visual Studio ALM MVP</p>\r\n</blockquote>\r\n<blockquote>\r\n<p>“<em>@</em><em>MrHinsh</em><em> BTW, I'm very much a fan of very large, if not huge, team projects in TFS. Just FYI :) Use Areas &amp; Iterations.”</em> <br /> <a href=\"http://www.edsquared.com\" target=\"_blank\"><strong>Ed Blankenship</strong></a>, Visual Studio ALM MVP</p>\r\n</blockquote>\r\n<p>I am proposing that SSW change from over 70 internal team projects:</p>\r\n<ul>\r\n<li>SSW.CodeAuditor</li>\r\n<li>SSW.SQLAuditor</li>\r\n<li>SSW.SQLDeploy</li>\r\n<li>etc</li>\r\n</ul>\r\n<p>To 1 internal team project:</p>\r\n<ul>\r\n<li>SSW.Agile5\r\n<ul>\r\n<li>CodeAuditor</li>\r\n<li>SQLAuditor</li>\r\n<li>SQLDeploy</li>\r\n<li>etc</li>\r\n</ul>\r\n</li>\r\n</ul>\r\n<p>Note: The single Team Project called “SSW.Agile5” would contain all of our internal projects and consequently all of the Areas and Iteration move down one hierarchy to accommodate this. Where we would have had “SSWSprint 1” we now have “SSWSqlDeploySprint1” with “SqlDeploy” being our internal project. At the moment SSW has over 70 internal projects and more than 170 total projects in TFS.</p>\r\n<p>This method has long term benefits that help to simplify the support model for companies that often have limited internal support time and many projects. But, there are implications as TFS does not provide this model “out-of-the-box”. These implications stretch across Areas, Iterations, Queries, Project Portal and Version Control.</p>\r\n<p>Michael made a good comment, he said:</p>\r\n<blockquote>\r\n<p><em>I agree with your approach, assuming that in a multi-product engagement with a client, they are happy to adopt the same process template across all products. If they are not, then it’ll either be easy to convince them or there is a valid reason for having a different template</em> <br /> - <a href=\"http://www.freetodev.com/\" target=\"_blank\">Michael Fourie</a>, Visual Studio ALM MVP</p>\r\n</blockquote>\r\n<p>At SSW we have a standard <a href=\"http://www.ssw.com.au/ssw/AgileTemplate/\" target=\"_blank\">SSW Agile</a> process template that we use and this is applied across the board, to all of our projects. We even apply any changes to the core process template to all of our existing projects as well. If you have multiple projects for the same clients on multiple templates and you want to keep it that way, then this approach will not work for you. However, if you want to standardise as we have at SSW then this approach may benefit you as well.</p>\r\n<h4>Pros</h4>\r\n<ul class=\"TickList\">\r\n<li><strong>You only have one project to upgrade when a process template changes</strong> – After going through an upgrade of over 170 project prior to the changes in the RC I can tell you that that many projects is no fun.</li>\r\n<li><strong>Standardises your Process Template</strong> – You will always have the same Process implementation across projects/products without exception</li>\r\n<li><strong>You get tighter control over the permissions – </strong>Yes, you can do this on a standard Team Project, but it gets a lot easier with practice.</li>\r\n<li><strong>You can “move” work items from one “product” to another</strong> – Have we not always wanted to do that.</li>\r\n<li><strong>You can rename your projects</strong> – Wahoo: everyone wants to do this, now you can.</li>\r\n<li><strong>One set of Reporting Services reports to manage</strong> – You set an area and iteration to run reports anyway, so you may as well set both.</li>\r\n<li><strong>Simplified Check-In Policies</strong>– There is only one set of check-in policies per client. This simplifies administration of policies.</li>\r\n<li><strong>Simplified Alerts</strong> – As alerts are applied across multiple projects this simplifies your alert rules as per client.</li>\r\n<li><strong>Process Template Upgrades</strong> – When a new process template is released, like “Agile6” we can create a “SSW.Agile6” project and move Area Projects ad-hock into it as we use them. This way we keep the history of the work items in tact and are able to properly upgrade to the new process template.</li>\r\n<li><strong>Archiving</strong> – We would be able to archive old unused projects by leaving them behind with history and source intact in the old “SSW.Agile5” project and then using the Project Collection splitting process to only keep active projects on TFS while keeping the database available if it is needed in the future.</li>\r\n<li><strong>Find all builds</strong> – You need to open a project to query builds, so you will be able to see all builds in one project.</li>\r\n</ul>\r\n<h4>Cons</h4>\r\n<p>All of these cons could be mitigated by a custom tool that helps automate creation of “Sub-projects” within Team Projects. This custom tool could create areas, Iteration, permissions, SharePoint and queries. It just does not exist yet :)</p>\r\n<ul class=\"CrossList\">\r\n<li><strong>You need to configure the Areas and Iterations</strong> – This is just like you would do for Sprints/Iterations and for functional areas of your application, but with 1 extra level at the top of the tree.</li>\r\n<li><strong>You need to configure the permissions</strong> – This I guess is the main configuration point. It is possible to create the same permissions as a Team Project at this level, but that would be a bit of configuration work.</li>\r\n<li><strong>You may need to configure sub sites for SharePoint</strong> (depends on your requirement) – If you have two projects/products in the same Team Project then you will not see the burn down for each one out-of-the-box, but rather a cumulative for the Team Project. This is not really that much of a problem as you would have to configure your burndown graphs for your current iteration anyway. <br /> <em>note: When you create a sub site to a TFS linked portal it will inherit the settings of its parent site :) This is fantastic as it means that you can easily create sub sites and then set the Area and Iteration path in each of the reports to be the correct one. </em></li>\r\n<li><strong>Every team wants their own customization</strong> (via <a href=\"http://www.ewaldhofman.nl/\" target=\"_blank\">Ewald Hofman</a>) - small teams of 2 persons against teams of 30 – or even outsourcing – need their own process, you cannot allow that because everybody gets the same work item types. <br /> <em>note: Luckily at SSW this is not a problem as our template is standardised across all projects and customers.</em></li>\r\n<li><strong>Large list of builds </strong>(via <a href=\"http://www.ewaldhofman.nl/\" target=\"_blank\">Ewald Hofman</a>) – As the build list in Team Explorer is just a flat list it can get very cluttered. <br /> <em>note: I would mitigate this by removing any build that has not been run in over 30 days. The build template and workflow will still be available in version control, but it will clean the list.</em></li>\r\n</ul>\r\n<h3>Implications around Areas</h3>\r\n<p>Areas should be used for topological classification/isolation of work items. You can think of this as architecture areas, organisational areas or even the main features of your application. In our scenario there is an additional top level item that represents the Project / Product that we want to chop our Team Project into.</p>\r\n<p><img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-WindowsLiveWriter-e81a0b914d47_8DFC-image_00a647ae-3d8c-42b9-99a8-2b8625dbc633.png\" alt=\"image\" width=\"505\" height=\"497\" border=\"0\" /> <br /> <strong>Figure: Creating a sub area to represent a product/project is easy.</strong></p>\r\n<blockquote></blockquote>\r\n<p>Becomes:</p>\r\n<blockquote></blockquote>\r\n<h3>Implications around Iterations</h3>\r\n<p>Iterations should be used for chronological classification/isolation of work items. This could include isolated time boxes, milestones or release timelines and really depends on the logical flow of your project or projects. Due to the new level in Area we need to add the same level to Iteration. This is primarily because it is unlikely that the sprints in each of your projects/products will start and end at the same time. This is just a reality of managing multiple projects.</p>\r\n<p><img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-WindowsLiveWriter-e81a0b914d47_8DFC-image_c0bb5497-18d4-4a5f-a0fa-0f1feea3e799.png\" alt=\"image\" width=\"509\" height=\"499\" border=\"0\" /> <br /> <strong>Figure: Adding the same Area value to Iteration as the top level item adds flexibility to Iteration.</strong></p>\r\n<blockquote>\r\n<p>Sprint 1</p>\r\n</blockquote>\r\n<p>Or</p>\r\n<blockquote>\r\n<p>Release 1Sprint 1</p>\r\n</blockquote>\r\n<p>Becomes:</p>\r\n<blockquote>\r\n<p>Sprint 1</p>\r\n</blockquote>\r\n<p>Or</p>\r\n<blockquote>\r\n<p>Release 1Sprint 1</p>\r\n</blockquote>\r\n<h3>Implications around Queries</h3>\r\n<p>Queries are used to filter your work items based on a specified level of granularity. There are a number of queries that are built into a project created using the MSF Agile 5.0 template, but we now have multiple projects and it would be a pain to have to edit all of the work items every time we changed project, and that would only allow one team to work on one project at a time.</p>\r\n<p><img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-WindowsLiveWriter-e81a0b914d47_8DFC-image_3d259c34-6b7a-464c-b290-1ad95583c7ee.png\" alt=\"image\" width=\"272\" height=\"347\" border=\"0\" />&nbsp; <br /> <strong>Figure: The Queries that are created in a normal MSF Agile 5.0 project do not quite suit our new needs.</strong></p>\r\n<p>In order for project contributors to be able to query based on their project we need a couple of things. The first thing I did was to create an “_Area Template” folder that has a copy of the project layout with all the queries setup to filter based on the “_Area Template” Area and the “_Sprint template” you can see in the Area and Iteration views.</p>\r\n<p><img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-WindowsLiveWriter-e81a0b914d47_8DFC-image_af2ba713-3767-4791-b460-800c3abe24e5.png\" alt=\"image\" width=\"380\" height=\"458\" border=\"0\" /> <br /> <strong>Figure: The template is currently easily drag and drop, but you then need to edit the queries to point at the right Area and Iteration. This needs a tool.</strong></p>\r\n<p>I then created an “Areas” folder to hold all of the area specific queries. So, when you go to create a new TFS Sub-Project you just drag “_Area Template” while holding “Ctrl” and drop it onto “Areas”. There is a little setup here. That said I managed it in around 10 minutes which is not so bad, and I can imagine it being quite easy to build a tool to create these queries</p>\r\n<p><img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-WindowsLiveWriter-e81a0b914d47_8DFC-image_92a711ed-2343-423c-84a2-cd05aefbc19a.png\" alt=\"image\" width=\"390\" height=\"685\" border=\"0\" /> <br /> <strong>Figure: These new queries can be configured in around 10 minutes, which includes setting up the Area and Iteration as well.</strong></p>\r\n<h3>Version Control</h3>\r\n<p>What about your source code? Well, that is the easiest of the lot. Just create a sub folder for each of your projects/products.</p>\r\n<p>&nbsp;<img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-WindowsLiveWriter-e81a0b914d47_8DFC-image_fd48ffe3-853a-4bf5-8273-658672a70268.png\" alt=\"image\" width=\"476\" height=\"166\" border=\"0\" /> <br /> <strong>Figure: Creating sub folders in source control is easy as “Right click | Create new folder”.</strong></p>\r\n<blockquote>\r\n<p>DEVMain</p>\r\n</blockquote>\r\n<p>Becomes:</p>\r\n<blockquote>\r\n<p>DEVMain</p>\r\n</blockquote>\r\n<h3>Conclusion</h3>\r\n<p>I think it is up to each company to make a call on how you want to configure your Team Projects and it depends completely on how many projects/products you are going to have for each customer including yourself.</p>\r\n<p>If we decide to utilise this route it will require some configuration to get our 170+ projects into this format, and I will probably be writing some tools to help.</p>\r\n<h4>Feedback</h4>\r\n<p>Now that I have explained this method, what do you think?</p>\r\n<ul>\r\n<li><strong>What other pros and cons can you see?</strong></li>\r\n<li><strong>What do you think of this approach?</strong></li>\r\n<li><strong>Will you be using it?</strong></li>\r\n<li><strong>What tools would you like to support you?</strong></li>\r\n</ul>\r\n<div class=\"wlWriterEditableSmartContent\" style=\"margin: 0px; float: none; padding: 0px;\">Technorati Tags: <a href=\"http://technorati.com/tags/ALM\" rel=\"tag\">ALM</a>&nbsp;<a href=\"http://technorati.com/tags/TFS+Admin\" rel=\"tag\">TFS Admin</a>&nbsp;<a href=\"http://technorati.com/tags/TFBS\" rel=\"tag\">TFBS</a>&nbsp;<a href=\"http://technorati.com/tags/TFS+Custom\" rel=\"tag\">TFS Custom</a>&nbsp;<a href=\"http://technorati.com/tags/WIT\" rel=\"tag\">WIT</a>&nbsp;<a href=\"http://technorati.com/tags/CodeProject\" rel=\"tag\">CodeProject</a>&nbsp;<a href=\"http://technorati.com/tags/SSW\" rel=\"tag\">SSW</a>&nbsp;<a href=\"http://technorati.com/tags/Scrum\" rel=\"tag\">Scrum</a>&nbsp;<a href=\"http://technorati.com/tags/SP+2010\" rel=\"tag\">SP 2010</a>&nbsp;<a href=\"http://technorati.com/tags/SharePoint\" rel=\"tag\">SharePoint</a>&nbsp;</div>"
  - ''
  post_id: '64'
  post_date: '2010-03-09 12:27:20'
  post_date_gmt: '2010-03-09 12:27:20'
  post_modified: '2014-05-16 13:33:08'
  post_modified_gmt: '2014-05-16 12:33:08'
  comment_status: open
  ping_status: open
  post_name: >-
    when-should-i-use-areas-in-tfs-instead-of-team-projects-in-team-foundation-server-2010
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: dsq_thread_id
    meta_value: '311202228'
  - meta_key: _flattr_post_language
    meta_value: ''
  - meta_key: _flattr_post_category
    meta_value: ''
  - meta_key: _flattr_post_hidden
    meta_value: ''
  - meta_key: _flattr_btn_disabled
    meta_value: ''
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _thumbnail_id
    meta_value: '8622'
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1aBGPEc
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _syn_slave_post_states
    meta_value: a:0:{}
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474878983;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5702;}i:1;a:1:{s:2:"id";i:50;}i:2;a:1:{s:2:"id";i:6202;}}}}
  - meta_key: _wpghs_github_path
    meta_value: >-
      _posts/2010-03-09-when-should-i-use-areas-in-tfs-instead-of-team-projects-in-team-foundation-server-2010.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '2697'
  comment:
  - comment_id: '647'
    comment_author: Michael Ruminer
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-03-10 22:01:13'
    comment_date_gmt: '2010-03-10 22:01:13'
    comment_content: >-
      RE: <br />------<br />You might have 1 project for a customer or 10. This
      is the situation that most consultancies find themselves in and thus they
      need a more sustainable and maintainable option. What I am advocating is
      that we should have 1 “Team Project” per customer, and use areas to create
      “sub projects” within that single “Team Project”. <br />-------<br />I
      agree in spirit but in execution for consulting I have found I have to go
      a different approach.<br /><br /><br />I have not found the use of areas
      to work well for me when at scale. Working for a large consultancy we may
      do more than 1 project for a customer simultaneously with different
      delivery teams. Or multiple projects that need separation. All depends on
      how granular one defines customer. If the customer is Fidelity that likely
      won't work. If the customer is defined as Fidelity - Bond - US Compliance 
      group then maybe it works. <br /><br />With the new project collections in
      2010 I'm leaning toward a Project collection per client project. At the
      end of the engagement the PC is turned over to the client to import into
      their environment.<br /><br />In the past it has gone so far as a TFS
      instance and individual domain per client project (under their licenses)
      so that we could turn over the entire virtual project infrastructure AD,
      TFS, WSS, SQL VMs at the end to the client.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969741'
  - comment_id: '648'
    comment_author: Valerie
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-03-31 00:07:45'
    comment_date_gmt: '2010-03-31 00:07:45'
    comment_content: >-
      New to TFS so excuse my ignorance. If we use Areas can we put common code
      in one area and branch it into another area? The use case is to be able to
      have common code that can be pulled into other projects. We don't want to
      just pull in the dll, we want the code there. But we don't plan to change
      the code in the project that uses it - only in the common area.<br /><br
      />I found this codeplex article that explains how we could do it but it
      goes across projects. One drawback is that the branch visualization
      doesn't seem to work across projects. Could I instead use Areas?<br
      />http://www.codeplex.com/wikipage?ProjectName=TFSGuide&amp;title=Chapter%206%20-%20Managing%20Source%20Control%20Dependencies%20in%20Visual%20Studio%20Team%20System&amp;referringTitle=Home<br
      />
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969743'
  - comment_id: '649'
    comment_author: Martin Hinshelwood
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-03-31 00:21:55'
    comment_date_gmt: '2010-03-31 00:21:55'
    comment_content: >-
      Yes you can, but I would NEVER recommend this approach. Just place a copy
      of the DLL's into a "ToolsMyOtherProject*.dll" folder in your target
      solution and reference them there.<br /><br /> If you really need access
      to the source for debugging and reference then setup a "Symbols" server
      and use that.<br /><br
      />https://blogs.blackmarble.co.uk/blogs/rfennell/archive/2010/03/01/do-you-use-a-symbol-server.aspx<br
      />
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969744'
  - comment_id: '650'
    comment_author: Wes MacDonald
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-05-20 19:45:45'
    comment_date_gmt: '2010-05-20 19:45:45'
    comment_content: >-
      Do you have an approach for managing the many builds that will exist for
      each project?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969745'
  - comment_id: '651'
    comment_author: Martin Hinshelwood
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-05-20 23:54:09'
    comment_date_gmt: '2010-05-20 23:54:09'
    comment_content: >-
      I agree that it would be difficult and it is not perfect. On the upside
      they are all in a flat list and would be easily discoverable ;)<br /><br
      /> You would need a good naming convention if you were to have hundreds of
      builds in the same Porject.<br /><br />Maybe something like
      [Project].[Product]_[Branch].[BuildType]<br />
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969746'
  - comment_id: '652'
    comment_author: Aaron
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-08-26 04:00:55'
    comment_date_gmt: '2010-08-26 04:00:55'
    comment_content: >-
      Martin,<br />This post has been very helpful!  Can you add information on
      how to create sub sites for each area in SharePoint for for those of us
      who are not familiar with it?  <br /><br />Do you have any suggestions on
      how to manage reports in this scenario?  We are using the Scrum template
      and you can filter on reports by sprint, but as the area/iterations grow
      this filter list is going to become very large.  I am curious to hear if
      you have modified the report to limit the sprints which show up?<br />
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969747'
  - comment_id: '653'
    comment_author: Steve
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-08-27 05:09:24'
    comment_date_gmt: '2010-08-27 05:09:24'
    comment_content: >-
      Great post, as we are trying to use and area to separate seperate smaller
      projects also.  We also are doing Iteration 1 etc under each area.  This
      seems to work well until you get to the Documents area in Team Explorer
      and under Excel Reports none of the defaults work anymore.   The Product
      Backlog report still works but as far as the Iteration Backlog, Bugs etc. 
      They are all broke now.  I am now getting messages that the data in the
      Work Items are not valid.  When I go back and create a Team Project under
      the not using my Areas and Iterations they work fine.   Just something to
      think about when trying to go to this format.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969749'
  - comment_id: '654'
    comment_author: Allen
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2011-01-11 00:18:09'
    comment_date_gmt: '2011-01-11 00:18:09'
    comment_content: >-
      Great article!  We are currently in the middle of transitioning from
      SourceSafe to TFS 2010 (yes, we're years behind the curve!).  Our company
      is small and I think it would benefit from structuring our products in
      Areas as you've discussed above.  What I am debating right now is what
      process template to use.  We have always had a very loosely defined agile
      process, but are moving toward using a more defined SCRUM methodology. 
      With the release of the new Microsoft Visual Studio Scrum 1.0 template, do
      you still recommend starting with the MSF Agile 5.0 template?  If so, can
      you tell me what the advantages/disadvantages would be?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969750'
  - comment_id: '655'
    comment_author: Alfonso
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2011-01-12 08:55:07'
    comment_date_gmt: '2011-01-12 08:55:07'
    comment_content: >-
      Great post Martin,<br />I like the approach. However, I have the same
      concern as Aaron regarding the sub sites in SharePoint and how to manage
      reports in this scenario. I would like to hear if you came up with some
      particular solution or idea on how to accomplish this in an efficient
      manner. I know it all depends on your requirements, but any comments about
      it would be highly appreciated.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969751'
  - comment_id: '656'
    comment_author: Patrick Magee
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2011-01-19 19:35:44'
    comment_date_gmt: '2011-01-19 19:35:44'
    comment_content: >-
      I am currently consulting on a large eCommerce site that does most of its
      dev work off-shore in Java (the language not the country), and interacts
      with TFS using the TFS Everywhere plugin for Eclipse. The project is
      getting rather sick (over-budget, and late). We are not (currently) using
      workitems, so we are considering splitting out our rather large single
      project (which contains a number of sub-projects from different teams) to
      create separate team projects. The main motivation for this is to give us
      some clarity and standardisation across the various sub-projects. After
      reading this article I am wondering if it might be easier to get our devs
      to use workitems and areas and stick with the current monolithic
      structure. <br /><br />Has anyone any thoughts on this?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969752'
  - comment_id: '657'
    comment_author: Richard Berg
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2011-01-31 16:06:38'
    comment_date_gmt: '2011-01-31 16:06:38'
    comment_content: >-
      While this blog post is really old, my opinion hasn't really changed:
      http://blogs.msdn.com/b/richardb/archive/2007/05/01/tfs-team-project-whitepaper.aspx 
      <br /><br />There *are* some good reasons to split up team projects, but
      in practice, 90% of the reasons people have told me are no good :)  <br
      /><br />If anything, there are fewer reasons today than ever.  Look
      closely at Doug Neumann's chart and you'll see that some of the
      limitations that used to apply within a single team project no longer
      exist.  For example, TFS 2010 allows fully hierarchical grouping (with
      permissions!) inside the Team Queries node of work item tracking.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969753'
  - comment_id: '658'
    comment_author: Makoto Suzuki
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2011-02-09 22:08:55'
    comment_date_gmt: '2011-02-09 22:08:55'
    comment_content: >-
      Thank you Martin for the very informative post. I'm in the middle of
      determining whether to use a single team project or multiple team
      projects.  <br /><br />I've tested modifying the project portals and
      reports to support using different areas in a single project, and it does
      seem to work fine, except for the re-configuration of portal
      sites/reports/dashboards and changing permissions for each area, mirroring
      it to the portals as well.  Though not too painful, it involves quite a
      bit of manual work and coordination.<br /><br />I'd like to see a tool
      that would handle this process - configuring the Team Project to support
      areas representing conceptual projects.<br />
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969756'
  - comment_id: '659'
    comment_author: >-
      Visual Studio ALM with Team Foundation Server, Visual Studio &amp; Scrum |
      One Team Project
    comment_author_email: ''
    comment_author_url: http://blog.hinshelwood.com/one-team-project/
    comment_author_IP: 184.168.230.128
    comment_date: '2012-07-14 20:54:36'
    comment_date_gmt: '2012-07-15 03:54:36'
    comment_content: >-
      [...] only is larger Team Projects the recommendation of almost all of the
      experts in the field, it is also the recommendation and expectation of the
      product team for mature teams and [...]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:13:"1342324476.51";s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:13:"1342325089.38";s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '660'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 50.135.56.181
    comment_date: '2012-07-14 21:03:00'
    comment_date_gmt: '2012-07-15 04:03:00'
    comment_content: >-
      I have created an updated post for the new features of TFS 2012
      http://blog.hinshelwood.com/one-team-project/
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '588288168'
  - comment_id: '661'
    comment_author: >-
      Why should I consider merging my Team Projects in TFS 2010 | Vincent
      Labatut&#039;s Quest
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: 108.175.153.21
    comment_date: '2012-09-30 14:13:32'
    comment_date_gmt: '2012-09-30 13:13:32'
    comment_content: '[...] Should I consider Areas instead of Team Projects [...]'
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:13:"1349039612.69";s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:12:"1349191606.1";s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '662'
    comment_author: >-
      One Team Project Collection to rule them all - Consolidating Team Projects
      - Visual Studio ALM
    comment_author_email: ''
    comment_author_url: >-
      http://blog.hinshelwood.com/one-team-project-collection-to-rule-them-allconsolidating-team-projects/
    comment_author_IP: 96.126.104.162
    comment_date: '2013-03-10 10:14:43'
    comment_date_gmt: '2013-03-10 17:14:43'
    comment_content: >-
      [...] When should I use Areas in TFS instead of Team Projects in Team
      Foundation Server 2010 [...]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1362935683.998202;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1362937975.425233;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '2063'
    comment_author: Why You Should Use a Single TFS Team Project | Imaginet Blog
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: 64.90.38.134
    comment_date: '2014-01-09 15:07:23'
    comment_date_gmt: '2014-01-09 15:07:23'
    comment_content: >-
      [&#8230;] When Should I Use Areas in TFS instead of Team Projects in TFS
      2010 [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1389280043.092249;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1389280662.994512;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '13996'
    comment_author: Tom Crag
    comment_author_email: thomas.pacey@gmail.com
    comment_author_url: ''
    comment_author_IP: 77.107.190.236
    comment_date: '2016-06-01 15:31:00'
    comment_date_gmt: '2016-06-01 14:31:00'
    comment_content: >-
      I have just moved all of our separate projects over to one single projects
      with each project being separated by a different area path. I feel that I
      may now be miss-using epics, as I have used epics to also separate the
      projects by having one epic per project. As the area path serves this
      purpose should I just use epics the same way as I would use them with
      multiple VSTS projects? If i did this, is there any down side to just
      relying on area path to distinguish between projects on a single project
      VSTS set up? What would the most appropriate use of epics be in a single
      project VSTS set up? I would greatly appreciate any advise and examples in
      regards to this.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2706442542'
  - comment_id: '13997'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 193.69.71.70
    comment_date: '2016-06-01 15:53:00'
    comment_date_gmt: '2016-06-01 14:53:00'
    comment_content: >-
      Yes, you should use them just as you would if you had one project in your
      Team Project
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13996'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2706442542'
    - meta_key: dsq_post_id
      meta_value: '2706518477'
  - comment_id: '13998'
    comment_author: Tom Crag
    comment_author_email: thomas.pacey@gmail.com
    comment_author_url: ''
    comment_author_IP: 77.107.190.236
    comment_date: '2016-06-01 16:36:00'
    comment_date_gmt: '2016-06-01 15:36:00'
    comment_content: Thanks for your response, that's helped out allot.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13997'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2706518477'
    - meta_key: dsq_post_id
      meta_value: '2706610837'
