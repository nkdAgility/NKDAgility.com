post:
  title: TFS for cross team and cross business line work item tracking
  link: >-
    https://nkdagility.com/blog/tfs-cross-team-cross-business-line-work-item-tracking/
  pubDate: Tue, 04 Mar 2014 16:34:13 +0000
  creator: MrHinsh
  guid:
    _: http://nakedalmweb.wpengine.com/?p=10378
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p>I was asked by current customer to come up with a solution, within TFS, to allow an entire division to work together in delivering software for a bank. This divisions made up of over 10 teams than work on many pieces of software. Some have simple requirements while others require harsh security and compliance. This is a standard problem and not unique to this company, however the perception still prevails with both TFS users and administrators, that one must have a single Team Project for each [Project | Team | Product] under way. This perception is not only incorrect but Team Foundation Server was designed to be used differently. The Developer Division (DevDiv) at Microsoft, who built the product, uses a single 20+ terabyte Team Project for their Work Items, Source Code and Builds for over 2k people. Team Foundation Server was designed and built to be used with fewer large Team Projects rather than many small Team Projects.</p>\r\n<p>The group I am working with has many Team Projects, in many cases one for each application. The teams working against these Team Project generally own more than one application and they are running into a number of issues:</p>\r\n<ul>\r\n<li><strong>Moving work between [Project | Team | Product</strong>] - Sometimes you find a bug in one application when testing another. Sometimes a work item is just created in the wrong place, or a Feature needs to be broken down into many Product Backlog Items that are for more than one [Project | Team | Product]. In order to move an item between team projects you must 'copy' the existing item to the other location and progress the original to the closed/removed state. Indeed, as not all fields and data are copied a link must be maintained between the new item in the new team project and the old item in another so that additional data, perhaps history, can be retrieved.</li>\r\n<li><strong>Query across [Project | Team | Product]</strong> - While you can query across team project none of the tools that are built on top of TFS support this. Specifically a Team's backlog can only contain work from the current Team Project and if you load a cross team project query in Excel it will only display data from the connected Team Project. This created confusion.</li>\r\n<li><strong>Team Focus</strong> - The Team entity within TFS exists only within a single team project and none of its features can cross the team project boundary. With features for Project Planning and Sprint Planning being invaluable for both Product Owners and Teams this can be decidedly crippling.</li>\r\n<li><strong>Individual focus</strong> - As all of the tools built on top of Team Foundation Server allow an individual to be connected to only one Team Project at a time there is a large amount of context switching for a member of multiple Team Projects. They have to switch to see what work they have and they will have multiple priorities for that work. It is hard for an individual to focus on a single backlog as their work may be spread across many.</li>\r\n</ul>\r\n<p>These issues are only those that have been presented by the teams using TFS and they have come up with a number of requirements to help facilitate the building of a solution suitable for their business line and potentially the others within the customer:</p>\r\n<ul>\r\n<li>Must be able to assign work to anyone within a division</li>\r\n<li>Must be able to reassign that item to anyone else within that division</li>\r\n<li>Simple Web UI for entering 'defects'</li>\r\n<li>Project Manager should be able to add/remove people from the correct projects</li>\r\n<li>Sharing of Test Cases between Applications</li>\r\n</ul>\r\n<p>Note: There are a few asks for the ability to assign work to anyone within the organisation, but short of creating a single Team Project for the entire organisation (tens of offices from Singapore to London to New York.) This is just not feasible from a support perspective, especially backup/restore.</p>\r\n<p>There are two separate but related things that should be implemented to both mitigate the issues above and to support the requirements describes. These are to move everyone within the division to a single Team Project and to implement Team Field within that team project.</p>\r\n<p>A general rule of thumb: If there are shared resources (with resources defined as People, Work Items, or Source Code) then one should be in a single Team Project.</p>\r\n<h3>Single Team Project</h3>\r\n<p>The first solution is to create a larger Team Project that contains many Application as well as Teams. In Team Foundation Server 2012 we can create multiple 'Teams' within a single Team Project to compartmentalize the work. As the 'Team' entity is built upon the security principles we can also use this to secure our application code and work items to one or more 'Teams'.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;\" title=\"image\" alt=\"image\" src=\"https://nkdagility.com/wp-content/uploads/2014/02/image.png\" width=\"800\" height=\"426\" border=\"0\" /><br />Figure: Using area path to represent products in Team Foundation Server</p>\r\n<p>As there is a single Version Control repository in TFS for all Team Projects there is little change to the existing multiple Team Project functionality and we can use Area Paths mirrored with Source Control folders to identify Applications within the system.</p>\r\n<p>As Area Path is a Dimension within the data Warehouse and cube we can using it to slice our data and report by application. As it is a tree we can also\_select which data from the tree to include and what to exclude. This is available as both published reports in Reporting Services and ad-hoc reports in Excel.</p>\r\n<h3>Team Field</h3>\r\n<p>By default Team Foundation Server provides two dimensions for categorising work and representing it on backlogs. Iteration Path, which is for the teams cadence, and Area Path that is for categorizing work. For this division we need an additional dimension and this can be provided with Team Field.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;\" title=\"clip_image002\" alt=\"clip_image002\" src=\"https://nkdagility.com/wp-content/uploads/2014/02/clip_image0021.png\" width=\"640\" height=\"344\" border=\"0\" /><br />Figure: Using team field as a third dimension in Team Foundation Server</p>\r\n<p>Team Field adds the ability to have a separate list for team and frees up Area Path, used for Team by default, for a much-needed Product breakdown as described above.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;\" title=\"image\" alt=\"image\" src=\"https://nkdagility.com/wp-content/uploads/2014/02/image1.png\" width=\"800\" height=\"455\" border=\"0\" /><br />Figure: Using team field to represent teams in Team Foundation Server</p>\r\n<p>With Team Field in use to designate which 'backlog' items appear on we can create both a single team that owns many Applications and have multiple teams that own a single application. In addition if we want to create a roll up to a Product Owner that perhaps has many teams that work on one or more applications we can also represent that.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border: 0px;\" title=\"SNAGHTML6934f7d\" alt=\"SNAGHTML6934f7d\" src=\"https://nkdagility.com/wp-content/uploads/2014/02/SNAGHTML6934f7d.png\" width=\"795\" height=\"480\" border=\"0\" /><br />Figure: Using team field to create virtual team groupings</p>\r\n<p>This can be used to create many levels however it does become a management nightmare the more levels that are added.</p>\r\n<h3>Conclusion</h3>\r\n<p>All of the requirements of the customer will fulfilled with these solutions along with the use of reporting. There has been some concern about viewing data across Team Project and indeed across Collection if there is one collection per business line (we currently have 12 collections). However these fears are unfounded as all of the data from all of the collections ends up in a single data warehouse and cube. This will allow us to report across all of the business lines with ease.</p>\r\n<p>Things are not all good and there are a few caveats to this approach:</p>\r\n<ul>\r\n<li><strong>More manual support and security management</strong> - There will be some manual creation of Teams, Folders and permissions. This actually gives us more flexibility in their creation and does benefit the teams but could easily over whelm a support team that is not fluent in PowerShell. Currently we are creating everything manually, however once we have the process solidified PowerShell scripts can be created to automate the process.</li>\r\n<li><strong>Build list can get large</strong> - When you get many hundreds of build definitions the list of them can get very unwieldy within Team Explorer and Team Web Access. However with the use of permissions to hide other teams build definitions as well as judicious use of team favourites this can be easily mitigated.</li>\r\n<li><strong>Test Management lists all Test Plans</strong> - Instead of plans being filtered by team on the web (which is not supported anyway in MTM) all are listed. This can make the list long and with use of keywords and tagging we can make it easier to find and connect to the Test Plans for each Team. For example we may begin the name of each plan with the name of the Team to which it pertains. While this is more of a pain than it needs to be for now I believe that TFS v.Next will resolve this issue.</li>\r\n</ul>\r\n<p>These issues however are small in comparison to the benefits that are gained by the single Team Project and Team Field approaches detailed above.</p>\r\n<p>How have you solved your organisational requirements in Team Foundation Server?</p>"
  - ''
  post_id: '10378'
  post_date: '2014-03-04 16:34:13'
  post_date_gmt: '2014-03-04 16:34:13'
  post_modified: '2014-02-19 14:36:48'
  post_modified_gmt: '2014-02-19 14:36:48'
  comment_status: open
  ping_status: open
  post_name: tfs-cross-team-cross-business-line-work-item-tracking
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _thumbnail_id
    meta_value: '11141'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/O9weHS
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _syn_slave_post_states
    meta_value: a:0:{}
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: dsq_thread_id
    meta_value: '2358801302'
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474923653;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:9431;}i:1;a:1:{s:2:"id";i:14;}i:2;a:1:{s:2:"id";i:36;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2014-03-04-tfs-cross-team-cross-business-line-work-item-tracking.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '1317'
  comment:
  - comment_id: '2148'
    comment_author: Dew Drop &#8211; March 5, 2014 (#1736) | Morning Dew
    comment_author_email: ''
    comment_author_url: http://www.alvinashcraft.com/2014/03/05/dew-drop-march-5-2014-1736/
    comment_author_IP: 168.62.50.182
    comment_date: '2014-03-05 12:57:41'
    comment_date_gmt: '2014-03-05 12:57:41'
    comment_content: >-
      [&#8230;] TFS for cross team and cross business line work item tracking
      (Martin Hinshelwood) [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1394024261.304645;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1394086334.017364;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '2237'
    comment_author: Eray
    comment_author_email: eraytuzun@gmail.com
    comment_author_url: ''
    comment_author_IP: 195.214.160.194
    comment_date: '2014-04-29 13:38:00'
    comment_date_gmt: '2014-04-29 12:38:00'
    comment_content: >-
      Thanks Martin, your whole series on “One team Project” are great.
       We have a very similiar situation in our
      company. We have 3 big divisions in the company each have  around multiple
      number of projects. Divisions

      use a weak matrix organization structure approach, so it is common to have
      a

      developer work on 2-3 projects at the same time. Instead of planning in
      the Project

      level, we need planning and burndowns in the functional team level. Since
      global

      level /cross-team capacity planning is not supported in TFS, we decided to
      use “One

      Team Project” per division approach. Right now we are prototyping this
      concept

      in our organization. My initial concern is if we use this approach, we
      will

      loose the “Project view” such as Project burndown charts, team favorites
      per Project,

      Project level capacity planning will not be available anymore. I am
      wondering what is your view on this?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1360605544'
  - comment_id: '2238'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 62.41.73.81
    comment_date: '2014-04-29 13:41:00'
    comment_date_gmt: '2014-04-29 12:41:00'
    comment_content: >-
      Since is it Team Favourites and not Project Favourites you lose nothing
      :)... This applies to Burndown, Kanban, and backlogs...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '2237'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1360605544'
    - meta_key: dsq_post_id
      meta_value: '1360608308'
  - comment_id: '2245'
    comment_author: Eray
    comment_author_email: eraytuzun@gmail.com
    comment_author_url: ''
    comment_author_IP: 195.214.160.194
    comment_date: '2014-05-02 11:48:00'
    comment_date_gmt: '2014-05-02 10:48:00'
    comment_content: >-
      Naming is kind of unfortunate (team vs. project) favorites:). However what
      I meant was, each of the teams that we have mapped are the functional
      teams(Systems Engineering team, Software engineering team, test team etc).
      So all these team favorites page / burndown charts belong to the
      functional team not the real Project. So my question is there a way to
      preserve the "project view" as well such as Project Burndown chart(not the
      functional team burndown chart), Project Level favorite queries, project
      level capacity planning etc.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '2238'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1360608308'
    - meta_key: dsq_post_id
      meta_value: '1366039805'
  - comment_id: '2246'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 213.19.196.10
    comment_date: '2014-05-02 12:16:00'
    comment_date_gmt: '2014-05-02 11:16:00'
    comment_content: >-
      Correct Answer: Move away from functional teams and start building
      cross-functional ones that can take on any pice of work.


      Enabling Answer: You can create another 'Team' witin your team project
      that mapps to a higher level within the Area and Iteration paths. This
      team would give you a master view..
    comment_approved: '1'
    comment_type: comment
    comment_parent: '2245'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1366039805'
    - meta_key: dsq_post_id
      meta_value: '1366057921'
  - comment_id: '3664'
    comment_author: Anthony
    comment_author_email: apugliese83@gmail.com
    comment_author_url: ''
    comment_author_IP: 14.203.97.100
    comment_date: '2014-08-22 04:17:00'
    comment_date_gmt: '2014-08-22 03:17:00'
    comment_content: >-
      Hi Martin,

      have you had any issues or heard of any, when you have implementing this
      model and then performed a update?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1553916956'
  - comment_id: '3665'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 84.212.202.57
    comment_date: '2014-08-22 05:11:00'
    comment_date_gmt: '2014-08-22 04:11:00'
    comment_content: >-
      I documented this on 2012.4 but I think that you mean that you updated to
      2013.3. In 2013.3 the Test Team have made both Test Plan and Test Suit to
      be Work Items. You will need to add your Team Field to those new Work Item
      types.

      Team field is just one of the reasons that they did this.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '3664'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1553916956'
    - meta_key: dsq_post_id
      meta_value: '1553956358'
  - comment_id: '3666'
    comment_author: Anthony
    comment_author_email: apugliese83@gmail.com
    comment_author_url: ''
    comment_author_IP: 14.203.97.100
    comment_date: '2014-08-22 05:28:00'
    comment_date_gmt: '2014-08-22 04:28:00'
    comment_content: Cheers Martin, I will give that a go
    comment_approved: '1'
    comment_type: comment
    comment_parent: '3665'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1553956358'
    - meta_key: dsq_post_id
      meta_value: '1553967420'
  - comment_id: '13974'
    comment_author: davidkallen
    comment_author_email: davidkrethallen@gmail.com
    comment_author_url: ''
    comment_author_IP: 198.175.249.8
    comment_date: '2016-05-09 21:43:00'
    comment_date_gmt: '2016-05-09 20:43:00'
    comment_content: >-
      Do you have any revised thoughts on this topic in light of VSTS? Unlike
      TFS on-premises, VSTS has one collection per account. And I'm trying to
      decide on how many accounts (collections) to have. I thought to have 3
      VSTS accounts to allow each group to have some higher isolation and
      prevent visibility where visibility was not wanted or needed.  But I got
      pushback from our Scrum Master who wants portfolio reporting for managers.
      So a key decider seems to be reporting.  I think we can only report work
      across a single account (multiple projects). Do you know differently?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2667132953'
  - comment_id: '13975'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 93.158.36.126
    comment_date: '2016-05-09 21:51:00'
    comment_date_gmt: '2016-05-09 20:51:00'
    comment_content: >-
      Nothing changes :) - Microsoft has already announced that they will be
      creating the idea of an Organisation in VSTS that contains many accounts
      and can share licences and whatnot. 


      If you want a cross team project reporting solution in VSTS you need to do
      the same as for multiple accounts. Rol your own. You can do some reporting
      in Power BI, but mostly you are on your own beyond the Team Project for
      now.


      Note: If you have Scrum Masters pushing for "portfolio reporting" then
      they are not doing the job of Scrum Master but also of Product Owner, You
      PO should be responsible for Portfolio. I would push that back to them...
      its not their job.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13974'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2667132953'
    - meta_key: dsq_post_id
      meta_value: '2667146051'
  - comment_id: '14047'
    comment_author: AndyB
    comment_author_email: 48r0wn@gmail.com
    comment_author_url: ''
    comment_author_IP: 80.4.146.98
    comment_date: '2016-06-23 13:51:00'
    comment_date_gmt: '2016-06-23 12:51:00'
    comment_content: >-
      The new release management area of TFS 2015 on premise is really useful
      for deploying a release, however all the work items for the different
      teams get associated with each release, is there any way to restrict which
      work items get associated somehow ?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2746217893'
  - comment_id: '14048'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 85.255.234.101
    comment_date: '2016-06-23 15:12:00'
    comment_date_gmt: '2016-06-23 14:12:00'
    comment_content: >-
      It will only associate work items to the release if they are associated
      with changesets that are included in the release. Are you seeing work
      items that are NOT part of your release? If so, you should raise a bug.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14047'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2746217893'
    - meta_key: dsq_post_id
      meta_value: '2746340493'
  - comment_id: '14049'
    comment_author: AndyB
    comment_author_email: 48r0wn@gmail.com
    comment_author_url: ''
    comment_author_IP: 80.4.146.98
    comment_date: '2016-06-23 15:18:00'
    comment_date_gmt: '2016-06-23 14:18:00'
    comment_content: >-
      Sorry, I meant ... we have one TFS project with multiple apps inside it,
      but when a release is created for an app, it associates the changesets
      from all the apps with that release, is there a way to restrict to just
      the changes for the app/project we're releasing rather than all the
      changes in the TFS project ?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14048'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2746340493'
    - meta_key: dsq_post_id
      meta_value: '2746356434'
  - comment_id: '14086'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 85.255.236.34
    comment_date: '2016-07-10 21:10:00'
    comment_date_gmt: '2016-07-10 20:10:00'
    comment_content: >-
      If you are using Git then it should only read from a single repository. If
      you are using TFVC then I am not sure, would need to raise that with the
      Team.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14049'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2746356434'
    - meta_key: dsq_post_id
      meta_value: '2775889714'
