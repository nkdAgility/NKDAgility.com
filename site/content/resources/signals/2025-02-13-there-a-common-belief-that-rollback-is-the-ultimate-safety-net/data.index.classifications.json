{
  "Large Scale Agility": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Large Scale Agility",
    "calculated_at": "2025-05-16T20:26:37",
    "ai_confidence": 16.266,
    "ai_mentions": 0.4,
    "ai_alignment": 2.0,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 5.2,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content mainly explores deployment safety nets—specifically contrasting rollback and fail-forward strategies, focusing on progressive delivery. While progressive delivery can be embraced within enterprise-scale Agile, the article never references scaling Agile, multi-team coordination, or enterprise transformation. Key signals are technical and delivery team-oriented, not reflecting large-scale Agile topics such as cross-team alignment, leadership frameworks, or enterprise strategy. No explicit nor implicit alignment with Large Scale Agility is demonstrated.",
    "reasoning_summary": "This content addresses deployment safety and progressive delivery at a team or app level, not the principles or practices of scaling Agile organization-wide. It lacks references to enterprise agility, cross-team strategy, or large-scale frameworks, so confidence for the category is low.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Tenet",
    "calculated_at": "2025-05-16T20:26:38",
    "ai_confidence": 68.535,
    "ai_mentions": 2.3,
    "ai_alignment": 7.7,
    "ai_depth": 7.2,
    "ai_intent": 6.5,
    "ai_audience": 6.7,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content directly challenges the notion that rollback is a safe default and promotes 'fail forward' and progressive delivery, which align with actionable tenets within DevOps and Agile. It highlights a guiding rule—design deployments for safe failure—moving from abstract philosophy toward prescriptive practice. However, it does not explicitly use the term 'tenet' or clearly list it as an organizational guideline, hence the score for direct mentions is low and conceptual alignment, depth, and intent scores are moderate. There are concrete practices cited (feature flags, canary releases), and the discussion is relevant to technical audiences focused on deployment safety. No penalties were necessary.",
    "reasoning_summary": "This content addresses a key DevOps tenet—favoring fail-forward and progressive delivery over rollback—using practical examples and targeting practitioners. It contains actionable guidance but doesn’t fully frame its advice as formal tenets, so confidence is moderate.",
    "level": "Secondary"
  },
  "Collaboration Tools": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-16T20:26:43",
    "ai_confidence": 15.38,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 1.9,
    "ai_audience": 3.3,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content centers on deployment strategies (fail forward, progressive delivery, rollback risks) rather than platforms enhancing team communication or collaboration. While relevant to Agile teams and implying need for coordination, there's no direct mention or discussion of collaboration tools or their features. Discussion is mainly about technical best practices for release/failure, not tool usage, integrations, or impacts on team workflow. Audience is software delivery teams, but content focus is process, not collaboration enablement.",
    "reasoning_summary": "This piece focuses on deployment best practices like fail forward and progressive delivery, not on tools that enhance teamwork or communication. It neither names nor discusses collaboration platforms or their role in Agile teams, making it a poor fit for the Collaboration Tools category.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Revenue per Employee",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 2.61,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 2.1,
    "ai_intent": 2.2,
    "ai_audience": 6.4,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content discusses deployment safety nets, rollback vs. roll forward, and modern delivery techniques such as feature flags and canary releases. It addresses engineering and operational process quality but makes no mention of financial observability metrics, workforce efficiency, or Revenue per Employee. There is no metric-based or quantitative analysis relevant to the category. Audience overlap exists for technical leaders, but that's a weak indirect fit. Depth and intent are not aligned with Revenue per Employee—the primary focus is deployment safety, not financial performance.",
    "reasoning_summary": "This content focuses on deployment strategies like rollback and fail forward, not on financial metrics or workforce efficiency. While relevant to engineering teams, it doesn't address Revenue per Employee or related themes, resulting in very low category confidence.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Continuous Delivery",
    "calculated_at": "2025-05-16T20:26:34",
    "ai_confidence": 92.1,
    "ai_mentions": 8.4,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.0,
    "ai_audience": 8.7,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses modern deployment strategies central to Continuous Delivery, such as progressive delivery, fail-forward, feature flags, and early detection of issues. It contrasts rollback with safer deployment approaches, discussing their impact on software quality and team practices. Detailed examples show understanding beyond surface level. While the phrase 'Continuous Delivery' itself is not explicitly mentioned, all concepts and practices discussed are core issues in the category. The targeted audience consists of practitioners and technical leads, fully aligned with the category. No outdated or critical tone detected—content is modern and supportive. No penalties applied.",
    "reasoning_summary": "This content deeply explores advanced deployment strategies integral to Continuous Delivery, emphasizing fail-forward, automation, and reducing risk. Though the term isn't directly used, all concepts are tightly aligned, offering substantial and practical insights for practitioners.",
    "level": "Primary"
  },
  "Scaling": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Scaling",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 14.45,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.9,
    "ai_intent": 2.1,
    "ai_audience": 4.2,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content addresses software deployment safety, challenging the rollback-as-safety-net paradigm, and recommends fail-forward and progressive delivery techniques. However, it does not mention scaling frameworks, cross-team coordination, or enterprise-level challenges central to the Scaling category. Its focus is on deployment strategies for teams, lacking depth, alignment, and direct intent towards scaling multiple agile teams or organizations. The audience is somewhat aligned with practitioners, but the overall relevance to Scaling is low.",
    "reasoning_summary": "This content focuses on safer deployment techniques for software teams, not on scaling frameworks or large-scale agile coordination. It doesn't align closely with the Scaling category, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "System Configuration",
    "calculated_at": "2025-05-16T20:26:36",
    "ai_confidence": 48.2,
    "ai_mentions": 0.3,
    "ai_alignment": 6.9,
    "ai_depth": 5.5,
    "ai_intent": 6.7,
    "ai_audience": 7.9,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content discusses deployment safety nets like rollback vs roll-forward, referencing progressive delivery and automation concepts such as canary releases and feature flags. While these are tangentially related to system configuration (especially regarding deployment methodologies and operational practices), the core focus is on deployment and release strategy rather than the setup or maintenance of system configuration itself. Explicit mentions of configuration or direct system setup methods are nearly absent, so the direct mention score is low. Depth reflects detailed exploration of release strategies and their risks, but only partly overlaps with system configuration best practices, not its technical tooling. The audience (operations and engineering) aligns fairly well, and the signal-to-noise ratio is strong, as off-topic content is minimal.",
    "reasoning_summary": "This piece explores deployment safety strategies like rollback and progressive delivery, which overlap with configuration practices but primarily focus on release management, not core system setup. Its audience and signal are solid, but it only moderately fits the system configuration category.",
    "level": "Tertiary"
  },
  "Definition of Done": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Definition of Done",
    "calculated_at": "2025-05-16T20:26:43",
    "ai_confidence": 4.3,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 1.2,
    "ai_audience": 0.9,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content discusses deployment, rollback risks, and safer strategies like progressive delivery and fail-forward. Nowhere does it mention or discuss Definition of Done, its criteria, or related Scrum/Agile concepts. While tangentially relevant to software delivery and quality, it is not conceptually aligned, nor does it address DoD audiences or intent. Only minimal overlap exists as both concern quality outcomes.",
    "reasoning_summary": "This piece is about deployment safety, not Definition of Done. It addresses rollback risks and delivery practices without referencing or aligning with DoD concepts, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Strategy",
    "calculated_at": "2025-05-16T20:26:43",
    "ai_confidence": 57.086,
    "ai_mentions": 2.6,
    "ai_alignment": 6.7,
    "ai_depth": 5.5,
    "ai_intent": 6.2,
    "ai_audience": 6.9,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content discusses high-level deployment approaches, contrasting rollback vs. fail-forward and progressive delivery, which conceptually aligns with strategic thinking in software delivery. However, there are no explicit mentions of 'strategy,' and the discussion is more focused on operational deployment philosophy than strategic planning or long-term organisational alignment. The intended audience—teams and practitioners—is somewhat congruent with strategic roles, but the depth remains mostly at best-practice recommendation level rather than a thorough, multi-layered strategy discourse. No penalties were warranted as the content is current and not satirical or critical of the strategic category.",
    "reasoning_summary": "This content aligns partially with the Strategy category by favoring proactive deployment approaches, but falls short of deep strategic exploration, landing it in a moderately confident fit due to its focus on operational tactics framed in a higher-level delivery philosophy.",
    "level": "Tertiary"
  },
  "Customer Focus": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Customer Focus",
    "calculated_at": "2025-05-16T20:26:41",
    "ai_confidence": 47.186,
    "ai_mentions": 1.2,
    "ai_alignment": 4.3,
    "ai_depth": 4.7,
    "ai_intent": 3.8,
    "ai_audience": 6.7,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content discusses deployment safety, highlighting that rollback strategies can be risky and progressive delivery (e.g., feature flags, canary releases) is preferable for safer failure handling. There is indirect alignment to customer focus, since minimizing service disruption and safe deployments benefit customers, but there is no direct discussion of customer needs, feedback loops, or value measurement. The piece mainly targets technical teams and focuses on operational safety practices rather than using direct evidence about customer value or outcomes to guide delivery. There are no penalties, as the tone isn't outdated or dismissive.",
    "reasoning_summary": "While the content stresses safer deployment (which indirectly protects customer experience), it doesn’t directly address measuring, validating, or prioritizing based on customer needs—the heart of 'Customer Focus.' Its fit is moderate, not strong.",
    "level": "Tertiary"
  },
  "Technical Debt": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Technical Debt",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 28.79,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 3.3,
    "ai_audience": 7.6,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content is focused on deployment strategies (rollback vs. roll forward) and progressive delivery, emphasizing safer software release practices. While these practices can reduce long-term technical debt, the article never explicitly or implicitly mentions technical debt, nor does it delve into codebase sustainability or debt remediation. The primary concern is operational risk and release management, not accumulated suboptimal code or long-term maintainability—hence the low alignment and depth. The audience does overlap with those concerned with technical debt (engineering teams, release managers), but the narrative is not directed toward technical debt management.",
    "reasoning_summary": "This article addresses deployment safety and progressive delivery but doesn’t focus on technical debt. While the audience may overlap and concepts could indirectly affect debt, the discussion does not align with technical debt’s definition or core concerns.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agentic Agility",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 28.15,
    "ai_mentions": 0.2,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 3.8,
    "ai_audience": 8.5,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content centers on safer deployment tactics, challenging rollback as a default safety net in favor of progressive delivery. While self-management and adaptive decision-making are implied—questions about team skills, learning from failure, and designing for resilience—the text never mentions agency, autonomy, or agentic agility directly. The primary intent is pragmatic technical advice, not a discussion of intentional adaptation, learning loops, or the nature of agency itself. Relevant audience overlap and focus on outcomes provide some conceptual link, but surface-level depth and lack of explicit or deep exploration of agentic agility concepts keep overall confidence low.",
    "reasoning_summary": "While the article urges intentional, adaptive deployment strategies and hints at team accountability, it doesn’t directly discuss agentic agility, agency, or the intentional shaping of outcomes within Agile or DevOps. Its focus is more on technical deployment safety than agentic concepts.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Backlog",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 2.8,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.3,
    "ai_audience": 3.0,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content focuses on deployment strategies (rollback, fail-forward, progressive delivery), not on Product Backlog. No direct mentions, conceptual alignment, or depth relating to backlog management, refinement, or Agile backlog practices. Its audience could overlap with Agile practitioners, but the content is off-topic for Product Backlog. No penalties applied, as there's no outdated or undermining content.",
    "reasoning_summary": "This content discusses deployment risk and safety nets, not Product Backlog management. There are no relevant references to backlog themes, roles, or practices, so it fits the category very poorly.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Personal",
    "calculated_at": "2025-05-16T20:26:37",
    "ai_confidence": 32.78,
    "ai_mentions": 1.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.3,
    "ai_audience": 6.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content offers opinions on deployment strategies but does not contain meaningful personal anecdotes or subjective interpretations. It analyzes risks of rollback vs. roll forward in general terms, addresses 'your team,' and explores best practices from an advisory or technical perspective, not as an individual's experience. The ask 'How is your team handling failure?' only slightly personalizes the closing. No explicit penalty is warranted, but scores remain low for most dimensions due to the lack of personal context.",
    "reasoning_summary": "This piece is technical and advisory, not personal. While it addresses teams and opinions about deployment, it lacks specific personal stories or individual perspectives, so its fit with the 'Personal' category is weak.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Method",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 77.55,
    "ai_mentions": 6.2,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 7.1,
    "ai_audience": 9.1,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content discusses progressive delivery as a safer alternative to rollback, referencing practices like feature flags and canary releases (methods for safer deployments). While 'method' is not named directly, the focus is on procedural approaches rather than philosophical concepts. Depth is solid but not exhaustive, with practical guidance targeting engineering practitioners. Slightly less intent as the primary purpose is to shift mindset, not detail procedures.",
    "reasoning_summary": "This content effectively highlights methods for safer software deployment, focusing on progressive delivery techniques over traditional rollback. It targets technical practitioners with practical advice and aligns closely with the 'Method' category, delivering relevant and detailed procedural insights.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 38.7,
    "ai_mentions": 0.4,
    "ai_alignment": 3.2,
    "ai_depth": 3.5,
    "ai_intent": 3.9,
    "ai_audience": 4.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on deployment strategies—progressive delivery, rollback, and fail-forward—specifically in the context of safer software releases. While these are important in Agile and DevOps contexts, the discussion remains at the team or technology practice level and does not expand into organisational agility, structure, leadership, or transformation themes. Enterprise Agility is not directly or indirectly referenced. The intent and audience are more technical and operational (e.g., delivery teams), not enterprise leaders or org-wide strategists. The alignment is partial, as modern delivery enables agility, but the discussion does not explicitly tie to enterprise-level change or culture.",
    "reasoning_summary": "While the content champions modern delivery safety and agility principles, it addresses team-level deployment rather than organisation-wide transformation, lacking focus on Enterprise Agility’s broader themes of structure, leadership, or culture.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 41.4,
    "ai_mentions": 0.7,
    "ai_alignment": 4.5,
    "ai_depth": 4.8,
    "ai_intent": 5.2,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content discusses deployment safety—specifically the risks of rollback versus rolling forward—and advocates for progressive delivery techniques such as feature flags and canary releases. However, it does not directly mention hypothesis-driven development or core practices like hypothesis formulation, running controlled experiments, or using empirical learning to drive product decisions. While progressive delivery can enable experimentation, the content focuses primarily on deployment risk management and safe failure modes, not validated learning. The article is clear and well-targeted to practitioners, but its alignment with the specific topic of hypothesis-driven development is only tangential. No penalties were applied. The final confidence score reflects low direct relevance to the 'Hypothesis Driven Development' category.",
    "reasoning_summary": "This content discusses safe deployment strategies like fail-forward and progressive delivery but does not address hypothesis-driven development or experimentation. Its main focus is risk management in deployment, so its fit for the category is low.",
    "level": "Tertiary"
  },
  "Discipline": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Discipline",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 48.78,
    "ai_mentions": 1.3,
    "ai_alignment": 5.7,
    "ai_depth": 4.8,
    "ai_intent": 5.1,
    "ai_audience": 6.9,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content focuses on deployment strategies, emphasizing fail-forward and progressive delivery over rollback. While it references principles relevant to software disciplines like DevOps, it does not explicitly discuss discipline as a structured field of practice with consistent methodologies or standards. The discussion remains tactical, centered on techniques and risk, rather than systemic governance, evolution, or maturation of a discipline. Mentions of discipline are indirect, targeting practitioners, with decent signal but insufficient conceptual depth to fully align with the category.",
    "reasoning_summary": "This piece touches on themes relevant to modern deployment practices but lacks the explicit focus on discipline as a structured, evolving field. It's practitioner-oriented and technique-driven, only loosely connecting to the category.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-16T20:26:35",
    "ai_confidence": 20.8,
    "ai_mentions": 0.4,
    "ai_alignment": 2.5,
    "ai_depth": 2.3,
    "ai_intent": 2.1,
    "ai_audience": 6.0,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on software deployment strategies, specifically discussing the risks of rollback versus fail-forward and progressive delivery. Agile Planning Tools are not mentioned directly or conceptually; the discussion is about deployment practices, not backlog or sprint planning tools, or their methodologies. The audience alignment is slightly higher since the content may appeal to Agile practitioners, but overall link to Agile Planning Tools is weak.",
    "reasoning_summary": "While insightful about deployment risk management, the content does not directly address Agile Planning Tools or methodologies. Its focus is on delivery strategies, not planning or tool usage central to the specified category.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Coaching",
    "calculated_at": "2025-05-16T20:26:36",
    "ai_confidence": 12.5,
    "ai_mentions": 0.8,
    "ai_alignment": 1.7,
    "ai_depth": 1.1,
    "ai_intent": 2.2,
    "ai_audience": 4.7,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content centers around deployment strategies, specifically critiquing rollback as a safety net in favor of fail-forward practices for stateful applications. It offers advice directed at technical practitioners (devops/engineering teams) but does not mention, describe, or promote coaching roles, concepts, or behaviors. Collaboration, facilitation, or development through coaching is not explored. No mention of coaching tools, frameworks, or theories is present; the focus is primarily technical and procedural, not developmental or supportive as required by the Coaching category.",
    "reasoning_summary": "This content is focused on deployment safety and strategy, offering technical advice rather than coaching support or guidance. It is targeted at practitioners, not coaches, and does not discuss coaching techniques or roles, resulting in a low confidence match for the Coaching category.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-16T20:26:37",
    "ai_confidence": 34.23,
    "ai_mentions": 0.2,
    "ai_alignment": 4.1,
    "ai_depth": 4.3,
    "ai_intent": 4.5,
    "ai_audience": 6.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content discusses deployment safety, progressive delivery, fail-forward approaches, and related automation—but never mentions Internal Developer Platforms or explores platform-oriented solutions. While key themes like deployment practices and team enablement overlap tangentially with IDPs, the core focus is on deployment philosophy and not platform frameworks or architectures. The audience appears technically inclined, but there is little explicit reference to IDP tooling, benefits, or implementations, resulting in moderate scores for alignment and depth, and a low score for direct mentions.",
    "reasoning_summary": "This content explores deployment risks and progressive delivery, loosely relating to IDP concepts, but doesn't explicitly address Internal Developer Platforms, their architecture, or implementation. It fits partly due to deployment focus, but lacks direct relevance, so the confidence is low.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-05-16T20:26:36",
    "ai_confidence": 40.65,
    "ai_mentions": 0.7,
    "ai_alignment": 4.8,
    "ai_depth": 3.9,
    "ai_intent": 4.8,
    "ai_audience": 4.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content discusses deployment strategies (rollback vs rolling forward), touching on team capability and deployment safety. While it references team skills and modern delivery practices, its primary focus is technical risk management, not the interplay of social and technical systems as defined by the Sociotechnical Systems category. There are hints of sociotechnical concerns—such as the question about team handling of failure and references to team skills—but no direct or explicit mentions, and social-organizational context is lightly touched if at all. Overall, it partially aligns with the category's intent but does not deeply explore sociotechnical integration.",
    "reasoning_summary": "This content focuses on deployment safety strategies, mentioning team skills but mainly addresses technical decisions over sociotechnical interplay. Its relevance to sociotechnical systems is limited and indirect, resulting in a moderate but not strong category fit.",
    "level": "Tertiary"
  },
  "Continuous Improvement": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-16T20:26:36",
    "ai_confidence": 57.44,
    "ai_mentions": 1.8,
    "ai_alignment": 6.9,
    "ai_depth": 6.2,
    "ai_intent": 7.1,
    "ai_audience": 6.5,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content does not explicitly mention 'Continuous Improvement' but discusses deployment approaches like progressive delivery, fail-forward strategies, and learning from failures. These are aligned with continuous improvement principles (empirical feedback, safer experimentation), but the discussion is focused on deployment safety rather than continuous improvement as a broader philosophy or systematic process. Techniques like progressive delivery and feature flags support adaptability and safer learning, which ties into the spirit of continuous improvement. The audience is practitioners involved in development/deployment, relevant for continuous improvement initiatives. However, the content does not go deep into continuous improvement methods, cultural aspects, or tools, and the mention is indirect. No penalties are applied.",
    "reasoning_summary": "While the article explores safer deployment strategies and encourages learning from failures—both related to continuous improvement—it doesn't directly address or deeply explore the category. Its relevance is moderate, mainly due to indirect thematic connection and practitioner-focused advice.",
    "level": "Tertiary"
  },
  "Transparency": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Transparency",
    "calculated_at": "2025-05-16T20:26:36",
    "ai_confidence": 19.8,
    "ai_mentions": 0.9,
    "ai_alignment": 2.2,
    "ai_depth": 2.0,
    "ai_intent": 2.7,
    "ai_audience": 6.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on deployment safety and rollback versus fail-forward strategies, discussing modern delivery practices such as feature flags and canary releases. While these are important agile techniques, the content does not directly mention transparency or its core concepts such as openness, visibility, or trust-building. None of the key topics from the Transparency classification are addressed. The audience and signal are appropriate, but alignment, direct mention, depth, and intent show the content is tangential at best.",
    "reasoning_summary": "This piece centers on deployment safety strategies, not transparency. While it addresses practices common in Agile contexts, it does not discuss visibility, openness, or trust—key elements of transparency—yielding a low category fit.",
    "level": "Ignored"
  },
  "Common Goals": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Common Goals",
    "calculated_at": "2025-05-16T20:26:38",
    "ai_confidence": 16.2,
    "ai_mentions": 1.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 4.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content directly discusses deployment safety strategies like rollback vs. rolling forward/fail-forward, focusing on best practices in modern DevOps. However, it does not explicitly mention Common Goals, strategy/execution alignment, or frameworks for shared objectives. The theme is more technical and operational, not focused on aligning team objectives or connecting efforts to organizational mission. There is some minor alignment in the final sentence’s team-oriented reflection, but the primary focus is risk mitigation, not Common Goals as defined.",
    "reasoning_summary": "This piece focuses on deployment strategies and risk management, not on aligning team objectives or Common Goals within Agile or DevOps. It’s operational and technical, with little emphasis on shared objectives, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Company as a Product",
    "calculated_at": "2025-05-16T20:26:39",
    "ai_confidence": 13.18,
    "ai_mentions": 0.0,
    "ai_alignment": 2.6,
    "ai_depth": 2.4,
    "ai_intent": 1.8,
    "ai_audience": 3.1,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses entirely on deployment strategies, specifically on rollback vs. fail-forward approaches for software delivery. There is no direct mention of 'Company as a Product,' nor does it discuss organisational design, customer value, or any of the CaaP core concepts. While it lightly touches modern software practices, it remains technical and operational, not organisational or strategic. Its primary audience is software engineers faced with deployment risks, not organisation designers or strategists interested in CaaP.",
    "reasoning_summary": "This content is about software deployment safety, not Company as a Product. It doesn't discuss organisational strategy, customer-centric design, or CaaP principles—making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Scrum Master",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 5.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 2.5,
    "ai_audience": 0.5,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content centers on deployment strategies, specifically rollback vs. fail-forward, with no explicit or implicit mention of the Scrum Master role, its responsibilities, or impact within Scrum. While the piece discusses team skills in handling errors, these are technical practices unrelated to Scrum Master accountability. The audience appears to be technical practitioners, not targeting Scrum Masters or their organizational impact. Depth and alignment remain low as the content is narrowly focused on deployment technicalities.",
    "reasoning_summary": "This content focuses on deployment strategies, not on the Scrum Master role or its accountability. It doesn't mention or address Scrum-specific responsibilities, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Discovery",
    "calculated_at": "2025-05-16T20:26:41",
    "ai_confidence": 7.3,
    "ai_mentions": 0.1,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 1.2,
    "ai_audience": 1.8,
    "ai_signal": 1.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on deployment safety, specifically contrasting rollback and progressive delivery, and emphasizes engineering and operational strategies rather than exploring user needs or product discovery practices. There is no mention or exploration of methodologies for understanding customer requirements, prioritizing features, or validating product ideas. The main audience seems to be engineering or DevOps practitioners, not product strategists. No penalties apply as the content isn't outdated or critical, though the relevance is very low.",
    "reasoning_summary": "The content discusses deployment safety—not methods for understanding or defining product features—so it barely aligns with Product Discovery. It targets engineers, not discovery practitioners, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-16T20:26:38",
    "ai_confidence": 36.42,
    "ai_mentions": 1.5,
    "ai_alignment": 4.3,
    "ai_depth": 3.9,
    "ai_intent": 3.8,
    "ai_audience": 5.6,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on deployment strategies, particularly arguing the risks of rollback versus rolling forward, and promotes progressive delivery techniques. While related to software delivery practices, it does not directly mention Continuous Integration (CI), nor does it significantly explore principles or tools specific to CI. The audience is likely technical, but the advice aligns more with Continuous Delivery and deployment safety rather than integration practices. No outdated or contradictory information is present.",
    "reasoning_summary": "This content is tangentially related to CI but focuses mainly on deployment strategies like progressive delivery and rollback risks. It lacks direct CI discussion or tool mentions, so while it's relevant to software delivery, it only partially fits the Continuous Integration category.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T20:26:39",
    "ai_confidence": 56.2,
    "ai_mentions": 1.3,
    "ai_alignment": 6.6,
    "ai_depth": 5.1,
    "ai_intent": 6.3,
    "ai_audience": 7.5,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content addresses deployment safety, comparing rollback vs. progressive delivery approaches (feature flags, canary releases). While it references techniques that could generate useful metrics (detect problems early), it does not explicitly discuss metrics, data-driven feedback loops, or continuous improvement cycles. The discussion is relevant to an audience interested in DevOps/Agile practices, but there's limited direct exploration of 'Metrics and Learning' principles. Deeper content would include explicit measurement, feedback mechanisms, or iterative improvement evidence.",
    "reasoning_summary": "This content fits practitioners in Agile/DevOps, focusing on deployment strategies. While it implies learning from failures via progressive techniques, it doesn't directly cover metrics or continuous feedback, resulting in a moderate match to 'Metrics and Learning.'",
    "level": "Tertiary"
  },
  "One Engineering System": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "One Engineering System",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 18.55,
    "ai_mentions": 0.1,
    "ai_alignment": 2.2,
    "ai_depth": 1.8,
    "ai_intent": 2.5,
    "ai_audience": 6.5,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on deployment safety, specifically comparing rollback versus fail-forward and advocating for progressive delivery practices. While these are related to software engineering operations, there is no direct reference to One Engineering System (1ES), its principles, or its integration goals. There's minimal alignment with the category's core purpose, only potentially overlapping in deployment practices. The discussion is not about standardizing tools, frameworks, or engineering integration at the scale 1ES entails.",
    "reasoning_summary": "This content discusses deployment safety and progressive delivery, lacking any explicit mention of One Engineering System or its core themes of integration and standardization. It is related to general software delivery rather than 1ES specifically.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-16T20:26:43",
    "ai_confidence": 54.02,
    "ai_mentions": 2.8,
    "ai_alignment": 6.6,
    "ai_depth": 6.2,
    "ai_intent": 5.8,
    "ai_audience": 8.4,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content discusses deployment strategies and cautions against blind reliance on rollback, advocating progressive delivery and fail-forward approaches. There are references to 'teams' managing deployments, but the core focus is technical (deployment methods for software delivery), not specifically on team dynamics, communication, or shared ownership. The intent, alignment, and depth marginally relate to team collaboration—mainly around skills and practices—but do not explore collaborative processes, trust, or ownership in Agile/DevOps teams in depth.",
    "reasoning_summary": "This content is mainly about deployment strategy, with only indirect discussion of how teams manage risk. While teams are referenced, the focus isn’t on collaboration itself, so it only partially fits the Team Collaboration category.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-16T20:26:44",
    "ai_confidence": 4.47,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.6,
    "ai_intent": 0.5,
    "ai_audience": 1.5,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content discusses deployment strategies (rollback vs. roll forward, progressive delivery) but makes no mention of Artificial Intelligence or its application in Agile, DevOps, or software development. Concepts like feature flags and canary releases are relevant to modern DevOps but not connected here to AI. Audience and signal are slightly higher as the topic would appeal to practitioners in software development, but there's no substantive link to AI, hence the very low scores for mention, alignment, and depth. No penalties were necessary as the content is not outdated or negative in tone.",
    "reasoning_summary": "This content is about software deployment best practices, not about Artificial Intelligence or its application within Agile, DevOps, or software development. There are no AI references, so confidence for this category is extremely low.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-16T20:26:37",
    "ai_confidence": 25.24,
    "ai_mentions": 1.2,
    "ai_alignment": 2.6,
    "ai_depth": 3.5,
    "ai_intent": 3.0,
    "ai_audience": 7.3,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content discusses modern deployment strategies—rollback vs. rolling forward, progressive delivery, feature flags, and failure handling in deployments. While these do overlap with DevOps practices and touch on topics often integrated with source control workflows, the focus is deployment (CD) and operational safety, not directly on version control systems, branching, or code collaboration. There’s no explicit mention of Git, branches, merge conflicts, or similar topics. The target audience overlaps, and there's some conceptual adjacency, but actual relevance to source control is limited.",
    "reasoning_summary": "This content centers on deployment safety and progressive delivery, which is adjacent to but not directly about modern source control. While relevant for DevOps practitioners, it doesn’t specifically cover source control practices or tools.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Team Performance",
    "calculated_at": "2025-05-16T20:26:37",
    "ai_confidence": 76.37,
    "ai_mentions": 5.7,
    "ai_alignment": 8.3,
    "ai_depth": 7.8,
    "ai_intent": 7.2,
    "ai_audience": 8.6,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content clearly addresses delivery methods (progressive delivery, fail-forward) and team-level competencies in handling failures and deployments. It references team skills and systemic approaches, aligning conceptually with the Team Performance tag, especially regarding effective functioning and delivery capability. However, explicit terminology ('team performance') is not frequent, and while the discussion is insightful, it's focused on deployment safety rather than in-depth metrics or long-term patterns. No obsolete or contradicting content is present. The audience is technical and the signal is strong, with minimal filler.",
    "reasoning_summary": "This piece explores how teams manage deployments, emphasizing strategies like fail-forward over rollback. It discusses team-level skills and systemic safety, aligning well with Team Performance, though it's focused more on practices than explicit performance metrics.",
    "level": "Secondary"
  },
  "First Principal": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "First Principal",
    "calculated_at": "2025-05-16T20:26:38",
    "ai_confidence": 26.97,
    "ai_mentions": 0.3,
    "ai_alignment": 2.4,
    "ai_depth": 2.9,
    "ai_intent": 2.7,
    "ai_audience": 7.1,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content challenges a common belief about rollback as a safety net, arguing rollback can be riskier than roll-forward, especially for stateful apps. While it points to the importance of fail-forward and progressive delivery, it does not explicitly invoke, identify, or analyze first principles as foundational, immutable constraints in DevOps or Lean/Agile. The discussion remains at the level of practical strategy (e.g. progressive delivery, feature flags), not at the abstraction of irreducible, non-negotiable truths. There are no direct references to first principles, nor is there an analysis of what makes an approach 'foundational' or non-negotiable; thus, scores are low on mentions, alignment, depth, and intent, with slightly higher scores for audience and signal since the piece targets a DevOps/SRE audience and stays on-topic.",
    "reasoning_summary": "This content debates deployment safety strategies but doesn't discuss first principles themselves. It offers practical advice rather than foundational, immutable truths, so it only weakly fits the 'First Principal' category.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T20:26:38",
    "ai_confidence": 13.24,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 1.3,
    "ai_audience": 2.4,
    "ai_signal": 1.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses entirely on deployment strategies (rollback vs. progressive delivery) and does not discuss cross-functional teams, their definition, structure, or dynamics. Although 'team' is mentioned generically, there is no reference to diverse skills, Agile practices, collaboration, or any key concepts specific to cross-functional teams. Audience may slightly overlap with technical teams, but primary intent is not aligned.",
    "reasoning_summary": "This content discusses deployment safety and team skills but does not address cross-functional teams or their Agile characteristics, resulting in a very low category confidence score.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 2.1,
    "ai_mentions": 0.0,
    "ai_alignment": 1.4,
    "ai_depth": 1.9,
    "ai_intent": 3.2,
    "ai_audience": 5.7,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content is entirely focused on deployment strategies, comparing rollback to roll-forward, and advocating for progressive delivery. There is no direct mention or exploration of backlog refinement or related Agile practices, nor an implicit alignment with the described category definition. The intended audience may overlap at a practitioner level, but topics, intent, and depth are unrelated to backlog refinement. No penalties were needed as the content isn't outdated or critical.",
    "reasoning_summary": "This piece covers deployment strategies and risks of rollback, not backlog refinement. No relevant concepts or terminology are discussed, and the purpose and focus diverge from Agile backlog refinement themes. Its audience may overlap, but content fit is very low.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 12.712,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.2,
    "ai_intent": 2.1,
    "ai_audience": 3.0,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses best practices for deployment safety in modern software delivery, focusing on rollback vs. rolling forward and progressive delivery techniques. It references concepts central to DevOps (e.g., canary releases, feature flags, fail-forward)—which excludes it from Miscellaneous. There are no explicit or implied mentions of Miscellaneous as a topic, and its main intent is to provide actionable insights based on recognized DevOps practices. The depth and audience fit are low for Miscellaneous but higher for technical practitioners.",
    "reasoning_summary": "This content doesn't fit Miscellaneous, as it directly aligns with DevOps deployment strategies and practices, lacking generality or anecdotal focus. Its actionable insights and references to specific techniques further exclude it from this category.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-16T20:26:42",
    "ai_confidence": 81.7,
    "ai_mentions": 3.4,
    "ai_alignment": 9.3,
    "ai_depth": 8.6,
    "ai_intent": 8.0,
    "ai_audience": 8.8,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly critiques the simplistic reliance on rollback as a safety net and advocates for advanced technical practices such as progressive delivery, fail-forward, feature flags, and canary releases—strongly aligned to engineering excellence. It explores the technical risks of rollback in stateful systems, providing practical, in-depth rationale and nudging teams toward practices central to software craftsmanship. While the term 'Technical Mastery' isn't explicitly used, the content’s themes, intended audience (engineers/teams deploying software), and focus on safe deployment best practices fit squarely within this category. Minimal off-topic content and consistently high technical focus yield a strong confidence score. However, few explicit category mentions lower the direct mention score.",
    "reasoning_summary": "This content dives into why rollback isn’t a dependable deployment safety net, highlighting advanced delivery practices like canary releases and feature flags. Aimed solidly at technical practitioners, it offers actionable, deeply aligned advice that fits the core of Technical Mastery.",
    "level": "Primary"
  },
  "Scrum Values": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Scrum Values",
    "calculated_at": "2025-05-16T20:26:44",
    "ai_confidence": 7.9,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 2.5,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on deployment strategies (rollback vs. fail-forward) and risk management in software delivery. It does not directly mention Scrum or any of the Scrum Values (Commitment, Courage, Focus, Openness, Respect), nor does it explore these values conceptually. The audience seems to be technical practitioners, but the connection to the Scrum Values category is extremely weak and largely indirect. There is no explicit or implicit discussion of the foundational principles or values of Scrum.",
    "reasoning_summary": "This piece discusses deployment risks and strategies but doesn't mention or connect to Scrum Values. Its focus is on technical practices, not the principles or culture of Scrum, so it only weakly aligns with the category.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 34.975,
    "ai_mentions": 0.5,
    "ai_alignment": 3.2,
    "ai_depth": 3.5,
    "ai_intent": 4.8,
    "ai_audience": 6.4,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content discusses deployment strategies (rollback vs. progressive delivery/fail-forward) in modern software delivery, which aligns tangentially with agile and product-thinking but never explicitly mentions Agile Product Operating Model or its core concepts, such as continuous product delivery, EBM, organisational change, or product roadmaps. The depth remains technical and deployment-focused, lacking broader principles of APOM. While some target audience overlap exists (practitioners in modern product/software teams), most topics discussed are generic, not APOM-specific. No penalties applied, as it’s not outdated or satirical.",
    "reasoning_summary": "While the post touches on progressive delivery relevant in agile contexts, it lacks explicit references and core elements of the Agile Product Operating Model. Its focus on deployment safety makes it somewhat relevant for practitioners, but it does not meaningfully discuss APOM principles.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-05-16T20:26:48",
    "ai_confidence": 19.2,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.1,
    "ai_intent": 1.5,
    "ai_audience": 6.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content discusses deployment strategies such as rollback vs. fail-forward and progressive delivery but never directly mentions Shift-Left Strategy. While it touches on early problem detection (a tangential principle), the main focus is on deployment techniques like canary releases, not on integrating testing, security, or compliance earlier in the development process. There are no examples or metrics of Shift-Left approaches, and the intent is to reframe safe deployment, not to inform about or advocate for Shift-Left practices.",
    "reasoning_summary": "This content focuses on deployment safety and progressive delivery, not on Shift-Left Strategy. It lacks explicit references and doesn't address moving processes earlier in the development lifecycle. Its peripheral alignment results in a low confidence score.",
    "level": "Ignored"
  },
  "Working Software": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Working Software",
    "calculated_at": "2025-05-16T20:26:49",
    "ai_confidence": 44.15,
    "ai_mentions": 2.7,
    "ai_alignment": 4.6,
    "ai_depth": 4.5,
    "ai_intent": 5.8,
    "ai_audience": 6.2,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content focuses on release strategies and deployment safety, primarily discussing rollback versus progressive delivery techniques. It references practices that impact software quality and reliability but does not directly discuss working software as an artifact or core deliverable in Agile/Scrum. There is only indirect alignment to the category through discussion of keeping software functioning during deployment, but little explicit or in-depth treatment of working software itself. The audience (engineering teams) shares significant overlap with those interested in working software, but the main message is more about deployment strategy and risk management, not about working software as a measure of value or increment. Overall, confidence is moderate due to limited direct reference and conceptual overlap.",
    "reasoning_summary": "While the content touches on quality and reliability in software deployments, it centers on rollback versus progressive delivery rather than explicitly discussing working software as an Agile artifact. As such, it only moderately aligns with the 'Working Software' category.",
    "level": "Tertiary"
  },
  "Digital Transformation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 59.77,
    "ai_mentions": 0.2,
    "ai_alignment": 6.6,
    "ai_depth": 6.4,
    "ai_intent": 6.5,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content discusses modern deployment practices (progressive delivery, fail-forward, feature flags) and touches on software delivery modernization, which are relevant to digital transformation but not directly named or discussed at a strategic, organizational level. There's no explicit mention of digital transformation, business agility, or broader company context. The intent focuses on practical engineering/deployment strategies, which are components of digital transformation but presented in a tactical rather than strategic or cultural frame. The depth is moderate, focused on deployment rather than holistic transformation, and the audience is primarily technical practitioners. Signal-to-noise is high since most content is relevant, but the connection to the category is mostly implicit.",
    "reasoning_summary": "While the article explores modern deployment and failure strategies—key components of digital transformation in practice—it does not explicitly address transformation strategy or organizational context. Its value is mainly tactical for technical teams, making its fit moderately strong but not definitive for this category.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-16T20:26:42",
    "ai_confidence": 54.77,
    "ai_mentions": 2.6,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 6.7,
    "ai_audience": 7.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content centers on modern deployment practices, especially advocating progressive delivery and fail-forward strategies over traditional rollback. These are indicative of recent DevOps shifts, touching on theme-level trends such as feature flags and canary releases. However, it doesn't explicitly analyze broader patterns, present data, or forecast strategic shifts. There is alignment with trend topics, and it's targeted at practitioners, but limited depth and no explicit trend analysis terminology constrains confidence.",
    "reasoning_summary": "The piece discusses modern DevOps practices, hinting at progressive delivery trends, but stops short of systematic trend analysis. It’s relevant and moderately aligned but lacks data-driven exploration or explicit pattern identification, thus gaining a mid-level Trend Analysis confidence score.",
    "level": "Tertiary"
  },
  "Organisational Psychology": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Organisational Psychology",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 8.175,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.6,
    "ai_audience": 2.7,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content addresses technical deployment strategies (rollback vs. progressive delivery), focusing on engineering risk and process rather than psychological factors influencing team behavior, motivation, or organizational dynamics. While there's a brief mention of 'your team handling failure,' this is not developed in a psychological context. The primary audience is DevOps/software engineers, not psychologists or organizational leaders. No penalties applied, as the tone is neutral and up-to-date.",
    "reasoning_summary": "This content is heavily technical and does not engage with Organisational Psychology topics like motivation, leadership, or group dynamics. Its focus is on software deployment risks, so it falls outside the aligned category audience and purpose.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 12.3,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.8,
    "ai_intent": 2.4,
    "ai_audience": 2.6,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content discusses deployment strategies, emphasizing progressive delivery and fail-forward versus rollback. It does not mention Hybrid Agile directly or contextually analyze the integration of agile and traditional methodologies. While relevant to software delivery, it neither explores nor critiques Hybrid Agile frameworks or associated pitfalls. The intended audience is delivery-focused but without a Hybrid Agile lens. Thus, confidence is low for this category.",
    "reasoning_summary": "This content centers on deployment safety, not Hybrid Agile. It lacks direct references or critical analysis of hybrid frameworks, so it only loosely aligns and receives a low confidence score for this category.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T20:26:49",
    "ai_confidence": 12.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.6,
    "ai_intent": 2.0,
    "ai_audience": 2.5,
    "ai_signal": 1.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on deployment strategies (rollback, progressive delivery, fail-forward) and technical risks in software releases. There is no explicit mention of employee engagement or related psychological/social motivation. The discussion is technical and process-oriented, lacking exploration of motivation, teamwork, recognition, or satisfaction. Audience alignment is low, targeting DevOps or engineers, not employee engagement strategists.",
    "reasoning_summary": "This content centers on technical deployment safety and risk, not on employee motivation or engagement. It lacks direct relevance to the employee engagement category, with minimal conceptual or audience overlap.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-16T20:26:51",
    "ai_confidence": 18.6,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 2.2,
    "ai_audience": 4.1,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses exclusively on deployment strategies (rollback vs rolling forward, fail forward, progressive delivery) and the risks posed by stateful apps during rollback. It does not mention TDD, automated testing, or testing methodologies. There is no discussion of writing tests first, the TDD cycle, or how TDD principles impact deployment. Audience is broadly software practitioners but not targeted to TDD. Any relevance to TDD is extremely indirect (e.g., advocacy for safer releases), resulting in very low alignment, mentions, and intent scores. No penalties were required, as content is not outdated or satirical.",
    "reasoning_summary": "This discussion centers on deployment strategies, not TDD. There's no mention or meaningful connection to TDD practices, principles, or audience—resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T20:26:42",
    "ai_confidence": 38.6,
    "ai_mentions": 1.2,
    "ai_alignment": 4.1,
    "ai_depth": 3.6,
    "ai_intent": 4.2,
    "ai_audience": 4.4,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on deployment strategies such as rollback, feature flags, and progressive delivery. While these are relevant to modern software delivery and overlap with platform engineering in terms of deployment automation and safety, there are no direct or explicit mentions of platform engineering, internal developer platforms, or standardization of developer workflows. The discussion targets practitioners concerned with deployment safety, which overlaps with the target audience, but the framing is not focused specifically on platform engineering or the design of internal platforms. The core concepts allude to practices used in IDPs, but without explicit connection or deeper exploration of platform engineering principles, the content only partially aligns.",
    "reasoning_summary": "This content examines deployment strategies like rollback and progressive delivery, relevant to software delivery and tangentially to platform engineering, but lacks direct references or deep alignment to the platform engineering discipline. Its fit with the category is moderate at best.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T20:26:41",
    "ai_confidence": 36.07,
    "ai_mentions": 1.1,
    "ai_alignment": 4.3,
    "ai_depth": 3.2,
    "ai_intent": 3.6,
    "ai_audience": 7.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content critiques reliance on rollback strategies and encourages fail-forward and progressive delivery, relevant to modern DevOps. However, it never explicitly references Lean Thinking or its principles such as waste reduction, flow, or value. The discussion doesn't use Lean vocabulary, address Lean tools, nor delve into Lean-specific themes like value streams or continuous improvement as a formal concept. Its alignment is tangential—progressive delivery shares Lean spirit on efficiency and learning from failure, but the focus is software deployment strategy, not Lean Thinking as a discipline. Audience and signal scores are higher due to practitioner relevance, but overall confidence is limited because Lean is never directly discussed or intentionally applied.",
    "reasoning_summary": "While the content echoes Lean values like learning from failure and improving delivery, it never mentions Lean Thinking or explores its principles directly. The focus is DevOps deployment safety, not Lean philosophy, yielding only modest category confidence.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 27.85,
    "ai_mentions": 0.5,
    "ai_alignment": 2.9,
    "ai_depth": 2.6,
    "ai_intent": 3.6,
    "ai_audience": 6.4,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on deployment strategies, emphasizing the risks of rollback and the merits of progressive delivery, with only fleeting implications that teams should design for safe failure. There is no explicit mention of self-organisation, team autonomy, or its Agile context. Some references to how 'your team handles failure' could relate to empowerment but are not explored in depth. The audience is somewhat relevant (software teams), and the content is clear and focused, but direct alignment and depth for 'Self Organisation' are weak.",
    "reasoning_summary": "This content addresses deployment strategies and team practices but only minimally intersects with self-organisation. While it alludes to team decision-making, it lacks direct discussion of autonomy, Agile, or empowered teams, making the fit for the category weak.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Competence",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 68.04,
    "ai_mentions": 2.2,
    "ai_alignment": 7.2,
    "ai_depth": 6.6,
    "ai_intent": 7.0,
    "ai_audience": 7.1,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "Direct mentions of 'competence' are absent, but the content questions whether teams have the skills to perform complex rollback tasks versus rollforward, implying capability concerns. Conceptually, it aligns with competence by discussing the need for sufficient skills and modern deployment mindsets. The discussion is mainly about deployment strategies, but it critiques the underlying assumptions regarding team skills and safe practices. The intent educates about why technical skill (competence) in handling failure is necessary, though it's not solely focused on competence as a principle, with some focus on process choices. The content speaks to practitioners responsible for technical delivery and decision-making. The focus is mostly relevant, with occasional tangential process talk but little off-topic content.",
    "reasoning_summary": "While the content doesn't name 'competence' directly, it implicitly questions teams' skills in handling deployment failures safely. By spotlighting the importance of solid, modern practices over risky reversals, it aligns well with the competence category for the engineering audience.",
    "level": "Secondary"
  },
  "Decision Making": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T20:26:41",
    "ai_confidence": 48.08,
    "ai_mentions": 2.8,
    "ai_alignment": 5.9,
    "ai_depth": 5.7,
    "ai_intent": 4.6,
    "ai_audience": 6.1,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content discusses deployment strategies such as rollback, roll forward, and progressive delivery within software engineering. While it implies considering options in releases, there is little direct focus on structured, evidence-based decision-making processes, analytic frameworks, or managing cognitive biases. The audience is technical and some relevant themes are present, but depth and alignment with decision-making methodology per se are limited. No outdated practices or contradictory tone identified.",
    "reasoning_summary": "This content partially touches decision-oriented practices in deployment but lacks structured, evidence-based decision-making focus. It suits a technical audience, hints at risk evaluation, but doesn’t deeply align with the Decision Making category criteria.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-16T20:26:40",
    "ai_confidence": 13.75,
    "ai_mentions": 0.6,
    "ai_alignment": 1.8,
    "ai_depth": 1.7,
    "ai_intent": 2.2,
    "ai_audience": 3.4,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content does not directly discuss installation or configuration. It focuses on deployment strategies—specifically, the shortcomings of rollbacks and the merits of fail-forward and progressive delivery. While related to operations and delivery in agile and DevOps contexts, these themes concern release management and risk, not actionable install/configuration processes, procedures, or troubleshooting. There are passing references to technical practices but no substantive alignment with setup or configuration activities.",
    "reasoning_summary": "This content analyzes deployment risks—contrasting rollback with rolling forward and highlighting progressive delivery—but lacks focus on installation or configuration. Its main theme is release management, not actionable setup, so confidence for this category is very low.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Current Value",
    "calculated_at": "2025-05-16T20:26:46",
    "ai_confidence": 28.15,
    "ai_mentions": 0.4,
    "ai_alignment": 2.1,
    "ai_depth": 1.7,
    "ai_intent": 2.3,
    "ai_audience": 6.7,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content addresses progressive delivery and fail-forward strategies in safe deployments, which can impact value delivery in modern software practices. However, it does not directly mention 'Current Value,' nor does it discuss metrics, measurement, or evidence-based management frameworks. The focus is on deployment tactics rather than assessing or optimizing delivered value. There is only indirect conceptual alignment and minimal discussion of value measurement or feedback.",
    "reasoning_summary": "While the content covers modern deployment safety strategies that relate tangentially to value delivery, it lacks explicit discussion of Current Value, its measurement, or evidence-based management. Thus, fit with the 'Current Value' category is weak and mostly indirect.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T20:26:42",
    "ai_confidence": 23.23,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.1,
    "ai_intent": 2.6,
    "ai_audience": 8.2,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on deployment safety, contrasting rollback and roll-forward strategies, with emphasis on technical risks and approaches such as progressive delivery and feature flags. There are no direct references to customer satisfaction, improvements to user experience, or metrics that indicate alignment with the category definition. The main audience is technical DevOps practitioners, which partially overlaps, but the discussion omits customer-centric perspectives, making relevance weak. No penalties applied, as the content is current and not critical of the category.",
    "reasoning_summary": "This piece discusses deployment strategies like rollback and progressive delivery, targeting technical audiences. While process quality can indirectly impact satisfaction, customer experience or feedback aren't addressed, so alignment with 'Customer Satisfaction' is minimal.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Project Management",
    "calculated_at": "2025-05-16T20:26:48",
    "ai_confidence": 41.05,
    "ai_mentions": 1.25,
    "ai_alignment": 4.65,
    "ai_depth": 4.15,
    "ai_intent": 5.3,
    "ai_audience": 7.1,
    "ai_signal": 7.55,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on deployment strategies, particularly the risks of rollback versus roll-forward techniques for stateful applications. It discusses progressive delivery and post-failure processes, which intersect with execution and risk management in projects. However, explicit references to project management principles, methodologies, or tools are absent. The main audience is technical teams (e.g., developers, DevOps), not broadly project managers. The depth touches on management implications for team process and risk, but largely from software delivery and operational perspectives, not holistic project management. The intent aligns partially through its focus on safer project outcomes, but the core theme remains deployment operations.",
    "reasoning_summary": "The content offers relevant insights for technical teams about safer deployment strategies, which have overlap with project execution and risk. However, it doesn't directly reference project management concepts or cater to PM roles, so overall fit is moderate, not strong.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T20:26:41",
    "ai_confidence": 19.85,
    "ai_mentions": 0.5,
    "ai_alignment": 2.0,
    "ai_depth": 2.8,
    "ai_intent": 2.4,
    "ai_audience": 5.5,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content primarily discusses deployment strategies, specifically rollback versus fail-forward and progressive delivery. While modern deployment approaches like progressive delivery align with agile principles, the text does not mention any Agile frameworks (Scrum, Kanban, etc.), principles, or case studies. There are no direct links to the category. The audience overlaps with agile practitioners, and the focus on safe failure and iterative improvement resonates conceptually with Agile, but overall, the content does not directly discuss frameworks, their adoption, or their specific practices. Minimal surface overlap with Agile values is present, but it is tangential.",
    "reasoning_summary": "This content focuses on deployment strategy, not Agile frameworks. While progressive delivery relates to modern, iterative software practices, it doesn't explicitly connect with Agile frameworks or their principles. Minimal alignment leads to low confidence.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T20:26:43",
    "ai_confidence": 53.25,
    "ai_mentions": 1.7,
    "ai_alignment": 6.3,
    "ai_depth": 5.9,
    "ai_intent": 7.2,
    "ai_audience": 7.6,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content focuses on deployment strategies and critiques rollback as a safety net, advocating progressive delivery and fail-forward—concepts more technical in nature. It touches on team habits and safer processes but lacks explicit, in-depth discussion of frameworks or methodologies that foster collaboration, decision-making, or collective intelligence. Direct mentions of social technologies or underlying principles of self-organisation and adaptability are absent. It fits partially—especially for DevOps/Agile practitioners—but doesn’t fully embody the social frameworks outlined in the category.",
    "reasoning_summary": "While the content highlights safer deployment practices and touches on team dynamics, it stays mostly technical and procedural, lacking direct links to collaboration frameworks and social methodologies defined by this category.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T20:26:45",
    "ai_confidence": 22.34,
    "ai_mentions": 0.4,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.8,
    "ai_audience": 4.1,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content is focused on deployment strategies, specifically contrasting rollback vs. rollout in software delivery. There are no direct mentions of product strategy or related frameworks (score: 0.4). The conceptual alignment is low (2.6), as it deals with operational risks rather than vision, roadmapping, or market alignment. Depth is limited to technical deployment risks (2.2). The intent is more about operational best practices than strategic planning (2.8). The audience is somewhat aligned since product strategists must understand deployment risks, but it's still more technical (4.1). Signal-to-noise is moderate due to a clear focus but not on the product strategy topic (4.7). No penalties applied.",
    "reasoning_summary": "This content discusses technical deployment risks and safety nets without focusing on product vision, strategy, or roadmapping. It's mostly operational, so confidence in it fitting 'Product Strategy' is quite low.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Development",
    "calculated_at": "2025-05-16T20:26:48",
    "ai_confidence": 77.8,
    "ai_mentions": 2.6,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "Direct category mentions are low; the text never uses the explicit term 'product development,' but heavily discusses modern delivery methodologies like progressive delivery, feature flags, and fail-forward approaches. The narrative focuses on deployment strategies and risk mitigation which are vital product development practices. It argues against problematic safety nets in favor of continuous, customer-centric, iterative deployment, closely aligning with the defined category. The discussion is moderately deep, offering rationale and examples of safer delivery methods, primarily targeting practitioners involved in product delivery for robust outcomes. No part is outdated, satirical, or off-topic, and all content is relevant.",
    "reasoning_summary": "This content thoroughly explores risk mitigation in deployment, highlighting modern, iterative practices like progressive delivery and fail-forward. While explicit category mentions are limited, its focus on safer, customer-centric delivery strategies aligns well with product development, making it a strong but not perfect fit.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T20:26:51",
    "ai_confidence": 23.8,
    "ai_mentions": 0.2,
    "ai_alignment": 2.0,
    "ai_depth": 2.3,
    "ai_intent": 2.2,
    "ai_audience": 8.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on deployment strategies, specifically the pros and cons of rollback versus fail-forward, and emphasizes technical practices like feature flags and canary releases. There is little to no direct reference to sensemaking, complexity interpretation, or decision-making processes in the organizational context. The alignment and depth are minimal, as the discussion centers on safety and practical delivery concerns rather than frameworks or organizational understanding of uncertainty. The main audience (software practitioners) somewhat overlaps, but content is not tailored for sensemaking discussions. No penalties were necessary as there is no outdated advice or criticism contradicting the category.",
    "reasoning_summary": "This content primarily addresses deployment safety and modern software delivery tactics, not sensemaking. While organizational decision-making is implied, core sensemaking concepts, frameworks, or deep exploration are missing. Thus, fit with the 'Sensemaking' category is low.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T20:26:43",
    "ai_confidence": 6.75,
    "ai_mentions": 0.1,
    "ai_alignment": 0.9,
    "ai_depth": 0.8,
    "ai_intent": 1.5,
    "ai_audience": 1.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content discusses deployment strategies (rollback vs. fail-forward, progressive delivery) for software teams, focusing on technical risk and operational safety. There is no mention of Cell Structure Design, Beta Codex, or related principles. Conceptually, the alignment is minimal; while it loosely touches on autonomy and responsibility, these are in the context of software delivery processes, not organisational structure. The depth is shallow, appealing more to deployment tactics than to structural organisation. No explicit penalties applied as the content is neither outdated nor contradicts the category.",
    "reasoning_summary": "This content centers on software deployment risks and progressive delivery—not organisational design. It doesn’t reference Cell Structure Design, Beta Codex, or relevant principles, resulting in extremely low confidence that it fits the evaluated category.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Artifact",
    "calculated_at": "2025-05-16T20:26:46",
    "ai_confidence": 13.7,
    "ai_mentions": 1.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 2.1,
    "ai_audience": 2.4,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on deployment strategies like rollback and fail-forward, emphasizing techniques for safe delivery (e.g., feature flags, canary releases), but does not mention or discuss artifacts as formal representations of work. There is no discussion of Scrum or Agile artifacts, definitions, or their roles in transparency and adaptation. The main intent is deployment safety, not artifact structure or usage.",
    "reasoning_summary": "This content is focused on deployment strategies, not on artifacts as formal work representations. There's no explicit or implied discussion of Agile or DevOps artifacts, so alignment with the 'Artifact' category is minimal.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 46.55,
    "ai_mentions": 0.7,
    "ai_alignment": 5.1,
    "ai_depth": 5.4,
    "ai_intent": 4.2,
    "ai_audience": 7.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content discusses the comparative risks of rollback versus forward deployment, emphasizing progressive delivery, fail-forward, and minimizing failure, which are related to Agile principles of continuous value delivery and adaptability. However, it does not directly mention Agile, strategy alignment, or organizational vision, and focuses mostly on deployment practices rather than strategic planning. The audience is likely team leads or technical managers, broadly relevant to Agile practitioners but with limited strategic depth. No penalties as content is current and does not undermine Agile framing.",
    "reasoning_summary": "While the post promotes progressive, adaptive deployment—key Agile values—it doesn’t explicitly frame these in an Agile Strategy or organizational context. Its depth on strategic integration is limited, keeping the confidence moderate.",
    "level": "Tertiary"
  },
  "GitHub": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "GitHub",
    "calculated_at": "2025-05-16T20:26:49",
    "ai_confidence": 13.8,
    "ai_mentions": 0.2,
    "ai_alignment": 2.0,
    "ai_depth": 2.5,
    "ai_intent": 3.1,
    "ai_audience": 2.4,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses deployment safety, rollback risks, and progressive delivery strategies like feature flags and canary releases. There are no direct mentions of GitHub, nor any specific reference to GitHub's CI/CD pipelines, Actions, or workflows. The alignment and depth are both weak, since the discussion is platform-agnostic and could apply to many delivery tools and environments. The intent and audience are loosely related to DevOps practices, but not specifically GitHub. Signal is low due to absence of GitHub-specific context. No penalties are applied since there is no outdated info or negative framing.",
    "reasoning_summary": "This content addresses deployment safety and progressive delivery in general, without mentioning GitHub or its tools. Its focus is too broad and lacks direct category relevance, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T20:26:51",
    "ai_confidence": 15.43,
    "ai_mentions": 0.7,
    "ai_alignment": 1.9,
    "ai_depth": 2.4,
    "ai_intent": 1.1,
    "ai_audience": 6.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content discusses deployment best practices (rollback vs. roll forward, progressive delivery) but does not mention Azure Pipelines or any specifics about its configuration, tools, or practices. The principles align with CI/CD deployment concerns, and the audience may overlap with pipeline practitioners, but there is no explicit or implied reference to Azure Pipelines itself. Substantive exploration of deployment safety is present, but it remains generic and detaches from platform-specific application, leading to a low confidence fit for Azure Pipelines.",
    "reasoning_summary": "While this content addresses deployment best practices relevant to CI/CD, there's no mention of Azure Pipelines or tailored information for its users, making its fit with the category weak and resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Leadership",
    "calculated_at": "2025-05-16T20:26:43",
    "ai_confidence": 27.45,
    "ai_mentions": 0.8,
    "ai_alignment": 3.2,
    "ai_depth": 4.0,
    "ai_intent": 2.7,
    "ai_audience": 3.3,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content is focused on deployment strategies, particularly safer alternatives to rollback in software delivery (like fail-forward and progressive delivery). There is a general question about 'how your team handles failure,' which could tangentially connect to team practices, but leadership-specific language, frameworks, roles, or philosophies are essentially absent. The main ideas and advice do not target leadership topics such as cultivating leadership styles, inspiring teams, or driving cultural/organizational change. The audience seems to be practitioners or technical leads, not leaders per se. While some practices mentioned would be relevant for leaders to understand, there's no explicit or robust exploration of leadership themes.",
    "reasoning_summary": "This content centers on technical deployment strategies rather than the role, behaviors, or challenges of leaders. Its value for leadership is incidental and indirect, keeping confidence in the leadership fit quite low.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T20:26:46",
    "ai_confidence": 23.45,
    "ai_mentions": 0.5,
    "ai_alignment": 3.7,
    "ai_depth": 2.8,
    "ai_intent": 2.9,
    "ai_audience": 5.9,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on deployment strategies for minimizing risk, comparing rollback with fail-forward and progressive delivery for safer releases. While these practices could indirectly impact customer experience by reducing incidents, there is no direct mention of customer retention, engagement, satisfaction, or strategies aimed at minimizing churn. The discussion remains technical (deployment safety/net), not user- or retention-focused. Thus, alignment and depth scores are low, with only secondary relevance to the category.",
    "reasoning_summary": "This content examines safe deployment practices but stops short of discussing customer retention or engagement. Its technical focus (rollback vs. fail-forward) is not framed around retaining users or enhancing their experience, so confidence for the 'Customer Retention' category is low.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Ethos",
    "calculated_at": "2025-05-16T20:26:44",
    "ai_confidence": 53.57,
    "ai_mentions": 2.1,
    "ai_alignment": 6.8,
    "ai_depth": 6.1,
    "ai_intent": 7.0,
    "ai_audience": 7.3,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on deployment safety and challenges common assumptions about rollback versus fail-forward strategies. It hints at underlying beliefs about system resilience and safe failure handling, aligning somewhat conceptually with ethos as foundational conviction. However, it largely discusses practical deployment strategies rather than deeply exploring the core values or convictions underpinning system evolution, accountability, or authentic transformation. There are no direct mentions of 'ethos', and the discussion is more tactical than foundational. The main audience—delivery teams and practitioners—matches somewhat, and the signal is decent but practical rather than principle-driven.",
    "reasoning_summary": "While the post questions a common belief and hints at system-level convictions (like designing for safe failure), it mainly addresses practical techniques and risks. There's some conceptual alignment with 'ethos', but the focus on tactics over foundational values limits its fit in this category.",
    "level": "Tertiary"
  },
  "Windows": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Windows",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 3.92,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.4,
    "ai_intent": 2.2,
    "ai_audience": 3.5,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses on general deployment strategies (rollback vs. roll forward, progressive delivery) without referencing Windows, its features, or specific ecosystem details. The themes are generic to software engineering, not OS- or Windows-specific. No explicit mentions of Windows or Windows deployment. Audience and purpose are more broadly DevOps/software teams; signal is low for Windows relevance.",
    "reasoning_summary": "This content discusses deployment philosophies like rollback versus fail-forward, but offers no specific references to Windows or its environment. Its focus is on general best practices, not Windows-specific guidance, so it only marginally fits the category.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T20:26:50",
    "ai_confidence": 18.46,
    "ai_mentions": 1.1,
    "ai_alignment": 2.8,
    "ai_depth": 2.7,
    "ai_intent": 2.2,
    "ai_audience": 5.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on software deployment strategies (rollback vs. fail-forward/progressive delivery) and risk management. It briefly mentions teams and skills, but does not discuss values, leadership, cultural transformation, or other organisational culture themes beyond incidental reference. Its primary focus is technical practices rather than culture, yielding low scores across key dimensions.",
    "reasoning_summary": "This content addresses technical deployment practices and risks, with only a passing mention of team capability. It lacks meaningful discussion of organisational culture factors or transformation, so its fit for the category is minimal.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T20:26:51",
    "ai_confidence": 49.7,
    "ai_mentions": 2.2,
    "ai_alignment": 5.5,
    "ai_depth": 5.6,
    "ai_intent": 4.9,
    "ai_audience": 8.7,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 50.0,
    "reasoning": "The content critiques the belief in rollback as a primary safety net and advocates for fail-forward strategies (feature flags, canary releases, progressive delivery) to handle failure more safely. While these practices are associated with innovative deployment and operational methods, the discussion focuses on safe releases rather than directly measuring or enhancing innovation capabilities. Innovation is implied through references to modern delivery and safer approaches, but the content does not explicitly delve into metrics, cycles, or capacity-building for innovation as outlined in the category definition. The primary audience appears to be practitioners and leaders in modern software delivery, which aligns well with typical innovation stakeholders, but the overall conceptual depth and thematic alignment to \"Ability to Innovate\" are moderate rather than deep or explicit.",
    "reasoning_summary": "The content focuses on safer deployment strategies like progressive delivery and fail-forward, which relate to innovative practices. However, it doesn’t thoroughly explore mechanisms or metrics assessing an organization's ability to innovate, so its fit to 'Ability to Innovate' is moderate but not strong.",
    "level": "Tertiary"
  },
  "Practice": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Practice",
    "calculated_at": "2025-05-16T20:26:52",
    "ai_confidence": 92.347,
    "ai_mentions": 7.7,
    "ai_alignment": 9.8,
    "ai_depth": 9.3,
    "ai_intent": 8.7,
    "ai_audience": 8.9,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly discusses deployment practices, specifically the pitfalls of rollback versus safer progressive delivery techniques like feature flags and canary releases. It highlights actionable, repeatable team behaviors that fit the 'Practice' category and gives depth by explaining risks, rationale, and the alternatives. The content targets practitioners, is focused, and offers relevant insights, though explicit use of certain category terminology is modest.",
    "reasoning_summary": "This discussion is highly aligned with the 'Practice' category, as it explores actionable deployment techniques and their impact on team safety and delivery. The depth and relevance make it a strong fit, with only slight room to improve explicit mention of category keywords.",
    "level": "Primary"
  },
  "Increment": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Increment",
    "calculated_at": "2025-05-16T20:26:46",
    "ai_confidence": 13.67,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.7,
    "ai_intent": 1.8,
    "ai_audience": 3.4,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content analyzes software deployment safety, focusing on rollback versus progressive delivery (e.g., canary releases, feature flags). It does not mention Scrum, Agile, or Increment, nor does it discuss producing a usable output per iteration. While relevant to software engineering teams, the discussion centers on deployment and safety, not on the creation, measurement, or delivery of Increments as defined in Scrum. Therefore, alignment, depth, and mentions are low, reflecting minimal conceptual fit.",
    "reasoning_summary": "This content centers on safe software deployment and rollout strategies, not the nature or delivery of Increments in Scrum or Agile. It doesn't discuss working software delivery per iteration, making its fit with the 'Increment' category very limited.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T20:26:46",
    "ai_confidence": 15.532,
    "ai_mentions": 0.5,
    "ai_alignment": 2.1,
    "ai_depth": 2.9,
    "ai_intent": 2.5,
    "ai_audience": 3.2,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content is focused on deployment strategies (rollback vs. fail-forward) and progressive delivery (feature flags, canary releases) relevant to software engineering and DevOps. There are no direct or indirect references to Lean Startup concepts such as MVP, Build-Measure-Learn, or validated learning. The main audience is operational/engineering teams rather than entrepreneurs. While iterative improvement and risk management are mentioned, the context is technological deployment, not business hypothesis testing or startup methodology. Consequently, the connection to Lean Startup is extremely weak.",
    "reasoning_summary": "This content addresses software deployment and risk in production, not Lean Startup principles like MVP or validated learning. It targets engineers, not startup practitioners, and lacks meaningful overlap with Lean Startup methodology, resulting in low confidence.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Throughput",
    "calculated_at": "2025-05-16T20:26:49",
    "ai_confidence": 5.06,
    "ai_mentions": 0.15,
    "ai_alignment": 0.7,
    "ai_depth": 0.7,
    "ai_intent": 0.11,
    "ai_audience": 1.03,
    "ai_signal": 0.18,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content focuses on deployment safety, fail-forward approaches, and risks of rollback in stateful applications, with no mention or analysis of throughput as a delivery metric. There's no discussion on delivery rate, team capacity, or performance metrics; all key topics for the category are absent. Audience may overlap with practitioners interested in throughput, but the content is neither aligned conceptually nor in purpose. No penalties applied as no contradiction or outdated information is present.",
    "reasoning_summary": "This piece discusses deployment strategies, not throughput metrics. It lacks any substantial connection to throughput measurement, analysis, or visualisation, so confidence in categorising it under 'Throughput' is extremely low.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T20:26:51",
    "ai_confidence": 19.575,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.9,
    "ai_intent": 2.8,
    "ai_audience": 5.2,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on deployment strategies, specifically contrasting rollback with progressive delivery and fail-forward approaches. While it touches on concepts (like progressive delivery and team process) that can relate to asynchronous workflows, it does not explicitly discuss asynchronous development, its principles, remote teamwork, or relevant tools. Instead, the main thrust is deployment safety, not how distributed, asynchronous teams operate. The audience overlaps (engineering/dev teams), but little content is directly aligned with the category.",
    "reasoning_summary": "This content focuses on deployment safety and strategies, not on asynchronous development practices or remote team collaboration. Any overlap is indirect and incidental, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T20:26:53",
    "ai_confidence": 85.35,
    "ai_mentions": 7.7,
    "ai_alignment": 9.3,
    "ai_depth": 8.9,
    "ai_intent": 8.5,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content reframes rollback as risky and advocates for progressive delivery and fail-forward strategies, directly referencing practices like feature flags and canary releases. These are core components of frequent release methodologies. The alignment and depth scores are high due to detailed discussion of deployment safety over reversals. Direct mentions are good, though the phrase 'Frequent Releases' is not used; instead, related concepts are named. The audience, signal, and intent scores are strong, targeting delivery and DevOps practitioners seeking modern release strategies.",
    "reasoning_summary": "This content challenges the rollback mindset and emphasizes progressive delivery, highlighting key frequent release practices like feature flags and safe fail-forward. Its focus, tone, and actionable advice strongly align with the Frequent Releases category.",
    "level": "Primary"
  },
  "Philosophy": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T20:26:53",
    "ai_confidence": 29.86,
    "ai_mentions": 1.3,
    "ai_alignment": 3.6,
    "ai_depth": 2.5,
    "ai_intent": 3.0,
    "ai_audience": 6.2,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses on deployment strategies, cautioning against relying on rollback and recommending progressive delivery. While it hints at underlying principles (e.g., 'designing deployments so failure is safe'), it quickly shifts to practical advice and tool-centric techniques. There are no explicit references to philosophy or foundational beliefs. Its intent is primarily procedural and aimed at practitioners, not philosophical exploration or strategic decision-makers. Content is somewhat relevant to philosophy, but the discussion remains surface-level and anchors to practice rather than theory.",
    "reasoning_summary": "This content focuses on best practices for deployment, emphasizing fail-forward over rollback. While it briefly touches on principles, it primarily discusses tools and techniques rather than the philosophical foundations behind them, resulting in low alignment with the Philosophy category.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Tool",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 63.27,
    "ai_mentions": 2.8,
    "ai_alignment": 7.4,
    "ai_depth": 7.7,
    "ai_intent": 6.5,
    "ai_audience": 8.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content does not directly focus on a specific tool, but it discusses progressive delivery, feature flags, and canary releases, which are tool-based techniques relevant to Agile/DevOps. The main thrust is conceptual, comparing rollback vs. rollforward strategies, with practical mention of how certain tooling (feature flags, automated halts) enhances deployment safety. The discussion is moderately deep, with strong alignment to practitioners (audience). No outdated or negative tone detected. Confidence is moderate due to the lack of in-depth, tool-specific exploration.",
    "reasoning_summary": "While not tool-centric, the content covers deployment techniques like feature flags and canary releases, showing moderate depth and good audience fit. The focus is more on conceptual strategy than on hands-on tool application, so the confidence is respectable but not high.",
    "level": "Secondary"
  },
  "Technical Leadership": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 64.278,
    "ai_mentions": 2.2,
    "ai_alignment": 7.4,
    "ai_depth": 6.9,
    "ai_intent": 6.8,
    "ai_audience": 7.6,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content addresses deployment strategies and decision-making (fail-forward vs rollback), which are relevant to technical leadership and DevOps practices. However, it doesn't directly mention technical leadership or agile methodologies, nor does it engage with broader leadership topics like team facilitation or mentoring. The primary audience appears to be engineers or team leads. It demonstrates some depth by discussing technical risks and progressive delivery, but lacks explicit reference or guidance for technical leaders in an agile context.",
    "reasoning_summary": "This content discusses advanced deployment strategies and touches on technical decision-making relevant to leaders but stops short of directly addressing technical leadership concepts or agile team dynamics. It's moderately relevant, with good depth for practitioners and team leads.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T20:26:50",
    "ai_confidence": 45.7,
    "ai_mentions": 0.8,
    "ai_alignment": 4.3,
    "ai_depth": 4.7,
    "ai_intent": 4.5,
    "ai_audience": 7.2,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content evaluates deployment safety nets, arguing against rollbacks and suggesting fail-forward and progressive delivery. It implies the need for teams to learn from mistakes and improve deployment practices. However, continuous learning, as defined, is not directly named or deeply explored. The piece aligns tangentially via the growth mindset and team adaptability, but lacks depth on knowledge sharing, feedback loops, or explicit continuous improvement. The audience is likely DevOps or Agile practitioners, which aligns. Most of the content is focused and relevant, but the primary theme centers on deployment strategies rather than the broader practices of continuous learning.",
    "reasoning_summary": "This content discusses safer deployment strategies, indicating some overlap with growth mindset and team learning, but it doesn't directly address continuous learning principles or practices. The focus is practical DevOps deployment decisions rather than explicit knowledge sharing or improvement cycles.",
    "level": "Tertiary"
  },
  "Agile Transformation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 33.65,
    "ai_mentions": 0.5,
    "ai_alignment": 4.6,
    "ai_depth": 4.2,
    "ai_intent": 3.8,
    "ai_audience": 6.2,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on deployment strategies, specifically the risks of rollback versus fail-forward and progressive delivery in software releases. While these can be components of agile technical practices, the article does not directly reference Agile Transformation, its principles, mindsets, or organizational change strategies. There is some conceptual overlap regarding safe experimentation and adaptability, but the main theme is deployment safety rather than the broader scope of leading Agile transformations. The content lightly addresses practitioners who may be involved in Agile work, but it does not target transformation leaders or engage with change management discussions relevant to the category.",
    "reasoning_summary": "This piece centers on deployment tactics and safer methods for software releases, not Agile Transformation. While relevant for Agile teams, it doesn’t address organizational agility, mindsets, or transformation strategies, so confidence is low for the specified category.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Management",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 36.9,
    "ai_mentions": 0.2,
    "ai_alignment": 4.6,
    "ai_depth": 3.9,
    "ai_intent": 3.7,
    "ai_audience": 4.5,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on software deployment strategies, emphasizing the limitations of rollback and promoting progressive delivery. While relevant to product delivery practices, it barely addresses the strategic, cross-functional, or business-oriented aspects central to Product Management. There is no explicit mention of product management, frameworks, or methodologies relevant to the category. The main audience appears to be engineering or DevOps, not product managers. Alignment and depth are superficial from a product management perspective—primarily focusing on technical risk mitigation rather than broader product strategy or stakeholder alignment.",
    "reasoning_summary": "This content explores deployment risks and progressive delivery, but its technical focus and lack of product management context result in low confidence for this category.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T20:26:53",
    "ai_confidence": 90.39,
    "ai_mentions": 6.6,
    "ai_alignment": 9.7,
    "ai_depth": 8.6,
    "ai_intent": 8.9,
    "ai_audience": 8.8,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content directly addresses operational practices in software delivery by challenging the misconception of rollback as a safety net and advocating for fail-forward and progressive delivery strategies. It discusses specific techniques (feature flags, canary releases, automated rollback halts), considers common issues with rollback (stateful apps, complexity), and focuses on designing safer deployments—aligning with best practices in Agile, DevOps, and Lean. The target audience is clearly practitioners seeking to optimize operations, with focused, relevant, and practical content throughout. No outdated or contradictory viewpoints, so no penalties applied.",
    "reasoning_summary": "This content confidently fits 'Operational Practices'—it explores progressive deployment strategies, critiques rollback, and provides actionable advice for safer software delivery, all highly relevant to practitioners focused on operational efficiency.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T20:26:47",
    "ai_confidence": 34.92,
    "ai_mentions": 1.3,
    "ai_alignment": 4.2,
    "ai_depth": 3.9,
    "ai_intent": 3.6,
    "ai_audience": 7.4,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content discusses deployment strategies, challenging the traditional view that rollback is the safest option and promoting progressive delivery and fail-forward practices. It touches lightly on complexity by implying the unpredictability and risks of deployment in complex systems, especially with stateful applications, and the need to design for safe failure. However, it does not directly reference complexity theory, adaptive systems, or frameworks like Cynefin, nor does it delve deeply into non-linear or emergent behaviors. The main focus is pragmatic advice for modern software teams, so while there is conceptual overlap with complexity thinking (handling uncertainty, avoiding reductionism), the explicit and substantive alignment is moderate at best.",
    "reasoning_summary": "The content briefly nods to complexity concepts (uncertainty, state, and safe failure), but it mainly offers practical deployment advice. It lacks explicit use of complexity theory or frameworks, so confidence for classification is moderate and not high.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T20:26:55",
    "ai_confidence": 26.35,
    "ai_mentions": 0.5,
    "ai_alignment": 3.9,
    "ai_depth": 2.8,
    "ai_intent": 3.2,
    "ai_audience": 8.2,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content discusses deployment strategies, emphasizing fail-forward, progressive delivery, feature flags, and canary releases—concepts highly relevant to DevOps and applicable within Azure DevOps. However, it never explicitly mentions Azure DevOps or ties its recommendations to that platform's services or practices. While the themes match DevOps principles, there's no direct reference, technical detail, or audience focus on Azure DevOps users. The general deployment advice could apply to any CI/CD tool or platform, resulting in low scores for direct mention, alignment, depth, and intent. The audience is relevant (software delivery professionals), but the content lacks category-specific focus.",
    "reasoning_summary": "While the content covers core DevOps deployment principles and practices that Azure DevOps supports, it never references Azure DevOps directly. Its insights are generic enough to apply to any modern CI/CD or deployment tool, so confidence in its fit for the Azure DevOps category is low.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T20:26:49",
    "ai_confidence": 48.2,
    "ai_mentions": 1.1,
    "ai_alignment": 5.7,
    "ai_depth": 4.8,
    "ai_intent": 6.2,
    "ai_audience": 7.0,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content centers on deployment safety—contrasting rollback versus roll-forward strategies, especially for stateful apps. It promotes progressive delivery techniques like feature flags and canary releases. However, while these strategies are compatible with Lean/DevOps and can impact flow by reducing deployment bottlenecks, the content never explicitly addresses 'flow efficiency,' throughput, WIP limits, or cycle/lead time. Its main focus is risk mitigation, not direct flow optimisation. The audience fit aligns well with practitioners in software delivery/DevOps. Depth and signal are moderate: while progressive delivery is discussed, the link to flow efficiency is only implicit.",
    "reasoning_summary": "This piece discusses safer deployment via progressive delivery and fail-forward, which can benefit flow, but does not directly address flow efficiency concepts or metrics. Its relevance to the category is tangential rather than central, resulting in a moderate confidence score.",
    "level": "Tertiary"
  },
  "Strategic Goals": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T20:26:50",
    "ai_confidence": 18.65,
    "ai_mentions": 0.5,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.0,
    "ai_audience": 4.7,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on deployment strategies, evaluating rollback versus roll-forward, highlighting risks with stateful applications, and advocating for progressive delivery. There are no direct mentions or exploration of strategic goals, long-term objectives, alignment to agile strategy, or business agility at an organizational level. While some practices discussed (e.g., fail forward, progressive delivery) could support broader strategic aims, the discussion remains tactical and operational. The primary intent is educating on safer deployment, not on setting or aligning strategic goals. The audience is practitioners and technical teams tackling software delivery challenges. The content is tightly focused on technical deployment, providing little signal relevant to strategic goals. No penalties were necessary as the content is neither outdated nor critical of the category.",
    "reasoning_summary": "This content is tactical, addressing deployment safety rather than discussing or aligning with strategic goals. It educates practitioners on roll-forward strategies, lacking any strategic planning or organizational agility focus—resulting in very low relevance to the Strategic Goals category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T20:26:56",
    "ai_confidence": 2.21,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 2.1,
    "ai_audience": 3.2,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses on deployment safety nets, progressive delivery, and rollback strategies in software engineering, particularly for stateful applications. It does not mention Liberating Structures, related facilitation approaches, or any methods from that toolkit. No reference is made to facilitation, group engagement, or specific practices tied to Liberating Structures, and the intent is to advise software delivery strategies, not facilitation. Audience may overlap with practitioners but is mismatched for the category.",
    "reasoning_summary": "This content is purely about software deployment and rollback strategies, lacking direct references or conceptual ties to Liberating Structures. It doesn't address facilitation, team interaction, or methods from the Liberating Structures toolkit.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T20:27:03",
    "ai_confidence": 77.66,
    "ai_mentions": 4.7,
    "ai_alignment": 8.3,
    "ai_depth": 7.7,
    "ai_intent": 7.1,
    "ai_audience": 7.9,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content addresses deployment strategies, urging readers to adopt progressive delivery and fail-forward approaches such as feature flags and canary releases. These methods are core to Agile/DevOps value delivery, focusing on limiting deployment risk and ensuring stable, incremental delivery to customers. The discussion is well-aligned with value delivery but does not explicitly name 'value delivery,' and its depth centers on deployment rather than broader value stream optimization. The audience appears to be technical practitioners, matching the category, and the argument is relevant and tightly focused.",
    "reasoning_summary": "This content clearly promotes Agile and DevOps practices that support iterative, safe delivery and customer value, especially through progressive delivery and fail-forward strategies. While there are no direct 'value delivery' mentions, the underlying themes and guidance fit the category very well.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T20:27:07",
    "ai_confidence": 12.85,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 3.3,
    "ai_audience": 3.5,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on software deployment strategies (rollback vs. roll-forward/fail-forward) for stateful applications, mentioning concepts like progressive delivery and risk mitigation. While this indirectly touches on organisational practices and team skills, there are no explicit references to Organisational Physics, systems thinking, or the interplay between organisational elements. The content is technical and operational, aimed at engineering teams, and lacks discussion of feedback loops, organisational dynamics, or complexity theory. Any connection to the category is tangential and not substantial.",
    "reasoning_summary": "This piece mainly discusses technical deployment approaches and risks. It only vaguely relates to organisational learning or structure and does not touch on systems thinking or the holistic dynamics central to Organisational Physics. Therefore, it has a very low fit to the category.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T20:27:00",
    "ai_confidence": 39.85,
    "ai_mentions": 0.3,
    "ai_alignment": 5.9,
    "ai_depth": 4.8,
    "ai_intent": 4.9,
    "ai_audience": 9.2,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content discusses deployment strategies focusing on safety during software releases (fail-forward, progressive delivery). Psychological safety is not directly mentioned. The alignment is moderate: the message centers on safety in processes, not team psychological well-being. The depth is shallow for this category, since risk, team learning, or error openness are not explored from a psychological or interpersonal perspective. Intent is focused on technical safety rather than psychological. Audience strongly aligns with practitioners but content is only tangentially related to psychological safety. No penalties applied as it's current and not negative.",
    "reasoning_summary": "While this content highlights technical safety practices and risk management in deployments, it lacks direct reference to psychological safety or its impact on team dynamics. Its primary focus is technical, making it a partial but not strong fit for this category.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T20:27:03",
    "ai_confidence": 23.37,
    "ai_mentions": 0.4,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 3.1,
    "ai_audience": 4.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on deployment strategies like rollback, rolling forward, and progressive delivery within software engineering, emphasizing risk management in technical deployments. There are limited or no direct mentions of entrepreneurship or its core concepts such as innovation, value creation, or entrepreneurial mindset. The audience appears to be technical teams, not entrepreneurs or those focused on building or scaling ventures. The intent is to inform about best practices in software delivery, not to foster entrepreneurial thinking or principles. There is minor overlap insofar as risk management is discussed, but not in the explicit context of founding or running a business. The content is relevant for DevOps or engineering management, not for entrepreneurship.",
    "reasoning_summary": "While the content discusses risk management and safe deployments, it doesn’t directly connect to entrepreneurial principles, audiences, or strategies. Its focus is technical best practices, not entrepreneurship, resulting in low confidence for this classification.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Framework",
    "calculated_at": "2025-05-16T20:27:04",
    "ai_confidence": 13.72,
    "ai_mentions": 0.6,
    "ai_alignment": 1.7,
    "ai_depth": 1.2,
    "ai_intent": 2.5,
    "ai_audience": 3.4,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses deployment safety strategies, contrasting rollback versus progressive delivery and fail-forward approaches. However, it does not reference, describe, or analyze any frameworks, nor does it discuss implementations, guideline structures, or adaptation as required for the 'Framework' category. The focus is on deployment techniques, not frameworks or their methodologies.",
    "reasoning_summary": "The content focuses on deployment safety and techniques, not on framework structures or implementation, which are central to the 'Framework' category. Therefore, the fit is weak and confidence is low.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T20:27:06",
    "ai_confidence": 43.1,
    "ai_mentions": 0.4,
    "ai_alignment": 4.7,
    "ai_depth": 3.0,
    "ai_intent": 4.6,
    "ai_audience": 6.3,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content focuses on deployment strategies like rollback versus roll forward, emphasizing safer, progressive delivery and fail-forward. While these concepts overlap with Lean's aim for continuous improvement and minimizing waste from failed deployments, the text neither references Lean Principles directly nor explicitly discusses Lean core concepts, tools, or terminology. Its main purpose addresses DevOps and deployment reliability, which align only partially with Lean’s focus on waste and value. Target audience—software teams dealing with deployments—has moderate overlap with Lean practitioners, but the lack of explicit Lean framing, terminology, or substantive discussion limits both depth and confidence. No penalties: the content is modern, not critical of Lean, and not outdated.",
    "reasoning_summary": "This content discusses safe deployment practices and progressive delivery, which indirectly align with Lean values like efficiency and risk reduction but without direct reference or detailed exploration of Lean principles. Suitable for a technical audience, but the Lean connection is slight and implicit.",
    "level": "Tertiary"
  },
  "Scrum": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Scrum",
    "calculated_at": "2025-05-16T20:27:07",
    "ai_confidence": 10.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.3,
    "ai_intent": 1.1,
    "ai_audience": 4.0,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses rollback versus roll-forward deployments and progressive delivery practices, focusing on engineering safety and deployment. There are no mentions of Scrum or its roles, events, artifacts, or principles. The audience (software delivery professionals) only overlaps vaguely with those interested in Scrum, but the content does not align with the core Scrum framework or its philosophy.",
    "reasoning_summary": "This content centers on deployment strategies and safety practices unrelated to Scrum's framework, concepts, or intent. There are no relevant Scrum references, making it a poor fit for the Scrum category.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Principle",
    "calculated_at": "2025-05-16T20:27:00",
    "ai_confidence": 67.925,
    "ai_mentions": 2.7,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 7.1,
    "ai_audience": 7.9,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content critiques the practice of treating rollback as the default safety net and advocates for progressive delivery and fail-forward strategies. These recommended deployments embody actionable principles (e.g., designing for safe failure), directly relating to 'Value Delivery', 'Adaptability', and embracing learning from failures, hallmarks of modern DevOps principles. Direct mention of 'principle' is absent, lowering that score, but conceptual alignment and examples are strong. The audience is technical teams, fitting the category. Signal-to-noise is high due to clear, focused discussion.",
    "reasoning_summary": "This piece challenges rollback as a best practice and advocates fail-forward, progressive delivery strategies—aligning closely with actionable DevOps principles like adaptability and safe deployments. While it doesn't mention 'principles' directly, its guidance and audience are well-matched.",
    "level": "Secondary"
  },
  "Product Owner": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T20:27:00",
    "ai_confidence": 4.1,
    "ai_mentions": 0.1,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 0.2,
    "ai_audience": 1.1,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content does not mention the Product Owner or focus on their accountability within Scrum. It discusses deployment strategies, rollback risks, and fail-forward principles relevant for DevOps, release engineers, or technical team leads, not specifically Product Owners. Themes like progressive delivery and handling failure, while related to delivery excellence, do not directly pertain to value maximization, prioritization, or stakeholder management. The intent, depth, and alignment are minimal with respect to the Product Owner's role.",
    "reasoning_summary": "This piece focuses on deployment tactics and risks, not the accountability or core duties of a Product Owner. It’s relevant to technical operations rather than to Scrum roles or value-driven product leadership.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T20:27:00",
    "ai_confidence": 7.55,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.0,
    "ai_intent": 1.1,
    "ai_audience": 2.3,
    "ai_signal": 1.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on software deployment strategies (rollback vs. roll forward, progressive delivery) and safer releases. There are no direct mentions, definitions, or alignment with Minimum Viable Product concepts (e.g., hypothesis validation, Lean Startup, MVP development strategies) in any explicit or implicit way. The audience is practitioners or engineers concerned with deployment reliability, not those discussing MVPs or market validation. The intent and signal-to-noise scores are low because all discussion is about deployment risk strategies, not MVPs, Agile experimentation, or lean product strategy.",
    "reasoning_summary": "This content centers on deployment and release strategies, not on Minimum Viable Products or their principles. It does not mention MVPs, nor does it align with MVP development, learning cycles, or market validation. Therefore, its fit with the MVP category is extremely low.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Observability",
    "calculated_at": "2025-05-16T20:27:00",
    "ai_confidence": 32.45,
    "ai_mentions": 0.4,
    "ai_alignment": 3.3,
    "ai_depth": 3.6,
    "ai_intent": 3.1,
    "ai_audience": 7.0,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content critiques the belief that rollback is a reliable safety net and advocates for fail-forward and progressive delivery strategies, like canary releases and feature flags. While these are relevant to modern DevOps and reliability, the discussion does not explicitly mention, define, or deeply explore the principles or tooling of observability. Metrics, logs, traces, or direct observability practices are absent. The intended audience overlaps with the observability space (e.g., DevOps teams), and the content focuses largely on deployment safety strategies. However, the fit with the observability category is only partial, as it orbits around, rather than directly engages with, observability concepts.",
    "reasoning_summary": "The content focuses on deployment strategies and failover safety rather than observability. While some overlap exists in audience and context, there are no direct references or deep discussion of observability principles, tools, or practices, making the fit to the category relatively weak.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T20:27:02",
    "ai_confidence": 31.05,
    "ai_mentions": 0.1,
    "ai_alignment": 3.8,
    "ai_depth": 2.7,
    "ai_intent": 3.3,
    "ai_audience": 6.0,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content does not explicitly mention decision theory or its key terms, resulting in a very low mentions score. While it loosely aligns with decision-making under uncertainty (contrasting rollback with fail-forward strategies), it focuses more on deployment tactics than decision theory concepts, limiting both alignment and depth. The primary intent centers on best practices for software deployments, not on frameworks or models of decision-making. The audience overlaps somewhat due to the relevance for technical strategists, and the content is mostly focused without much off-topic filler. There is no evidence of outdated practices or critical tone requiring penalties.",
    "reasoning_summary": "This content centers on software deployment tactics, with only a minimal link to decision theory's exploration of choices under uncertainty. It lacks explicit discussion of decision theory concepts, so its fit with the category is weak and primarily incidental.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T20:27:03",
    "ai_confidence": 77.12,
    "ai_mentions": 2.7,
    "ai_alignment": 8.9,
    "ai_depth": 7.8,
    "ai_intent": 8.2,
    "ai_audience": 8.8,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "Direct mentions of 'technical excellence' are absent, but the content deeply explores technical deployment strategies aligned with engineering excellence: progressive delivery, roll-forward vs. rollback, and designing for safe failure. It targets technical teams, avoids tool-centricity, and maintains high focus. No outdated or undermining content is present。",
    "reasoning_summary": "While the content doesn't name 'technical excellence,' it thoroughly examines advanced deployment practices crucial to technical excellence. It addresses engineering teams, presents progressive, high-quality approaches, and stays clear of tangents, earning a strong but not perfect confidence score.",
    "level": "Secondary"
  },
  "Software Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Software Development",
    "calculated_at": "2025-05-16T20:27:04",
    "ai_confidence": 88.96,
    "ai_mentions": 7.2,
    "ai_alignment": 9.4,
    "ai_depth": 8.9,
    "ai_intent": 9.0,
    "ai_audience": 8.5,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content directly discusses deployment strategies such as rollback, progressive delivery, and fail-forward, all of which are core to modern software development practices, particularly in CI/CD and DevOps. While it does not explicitly mention 'Software Development' by name, it repeatedly uses technical terminology pertinent to the field (rollback, rolling forward, stateful apps, feature flags, canary releases). The analysis of risks and strategic recommendations show substantial depth, and the content is clearly aimed at technical practitioners responsible for delivering and maintaining software. There is minimal digression or off-topic content, and no penalty triggers as it references current methodologies. The confidence score reflects strong conceptual and practical alignment with the category, with slightly moderate 'mentions' score due to the lack of the explicit category label.",
    "reasoning_summary": "This piece deeply explores modern deployment and failure management strategies, central to software development. With strong technical alignment and relevant guidance, it’s highly relevant for practitioners, reflecting best practices and key issues in the field.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T20:27:03",
    "ai_confidence": 46.65,
    "ai_mentions": 2.2,
    "ai_alignment": 5.0,
    "ai_depth": 4.6,
    "ai_intent": 4.9,
    "ai_audience": 6.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content critiques the reliance on rollback as a safety net and proposes fail-forward and progressive delivery techniques. It briefly discusses the risks of rollbacks and advocates for modern deployment strategies for safer failure handling. While relevant to reliability and deployment, it doesn't focus on the systematic identification and resolution of specific technical issues (the core of troubleshooting). The content targets technical teams and references diagnostic practices like early detection via canary releases, but overall, it addresses deployment philosophy more than hands-on troubleshooting.",
    "reasoning_summary": "While the content addresses safe deployment and highlights deployment failure risks, its main focus is on philosophical strategies rather than concrete troubleshooting. It’s relevant to technical practitioners but isn’t deeply aligned with troubleshooting as narrowly defined.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T20:27:03",
    "ai_confidence": 28.08,
    "ai_mentions": 0.7,
    "ai_alignment": 3.5,
    "ai_depth": 2.3,
    "ai_intent": 2.3,
    "ai_audience": 6.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content primarily argues against the overreliance on rollback as a deployment safety net, advocating for fail-forward strategies like feature flags, canary releases, and progressive delivery. While these techniques are tools often used within experimentation frameworks, the narrative focuses on deployment safety and resilience rather than systematic hypothesis-driven testing or validating assumptions as defined in the Experimentation category. There are no explicit or direct references to experimentation or associated methodologies; the alignment is indirect at best—progressive delivery can facilitate experimentation, but the post does not discuss formulating hypotheses, running controlled tests, or iterating based on learning. Audience is partially aligned (practitioners, DevOps), but depth, intent, and mentions are all weak fits for this specific category.",
    "reasoning_summary": "While the content discusses modern safe deployment strategies and techniques like progressive delivery, it doesn’t focus on hypothesis-driven experimentation or validating assumptions in Agile workflows. Thus, alignment with the Experimentation category is limited.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T20:27:06",
    "ai_confidence": 27.0,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 3.8,
    "ai_audience": 5.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content discusses deployment strategies, advocating for fail-forward and progressive delivery rather than rollback. While it addresses risk management and safer software delivery, it does not mention Evidence-Based Management or directly focus on empirical data guiding management decisions. There are indirect links to outcome management and value delivery through safer practices, but no explicit metrics, empirical processes, or reference to EBM's core concepts. The target audience (technical teams) partially overlaps with EBM professionals, but the content mainly aims at deployment tactics rather than organizational empirical management. No penalties applied.",
    "reasoning_summary": "This content focuses on safer deployment approaches but barely connects to Evidence-Based Management. It lacks empirical discussion, EBM terminology, or clear data-driven decision-making. Its relevance is tangential, justifying a low confidence score.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Estimation",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 6.23,
    "ai_mentions": 0.8,
    "ai_alignment": 1.2,
    "ai_depth": 1.4,
    "ai_intent": 0.9,
    "ai_audience": 0.7,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses on deployment safety, discussing techniques like progressive delivery and fail-forward. Nowhere does it address Agile or Scrum estimation, empirical forecasting, or collaborative estimation practices. It does not mention estimation explicitly or conceptually address how teams plan, forecast, or size work using estimation techniques. Its audience is likely software delivery practitioners, which partially overlaps, but the discussion remains unrelated to estimation processes or topics.",
    "reasoning_summary": "The content is primarily about deployment and safety strategies, with no direct or indirect connection to estimation in Agile or Scrum. It neither mentions nor explores estimation, making it a poor fit for the Estimation category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T20:27:09",
    "ai_confidence": 2.4,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.6,
    "ai_intent": 1.5,
    "ai_audience": 4.0,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses exclusively on deployment safety strategies contrasting rollback and progressive delivery, with no reference to Scrum, Daily Scrum, or agile ceremonies. Its central concern is software deployment risk management, not team inspection or alignment around goals, and the target audience is DevOps or engineering teams, not Scrum practitioners. No penalties applied as the content is current and neutrally framed.",
    "reasoning_summary": "This content discusses deployment strategies and risk management but never mentions the Daily Scrum or related Scrum practices. Its focus and audience do not align with the category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 8.418,
    "ai_mentions": 0.3,
    "ai_alignment": 0.7,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 3.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content addresses deployment strategies such as rollback, fail-forward, and progressive delivery, focusing on operational risk in release management. However, it makes no direct mention of portfolio management, nor does it discuss strategic alignment, prioritization, or optimizing value streams. The audience appears to be delivery engineers or ops teams rather than portfolio managers, and the discussion lacks depth or relevance regarding portfolio-wide decision frameworks. Almost all content centers on safe deployment rather than portfolio-level management.",
    "reasoning_summary": "This content focuses on deployment strategies and safe software releases, making it relevant to operational teams but not to portfolio management. It lacks strategic alignment or discussion of portfolio practices, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T20:27:04",
    "ai_confidence": 85.6,
    "ai_mentions": 6.8,
    "ai_alignment": 9.1,
    "ai_depth": 8.8,
    "ai_intent": 8.3,
    "ai_audience": 8.7,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content directly addresses deployment strategies such as progressive delivery, fail-forward, and risk management for software releases, which are core modern engineering practices. It critiques rollback reliance and promotes contemporary CI/CD principles like feature flags and canary releases. The discussion is thorough and targets software engineers engaged in advancing deployment safety, though terms like 'engineering practices' don't appear explicitly, and there is some focus on rollout/rollback tactics rather than broad engineering methodologies. All points discussed are firmly situated in technical, process-oriented, and automation-driven Agile paradigms.",
    "reasoning_summary": "This content thoughtfully analyzes deployment safety, advocating progressive delivery and fail-forward methods over risky rollbacks. It digs into technical practices vital for modern engineering teams, aligning closely with Agile engineering principles even though it doesn't name them outright.",
    "level": "Primary"
  },
  "Lean": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Lean",
    "calculated_at": "2025-05-16T20:27:05",
    "ai_confidence": 16.4,
    "ai_mentions": 1.2,
    "ai_alignment": 2.3,
    "ai_depth": 1.9,
    "ai_intent": 1.8,
    "ai_audience": 4.5,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content does not explicitly mention Lean or its core principles. It focuses on deployment strategies (rollback, fail-forward, progressive delivery) for software releases, which, while tangential to process improvement, are not grounded in Lean methodologies such as waste reduction or continuous improvement. The target audience could overlap somewhat with Lean practitioners, but the main discussion is not conceptually about Lean, resulting in low confidence for classification here.",
    "reasoning_summary": "This content discusses software deployment safety, not Lean principles or methods. There's no direct reference or alignment to Lean topics like waste reduction or continuous improvement, so confidence in this category fit is very low.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T20:27:07",
    "ai_confidence": 45.83,
    "ai_mentions": 0.6,
    "ai_alignment": 5.5,
    "ai_depth": 4.9,
    "ai_intent": 5.3,
    "ai_audience": 6.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content focuses on deployment strategies, contrasting rollback with fail-forward and progressive delivery. While these are modern engineering practices, the discussion centers primarily on technical deployment risk—not the broader organizational agility context. There is conceptual overlap (e.g., progressive delivery supports adaptability), but no direct mention or deep exploration of organizational change, culture, or agility principles at the org level. The intended audience appears to be technical practitioners (likely engineers/devops), not executives or strategists tasked with organizational agility. Although relevant concepts are touched on (risk mitigation, safe failure), these are discussed in technical terms, without linking them to broader org-wide adaptability, learning, leadership, or agile culture. Overall, this is slightly aligned but not a deep or purposeful fit for the 'Organisational Agility' category.",
    "reasoning_summary": "This content explores safer software deployment strategies rather than broader organisational agility. While progressive delivery relates tangentially to adaptability, the discussion stays at the technical practice level and doesn't address organizational culture, leadership, or structural agility themes.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 18.05,
    "ai_mentions": 0.0,
    "ai_alignment": 1.8,
    "ai_depth": 2.1,
    "ai_intent": 2.0,
    "ai_audience": 6.8,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on deployment strategies (rollback vs. roll forward, progressive delivery) without referencing customer feedback loops or their integration into product development. While it does discuss mechanisms for safe deployments and processes to detect issues early, these pertain to engineering practices and not the collection or use of customer input. There are no direct mentions or substantial thematic overlap with customer feedback loops. The audience overlaps with practitioners interested in product quality, but the material is largely off-topic per the defined category.",
    "reasoning_summary": "This content is mainly about deployment strategies and doesn’t address customer feedback loops or their integration into product development. It lacks direct mentions or core alignment, resulting in a very low confidence that it fits the specified category.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 32.1,
    "ai_mentions": 0.4,
    "ai_alignment": 3.3,
    "ai_depth": 3.6,
    "ai_intent": 4.6,
    "ai_audience": 5.2,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on modern deployment practices, specifically the risks of rollback versus fail-forward and progressive delivery techniques. While these practices (feature flags, canary releases) have some overlap with Agile product delivery, the discussion is centered on deployment strategies and safe operational failure rather than Agile Product Management methods, stakeholder engagement, or value maximization. There is only an implicit alignment with continuous delivery principles, but the main audience seems to be engineering/deployment teams, not product managers. No penalties were applied.",
    "reasoning_summary": "This content discusses deployment safety, not Agile Product Management. While related to continuous delivery, it focuses on operational techniques, not product value strategies, stakeholder engagement, or product backlog management, so its relevance to the category is limited.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T20:27:13",
    "ai_confidence": 47.3,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.5,
    "ai_intent": 5.1,
    "ai_audience": 6.6,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content explores deployment safety in software engineering, distinguishing between rollback and progressive delivery. While related to adaptive delivery methods that Agile values, it does not explicitly discuss Agile Planning, key artifacts like backlogs, or iterative planning ceremonies. The intent aligns partially with maximizing value and adaptability (core Agile themes), and the focus is relevant for Agile practitioners, but the main lens is release risk management rather than planning methodology. No penalties apply as the content is current and constructive.",
    "reasoning_summary": "The content highlights deployment risk strategies, touchpoints with Agile adaptability, and principles like fail-forward. However, it doesn’t explicitly address Agile Planning methods, artifacts, or ceremonies, resulting in only moderate confidence for this category fit.",
    "level": "Tertiary"
  },
  "Evidence Based Leadership": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T20:27:05",
    "ai_confidence": 15.1,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 0.8,
    "ai_intent": 2.3,
    "ai_audience": 4.1,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content critiques the reliance on rollback in deployments and advocates for progressive delivery and fail-forward strategies, which are technical/software release concepts. There are no references—direct or conceptual—to evidence-based leadership, empirical decision-making, leadership frameworks, or the application of data to leadership practices. The core audience is technical teams, not leadership, and the material does not address leadership or organizational improvement topics. There is no use of metrics, case studies, or explicit reference to evidence-based principles. Thus, it does not appropriately fit under the Evidence Based Leadership category.",
    "reasoning_summary": "This content centers on deployment strategies for software teams, with no connection to evidence-based leadership or its principles. It targets a technical, not leadership, audience and lacks empirical decision-making discussion. Thus, confidence in category fit is very low.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T20:27:04",
    "ai_confidence": 36.33,
    "ai_mentions": 1.2,
    "ai_alignment": 3.6,
    "ai_depth": 3.2,
    "ai_intent": 3.8,
    "ai_audience": 5.5,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on deployment strategies by contrasting rollback with progressive, fail-forward approaches. While this reflects adaptability—a core Agile principle—it does not explicitly reference Agile, its values, or the manifesto. The concept of safe failure is tangentially related to Agile adaptability, but the discussion centers on technical delivery practices rather than the fundamental beliefs or guiding values/principles of Agile. The audience (dev/DevOps) overlaps somewhat with Agile practitioners, but the message is framed in engineering—not value-driven—terms. Depth and relevance are moderate but not comprehensive or deeply aligned with the category.",
    "reasoning_summary": "This content discusses deployment tactics and safe failure but lacks direct or in-depth engagement with Agile values or principles. Its focus is technical, with only subtle alignment to Agile ideas like adaptability, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Change Management",
    "calculated_at": "2025-05-16T20:27:07",
    "ai_confidence": 36.2,
    "ai_mentions": 0.2,
    "ai_alignment": 3.8,
    "ai_depth": 3.4,
    "ai_intent": 3.9,
    "ai_audience": 7.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content discusses deployment risk mitigation, particularly contrasting rollback versus forward strategies in software release processes. While these are important in software delivery, the primary focus here is not organizational change management principles, stakeholder engagement, or cultural transformation as defined by the category. There is only a peripheral overlap with change management in its narrow address of team practices and deployment strategies—no explicit or deep exploration of change facilitation, leadership, or sustainable transition is present. The audience (engineering teams) aligns fairly well, and the content is relevant and focused, but overall, the fit is tangential; thus, the moderate confidence score.",
    "reasoning_summary": "This content explains deployment strategies and their risks, especially rollback versus fail-forward, but does not directly address change management principles or practices at the organizational level. Relevant for technical teams, it only partially overlaps the category.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Kanban",
    "calculated_at": "2025-05-16T20:27:09",
    "ai_confidence": 7.58,
    "ai_mentions": 0.0,
    "ai_alignment": 0.6,
    "ai_depth": 0.7,
    "ai_intent": 0.8,
    "ai_audience": 1.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not mention Kanban explicitly or discuss its core practices. Instead, it covers deployment safety, rollback risk, and progressive delivery—concepts not associated directly with Kanban. There is no alignment with WIP, Kanban boards, or related metrics; the focus is on software delivery strategies. The audience (engineering/devops practitioners) may overlap with Kanban's, but thematic fit is absent, resulting in a very low confidence score.",
    "reasoning_summary": "This content focuses on software deployment safety and progressive delivery, not Kanban methodology. It never mentions or aligns with Kanban principles, making it irrelevant for the Kanban category and warranting a very low confidence score.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Market Share",
    "calculated_at": "2025-05-16T20:27:05",
    "ai_confidence": 7.4,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.3,
    "ai_audience": 2.0,
    "ai_signal": 0.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is focused on software deployment strategies, specifically the risks of rollback versus rolling forward using progressive delivery techniques. It discusses risk mitigation, safe deployments, and operational best practices, which are not relevant to market share growth, strategic positioning, or capturing competitive advantage. There is virtually no mention of market share terminology or concepts, nor is the intent or audience aligned with that of the market share category. The content provides depth in deployment safety, but this does not contribute to a discussion about market presence or expansion. No penalties are needed for tone or outdatedness.",
    "reasoning_summary": "This article centers on software deployment and failover strategy, offering no discussion of market share, competition, or market presence. It doesn't fit the 'Market Share' category in topic, intent, or audience.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T20:27:04",
    "ai_confidence": 6.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 1.0,
    "ai_audience": 1.8,
    "ai_signal": 1.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content discusses deployment strategies, specifically critiquing rollback as a safety net and advocating progressive delivery and fail-forward practices. Acceptance Test Driven Development (ATDD) is not mentioned, nor are acceptance criteria, stakeholder collaboration, or test-first strategies. The text is focused on deployment, not requirements or acceptance testing methodologies, and thus has almost no alignment with the ATDD category. Its intent, depth, and audience are not consistent with ATDD, and the content is off-topic for this classification.",
    "reasoning_summary": "This content is focused on deployment and rollback practices, not Acceptance Test Driven Development. It lacks any mention or substantial conceptual overlap with ATDD, making it irrelevant for this category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T20:27:05",
    "ai_confidence": 7.55,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.4,
    "ai_audience": 2.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on software deployment strategies, contrasting rollback and fail-forward approaches, and discussing progressive delivery. There are zero direct mentions or substantive discussion of Open Space Agile, its principles, or organizational change. The content is technical, not organizational, and lacks any alignment with Open Space Technology or Agile transformation for enterprise agility.",
    "reasoning_summary": "This piece is about software deployment tactics, not Open Space Agile. It doesn’t mention or discuss organizational change, Open Space, or Agile transformation, so it doesn’t fit this category.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T20:27:05",
    "ai_confidence": 12.5,
    "ai_mentions": 0.0,
    "ai_alignment": 1.8,
    "ai_depth": 2.0,
    "ai_intent": 2.0,
    "ai_audience": 2.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content addresses modern deployment and risk management (rolling forward vs. rollback), advocating for progressive delivery techniques. It does not mention BetaCodex, decentralisation, or organisational design. Its main ideas are only loosely related to team empowerment and adaptive practice but lack explicit conceptual or terminological alignment to Beta Codex. The audience is likely technical practitioners, not organisational strategists; the focus remains on deployment, not broader organisational frameworks. Depth is limited to deployment methods, offering no exploration of BetaCodex principles.",
    "reasoning_summary": "This content is about deployment strategies—not Beta Codex. It discusses technical risk management but doesn't reference decentralised organisation, BetaCodex concepts, or leadership principles. Its focus is far removed from the category's intent.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 92.4,
    "ai_mentions": 8.8,
    "ai_alignment": 9.9,
    "ai_depth": 9.6,
    "ai_intent": 9.3,
    "ai_audience": 9.0,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content explicitly critiques the reliability of rollbacks and advocates for progressive delivery techniques such as feature flags, canary releases, and fail-forward approaches—key subtopics of Deployment Strategies. Examples and argumentation focus directly on risk management and deployment methodology rather than tangential topics. It targets practitioners seeking safe, modern deployment techniques, staying highly relevant, insightful, and actionable for this category. No outdated advice or contradictions warrant penalties.",
    "reasoning_summary": "This content directly explores core deployment strategies, critiquing rollbacks and advocating for progressive techniques like canary releases and feature flags. Its examples, actionable advice, and focus on risk make it highly relevant to practitioners in Deployment Strategies.",
    "level": "Primary"
  },
  "DevOps": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "DevOps",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 84.2,
    "ai_mentions": 3.7,
    "ai_alignment": 9.1,
    "ai_depth": 8.9,
    "ai_intent": 9.0,
    "ai_audience": 7.6,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content directly discusses deployment safety nets, progressive delivery, failure handling, and the risks of rollback—key themes in DevOps that prioritize automation, safety, and robust processes over simplistic reversals. While it never explicitly names 'DevOps,' the conceptual alignment and depth are strong: it promotes practices such as canary releases and feature flags, which are foundational to DevOps philosophies. The intent is advisory for teams delivering modern software, suggesting an audience of developers, operations professionals, or DevOps practitioners. Dense with relevant details and with little off-topic filler, the piece offers a sustained exploration into delivery pipelines, deployment strategies, and failure management, aligning well with DevOps practices.",
    "reasoning_summary": "This content thoroughly explores safe deployment practices—like progressive delivery and fail-forward—that are foundational to DevOps. While 'DevOps' isn't named, strong alignment and relevant advice for technical teams make it a solid fit for the category.",
    "level": "Primary"
  },
  "Team Motivation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T20:27:12",
    "ai_confidence": 24.055,
    "ai_mentions": 0.8,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.1,
    "ai_audience": 7.5,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content centers on technical deployment strategies (rollback vs. roll forward) with focus on best practices for minimizing risk, specifically mentioning techniques like feature flags and canary releases. While it ends with a rhetorical question about how 'your team' handles failure, it does not address psychological or social team dynamics, engagement, or motivational drivers. There are no explicit references to motivation, empowerment, or teamwork as defined in the category. No penalties applied.",
    "reasoning_summary": "This content focuses on deployment safety and process, not on motivating teams or fostering engagement. It addresses technical practicality for teams but doesn't explore team motivation, psychology, or social dynamics typical for this category.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T20:27:13",
    "ai_confidence": 7.27,
    "ai_mentions": 0.5,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.7,
    "ai_audience": 2.5,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content centers on deployment strategies and team responses to deployment failures, touching lightly on 'teams'. However, it does not explicitly discuss the Scrum Team as an accountability, its responsibilities, structure, or distinguishing features. The themes are focused on software delivery practices (rollback, fail-forward, progressive delivery) rather than Scrum or its team model. The superficial mention of 'team' is generic and not specified as a Scrum Team or referencing the Scrum framework. Thus, the alignment, depth, and relevance scores are low, indicating that this content is not a good fit for the 'Scrum Team' category.",
    "reasoning_summary": "This content discusses deployment safety strategies for software teams but doesn't reference or explore Scrum Teams or their accountabilities. Its focus is general delivery practices, not Scrum-specific team structures or responsibilities.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T20:27:05",
    "ai_confidence": 42.85,
    "ai_mentions": 0.6,
    "ai_alignment": 4.9,
    "ai_depth": 4.8,
    "ai_intent": 5.2,
    "ai_audience": 7.1,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content critiques rollback as a deployment safety net and recommends progressive delivery and fail-forward strategies. While it implies a shift from linear to more holistic, interconnected thinking in software delivery, it never directly names or deeply explicates Systems Thinking principles, nor does it reference core concepts such as systemic feedback loops or mapping interdependencies. The depth is moderate as it pushes for safer, more considered processes but doesn't explore systemic frameworks, methodologies, or systemic organisational impacts. The audience is technical teams thinking about deployment, which partially matches the typical audience, but the focus remains operational rather than explicitly on organisational or system-level analysis. Since there are no direct references or deep dives into Systems Thinking, but some conceptual closeness, the overall confidence is low-moderate.",
    "reasoning_summary": "The content proposes safer, fail-forward deployment strategies—hinting at interconnected thinking—but never directly addresses Systems Thinking or its core methods. It’s operationally focused and conceptually adjacent, not centrally aligned with Systems Thinking.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T20:27:05",
    "ai_confidence": 13.15,
    "ai_mentions": 0.3,
    "ai_alignment": 1.6,
    "ai_depth": 1.2,
    "ai_intent": 1.5,
    "ai_audience": 5.1,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on deployment safety nets, challenging the perceived reliability of rollbacks, and advocating for techniques like progressive delivery and fail-forward. It is aimed at technical teams, but does not discuss the norms, agreements, or collaborative principles that define how teams work together. Instead, it provides deployment guidance, with minimal to no direct or indirect reference to working agreements or team conduct standards.",
    "reasoning_summary": "This piece centers on deployment strategies (rollback vs. fail-forward) rather than norms or principles governing team interaction. It doesn't discuss establishing or adapting working agreements. Thus, the fit for the category 'Working Agreements' is very low.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T20:27:07",
    "ai_confidence": 64.5,
    "ai_mentions": 1.0,
    "ai_alignment": 7.6,
    "ai_depth": 7.2,
    "ai_intent": 7.0,
    "ai_audience": 7.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "Direct mentions of Application Lifecycle Management (ALM) are absent, so mentions score is very low. However, the content aligns well conceptually, discussing deployment strategies, progressive delivery, and fail-forward approaches, which are relevant to the deployment and maintenance stages of ALM. The depth is above average due to exploration of rollback complexities and safer alternatives. The audience (software delivery teams) is appropriate. The content is focused and relevant, with little off-topic material. No penalties apply.",
    "reasoning_summary": "While the content doesn't mention ALM directly, it explores safe deployment practices and continuous delivery approaches highly relevant to application maintenance and operations—key facets of ALM. The practical focus and clear relevance support a moderate-to-strong confidence score.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T20:27:07",
    "ai_confidence": 1.2,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.7,
    "ai_intent": 1.0,
    "ai_audience": 2.1,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 1.0,
    "reasoning": "The content solely discusses deployment safety, rollback risks, and modern delivery strategies, with no references (direct or indirect) to Sprint Review or Scrum framework events. Its themes, target audience, and focus are unrelated to Sprint Review key topics. Minimal possible points are assigned for vague technical applicability, but no alignment otherwise exists.",
    "reasoning_summary": "This content focuses on deployment strategies, not Sprint Reviews. It doesn't mention or align with Scrum or its review practices, making category fit extremely low.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T20:27:09",
    "ai_confidence": 16.15,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 2.1,
    "ai_audience": 3.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content critiques the belief in rollback as a deployment safety net, advocating for fail-forward and progressive delivery. While these themes are related to Agile practices, the discussion is focused on technical deployment strategies, not on leadership, empowerment, or cultural aspects central to Agile Leadership. There are no explicit references to leadership, organizational change, or coaching teams through Agile adoption, nor is the primary audience clearly leaders or facilitators. The depth remains technical, and there is only a faint alignment with Agile Leadership via a brief nod to team skill preparedness.",
    "reasoning_summary": "This content focuses on deployment strategies, particularly the risks of rollback versus fail-forward, but lacks substantial ties to Agile Leadership principles such as empowerment, cultural change, or leadership roles. It's more relevant to practitioners than leaders, hence the low confidence.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T20:27:10",
    "ai_confidence": 22.95,
    "ai_mentions": 1.3,
    "ai_alignment": 2.7,
    "ai_depth": 2.8,
    "ai_intent": 2.0,
    "ai_audience": 6.4,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on deployment safety strategies like rollback vs. roll forward and progressive delivery, but does not directly discuss test automation or its tools, principles, or practices. While there is some indirect connection via automated deployment techniques (e.g., automated rollbacks, feature flags), the main ideas, intent, and examples center on deployment and operational risk rather than automating testing processes or frameworks. The technical audience overlaps, and some practices mentioned might relate to test coverage of deployments, but overall the fit to test automation is weak.",
    "reasoning_summary": "While this content targets technical practitioners and discusses automated processes in deployment safety, it barely mentions or aligns with test automation principles, practices, or tools. The focus is on deployment strategies, not automating software tests.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T20:27:12",
    "ai_confidence": 57.95,
    "ai_mentions": 3.3,
    "ai_alignment": 6.7,
    "ai_depth": 7.2,
    "ai_intent": 6.5,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content primarily challenges the belief that rollback is always safe and promotes fail-forward/progressive delivery approaches. While it indirectly touches on deployment strategies relevant to deployment frequency, such as progressive delivery and safe deployment practices, there is little direct discussion of optimizing or measuring deployment intervals. The focus is more on safety and failure handling than on frequency. The target audience (DevOps/engineering teams) is appropriately aligned, and the discussion has good depth on deployment tactics, but not specifically on frequency. No penalties were applied because tone and references are current and relevant.",
    "reasoning_summary": "This content thoughtfully explores safer deployment strategies—like progressive delivery and fail-forward—making it relevant to those optimizing release processes. However, it discusses deployment safety rather than frequency, so confidence for the 'Deployment Frequency' category is moderate.",
    "level": "Tertiary"
  },
  "Site Reliability Engineering": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T20:27:13",
    "ai_confidence": 71.7,
    "ai_mentions": 2.2,
    "ai_alignment": 8.6,
    "ai_depth": 7.7,
    "ai_intent": 8.5,
    "ai_audience": 7.8,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "Direct mention of SRE is absent, but the content deeply aligns with SRE principles: it challenges common beliefs about rollback, emphasizes reliability risks in production, and highlights progressive delivery/automated safety techniques—core SRE best practices. The discussion is nuanced, practical, and tailored to operational teams. While not exhaustive or explicitly labeled as SRE, it targets site reliability challenges and audience (engineers concerned with release safety), with high signal and relevancy. No penalties applied.",
    "reasoning_summary": "While SRE is not named, the content rigorously addresses production reliability via deployment strategies, promoting SRE-aligned approaches like progressive delivery and safe failure. It's highly relevant for SRE practitioners, with focused, practical depth and little off-topic material.",
    "level": "Secondary"
  },
  "Forecasting": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 12.1,
    "ai_mentions": 0.3,
    "ai_alignment": 1.5,
    "ai_depth": 1.0,
    "ai_intent": 1.2,
    "ai_audience": 5.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content centers on deployment safety, progressive delivery, and strategies like fail-forward and rollbacks. There is no direct mention or exploration of forecasting techniques, empirical data usage, risk prediction, or metrics for timeline estimation—as required by the definition. Audience overlap exists since both target Agile/Scrum practitioners, but main ideas diverge from forecasting concerns. Little of the content aligns with the forecasting category.",
    "reasoning_summary": "This content focuses on deployment strategies rather than forecasting practices in Agile and Scrum. While relevant to software delivery teams, it does not address prediction, empirical metrics, or planning, and thus has a very low confidence fit for the 'Forecasting' category.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T20:27:07",
    "ai_confidence": 6.9,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 0.8,
    "ai_intent": 1.6,
    "ai_audience": 1.7,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content discusses deployment best practices (rollback vs. rolling forward), focusing on fail-forward and progressive delivery for safer software deployment. There is no direct or indirect mention of Azure Boards or any of its features, concepts, or intended audience. The content does not align with Agile project management or board/work item tracking. All dimensions score extremely low due to lack of relevance.",
    "reasoning_summary": "This content centers on deployment strategies and software delivery safety but makes no mention of Azure Boards or its Agile management features. It's not relevant to the category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T20:27:10",
    "ai_confidence": 34.59,
    "ai_mentions": 0.4,
    "ai_alignment": 4.6,
    "ai_depth": 3.8,
    "ai_intent": 4.1,
    "ai_audience": 6.5,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content critiques rollback as a safety net and promotes fail-forward deployment strategies like progressive delivery, focusing on best practices for safe software deployment. It does not reference Agile Philosophy directly, nor the core values, mindset, or principles. While themes of adaptability and learning from failure slightly align with Agile thinking, most of the discussion concerns technical deployment practices rather than philosophical or cultural underpinnings. The audience is technical, with minimal overlap with strategic or philosophical considerations. Little depth is dedicated to the Agile mindset or its implications, so alignment and depth are modest. Mentions are minimal, with no explicit Agile terminology.",
    "reasoning_summary": "This content focuses on deployment safety and technical strategies rather than Agile Philosophy. While it alludes to adaptability and safe failure, it lacks explicit references or deep alignment with Agile principles, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 7.7,
    "ai_mentions": 0.4,
    "ai_alignment": 0.7,
    "ai_depth": 0.7,
    "ai_intent": 0.7,
    "ai_audience": 2.3,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on deployment safety, rollbacks, and best practices in progressive delivery. Nowhere are Azure Repos, its features, or source control management explicitly or implicitly discussed. The discussion is generic and could apply to any deployment environment or version control system; it does not reference Azure Repos, its audience, or specific tooling. Therefore, the content fits very poorly in the Azure Repos category.",
    "reasoning_summary": "This content discusses delivery safety and rollbacks but never mentions Azure Repos or its functionalities. It’s generic guidance on deployment and can’t be mapped to the Azure Repos category.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 17.285,
    "ai_mentions": 0.7,
    "ai_alignment": 2.4,
    "ai_depth": 2.2,
    "ai_intent": 2.7,
    "ai_audience": 4.3,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content does not directly mention Value Stream Management (VSM) nor its principles. It focuses on deployment safety, comparing rollback to fail-forward strategies and promoting progressive delivery techniques. While this tangentially relates to optimizing software delivery (a concept relevant to VSM), it does not address value streams, waste elimination, aligning with customer value, or continuous improvement at a strategic level. The depth is limited to operational deployment risk, not end-to-end value flow. The audience could overlap with VSM practitioners, but the specific focus is deployment engineering, not VSM strategy.",
    "reasoning_summary": "This content centers on deployment strategies, not Value Stream Management. It lacks direct references and strategic depth on value flow or VSM principles, so its relevance to the category is minimal.",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Release Management",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 85.13,
    "ai_mentions": 5.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.7,
    "ai_intent": 8.5,
    "ai_audience": 8.9,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content directly discusses rollback, deployment safety, progressive delivery, and fail-forward strategies, which are all core topics in Release Management. While 'release management' is not named explicitly, the discussion is highly aligned with the category's main ideas (risk management, planning for safe deployment, and strategies like feature flags and canary releases). The depth is good—specific risks, alternatives, and audience challenges are explored. The intent is to inform and prompt practitioners to reconsider rollback reliance in release practices. Audience alignment is strong, targeting teams and engineers involved in deployment. Little to no off-topic content means high signal-to-noise. No penalties apply; the examples and advice are modern and relevant.",
    "reasoning_summary": "The content explores core Release Management challenges, highlighting risks of rollback and benefits of modern strategies like progressive delivery. While the term isn't named, its coverage and advice are directly relevant to practitioners, earning a strong fit for the category.",
    "level": "Primary"
  },
  "Business Agility": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 48.43,
    "ai_mentions": 0.7,
    "ai_alignment": 6.2,
    "ai_depth": 5.9,
    "ai_intent": 6.3,
    "ai_audience": 5.0,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content centers on deployment safety, critiquing rollback and promoting progressive delivery and fail-forward practices for modern software delivery. While deployment strategies like canary releases and feature flags are relevant to adaptability—a principle within Business Agility—the content never mentions business agility explicitly nor situates the discussion in broader organizational or leadership contexts. The target audience is delivery teams, not the full business agility spectrum. Overall, while thematically adjacent and demonstrating some alignment, the content is focused on software deployment best practices rather than the larger, organization-wide strategies central to Business Agility.",
    "reasoning_summary": "This content discusses safer software deployment practices and advocates progressive delivery, which loosely aligns with adaptability in Business Agility, but it neither mentions business agility nor covers its broader organizational aspects. The focus remains primarily on technical teams, not on business-wide agility.",
    "level": "Tertiary"
  },
  "Product Delivery": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T20:27:10",
    "ai_confidence": 89.28,
    "ai_mentions": 6.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 8.7,
    "ai_audience": 8.9,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content directly references software deployment—a core aspect of product delivery—and critiques the traditional reliance on rollback, arguing for more modern, progressive delivery and fail-forward strategies. Concepts like feature flags, canary releases, and deployment safety are discussed in depth. The main ideas and practical recommendations are fully aligned with the category definition, and the content is targeted at practitioners concerned with product delivery best practices. The discussion is focused, relevant, and free from off-topic or filler material. No penalties were necessary since the arguments are current and constructive.",
    "reasoning_summary": "This content thoroughly explores modern deployment practices, emphasizing progressive delivery over traditional rollback. It's highly relevant to product delivery professionals and offers in-depth, practical advice, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Cycle Time": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T20:27:10",
    "ai_confidence": 7.98,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.8,
    "ai_intent": 1.7,
    "ai_audience": 1.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses software deployment safety nets, emphasizing the risks of rollback versus rolling forward and the value of progressive delivery. There are no direct references to Cycle Time or its measurement, and the themes revolve around deployment strategies, not workflow efficiency or time-based metrics. While there is an indirect relationship between safe deployment and delivery speed, the content does not discuss Cycle Time directly or in depth. It might intersect operationally in a broader DevOps context, but does not belong under the Cycle Time category.",
    "reasoning_summary": "This content focuses on deployment strategies—rollback and fail-forward—not on Cycle Time or workflow efficiency metrics. Cycle Time is not directly mentioned or examined, so the confidence in fitting this under Cycle Time is very low.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 91.7,
    "ai_mentions": 6.6,
    "ai_alignment": 9.5,
    "ai_depth": 8.8,
    "ai_intent": 9.2,
    "ai_audience": 9.1,
    "ai_signal": 9.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly challenges a common but flawed deployment safety assumption, offering practical, experience-driven alternatives such as progressive delivery, fail-forward, and risk mitigation strategies tailored to complex environments (e.g., stateful apps). It is directed at professionals in DevOps and Agile settings, advocating evidence-based, actionable approaches over theory, exemplifying pragmatic thinking. Despite lacking explicit terminology like 'pragmatic thinking,' the core concepts, intent, and target audience align directly with the category’s definition.",
    "reasoning_summary": "This content strongly fits 'Pragmatic Thinking' by offering practical deployment strategies—moving beyond rollback, it champions fail-forward and progressive delivery. With evidence-based insights and techniques aimed at Agile and DevOps practitioners, it exemplifies real-world, adaptable problem-solving.",
    "level": "Primary"
  },
  "Unrealised Value": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T20:27:10",
    "ai_confidence": 7.0,
    "ai_mentions": 0.3,
    "ai_alignment": 0.8,
    "ai_depth": 1.0,
    "ai_intent": 0.5,
    "ai_audience": 3.6,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on deployment strategies, discussing rollbacks vs. progressive delivery. It does not mention Unrealised Value or related Evidence-Based Management terminology, concepts, indicators, or frameworks. There is no exploration of untapped opportunities, potential value, or innovation. While targeting practitioners interested in safety and deployment, it is not aligned in purpose, audience, or signal with the category. Hence, very low confidence.",
    "reasoning_summary": "This content discusses deployment risks and safer release strategies, not the concept of Unrealised Value or its indicators in Evidence-Based Management. It offers no relevant mentions or alignment, so its fit with this category is extremely weak.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T20:27:14",
    "ai_confidence": 36.17,
    "ai_mentions": 0.2,
    "ai_alignment": 3.5,
    "ai_depth": 3.7,
    "ai_intent": 4.3,
    "ai_audience": 8.1,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on software deployment strategies, critiquing rollback in favor of fail-forward and progressive delivery. While these themes embody modern efficiency and risk management, there are only minor, indirect overlaps with Lean Product Development (e.g., minimizing waste from faulty releases). The article does not discuss Lean principles, waste reduction, customer value, or continuous improvement as defined in the category. It is primarily targeting engineering teams interested in deployment process improvement, closely aligning with tech practitioners, but lacks explicit Lean methodology references or depth. No penalties applied since content is current and neutral in tone.",
    "reasoning_summary": "The content mainly discusses software deployment strategies rather than Lean Product Development principles. While it shares some spirit of risk mitigation and efficiency, it doesn’t directly mention Lean concepts or methodologies, resulting in limited category fit and a low confidence score.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 9.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 1.3,
    "ai_audience": 2.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses software deployment practices, specifically contrasting rollback versus progressive delivery and fail-forward strategies. There are no explicit or implicit mentions of Behaviour Driven Development, its practices, principles, or tools. The focus is on operational safety in deployments, unrelated to aligning software process with business objectives or fostering collaboration on requirements, which are central to BDD. Audience is technical, but the subject matter does not intersect with BDD topics.",
    "reasoning_summary": "This piece focuses on deployment safety strategies, not Behaviour Driven Development. It lacks any explicit or conceptual connection to BDD, its practices, or goals. The content is technical and relevant to software delivery, but completely outside the scope of BDD.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T20:27:15",
    "ai_confidence": 10.0,
    "ai_mentions": 0.1,
    "ai_alignment": 0.2,
    "ai_depth": 0.2,
    "ai_intent": 0.2,
    "ai_audience": 0.2,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses exclusively on deployment safety strategies, criticizing rollback in favor of progressive delivery and fail-forward tactics. It does not reference the Definition of Ready, readiness criteria, backlog item clarity, or related practices. There are no direct or indirect mentions of DoR or sprint planning. Each dimension scores near the minimum as it is off-topic for the category.",
    "reasoning_summary": "This piece addresses deployment strategies and risks of rollback, not backlog readiness or the Definition of Ready. It lacks any connection to DoR practices, making the fit with the category extremely weak.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T20:27:16",
    "ai_confidence": 33.2,
    "ai_mentions": 0.2,
    "ai_alignment": 4.6,
    "ai_depth": 3.9,
    "ai_intent": 3.9,
    "ai_audience": 8.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on software deployment safety, contrasting rollback with progressive delivery and fail-forward strategies. While these practices may align with Professional Scrum's ethos around technical excellence and accountability, there is no direct mention of Scrum, its roles, or the explicit philosophy of Professional Scrum. The themes of safe failure, professionalism, and delivery excellence tangentially fit, but they aren't tied specifically to the guiding principles of Professional Scrum. The intended audience (technical teams) overlaps, but the discussion remains generic, focused on modern delivery practices without doctrinal reference to Scrum values, empiricism, role accountability, or evidence-based management. Signal-to-noise ratio is good, but it's not deep or tailored enough for a high-confidence match.",
    "reasoning_summary": "The content promotes modern deployment safety and professionalism, relevant to Professional Scrum values, but never references Scrum or its guiding philosophy directly. Its alignment is mostly tangential and generic, so confidence in this category fit is low.",
    "level": "Ignored"
  },
  "Accountability": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Accountability",
    "calculated_at": "2025-05-16T20:27:12",
    "ai_confidence": 24.45,
    "ai_mentions": 0.6,
    "ai_alignment": 2.8,
    "ai_depth": 1.9,
    "ai_intent": 2.6,
    "ai_audience": 6.1,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on deployment strategies (rollback vs. roll forward) and safety in software delivery. While it touches on topics relevant to modern work systems and team capability, there are no explicit or implicit discussions of structural accountability, outcome ownership, or the mechanisms by which clear accountability improves performance. The primary focus is on technical risk mitigation, not role-anchored accountability. No penalty is needed; content is timely and earnest.",
    "reasoning_summary": "This article centers on deployment safety and risk management, not accountability structures. It lacks direct references to role-based or organizational accountability and outcome ownership, making it a poor fit for the 'Accountability' category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T20:27:17",
    "ai_confidence": 14.3,
    "ai_mentions": 0.0,
    "ai_alignment": 2.0,
    "ai_depth": 2.2,
    "ai_intent": 2.8,
    "ai_audience": 4.0,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on deployment safety, progressive delivery, and the risks of rollback versus roll-forward strategies, specifically for stateful apps. There are no direct mentions of Agnostic Agile or its principles, and the discussion does not connect these practices to the agnostic, context-driven, or ethical philosophy central to the category. The alignment is minimal—while implications about adapting deployment strategies might resonate with agility, the content lacks any explicit or deep exploration of Agnostic Agile concepts, principles, or its thought leaders. It appears targeted at practitioners concerned with deployment risk, not at those seeking insight into Agnostic Agile as a philosophy or movement. Overall, this content does not fit the category by intent or substance.",
    "reasoning_summary": "This piece discusses deployment risks and safe delivery strategies but never references Agnostic Agile or its principles. There's little conceptual or audience overlap, and the focus is on technical practices, not agile philosophy. Its fit for the Agnostic Agile category is very low.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T20:27:15",
    "ai_confidence": 4.9,
    "ai_mentions": 0.3,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.6,
    "ai_audience": 1.7,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content discusses deployment safety strategies, rollback risks, and progressive delivery, with no explicit or implicit mention of Lead Time, its measurement, or its impact on process flow or delivery efficiency. The topic is adjacent to software delivery practice but does not address Lead Time as a metric, its optimization, or related observability aspects. Only a minimal alignment with Lead Time's general context is noted due to discussion of deployment efficiency.",
    "reasoning_summary": "This content focuses on deployment techniques and risks, not Lead Time. It doesn't mention or explore Lead Time as a metric, so its relevance to the category is negligible.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Model",
    "calculated_at": "2025-05-16T20:27:09",
    "ai_confidence": 32.95,
    "ai_mentions": 1.1,
    "ai_alignment": 2.9,
    "ai_depth": 3.5,
    "ai_intent": 2.5,
    "ai_audience": 7.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content critiques the practice of rollback versus roll forward in deployments and promotes modern techniques like progressive delivery, feature flags, and canaries. However, it does not reference or explicitly discuss any named models, frameworks, or conceptual representations as defined in the Model category. There is no substantial alignment with the core intent of analyzing models for organizational agility, nor does it present a comparative or analytical discussion of models' application. The primary focus is procedural advice, not model-driven thinking. While the topic is adjacent to practices found in model-based approaches, it is not sufficient for a strong alignment.",
    "reasoning_summary": "This post discusses risks of rollback and advocates progressive delivery, but it doesn’t directly reference or analyze conceptual models. It focuses on practical techniques over frameworks, so it weakly fits the Model category.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T20:27:12",
    "ai_confidence": 27.35,
    "ai_mentions": 0.7,
    "ai_alignment": 3.8,
    "ai_depth": 2.5,
    "ai_intent": 3.1,
    "ai_audience": 3.6,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content predominantly discusses software deployment strategies (rollback vs. fail-forward, progressive delivery), which is more technical than organisational. While it touches on team process maturity, it lacks explicit reference to organisational change practices, frameworks, leadership, or agility culture. Direct mentions of organisational change are absent; alignment and depth are limited to the implications for team operations rather than broader organisational transformation.",
    "reasoning_summary": "This content mainly covers software deployment strategies, not organisational change frameworks or processes. It briefly considers team practices but doesn’t explore change management, agility, or leadership. Accordingly, confidence in its fit is low.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 4.68,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 1.1,
    "ai_intent": 1.0,
    "ai_audience": 0.9,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content focuses exclusively on software deployment strategies: rollback, fail-forward, and progressive delivery techniques. It discusses best practices for release management, but nowhere mentions or references remote working, distributed teams, or remote Agile practices. There is no explicit or implicit alignment with remote work challenges, collaboration, tools, or ceremonies. The audience may overlap (engineering/DevOps), but the subject matter is entirely unrelated to remote working within an Agile context.",
    "reasoning_summary": "This content discusses deployment safety strategies like rollback and fail-forward, with no reference to remote working or distributed Agile teams. Its themes, depth, and language do not align with the Remote Working category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Capability",
    "calculated_at": "2025-05-16T20:27:12",
    "ai_confidence": 56.5,
    "ai_mentions": 2.4,
    "ai_alignment": 6.3,
    "ai_depth": 5.5,
    "ai_intent": 5.9,
    "ai_audience": 7.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content critiques the traditional view of rollback as a safety net and advocates for progressive delivery and fail-forward approaches, stressing the importance of developing certain team skills. While it implicitly touches on enduring competencies, its primary focus is on techniques, approaches, and deployment safety rather than on the explicit or comprehensive development of long-term organizational capabilities. There are brief allusions to capability—such as team skill development—but terms and in-depth capability frameworks are not directly discussed. The target audience (team leads, practitioners, DevOps engineers) aligns well with those interested in capabilities, and the discussion maintains relevancy, though it is technique-heavy. No penalties were needed.",
    "reasoning_summary": "While the content touches on skill development and cautions against overreliance on rollback, its main focus is on deployment techniques rather than a deep exploration of enduring capabilities. It’s relevant for practitioners considering capability growth but doesn’t directly address systemic capability building.",
    "level": "Tertiary"
  },
  "Time to Market": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T20:27:08",
    "ai_confidence": 23.45,
    "ai_mentions": 0.5,
    "ai_alignment": 2.3,
    "ai_depth": 2.6,
    "ai_intent": 2.1,
    "ai_audience": 8.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on deployment safety, contrasting rollbacks and progressive delivery strategies. While these can be parts of approaches to optimize time to market, there are no direct mentions of 'Time to Market,' its metrics, or explicit discussion of speed-to-value delivery. Conceptual links (progressive delivery, fail-forward) only tangentially support faster release cycles, but the content prioritizes deployment safety over efficiency. Depth is limited to deployment risk practices, not process improvement for time reduction. Audience and relevance are solid (technical practitioners), but the primary intent is to challenge rollback misconceptions, not optimize time to market.",
    "reasoning_summary": "This content emphasizes safer deployment via progressive delivery, indirectly related to Time to Market. However, it lacks direct references or in-depth discussion on delivering value faster, focusing instead on deployment risk—not process speed.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T20:27:10",
    "ai_confidence": 1.5,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.7,
    "ai_intent": 0.4,
    "ai_audience": 2.0,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses on deployment strategies, risk mitigation, and progressive delivery but makes no mention of Service Level Expectation (SLE) or related concepts from Agile, Scrum, or Kanban. There are no references to forecasting work item delivery times, probability ranges, or cycle time analysis, all of which are core to the SLE category. The content’s intent is to challenge misconceptions about rollback as a safety net, not to discuss predictability, delivery transparency, or improvement in flow, which are hallmarks of SLE. The audience overlaps slightly with technical teams, but not specifically those concerned with SLE metrics. Signal is slightly higher for relevance to delivery teams but off-topic for SLE. No penalties were applied as the content is not outdated or contrary.",
    "reasoning_summary": "This content is about deployment safety strategies (fail forward vs. rollback), not Service Level Expectation. It doesn't reference SLE concepts, metrics, or agile predictability, so it fits the category very poorly.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 53.15,
    "ai_mentions": 1.3,
    "ai_alignment": 6.2,
    "ai_depth": 5.7,
    "ai_intent": 5.8,
    "ai_audience": 7.0,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content does not explicitly mention 'empirical process control,' Agile, or Scrum. However, it discusses risk mitigation through progressive delivery, a practice that aligns somewhat with empirical, adaptive approaches (e.g., canary releases and feature flags enable inspection and adaptation). The depth is moderate, focusing on deployment strategies rather than Agile principles or frameworks. The intended audience appears to be practitioners interested in safe deployments, relevant to empirical process control, but the discussion is not framed directly in those terms. The signal is high with practical, focused advice.",
    "reasoning_summary": "While not explicitly about empirical process control, the content's emphasis on fail-forward, progressive delivery, and adaptive deployments aligns moderately with the category's principles. It offers practical insights for practitioners, but lacks direct Agile or empirical process control references.",
    "level": "Tertiary"
  },
  "Test First Development": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T20:27:17",
    "ai_confidence": 20.8,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.2,
    "ai_intent": 3.5,
    "ai_audience": 6.4,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content primarily addresses deployment strategies, contrasting rollback and fail-forward (progressive delivery) approaches, without mentioning Test First Development or its practices. While relevant to software quality and safety, it does not reference defining success criteria, test-first mindsets, TDD, ATDD, or related topics. The alignment is low—only the overarching philosophy of proactive failure mitigation is a loose conceptual link. The main intent, audience, and focus are on deployment, not Test First practices, so confidence is appropriately low.",
    "reasoning_summary": "This piece focuses on deployment safety and strategies—not Test First Development. It doesn't discuss defining tests or success criteria before coding, so it's only loosely relevant. The confidence is low due to minimal alignment with the core category.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T20:27:09",
    "ai_confidence": 36.6,
    "ai_mentions": 1.3,
    "ai_alignment": 4.5,
    "ai_depth": 3.8,
    "ai_intent": 3.8,
    "ai_audience": 7.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content primarily debates deployment strategies, such as rollback versus fail-forward, focusing on engineering approaches to safe software releases. It references progressive delivery techniques (feature flags, canary releases) tied to limiting risk, but does not directly discuss testing product ideas with real users or validating product-market fit. Depth is limited to operational safety nets, not actual validation of product concepts with external feedback. The main audience is likely practitioners focused on deployment or operations, not those specifically engaged in product validation practices. Thus, confidence is low.",
    "reasoning_summary": "This piece focuses on deployment safety rather than product validation. While it mentions techniques like progressive delivery, it doesn’t discuss validating product ideas with real users. Overall, its relevance to product validation is superficial and indirect.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T20:27:09",
    "ai_confidence": 78.78,
    "ai_mentions": 3.7,
    "ai_alignment": 8.3,
    "ai_depth": 6.9,
    "ai_intent": 8.1,
    "ai_audience": 8.7,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content discusses progressive software delivery, fail-forward and progressive delivery techniques, which are core to modern DevOps and Agile methodologies, both central to market adaptability. The main intent encourages teams to rethink deployment strategies for greater resilience — directly serving the category's audience. However, while progressive delivery is covered in meaningful detail and aligns well conceptually, the article only implicitly relates these practices to 'market adaptability,' not naming the category or deeply exploring its broader business context. The discussion is focused, practical, and high-signal for technically savvy readers responsible for organizational agility.",
    "reasoning_summary": "This content strongly fits 'Market Adaptability' due to its focus on progressive delivery and fail-forward strategies—practices integral to adapting quickly and managing risk in dynamic markets—even though it doesn't use the category name explicitly.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T20:27:09",
    "ai_confidence": 3.95,
    "ai_mentions": 0.0,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 2.4,
    "ai_audience": 6.1,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content discusses deployment strategies, specifically the risks of rollback versus progressive delivery (e.g., feature flags, canary releases). There are no direct or indirect references to Value Stream Mapping (VSM), nor are any principles, tools, or VSM techniques discussed. The focus is on software deployment safety rather than visualizing or analyzing value flow. While the audience (technical teams) has overlap, and the topic of workflow risk is tangentially relevant, there is no substantive fit with the Value Stream Mapping category.",
    "reasoning_summary": "This content solely discusses deployment strategies and safety nets, with no mention of Value Stream Mapping or its principles. Its focus and examples are not aligned with the category, resulting in very low confidence of relevance.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T20:27:11",
    "ai_confidence": 47.1,
    "ai_mentions": 2.3,
    "ai_alignment": 5.2,
    "ai_depth": 4.7,
    "ai_intent": 5.1,
    "ai_audience": 6.3,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content does not directly mention automated testing but is heavily oriented toward deployment strategies, particularly progressive delivery, fail-forward practices, and the risks of rollback. Concepts like feature flags and canary releases suggest some overlap with automated safeguards but do not discuss test automation, types of tests, or related methodologies. The intent and depth address modern software delivery safety more broadly, not automated testing's role in that safety. The content's relevance is tangential—the safety strategies alluded to could benefit from automated testing, but automated testing is neither a direct theme nor a substantial topic of discussion, resulting in a moderate confidence score.",
    "reasoning_summary": "While the content references software safety and progressive delivery—concepts adjacent to automated testing—it doesn't explicitly discuss automated testing practices, tools, or principles, making its fit with the category moderate at best.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T20:27:12",
    "ai_confidence": 13.95,
    "ai_mentions": 0.5,
    "ai_alignment": 1.4,
    "ai_depth": 1.7,
    "ai_intent": 2.0,
    "ai_audience": 4.8,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses deployment practices like rollback, fail-forward, and progressive delivery, targeting teams involved in software delivery. However, it lacks explicit references to mentoring, coaching, or skill development frameworks central to the Mentoring category. While it hints at skill competency within teams, it offers no direct mentoring techniques, guidance, or strategies for professional growth. The primary focus is technical risk management rather than mentoring in agile contexts.",
    "reasoning_summary": "This piece focuses on deployment strategies, not mentoring. It briefly challenges teams on capability but gives no explicit guidance, feedback, or coaching—the hallmarks of mentoring. Thus, its alignment and confidence for 'Mentoring' are quite low.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T20:27:15",
    "ai_confidence": 81.6,
    "ai_mentions": 6.2,
    "ai_alignment": 8.5,
    "ai_depth": 8.2,
    "ai_intent": 7.9,
    "ai_audience": 8.0,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly critiques the rollback-as-safety-net belief, advocating progressive delivery and fail-forward strategies. It actively references deployment best practices (feature flags, canaries, automation), targeting technical teams. There's moderate direct naming of relevant concepts, strong conceptual alignment, and the discussion is thorough with practical insights on causes of risk and best practices. The audience is clearly software engineers, and the focus remains on engineering quality, not tangential topics.",
    "reasoning_summary": "This piece strongly aligns with 'Engineering Excellence,' focusing on advanced deployment strategies and technical risk management. It gives actionable insights for engineering teams and offers a thoughtful critique and alternatives to common practices, making it a good fit for this category.",
    "level": "Primary"
  },
  "Definition of Workflow": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:12",
    "ai_confidence": 9.3,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 0.5,
    "ai_audience": 4.7,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content discusses the risks of rollback versus progressive delivery, focusing on deployment safety. It does not mention, define, or explore the Definition of Workflow as articulated by Kanban or agile principles. There is no discussion of explicit agreements, entry/exit criteria, WIP limits, or policies for managing the flow of work. The audience may include practitioners interested in process improvements, but the content is not directed at making workflow policies explicit or adaptable. The discussion is about deployment strategies rather than workflow policies.",
    "reasoning_summary": "This content does not align with the 'Definition of Workflow' category. It addresses software deployment safety and rollback strategies, lacking any reference or conceptual overlap with workflow definitions as per Kanban or agile context.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:29:14",
    "ai_confidence": 2.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.2,
    "ai_intent": 0.8,
    "ai_audience": 6.0,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses on software deployment safety nets, critiquing rollbacks and promoting progressive delivery strategies. There are no direct mentions of OKRs or their concepts (Objectives, Key Results, alignment, iterative review, etc.). The main topic is DevOps deployment practices, not outcome-based measurement or strategic alignment. While the audience overlaps with technical teams relevant to OKR frameworks, the content does not meaningfully discuss or imply OKRs, so conceptual alignment, depth, intent, and mentions are minimal. Signal-to-noise is moderate as the content focuses on relevant practices but not OKRs.",
    "reasoning_summary": "This content does not address Objective Key Results. It discusses software deployment practices, specifically the risks of rollback versus progressive delivery, with no connection to OKR frameworks, concepts, or measurement. Alignment is minimal.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:03:44",
    "ai_confidence": 15.15,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 2.1,
    "ai_intent": 2.3,
    "ai_audience": 3.2,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content discusses practices around software deployment strategies (rollback vs. progressive delivery and fail-forward) and addresses team approaches to deployment failures. However, it never directly mentions Product Developers or their accountability. While it could be useful for developers, practitioners, or DevOps teams, none of the main ideas or responsibilities are focused on the Product Developer role, its purpose, cross-functional capacity, or formal behaviors as defined in product development frameworks. The content's audience is general engineering teams, with only a faint, indirect overlap with Product Developer as an accountable construct, yielding very low alignment, intent, and depth scores, with only modest signal and audience relevance.",
    "reasoning_summary": "This content focuses on deployment safety and modern delivery techniques, not on the specific role or accountability of Product Developers. Its relevance to Product Developer is incidental and indirect, leading to minimal alignment with the category definition.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:03:37",
    "ai_confidence": 13.9,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.2,
    "ai_intent": 2.1,
    "ai_audience": 5.3,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses modern deployment techniques such as progressive delivery, feature flags, and fail-forward strategies, focusing on team behavior and deployment safety. However, it does not mention human-AI collaboration or any aspect of collective intelligence as defined. The focus is purely on human team practices, risk mitigation, and process improvement for software deployments, with no reference to enhanced cognitive outcomes from human-AI partnerships or distributed cognition involving AI agents. Thus, alignment and depth with the 'Collective Intelligence' category are very low.",
    "reasoning_summary": "This content focuses on deployment strategies in software teams, with no mention of human-AI collaboration or any collective intelligence concepts. Its relevance to the 'Collective Intelligence' category is minimal.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "3-BmsmOEWfJ",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:36",
    "ai_confidence": 43.07,
    "ai_mentions": 1.2,
    "ai_alignment": 4.6,
    "ai_depth": 4.4,
    "ai_intent": 6.4,
    "ai_audience": 6.8,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content strongly discusses progressive delivery, fail-forward approaches, and deployments that limit risk—crucial for engineering autonomy. However, it never references agentic engineering concepts directly nor discusses the philosophical aspects of maximizing human or AI agency. It is aligned with DevOps safety practices, emphasizing team agency and modern delivery, but stays mostly practical. No penalties apply since the advice is up-to-date and not critical or satirical.",
    "reasoning_summary": "The content touches on developer agency and fail-forward deployment—a partial fit for Agentic Engineering, but lacks explicit references and deeper exploration of agency or ethical autonomy themes. Focus is narrow and practical, not holistic.",
    "level": "Tertiary"
  }
}