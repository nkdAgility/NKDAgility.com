{
  "Large Scale Agility": {
    "resourceId": "81ZWio23ss7",
    "category": "Large Scale Agility",
    "calculated_at": "2025-08-07T06:10:15",
    "ai_confidence": 18.675,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 2.1,
    "ai_intent": 2.2,
    "ai_audience": 5.2,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content addresses technical debt and the value of automation, testing, and pipeline improvements, which are relevant at any Agile scale. However, it focuses exclusively on team-level practices without references to scaling frameworks, cross-team collaboration, or enterprise initiatives. Terms and examples are directed toward development teams rather than enterprise leaders or strategists. No explicit or implicit connection to large scale agility themes or audience is present.",
    "reasoning_summary": "Content focuses on technical debt and team engineering practice improvements, with no direct or thematic connection to large scale or enterprise agility. Fit to the category is marginal and mostly incidental.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "81ZWio23ss7",
    "category": "Tenet",
    "calculated_at": "2025-08-07T07:06:23",
    "ai_confidence": 55.13,
    "ai_mentions": 2.1,
    "ai_alignment": 5.7,
    "ai_depth": 5.8,
    "ai_intent": 6.4,
    "ai_audience": 7.3,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content discusses practices (automation, testing, pipeline friction) that align with known tenets (like automation and continuous improvement), but the focus is on technical debt management, not explicitly on tenets as guiding principles. There are no direct mentions of 'tenet' or doctrinal language. The ideas overlap with tenet applications in DevOps and Agile, but don't frame them as tenets per se. The discussion is moderately deep regarding actionable solutions, targeting practitioners and technical audiences; good signal-to-noise, but the categorization fit is partial rather than direct.",
    "reasoning_summary": "Content outlines actionable technical practices but doesn’t directly discuss or label tenets. While there is conceptual overlap with Agile/DevOps tenets, focus is mainly on technical debt management. Fit is partial and not definitive.",
    "level": "Tertiary"
  },
  "Collaboration Tools": {
    "resourceId": "81ZWio23ss7",
    "category": "Collaboration Tools",
    "calculated_at": "2025-08-07T07:06:24",
    "ai_confidence": 14.05,
    "ai_mentions": 0.7,
    "ai_alignment": 1.2,
    "ai_depth": 1.3,
    "ai_intent": 2.0,
    "ai_audience": 4.0,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses strictly on technical debt, automation, testing, and pipeline friction. It does not mention or discuss platforms, practices, or benefits specific to collaboration tools in Agile teams. Concepts relevant to collaboration are not addressed, and the target audience aligns only weakly with collaboration tool practitioners. No content is outdated or contradictory, so no penalties applied. Overall, there is little conceptual, direct, or thematic connection to the defined category.",
    "reasoning_summary": "Content is about technical debt, automation, and DevOps practices — not collaboration tools. It does not discuss tools or practices that enhance team communication or coordination. Fit with the 'Collaboration Tools' category is very weak and almost irrelevant.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "81ZWio23ss7",
    "category": "Revenue per Employee",
    "calculated_at": "2025-08-07T09:25:32",
    "ai_confidence": 10.33,
    "ai_mentions": 0.3,
    "ai_alignment": 1.3,
    "ai_depth": 1.6,
    "ai_intent": 1.1,
    "ai_audience": 2.8,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses narrowly on technical debt—messy code, process friction, and the consequences of ignoring automation/testing. It does not mention revenue per employee, workforce efficiency, or financial observability metrics, nor does it use data/measurable frameworks relevant to category. While the metaphor of 'debt' and 'costs' is present, this is within a technical/engineering context, not in a financial or workforce efficiency sense. The intent and audience are technical (developers/engineering leads), not business- or metric-focused.",
    "reasoning_summary": "This content is about technical debt and development practices; it does not reference or align thematically with Revenue per Employee as a financial metric. There is no metric-centric or workforce efficiency analysis, so fit is minimal.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "81ZWio23ss7",
    "category": "Continuous Delivery",
    "calculated_at": "2025-09-05T03:28:21",
    "ai_confidence": 74.8,
    "ai_mentions": 3.1,
    "ai_alignment": 8.9,
    "ai_depth": 7.7,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content centers on technical debt, highlighting issues like slow feedback, brittle systems, and manual processes that impede delivery. It advocates for automation, early testing, and pipeline optimization—core principles of Continuous Delivery—though it does not directly mention 'Continuous Delivery.' The alignment and depth are strong due to actionable suggestions (automation, trunk-based development), but explicit naming is absent. The audience (practitioners/teams) and signal are high, with almost no off-topic material. No outdated or contradictory elements are present, so no penalties are applied. Confidence reflects high but not perfect category fit given implicit rather than explicit linkage.",
    "reasoning_summary": "The content strongly aligns with Continuous Delivery principles (automation, feedback, pipelines) though it never names the practice directly. Its focus on reducing delivery friction and technical debt fits the category, despite the indirect framing.",
    "level": "Secondary"
  },
  "Scaling": {
    "resourceId": "81ZWio23ss7",
    "category": "Scaling",
    "calculated_at": "2025-10-01T16:58:58",
    "ai_confidence": 14.36,
    "ai_mentions": 0.25,
    "ai_alignment": 1.85,
    "ai_depth": 1.4,
    "ai_intent": 2.15,
    "ai_audience": 4.4,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content centers entirely on defining and mitigating technical debt through automation, testing, and improved development practices. It makes no references to scaling frameworks, methods, or cross-team coordination. There are no explicit or implicit connections to Scaling as defined, nor is there any discussion of enterprise-wide alignment, dependency management at scale, or frameworks like SAFe, LeSS, or Nexus. The intended audience seems to be practitioners, mostly at the team level, without a scaling or multi-team context. Signal-to-noise is modest as the content is focused on technical debt and not on scaling concerns. No penalties were necessary, as the content is not outdated or satirical.",
    "reasoning_summary": "The content focuses on technical debt and strategies to address it at the team level, with no mention or alignment to Scaling frameworks or concerns. It does not fit the 'Scaling' category as defined except in the very broadest sense.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "81ZWio23ss7",
    "category": "System Configuration",
    "calculated_at": "2025-05-16T14:35:37",
    "ai_confidence": 37.35,
    "ai_mentions": 2.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.9,
    "ai_intent": 4.5,
    "ai_audience": 5.1,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on technical debt—highlighting issues like manual processes, slow feedback, and system fragility—and advocates automation and modern development practices (e.g., testing, trunk-based development) to address these. However, explicit discussion of system configuration, its tools, or methodologies is minimal. References to automation and process improvements tangentially relate to configuration practices, but the main thrust is broader technical health, not the setup and ongoing management of systems per se. Thus, only partial conceptual alignment and surface-level relevance bring down confidence.",
    "reasoning_summary": "While the content discusses automation and the impact of manual processes, its main focus is technical debt in general rather than the specifics of system configuration. Thus, it aligns partially but not centrally with the category.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "81ZWio23ss7",
    "category": "Definition of Done",
    "calculated_at": "2025-10-01T16:58:58",
    "ai_confidence": 14.734,
    "ai_mentions": 0.3,
    "ai_alignment": 1.8,
    "ai_depth": 2.0,
    "ai_intent": 1.4,
    "ai_audience": 5.2,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content is focused on technical debt, discussing its causes and remedies such as automation, testing, and process improvements. While some aspects like automation and testing could relate to quality criteria in a Definition of Done (DoD), there is no explicit mention or in-depth discussion of DoD. The central theme is not the DoD itself but rather broad technical practices and the consequences of neglecting them. Audience is somewhat aligned (Agile/Scrum practitioners), but there is minimal direct relevance, little conceptual overlap beyond indirect technical quality, and no substantive discussion of DoD principles, adoption, or role within Agile/Scrum structures.",
    "reasoning_summary": "The content addresses technical debt—not Definition of Done. While some practices mentioned are part of strong DoDs, the primary focus and intent are unrelated to DoD per the strict category criteria. Fit is minimal and mostly incidental.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "81ZWio23ss7",
    "category": "Strategy",
    "calculated_at": "2025-08-07T09:25:38",
    "ai_confidence": 36.025,
    "ai_mentions": 0.2,
    "ai_alignment": 3.3,
    "ai_depth": 2.7,
    "ai_intent": 3.0,
    "ai_audience": 3.2,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content frames technical debt as an important challenge but treats it primarily as a result of operational decisions (automation, refactoring, pipelines). It describes the consequences and basic remedial actions, but does not connect these to high-level strategic planning, vision, or organisational alignment. The audience appears to be practitioners rather than executive or strategic roles. There is little to no explicit strategic language or concepts (beyond the indirect notion of technical debt as a 'choice'), resulting in only partial conceptual alignment. The focus is mostly on tactical and operational remedies rather than broader strategy.",
    "reasoning_summary": "The content discusses technical debt mainly as a set of day-to-day technical challenges and remedies, without connecting to larger organisational or strategic planning contexts. Fit with the 'Strategy' category is limited and largely indirect.",
    "level": "Ignored"
  },
  "Customer Focus": {
    "resourceId": "81ZWio23ss7",
    "category": "Customer Focus",
    "calculated_at": "2025-08-07T07:06:11",
    "ai_confidence": 21.25,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 2.0,
    "ai_audience": 8.1,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on technical debt as a barrier to team efficiency, emphasizing automation and testing to reduce long-term costs. Nowhere does it explicitly mention customer value, outcomes, or feedback loops, nor does it connect technical debt remediation to defining or delivering customer value as per the category. Its audience is agile practitioners, which has some overlap, but otherwise, the discussion is inward—about engineering process—not about customer focus. There is no misalignment or obsolete advice to warrant a penalty.",
    "reasoning_summary": "Content centers on internal DevOps practices and team efficiency, not on customer-defined value or outcomes. No meaningful alignment with the 'Customer Focus' category is present beyond indirect or potential impact.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "81ZWio23ss7",
    "category": "Technical Debt",
    "calculated_at": "2025-08-07T09:25:37",
    "ai_confidence": 94.15,
    "ai_mentions": 9.3,
    "ai_alignment": 9.8,
    "ai_depth": 9.7,
    "ai_intent": 9.4,
    "ai_audience": 9.5,
    "ai_signal": 9.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly defines technical debt multiple times and connects it to broader issues (slow feedback, fragile systems, manual processes) beyond just code quality. It aligns thematically with the category, discusses root causes (choices, compounding debt), and offers concrete mitigation strategies (automation, testing, trunk-based development). The depth is substantial for a brief piece, focusing entirely on technical debt's nature, trade-offs, and remediation. Audience targeting is spot-on for Agile/DevOps practitioners and technical teams. There is no noise or tangential material, and all examples serve the main thesis about technical debt management. No outdated or oppositional statements are present. The overall confidence is very high, just slightly under a perfect score due to brevity.",
    "reasoning_summary": "This content fully fits 'Technical Debt': it directly names and defines it, explores trade-offs, discusses causes, and describes remediation—all focused and highly relevant to Agile/DevOps technical audiences.",
    "level": "Primary"
  },
  "Agentic Agility": {
    "resourceId": "81ZWio23ss7",
    "category": "Agentic Agility",
    "calculated_at": "2025-10-01T16:58:54",
    "ai_confidence": 37.202,
    "ai_mentions": 0.4,
    "ai_alignment": 3.9,
    "ai_depth": 3.7,
    "ai_intent": 4.5,
    "ai_audience": 6.6,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "Direct mentions of 'Agentic Agility' or its terminology are absent. The content's main theme is around technical debt and choices in technical practices. It mildly hints at agency ('technical debt is a choice') and intentionality, but does not explicitly discuss agency in the context of Agile, Scrum, or DevOps. Instead, the focus is on best practices like automation and testing, which are relevant to agility but do not delve into concepts of autonomy, accountability, double-loop learning, or shaping value delivery through agency. The audience (technical practitioners, teams) overlaps somewhat with the category, and the content is focused without much off-topic filler. However, the discussion does not reach the depth or specificity required for a strong fit with Agentic Agility.",
    "reasoning_summary": "The content only tangentially relates to Agentic Agility by framing technical choices as intentional actions but lacks explicit discussion of agency, adaptive action, or its role in Agile. Fit is partial and mostly indirect.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Backlog",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 13.55,
    "ai_mentions": 0.35,
    "ai_alignment": 1.4,
    "ai_depth": 1.3,
    "ai_intent": 1.25,
    "ai_audience": 4.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses exclusively on technical debt, its causes, and remediation through automation and testing. It does not mention product backlog, its management, prioritization, or practices related to Agile or Scrum backlogs. There is some indirect relevance for Agile practitioners who manage technical debt via the backlog, but this is not discussed. Content intent, depth, and alignment with backlog-specific themes are minimal.",
    "reasoning_summary": "This content is about technical debt and its impact on development teams, not on the product backlog or its management. While relevant to Agile practitioners, it doesn’t address backlog concepts or processes, so confidence in this classification is very low.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "81ZWio23ss7",
    "category": "Personal",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 31.847,
    "ai_mentions": 1.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.6,
    "ai_audience": 7.2,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on technical debt in Agile/dev contexts but lacks personal anecdotes, reflections, or unique interpretations. It discusses concepts and advice in a general, impersonal tone with no individual experiences or insights shared. The intended audience (technical practitioners) slightly overlaps with the Personal category, but the content is mainly educational or advisory rather than reflective or anecdotal.",
    "reasoning_summary": "This piece primarily explains technical debt and solutions, lacking the personal stories or subjective insights required for the Personal category. It remains technical and general, offering little individual perspective, therefore scoring low on confidence.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "81ZWio23ss7",
    "category": "Method",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 72.54,
    "ai_mentions": 3.8,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.3,
    "ai_audience": 7.7,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content discusses addressing technical debt by recommending specific procedural changes: automation, early testing, trunk-based development, and improving pipelines—all clear method-related actions. It aligns well with the category by focusing on how systematic approaches mitigate technical debt. However, the content doesn't name particular methods (like Scrum or Kanban) directly and integrates aspects of technical debt management rather than a full, step-by-step method. The discussion is deep on choices and practices but thinner on explicit method frameworks. No penalties apply, as the information is current and relevant.",
    "reasoning_summary": "The content strongly aligns with the Method category because it gives concrete, procedural advice for reducing technical debt—like automation and trunk-based development—though it lacks direct naming of methods or frameworks. Its focus and actionable recommendations boost its confidence score.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "resourceId": "81ZWio23ss7",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 23.85,
    "ai_mentions": 0.25,
    "ai_alignment": 2.65,
    "ai_depth": 2.4,
    "ai_intent": 3.15,
    "ai_audience": 6.2,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content discusses technical debt focusing on team-level issues: slow feedback, fragile systems, and manual processes. Solutions offered (automation, testing, trunk-based development) are common Agile/DevOps practices but are addressed exclusively from a developer or immediate team perspective. There is no mention of enterprise-wide agility, organizational structure, leadership, scaling frameworks, or culture/strategy. While the themes of responsiveness and process improvement loosely echo agility values, there is no substantial connection to Enterprise Agility as defined (no reference to scaling, leadership, transformation, or cross-org impact), which results in a low confidence score.",
    "reasoning_summary": "This content focuses on technical debt and its impact at the team level, lacking discussion of organization-wide agility or transformation. While the message aligns tangentially with agile values, it doesn't address enterprise agility principles, resulting in a low category fit.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 13.15,
    "ai_mentions": 0.0,
    "ai_alignment": 2.8,
    "ai_depth": 2.0,
    "ai_intent": 2.7,
    "ai_audience": 2.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical debt, automation, and testing, but never references hypotheses, experimentation, or validated learning. Main ideas revolve around code quality and process improvement rather than hypothesis-driven development. Key concepts like formulating and testing hypotheses, or using data to iterate, are absent. The guidance is generic, not focused on empirical methods. No penalties applied since content is current and not contradictory.",
    "reasoning_summary": "This piece centers on technical debt, automation, and testing, without discussing hypotheses, experimentation, or validated learning. Its intent and focus are outside the scope of hypothesis-driven development, so fit is minimal.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "81ZWio23ss7",
    "category": "Discipline",
    "calculated_at": "2025-05-16T14:35:42",
    "ai_confidence": 32.25,
    "ai_mentions": 1.6,
    "ai_alignment": 2.4,
    "ai_depth": 2.3,
    "ai_intent": 3.3,
    "ai_audience": 4.7,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt in software development, focusing on the need for automation and testing to address issues. While it references practices relevant in disciplined environments (automation, testing), it doesn't directly discuss 'Discipline' as a structured field with principles, governance, or systemic methodologies. There's no mention of Agile, DevOps, Lean, or the codification of knowledge characteristic of the Discipline category. The focus on technical debt is closer to specific practices and choices rather than the maturation of a discipline. The audience is practitioners, which partially aligns, but the depth and conceptual fit for 'Discipline' are limited.",
    "reasoning_summary": "This content spotlights technical debt and urges good practices like automation and testing, but it doesn't explore or define 'Discipline' as a field. Its focus is on day-to-day decisions, with little reference to shared principles, systemic frameworks, or discipline maturity.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-16T14:35:42",
    "ai_confidence": 13.22,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.7,
    "ai_intent": 1.0,
    "ai_audience": 6.2,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical debt, highlighting issues like slow feedback, fragile systems, and lack of automation. It does not mention Agile Planning Tools or discuss backlog management, sprint planning, or relevant software (e.g., Jira, Trello). The audience (development teams) overlaps somewhat, but the topic is not conceptually aligned or in-depth for this category. Scoring is low on all but audience and signal, reflecting this mismatch.",
    "reasoning_summary": "This article discusses technical debt, emphasizing automation and testing, but makes no mention of Agile Planning Tools or related planning practices. While relevant to development teams, it lacks alignment and depth for this specific category.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "81ZWio23ss7",
    "category": "Coaching",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 17.4,
    "ai_mentions": 0.2,
    "ai_alignment": 2.9,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 4.9,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "There are no direct mentions or references to coaching concepts, roles, or practices. The content focuses entirely on technical debt, advocating for automation and testing, without discussing growth, development, supporting teams, or fostering collaboration. The audience may overlap slightly with practitioners interested in Agile topics, but the signal is weak for coaching and the main thrust is technical advice rather than facilitation or self-discovery.",
    "reasoning_summary": "The content is technical, not coaching-focused. It centers on addressing technical debt via automation and testing, lacking themes of guidance, growth, or collaboration central to coaching. Its focus does not substantiate a strong alignment with the 'Coaching' category.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "81ZWio23ss7",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 25.85,
    "ai_mentions": 0.05,
    "ai_alignment": 2.7,
    "ai_depth": 2.8,
    "ai_intent": 2.35,
    "ai_audience": 7.2,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content focuses on technical debt, slow feedback, automation, and improved deployment, which are adjacent to Internal Developer Platforms (IDPs), but it never mentions IDPs directly nor discusses their frameworks, benefits, or best practices. The main intent is to highlight the cost of technical debt and advocate for automation, not to inform or guide about IDPs as a solution. The only slight alignment comes from encouraging automation and smoother pipelines, which IDPs promote, but this is implied rather than explicit or detailed.",
    "reasoning_summary": "While the article discusses automation and process improvements relevant to IDPs, it never references Internal Developer Platforms directly and remains focused on general technical debt. Alignment exists only in tangential recommendations, resulting in low category confidence.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "81ZWio23ss7",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-08-07T07:06:29",
    "ai_confidence": 41.6,
    "ai_mentions": 0.7,
    "ai_alignment": 4.8,
    "ai_depth": 4.5,
    "ai_intent": 4.3,
    "ai_audience": 6.8,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content defines technical debt beyond code and mentions team choices impacting it, hinting at social elements. However, technical practices (automation, testing) dominate, with little explicit exploration of the technology-organisation interplay, team dynamics, or structural influences on delivery beyond surface references. There is no mention or deep discussion of sociotechnical systems as such. The audience (developers, possibly leads) aligns moderately, but the focus and detail are largely technical with only tangential sociotechnical hints.",
    "reasoning_summary": "Content touches on team choices but mainly discusses technical remediation practices. Minor alignment with sociotechnical themes, but lacks direct depth or substantial exploration of their interaction; overall fit is partial and indirect.",
    "level": "Tertiary"
  },
  "Continuous Improvement": {
    "resourceId": "81ZWio23ss7",
    "category": "Continuous Improvement",
    "calculated_at": "2025-10-01T16:59:03",
    "ai_confidence": 57.785,
    "ai_mentions": 2.6,
    "ai_alignment": 7.8,
    "ai_depth": 6.4,
    "ai_intent": 7.3,
    "ai_audience": 9.0,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "Direct mentions of 'Continuous Improvement' are absent, so the 'mentions' score is low. The content aligns conceptually with Continuous Improvement by advocating for ongoing automation, testing, and removal of process friction as ways to address technical debt. The focus is on proactive change and iterative enhancement. However, the depth is moderate as it only briefly lists improvement actions without discussing empirical data, feedback loops, or methodologies (e.g., PDCA, Kaizen). The main intent is to highlight the strategic and ongoing nature of managing technical debt—a practice intrinsically related to Continuous Improvement, though not examining its broader cultural or organizational implications. The content’s audience (developers, technical leads) overlaps well with those concerned with process excellence. The signal-to-noise ratio is high since all content is relevant, but Continuous Improvement is not explicitly explored as a category.",
    "reasoning_summary": "Fits partially: The content encourages ongoing improvements (automation, testing) to reduce technical debt, matching some Continuous Improvement themes. It lacks explicit reference and broader discussion, so the fit is suggestive but not core.",
    "level": "Tertiary"
  },
  "Transparency": {
    "resourceId": "81ZWio23ss7",
    "category": "Transparency",
    "calculated_at": "2025-10-01T16:42:35",
    "ai_confidence": 12.7,
    "ai_mentions": 0.7,
    "ai_alignment": 1.4,
    "ai_depth": 2.0,
    "ai_intent": 2.3,
    "ai_audience": 3.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content centers on technical debt, automation, and feedback cycles, but does not mention transparency or explore associated themes like information sharing, visibility, or fostering trust. There is minimal conceptual overlap, as transparency is not referenced directly or as a core idea. The focus is on practices for reducing technical debt, not on enrolling stakeholders, visualizing work, or promoting openness in Agile delivery. Consequently, alignment with the category definition is very weak across all dimensions.",
    "reasoning_summary": "The content addresses technical debt and related engineering practices, not transparency. It does not reference openness, visibility, or communication, making its fit to the 'Transparency' category negligible or absent.",
    "level": "Ignored"
  },
  "Common Goals": {
    "resourceId": "81ZWio23ss7",
    "category": "Common Goals",
    "calculated_at": "2025-09-17T23:12:33",
    "ai_confidence": 23.1,
    "ai_mentions": 0.2,
    "ai_alignment": 2.4,
    "ai_depth": 2.0,
    "ai_intent": 2.0,
    "ai_audience": 7.7,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on the nature and impact of technical debt—slow feedback, manual processes, fragile systems—emphasizing engineering best practices like automation and testing. There is no explicit or implicit reference to Common Goals, alignment strategies, or organizational objectives as central themes. The article is targeted at practitioners but does not tie technical debt management to shared objectives, alignment, or frameworks like OKRs. The discussion is tactical and solution-focused (engineering hygiene), not strategic or oriented around collective goals. Thus, the content does not substantially engage with the Common Goals category.",
    "reasoning_summary": "This content is about technical debt and engineering practices, not Common Goals. It does not discuss shared objectives, alignment, or strategy, so fit is weak and mainly tangential.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "81ZWio23ss7",
    "category": "Company as a Product",
    "calculated_at": "2025-08-07T11:24:22",
    "ai_confidence": 16.2,
    "ai_mentions": 0.0,
    "ai_alignment": 2.9,
    "ai_depth": 2.5,
    "ai_intent": 2.7,
    "ai_audience": 5.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content discusses technical debt and the impact of poor engineering practices, focusing on automation and testing at the team level. There are no direct or indirect mentions of treating the company as a product, organisational strategy, or customer-centric company evolution. The main thrust stays within technical best practices (DevOps, software delivery), not organisational transformation. Alignment and depth with the evaluated category are low because content does not address cross-functional collaboration, customer insights, or company-wide change. Audience overlap exists (tech leads, engineers) but not strongly with CaaP strategists/executives. The content is focused and relevant within its scope, but only marginally brushes concepts like continuous improvement, thus the low confidence score.",
    "reasoning_summary": "Content addresses team-level technical debt, not company-wide evolution via the 'Company as a Product' lens. No direct or conceptual fit beyond general themes of improvement; CaaP topics and intent absent.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "81ZWio23ss7",
    "category": "Scrum Master",
    "calculated_at": "2025-08-07T09:25:32",
    "ai_confidence": 23.991,
    "ai_mentions": 0.3,
    "ai_alignment": 1.7,
    "ai_depth": 2.0,
    "ai_intent": 2.1,
    "ai_audience": 8.3,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on technical debt, emphasizing automation, testing, and related engineering practices. There is no explicit reference or substantial alignment to the Scrum Master accountability, nor does the discussion cover Scrum roles or responsibilities. Its intended audience may include Scrum Masters as practitioners interested in team effectiveness, but core themes like enabling empiricism or systemic improvement in Scrum are not discussed. Depth, mentions, and alignment are minimal, and focus is more on engineering best practices than on Scrum Master-specific responsibilities.",
    "reasoning_summary": "Content is about addressing technical debt via automation/testing, not Scrum Master accountability. No direct or conceptual link to the category. Only a partial audience overlap. Does not fit the required topical focus.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Discovery",
    "calculated_at": "2025-05-16T14:35:38",
    "ai_confidence": 16.49,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 2.2,
    "ai_audience": 5.0,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses exclusively on technical debt, its causes, and strategies to mitigate it (e.g., automation, testing, refactoring). There are no direct or indirect references to Product Discovery, nor does the content address understanding customer needs, feature definition, or validation. The main purpose is technical best practices, not discovery. While relevant for product engineers, the audience may overlap, but the substance does not fit the intended category.",
    "reasoning_summary": "This content discusses technical debt and engineering practices, not Product Discovery. It doesn't address user needs, feature validation, or discovery methods, thus scores very low on relevance to the Product Discovery category.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "81ZWio23ss7",
    "category": "Continuous Integration",
    "calculated_at": "2025-10-01T16:58:49",
    "ai_confidence": 60.84,
    "ai_mentions": 2.7,
    "ai_alignment": 7.4,
    "ai_depth": 6.8,
    "ai_intent": 6.9,
    "ai_audience": 7.7,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content discusses technical debt, referencing automation, testing, trunk-based development, and pipeline friction—all conceptually related to Continuous Integration (CI) practices. Although CI is not directly mentioned, the guidance aligns with CI principles such as frequent testing, automation, and improving feedback loops. However, the focus is on technical debt holistically, not deeply on CI as a practice, so the depth and direct mention scores are moderate. The intended audience (teams/workflows in software delivery) matches CI's audience, and the advice is largely relevant to CI, giving a moderate signal-to-noise ratio.",
    "reasoning_summary": "The content partially fits the CI category. It highlights practices aligned with CI (automation, early testing, trunk-based development), but focuses chiefly on technical debt, mentioning CI principles without explicitly discussing CI itself.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "resourceId": "81ZWio23ss7",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T14:35:38",
    "ai_confidence": 55.54,
    "ai_mentions": 2.2,
    "ai_alignment": 6.8,
    "ai_depth": 6.9,
    "ai_intent": 7.3,
    "ai_audience": 7.0,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content discusses technical debt and highlights slow feedback, manual processes, and system fragility—elements tied to metrics and learning in Agile/DevOps. However, it doesn't explicitly mention metrics, measurement, or continuous improvement frameworks. The alignment and depth are moderate due to the underlying relevance (automation/testing as improvement strategies), but direct references to core category topics are limited. The audience is appropriate (teams/practitioners), and the focus is on actionable improvement to processes, raising the signal-to-noise ratio. No penalties were needed, as the content's framing fits contemporary practices and isn't outdated or critical of metrics. The confidence reflects good, but not strong, category fit.",
    "reasoning_summary": "While the piece centers on addressing technical debt using automation and testing—ideas related to continuous improvement—it doesn't delve deeply into metrics or learning frameworks. Its moderate fit earns a mid-high confidence for the 'Metrics and Learning' category.",
    "level": "Tertiary"
  },
  "One Engineering System": {
    "resourceId": "81ZWio23ss7",
    "category": "One Engineering System",
    "calculated_at": "2025-08-07T11:24:21",
    "ai_confidence": 29.905,
    "ai_mentions": 0.2,
    "ai_alignment": 3.9,
    "ai_depth": 3.3,
    "ai_intent": 4.3,
    "ai_audience": 7.15,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses broadly on technical debt, slow feedback, automation, and testing, all of which can be related to themes in unified engineering systems. However, there is no direct mention of 'One Engineering System' or 1ES concepts, frameworks, or their unification intent. The discussion is surface-level and does not explicitly reference standardisation, integration, or tooling unification—hallmarks of 1ES. The intended audience overlaps with engineering practitioners, somewhat consistent with 1ES content, and the signal is reasonably high due to technical process focus. However, without direct or thorough conceptual linkage to 1ES, alignment and depth remain modest.",
    "reasoning_summary": "Content discusses technical debt, automation, and process efficiency—topics tangentially related to 1ES—but lacks direct reference or detailed exploration of One Engineering System principles. Fit with the category is partial and mostly thematic.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "81ZWio23ss7",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 42.32,
    "ai_mentions": 2.6,
    "ai_alignment": 4.7,
    "ai_depth": 4.2,
    "ai_intent": 4.5,
    "ai_audience": 5.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content discusses technical debt—emphasizing automation, testing, and improved processes to enhance software delivery. While it references teams collectively making decisions and facing challenges, it does not delve into team communication, dynamics, or shared ownership in Agile, Scrum, or DevOps. No explicit ties to team collaboration strategies, team practices, or cross-functional dynamics are present. The main themes center on process improvement and technical excellence rather than the human or collaborative aspects of teamwork.",
    "reasoning_summary": "While the piece mentions teams and collective actions, its focus is on technical processes rather than the collaborative aspects of teamwork. It lacks explicit discussion of communication, trust, or shared ownership, making its fit for the 'Team Collaboration' category moderate at best.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "resourceId": "81ZWio23ss7",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-08-07T11:24:14",
    "ai_confidence": 7.3,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 1.1,
    "ai_audience": 1.9,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on technical debt in software development, specifically discussing automation, testing, and trunk-based development. Artificial Intelligence is not mentioned nor meaningfully implied. There is no indication of AI being discussed in the context of Agile, DevOps, or software practices. All references are about conventional automation and development practices, without extending to AI-driven solutions, analytics, or innovations outlined in the category definition.",
    "reasoning_summary": "Content discusses technical debt, automation, and testing, but does not mention or align with Artificial Intelligence or its applications in Agile, DevOps, or software development. No fit with the category.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "81ZWio23ss7",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 54.022,
    "ai_mentions": 1.7,
    "ai_alignment": 4.9,
    "ai_depth": 4.3,
    "ai_intent": 5.2,
    "ai_audience": 5.6,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content centers on technical debt, emphasizing automation, early testing, and reducing delivery friction. While it mentions 'trunk-based development,' a relevant modern source control practice, most of the content deals with general engineering efficiency rather than deep version control concepts. Direct mentions are minimal, key themes only partially align, and depth on source control practices is limited. The audience is practitioners, but the focus is broader than modern source control.",
    "reasoning_summary": "While trunk-based development is mentioned, the piece largely discusses broader technical debt and engineering best practices, not modern source control specifically. Its relevance to the category is partial and indirect, justifying a modest confidence score.",
    "level": "Tertiary"
  },
  "Team Performance": {
    "resourceId": "81ZWio23ss7",
    "category": "Team Performance",
    "calculated_at": "2025-10-01T16:58:41",
    "ai_confidence": 81.875,
    "ai_mentions": 5.6,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.2,
    "ai_audience": 7.4,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content identifies technical debt as systemic friction that impedes team delivery, describing how it leads to firefighting and slows outcomes. It highlights actions (automation, testing) that improve delivery capability. Direct reference to 'teams' and repeated framing of debt as a delivery problem is strongly aligned with the Team Performance category. It excludes individual blame and focuses on team/system, but doesn’t deeply analyze metrics or delivery trends, limiting depth somewhat. The target is technical/DevOps/Agile teams—the right audience. No penalties applied.",
    "reasoning_summary": "The content is strongly focused on how technical debt affects team delivery effectiveness and systemic throughput, clearly fitting the Team Performance category, though it addresses the topic at a practical rather than deeply analytical level.",
    "level": "Primary"
  },
  "First Principal": {
    "resourceId": "81ZWio23ss7",
    "category": "First Principal",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 44.84,
    "ai_mentions": 0.2,
    "ai_alignment": 6.1,
    "ai_depth": 5.55,
    "ai_intent": 5.75,
    "ai_audience": 9.1,
    "ai_signal": 8.85,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content focuses on technical debt, describing its forms (slow feedback, manual processes) and advocating for practices like automation and testing to mitigate it. However, it does not explicitly discuss first principles or frame actions in terms of immutable, foundational constraints. Recommendations provided (automation, trunk-based development) are best practices and context-dependent, not irreducible truths. No direct reference or clear analysis of 'first principles' occurs. There is good alignment for DevOps/technical audiences, and the advice is relevant, but it lacks the definitional or conceptual depth to fit the 'First Principal' category as strictly defined.",
    "reasoning_summary": "While the content offers relevant DevOps advice and fits a technical audience, it doesn't define or apply first principles as foundational, non-negotiable truths. Its focus is on practices and choices, not immutable constraints, so confidence in the 'First Principal' category is low.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "resourceId": "81ZWio23ss7",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T14:35:38",
    "ai_confidence": 24.9,
    "ai_mentions": 0.3,
    "ai_alignment": 2.4,
    "ai_depth": 2.2,
    "ai_intent": 3.3,
    "ai_audience": 6.1,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses exclusively on the concept of technical debt—its causes, consequences, and remediation strategies like automation and testing. There are no direct mentions of cross-functional teams, nor is the structure, collaboration, or unique value of such teams discussed explicitly or implicitly. The advice appears aimed at software practitioners in general, but there are no indicators this is intended specifically for or about cross-functional teams or their dynamics within Agile methodologies.",
    "reasoning_summary": "This content centers on the concept of technical debt, lacking any explicit or meaningful discussion of cross-functional teams. Advice is general for software teams and does not align with the category's core intent or definitions.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "81ZWio23ss7",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 13.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 2.3,
    "ai_intent": 1.0,
    "ai_audience": 4.4,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses exclusively on technical debt: its broader definition, causes, and how teams should address it via automation and testing. There are no mentions of backlog refinement or any of its associated practices, processes, or roles. While the audience (software teams) overlaps somewhat, the intent, depth, and alignment to backlog refinement are weak. The subject is only tangentially related, as managing technical debt could someday influence backlog prioritisation, but no such link is made explicit. No penalties applied since the content is recent, factual, and does not contradict Agile values.",
    "reasoning_summary": "This content discusses technical debt—its causes, impacts, and strategies for addressing it—but does not mention or align with backlog refinement. Any connection is indirect at best. As such, confidence that it fits the 'Backlog Refinement' category is very low.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "81ZWio23ss7",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-16T14:35:38",
    "ai_confidence": 31.55,
    "ai_mentions": 2.0,
    "ai_alignment": 3.1,
    "ai_depth": 3.6,
    "ai_intent": 3.0,
    "ai_audience": 9.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": true,
    "ai_penalty_points": 3.7,
    "ai_penalty_details": "Mentions: Penalized 1.0 for not mentioning 'Miscellaneous'. Alignment: Penalized 1.0 for discussing practices (automation, trunk-based development) tied to Agile/DevOps. Depth: Penalized 1.0 for being largely actionable guidance. Intent: Penalized 0.7 for primary focus on improvement guidance rather than broad, non-framework discussion.",
    "final_score": 32.0,
    "reasoning": "The content dives into the concept of technical debt and connects it with slow feedback, brittle systems, and manual processes. However, it prescribes specific solutions—automation, testing, trunk-based development, and improving delivery pipelines—all of which are core practices within Agile and DevOps frameworks. The discussion is prescriptive and actionable, not anecdotal or framework-agnostic. There are no direct mentions of the Miscellaneous theme, and the content’s intent is to guide best practices rather than offer non-aligned or general reflections. Penalties are assigned for direct alignment with established methodologies, a lack of thematic depth within 'Miscellaneous', and the deliverable-focused tone. The only close fit is its broad resonance to technical and delivery audiences.",
    "reasoning_summary": "This piece doesn’t fit the Miscellaneous category because it offers specific guidance highly aligned with Agile and DevOps frameworks, such as automation and trunk-based development. Its actionable and prescriptive nature places it outside the intended scope of framework-agnostic, Miscellaneous discussions.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "81ZWio23ss7",
    "category": "Technical Mastery",
    "calculated_at": "2025-10-01T16:58:53",
    "ai_confidence": 85.45,
    "ai_mentions": 4.3,
    "ai_alignment": 9.5,
    "ai_depth": 8.8,
    "ai_intent": 9.0,
    "ai_audience": 9.5,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content directly addresses technical debt—a core topic of Technical Mastery—redefining it as more than messy code, emphasizing automation, testing, and refactoring. Key practices (automation, trunk-based dev, pipelines) are highlighted for their role in improving software engineering quality. The explicit call to address technical debt aligns with the principles of craftsmanship, clean code, and DevOps. The intended audience is practitioners and teams involved in software delivery. While direct mentions of 'Technical Mastery' are not frequent, almost every sentence aligns with its purpose and best practices. The discussion is substantial for its length, though presented concisely, hence not exhaustive depth. No outdated or negative elements were detected.",
    "reasoning_summary": "Core focus on technical debt, automation, and engineering practices aligns strongly with Technical Mastery. The content’s purpose and actionable advice are highly relevant, making this a strong, clear fit for the category.",
    "level": "Primary"
  },
  "Scrum Values": {
    "resourceId": "81ZWio23ss7",
    "category": "Scrum Values",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 8.16,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.8,
    "ai_intent": 1.9,
    "ai_audience": 1.1,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content centers on technical debt—its causes, consequences, and solutions—emphasizing best practices like automation and testing. While these topics might tangentially relate to Scrum Values (e.g., commitment or focus), there is no explicit reference, discussion, or framing of Scrum Values, nor direct conceptual alignment. The article's intent is practical and rooted in engineering implementation, not team values. No penalties apply; content is current and constructive, but it falls outside the direct scope of the Scrum Values category.",
    "reasoning_summary": "This content discusses technical debt and ways to address it, focusing on engineering practices, not Scrum Values. There's little alignment with the category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 41.26,
    "ai_mentions": 1.8,
    "ai_alignment": 4.9,
    "ai_depth": 4.7,
    "ai_intent": 4.5,
    "ai_audience": 6.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content thoroughly discusses technical debt as more than code quality—encompassing automation, feedback, and delivery. However, it doesn't mention the Agile Product Operating Model or explore its principles, product orientation, or organizational structures. There are vague ties to continuous improvement and delivery, but key concepts like business/technology roadmaps, product ethos, or governance structures are absent. The target audience (engineering teams) partially overlaps but isn't fully aligned with APOM's broader focus.",
    "reasoning_summary": "The text focuses on technical debt and ways to reduce it, but lacks direct references or deep exploration of Agile Product Operating Model principles. While it touches on continuous improvement and delivery, it misses APOM's defining themes around product management, making its category fit limited.",
    "level": "Tertiary"
  },
  "Shift Left Strategy": {
    "resourceId": "81ZWio23ss7",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-08-07T11:24:15",
    "ai_confidence": 69.6,
    "ai_mentions": 2.3,
    "ai_alignment": 7.5,
    "ai_depth": 7.2,
    "ai_intent": 7.6,
    "ai_audience": 7.7,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of reducing technical debt through early testing, automation, and improved processes, which aligns conceptually with Shift Left principles. However, it never directly uses the term 'Shift Left' and focuses slightly more on the broader topic of technical debt. Mentions of 'test early and often' and process automation are strong indicators but not presented as part of an explicit Shift Left strategy or labeled as such. The depth explores causes and solutions for technical debt but remains somewhat general. The audience (software development teams, practitioners) matches, and focus is high with minimal tangential content.",
    "reasoning_summary": "The content aligns with Shift Left principles (early testing, automation) as they relate to reducing technical debt but does not explicitly mention Shift Left. The fit is partial and inferred from context rather than direct discussion.",
    "level": "Secondary"
  },
  "Working Software": {
    "resourceId": "81ZWio23ss7",
    "category": "Working Software",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 31.825,
    "ai_mentions": 1.2,
    "ai_alignment": 3.5,
    "ai_depth": 3.6,
    "ai_intent": 3.3,
    "ai_audience": 7.4,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt, automation, and quality practices, which are adjacent to 'Working Software' but rarely reference the artifact itself or its definition within Agile frameworks. The focus is on process improvement and debt reduction, not on the delivery or characteristics of working software or its incrementality. There is no explicit mention of 'working software,' Agile increments, or value delivery in the sense required by the category. Depth is moderate as it explores causes, effects, and remedies for technical debt, but always in the context of general code quality and flow, not as a pathway to deliverable software artifacts. The intended audience is technical teams, marginally aligning with the category. Overall, the content is relevant to teams that might care about working software, but does not substantially illustrate its definition, value, or measurement.",
    "reasoning_summary": "This piece centers on reducing technical debt through automation and testing, focusing on better practices rather than the output of working, deliverable software. It doesn't directly address 'working software' or its definition, so fit with the category is limited.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "81ZWio23ss7",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-16T14:35:39",
    "ai_confidence": 43.25,
    "ai_mentions": 1.7,
    "ai_alignment": 5.5,
    "ai_depth": 4.8,
    "ai_intent": 4.2,
    "ai_audience": 6.3,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content centers on technical debt, discussing automation and pipeline improvements that intersect with digital transformation themes, such as operational efficiency via digital tools. However, it lacks direct references to organizational transformation, strategic frameworks, or comprehensive digital initiatives. While relevant elements (automation, testing, process enhancement) support transformation, the main thrust remains technical quality and dev practices rather than a broad, strategic digital transformation narrative. Minimal category-specific naming is present, and depth stays focused on software team tactics. No penalties apply, as the topic is current and the tone is aligned.",
    "reasoning_summary": "This content spotlights technical debt and how automation helps, touching on aspects relevant to digital transformation. However, it doesn't delve into broader organizational change or strategy, so confidence for the category is moderate.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "resourceId": "81ZWio23ss7",
    "category": "Trend Analysis",
    "calculated_at": "2025-10-01T16:58:45",
    "ai_confidence": 29.55,
    "ai_mentions": 1.2,
    "ai_alignment": 3.3,
    "ai_depth": 3.8,
    "ai_intent": 2.9,
    "ai_audience": 6.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content discusses technical debt and its various forms within software teams, highlighting the importance of proactive remediation. However, it does not analyze trends or shifts in Agile, DevOps, or business agility, nor does it examine patterns over time or provide data-driven insights. There are no explicit references to trend analysis or emerging practices, and the discussion remains focused on defining and addressing technical debt. Thus, the main themes, intent, and depth only partially overlap with the Trend Analysis category, warranting a low confidence score.",
    "reasoning_summary": "This content defines and discusses technical debt but does not analyze trends or patterns in Agile, DevOps, or business agility. There is little conceptual or depth alignment with 'Trend Analysis.' Fit is marginal and mostly incidental.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "81ZWio23ss7",
    "category": "Organisational Psychology",
    "calculated_at": "2025-10-01T16:58:49",
    "ai_confidence": 8.15,
    "ai_mentions": 0.0,
    "ai_alignment": 1.4,
    "ai_depth": 1.2,
    "ai_intent": 2.4,
    "ai_audience": 1.3,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on technical debt—defining it, causes, and approaches for remediation via automation, testing, and technical practices. It lacks any explicit or implicit discussion of psychological principles, theories of motivation, leadership, group behaviour, or how these factors influence organisational performance. There is no mention of engagement, culture, change management, or employee satisfaction. The audience is primarily technical practitioners concerned with code quality and process efficiency, not organisational or psychological aspects. Therefore, there is minimal alignment with the category; the topic, themes, and intent are technical, not psychological.",
    "reasoning_summary": "Topic and intent are entirely technical; no mention or exploration of organisational psychological principles, motivation, team dynamics, or related theory. Content does not fit category beyond very indirect implications.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "81ZWio23ss7",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-16T14:35:38",
    "ai_confidence": 7.2,
    "ai_mentions": 0.0,
    "ai_alignment": 0.8,
    "ai_depth": 1.1,
    "ai_intent": 0.7,
    "ai_audience": 2.1,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content exclusively discusses technical debt—its broad definition, accumulation, and remedies via automation and best dev practices. It does not mention Hybrid Agile or analyze the merging of traditional and agile methods. No discussion of command-and-control, leadership, role accountability, or cross-method dysfunctions is present. The audience is practitioners/developers, not change leaders or strategists examining Hybrid Agile. Content is focused on engineering practice, not process model critique.",
    "reasoning_summary": "This content centers on technical debt and how to address it, without engaging with Hybrid Agile concepts or their challenges. It is a practical discussion for developers, not a critical analysis relevant to the Hybrid Agile category.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "81ZWio23ss7",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T14:35:38",
    "ai_confidence": 11.96,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 2.0,
    "ai_intent": 1.4,
    "ai_audience": 2.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content discusses technical debt—how it slows teams and requires proactive management via automation and testing. While it references team productivity and workflow friction, it does not address motivation, satisfaction, or commitment, nor does it mention employee engagement topics such as recognition, trust, or leader impact. The audience seems technical, focused on process, not the human aspects central to this category.",
    "reasoning_summary": "This content is technical, focusing on processes and systems rather than on employee engagement or motivation. It doesn’t explore or mention the core elements of engagement, such as trust or recognition, so it only loosely fits the category.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Test Driven Development",
    "calculated_at": "2025-10-01T16:58:32",
    "ai_confidence": 27.4,
    "ai_mentions": 0.8,
    "ai_alignment": 3.2,
    "ai_depth": 2.7,
    "ai_intent": 2.5,
    "ai_audience": 6.2,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content discusses technical debt and suggests early testing and automation as solutions. However, it does not mention Test Driven Development explicitly, nor does it detail TDD principles, the Red-Green-Refactor cycle, or specific TDD practices. The focus is on general quality improvement practices, making only tangential reference to testing. Audience could overlap with those interested in TDD, but the main topic is broader technical debt remediation, not TDD methodology.",
    "reasoning_summary": "The content focuses on technical debt and general testing/automation practices, with no explicit or substantive discussion of Test Driven Development principles or methods. The fit to the TDD category is weak and largely incidental.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "81ZWio23ss7",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T14:35:38",
    "ai_confidence": 33.338,
    "ai_mentions": 0.9,
    "ai_alignment": 4.8,
    "ai_depth": 3.7,
    "ai_intent": 3.2,
    "ai_audience": 5.4,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses technical debt broadly, highlighting issues such as manual processes, slow feedback, lack of automation, and fragile systems. While automation and frictionless pipelines are relevant to platform engineering, the piece does not directly reference platform engineering or Internal Developer Platforms and treats automation/testing as general remedies. No explicit focus on developer platforms, self-service, or standardized tools is present. The discussion stays at a generic level, offering advice applicable to many software practices rather than targeting platform engineering specifically.",
    "reasoning_summary": "While the content stresses automation and reducing technical debt, it doesn't directly address platform engineering principles or concepts. The discussion is general, lacking explicit references to internal developer platforms or related practices. As such, it only partially fits the Platform Engineering category.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "81ZWio23ss7",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T14:35:40",
    "ai_confidence": 59.1,
    "ai_mentions": 1.6,
    "ai_alignment": 6.2,
    "ai_depth": 5.7,
    "ai_intent": 7.4,
    "ai_audience": 8.3,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content focuses on addressing technical debt through automation, testing, and improving delivery—which are closely associated with Lean Thinking's emphasis on efficiency and minimizing waste (like manual processes). However, it does not directly mention Lean Thinking, Lean principles, or named Lean practices. The conceptual overlap is strong, especially regarding waste reduction, but depth is moderate as it lacks explicit discussion of Lean frameworks or terminology. The intent aligns with Lean goals of efficiency for technical teams, and the signal is focused, with little off-topic content. All scores vary and reflect the nuanced but indirect fit.",
    "reasoning_summary": "While the piece doesn't explicitly reference Lean Thinking, its focus on reducing wasteful processes and improving efficiency through automation and testing aligns well with Lean principles. The content is well-targeted and purposeful, but would score higher with explicit Lean concepts or terminology.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "resourceId": "81ZWio23ss7",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 30.54,
    "ai_mentions": 0.5,
    "ai_alignment": 3.2,
    "ai_depth": 2.8,
    "ai_intent": 3.6,
    "ai_audience": 7.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content focuses solely on technical debt, including automation, testing, and development practices. While these topics are relevant to effective teams, there is no explicit reference to self-organisation or its core principles, such as autonomy, leadership roles, or fostering a self-organising culture. The intent is on reducing technical debt rather than empowering teams to self-organise. The audience is likely practitioners who might benefit from self-organisation concepts, but the discussion never directly addresses those. No penalties applied, as tone is appropriate and the information is current.",
    "reasoning_summary": "This content is primarily about managing technical debt through automation and better process, not about self-organisation. While its advice could help a self-organising team, it doesn't mention or thoroughly explore self-organisation itself.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "81ZWio23ss7",
    "category": "Competence",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 57.85,
    "ai_mentions": 1.6,
    "ai_alignment": 6.7,
    "ai_depth": 6.2,
    "ai_intent": 6.0,
    "ai_audience": 8.2,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content focuses on technical debt, framing it as more than messy code, including issues like slow feedback and manual processes. It advocates for automation and testing to manage technical debt, implying a need for skillful, disciplined teams. However, it does not mention 'competence' directly and does not deeply discuss skill development, learning, or professionalism. The discussion is indirectly aligned, showing how lack of competence leads to increased debt, but the main intent is to highlight actions to reduce technical debt, not cultivate competence per se. The piece targets agile practitioners and delivery teams. Overall, partial alignment with some conceptual overlap, but depth and focus on competence are moderate.",
    "reasoning_summary": "While the content links technical debt to choices and practices that reflect team discipline and ability, it doesn't explicitly address competence, skill-building, or continuous learning. Its primary focus is on actionable strategies to reduce debt, leading to moderate confidence for the 'Competence' category.",
    "level": "Tertiary"
  },
  "Decision Making": {
    "resourceId": "81ZWio23ss7",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 35.87,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.1,
    "ai_intent": 4.0,
    "ai_audience": 6.2,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content discusses technical debt and suggests best practices like automation and early testing, which imply decision making, but it does not directly reference structured, evidence-based decision-making frameworks or methodologies. The main focus is on the consequences of technical debt and actions to mitigate it, not on the process or frameworks that inform such decisions. Despite mentioning that technical debt accumulates through choice, there is no substantive discussion of evidence-based or collaborative decision processes, nor direct ties to data analytics, feedback loops, or empirical prioritization. Thus, the content is tangentially related from an intent and audience perspective (teams making technical choices), but substantially misaligned with the depth and central concepts of the category. No penalties were applied.",
    "reasoning_summary": "While the content touches on the idea that technical debt results from team choices, it lacks a structured or evidence-based approach to decision making. It’s more about advocating for best practices than examining how informed decisions are made in an organizational context.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "resourceId": "81ZWio23ss7",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 14.7,
    "ai_mentions": 0.3,
    "ai_alignment": 1.5,
    "ai_depth": 1.5,
    "ai_intent": 2.3,
    "ai_audience": 3.2,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on technical debt and its consequences, emphasizing automation, testing, and process improvement. However, it does not mention installation or configuration processes, best practices, or related tools. No direct or indirect alignment with the 'Install and Configuration' category is evident—the main theme is about general development practices and team habits rather than actionable setup or configuration instructions. The audience is broadly technical but not specifically those seeking install/configuration guidance.",
    "reasoning_summary": "This content discusses technical debt and general improvement practices but lacks direct discussion of installation or configuration topics, making it a poor fit for the evaluated category.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "81ZWio23ss7",
    "category": "Current Value",
    "calculated_at": "2025-05-16T14:35:43",
    "ai_confidence": 13.8,
    "ai_mentions": 0.8,
    "ai_alignment": 1.5,
    "ai_depth": 1.6,
    "ai_intent": 2.2,
    "ai_audience": 4.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on the broader concept of technical debt—slow feedback, manual processes, and automation—but never directly discusses 'Current Value' or Evidence-Based Management. There are some indirect implications, as technical debt can diminish real-time value delivery, but the piece doesn't mention any Current Value metrics, customer satisfaction, or performance feedback. The main intent is to advocate for managing technical debt, not to explore, measure, or analyze Current Value. The target audience overlaps as it addresses teams focused on delivery excellence, but overall, the piece is tangential to the category. Little relevant depth and conceptual alignment are present, yielding a low confidence score.",
    "reasoning_summary": "This content focuses on technical debt and improvement practices, not on Current Value or Evidence-Based Management. It misses direct references, metrics, or analysis relating to Current Value, making its fit with the category very low.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "81ZWio23ss7",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T14:35:43",
    "ai_confidence": 9.5,
    "ai_mentions": 0.0,
    "ai_alignment": 0.7,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 1.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content exclusively discusses technical debt—its causes, consequences, and remedies—within software delivery teams. There are no direct mentions of customer satisfaction or its role in business agility. The concepts focus on automation, testing, and refactoring, but do not explore how resolving technical debt impacts customer happiness, engagement, or experience. The audience aligns with technical practitioners, but the purpose and substance are about engineering practices, not customer-oriented outcomes. No penalties apply.",
    "reasoning_summary": "This piece centers on technical debt, automation, and engineering choices, with no explicit or substantial link to customer satisfaction. While cleaner code may eventually benefit customers, the content doesn't discuss those outcomes—so it barely fits the category.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Project Management",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 41.58,
    "ai_mentions": 1.3,
    "ai_alignment": 5.2,
    "ai_depth": 4.8,
    "ai_intent": 4.2,
    "ai_audience": 4.6,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on technical debt, its implications (slow feedback, manual processes), and actions like automation/testing—relevant concepts for a project management context concerned with delivery and cost. However, it does not explicitly reference project management principles, roles, methodologies, or lifecycle phases. The primary audience seems to be developers and teams rather than project managers. The discussion is relatively shallow and lacks practical project management strategies, tools, or frameworks. Overall, while tangentially relevant, it fails to cover core project management topics in depth or intent.",
    "reasoning_summary": "While the content discusses technical debt and its impact on delivery, it doesn't explicitly address project management principles or practices. The connection to project management is indirect, so confidence in this classification is moderate but limited.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 18.97,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 2.3,
    "ai_audience": 6.2,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on technical debt, discussing issues like slow feedback, brittle systems, and manual processes. While these are concerns often addressed within Agile practices, the article neither explicitly mentions Agile, its frameworks, or any Agile-specific principles. The recommendations (automation, testing, trunk-based development) are general engineering best practices without clear reference to Scrum, Kanban, or the Agile Manifesto. The article is more relevant to engineers and teams interested in software quality than specifically to those studying Agile frameworks. Therefore, mentions are extremely limited, alignment is peripheral, and most discussion lacks direct Agile framework context.",
    "reasoning_summary": "While the content touches on concepts important to Agile, like addressing technical debt and encouraging automation, it doesn't reference Agile frameworks, principles, or values explicitly. Its alignment is tangential, with only indirect relevance to the Agile Frameworks category.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "81ZWio23ss7",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T14:35:37",
    "ai_confidence": 30.8,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 3.1,
    "ai_intent": 3.5,
    "ai_audience": 6.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content centers on technical debt, focusing on software engineering pain points like automation and testing. While these intersect with DevOps practices, the discussion does not explicitly reference social technologies, frameworks for collaboration, or collective intelligence. The depth is limited to practical advice on technical improvement without addressing underlying social dynamics, organizational culture, or self-organization. Thus, the category relevance is incidental and confidence is low.",
    "reasoning_summary": "This content targets engineers facing technical debt, focusing on practical, technical fixes rather than the collaborative frameworks or organizational principles at the heart of Social Technologies. Relevance to the category is minimal.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 24.11,
    "ai_mentions": 0.9,
    "ai_alignment": 2.6,
    "ai_depth": 1.95,
    "ai_intent": 2.5,
    "ai_audience": 3.1,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content centers on addressing technical debt, emphasizing engineering best practices like automation and testing. There are no direct mentions of product strategy, nor is the discussion tied to vision formulation, market analysis, or strategic roadmapping. While reducing technical debt can indirectly support product agility, the content's intent is primarily operational and engineering-focused, not strategy-oriented. The audience is technical teams, not strategists or executives crafting product direction.",
    "reasoning_summary": "This piece focuses on technical debt and engineering practices rather than the core aspects of product strategy, like vision, market positioning, or strategic planning. The primary audience is technical teams, with only indirect links—if any—to product strategy principles.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Development",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 76.62,
    "ai_mentions": 4.3,
    "ai_alignment": 8.9,
    "ai_depth": 8.5,
    "ai_intent": 8.6,
    "ai_audience": 7.9,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content discusses technical debt as it relates to delivery speed, system resilience, automation, testing practices, and development pipelines. While it doesn't name 'Product Development' directly, its central theme—managing practices that enable faster, higher-quality delivery—aligns strongly with product development methodologies such as continuous improvement and DevOps. The discussion goes beyond surface-level definitions, offers actionable practices, and implicitly targets teams responsible for building and iterating products. Minor deductions in mentions and audience are due to absence of explicit product management language and a slight technical delivery tilt, but overall, the core discussion supports value delivery, risk mitigation, and iterative improvement.",
    "reasoning_summary": "This content closely aligns with Product Development, focusing on minimizing technical debt to improve delivery, automation, and quality. While it doesn't mention the category by name and leans technical, its ideas strongly support iterative, risk-mitigating practices vital for effective product evolution.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "resourceId": "81ZWio23ss7",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 14.2,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 2.4,
    "ai_audience": 3.0,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on technical debt, its impact, and remediation techniques, such as automation and testing. There are no explicit or implicit references to sensemaking principles, frameworks, or decision-making in complex environments. The main audience is technical teams, not strategists, and the discussion remains surface-level regarding organizational complexity, with little relevance to sensemaking. No penalties applied.",
    "reasoning_summary": "This piece addresses technical debt and improvement strategies, but it does not engage with sensemaking concepts or frameworks. Its focus is technical remediation, not the interpretation of complexity or decision-making in organizations—so it only marginally fits the Sensemaking category.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "81ZWio23ss7",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 6.94,
    "ai_mentions": 0.1,
    "ai_alignment": 0.6,
    "ai_depth": 0.7,
    "ai_intent": 1.2,
    "ai_audience": 2.0,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses entirely on technical debt, automation, and improving software delivery practices. There are no direct mentions or conceptual discussion of Cell Structure Design, Beta Codex, decentralization, or organizational design models. The audience and signals are for software engineers, not organizational designers. As such, the confidence is extremely low, reflecting an almost total misalignment with the target category.",
    "reasoning_summary": "This content is centered on technical debt and software engineering best practices, with no mention or thematic alignment to Cell Structure Design. It does not address organizational design or the principles required by the category, resulting in very low confidence.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "81ZWio23ss7",
    "category": "Artifact",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 12.78,
    "ai_mentions": 0.5,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 2.0,
    "ai_audience": 3.0,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical debt broadly, emphasizing automation, testing, and development practices to reduce delivery friction. It does not mention artifacts by name or discuss their structure, purpose, or role. While it targets practitioners and discusses Agile/DevOps concepts, there is minimal alignment with or depth regarding artifacts, and no exploration of transparency or formal constructs like backlogs or increments.",
    "reasoning_summary": "This content discusses technical debt and process improvements but does not address artifacts or their core aspects. Its focus is too broad and does not align with the structure or purpose of Agile artifacts.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T14:35:42",
    "ai_confidence": 43.59,
    "ai_mentions": 1.2,
    "ai_alignment": 4.8,
    "ai_depth": 5.5,
    "ai_intent": 4.7,
    "ai_audience": 7.3,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content focuses on the concept of technical debt, its consequences, and solutions such as automation and testing. While these align with Agile technical practices, the discussion stays at the team/process level and doesn't connect to strategic topics like vision alignment, scaling agile, or long-term adaptability. There are no direct mentions of Agile or strategic intent; the primary audience seems to be practitioners rather than executives or strategists.",
    "reasoning_summary": "This content discusses technical debt and practices to reduce it, targeting practitioners. Although related to Agile approaches, it lacks a strategic angle—a core element of the 'Agile Strategy' category—resulting in moderate confidence for this classification.",
    "level": "Tertiary"
  },
  "GitHub": {
    "resourceId": "81ZWio23ss7",
    "category": "GitHub",
    "calculated_at": "2025-05-16T14:35:42",
    "ai_confidence": 10.2,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.8,
    "ai_intent": 1.1,
    "ai_audience": 3.1,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses broadly on technical debt, with advice such as 'automate', 'test early', and 'remove pipeline friction', which may align with general DevOps or Agile themes but makes no explicit or implicit mention of GitHub, its features, or services. Nothing in the title, description, or content addresses GitHub repositories, Actions, collaboration tools, or relevant practices. The audience is likely technical but not specifically GitHub users. Discussion remains high-level with generalized best practices lacking direct applicability or example within GitHub's context.",
    "reasoning_summary": "This content discusses technical debt and general process improvement without referencing GitHub or its tools. No GitHub practices, features, or integrations are mentioned, so the confidence score is very low for this category.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "81ZWio23ss7",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 26.625,
    "ai_mentions": 1.2,
    "ai_alignment": 3.3,
    "ai_depth": 2.6,
    "ai_intent": 2.8,
    "ai_audience": 5.0,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content discusses technical debt in software development and advocates for automation, testing, and streamlined pipelines, which are relevant themes for Azure Pipelines users. However, it does not explicitly mention Azure Pipelines or Microsoft DevOps, nor does it delve into specific Azure tooling, configurations, or practices. Its focus is high-level and generic, touching only briefly on pipelines without them being the central theme or product. Thus, the direct relevance to Azure Pipelines is limited.",
    "reasoning_summary": "This content discusses technical debt, automation, and efficient pipelines in general, not Azure Pipelines specifically. While thematically related, it does not reference Azure Pipelines or its unique practices, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "81ZWio23ss7",
    "category": "Leadership",
    "calculated_at": "2025-05-16T14:35:41",
    "ai_confidence": 19.72,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 2.3,
    "ai_audience": 8.2,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content centers on technical debt and strategies for remediation, such as automation and improved testing, which are relevant for engineering teams and practitioners. However, it does not explicitly mention leadership, leadership models, or the role of leaders in transformation, nor does it focus on cultural change or inspire collaboration from a leadership perspective. Instead, the messaging is practical, targeting team members or practitioners rather than organisational leaders or those responsible for driving agile or DevOps transformation. Minimal alignment with the category's conceptual core results in low scores for mentions, alignment, depth, intent, and signal, even though it may be useful for technical audiences.",
    "reasoning_summary": "This content focuses on technical debt and remediation tactics, not leadership concepts or practices. It lacks direct references to leadership roles or responsibilities, making it a poor fit for the Leadership category despite some relevance for technical audiences.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "81ZWio23ss7",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 17.15,
    "ai_mentions": 0.1,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.4,
    "ai_audience": 4.2,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses entirely on the concept of technical debt, its impact on software delivery, and the need to address it proactively through automation and better development practices. While these topics (such as automation, testing, and trunk-based development) are related to improving system quality and team productivity, there is no explicit or even indirect discussion of customer retention, user engagement, feedback loops, or customer-centric strategies. The intended audience (software and DevOps practitioners) may overlap somewhat with those interested in customer retention, but the main message is not centered on retaining customers—it is about technical excellence and maintainability. Thus, mention and alignment with 'Customer Retention' are minimal.",
    "reasoning_summary": "This piece centers on managing technical debt in software teams, detailing how to reduce friction with automation and testing. However, it doesn’t discuss retaining customers or improving engagement, so it barely aligns with the Customer Retention category.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "81ZWio23ss7",
    "category": "Ethos",
    "calculated_at": "2025-05-16T14:35:42",
    "ai_confidence": 38.45,
    "ai_mentions": 0.9,
    "ai_alignment": 4.8,
    "ai_depth": 4.6,
    "ai_intent": 4.0,
    "ai_audience": 8.5,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on technical debt and its manifestations beyond code quality. While it references decision-making ('technical debt is a choice') and hints at system-level thinking, it does not explicitly connect to underlying ethos, foundational beliefs, or system evidence. The discussion urges best practices (automation, testing) but remains at a practical level, not probing the authentic values or convictions that sustain Agile, Lean, or DevOps systems. There's minimal explicit mention of ethos, and the content mainly targets practitioners, not exploring ethos as defined in the category.",
    "reasoning_summary": "Though the content discusses technical debt as a consequence of choices, it lacks explicit focus on the core values, system-level convictions, or ethos beneath Agile/DevOps. It mainly advocates for best practices, yielding moderate relevance but not deep alignment with the Ethos category.",
    "level": "Ignored"
  },
  "Windows": {
    "resourceId": "81ZWio23ss7",
    "category": "Windows",
    "calculated_at": "2025-05-16T14:35:46",
    "ai_confidence": 4.8,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.3,
    "ai_intent": 1.2,
    "ai_audience": 0.5,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content discusses technical debt broadly, focusing on general software engineering practices like automation, testing, refactoring, and development pipelines. There is no direct or indirect mention of Windows or any indication that the guidance is Windows-specific. The themes and recommendations are universally applicable across platforms and do not address Windows installation, configuration, troubleshooting, or related concepts. Thus, relevance to the Windows category is extremely low, as none of the content is tailored to or exclusively appropriate for Windows systems or users.",
    "reasoning_summary": "This article addresses technical debt in general software development, with no focus on Windows or its management. The content’s advice applies broadly and does not align with the category’s purpose, resulting in very low category confidence.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "81ZWio23ss7",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T14:35:43",
    "ai_confidence": 26.665,
    "ai_mentions": 0.6,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.1,
    "ai_audience": 8.0,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content focuses on technical debt, emphasizing practices like automation, testing, and refactoring. While decisions around technical debt can relate to culture, this piece never directly addresses organisational culture, leadership, or transformation. The discussion is largely on technical practices, not on how culture shapes or is shaped by them. Thus, alignment and depth are low, while audience match and topical relevance are decent.",
    "reasoning_summary": "The content discusses technical debt in software teams, emphasizing technical practices rather than organisational culture. While some cultural themes could be inferred, the piece doesn't directly address or explore culture, resulting in low confidence for this classification.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "81ZWio23ss7",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T14:35:47",
    "ai_confidence": 45.07,
    "ai_mentions": 2.7,
    "ai_alignment": 5.3,
    "ai_depth": 4.8,
    "ai_intent": 5.2,
    "ai_audience": 6.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content discusses technical debt as an impediment to innovation, notably with phrases like 'teams spend more time firefighting than innovating.' However, innovation is not the primary focus; the main discussion is on reducing technical debt via automation and testing. There is minimal direct mention of innovation or detailed exploration of mechanisms or metrics associated with 'Ability to Innovate' as defined by Evidence-Based Management. The alignment and depth scores reflect partial conceptual overlap, and the audience fits practitioners concerned with delivery effectiveness, which is adjacent but not fully aligned with innovation leadership. Signal is moderately high since the message is concise and on-topic regarding delivery improvement.",
    "reasoning_summary": "This content primarily addresses technical debt and its impact on delivery teams, with only brief mention of innovation. While there is some conceptual overlap, the depth and direct fit with 'Ability to Innovate' are limited, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Practice": {
    "resourceId": "81ZWio23ss7",
    "category": "Practice",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 81.3,
    "ai_mentions": 6.7,
    "ai_alignment": 8.4,
    "ai_depth": 8.2,
    "ai_intent": 8.8,
    "ai_audience": 8.0,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "The content moves beyond defining technical debt, highlighting actionable practices—automation, early testing, trunk-based development, and improved pipelines—as methods to address the problem. These directly align with the Practice category, focusing on repeatable actions that improve team outcomes. While some practices mentioned aren't called by name (e.g., continuous deployment), their substance is clear. The intent is prescriptive and aimed at practitioner teams. Minor points lost in mentions (implicit references over explicit Practice terms) and signal (partly descriptive vs. wholly instructional), but overall, the content is a strong fit.",
    "reasoning_summary": "This content gives practical advice for reducing technical debt by advocating for automation, early testing, and development workflow improvements. It clearly aligns with 'Practice' by emphasizing repeatable techniques that enhance team effectiveness.",
    "level": "Primary"
  },
  "Increment": {
    "resourceId": "81ZWio23ss7",
    "category": "Increment",
    "calculated_at": "2025-05-16T14:35:47",
    "ai_confidence": 19.736,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.6,
    "ai_intent": 1.9,
    "ai_audience": 6.2,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses exclusively on technical debt, highlighting its negative effects and solutions (automation, testing, pipeline improvement). It does not reference increments, the delivery of usable output, or Scrum artifacts. Although reducing technical debt can enable better increments, there is no direct or significant conceptual overlap with 'Increment' as defined. The closest connection is that fixing technical debt improves delivery, but the content remains narrowly scoped and does not serve the primary audience or intent of the Increment category.",
    "reasoning_summary": "This content concentrates on technical debt and process improvements. It doesn't discuss or relate closely to Increments as defined in Agile or Scrum, resulting in a low confidence that it fits the 'Increment' category.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "81ZWio23ss7",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T14:35:44",
    "ai_confidence": 23.9,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.4,
    "ai_audience": 7.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on technical debt within software engineering, emphasizing early automation and testing to reduce long-term costs. It does not mention Lean Startup concepts such as MVP, Build-Measure-Learn, or validated learning. While efficient processes align tangentially with lean ideals, the discussion stays technical, targeting engineering teams rather than entrepreneurs applying Lean Startup principles. No direct or in-depth Lean Startup alignment is present.",
    "reasoning_summary": "This content is about technical debt and software engineering best practices, not Lean Startup. It lacks explicit Lean Startup concepts, focusing instead on automation and process improvement, hence fits poorly in this category.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "81ZWio23ss7",
    "category": "Throughput",
    "calculated_at": "2025-05-16T14:35:47",
    "ai_confidence": 22.14,
    "ai_mentions": 1.8,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 3.2,
    "ai_audience": 6.4,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on technical debt and its impact on delivery efficiency, mentioning issues like slow feedback and bottlenecks. However, it never discusses throughput as a metric, does not analyze or interpret throughput trends, and focuses more on remediation strategies (automation, testing) than on performance measurement or analysis. Alignment and direct mentions are low; while it is generally relevant to delivery health, the content lacks substantial, direct engagement with throughput as defined by the category.",
    "reasoning_summary": "This piece discusses technical debt’s impact on delivery but never references throughput as a metric or analysis tool. While its audience overlaps with those interested in delivery health, the discussion stays focused on automation and process improvement, not throughput measurement.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T14:35:45",
    "ai_confidence": 17.07,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.9,
    "ai_intent": 2.7,
    "ai_audience": 4.1,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on technical debt, automation, and development practices but does not directly discuss asynchronous development principles, remote teamwork, or distributed collaboration. It addresses software engineering challenges, relevant to developers, but does not mention time zone management, asynchronous workflows, or tools enabling async work. The main topics are not conceptually or operationally aligned with the definition of 'Asynchronous Development.'",
    "reasoning_summary": "This content is about technical debt and ways to address it, such as automation and testing, but does not discuss asynchronous development or practices directly. Its relevance to the category is minimal, as it neither addresses nor exemplifies asynchronous collaboration.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "81ZWio23ss7",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T14:35:48",
    "ai_confidence": 63.65,
    "ai_mentions": 2.4,
    "ai_alignment": 7.9,
    "ai_depth": 6.7,
    "ai_intent": 6.6,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content centers on technical debt, emphasizing automation, early testing, and removing friction from pipelines—all practices that enable more frequent releases. However, it does not directly mention 'Frequent Releases' or explicitly discuss release cadence, continuous delivery, or deployment. The alignment is good because the recommendations (automation, trunk-based development, pipeline improvement) are tactics that support frequent release practices, but the main focus is technical debt reduction rather than release frequency itself. The audience is technical and fits practitioners who would benefit from frequent release practices. Signal-to-noise is high, as all points are relevant, but some are more about general quality improvement than release cadence. The depth is moderate; it suggests actions but doesn't provide in-depth discussion or metrics for release frequency. No penalties are applied, as content is up-to-date and constructive.",
    "reasoning_summary": "While the main focus is technical debt, the advice aligns with core principles of Frequent Releases: automation, early testing, and streamlined pipelines. These enable frequent delivery, but the topic isn’t directly about release cadence, lowering the confidence score despite strong practical overlap.",
    "level": "Secondary"
  },
  "Philosophy": {
    "resourceId": "81ZWio23ss7",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T14:35:45",
    "ai_confidence": 16.43,
    "ai_mentions": 1.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 2.1,
    "ai_audience": 4.4,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content discusses technical debt mainly in practical terms, focusing on the consequences (slower feedback, fragility, manual processes) and specific solutions (automation, testing, trunk-based development). There is just a brief conceptual nod where technical debt is described as a 'choice', suggesting some philosophical underpinning, but this is not deeply explored. Otherwise, the piece is practice-oriented, recommending 'how to fix' rather than interrogating the foundational 'why'. It falls short on both direct mention and depth regarding the philosophical frameworks (Agile, Lean, DevOps philosophies), not exploring the theory, cultural impacts, or foundational beliefs. The intent and audience partially overlap, as the topic would interest those discussing philosophy of software engineering, but the execution is tactical. No penalties applied since there's no contradiction or outdatedness.",
    "reasoning_summary": "This content is tactical, describing practical issues and fixes around technical debt with minimal philosophical exploration. Its primary value is in actionable advice, not foundational theory. Only faint traces of deeper philosophy are present.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "81ZWio23ss7",
    "category": "Tool",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 27.85,
    "ai_mentions": 1.2,
    "ai_alignment": 3.1,
    "ai_depth": 2.9,
    "ai_intent": 3.6,
    "ai_audience": 4.0,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content discusses technical debt, automation, testing, and development practices without explicitly naming or deeply analyzing tools. While concepts such as automation and testing overlap with tool usage, there is no direct discussion of specific tools, their integration, features, or best practices for tool implementation. The primary audience appears to be practitioners interested in process improvement, but the focus is broad and method-centric rather than tool-centric, resulting in low confidence for the Tool category.",
    "reasoning_summary": "The content focuses on reducing technical debt through automation and testing, but doesn’t discuss or analyze specific tools or tool groups directly. Its emphasis is on practices and choices, making it a poor fit for the 'Tool' category.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "resourceId": "81ZWio23ss7",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T14:35:46",
    "ai_confidence": 76.75,
    "ai_mentions": 3.9,
    "ai_alignment": 8.45,
    "ai_depth": 7.85,
    "ai_intent": 7.3,
    "ai_audience": 8.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content offers a focused discussion on technical debt—an important concern in technical leadership. It explores the broader impacts of technical debt (beyond code), highlights leadership choices, and recommends actionable tactics (automation, testing, trunk-based development). While it does not explicitly mention 'technical leadership,' its concepts and framing target leaders guiding teams to address systemic challenges. Audience is aligned (technical practitioners/leaders), and the discussion is direct and practical. Slightly less on depth and direct mention, as the category is not named and the discussion doesn’t cover all facets of leadership, but signal and alignment are high.",
    "reasoning_summary": "This content strongly aligns with Technical Leadership by emphasizing responsibility for managing technical debt across team practices, suggesting practical actions, and speaking to leaders' influence on engineering quality, though it doesn't name the role explicitly.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "resourceId": "81ZWio23ss7",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 37.15,
    "ai_mentions": 0.5,
    "ai_alignment": 4.2,
    "ai_depth": 3.9,
    "ai_intent": 4.0,
    "ai_audience": 7.6,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on identifying and reducing technical debt through automation, testing, and improved development practices, but it does not directly discuss growth mindset, knowledge sharing, or feedback loops as outlined in the definition for Continuous Learning. While it mentions improvement and adaptability, its primary topic is technical debt management, not fostering a culture of continuous team learning. There are minimal direct references or conceptual overlap with Continuous Learning principles, resulting in lower scores for direct mentions, alignment, depth, and intent. The content is relevant for technical audiences but most of its signal is centered around process improvement rather than learning or growth.",
    "reasoning_summary": "While the article discusses improving technical practices and team adaptability, it doesn't directly address continuous learning principles like knowledge sharing or growth mindsets. Its focus is technical debt, not fostering a learning culture, so it's only loosely aligned with the category.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T14:35:47",
    "ai_confidence": 26.37,
    "ai_mentions": 0.6,
    "ai_alignment": 3.8,
    "ai_depth": 2.9,
    "ai_intent": 2.4,
    "ai_audience": 5.0,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content focuses on technical debt, discussing code quality issues, automation, and development processes. While these are important for agile teams and can be components in an Agile Transformation, the piece does not mention Agile practices, transformation strategies, or frameworks explicitly. The alignment is partial, as reducing technical debt supports agility, but the content is not oriented to organizational change, cultural shifts, or agile leadership. Points are awarded for partial audience fit (technical practitioners might also be target audiences for agile transformation), but the main themes are not deeply aligned, signaled by absence of category-specific language and frameworks. There is no penalty for out-of-date or antagonistic tone.",
    "reasoning_summary": "While reducing technical debt is valuable to agile organizations, this content doesn’t discuss Agile Transformation methods, strategy, or culture. It focuses narrowly on technical debt, lacking references to agile principles, change management, or transformation frameworks.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Management",
    "calculated_at": "2025-05-16T14:35:50",
    "ai_confidence": 38.35,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.4,
    "ai_intent": 4.2,
    "ai_audience": 5.3,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content centers on technical debt, describing its impact and advocating for early resolution via automation and testing. While technical debt is a concern for product managers, the discussion focuses mostly on engineering practices and team choices, with minimal explicit tie-in to product strategy or product management frameworks. There's no direct mention of product management or its methodologies. The alignment is partial—product managers may benefit, but it is not squarely aimed at them or the strategic aspects of product management. Audience and signal are moderate, but not strongly category-specific. No outdated information or contradictory tones are present.",
    "reasoning_summary": "This content explores technical debt and mitigation techniques, relevant to product teams but primarily from an engineering perspective. It doesn't directly address product management principles, audience, or strategy, so the confidence for classifying it under Product Management is moderate at best.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "resourceId": "81ZWio23ss7",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T14:35:47",
    "ai_confidence": 85.1,
    "ai_mentions": 6.4,
    "ai_alignment": 9.2,
    "ai_depth": 8.8,
    "ai_intent": 9.0,
    "ai_audience": 8.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "While the content does not explicitly mention 'Operational Practices' by name, it strongly aligns conceptually—focusing on technical debt as a barrier to operational efficiency, and prescribing practical solutions (automation, testing, trunk-based development, pipeline friction reduction) central to Agile, DevOps, and Lean practices. The discussion is fairly deep within its brief scope, targeting practitioners willing to improve delivery through operational means. Some signal loss is present due to the motivational framing, but the majority is on-topic and actionable.",
    "reasoning_summary": "The content thoughtfully connects technical debt to process inefficiencies and offers concrete, actionable solutions rooted in Agile and DevOps practices. It doesn’t explicitly mention 'Operational Practices,' but its practical advice and focus on operational improvement make it a strong fit.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "resourceId": "81ZWio23ss7",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T14:35:42",
    "ai_confidence": 19.77,
    "ai_mentions": 0.93,
    "ai_alignment": 2.15,
    "ai_depth": 2.48,
    "ai_intent": 2.37,
    "ai_audience": 6.24,
    "ai_signal": 8.84,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on technical debt, automation, and process improvement without referencing complexity science or its frameworks (e.g., Cynefin, emergence, non-linear dynamics). There is no direct or indirect mention of Complexity Thinking principles, and the depth of discussion revolves around standard DevOps best practices. While relevant to IT teams—a partial audience match—the content does not address complexity theory, emergent behaviors, or self-organisation, resulting in low alignment, depth, and intent scores.",
    "reasoning_summary": "This content mainly covers technical debt and process automation, lacking reference to complexity science or its core frameworks. It doesn’t explore non-linear dynamics or emergent behaviours, so it only loosely aligns with Complexity Thinking.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "81ZWio23ss7",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T14:35:46",
    "ai_confidence": 19.59,
    "ai_mentions": 0.1,
    "ai_alignment": 2.4,
    "ai_depth": 1.9,
    "ai_intent": 3.5,
    "ai_audience": 4.6,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content does not mention Azure DevOps directly or refer to its tools or practices. It focuses on the broad concept of technical debt and general guidance for modern software teams (automation, testing, trunk-based development), which are relevant to DevOps generally but not specific to Azure DevOps. The themes are loosely aligned with DevOps principles, but there is no direct or implied discussion about Azure DevOps services, features, or implementation approaches. Audience fit is moderate as it's written for technical teams, but the signal is diluted by the broad treatment instead of any specific Azure DevOps context.",
    "reasoning_summary": "Although discussing developer practices common in DevOps, the content does not reference Azure DevOps or its features. Its broad focus on technical debt makes its fit in the Azure DevOps category weak, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "81ZWio23ss7",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T14:35:46",
    "ai_confidence": 47.02,
    "ai_mentions": 1.3,
    "ai_alignment": 4.85,
    "ai_depth": 4.45,
    "ai_intent": 4.65,
    "ai_audience": 7.25,
    "ai_signal": 7.87,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content frames technical debt as a barrier to delivering value efficiently, referencing slow feedback and manual processes that impede flow. It also emphasizes automation and testing to remove delivery friction, tangentially aligning with Flow Efficiency. However, it never explicitly mentions flow efficiency or its key metrics (cycle time, lead time) and stays focused on technical debt mitigation, not a thorough treatment of flow efficiency principles or tools. The target audience (practitioners, technical leaders) overlaps with those interested in flow but the discussion depth and alignment to the category are moderate rather than strong.",
    "reasoning_summary": "While the content highlights technical debt as a drag on progress and suggests practices that can improve throughput, it doesn't explicitly address flow efficiency principles or metrics. The connection is indirect—mainly through removing delays—so alignment is moderate rather than strong.",
    "level": "Tertiary"
  },
  "Strategic Goals": {
    "resourceId": "81ZWio23ss7",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T14:35:46",
    "ai_confidence": 34.8,
    "ai_mentions": 0.3,
    "ai_alignment": 3.6,
    "ai_depth": 3.4,
    "ai_intent": 4.2,
    "ai_audience": 5.7,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on technical debt, describing its forms and recommending practices like automation and testing to mitigate it. While the long-term benefits of addressing debt (reduced costs, less firefighting, more innovation) are implied, there is no direct mention or clear articulation of strategic goals, their frameworks, or alignment with business agility principles. The discussion is primarily tactical and operational, focusing on process improvement rather than on long-term, high-level objectives. The depth is limited to outlining consequences and remedies for technical debt, without connecting to organisational strategy or agility. The audience seems to be practitioners or teams dealing with technical implementation issues, not strategy leaders. Overall, while some indirect alignment exists with strategic concerns (cost, innovation), the focus is not on strategic goals.",
    "reasoning_summary": "This content discusses ways to reduce technical debt for better efficiency and innovation, mainly targeting practitioners. While it hints at long-term benefits, it doesn't explicitly address strategic goals or their role in business agility, so the fit with the 'Strategic Goals' category is limited.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "81ZWio23ss7",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T14:35:46",
    "ai_confidence": 1.8,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.3,
    "ai_intent": 3.0,
    "ai_audience": 3.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses entirely on technical debt, automation, and development practices. There is no explicit or implicit mention of Liberating Structures or any facilitation technique. While the audience (development teams) partially overlaps, the intent, concepts, and structure do not align with the Liberating Structures category. No penalties were needed, since the tone and content are neither outdated nor critical. All scores reflect minimal overlap.",
    "reasoning_summary": "This content discusses technical debt reduction and engineering practices, without referencing Liberating Structures or facilitation methods, so it is not a fit for this category.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "81ZWio23ss7",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T14:35:46",
    "ai_confidence": 68.205,
    "ai_mentions": 1.9,
    "ai_alignment": 8.2,
    "ai_depth": 6.8,
    "ai_intent": 7.7,
    "ai_audience": 8.5,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content frames technical debt as a barrier to effective and continuous delivery, highlighting issues like slow feedback and manual processes that directly inhibit delivering value in Agile or DevOps workflows. While it doesn’t directly mention 'value delivery', it argues for automation, early testing, and process improvement—all pivotal for maximizing value to customers. However, it stops short of exploring broader value management strategies or measurement, which lowers its depth score. The intent is clearly prescriptive for teams engaged in delivery practices, and the advice is highly relevant for practitioners striving to enhance value through better engineering. The signal is strong, with very little off-topic content, but the direct linkage to the concept of 'value delivery' is more implicit than explicit.",
    "reasoning_summary": "This content discusses technical debt as a major impediment to effective delivery, aligning with value delivery principles by advocating automation and better processes. While it doesn't name 'value delivery' directly, its relevant recommendations justify a strong—but not top-tier—confidence score.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "resourceId": "81ZWio23ss7",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T14:35:48",
    "ai_confidence": 39.85,
    "ai_mentions": 0.4,
    "ai_alignment": 3.7,
    "ai_depth": 4.2,
    "ai_intent": 3.9,
    "ai_audience": 4.2,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content focuses on technical debt, emphasizing its impact on team productivity and delivery. While it briefly touches on elements that relate to organisational processes, feedback loops, and systems (e.g., bottlenecks caused by manual processes and slow feedback), it doesn’t explicitly apply systems thinking, nor does it analyze organisational dynamics beyond the engineering team context. There are no direct mentions of 'Organisational Physics,' systems theory, or a holistic discussion on organisational behavior. Most of the discussion and recommendations are at a practical software engineering level, not an organisational or systems-analytic one. Audience is mostly technical teams rather than leaders striving for systemic change. Signal is reasonably high, but the focus is tangential.",
    "reasoning_summary": "This content highlights technical debt's impact on software teams but doesn't engage with Organisational Physics' systems thinking or organisational dynamics. Its focus is technical and process-oriented rather than systemic or holistic, so confidence in this category fit is low.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "81ZWio23ss7",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T14:35:48",
    "ai_confidence": 6.75,
    "ai_mentions": 0.3,
    "ai_alignment": 0.85,
    "ai_depth": 1.0,
    "ai_intent": 1.2,
    "ai_audience": 2.0,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is centered on technical debt—its causes, effects, and ways to remediate it via automation and testing. Psychological Safety is not directly referenced, nor are related concepts like open communication, safe risk-taking, or team culture. The ideas focus on process and code quality, not on the psychological or interpersonal dynamics required for safety. The intent is to inform teams about good engineering practices, with an audience likely being practitioners, but not explicitly those interested in fostering psychological safety.",
    "reasoning_summary": "This piece focuses exclusively on managing technical debt, without touching on psychological safety or associated team culture topics. Its relevance to psychological safety is extremely limited, making it an extremely poor fit for the category.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "81ZWio23ss7",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 28.05,
    "ai_mentions": 0.4,
    "ai_alignment": 2.9,
    "ai_depth": 2.8,
    "ai_intent": 3.0,
    "ai_audience": 6.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on technical debt, software development practices, and the importance of automation and early testing. While it mentions innovation and decision-making, it does not directly discuss entrepreneurial principles such as risk-taking, value creation, or strategies for building or sustaining ventures. There is no mention of entrepreneurship or entrepreneurs, nor discussion of founding, scaling, or operating businesses. The audience appears to be technical leads or developers rather than entrepreneurs. Therefore, the content only loosely aligns with the Entrepreneurship category.",
    "reasoning_summary": "This content addresses technical debt and process improvements in software teams, lacking direct discussion of entrepreneurial principles. It targets a technical audience rather than entrepreneurs, providing minimal relevance to the Entrepreneurship category.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "81ZWio23ss7",
    "category": "Framework",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 22.73,
    "ai_mentions": 1.1,
    "ai_alignment": 2.4,
    "ai_depth": 2.2,
    "ai_intent": 3.0,
    "ai_audience": 5.8,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content discusses technical debt and touches on automation, testing, and trunk-based development. However, it does not mention frameworks or structured methodologies, nor does it explore their principles or applications. The main focus is on engineering practices to reduce technical debt, not on implementing, adapting, or comparing frameworks. There is minimal alignment with the Framework category, as no frameworks or guideline structures are discussed.",
    "reasoning_summary": "The content focuses on the nature of technical debt and practical solutions, not frameworks. It lacks references to structured methodologies, adaptation, or comparison of frameworks, making its alignment with the Framework category weak.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "81ZWio23ss7",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 48.35,
    "ai_mentions": 1.2,
    "ai_alignment": 5.7,
    "ai_depth": 4.6,
    "ai_intent": 6.9,
    "ai_audience": 7.1,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content focuses on technical debt, touching on themes like automation, testing, and process improvement. While these concepts can relate to Lean (waste reduction, continuous improvement), Lean Principles aren’t named, nor are Lean tools or philosophies explicitly discussed. The alignment is moderate as there’s overlap with Lean intent (removing friction, improving flow), but depth and conceptual focus remain more general on software delivery best practices. The audience—engineering practitioners—would benefit from Lean but the content isn’t directly targeting Lean-specific learning. No penalties are needed since the tone is supportive and the practices discussed are current.",
    "reasoning_summary": "The content discusses process improvement and reducing bottlenecks—ideas central to Lean—but it doesn't directly mention or deeply discuss Lean Principles or tools. While there’s reasonable overlap in purpose, the confidence is moderate due to limited explicit reference.",
    "level": "Tertiary"
  },
  "Scrum": {
    "resourceId": "81ZWio23ss7",
    "category": "Scrum",
    "calculated_at": "2025-05-16T14:35:51",
    "ai_confidence": 18.13,
    "ai_mentions": 0.2,
    "ai_alignment": 2.4,
    "ai_depth": 2.1,
    "ai_intent": 2.5,
    "ai_audience": 4.3,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on technical debt, covering issues like slow feedback, fragile systems, and manual processes. While these concepts are relevant to software teams, there is no mention of Scrum, its roles, events, or artifacts. The advice aligns more with general engineering and DevOps best practices (automation, testing, trunk-based development) than Scrum principles. The audience (technical practitioners) may overlap somewhat with Scrum teams, but the content neither references nor applies Scrum-specific frameworks, practices, or terminology. Discussion is generalist and lacks depth concerning Scrum methods.",
    "reasoning_summary": "This content discusses technical debt in software teams but doesn't mention or focus on Scrum, its practices, or frameworks. Any overlap is incidental, not intentional, resulting in low confidence for classification under Scrum.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "81ZWio23ss7",
    "category": "Principle",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 67.05,
    "ai_mentions": 2.7,
    "ai_alignment": 8.2,
    "ai_depth": 7.7,
    "ai_intent": 7.8,
    "ai_audience": 8.8,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content directly discusses actionable responses to technical debt, such as automation, testing, and process improvement, which are aligned with principles like Continuous Improvement and Value Delivery from Agile/DevOps. However, it never uses the term 'principle' or explicitly names foundational guiding rules, focusing instead on recommended team behaviors and practices. The depth and alignment are strong since actionable guidance ties to principles, but explicit direct mention is missing. The target audience is practitioners or teams, and the content is focused with only minor digressions. No penalties applied.",
    "reasoning_summary": "While the content doesn't directly name principles, it robustly discusses practices rooted in key Agile and DevOps principles—continuous improvement, automation, and reducing friction. It’s highly relevant for teams aiming to improve delivery, offering concrete, principle-aligned actions.",
    "level": "Secondary"
  },
  "Product Owner": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 12.05,
    "ai_mentions": 0.15,
    "ai_alignment": 1.7,
    "ai_depth": 1.6,
    "ai_intent": 1.4,
    "ai_audience": 3.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on the broader topic of technical debt, its impact, and strategies for managing it, such as automation and testing. Nowhere does it mention the Product Owner role, nor does it discuss accountability, prioritisation, or stakeholder management. Conceptual linkage to the Product Owner could be implied around decision-making on tech debt, but this is not addressed explicitly. Overall, the alignment and depth are minimal, and the main audience seems to be engineers or developers.",
    "reasoning_summary": "This content is about technical debt and its remedies, not Product Owner accountability. It lacks direct references and does not address prioritisation or strategic responsibilities, making it a poor fit for the Product Owner category.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "81ZWio23ss7",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 8.4,
    "ai_mentions": 0.1,
    "ai_alignment": 0.9,
    "ai_depth": 1.1,
    "ai_intent": 1.3,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on technical debt—defining it, its consequences, and mitigation strategies like automation and testing. It makes no mention of MVP, rapid iteration, product validation, or Lean/Agile philosophies as detailed in the category definition. There is extremely weak conceptual overlap (automation, testing) but these are general engineering best practices rather than MVP-specific advice. The audience is technical teams, slightly aligning with MVP practitioners, but otherwise the content is not about MVP methodologies or goals.",
    "reasoning_summary": "This content focuses on technical debt, not MVP. It discusses automation, testing, and code quality, but never addresses concepts unique to Minimum Viable Products or market validation. Therefore, confidence in category fit is extremely low.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "81ZWio23ss7",
    "category": "Observability",
    "calculated_at": "2025-05-16T14:35:48",
    "ai_confidence": 19.86,
    "ai_mentions": 0.45,
    "ai_alignment": 2.7,
    "ai_depth": 2.62,
    "ai_intent": 2.97,
    "ai_audience": 5.15,
    "ai_signal": 2.26,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on technical debt, emphasizing automation, testing, pipeline friction, and team choices. It does not mention observability directly and is mostly aligned with general engineering best practices rather than the discipline of measuring and understanding systems via data (metrics, logs, traces). No explicit or implicit discussion of observability principles, tools, or their impact on transparency, insights, or business outcomes is present. Audience overlap exists (technical teams), but focus on observability is minimal.",
    "reasoning_summary": "While highly relevant for technical teams, the content centers on technical debt and process improvement, not observability. No direct mention or substantial connection is made to observability concepts or practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "81ZWio23ss7",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 36.6,
    "ai_mentions": 1.3,
    "ai_alignment": 4.2,
    "ai_depth": 3.8,
    "ai_intent": 3.7,
    "ai_audience": 7.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on technical debt as the result of specific engineering choices, drawing a parallel to financial debt. While it briefly frames technical debt accumulation as a 'choice,' it does not discuss decision-making processes under uncertainty, heuristics, probability, or frameworks of decision theory. There is no direct use of decision theory terminology or in-depth alignment with its core principles. The primary intent is to motivate technical action (automation, testing) rather than analyze decision-making strategies or cognitive models, hence the low-to-moderate scores. No penalties were necessary as content is current and non-satirical.",
    "reasoning_summary": "This piece highlights that technical debt results from choices, but it doesn’t explore decision theory concepts or frameworks. While there’s a slight thematic overlap regarding decisions, the core discussion, purpose, and depth do not fit the Decision Theory category.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "81ZWio23ss7",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 80.85,
    "ai_mentions": 4.2,
    "ai_alignment": 8.6,
    "ai_depth": 8.2,
    "ai_intent": 7.7,
    "ai_audience": 7.4,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "The content strongly aligns with Technical Excellence by linking technical debt to key practices such as automation, testing, and CI/CD. It highlights the costs of avoiding technical excellence and encourages proactive adoption of modern engineering principles. While it doesn't explicitly use the term 'Technical Excellence,' it clearly discusses related concepts and their impact on software quality and delivery. The depth is substantial, as it moves beyond surface mentions to discuss root causes and actionable remedies. The primary audience appears to be practitioners or teams facing real-world engineering challenges, aligning well. Minor deductions for lack of direct, explicit category mention and a slightly generalized tone prevent a perfect score.",
    "reasoning_summary": "The content effectively addresses Technical Excellence by discussing how automation, testing, and proactive engineering mitigate technical debt. While the term isn't directly named, the focus and actionable advice are highly relevant, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Software Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Software Development",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 91.31,
    "ai_mentions": 7.8,
    "ai_alignment": 9.5,
    "ai_depth": 9.1,
    "ai_intent": 9.2,
    "ai_audience": 8.7,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content explicitly discusses technical debt—an established concept in software development—with details beyond superficial mention (e.g., slow feedback, brittle systems, manual processes). It provides actionable advice: automation, early testing, trunk-based development, and pipeline optimization, which are all best practices rooted in SDLC methodologies and code quality assurance. The main intent aligns with improving software processes, and the audience is software practitioners. No dimensions warranted penalties, as the advice is current, constructive, and methodologically sound.",
    "reasoning_summary": "This content directly addresses technical debt in software development, emphasizing best practices like automation and testing. Its actionable focus and relevance to practitioners align strongly with the category, making it an excellent fit with little off-topic discussion.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "81ZWio23ss7",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 26.2,
    "ai_mentions": 0.8,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 2.3,
    "ai_audience": 8.2,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content focuses on technical debt, automation, and testing, but does not directly address or discuss the diagnosis or resolution of specific technical issues. Troubleshooting and its techniques are not explicitly mentioned, nor are problem-solving methods explored in depth. The intent is to inform about managing technical debt and its impact rather than to guide in troubleshooting processes. Audience alignment is somewhat strong since the content is relevant to technical practitioners, but the direct fit with the 'Troubleshooting' category is weak.",
    "reasoning_summary": "This content discusses technical debt and advocates for solutions like automation and testing, but it does not focus on identifying or resolving specific technical issues. It aligns more with technical health and process improvement than core troubleshooting.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "81ZWio23ss7",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 18.9,
    "ai_mentions": 0.4,
    "ai_alignment": 2.7,
    "ai_depth": 1.6,
    "ai_intent": 2.1,
    "ai_audience": 6.2,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content strictly discusses technical debt: its costs, origins, and methods for reducing it (automation, testing, improving pipelines). It does not directly mention or imply hypothesis-driven approaches, experimentation, or validation of assumptions within Agile. While targeting technical practitioners (audience aligns), it lacks conceptual or thematic overlap with Experimentation, as defined. There is no reference to experiments, hypothesis testing, or iterative idea validation; the focus is exclusively on process improvement and technical best practices.",
    "reasoning_summary": "This content focuses on the nature and impact of technical debt, urging process improvements but not discussing experimentation or hypothesis-driven methods in Agile. Its intent and depth do not align with the Experimentation category, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 37.55,
    "ai_mentions": 0.4,
    "ai_alignment": 4.3,
    "ai_depth": 2.9,
    "ai_intent": 4.6,
    "ai_audience": 6.1,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on technical debt by emphasizing automation, testing, and reduced friction. However, it does not directly reference evidence-based management or its principles, nor does it discuss value metrics, empirical decision-making, or data-driven outcome management. The main audience (engineering/technical teams) aligns partially but lacks direct focus on EBM frameworks. Content is largely issue/solution oriented, without showing data or management metrics. No outdated practices or negative tone detected; thus, no penalties.",
    "reasoning_summary": "This piece spotlights technical debt, automation, and delivery improvements, aligning partially with agile value delivery, but it lacks explicit mentions or in-depth discussion of evidence-based management or data-driven strategies—so confidence is moderate and not high.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "81ZWio23ss7",
    "category": "Estimation",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 9.71,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.9,
    "ai_intent": 1.0,
    "ai_audience": 2.1,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses technical debt, automation, and testing, but never addresses estimation, forecasting, or Agile/Scrum estimation techniques. There are no direct mentions of estimation or related practices, nor is there discussion of empirical data, planning, or collaborative sizing. Audience and signal are slightly higher due to targeting Agile teams, but overall alignment is very low.",
    "reasoning_summary": "This content focuses on technical debt and engineering practices, not estimation. It does not reference estimation tools, techniques, or outcomes, making it a very poor fit for the Estimation category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "81ZWio23ss7",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 5.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.4,
    "ai_depth": 0.6,
    "ai_intent": 0.7,
    "ai_audience": 2.1,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content is solely focused on technical debt, discussing its broader forms and impacts on development teams. There are no explicit or implicit references to the Daily Scrum or Scrum events. Alignment, depth, and mentions scores are low as the content neither mentions nor connects to the Daily Scrum's purpose, structure, or practice. The audience is development teams, partially overlapping with Daily Scrum practitioners, but the topic is off-category.",
    "reasoning_summary": "This content is about technical debt management strategies and doesn't reference or relate to the Daily Scrum or its role in Scrum. The low scores reflect the lack of alignment with the category.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 14.32,
    "ai_mentions": 0.45,
    "ai_alignment": 1.2,
    "ai_depth": 1.25,
    "ai_intent": 2.1,
    "ai_audience": 3.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses exclusively on the concept of technical debt at the team and engineering practice level—emphasizing automation, refactoring, and testing. There are no direct mentions or implied links to portfolio management themes such as aligning strategies, value stream optimization, investment prioritization, or stakeholder alignment. The intended audience is teams dealing directly with code quality and delivery, not portfolio managers or executives. As such, this content is only tangentially relevant to Portfolio Management at best.",
    "reasoning_summary": "This content centers on technical debt within development teams—not on the strategic or portfolio level. It lacks direct relevance, depth, or audience focus related to Portfolio Management, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "81ZWio23ss7",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T14:35:51",
    "ai_confidence": 90.92,
    "ai_mentions": 7.2,
    "ai_alignment": 9.5,
    "ai_depth": 9.1,
    "ai_intent": 9.0,
    "ai_audience": 8.9,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly references core Engineering Practices such as automation, refactoring, testing, and deployment pipelines—all essential Agile techniques. Technical debt is framed beyond 'messy code' to include manual processes and lack of automation, aligning with the category description. The discussion is in-depth, urging technical audiences (developers, Agile teams) to adopt automation and test-first approaches. The tone is prescriptive and purpose-driven, minimizing filler and irrelevant information. No outdated concepts or negative tone present, so no penalties were required.",
    "reasoning_summary": "This piece offers a focused, in-depth discussion of technical debt and its mitigation via Agile engineering practices like automation, testing, and refactoring. Its actionable advice and clear technical orientation make it highly aligned with the Engineering Practices category.",
    "level": "Primary"
  },
  "Lean": {
    "resourceId": "81ZWio23ss7",
    "category": "Lean",
    "calculated_at": "2025-05-16T14:35:51",
    "ai_confidence": 40.2,
    "ai_mentions": 1.1,
    "ai_alignment": 4.4,
    "ai_depth": 3.9,
    "ai_intent": 4.1,
    "ai_audience": 5.0,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "This content discusses technical debt, focusing on automation, testing, and reducing friction in development processes. It overlaps conceptually with Lean's aim to minimize waste and improve flow, but never mentions Lean, its principles, or core methodologies. The depth and intent are only somewhat aligned insofar as technical debt reduction can serve Lean objectives. The content does not target Lean practitioners specifically, nor does it discuss Lean-specific tools or frameworks, resulting in low direct mention and moderate alignment/depth. No outdated or contradictory references were found.",
    "reasoning_summary": "While the article shares some Lean-adjacent ideas about reducing manual work and improving efficiency, it never references Lean principles or tools directly. Its main topic—technical debt—only loosely aligns with Lean, resulting in low confidence for classification.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "81ZWio23ss7",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T14:35:51",
    "ai_confidence": 57.984,
    "ai_mentions": 3.1,
    "ai_alignment": 6.3,
    "ai_depth": 6.8,
    "ai_intent": 5.8,
    "ai_audience": 7.0,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content focuses on technical debt, its impact on delivery, and the need for automation and testing—concepts adjacent to organisational agility. It aligns somewhat with the category by discussing practices (automation, testing, trunk-based development) that support responsiveness. However, it doesn't explicitly mention organisational agility or address broader cultural/structural shifts, leadership, or organisational-wide strategies. The depth is moderate since it explores causes and remedies for technical debt but remains within a software delivery context. The intent is practical and supportive but not wholly focused on organisational agility as defined. The target audience appears to be practitioners and technical leads, which partially overlaps those interested in organisational agility. Content is mostly on-topic with minimal tangents.",
    "reasoning_summary": "While the content emphasizes reducing technical debt through automation and testing—actions that support agility—it doesn't directly discuss organisational agility or strategic frameworks. Its moderate depth and partial alignment result in a medium confidence score.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "81ZWio23ss7",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T14:35:51",
    "ai_confidence": 15.75,
    "ai_mentions": 0.1,
    "ai_alignment": 1.8,
    "ai_depth": 2.25,
    "ai_intent": 2.4,
    "ai_audience": 3.0,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content discusses technical debt, slow feedback, and improvement practices such as automation and testing. However, 'feedback' here refers to internal engineering cycles, not to customer feedback or loops that inform product development from user insights. There are no mentions or explicit alignment with the mechanisms or practices of customer feedback loops. The main focus is on code quality and process efficiency, not on integrating or utilising feedback from customers.",
    "reasoning_summary": "This content focuses on technical debt and internal team feedback cycles, not on customer feedback loops or integrating user input into product development. It lacks explicit references or substantive alignment with the customer feedback loop category.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 28.4,
    "ai_mentions": 0.6,
    "ai_alignment": 2.4,
    "ai_depth": 2.2,
    "ai_intent": 2.0,
    "ai_audience": 8.3,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on technical debt, highlighting issues like slow feedback, automation, and testing. While these are important in Agile environments, the post does not explicitly refer to Agile Product Management or its principles. There are no direct mentions, and little attention is given to product value maximisation, Product Owner responsibilities, backlog prioritisation, or customer feedback loops. The main intent is to raise awareness of technical debt rather than to discuss Agile product strategies. The audience is broadly aligned with technical teams, which overlaps with Agile practitioners. However, the discussion lacks depth and clear conceptual alignment with Agile Product Management.",
    "reasoning_summary": "This content discusses technical debt and improvement practices relevant to engineering teams but lacks direct links to Agile Product Management concepts, strategies, or terminology. It's only tangentially related, so confidence in this category is low.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 28.45,
    "ai_mentions": 1.3,
    "ai_alignment": 3.2,
    "ai_depth": 3.7,
    "ai_intent": 2.8,
    "ai_audience": 6.1,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on technical debt, especially how it accumulates through delaying refactoring, skipping automation, and fragile systems. While these issues relate to software delivery and may impact Agile Planning, the discussion never explicitly covers Agile Planning concepts such as iterative planning, backlogs, sprints, or stakeholder alignment. The audience may overlap with Agile practitioners, but the primary aim is technical practice improvement, not planning methodologies. No penalties were applied, as the content is current and maintains a neutral tone.",
    "reasoning_summary": "This piece highlights technical debt and offers remediation strategies, but it doesn’t directly engage with Agile Planning or its core practices. Its relevance is indirect, with modest conceptual overlap but minimal explicit connection to Agile Planning frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "81ZWio23ss7",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 16.55,
    "ai_mentions": 0.6,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 4.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses entirely on technical debt—discussing code quality, automation, and development practices—but never directly references or applies the principles of evidence-based leadership or management. It lacks explicit mention of data-driven decision-making, metrics, leadership strategies, or empirical methods. While there are slight cross-overs (the idea of making choices and tradeoffs), there is no substantive alignment with evidence-based leadership topics, strategies, or audiences. The only boundary touch is that poor technical practices may indirectly affect leadership decisions, but this link is neither made nor explored.",
    "reasoning_summary": "This content addresses technical debt in software development, focusing on coding and automation rather than data-driven leadership. It doesn’t reference evidence-based practices, metrics, or decision-making, so it only loosely aligns with evidence-based leadership—resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 38.037,
    "ai_mentions": 1.2,
    "ai_alignment": 4.4,
    "ai_depth": 3.8,
    "ai_intent": 4.3,
    "ai_audience": 6.2,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on technical debt, automation, and testing. While these relate to good Agile practices, there's no direct mention or thorough discussion of Agile Values or Principles. The message aligns tangentially with continuous improvement but doesn't address Agile philosophy, the manifesto, principles, or values explicitly. The audience may overlap with Agile practitioners, but the core theme is not the category’s focus.",
    "reasoning_summary": "While the topic of technical debt ties to agility and improvement, the content never addresses Agile Values and Principles directly. It focuses more on code quality and workflow enhancements, with only indirect alignment to core Agile beliefs or intent.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Change Management",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 45.43,
    "ai_mentions": 0.25,
    "ai_alignment": 6.8,
    "ai_depth": 4.6,
    "ai_intent": 5.0,
    "ai_audience": 7.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content discusses technical debt, automation, and quality improvement in software delivery. While it addresses meaningful change in team practices, it does not explicitly mention change management or related strategies. The alignment is moderate: the advice presumes change, but there is minimal focus on stakeholder engagement, leadership, or cultural transformation. The audience matches technical practitioners interested in improvement, but the content is not deep or specialized in change management. No penalties were needed.",
    "reasoning_summary": "While this content focuses on improving technical practices to reduce technical debt, it only indirectly supports change management principles. There's limited exploration of organizational change, so the fit for 'Change Management' is weak to moderate.",
    "level": "Tertiary"
  },
  "Kanban": {
    "resourceId": "81ZWio23ss7",
    "category": "Kanban",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 13.42,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.7,
    "ai_intent": 2.1,
    "ai_audience": 4.2,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical debt, automation, and development practices but never mentions Kanban or its core practices, such as visualization, limiting WIP, or flow management. While some themes (like reducing friction, improving feedback loops) mildly overlap with Kanban’s improvement mindset, there is no substantive or direct alignment. There are no outdated concepts or contrary tones.",
    "reasoning_summary": "This content centers on technical debt and improving engineering practices but has almost no direct or thematic link to Kanban methodology, resulting in a very low fit for the Kanban category.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "81ZWio23ss7",
    "category": "Market Share",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 7.6,
    "ai_mentions": 0.0,
    "ai_alignment": 0.2,
    "ai_depth": 0.2,
    "ai_intent": 0.2,
    "ai_audience": 3.2,
    "ai_signal": 0.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content exclusively discusses technical debt, its impacts, and ways to manage it via engineering practices like automation and testing. There are no direct or indirect references to market share, competitive positioning, or business growth. The themes and intent are internal process improvement, not expanding market presence. Audience is technical (software engineers), not market-facing strategists. Content is focused, but entirely off-topic for Market Share.",
    "reasoning_summary": "The content is focused on internal software development practices for addressing technical debt and doesn't mention or align with market share or competitive strategies. As such, it's not a match for the Market Share category.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 18.617,
    "ai_mentions": 0.5,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 2.7,
    "ai_audience": 5.3,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on technical debt, automation, and testing in general but never mentions Acceptance Test Driven Development (ATDD) explicitly or implicitly. It discusses reducing technical debt through early testing and automation, which are tangential to ATDD but do not address ATDD principles, collaboration, acceptance criteria, or methodology. The alignment, depth, and mentions scores reflect the lack of ATDD-specific content; the content is technical and aimed at practitioners, giving a slightly higher audience score, but most of the material is off-topic regarding ATDD.",
    "reasoning_summary": "This piece addresses technical debt, automation, and testing broadly but doesn’t reference or align with ATDD concepts. There's no mention of acceptance criteria, collaborative testing, or ATDD purpose, so it's not a strong fit for this category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "81ZWio23ss7",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 10.7,
    "ai_mentions": 0.1,
    "ai_alignment": 1.4,
    "ai_depth": 1.2,
    "ai_intent": 1.1,
    "ai_audience": 2.1,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content addresses general best practices for handling technical debt: automation, testing, and efficient processes. It does not mention Open Space Agile, Open Space Technology, or related themes such as psychological safety, co-creation, emergence, or complex adaptive change. There is no discussion of organisational agility or collaborative change methods, nor any connection to the defining ideas of Open Space Agile. Its prose is focused on engineering efficiency and technical practices, speaking to software teams in general but not specifically to Agile transformation or the Open Space context. As such, there is minimal alignment with the category, with only the broadest, tangential overlap (e.g., 'choice,' 'team,' and 'removing friction') remotely referencing core Agile concepts, but never in a manner relevant to Open Space Agile. No penalties apply, as there is no explicit contradiction and the advice is not outdated.",
    "reasoning_summary": "This content discusses technical debt and software engineering practices but does not address Open Space Agile, its principles, or related organisational change themes. There is almost no fit with the category beyond very generic Agile-adjacent language.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "81ZWio23ss7",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T14:35:49",
    "ai_confidence": 18.9,
    "ai_mentions": 0.0,
    "ai_alignment": 2.6,
    "ai_depth": 2.3,
    "ai_intent": 2.5,
    "ai_audience": 5.4,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content is focused on the concept of technical debt, elaborating on its broader meaning beyond code and emphasizing techniques like automation, testing, and process improvements. There are no direct mentions or references to Beta Codex, and the primary themes align with engineering best practices, not with organisational structure, decentralization, or human-centric organisational design. The audience is likely practitioners interested in technical process improvement rather than Beta Codex practitioners. No penalties were applied, as content is neither outdated nor contradictory.",
    "reasoning_summary": "This piece delves into technical debt and process improvements but does not mention or reflect Beta Codex principles or contexts. Its focus remains on software team practices, making it a poor fit for the Beta Codex category.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "81ZWio23ss7",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 36.1,
    "ai_mentions": 1.2,
    "ai_alignment": 4.5,
    "ai_depth": 4.3,
    "ai_intent": 4.7,
    "ai_audience": 6.0,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content primarily discusses technical debt, focusing on issues like slow feedback, brittle systems, and manual processes. While it references automation and fragile deployment processes (which touch deployment methodology), these are supporting points rather than the main discussion. There are no explicit mentions of deployment strategies like canary releases or blue-green deployments, nor is the depth aligned with advanced discussions in the category. The intended audience overlaps with practitioners who would care about deployment, but the signal-to-noise ratio is moderate because the emphasis is more on general technical debt than deployment methodologies. No penalties were required as the tone and timeliness are appropriate.",
    "reasoning_summary": "While the content briefly ties technical debt to deployment process problems and encourages automation, its primary focus is broader technical debt—not deployment strategies. Thus, alignment and depth with the category are limited, resulting in modest confidence.",
    "level": "Ignored"
  },
  "DevOps": {
    "resourceId": "81ZWio23ss7",
    "category": "DevOps",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 81.7,
    "ai_mentions": 1.7,
    "ai_alignment": 9.1,
    "ai_depth": 8.7,
    "ai_intent": 8.9,
    "ai_audience": 8.3,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "Direct reference to 'DevOps' is absent, resulting in a low 'mentions' score. However, the content deeply explores themes integral to DevOps, such as automation, early testing, feedback cycles, and reducing manual processes. The argument aligns closely with DevOps principles, advising teams to adopt practices like trunk-based development and reduce delivery friction. Discussion targets practitioners interested in improving delivery and encourages cultural and technical transformation, which reflects a DevOps mindset. No outdated concepts or negative intent were found, so no penalties were applied.",
    "reasoning_summary": "Although DevOps is not named directly, the content thoroughly champions its core practices: automation, early testing, and reducing process friction. The argument aligns with DevOps culture and is aimed at relevant audiences, justifying a strong confidence in category fit.",
    "level": "Primary"
  },
  "Team Motivation": {
    "resourceId": "81ZWio23ss7",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 23.55,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 2.1,
    "ai_audience": 7.3,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content addresses the challenges of technical debt, focusing on automation, testing, and process improvement. While it references team choices and consequences, it does not explicitly or deeply engage with team motivation strategies, team culture, or agile team dynamics. Its intent is technical remediation rather than psychological or motivational enhancement. The main audience seems to be technical practitioners, which slightly aligns, but the fit is more about workflows than motivation.",
    "reasoning_summary": "This content focuses on technical debt and process improvement, barely touching on team motivation dynamics. Its approach is more technical than motivational, making it a poor fit for the Team Motivation category.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "81ZWio23ss7",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T14:35:53",
    "ai_confidence": 13.15,
    "ai_mentions": 1.7,
    "ai_alignment": 2.8,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 2.6,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses technical debt in software teams but never directly references the Scrum Team, its structure, or accountabilities per the Scrum Guide. The focus is on general engineering practices (automation, testing, managing debt), not Scrum Team definition or principles. While the audience is practitioners, and the advice loosely fits teams, it lacks explicit or conceptual detail about Scrum Teams. No deductions apply as there is no outdated or contrary framing.",
    "reasoning_summary": "This content centers on technical debt and engineering practices, not the Scrum Team accountability or structure. It doesn't align conceptually or explicitly reference Scrum Teams, so classification confidence is very low.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "81ZWio23ss7",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T14:35:52",
    "ai_confidence": 30.45,
    "ai_mentions": 0.2,
    "ai_alignment": 2.75,
    "ai_depth": 2.9,
    "ai_intent": 3.35,
    "ai_audience": 7.25,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses on technical debt, automation, and process improvement. There are no direct or explicit mentions of Systems Thinking or its tools. While it hints at interconnected issues like feedback loops and decision consequences, it lacks a holistic or systemic analysis. There's no exploration of systems mapping, feedback loops, or foundational Systems Thinking principles. The primary intent is advice on technical practices rather than organizational dynamics or systemic analysis, so the fit with 'Systems Thinking' is weak. The audience and signal-to-noise scores are relatively high as the content is focused and relevant for technical practitioners, but does not align conceptually or in depth with the 'Systems Thinking' category.",
    "reasoning_summary": "This content discusses technical debt and related practices but does not directly address Systems Thinking principles, tools, or holistic analysis. It's more about technical execution than systemic organizational improvement, so its fit with the Systems Thinking category is low.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "81ZWio23ss7",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T14:35:55",
    "ai_confidence": 15.63,
    "ai_mentions": 0.4,
    "ai_alignment": 2.7,
    "ai_depth": 2.4,
    "ai_intent": 2.3,
    "ai_audience": 3.7,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content is about technical debt and its manifestations (messy code, slow feedback, manual processes) and argues for practices like automation and early testing. While relevant to team effectiveness, it does not mention or discuss 'working agreements' directly or conceptually. The focus is on code quality and delivery practices, not collaborative norms. There's minimal to no overlap with establishing, revisiting, or the function of working agreements in team dynamics.",
    "reasoning_summary": "This content focuses on technical debt and engineering practices, not on team working agreements or their principles. While it advocates for improved processes, it doesn't address norms or agreements for team collaboration, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T14:35:55",
    "ai_confidence": 70.2,
    "ai_mentions": 2.3,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 7.5,
    "ai_audience": 7.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content focuses on technical debt—primarily issues like slow feedback, fragile systems, and manual processes—while recommending practices such as automation, early testing, and trunk-based development. These topics are strongly relevant to the ALM category, as managing technical debt is a crucial part of ensuring effective application lifecycle processes. However, the article doesn't explicitly mention ALM or fully map its discussion to the broader stages and methodologies of lifecycle management. Its intent is educational and supportive for practitioners, with a handful of concrete suggestions targeting delivery teams. The piece is focused and relevant with little filler, but it does not deeply explore ALM frameworks or metrics, nor directly reference the category or its complete scope.",
    "reasoning_summary": "This content addresses technical debt and methods to reduce it, which fits well within Application Lifecycle Management. While not explicit about ALM, its advice is highly relevant to lifecycle best practices and targeting practitioners, delivering solid alignment, depth, and relevance for the category.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "resourceId": "81ZWio23ss7",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T14:35:55",
    "ai_confidence": 3.23,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.95,
    "ai_intent": 0.8,
    "ai_audience": 0.6,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content is entirely focused on the concept of technical debt: its causes, impacts, and strategies for addressing it. There are no explicit mentions of Sprint Review or any discussion of reviewing increments, stakeholder feedback, or product backlog adaptation. The alignment is very low, as no core concepts of the Sprint Review event are referenced or implied. The target audience (engineering practitioners) may slightly overlap with a Scrum audience, but only coincidentally, and the overall content has no relevant signal for Sprint Review.",
    "reasoning_summary": "The content is about understanding and reducing technical debt, not the Sprint Review event or its purpose in Scrum. There's no mention or real alignment to Sprint Review concepts, so confidence for this category is extremely low.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T14:35:55",
    "ai_confidence": 17.6,
    "ai_mentions": 0.6,
    "ai_alignment": 2.7,
    "ai_depth": 2.6,
    "ai_intent": 2.3,
    "ai_audience": 3.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on technical debt from a technical viewpoint, emphasizing automation, testing, refactoring, and trunk-based development. It does not mention leadership, Agile principles, or leadership's role in managing technical debt. While it's relevant to team practices, the primary audience is technical practitioners, not leaders, and it lacks depth or alignment with Agile Leadership themes such as empowerment, culture, or leadership strategies. No penalties were needed, as the tone is neutral and current.",
    "reasoning_summary": "This content discusses technical debt from a technical practice perspective—not leadership. It lacks engagement with Agile leadership concepts, audiences, or themes, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "81ZWio23ss7",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T14:35:56",
    "ai_confidence": 71.6,
    "ai_mentions": 4.9,
    "ai_alignment": 9.1,
    "ai_depth": 6.0,
    "ai_intent": 8.7,
    "ai_audience": 9.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content discusses technical debt broadly but highlights the importance of automation and testing in addressing it. Direct mentions of automation and testing are present but not extensively detailed or focused solely on test automation; thus, depth is moderate. The intent aligns by recommending automation/testing as a remedy for technical debt. The target audience (technical teams and practitioners) is a strong match, and most of the content stays relevant, with little distraction. There's limited discussion of specific frameworks, best practices, or metrics, so it doesn't reach full depth.",
    "reasoning_summary": "The piece links technical debt to poor automation and manual processes, promoting automation and early testing as key remedies. While it doesn’t focus exclusively on test automation, its recommendations and audience fit the category, yielding a strong but not maximum confidence.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "resourceId": "81ZWio23ss7",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 53.36,
    "ai_mentions": 1.0,
    "ai_alignment": 5.5,
    "ai_depth": 5.8,
    "ai_intent": 6.1,
    "ai_audience": 7.0,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content discusses technical debt, highlighting issues like slow feedback and manual processes—factors that can impede deployment frequency. It advocates for automation and pipeline improvements, useful to increasing deployment pace. However, deployment frequency is not directly mentioned, and the discussion is broader, focusing primarily on technical debt reduction rather than optimizing release intervals. Thus, it partially aligns with the category, covering relevant best practices but not centered exclusively on deployment frequency.",
    "reasoning_summary": "While this piece describes factors (automation, pipelines) that influence deployment frequency, its true focus is technical debt. It briefly intersects with the category but isn’t a direct or thorough discussion of optimizing release intervals.",
    "level": "Tertiary"
  },
  "Site Reliability Engineering": {
    "resourceId": "81ZWio23ss7",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 46.39,
    "ai_mentions": 1.1,
    "ai_alignment": 5.9,
    "ai_depth": 4.8,
    "ai_intent": 5.3,
    "ai_audience": 5.6,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content discusses technical debt, focusing on automation and fragile systems. However, it never explicitly references SRE, SLOs, incident response, or other core SRE principles. While concepts such as automation and system fragility are relevant, the primary context is managing technical debt for developer productivity, not building reliable production systems. The discussion is general, lacking SRE-specific terminology or depth. The audience appears to be software teams broadly, not SRE practitioners. No penalties applied as the content is not outdated or satirical.",
    "reasoning_summary": "This content loosely touches on SRE-adjacent themes like automation and system fragility but lacks explicit connection to Site Reliability Engineering principles, practices, or audience. Its main focus is generic technical debt, not reliability engineering.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "resourceId": "81ZWio23ss7",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T14:35:53",
    "ai_confidence": 14.65,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.4,
    "ai_intent": 1.8,
    "ai_audience": 7.4,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content strictly focuses on the concept of technical debt—its impact, sources, and the urgency to address it through automation and best practices. There are no explicit references or even indirect discussions about forecasting, empirical risk prediction, or Agile/Scrum forecasting methods. While the target audience may overlap slightly (engineering/Agile teams), there is no mention of forecasting techniques, delivery timeline prediction, or related metrics. As such, the content minimally aligns (only tangent through audience context), and the confidence score is low.",
    "reasoning_summary": "This content discusses causes and remedies of technical debt but doesn’t relate to forecasting practices, methods, or metrics in Agile or Scrum. It lacks any focus on predicting delivery or using empirical data for planning, resulting in a very low forecasting confidence score.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "81ZWio23ss7",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 12.6,
    "ai_mentions": 0.0,
    "ai_alignment": 2.2,
    "ai_depth": 1.7,
    "ai_intent": 2.3,
    "ai_audience": 2.8,
    "ai_signal": 1.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on the general concept of technical debt and methods to reduce it, such as automation, testing, and better delivery practices. There is no direct or indirect mention of Azure Boards, Agile methodologies, or work item tracking. The alignment and depth relative to Azure Boards are very weak, since the discussion is tool-agnostic and not tied to any specific project management platform. The intent is educational but generic and does not serve the typical Azure Boards user directly. The audience could partially intersect with Azure Boards practitioners (e.g., engineering teams), but the content lacks any context or information exclusive to Agile project management with Azure Boards.",
    "reasoning_summary": "This content addresses technical debt reduction in software delivery, but it doesn't mention or relate to Azure Boards or Agile tools. It's informative yet generic, offering little alignment or depth for this category.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "81ZWio23ss7",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T14:35:53",
    "ai_confidence": 35.45,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 4.3,
    "ai_audience": 6.1,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content centers on technical debt—defining it broadly and recommending actions such as automation and early testing. While these topics align with Agile best practices (fast feedback, continuous improvement), the content never mentions Agile, nor does it discuss the Agile Manifesto or philosophy directly. The underlying ideas resonate with Agile thinking, but there’s no explicit or deep engagement with the foundational principles or mindset. The intent is more about technical excellence rather than fostering an Agile ethos, and the target audience is practitioners interested in improving development practices. There is good signal for topics like feedback loops, but references to Agile philosophy are at most implicit.",
    "reasoning_summary": "This content discusses technical debt, highlighting practices (like automation and feedback) that resonate with Agile principles. However, it lacks direct or explicit reference to Agile philosophy, focusing more on technical practices than philosophical grounding.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "resourceId": "81ZWio23ss7",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T14:35:59",
    "ai_confidence": 13.35,
    "ai_mentions": 0.1,
    "ai_alignment": 1.55,
    "ai_depth": 1.35,
    "ai_intent": 2.1,
    "ai_audience": 3.45,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses technical debt in software development, touching on automation, testing, trunk-based development, and pipelines. However, it does not mention Azure Repos or its functionalities, nor does it cover source control, branching, code reviews, or any Azure Repos features. While it targets a technical audience relevant to DevOps, the focus is broad and generic, not specifically aligned to Azure Repos or its audience. Therefore, alignment, depth, and direct mention scores are very low.",
    "reasoning_summary": "This content is about general technical debt management, not Azure Repos or its features. It lacks any direct references or in-depth discussion of Azure Repos, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T14:35:53",
    "ai_confidence": 41.891,
    "ai_mentions": 0.3,
    "ai_alignment": 4.5,
    "ai_depth": 3.7,
    "ai_intent": 4.2,
    "ai_audience": 6.0,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content thoroughly discusses technical debt, emphasizing automation, testing, and reducing manual processes. While these are important for improving software delivery and can indirectly affect value stream efficiency, there is no direct mention or deep exploration of Value Stream Management principles, techniques, or outcomes. Alignment is partial—reducing technical debt can optimize value flow, but the focus is on engineering practices rather than overarching value stream strategies or organisational alignment. The audience includes practitioners who might benefit from Value Stream Management but may not be the explicit target. No content is outdated or satirical.",
    "reasoning_summary": "This discussion focuses on technical debt and engineering improvements. While some ideas align with value stream efficiency in spirit, there’s no direct reference or substantial exploration of Value Stream Management, so category confidence remains moderate.",
    "level": "Tertiary"
  },
  "Release Management": {
    "resourceId": "81ZWio23ss7",
    "category": "Release Management",
    "calculated_at": "2025-05-16T14:35:59",
    "ai_confidence": 44.06,
    "ai_mentions": 2.8,
    "ai_alignment": 5.5,
    "ai_depth": 5.9,
    "ai_intent": 5.3,
    "ai_audience": 6.1,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content discusses technical debt—the impact of slow feedback, manual processes, and fragile deployments on delivery efficiency. While it references automation, testing, and reducing friction in delivery pipelines (relevant to release management), it doesn't explicitly reference release management nor delve into management practices, scheduling, or coordination. Thus, overlaps exist, but the primary focus is on technical debt reduction rather than release management frameworks or strategies. The audience includes practitioners interested in improving delivery processes, partially aligning with release managers.",
    "reasoning_summary": "While the content overlaps with aspects of release management (like automation and streamlined pipelines), its primary focus is on reducing technical debt broadly, not managing software releases. As such, its alignment is moderate but not direct or in-depth.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "resourceId": "81ZWio23ss7",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T14:35:53",
    "ai_confidence": 52.35,
    "ai_mentions": 1.25,
    "ai_alignment": 5.7,
    "ai_depth": 4.85,
    "ai_intent": 5.55,
    "ai_audience": 6.0,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "The content focuses on technical debt as more than code, emphasizing automation, feedback, and development practices like trunk-based development. While these are enablers for agility, business agility itself is not mentioned or deeply explored. The primary theme is improving software delivery and developer efficiency, not organisational adaptability or market responsiveness. Audience is likely practitioners, not explicitly leaders or strategists. No outdated or contradictory material found.",
    "reasoning_summary": "This content discusses handling technical debt through automation and modern development practices, which support agility at the team level. However, it stops short of connecting these practices to broader business agility concepts or organisational adaptability.",
    "level": "Tertiary"
  },
  "Product Delivery": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T14:36:01",
    "ai_confidence": 83.32,
    "ai_mentions": 6.6,
    "ai_alignment": 9.1,
    "ai_depth": 8.9,
    "ai_intent": 8.4,
    "ai_audience": 8.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content directly links technical debt to product delivery bottlenecks, explicitly discussing feedback cycles, automation, testing, and deployment—key elements of effective product delivery. It advocates for practices that support delivery goals, like automation and frictionless pipelines. Though 'product delivery' is not named, the focus is tightly aligned. The intended audience (technology teams) and the practical recommendations fit the category's scope, with minimal filler or tangential content.",
    "reasoning_summary": "This content tackles technical debt as a major obstacle to efficient product delivery, emphasizing automation, testing, and deployment best practices. Its focus, practical advice, and targeted audience closely align with the product delivery category, supporting a high confidence score.",
    "level": "Primary"
  },
  "Cycle Time": {
    "resourceId": "81ZWio23ss7",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T14:35:53",
    "ai_confidence": 22.45,
    "ai_mentions": 0.3,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 3.2,
    "ai_audience": 7.6,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content discusses technical debt and its impact on delivery efficiency, highlighting issues like slow feedback and manual processes, which are indirectly related to Cycle Time. However, it never directly references Cycle Time, nor explores its measurement, importance, or techniques for improvement as defined in the classification. The alignment and depth are minimal, focused more broadly on technical debt mitigation than on Cycle Time as a discrete metric. The main intent is to advocate addressing technical debt for better workflow, not specifically to inform about Cycle Time. Content does target a technical, practitioner audience, but the relevance to Cycle Time is peripheral and mainly implied rather than explicit.",
    "reasoning_summary": "The content centers on technical debt and related inefficiencies but never directly mentions or deeply explores Cycle Time. While there's some conceptual overlap, the connection is tangential, making Cycle Time a minor consideration rather than a central focus.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "81ZWio23ss7",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T14:36:01",
    "ai_confidence": 83.36,
    "ai_mentions": 2.6,
    "ai_alignment": 8.7,
    "ai_depth": 7.4,
    "ai_intent": 8.1,
    "ai_audience": 8.2,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content frames technical debt as practical, experience-based problem-solving, going beyond code to include feedback cycles, automation, and process choices. It directly recommends pragmatic remedies—automation, testing, and friction reduction—core to Agile and DevOps. Alignment with the target audience (teams facing delivery challenges) and focus on actionable steps are strong. No outdated advice or off-tone, but explicit category naming is minimal.",
    "reasoning_summary": "This content strongly matches Pragmatic Thinking by focusing on real-world, actionable strategies to address technical debt, such as automation and testing, for Agile and DevOps teams. While terminology is implicit, problem-solving guidance and audience alignment are excellent.",
    "level": "Primary"
  },
  "Unrealised Value": {
    "resourceId": "81ZWio23ss7",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T14:35:55",
    "ai_confidence": 19.6,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 5.8,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on technical debt—specifically, its broad forms and remediation strategies. There are no direct or indirect mentions of Unrealised Value or Evidence-Based Management. The alignment is minimal: while technical debt can contribute to unrealised value, this link is not explicitly drawn. The discussion is practical and technical, targeting practitioners rather than those looking for latent opportunity discussions. The signal/noise ratio is high because the content is focused, but discussion depth and core conceptual alignment with Unrealised Value are both low.",
    "reasoning_summary": "This content centers on technical debt and practical remedies, not on identifying or measuring unrealised value. There’s minimal alignment with the category’s core intent or audience, resulting in a low confidence score for classification as Unrealised Value.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T14:35:56",
    "ai_confidence": 48.23,
    "ai_mentions": 0.45,
    "ai_alignment": 6.7,
    "ai_depth": 5.9,
    "ai_intent": 7.1,
    "ai_audience": 7.8,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "There are no direct mentions of Lean Product Development or its terminology. The content focuses on technical debt, emphasizing automation, fast feedback, and removing bottlenecks—concepts overlapping with Lean principles such as eliminating waste and optimizing flow. However, these ideas are implicitly aligned instead of fully explored through a Lean lens. The discussion is relevant to lean-oriented practitioners, but it doesn't explicitly address Lean frameworks, customer value, or continuous experimentation, limiting both direct relevance and depth.",
    "reasoning_summary": "While the content aligns with Lean principles by highlighting waste reduction and efficiency, it lacks direct references and explicitly Lean-focused discussion, making its fit partial but relevant for Lean Product Development practitioners.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 21.9,
    "ai_mentions": 0.0,
    "ai_alignment": 2.0,
    "ai_depth": 2.2,
    "ai_intent": 3.0,
    "ai_audience": 7.1,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content discusses strategies for reducing technical debt—including automation, testing, and trunk-based development—but does not mention Behaviour Driven Development (BDD) at all. The main theme is about addressing general software quality and delivery rather than aligning practices with business needs or fostering collaboration via BDD. Although practices like automated testing are related to BDD-adjacent topics, there is no direct, conceptual, or in-depth exploration of BDD principles, collaboration, or tools. The content's intent is to drive general best practices, and while its audience could overlap with those interested in BDD, the focus and specificity are insufficient to warrant a high confidence for this category.",
    "reasoning_summary": "The piece focuses on overcoming technical debt through automation and testing but does not address Behaviour Driven Development. While there are tangential connections, there’s no direct alignment with BDD principles or tools, making it only marginally relevant to the category.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "81ZWio23ss7",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 11.23,
    "ai_mentions": 0.4,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 0.8,
    "ai_audience": 4.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content discusses technical debt, its symptoms, and ways to address it, centering on automation, testing, and reducing friction in development. It never mentions Definition of Ready, nor explores criteria for backlog item readiness or the DoR checklist. While the audience (software practitioners) is somewhat similar, the content is conceptually misaligned, with minimal relevance to DoR. No outdated or contradictory elements. Confidence is low.",
    "reasoning_summary": "This piece focuses on tackling technical debt, not the Definition of Ready. Without discussing backlog item readiness or DoR criteria, its relevance is minimal. The main audience slightly overlaps, but the content doesn’t fit the category.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "81ZWio23ss7",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 69.65,
    "ai_mentions": 0.5,
    "ai_alignment": 8.7,
    "ai_depth": 7.8,
    "ai_intent": 7.3,
    "ai_audience": 7.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "Direct mention of 'Professional Scrum' or its explicit ethos is lacking (score: 0.5); however, the piece aligns strongly with Professional Scrum by emphasizing technical excellence, accountability, and the intentional reduction of technical debt for long-term benefit (alignment: 8.7; depth: 7.8). Its intent is to provoke a shift in perspective about technical debt, mirroring professional responsibility, but without direct references to Scrum roles, values, or empiricism. The content targets practitioners familiar with delivery processes (audience: 7.1), remains focused on serious improvement rather than filler (signal: 8.2), and does not feel outdated or critical of Scrum ideals.",
    "reasoning_summary": "This piece closely aligns with Professional Scrum by advocating for technical excellence, responsibility, and proactively managing technical debt. While it lacks explicit Scrum language, its practitioner focus and emphasis on professional conduct earn it a high confidence score.",
    "level": "Secondary"
  },
  "Accountability": {
    "resourceId": "81ZWio23ss7",
    "category": "Accountability",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 16.65,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 1.8,
    "ai_intent": 2.6,
    "ai_audience": 4.5,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on technical debt, defining it and recommending remediation actions like automation and testing. While it briefly frames technical debt as a 'choice', it does not discuss defined accountabilities, explicit outcome ownership, or structural constructs within teams or organizations. There are no direct mentions of accountability or roles. The main audience is technical teams, indirectly linking to those accountable for code quality, but the core themes do not align with the Accountability category as defined.",
    "reasoning_summary": "This post highlights the causes and fixes for technical debt, but lacks focus on explicit accountability structures or outcome ownership. The fit to the Accountability category is weak, as it centers on technical practices, not on clarifying who owns results within work systems.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "81ZWio23ss7",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 33.2,
    "ai_mentions": 0.4,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 2.8,
    "ai_audience": 7.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses technical debt in software delivery, emphasizing automation and testing to reduce costs. It does not mention Agnostic Agile nor reference its principles, leaders, or philosophy. While the piece is contextually relevant to agile practitioners and hints at professionalism through proactive improvement, it lacks direct conceptual alignment, depth, and intent supporting Agnostic Agile specifically. The audience and signal scores are higher due to clear relevance to technical, agile-focused readers. No penalties were applied as the content is current and neutral.",
    "reasoning_summary": "This content targets agile practitioners and addresses proactive technical practices but does not discuss Agnostic Agile or its principles, leading to a low confidence it fits the category.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "81ZWio23ss7",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 24.28,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.5,
    "ai_intent": 2.8,
    "ai_audience": 7.3,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on technical debt, its causes, and the value of automation and early testing, but it never mentions 'Lead Time' or discusses it directly. While improving automation and reducing technical debt can decrease Lead Time, this connection is implied rather than explored. The main intent is to highlight technical debt's impact on delivery, not to discuss Lead Time as an observability metric or its measurement. The audience fits practitioners who might care about Lead Time, but the signal is diluted by the primary focus on technical debt.",
    "reasoning_summary": "The content is mainly about technical debt and process improvement, with only indirect links to Lead Time. It doesn't explicitly discuss or go in depth on Lead Time or its role as a metric. Thus, fit is weak and confidence is low.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "81ZWio23ss7",
    "category": "Model",
    "calculated_at": "2025-05-16T14:35:56",
    "ai_confidence": 22.35,
    "ai_mentions": 1.3,
    "ai_alignment": 2.7,
    "ai_depth": 3.2,
    "ai_intent": 2.8,
    "ai_audience": 6.9,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on technical debt as a multifaceted challenge, highlighting symptoms and remedies but does not explicitly mention or deeply discuss conceptual models or frameworks. While it does touch upon concepts relevant to models (such as choices and consequences), there are no references to formal models like the Cynefin Framework or Lean Startup principles. The depth and intent are modest, as the primary aim is raising awareness and offering practical advice rather than engaging with models that inform decision-making or organisational agility in structured ways.",
    "reasoning_summary": "While the content discusses aspects related to technical debt and improvement strategies, it doesn't directly reference or explore conceptual models, frameworks, or systems thinking, so its fit with the 'Model' category is minimal.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "81ZWio23ss7",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 25.48,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 3.9,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content discusses technical debt, focusing on issues like automation, testing, and manual processes. There is no direct mention of organisational change, nor are change frameworks or leadership roles discussed. While reducing technical debt can indirectly impact an organisation's agility, this piece remains centered on team-level engineering practices and the cost of debt, without addressing broader organisational transformation or strategy. The intended audience appears to be practitioners dealing with code and software processes, not executives or strategists. Thus, the conceptual and depth alignment with organisational change is weak.",
    "reasoning_summary": "This content centers on technical debt in software teams, not organisational change. While tech debt reduction can aid agility, there’s no direct discussion of change strategies or frameworks, so fit with the category is low.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "81ZWio23ss7",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T14:35:57",
    "ai_confidence": 11.43,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 1.1,
    "ai_intent": 1.5,
    "ai_audience": 2.4,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content discusses the concept of technical debt and emphasizes practices like automation and testing. It does not directly mention remote working, distributed teams, or agile-specific remote challenges. While it may be tangentially relevant to teams working remotely, the main focus is general technical health rather than any aspect of remote working in an Agile context. Consequently, all scoring dimensions are very low, reflecting the lack of category relevance. No penalties were needed as the information is current and appropriately framed.",
    "reasoning_summary": "This content centers entirely on technical debt and best practices like automation and testing. There's no explicit or implicit discussion of remote working, collaboration challenges, or agile practices in distributed setups. It doesn't fit the 'Remote Working' category.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "81ZWio23ss7",
    "category": "Capability",
    "calculated_at": "2025-05-16T14:35:54",
    "ai_confidence": 54.38,
    "ai_mentions": 2.1,
    "ai_alignment": 6.1,
    "ai_depth": 6.3,
    "ai_intent": 6.9,
    "ai_audience": 8.0,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content highlights wider aspects of technical debt and connects them with ongoing organisational impediments rather than just code cleanliness. It recommends practices like automation and testing, relevant to capability-building, but focuses on tools and practices for debt reduction rather than a deep exploration of enduring competencies. There is some conceptual alignment, as addressing technical debt enables enduring delivery capabilities, but the discussion falls short of directly addressing the broader characteristics, measurement, or cultural embedding of capability. The main audience (technical teams) and purpose (improvement) are relevant, and the content is focused, but it lacks explicit references and in-depth exploration of capability as defined.",
    "reasoning_summary": "This content links technical debt to sustainable delivery and advocates for engineering practices that can develop organisational capability, but the focus remains on practical actions and tools, not on a deep discussion of enduring competencies or capability frameworks.",
    "level": "Tertiary"
  },
  "Time to Market": {
    "resourceId": "81ZWio23ss7",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 64.4,
    "ai_mentions": 2.2,
    "ai_alignment": 7.6,
    "ai_depth": 6.8,
    "ai_intent": 7.1,
    "ai_audience": 8.0,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content centers on technical debt and its operational consequences, such as slow feedback and manual processes impeding delivery efficiency. While it doesn't directly mention 'Time to Market,' it strongly aligns with the concept, implicitly linking technical debt remediation practices (automation, testing, trunk-based development) to improved delivery speed. The discussion is conceptually relevant and targeted toward practitioners facing efficiency challenges, though depth and explicitness around Time to Market specifics are lacking. High relevance and signal, but direct mentions are limited.",
    "reasoning_summary": "This piece highlights how technical debt slows delivery and emphasizes practices to remove bottlenecks, which directly supports Time to Market improvements even though the term isn’t named. The advice and audience are relevant, producing strong confidence despite indirect references.",
    "level": "Secondary"
  },
  "Service Level Expectation": {
    "resourceId": "81ZWio23ss7",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 2.9,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.6,
    "ai_intent": 0.6,
    "ai_audience": 0.9,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content discusses technical debt, its impacts on delivery, and strategies to reduce it (automation, testing, trunk-based development), but makes no reference to Service Level Expectation (SLE), nor does it touch on its definition, calculation, or application. There are no mentions of Agile SLE concepts, probability, or cycle time as relates to SLE forecasting. The content is aimed at technical practitioners, but is entirely misaligned with the SLE classification criteria.",
    "reasoning_summary": "This piece is focused on technical debt and does not reference Service Level Expectation (SLE) or its relevant concepts. Therefore, it does not fit the 'Service Level Expectation' category according to the classification guidelines.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "81ZWio23ss7",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 38.9,
    "ai_mentions": 0.4,
    "ai_alignment": 4.6,
    "ai_depth": 3.9,
    "ai_intent": 4.8,
    "ai_audience": 5.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on technical debt, characterizing it as issues with feedback, brittle systems, and manual processes, and encourages early actions like automation and testing to mitigate it. While these ideas tangentially relate to empirical process control concepts—particularly in advocating for feedback and adaptation—the piece does not directly reference or build upon transparency, inspection, or adaptation as defined in Agile or Scrum. There's no direct mention of empirical process control by name, nor explicit links to Agile frameworks or their empirical principles. The intended audience does include technical practitioners familiar with Agile or DevOps, which partially overlaps. However, the discussion remains generic and lacks the depth, terminology, and conceptual framing central to empirical process control as a category.",
    "reasoning_summary": "This content addresses technical debt and the value of automation and testing, which are indirectly related to empirical process control but don't explicitly reference its principles, terminology, or Agile frameworks. Thus, the fit is tangential and confidence in categorization is low.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "81ZWio23ss7",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 43.85,
    "ai_mentions": 2.4,
    "ai_alignment": 5.8,
    "ai_depth": 4.5,
    "ai_intent": 6.8,
    "ai_audience": 7.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content discusses technical debt and recommends early automation and testing, briefly advocating for 'test early and often.' However, 'Test First Development' is never directly named, and while there is conceptual overlap (focus on early testing, automation, reducing manual processes), the discussion is broad and does not dive deeply into Test First principles (e.g., defining success criteria before implementation, TDD/ATDD, or the collaborative nature of Test First). The main intent is to reduce technical debt, not to advance or detail Test First Development as a practice. No aspect contradicts the category, nor is the content outdated. Thus, the confidence score is low-to-moderate: some relevance, but not sufficient centrality or depth.",
    "reasoning_summary": "This content mentions early testing and automation as remedies for technical debt, which aligns somewhat with Test First Development concepts. However, the focus is on technical debt in general, without detailed exploration of Test First principles, so confidence is limited.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T14:35:58",
    "ai_confidence": 13.6,
    "ai_mentions": 0.1,
    "ai_alignment": 1.8,
    "ai_depth": 2.6,
    "ai_intent": 1.8,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content centers on technical debt and ways to address it, focusing on automation, testing, and process improvement. While testing is mentioned, it's discussed in the context of reducing technical debt, not explicitly as part of product validation or validating product ideas with users. There's no direct mention of user engagement, product-market fit, or key examples from the 'Product Validation' category. The discussion is shallow with respect to the category, as it simply advocates for best engineering practices. The core theme aligns only lightly and incidentally with product validation, as testing here refers to code reliability, not user or market testing.",
    "reasoning_summary": "This piece focuses on tackling technical debt through automation and testing, but doesn't address testing product ideas with users or validating market needs. Its relevance to Product Validation is minimal and indirect, yielding a low confidence score.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "81ZWio23ss7",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T14:36:01",
    "ai_confidence": 65.368,
    "ai_mentions": 2.8,
    "ai_alignment": 7.9,
    "ai_depth": 6.4,
    "ai_intent": 7.0,
    "ai_audience": 8.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content focuses on technical debt—defining it as slow feedback, brittle systems, and manual processes. While it doesn't mention 'market adaptability' explicitly, its core argument centers on adopting automation, testing, and trunk-based development to improve delivery speed and innovation. This aligns well with the category's emphasis on Agile and DevOps practices that foster adaptability. However, the depth is limited, as there are no case studies or nuanced strategies, and the discussion is more about engineering best practices than direct market responsiveness, resulting in a moderate confidence score.",
    "reasoning_summary": "This content discusses how technical debt, especially in slow feedback and manual processes, hinders innovation. By promoting automation and early testing, it aligns with market adaptability through agility and better delivery, even if it doesn’t explicitly mention market adaptation or strategies.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "resourceId": "81ZWio23ss7",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T14:36:01",
    "ai_confidence": 21.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 8.5,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content centers on technical debt, its impact, and remediation strategies like automation and testing. While it touches on process inefficiencies and workflow friction, it neither directly mentions Value Stream Mapping (VSM) nor discusses its principles, tools, or frameworks. No steps, definitions, or use cases specific to VSM are present. The audience could benefit from VSM, but the discussion remains general, not Lean-focused. There are no penalties, as the content is current and not contrarian, but relevance to VSM is peripheral.",
    "reasoning_summary": "This piece is mostly about technical debt, automation, and process improvements, but it never references or delves specifically into Value Stream Mapping. While relevant to efficiency-minded readers, it lacks direct alignment with the VSM category.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "81ZWio23ss7",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T14:36:02",
    "ai_confidence": 70.4,
    "ai_mentions": 4.1,
    "ai_alignment": 8.3,
    "ai_depth": 7.7,
    "ai_intent": 7.3,
    "ai_audience": 7.9,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content directly mentions 'automation' and 'test early and often', implying automated testing as one solution to technical debt, but does not elaborate on automated testing practices, tools, or philosophies in depth. The discussion is broader, covering technical debt and general software delivery improvements; automated testing is positioned as one component. The content fits the category conceptually and aligns with its target technical audience, but lacks specificity and detailed exploration on automated testing methods or frameworks. No penalties applied since the content is contemporary and supports the value of automation/testing.",
    "reasoning_summary": "The content highlights the importance of automation and testing in reducing technical debt but discusses automated testing briefly within a broader context. It targets the right audience and aligns conceptually, earning a solid confidence score while not providing deep specialized discussion.",
    "level": "Secondary"
  },
  "Mentoring": {
    "resourceId": "81ZWio23ss7",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T14:36:02",
    "ai_confidence": 6.1,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.6,
    "ai_intent": 0.7,
    "ai_audience": 2.1,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content discusses technical debt in Agile environments, but focuses entirely on technical processes (automation, testing, refactoring), not on coaching, skill development, or mentoring relationships. There is no mention of mentoring or guidance for people, nor are mentoring strategies, leadership development, or coaching techniques addressed. The audience is practitioners, but not in a mentor/mentee context. Minimal alignment with the mentoring category.",
    "reasoning_summary": "This content addresses technical debt and improvement practices, but offers no guidance or discussion about mentoring or coaching. It's focused on process and automation rather than the development of people or mentoring relationships, thus aligning very weakly with the 'Mentoring' category.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "81ZWio23ss7",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T14:36:02",
    "ai_confidence": 88.14,
    "ai_mentions": 6.2,
    "ai_alignment": 9.2,
    "ai_depth": 8.6,
    "ai_intent": 9.0,
    "ai_audience": 8.5,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "Direct mention of 'technical debt', automation, testing, refactoring, and CI/CD-related practices demonstrates strong alignment with Engineering Excellence. The content provides examples—manual processes, fragile deployments, trunk-based development—showing substantial depth. While it doesn't explicitly use the term 'engineering excellence', it clearly discusses its principles, targeting a technical practitioner audience and promoting best practices with little off-topic material. No outdated references or contradictory tone detected.",
    "reasoning_summary": "This content closely aligns with Engineering Excellence by focusing on technical debt, automation, testing, and continuous improvement in software practices. It offers meaningful depth and targets technical teams, providing clear, relevant guidance with minimal deviation from the category.",
    "level": "Primary"
  },
  "Definition of Workflow": {
    "resourceId": "81ZWio23ss7",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:17",
    "ai_confidence": 5.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 1.6,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content focuses entirely on technical debt, its causes (e.g., manual processes, lack of automation), and strategies for addressing it. There is no mention or discussion—direct or implied—of Definition of Workflow per Kanban, nor is there exploration of explicit workflow policies, WIP limits, entry/exit criteria, or related themes. The intent and audience are software practices-oriented but do not overlap with the Definition of Workflow’s scope as defined. No penalties for tone or outdatedness apply.",
    "reasoning_summary": "This content does not discuss the Definition of Workflow or related policies, focusing solely on technical debt and development practices. It is not relevant to the targeted category.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "81ZWio23ss7",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:29:07",
    "ai_confidence": 4.15,
    "ai_mentions": 0.0,
    "ai_alignment": 1.4,
    "ai_depth": 1.9,
    "ai_intent": 1.2,
    "ai_audience": 5.3,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses entirely on technical debt—its forms, causes, and mitigation strategies through automation, testing, and development practices. It never directly mentions Objective Key Results (OKRs) nor aligns with the OKR framework or related theoretical principles set out by John Doerr. There is no discussion of objectives, measurable key results, or strategic alignment. The advice remains technical, targeting engineers or developers, but does not explore outcome-driven measurement or iterative improvement through an OKR lens. Signal and audience alignment are higher due to technical relevance, but concept and intent are only loosely related and never relate to OKRs.",
    "reasoning_summary": "This content is squarely about technical debt and its mitigation, with no references or alignment to Objective Key Results. While relevant to engineering teams, it does not address OKR concepts or frameworks in any form.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "81ZWio23ss7",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:03:14",
    "ai_confidence": 32.05,
    "ai_mentions": 1.1,
    "ai_alignment": 3.6,
    "ai_depth": 2.7,
    "ai_intent": 3.3,
    "ai_audience": 5.5,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt in modern software teams, touching on practices like automation and testing. However, it never mentions 'Product Developer' or their unique accountability in product development. The focus is on generic development team behavior, not the formal Product Developer role, responsibilities, or its nuanced distinctions. While concepts like automation, quality, and process improvement are relevant to Product Developers, the discussion lacks depth and intent specific to the defined category. The advice is broadly applicable to any software team, not explicitly to those operating as Product Developers in the context of modern frameworks or with the specified mindset.",
    "reasoning_summary": "This content addresses technical debt and improvement practices for teams but does not specifically focus on the Product Developer role or accountability. The discussion remains generic and lacks explicit references or tailored guidance for Product Developers.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "81ZWio23ss7",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:03:20",
    "ai_confidence": 10.77,
    "ai_mentions": 0.5,
    "ai_alignment": 1.7,
    "ai_depth": 2.1,
    "ai_intent": 1.6,
    "ai_audience": 3.1,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content discusses technical debt in the context of software delivery teams and emphasizes automation, testing, and modern development practices, but makes no mention of human-AI collaboration, partnership, or emergent collective intelligence. While the audience overlaps (teams in Agile/DevOps), the main focus is on team processes and code quality, not on the interplay between humans and AI agents as contributors to collective intelligence. Thus, conceptual alignment and depth are minimal, and direct mention of the category or its themes is absent.",
    "reasoning_summary": "This content focuses on technical debt and process improvement in team contexts but does not address human-AI collaboration or collective intelligence themes. It lacks references or substance tying it to the category.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "81ZWio23ss7",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:41",
    "ai_confidence": 54.35,
    "ai_mentions": 0.7,
    "ai_alignment": 6.2,
    "ai_depth": 5.7,
    "ai_intent": 6.1,
    "ai_audience": 8.0,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content never directly references Agentic Engineering, but aligns in part with its themes: it advocates automation, reducing friction, and enabling faster feedback—tangential aspects of agency and DevOps-infused craft. However, the discussion is mostly focused on technical debt, with little exploration of developer autonomy, ethical AI, or philosophical facets central to Agentic Engineering. The audience and relevance are strong, but the conceptual and depth dimensions are only moderate, resulting in a solidly midrange confidence score.",
    "reasoning_summary": "While the piece touches on adoption of automation and processes that reduce manual friction—factors related to agency—it mainly frames these in terms of technical debt, not Agentic Engineering’s deeper ecosystem themes. The relevance is partial but misses the category’s philosophical breadth.",
    "level": "Tertiary"
  },
  "Agentic Software Delivery": {
    "resourceId": "81ZWio23ss7",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:15",
    "ai_confidence": 23.45,
    "ai_mentions": 0.3,
    "ai_alignment": 2.9,
    "ai_depth": 2.6,
    "ai_intent": 3.1,
    "ai_audience": 7.25,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on technical debt, slow feedback, manual processes, and recommends automation and testing. While it advocates for modern engineering practices relevant to agentic delivery, it does not specifically mention or discuss agentic principles, the integration of autonomous AI agents, contextual intelligence, or agency. The advice is generic to DevOps and agile improvements and lacks the depth or focus on agentic software delivery. No penalties applied, as the message is current and not critical of the subject.",
    "reasoning_summary": "The content discusses automation and technical debt reduction but lacks explicit reference to agentic software delivery, AI agents, or agency concepts. Fit is weak—only tangentially related through mentions of automation and testing.",
    "level": "Ignored"
  }
}