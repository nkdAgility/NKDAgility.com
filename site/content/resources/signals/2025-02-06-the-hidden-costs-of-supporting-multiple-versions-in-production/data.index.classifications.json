{
  "Large Scale Agility": {
    "resourceId": "un1ZqM8aYng",
    "category": "Large Scale Agility",
    "calculated_at": "2025-08-07T07:06:25",
    "ai_confidence": 16.42,
    "ai_mentions": 0.4,
    "ai_alignment": 2.3,
    "ai_depth": 2.6,
    "ai_intent": 2.0,
    "ai_audience": 5.4,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content criticizes the technical and process costs of supporting multiple production versions and complex branching, especially 'branch by customer.' While it touches on scaling pain points, it does not mention or discuss large scale Agile frameworks, principles, or strategies. The audience appears to be engineering teams, not enterprise-level leaders or cross-team strategists. The discussion is technical and team-focused, not enterprise-wide. There are no explicit or implicit references to organizational-scale transformation, cross-team alignment, or enterprise agility practices.",
    "reasoning_summary": "The content discusses engineering costs of versioning and branching, not large scale agility. No frameworks, organizational scaling practices, or enterprise transformation are mentioned. Fit is minimal and mostly incidental to category intent.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "un1ZqM8aYng",
    "category": "Tenet",
    "calculated_at": "2025-05-16T20:28:51",
    "ai_confidence": 37.826,
    "ai_mentions": 1.8,
    "ai_alignment": 4.3,
    "ai_depth": 4.8,
    "ai_intent": 3.6,
    "ai_audience": 8.5,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on the challenges and inefficiencies of supporting multiple versions in production, advocating for standardized and simplified branching strategies. While it aligns with the idea of actionable practices (e.g., 'standardise, simplify'), it stops short of explicitly referencing formal tenets or grounding its guidance in named methodologies like Agile or DevOps. There is an implicit principle present (reduce complexity for efficiency), but it's not positioned as a prescriptive organizational tenet. There are no direct mentions of tenets as defined, and although the target audience (engineering teams) fits, the primary discussion is more about operational pain and best practices rather than doctrines or prescriptive guiding rules. No penalties were applied.",
    "reasoning_summary": "The content is practical for engineers and hints at simplifying processes, but it doesn’t directly discuss or name organizational tenets, making the fit only partial for the Tenet category.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "resourceId": "un1ZqM8aYng",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-16T20:28:53",
    "ai_confidence": 3.25,
    "ai_mentions": 0.5,
    "ai_alignment": 1.9,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 5.5,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content focuses on engineering workflow challenges stemming from supporting multiple production versions, discussing issues like merge conflicts, technical debt, and inefficient branching strategies. It does not explicitly mention or focus on collaboration tools, nor does it discuss platforms or software that facilitate Agile team collaboration as defined in the category. While it addresses team pain points, the absence of tool-related discussion, lack of direct references, and minimal conceptual overlap with the category lead to a low confidence score.",
    "reasoning_summary": "This content analyzes branching and version control challenges but doesn't discuss collaboration tools or their use in Agile environments. It lacks direct references, concept alignment, and relevant depth, so it is not a strong fit for the 'Collaboration Tools' category.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "un1ZqM8aYng",
    "category": "Revenue per Employee",
    "calculated_at": "2025-05-16T20:28:48",
    "ai_confidence": 6.1,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.6,
    "ai_intent": 0.6,
    "ai_audience": 2.1,
    "ai_signal": 0.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses on the engineering challenges and inefficiencies of supporting multiple versions in production. There is no direct or indirect mention of Revenue per Employee as a metric, nor is the discussion framed around financial observability, workforce efficiency signals, or organisational throughput from a financial standpoint. The primary audience is engineering teams, not executives or strategy decision-makers concerned with financial metrics. While inefficiency is discussed, it is not quantified or connected to financial outcomes or metrics like Revenue per Employee. Very little aligns with the category beyond a loose conceptual link between inefficiency and possible cost.",
    "reasoning_summary": "This content spotlights software team inefficiencies when supporting multiple production versions but never references Revenue per Employee or financial metrics. Its audience and intent are technical, not financial or strategic, so alignment with the category is minimal.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "un1ZqM8aYng",
    "category": "Continuous Delivery",
    "calculated_at": "2025-08-07T06:10:18",
    "ai_confidence": 42.56,
    "ai_mentions": 0.8,
    "ai_alignment": 5.2,
    "ai_depth": 4.6,
    "ai_intent": 6.8,
    "ai_audience": 8.3,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content discusses the pitfalls of supporting multiple production versions, focusing on issues like merge conflicts, technical debt, and branching strategies. While these topics are related to practices that Continuous Delivery seeks to improve (e.g., minimizing version proliferation and adopting simpler delivery models), there is no direct mention of Continuous Delivery, its principles, nor explicit exploration of automation, feedback loops, or specific CD tools. The intent is relevant (encouraging practices aligned with streamline delivery), the audience is technical and matches the likely readership for Continuous Delivery topics, and there is a moderate amount of depth in describing the costs of poor version management. However, the absence of direct reference, little conceptual framing specific to Continuous Delivery, and a focus on negative consequences rather than solutions limits alignment and depth. No penalties applied as the tone is neutral/current.",
    "reasoning_summary": "The content aligns partially with Continuous Delivery by highlighting problems solved by CD, but does not explicitly reference or deeply explore Continuous Delivery concepts, thus fit is partial rather than direct.",
    "level": "Tertiary"
  },
  "Scaling": {
    "resourceId": "un1ZqM8aYng",
    "category": "Scaling",
    "calculated_at": "2025-08-07T07:06:25",
    "ai_confidence": 46.95,
    "ai_mentions": 2.2,
    "ai_alignment": 5.6,
    "ai_depth": 5.2,
    "ai_intent": 5.3,
    "ai_audience": 6.1,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content focuses on the pain points of supporting multiple production versions and branching strategies. While 'scaling disaster' is mentioned once, the main focus is on engineering challenges, not on frameworks, methodologies, or approaches for scaling agility across teams. The discussion doesn't cover coordination, alignment, or enterprise flow at scale, but rather technical debt and versioning difficulties within a product team. Thus, there's partial alignment with scaling pain but not substantial exploration of scaling frameworks or principles.",
    "reasoning_summary": "Discusses scaling pain (“scaling disaster”) but centers on version control and technical debt, not scaling frameworks or enterprise coordination. Only a partial fit to the category’s intent.",
    "level": "Tertiary"
  },
  "System Configuration": {
    "resourceId": "un1ZqM8aYng",
    "category": "System Configuration",
    "calculated_at": "2025-05-16T20:28:50",
    "ai_confidence": 21.45,
    "ai_mentions": 0.5,
    "ai_alignment": 2.2,
    "ai_depth": 1.7,
    "ai_intent": 2.0,
    "ai_audience": 7.4,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on the challenges and inefficiencies of supporting multiple code versions in production, highlighting merge conflicts, technical debt, and engineering overhead. While these are important software engineering topics, they primarily concern version control, branching strategies, and development workflow rather than system configuration as specifically defined. There is very little direct mention or discussion of system setup, integration, or configuration practices, with only a loose connection via potential indirect impacts on maintenance. The audience is technical, which loosely matches, and the discussion is focused and relevant to its topic, but not to system configuration directly.",
    "reasoning_summary": "This content centers on version control challenges and technical debt, not system configuration. While its audience is technical and it discusses maintenance pain points, there's minimal direct relevance to system configuration per the definition provided.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "un1ZqM8aYng",
    "category": "Definition of Done",
    "calculated_at": "2025-05-16T20:28:52",
    "ai_confidence": 10.8,
    "ai_mentions": 0.4,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 1.2,
    "ai_audience": 3.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses on the challenges and technical debt from supporting multiple production versions, with emphasis on merge conflicts, regressions, and inefficiencies. There is no direct mention, implication, or discussion of the Definition of Done or its criteria. The core themes, best practices, and framework connections outlined for 'Definition of Done' are absent. The target audience overlaps with agile practitioners, but the main topic is unrelated and does not explore the DoD or its application.",
    "reasoning_summary": "This piece centers on technical challenges of multi-version production support, not on the Definition of Done. There’s no direct or indirect discussion of DoD concepts, leading to very low confidence in category fit.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "un1ZqM8aYng",
    "category": "Strategy",
    "calculated_at": "2025-05-16T20:28:53",
    "ai_confidence": 46.55,
    "ai_mentions": 2.2,
    "ai_alignment": 6.1,
    "ai_depth": 4.8,
    "ai_intent": 5.6,
    "ai_audience": 8.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content discusses the challenges and negative consequences of supporting multiple versions in production, focusing mainly on engineering pain points: context-switching, merge conflicts, and technical debt. While it touches on high-level implications by mentioning a 'broken branching strategy' and encourages standardisation and simplification, it does not deeply link these issues to broader organisational or business strategy, overarching objectives, or strategic alignment. The target audience is technical teams likely responsible for version control practices, which moderately aligns with a strategic audience. Mentions of strategy are indirect (e.g., 'branching strategy') and mostly operational rather than reflective of the strategic planning, decision-making, or organisational alignment central to the category. The discussion is relevant for tactical changes but lacks thorough exploration of strategic frameworks or leadership alignment.",
    "reasoning_summary": "This content addresses the downsides of supporting multiple production versions, with a focus on engineering efficiency and process pain points. While it hints at broader strategic impact via mentions of 'branching strategy,' it remains largely operational and doesn't demonstrate in-depth alignment with high-level organisational strategy.",
    "level": "Tertiary"
  },
  "Customer Focus": {
    "resourceId": "un1ZqM8aYng",
    "category": "Customer Focus",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 9.6,
    "ai_mentions": 0.3,
    "ai_alignment": 1.0,
    "ai_depth": 1.2,
    "ai_intent": 1.1,
    "ai_audience": 2.6,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses exclusively on the negative impact of supporting multiple production versions for engineering teams—such as technical debt, complexity, and merge conflicts. There are no references to customer needs, outcomes, feedback loops, or customer value as defined by the 'Customer Focus' category. All arguments are anchored in engineering experience, internal metrics, and process pain, not on measuring or delivering value to customers. Audience and signal scores are higher only because the technical audience overlaps somewhat with those interested in product delivery, but the content itself is fundamentally about internal process optimization. No penalties are applied, as the content is current and does not contradict the category, but it clearly falls outside its strict inclusion criteria.",
    "reasoning_summary": "This content centers on engineering challenges without linking these issues to customer outcomes or value. It doesn't discuss how customer focus shapes decisions or measures success, so it's a poor fit for the Customer Focus category.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "un1ZqM8aYng",
    "category": "Technical Debt",
    "calculated_at": "2025-05-16T20:28:50",
    "ai_confidence": 84.214,
    "ai_mentions": 8.2,
    "ai_alignment": 9.6,
    "ai_depth": 8.8,
    "ai_intent": 8.7,
    "ai_audience": 8.4,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content discusses how supporting multiple production versions directly leads to technical debt, explicitly naming and contextualizing it as an accumulating problem. Descriptions about bugs, merge conflicts, and inefficient practices align tightly with the core concepts of technical debt, showing a strong conceptual fit. The mention of branching strategies, reverse integration, and branch-by-customer scenarios illustrates depth and demonstrates practical awareness of what drives technical debt in software teams. The audience (engineering teams, technical decision-makers) is a close match for those seeking advice on codebase sustainability. The content is clear, focused, and makes minimal use of off-topic or filler language. No outdated practices or contradictory tones are present, and thus no penalties are needed.",
    "reasoning_summary": "This content clearly links multi-version support to technical debt, explaining how poor branching strategies create maintainability problems for engineering teams. It offers relevant examples and actionable guidance, making it highly relevant and well-aligned with the Technical Debt category.",
    "level": "Primary"
  },
  "Agentic Agility": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agentic Agility",
    "calculated_at": "2025-05-16T20:28:50",
    "ai_confidence": 13.04,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.7,
    "ai_intent": 2.5,
    "ai_audience": 3.5,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content centers on the technical challenges and inefficiencies of supporting multiple versions in production, with a strong focus on context-switching, merge conflicts, and technical debt. There are no direct or even indirect references to agency, intentionality, or adaptive action within Agile, Scrum, or DevOps frameworks. The discussion remains at a technical/operational level and does not address agency, accountability, or strategies for cultivating meaningful agility. As such, alignment and depth scores are very low, reflecting minimal relevance to Agentic Agility.",
    "reasoning_summary": "This content focuses on technical operational headaches—not on agency or adaptive action in Agile contexts—so it falls well outside the Agentic Agility category.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Backlog",
    "calculated_at": "2025-05-16T20:28:53",
    "ai_confidence": 8.2,
    "ai_mentions": 0.7,
    "ai_alignment": 1.6,
    "ai_depth": 1.2,
    "ai_intent": 1.3,
    "ai_audience": 1.5,
    "ai_signal": 1.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content addresses engineering challenges with supporting multiple production versions, emphasizing branching strategies, technical debt, and integration issues. It does not mention, discuss, or align with the Product Backlog, backlog management, its prioritization, or Agile backlog practices. The primary audience (engineers) might overlap with those interested in Product Backlog topics, but the message is strictly about codebase complexity, not managing or refining backlogs. No part of the content directly or indirectly ties to backlog items, grooming, or Agile processes beyond a general software development pain point.",
    "reasoning_summary": "The piece focuses on versioning and engineering challenges, not Product Backlog concepts or practices, offering minimal relevance to backlog management or Agile discussions.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "un1ZqM8aYng",
    "category": "Personal",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 27.76,
    "ai_mentions": 0.6,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.5,
    "ai_audience": 6.2,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content expresses subjective frustration with supporting multiple versions but does not explicitly mention personal experiences, stories, or reflections. It remains a general discussion about technical debt and process inefficiency without connecting to unique personal insights or anecdotes. The tone is opinionated and critical, but the subject stays technical rather than personal. Audience targeting aligns with engineering practitioners, but without clear personal perspective, it only lightly fits the 'Personal' category.",
    "reasoning_summary": "This content critiques multi-version support technically, offering no anecdotes or personal stories. While the tone is subjective, it doesn't provide the personal reflection required for the 'Personal' category, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "un1ZqM8aYng",
    "category": "Method",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 42.65,
    "ai_mentions": 2.1,
    "ai_alignment": 3.8,
    "ai_depth": 3.4,
    "ai_intent": 4.1,
    "ai_audience": 6.05,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content discusses technical challenges of supporting multiple production versions and branching strategies, which are procedural but do not address formal methods as defined for this category (such as Scrum, Kanban, XP, etc.). There is implicit critique of poor practices and some advice to standardize, but no explicit exploration of step-by-step methodologies or structured practices. Mentions of method are indirect (e.g., branching strategy) and the coverage is shallow rather than in-depth about 'methods' per se. The content is clearly aimed at engineering teams (practitioners) and mostly stays focused, but lacks explicit method discussion or detail.",
    "reasoning_summary": "While the content addresses procedural pain points and implicit recommendations about code branching, it doesn't explicitly discuss formal methods or structures as required by the Method category. Its advice is general, making the fit only partial.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "resourceId": "un1ZqM8aYng",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 17.523,
    "ai_mentions": 0.1,
    "ai_alignment": 3.2,
    "ai_depth": 2.6,
    "ai_intent": 2.3,
    "ai_audience": 7.3,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses narrowly on the software engineering challenges of supporting multiple production versions (e.g., technical debt, merge conflicts, branching strategies). It does not mention Enterprise Agility or its frameworks, nor does it address organisational-level agility, leadership, or transformation. The primary audience appears to be engineering teams rather than enterprise leaders or strategists. While some issues (technical debt, inefficiency) can be of organisational concern, the content lacks enterprise agility conceptual framing, depth, or intent. No penalties were warranted, as the content is current and not satirical or critical of the category.",
    "reasoning_summary": "This piece spotlights technical debt and inefficiency from multiversion support in production, with a pure engineering focus. It lacks direct mention or thorough discussion of Enterprise Agility concepts or organisational transformation, so confidence is very low for this category.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-05-16T20:28:51",
    "ai_confidence": 7.1,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content discusses the challenges of supporting multiple production branches, focusing on technical debt, bugs, and inefficiency. There are no direct or indirect mentions of Hypothesis Driven Development, experimentation, or validated learning. The message is about branching strategy and development productivity, not hypothesis formulation or testing. There is minimal relevance between this content and the definition or key topics of the specified category.",
    "reasoning_summary": "This content critiques multi-version production practices but doesn't discuss Hypothesis Driven Development, experimentation, or hypothesis validation, offering little alignment with the category focus.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "un1ZqM8aYng",
    "category": "Discipline",
    "calculated_at": "2025-05-16T20:28:50",
    "ai_confidence": 20.96,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 2.6,
    "ai_audience": 7.5,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on the challenges and inefficiencies stemming from supporting multiple production versions, such as merge conflicts, technical debt, and process pain. While these are important engineering and process concerns, the text does not mention or discuss discipline as a systemic field with codified principles, ethical considerations, or the evolution of practices. There is no explicit or implicit engagement with Discipline as defined (i.e., no reference to Agile, Lean, DevOps as disciplines, or their methodologies and governance structures). The main audience is engineering practitioners. The signal is modest as the content delivers pointed advice but remains focused on a narrow technical pain rather than the broader systemic context required for the Discipline category.",
    "reasoning_summary": "This content is about technical debt and versioning, not about Discipline as a structured field. While relevant to engineers, it lacks focus on systemic principles, methodologies, or the evolution of professional practices. Confidence in this fit is low.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-16T20:28:52",
    "ai_confidence": 14.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 5.8,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses engineering challenges related to supporting multiple production versions, such as increased bugs and technical debt, but does not directly reference Agile Planning Tools or their methodologies. There are no explicit mentions of backlog management, sprint planning, or tools like Jira or Trello. While the audience may overlap (engineering, technical management), the topic focuses on version control and branching strategies, not planning in Agile contexts. There is minor conceptual overlap in improving development processes, but minimal relevance to Agile Planning Tools.",
    "reasoning_summary": "The content focuses on the downsides of maintaining multiple production versions and branching strategies, not on Agile Planning Tools or their methods. While relevant to engineering teams, it lacks mention or substance around agile planning concepts, resulting in a very low confidence rating.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "un1ZqM8aYng",
    "category": "Coaching",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 12.75,
    "ai_mentions": 0.1,
    "ai_alignment": 1.8,
    "ai_depth": 1.5,
    "ai_intent": 2.6,
    "ai_audience": 5.0,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical challenges of supporting multiple versions in production and provides tactical advice to engineering teams about branching strategies. There are no direct mentions of coaching, nor are any coaching frameworks, techniques, or paradigms discussed. The primary intent is to persuade teams to adopt simpler branching and deployment practices, not to offer support, collaborative growth, or guidance. Though somewhat aligned in indirectly helping teams improve, it lacks substantive exploration of coaching concepts, coach roles, facilitation approaches, or the soft skills typically highlighted within the coaching category. The intended audience overlaps technically, but the content remains outcome- and efficiency-driven, missing the core emphasis on fostering individual or team development through coaching.",
    "reasoning_summary": "This content offers advice on managing production versions and branching strategies but lacks any focus on coaching principles, techniques, or supportive team development found in the Coaching category. Its technical orientation makes it a weak fit for this classification.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "un1ZqM8aYng",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-16T20:28:56",
    "ai_confidence": 28.8,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.5,
    "ai_intent": 2.4,
    "ai_audience": 7.0,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content discusses the challenges and inefficiencies of maintaining multiple production versions but does not mention Internal Developer Platforms, nor does it frame solutions in terms of IDP concepts or tooling. There are no explicit references or in-depth discussion linking to the category. The audience (engineering teams) aligns with typical IDP resources, but the intent is limited to branching and versioning strategy pain points, stopping short of suggesting or analyzing an IDP as a solution. The focus remains narrow, dealing strictly with code maintenance issues. For these reasons, the confidence score is low, as the category's conceptual requirements are not substantively met.",
    "reasoning_summary": "This content highlights versioning headaches for engineering teams but lacks direct discussion or alignment with Internal Developer Platform concepts, mentioning only code maintenance and branching pain points. It doesn't explore IDPs or relate its problems to platform solutions.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "un1ZqM8aYng",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-08-07T07:06:18",
    "ai_confidence": 23.4,
    "ai_mentions": 0.0,
    "ai_alignment": 2.7,
    "ai_depth": 3.2,
    "ai_intent": 3.7,
    "ai_audience": 7.9,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content discusses technical challenges (e.g., merge conflicts, versioning, branch by customer) and notes engineering impacts but does not explore the interplay between technical and organizational or social elements. There are implicit references to team pain and development experience, but organizational structure, culture, or sociotechnical frameworks are not addressed. The main focus is on technical debt and workflow—relevance to sociotechnical systems is minimal, indirect, and lacking in depth. No direct mention or explicit alignment with sociotechnical concepts. Audience is engineering teams, which partially overlaps. No penalties, as content is current and not critical of the category.",
    "reasoning_summary": "Content focuses on technical versioning problems and their impacts on engineering. It only weakly and indirectly connects to sociotechnical systems, with minimal discussion of social or organizational interactions. The fit is partial and mostly tangential.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "resourceId": "un1ZqM8aYng",
    "category": "Continuous Improvement",
    "calculated_at": "2025-08-07T07:06:25",
    "ai_confidence": 32.45,
    "ai_mentions": 0.5,
    "ai_alignment": 3.8,
    "ai_depth": 2.2,
    "ai_intent": 3.7,
    "ai_audience": 8.4,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content critiques the inefficiencies and risks of supporting multiple production versions, with a strong focus on engineering productivity and technical debt. While this aligns in spirit with ongoing process improvement, it does not reference or discuss Continuous Improvement practices, frameworks, or philosophies, nor does it suggest reflective cycles, experimentation, or data-driven adaptation. The intent is to advocate for simplification and standardization, but it lacks depth around ongoing empirical improvement or Agile principles. The audience (engineering teams) is relevant but the direct connection to Continuous Improvement is limited and indirect.",
    "reasoning_summary": "The content discusses process pain points and advocates for simplification in engineering teams but does not mention or explore Continuous Improvement, empirical cycles, or adaptation. Fit is marginal and mostly conceptual, not explicit.",
    "level": "Ignored"
  },
  "Transparency": {
    "resourceId": "un1ZqM8aYng",
    "category": "Transparency",
    "calculated_at": "2025-05-16T20:28:51",
    "ai_confidence": 15.71,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.1,
    "ai_intent": 2.6,
    "ai_audience": 5.5,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on the technical and process overhead of supporting multiple production versions, emphasizing risks like bugs and technical debt. While it hints at difficulties in 'keeping track' (potentially relating to visibility), it never explicitly addresses transparency, openness, visibility of work, or trust/accountability. No key transparency tools or practices are discussed. The focus is on workflow pain, not on fostering transparency.",
    "reasoning_summary": "This content critiques version management complexity, not transparency. It barely touches on visibility concerns and lacks any direct or substantive discussion of transparency, making it a weak fit for the category.",
    "level": "Ignored"
  },
  "Common Goals": {
    "resourceId": "un1ZqM8aYng",
    "category": "Common Goals",
    "calculated_at": "2025-05-16T20:28:53",
    "ai_confidence": 18.55,
    "ai_mentions": 0.4,
    "ai_alignment": 2.1,
    "ai_depth": 1.3,
    "ai_intent": 2.0,
    "ai_audience": 4.9,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on the technical and operational downsides of supporting multiple versions in production: increased bugs, merge conflicts, technical debt, and inefficiency. While these are important DevOps considerations, the article never directly references or explores the concept of Common Goals. It does not discuss alignment between strategy and execution, shared objectives, or organisational mission, nor does it mention Agile/DevOps goal-setting frameworks or the alignment of individual/team efforts to a higher purpose. The audience is engineering teams, which can overlap with Agile/DevOps topics, but the core content is tactical and not goal-focused. Surface links to reducing waste and improving efficiency do not sufficiently meet the depth or alignment requirements.",
    "reasoning_summary": "This content addresses the operational struggles of supporting multiple production versions but never references or explores the concept of Common Goals. Its focus is on technical debt and branching strategy, not on aligning strategic objectives or fostering organisational alignment.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "un1ZqM8aYng",
    "category": "Company as a Product",
    "calculated_at": "2025-05-16T20:28:52",
    "ai_confidence": 13.74,
    "ai_mentions": 0.0,
    "ai_alignment": 2.9,
    "ai_depth": 2.6,
    "ai_intent": 2.4,
    "ai_audience": 3.1,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses strictly on the technical drawbacks and process inefficiencies of supporting multiple software versions in production. It discusses issues like technical debt, merge conflicts, and development inefficiency, targeting engineering teams. There are no direct mentions or conceptual overlap with Company as a Product—the strategic, customer-oriented, organisational design perspective is absent. The discussion remains limited to software branching practices, not organisational evolution, customer value, or CaaP principles.",
    "reasoning_summary": "This content is technical in nature, addressing engineering pain points around version control—not Company as a Product concepts. It lacks references to organisational strategy, customer-centricity, or cross-functional alignment and thus fits poorly under the CaaP category.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "un1ZqM8aYng",
    "category": "Scrum Master",
    "calculated_at": "2025-05-16T20:28:52",
    "ai_confidence": 8.9,
    "ai_mentions": 0.1,
    "ai_alignment": 0.7,
    "ai_depth": 0.8,
    "ai_intent": 0.9,
    "ai_audience": 2.2,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses exclusively on technical challenges of supporting multiple software versions. It does not mention the Scrum Master, Scrum accountabilities, or related systemic, team, or organizational effectiveness themes. The main audience is engineering teams, not Scrum Masters. Depth and conceptual alignment to the Scrum Master's accountability is almost nonexistent; the article is off-topic for this category.",
    "reasoning_summary": "This content is not relevant to the Scrum Master category. It deals solely with technical software branching issues and does not address anything related to the Scrum Master accountability, responsibilities, or organizational impact.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Discovery",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 8.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.3,
    "ai_audience": 5.6,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content discusses technical challenges with supporting multiple software versions in production, focusing on issues like bugs, merge conflicts, and engineering inefficiencies. It does not mention, reference, or explore any core product discovery methodologies, customer research, or feature definition. The intent is to critique engineering practices rather than to address understanding user needs or validating product ideas, resulting in extremely low conceptual alignment and depth for the 'Product Discovery' category. The audience is engineering-focused rather than oriented toward product strategists or discovery practitioners. Therefore, the signal relevant to product discovery is minimal.",
    "reasoning_summary": "This content critiques engineering practices around version management but doesn’t touch on product discovery methods, user research, or feature definition. Its focus is technical rather than on discovering or validating product value, providing almost no alignment with the 'Product Discovery' category.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "un1ZqM8aYng",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 54.386,
    "ai_mentions": 1.2,
    "ai_alignment": 6.5,
    "ai_depth": 6.3,
    "ai_intent": 6.9,
    "ai_audience": 7.5,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content does not directly mention Continuous Integration but discusses merge conflicts, branching strategies, and challenges from supporting multiple production versions. These issues are adjacent and highly relevant to CI but the discourse never explicitly references CI, its tooling, or best practices, focusing instead on problems that CI processes often aim to solve. The analysis, audience, and depth are moderately strong, emphasizing the need for simplified, standardized workflows (which aligns with CI ideals), but the absence of explicit CI terminology or thorough exploration of CI-specific principles limits overall confidence.",
    "reasoning_summary": "While not explicitly about Continuous Integration, this content highlights merge conflicts and branching pain points that CI addresses. The alignment is moderate and suitable for technical teams, but it falls short on direct references or deep CI-specific analysis, resulting in a mid-level confidence score.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "resourceId": "un1ZqM8aYng",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T20:28:52",
    "ai_confidence": 37.06,
    "ai_mentions": 1.4,
    "ai_alignment": 3.3,
    "ai_depth": 3.0,
    "ai_intent": 4.2,
    "ai_audience": 7.6,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on challenges in maintaining multiple production versions—highlighting issues like technical debt, merge conflicts, and instability. While these themes are relevant to process improvement, the discussion lacks explicit references to data, metrics, feedback loops, or continuous improvement methodologies as required by the 'Metrics and Learning' category. The audience and signal are well-matched (engineering teams), but there's little substantive exploration of evidence-based management or metrics-driven learning practices.",
    "reasoning_summary": "This content addresses engineering pain points from multi-version support but doesn’t meaningfully engage with metrics, feedback loops, or learning systems. While relevant for technical audiences, it falls short of explicit 'Metrics and Learning' focus.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "resourceId": "un1ZqM8aYng",
    "category": "One Engineering System",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 33.77,
    "ai_mentions": 0.2,
    "ai_alignment": 3.8,
    "ai_depth": 3.1,
    "ai_intent": 3.6,
    "ai_audience": 8.6,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content critiques the inefficiencies and technical drawbacks of supporting multiple production versions, advocating standardization and simplified branching. However, there is no explicit mention of 'One Engineering System' or its principles. The alignment is moderate: the call for standardization and simplification aligns in spirit with 1ES goals, but there are no discussions of 1ES frameworks, tools, or case studies. The depth is limited, focusing solely on problems caused by multiversion support, not on solutions or 1ES methodology. Intent is only partly aligned since the main goal is raising awareness of branching pain points, not educating about 1ES. The audience is technical (engineers, leads), which fits, and the signal is high as the content is focused.",
    "reasoning_summary": "While the article encourages standardization and flags problems that One Engineering System aims to solve, it never directly references 1ES or its components. The focus remains on branching pain points, resulting in only a moderate fit with the category.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "un1ZqM8aYng",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 39.94,
    "ai_mentions": 2.3,
    "ai_alignment": 4.1,
    "ai_depth": 4.2,
    "ai_intent": 4.8,
    "ai_audience": 7.4,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content describes the challenges engineering teams face when supporting multiple production versions, such as increased bugs and technical debt. However, explicit focus on team collaboration dynamics—like communication, shared ownership, or fostering trust—is limited. While it references 'team' and discusses inefficiencies affecting team productivity, it centers on technical process issues (branching strategy) rather than on collaboration, communication, or Agile/DevOps team culture. The intended audience is engineering practitioners, which partially aligns. Overall, the piece is tangentially related—its solutions and pain points could impact team collaboration but are not primarily about it.",
    "reasoning_summary": "While the content touches on team challenges related to supporting multiple production versions, its main focus is on technical process inefficiencies—branching, bugs, and technical debt—rather than directly exploring team collaboration dynamics, making it only a partial fit for the category.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "un1ZqM8aYng",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 2.6,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.4,
    "ai_intent": 1.0,
    "ai_audience": 4.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content focuses solely on the operational and organizational challenges of supporting multiple production versions and branching strategies in software engineering. Nowhere does it mention Artificial Intelligence or its integration within Agile, DevOps, or SDLC practices. There are no conceptual hints, use cases, or even tangential links to AI topics as outlined in the category definition. The audience is partially aligned (technical teams), but the discussion is strictly about process overhead, not AI-enhanced solutions. There is no surface or in-depth exploration of AI techniques, trends, or ethical considerations in this context.",
    "reasoning_summary": "This content addresses engineering challenges with version control and technical debt, not Artificial Intelligence. There are no mentions or themes related to AI or its integration in software development, so confidence in classifying it under this category is extremely low.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "un1ZqM8aYng",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-16T20:28:52",
    "ai_confidence": 81.8,
    "ai_mentions": 6.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.3,
    "ai_intent": 8.4,
    "ai_audience": 8.0,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content focuses on challenges inherent in supporting multiple versions in production, directly referencing merge conflicts, back-porting, branching strategies, and technical debt—central topics in Modern Source Control. It aligns conceptually, discusses practical issues with depth, and targets practitioners. There are no outdated references or contradicting tones, and off-topic content is minimal. Mentions are somewhat indirect (few explicit references), but overall fit is strong.",
    "reasoning_summary": "This content closely aligns with Modern Source Control, diving into challenges with branching, merge conflicts, and technical debt. It's technically focused, practical, and aimed at practitioners, making it a strong match for the category despite only indirect mentions.",
    "level": "Primary"
  },
  "Team Performance": {
    "resourceId": "un1ZqM8aYng",
    "category": "Team Performance",
    "calculated_at": "2025-05-16T20:28:52",
    "ai_confidence": 76.06,
    "ai_mentions": 6.3,
    "ai_alignment": 8.8,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 7.9,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content discusses how supporting multiple production versions degrades team effectiveness, linking it to increased bugs, instability, and wasted engineering effort. While 'team performance' is not directly named, the impact on delivery capability and systemic constraints is clear. The piece gives concrete examples: context-switching, merge conflicts, back-porting, and technical debt, indicating how these factors hinder sustainable team delivery and throughput. The main audience is practitioners, focusing on improving work systems. However, the discussion is not deeply metric-driven and doesn't detail performance measurement patterns, prompting slight reductions in alignment, depth, and intent. No penalties apply for tone or outdatedness.",
    "reasoning_summary": "This article clearly explores how complex version support undermines engineering teams' ability to deliver efficiently. It highlights systemic pain points—merge conflicts, technical debt, and wasted time—making it highly relevant to team performance, even if terms aren't used directly.",
    "level": "Secondary"
  },
  "First Principal": {
    "resourceId": "un1ZqM8aYng",
    "category": "First Principal",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 17.95,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 2.2,
    "ai_audience": 5.2,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content critiques the practice of supporting multiple versions and advocates standardisation but does not explicitly identify or discuss first principles as defined in the category. While the theme aligns broadly with concerns around system design and efficiency—potentially influenced by first principles in DevOps or Agile contexts—the post stops short of identifying, explaining, or applying any true first principle. It treats branching strategy as a best practice, not as an immutable foundational principle. The content does not reference first principles directly, nor does it distinguish them from heuristics or derived practices. Its primary audience (engineering teams) may overlap those interested in first principles, but the discussion is focused, practical, and rooted in specific pain points rather than foundational, non-negotiable constraints.",
    "reasoning_summary": "This content addresses engineering challenges and branching strategies, but it doesn't discuss or apply first principles directly. Instead, it focuses on practical advice and critiques, lacking the foundational or immutable emphasis required for the 'First Principal' category.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "un1ZqM8aYng",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T20:28:53",
    "ai_confidence": 9.6,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.3,
    "ai_audience": 3.7,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses on engineering pain points related to supporting multiple production versions, highlighting issues like context-switching, technical debt, and complicated merge flows. However, it never directly mentions cross-functional teams and does not explore team composition or collaboration across disciplines. The main topic is branching strategy and its effects on development efficiency, not on how cross-functional teams operate. Audience (engineering) somewhat overlaps with the Agile context, but it doesn't address team structure, collaboration practices, or specific cross-functional benefits and challenges.",
    "reasoning_summary": "This content is focused on branching strategy and development bottlenecks, not cross-functional teams. There is little to no alignment with key category concepts such as diverse team structure or cross-functional collaboration.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "un1ZqM8aYng",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 7.0,
    "ai_mentions": 0.1,
    "ai_alignment": 0.6,
    "ai_depth": 0.2,
    "ai_intent": 0.5,
    "ai_audience": 1.8,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "This content focuses on the technical challenges and operational inefficiencies of supporting multiple software versions in production, such as increased bugs, merge conflicts, and technical debt. It discusses workflows like reverse integration and branching strategies but does not mention backlog refinement, Agile, or Scrum. While the content is relevant to engineering practices and process optimization, it does not relate to or discuss any aspect of backlog refinement—such as prioritizing work, user story readiness, the Product Owner’s role, or team collaboration around the backlog. Thus, its alignment, mentions, depth, and intent are all extremely low or negligible in relation to the Backlog Refinement category.",
    "reasoning_summary": "The content addresses problems with managing multiple production versions and branching strategies but does not touch on backlog refinement or the Agile practices surrounding it, resulting in a very low confidence score for this category.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "un1ZqM8aYng",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 88.75,
    "ai_mentions": 8.0,
    "ai_alignment": 9.4,
    "ai_depth": 8.8,
    "ai_intent": 8.5,
    "ai_audience": 8.0,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content discusses challenges of maintaining multiple production versions, merge conflicts, technical debt, and inefficient engineering practices, without referring to established Agile, Scrum, DevOps, Lean, or EBM principles or frameworks. It doesn't cite methodologies or offer guidance linked to recognised theories. The reflection is experiential, practical, and not tied to specific literature or best practices, matching the Miscellaneous definition. The intended audience is practitioners interested in practical software management concerns, and the focus remains tightly on the ancillary pain points of versioning—not on formal agile approaches. No penalties applied as the content is current and maintains a neutral, informative tone.",
    "reasoning_summary": "This content fits Miscellaneous due to its practical discussion of version management pain points without referencing Agile, DevOps, or any established frameworks. It's a reflective take targeting practitioners interested in production realities, making it relevant but outside formal methodologies.",
    "level": "Primary"
  },
  "Technical Mastery": {
    "resourceId": "un1ZqM8aYng",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-16T20:28:58",
    "ai_confidence": 89.85,
    "ai_mentions": 7.3,
    "ai_alignment": 9.4,
    "ai_depth": 9.2,
    "ai_intent": 9.0,
    "ai_audience": 9.6,
    "ai_signal": 9.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content directly critiques complex version support, linking it to technical debt, engineering inefficiency, and problematic practices. Terms like 'technical debt,' 'merge conflicts,' and branching strategies are central. While the content doesn't explicitly name 'Technical Mastery,' it robustly addresses code quality, refactoring needs, and best practices in software delivery. The target audience is clearly technical teams and engineering leaders. The discussion is deep, focused, and provides actionable recommendations.",
    "reasoning_summary": "This content strongly aligns with Technical Mastery by critically analyzing branching strategies and technical debt. It offers practical guidance for engineering teams, maintaining a deep focus on software craftsmanship and delivery quality.",
    "level": "Primary"
  },
  "Scrum Values": {
    "resourceId": "un1ZqM8aYng",
    "category": "Scrum Values",
    "calculated_at": "2025-05-16T20:28:59",
    "ai_confidence": 2.2,
    "ai_mentions": 0.1,
    "ai_alignment": 0.9,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 2.4,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses on the challenges of maintaining multiple product versions, technical debt, and engineering processes. It does not directly mention or allude to Scrum Values (commitment, courage, focus, openness, respect) nor does it explore their role or relevance. The main ideas concern software maintenance strategy rather than team values, intent is clearly technical, the target audience is engineering teams rather than Scrum practitioners, and the discussion lacks both depth and direct alignment with Scrum Values.",
    "reasoning_summary": "This content is about the complexities of software version management—not Scrum Values. It doesn't mention or explore commitment, courage, focus, openness, or respect, so it falls outside the intended category.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-16T20:29:01",
    "ai_confidence": 27.8,
    "ai_mentions": 0.4,
    "ai_alignment": 3.6,
    "ai_depth": 2.7,
    "ai_intent": 4.1,
    "ai_audience": 7.0,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on challenges of supporting multiple production code versions—merge conflicts, technical debt, branching strategies—primarily from a software engineering perspective. There are no direct mentions of the Agile Product Operating Model (APOM), product-centric mindsets, or APOM-specific themes (e.g., roadmaps, evidence-based management, governance). Conceptual alignment is weak; the piece largely addresses engineering operational pain points, not organisational or process frameworks central to APOM. The discussion is tactical and lacks depth regarding agile product principles, structure or incentives covered by the APOM category.",
    "reasoning_summary": "This content centers on engineering difficulties from multiple production versions, not on Agile Product Operating Model principles. The focus is tactical, lacking references to APOM concepts, so confidence in fitting the category is low.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "resourceId": "un1ZqM8aYng",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 19.05,
    "ai_mentions": 0.1,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.5,
    "ai_audience": 6.2,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content discusses the challenges and inefficiencies of supporting multiple production versions, focusing on issues like context-switching, merge conflicts, technical debt, and flawed branching strategies. However, it does not directly mention or delve into Shift Left principles, process improvement via early testing, or integrating security/compliance early in development. While aimed at engineering teams (the typical audience for Shift Left), the themes are only tangentially relevant, lacking explicit reference or depth on Shift Left Strategy.",
    "reasoning_summary": "This content targets engineering teams and highlights versioning pain points but doesn't directly discuss or exemplify Shift Left Strategy. The focus is on branching and maintenance issues, so relevance to Shift Left is minimal, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Working Software": {
    "resourceId": "un1ZqM8aYng",
    "category": "Working Software",
    "calculated_at": "2025-05-16T20:28:56",
    "ai_confidence": 31.58,
    "ai_mentions": 0.3,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 2.9,
    "ai_audience": 7.3,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content discusses engineering challenges of supporting multiple versions in production but does not directly reference 'working software' as a deliverable artifact or explore its Agile meaning. Its focus is on technical debt and inefficiency, with only indirect links to the quality or delivery of working software. There is little depth in discussing working software itself, and only a minor conceptual alignment as maintaining multiple versions arguably affects users' perception of working software. The primary audience is technical, but the main theme is tool/process critique, not the delivery of working software per se. No penalties were needed.",
    "reasoning_summary": "This content mainly critiques multi-version support and branching strategies rather than working software as defined in Agile. It is tangentially related at best, addressing process pain points but missing focus on delivering or defining working software.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 28.176,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 3.1,
    "ai_audience": 7.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on challenges related to supporting multiple versions in production, such as increased bugs, merge conflicts, and technical debt. While these are important engineering concerns, the discussion does not explicitly mention or directly relate to digital transformation, nor does it discuss broader business strategy, technological adoption, or organizational change. The alignment with digital transformation is tangential at best, as the content is centered on development workflow pains rather than strategic transformation initiatives. The mention of standardization and simplification could indirectly support operational efficiency, yet there’s no substantive exploration of how these measures tie into digital transformation objectives. The target audience (engineering teams) overlaps with audiences relevant to digital transformation, but the discussion remains too technical and narrow. No penalties were applied as the content is neither outdated nor undermining.",
    "reasoning_summary": "This content addresses engineering pain points from maintaining multiple production versions but lacks explicit or strategic connection to digital transformation. Its focus is on technical workflow issues, not on leveraging digital technology for broader organizational change.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "resourceId": "un1ZqM8aYng",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-16T20:28:58",
    "ai_confidence": 31.04,
    "ai_mentions": 1.2,
    "ai_alignment": 3.8,
    "ai_depth": 3.2,
    "ai_intent": 4.1,
    "ai_audience": 7.7,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content focuses on the challenges and inefficiencies of supporting multiple production versions, emphasizing engineering burdens like merge conflicts, technical debt, and broken branching strategies. While it identifies key pain points for development teams (suggesting a technical audience), it does not analyze broader trends, shifts, or patterns in Agile, DevOps, or business agility. There is no discussion of emerging practices, data-driven insights, or organizational strategic implications as required for 'Trend Analysis.' References to methodology best practices are more prescriptive and diagnostic than analytical, lacking reflection on trends or impacts across the industry. Direct mentions of trend analysis or related terminology are absent. The content is highly relevant and focused but does not substantially fit the intent or depth expected for the 'Trend Analysis' category.",
    "reasoning_summary": "This content highlights engineering pain points with supporting multiple production versions but lacks discussion of industry trends, data analysis, or strategic impacts. It's technical and prescriptive, not analytical, so confidence in classifying as 'Trend Analysis' is low.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "un1ZqM8aYng",
    "category": "Organisational Psychology",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 10.23,
    "ai_mentions": 0.1,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 1.2,
    "ai_audience": 4.5,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses the technical and operational burden of supporting multiple production versions, focusing primarily on software engineering challenges (merge conflicts, technical debt, branching strategies). There is minimal reference—direct or indirect—to psychological principles or theories impacting organisational performance, team dynamics, motivation, or leadership within organisations. It does not address key organisational psychology themes such as motivation, team cohesion, leadership, or psychological safety. The audience is technical, and the discussion is almost entirely centered around best practices in software delivery, not the psychological aspects of organisational behavior.",
    "reasoning_summary": "This content is focused on engineering challenges and branching strategies with almost no alignment to organisational psychology. Neither its intent nor substance matches the psychological or behavioral core of the category, so classification confidence is extremely low.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "un1ZqM8aYng",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 6.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.3,
    "ai_depth": 0.2,
    "ai_intent": 0.3,
    "ai_audience": 5.5,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses solely on the engineering challenges of supporting multiple software versions in production, such as merge conflicts, technical debt, and branch management. It does not mention Hybrid Agile, nor does it discuss the integration of agile and traditional methodologies or related organizational issues. Alignment, intent, and depth are very low as the discussion lacks any exploration of Hybrid Agile themes, definitions, or critique. Audience and signal are higher as it is aimed at practitioners and is focused on a relevant technical pain point, though unrelated. No penalties were applied as there is no outdated information or conflicting tone.",
    "reasoning_summary": "This content addresses technical aspects of version management in engineering but doesn't reference or align with Hybrid Agile concepts. Its focus and intent differ from the critical analysis required for the Hybrid Agile category.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "un1ZqM8aYng",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T20:28:59",
    "ai_confidence": 14.58,
    "ai_mentions": 0.5,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 2.4,
    "ai_audience": 5.5,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on technical issues related to supporting multiple software versions—bugs, merge conflicts, technical debt, and branching strategies. It does not mention motivation, commitment, satisfaction, or strategies relating to employee engagement. There is minimal alignment or depth regarding psychological or social work factors. Its audience is technical teams, and the main purpose is technical efficiency, not engagement.",
    "reasoning_summary": "The content addresses technical challenges in software development and does not directly or deeply explore employee engagement themes. Its focus and intent are misaligned with the category, resulting in very low confidence.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 9.87,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.3,
    "ai_intent": 2.1,
    "ai_audience": 3.0,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses on the operational and process challenges of supporting multiple versions in production, including merge conflicts and technical debt. It does not mention Test Driven Development (TDD), discuss the TDD cycle or methodology, or reference automated testing practices. The discussion is oriented toward branching strategies and production practices. While some TDD principles—like reducing bugs and technical debt—are adjacent to the problems discussed, the alignment and depth are extremely low for the TDD category. There are no outdated or contradictory elements, and no explicit penalties were necessary.",
    "reasoning_summary": "This content discusses challenges of supporting multiple production versions and branching strategies, not Test Driven Development. There's no mention or exploration of TDD concepts, so it isn't a fit for the category, resulting in very low confidence.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "un1ZqM8aYng",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T20:29:01",
    "ai_confidence": 41.76,
    "ai_mentions": 0.2,
    "ai_alignment": 4.8,
    "ai_depth": 3.9,
    "ai_intent": 4.2,
    "ai_audience": 7.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content highlights issues related to supporting multiple versions in production, such as technical debt and reduced productivity—concerns that are relevant to platform engineering. However, it does not explicitly mention 'platform engineering,' IDPs, automation, or self-service. The discussion stays at the level of branching strategies and their operational pain, lacking direct or deep connection to platform engineering principles, tooling, or specific practices. While the intent (improving developer efficiency) and audience (engineering teams) are somewhat aligned with platform engineering goals, the content fits better under engineering productivity or software delivery best practices rather than platform engineering per se. No penalties were applied, as the content is current and not satirical.",
    "reasoning_summary": "While the content addresses developer pain points that platform engineering seeks to solve, it doesn’t explicitly reference platform engineering or its core practices. The fit is partial—relevant by intent but lacking direct discussion of internal platforms or automation.",
    "level": "Tertiary"
  },
  "Lean Thinking": {
    "resourceId": "un1ZqM8aYng",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 53.65,
    "ai_mentions": 1.2,
    "ai_alignment": 6.8,
    "ai_depth": 6.1,
    "ai_intent": 6.7,
    "ai_audience": 7.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on inefficiency, waste (time, effort), and complexity from managing multiple production versions, which conceptually aligns with Lean waste reduction—even if Lean is never directly mentioned. The main intent is to advocate for simplification and standardisation, approaches resonant with Lean Thinking. However, it doesn't explore Lean principles in depth, nor cite Lean terminology or tools like 5S or value stream mapping. The audience is technical/engineering, relevant to Lean contexts, and the discussion is highly focused with little filler.",
    "reasoning_summary": "While Lean Thinking isn't named, the content aligns with Lean ideas like minimising waste and streamlining workflows. It targets relevant engineering audiences, but lacks explicit Lean references and specialized tools, resulting in moderate confidence for this category.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 13.53,
    "ai_mentions": 0.5,
    "ai_alignment": 1.4,
    "ai_depth": 1.9,
    "ai_intent": 2.2,
    "ai_audience": 5.1,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on the pains of supporting multiple production versions and technical debt but does not explicitly discuss self-organisation or related principles. There are no direct mentions of autonomy, empowerment, or Agile practices. While it addresses engineering workflow challenges relevant to teams, it lacks alignment with the category's core themes of self-organisation. The discussion is somewhat relevant to team practices but does not explore self-organisation concepts in depth, leading to a low confidence score.",
    "reasoning_summary": "This piece discusses production versioning challenges but does not address self-organisation principles or practices. Its focus is on technical inefficiencies, not team autonomy or empowerment, resulting in low category alignment and a low confidence score.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "un1ZqM8aYng",
    "category": "Competence",
    "calculated_at": "2025-05-16T20:29:01",
    "ai_confidence": 39.65,
    "ai_mentions": 1.2,
    "ai_alignment": 3.8,
    "ai_depth": 3.9,
    "ai_intent": 3.1,
    "ai_audience": 6.7,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content focuses mainly on the challenges of supporting multiple production versions, especially increased technical debt, bugs, and inefficiency. While this may indirectly relate to team effectiveness or capability, it never explicitly addresses continuous development, skill improvement, or professional competence. There are no direct references to competence or its development. The main intent is to warn about technical pitfalls rather than explore or promote the growth of competence. The audience is engineering teams and technical practitioners, which overlaps with the category, but the thematic focus is on branching strategies rather than competence itself. Signal-to-noise is fairly high as it stays on topic, but that topic is only marginally linked to competence.",
    "reasoning_summary": "This content stays tightly focused on technical process pitfalls rather than the underlying principles of competence or skills development. While the consequences discussed could impact competence indirectly, the main themes and intent don't fit the core definition, resulting in low category confidence.",
    "level": "Ignored"
  },
  "Decision Making": {
    "resourceId": "un1ZqM8aYng",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 23.29,
    "ai_mentions": 1.0,
    "ai_alignment": 2.2,
    "ai_depth": 1.7,
    "ai_intent": 2.5,
    "ai_audience": 7.2,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content critiques the inefficiencies and risks of supporting multiple production versions, but it lacks structured, evidence-based methodologies or collaborative frameworks for decision-making. There's no explicit focus on process or techniques to enhance choices using facts or analytics. The main intent is advisory, not structured decision support. The audience matches technical practitioners, and the content is mostly focused, but it offers opinions rather than evidence-based frameworks. There is no outdated or contradictory tone, so no penalties are applied.",
    "reasoning_summary": "While the content targets relevant audiences and discusses factors influencing engineering choices, it doesn't engage evidence-based or structured decision-making principles. It shares practical advice but lacks the depth and explicit alignment with the Decision Making category.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "resourceId": "un1ZqM8aYng",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-16T20:28:54",
    "ai_confidence": 7.7,
    "ai_mentions": 0.1,
    "ai_alignment": 0.6,
    "ai_depth": 0.7,
    "ai_intent": 0.1,
    "ai_audience": 3.5,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses the challenges of supporting multiple production versions, merge conflicts, back-porting, and technical debt. There are no direct mentions of installation or configuration practices, procedures, or troubleshooting. The focus is on code maintenance and branching strategies, not on setting up or configuring tools/platforms. The audience may include technical practitioners but the discussion is theoretical and process-based, not implementation-focused.",
    "reasoning_summary": "This content critiques branching strategies and warns of hidden costs in version management, but it doesn't address installation or configuration. It's more about process and code maintenance than technical setup, so it's a poor fit for the Install and Configuration category.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "un1ZqM8aYng",
    "category": "Current Value",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 21.8,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.3,
    "ai_intent": 2.8,
    "ai_audience": 6.2,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content highlights challenges in software development caused by supporting multiple production versions, focusing on inefficiencies, technical debt, and development pain. It does not mention Current Value, Evidence-Based Management, or related metrics. While the core concern (operational cost and developer efficiency) may indirectly impact delivered value, the content lacks explicit connection to Current Value definitions, metrics, or real-time value assessment. Depth and conceptual alignment with the category are minimal, with only indirect touches on potential impacts rather than deliberate analysis or measurement of value in the Evidence-Based Management sense. The audience (engineering teams) partially aligns, but intent is solution-oriented rather than focused on measuring value delivered. Signal is moderate due to topical focus but is not directly tied to the category.",
    "reasoning_summary": "This content discusses engineering efficiency issues, not Current Value as defined in Evidence-Based Management. It doesn't discuss value measurement, customer outcomes, or relevant metrics, making its category fit quite weak.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "un1ZqM8aYng",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 8.35,
    "ai_mentions": 0.1,
    "ai_alignment": 1.6,
    "ai_depth": 1.2,
    "ai_intent": 0.9,
    "ai_audience": 2.5,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on the internal challenges faced by engineering teams when supporting multiple production versions. It details increased bugs, technical debt, and developer pain points, but never discusses customer needs, experience, or satisfaction, nor does it mention practices, metrics, or strategic alignment with Agile/Lean customer outcomes. There are no direct or conceptual references to the customer, only internal process efficiency and engineering best practices. The content’s target audience (engineering teams) is tangentially related to customer satisfaction if you consider that better practices might indirectly benefit users, but such connections are neither explicit nor discussed. Therefore, mentions, alignment, depth, and intent scores are all very low. No dimension warranted penalties.",
    "reasoning_summary": "This content is narrowly focused on engineering pain points and workflow efficiency, not on customer satisfaction. There are no explicit or implicit discussions of customer happiness, feedback loops, or customer-driven metrics, leading to a very low confidence in its relevance to the category.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Project Management",
    "calculated_at": "2025-05-16T20:28:56",
    "ai_confidence": 46.25,
    "ai_mentions": 2.7,
    "ai_alignment": 5.6,
    "ai_depth": 4.9,
    "ai_intent": 3.8,
    "ai_audience": 4.4,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content discusses challenges of maintaining multiple production versions, such as increased bugs, technical debt, and inefficiency. While these are project risks, the focus is squarely on engineering difficulties, branching strategies, and developer workflow. There's little explicit mention or thorough exploration of project management principles, methodologies, or lifecycle stages. The alignment with project management is indirect—these issues matter for project delivery, but the details here are technical, not managerial. The audience seems to be engineering practitioners rather than project managers, and the intent is to highlight development inefficiencies, not discuss project management strategy.",
    "reasoning_summary": "This content highlights engineering pain points with supporting multiple versions, which indirectly impacts project management but lacks focus on core PM principles or strategies. It’s technical and aimed at developers, offering only loose relevance to project management overall.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T20:28:55",
    "ai_confidence": 18.0,
    "ai_mentions": 0.6,
    "ai_alignment": 2.5,
    "ai_depth": 2.0,
    "ai_intent": 3.0,
    "ai_audience": 5.2,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on the challenges of maintaining multiple production versions and branching strategies. It does not directly mention Agile frameworks, principles, or practices. While engineering team efficiency and reducing technical debt are adjacent concerns to Agile, the material never explicitly references Agile, its frameworks, or underlying philosophies. There is no substantive exploration of Agile framework principles, no intent to educate or inform about Agile frameworks specifically, and the target audience appears to be engineering practitioners rather than those seeking comprehension or implementation strategies for Agile frameworks. Therefore, alignment, depth, and mentions are scored low, with minor variance in audience/signal because these topics might interest some Agile practitioners but are not focused on frameworks themselves.",
    "reasoning_summary": "This content highlights engineering challenges of supporting multiple production versions but doesn't reference Agile frameworks, principles, or values. It's adjacent in relevance for Agile practitioners, yet lacks direct alignment, so the confidence score is low.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "un1ZqM8aYng",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T20:28:59",
    "ai_confidence": 23.37,
    "ai_mentions": 0.1,
    "ai_alignment": 2.7,
    "ai_depth": 2.5,
    "ai_intent": 2.1,
    "ai_audience": 6.2,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses almost entirely on technical challenges (bugs, merge conflicts, technical debt) involved in supporting multiple versions in production. While it briefly mentions team pain points, it lacks any substantial reference to collaboration frameworks, social methodologies, or adaptive processes described in 'Social Technologies.' There's no mention of self-organisation, collective intelligence, or cultural impacts—nor any allusion to Agile or DevOps as social approaches. The audience is technical (engineering teams), partially overlapping, but the core message is engineering process efficiency, not social frameworks or methodologies. No penalties applied, as the tone is neutral and the content is not outdated.",
    "reasoning_summary": "This content is technically focused, highlighting engineering issues with multiple production versions. It barely addresses the collaborative or social frameworks central to Social Technologies, offering limited alignment and depth for this category.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 34.54,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.95,
    "ai_intent": 2.7,
    "ai_audience": 8.1,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on the engineering challenges and inefficiencies of supporting multiple production versions, such as increased bugs and technical debt. It critiques branching strategies but does not discuss vision, roadmapping, market analysis, customer alignment, or broader strategic frameworks core to Product Strategy. The main audience is engineering practitioners, not strategists. While branch management can impact long-term product success, the piece doesn’t explore strategic tradeoffs or planning, so the alignment, depth, and intent are all low. There’s little explicit reference to product strategy, with mention mainly implied via branching strategy critique.",
    "reasoning_summary": "This content mainly discusses engineering pain points from supporting multiple production versions, with an operational focus and little connection to core product strategy topics like vision, roadmap, or customer alignment. As such, confidence in the fit for Product Strategy is low.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Development",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 62.5,
    "ai_mentions": 2.6,
    "ai_alignment": 7.1,
    "ai_depth": 6.7,
    "ai_intent": 7.0,
    "ai_audience": 8.2,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content focuses on operational pain points in managing multiple production versions, technical debt, and branch management. While these issues relate to delivering usable software, the discussion is mostly rooted in engineering challenges rather than broader product development methodologies (e.g., iterative learning, customer feedback). There is indirect alignment with continuous improvement and risk mitigation, but the specifics are more about code/process efficiency. The audience is engineering teams, which overlaps with but doesn't fully encompass the strategic and cross-functional focus of the product development category. The message is clear and on-topic with little filler, resulting in a solid signal-to-noise score.",
    "reasoning_summary": "This content mainly addresses engineering pain points from multiple production versions, touching on process improvement and risk, but lacks direct coverage of broader product development methodologies or customer-centric themes, making its fit for Product Development moderate.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "resourceId": "un1ZqM8aYng",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 20.97,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.4,
    "ai_intent": 2.9,
    "ai_audience": 7.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content is a critique of supporting multiple code versions in production and focuses on practical development challenges such as bugs, branch management, and technical debt. There are no direct or indirect mentions of sensemaking, complexity frameworks, organizational decision-making, or the interpretation of complex environments—key aspects required for the category. The intent is tactical and narrowly focused on engineering process pain points, not organizational sensemaking. The audience and signal-to-noise are relatively stronger, as the content is relevant for engineering teams, but the discussion remains at the implementation level and does not explore sensemaking concepts, practices, or leadership perspectives.",
    "reasoning_summary": "This content focuses on engineering challenges of supporting multiple production versions, not organizational sensemaking. It's practical advice about development processes, lacking depth, frameworks, or discussions about complexity interpretation or decision-making strategies.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "un1ZqM8aYng",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T20:28:56",
    "ai_confidence": 3.4,
    "ai_mentions": 0.0,
    "ai_alignment": 1.6,
    "ai_depth": 2.4,
    "ai_intent": 2.0,
    "ai_audience": 4.4,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content exclusively discusses the challenges of supporting multiple software versions and branching strategies, focusing on issues such as technical debt, merge conflicts, and engineering efficiency in software development. Nowhere does it mention Cell Structure Design, the Beta Codex, decentralisation, organisational design, or the principles associated with the category. The closest overlap is a peripheral critique of traditional workflows, but there is no conceptual alignment with Cell Structure Design models or their applications. The primary audience appears to be software engineers dealing with technical workflow issues, not organisational designers or strategists interested in Cell Structure Design.",
    "reasoning_summary": "This content addresses engineering workflow pain around software versioning, not organisational models like Cell Structure Design. There’s no conceptual or direct connection, so it fits the category very poorly.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "un1ZqM8aYng",
    "category": "Artifact",
    "calculated_at": "2025-05-16T20:28:59",
    "ai_confidence": 14.65,
    "ai_mentions": 0.9,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 3.5,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on the practical challenges and inefficiencies of supporting multiple code branches and versions in production. While it discusses concepts like branch management and technical debt, it does not address artifacts as formal representations of work, nor does it explore their structure, purpose, or role within Agile, Scrum, Lean, or DevOps systems. Key artifact topics (like Product Backlog or Definition of Done) are absent. The main themes—branching strategy and version control—are tool/process-focused, not artifact-centric. Thus, only minimal conceptual alignment and direct mentions are present.",
    "reasoning_summary": "This content centers on branching strategies and the challenges of version management, not on artifacts as formal representations within Agile or Scrum. There's little to no alignment with the 'Artifact' category, so confidence is very low.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T20:28:59",
    "ai_confidence": 34.71,
    "ai_mentions": 1.4,
    "ai_alignment": 3.6,
    "ai_depth": 4.3,
    "ai_intent": 3.7,
    "ai_audience": 7.0,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on the technical challenges and inefficiencies of supporting multiple production versions and branching strategies. While it highlights the need for standardization and simplification, it does not explicitly discuss Agile Strategy: there are no direct references to Agile, organizational alignment, or integrating Agile principles at the strategic level. The discussion is technical and operational rather than strategic, with the main audience being engineering practitioners dealing with branching practices, not leaders shaping Agile strategy. No penalties were applied as the content is not obsolete nor overtly critical of Agile itself, but it remains off-category due to lack of strategic focus.",
    "reasoning_summary": "This content centers on technical difficulties in managing multiple production branches, lacking direct and deep connection to Agile Strategy. It's practical developer advice, not strategic guidance or an Agile methodologies discussion, so confidence for this category is low.",
    "level": "Ignored"
  },
  "GitHub": {
    "resourceId": "un1ZqM8aYng",
    "category": "GitHub",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 13.84,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.3,
    "ai_intent": 1.0,
    "ai_audience": 5.4,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses challenges of supporting multiple production versions and problematic branching strategies in software development. Although terms like 'branching strategy,' 'merge conflicts,' and 'technical debt' are used, there is no direct or indirect reference to GitHub or its services, tools, or best practices. The discussion is general to version control and development rather than specific to GitHub. The audience (engineering teams) somewhat aligns, but the content remains generic with respect to version control systems.",
    "reasoning_summary": "While the piece addresses branching issues and software development pain points relevant to version control, it makes no specific mention or exploration of GitHub tools or practices. For this reason, the fit for the GitHub category is extremely low.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "un1ZqM8aYng",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T20:28:56",
    "ai_confidence": 7.98,
    "ai_mentions": 0.13,
    "ai_alignment": 0.35,
    "ai_depth": 0.37,
    "ai_intent": 0.24,
    "ai_audience": 6.22,
    "ai_signal": 6.34,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content is focused on the difficulties of supporting multiple versions in production, specifically issues like merge conflicts, back-porting, and technical debt. It uses technical language and is targeted at engineers, which aligns with the audience for Azure Pipelines content. However, there is no explicit mention of Azure Pipelines, CI/CD, or related practices. The discussion centers on branching strategies and production challenges in general, without connecting these challenges to Azure Pipelines usage, configuration, or optimization. Consequently, the content only loosely aligns with the Azure Pipelines category on conceptual and audience grounds, and not on purpose, depth, or direct topical relevance. No penalties were applied as the content is current and neutrally toned.",
    "reasoning_summary": "This content addresses engineering challenges with multiple production versions but does not mention Azure Pipelines or CI/CD. Its technical focus fits the practitioner audience but lacks direct or substantial relevance to the Azure Pipelines category.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "un1ZqM8aYng",
    "category": "Leadership",
    "calculated_at": "2025-05-16T20:28:56",
    "ai_confidence": 16.85,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 1.7,
    "ai_intent": 1.8,
    "ai_audience": 6.3,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on the engineering challenges and inefficiencies introduced by supporting multiple production versions, such as merge conflicts, technical debt, and branch strategy issues. There are no explicit mentions of leadership, nor does it address leadership roles, behaviors, or decision-making in the Agile/DevOps context. While the recommendation to 'standardise, simplify, and move forward' could be interpreted as advice leaders might give, the main themes are technical and process-oriented, aimed at engineering teams rather than leaders or leadership practices. Minimal alignment, depth, and intent toward leadership are present, though the content targets an audience that could include leaders in passing.",
    "reasoning_summary": "This content centers on technical challenges with multiple production versions, lacking focus on leadership concepts or practices. While engineers and potential leaders might find it relevant, its purpose is not aligned with leadership topics in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "un1ZqM8aYng",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T20:28:56",
    "ai_confidence": 12.65,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.6,
    "ai_intent": 2.3,
    "ai_audience": 3.4,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on the engineering impact and inefficiencies of supporting multiple production versions, highlighting technical debt, bugs, and workflow pain. There is no explicit or implicit reference to customer retention strategies, customer engagement, feedback loops, or user experience. The primary audience is engineering teams, not those concerned directly with customer retention outcomes. While stable production practices can indirectly support customer satisfaction, the discussion here is narrowly technical and oriented toward developer productivity, not customer retention.",
    "reasoning_summary": "This content centers on engineering challenges and inefficiencies, offering no direct discussion of customer retention or related strategies. It's technical in nature and not aligned with the category's goals or audience, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "un1ZqM8aYng",
    "category": "Ethos",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 14.05,
    "ai_mentions": 1.7,
    "ai_alignment": 1.9,
    "ai_depth": 1.3,
    "ai_intent": 2.2,
    "ai_audience": 4.7,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on the practical drawbacks of supporting multiple production versions, emphasizing negative impacts like technical debt, instability, and wasted effort. While it implicitly suggests a preference for standardization and simplicity, it doesn't examine or discuss foundational beliefs, system ethos, or underlying convictions. There are no explicit or deep references to ethos or the system-level values that sustain authentic delivery. The focus is entirely on technical pain points and process inefficiencies, not on core beliefs or system behaviour.",
    "reasoning_summary": "This content critiques technical practices but doesn't discuss underlying beliefs or system ethos. It addresses process pain points—not core convictions or systemic values—so it does not fit the 'Ethos' category.",
    "level": "Ignored"
  },
  "Windows": {
    "resourceId": "un1ZqM8aYng",
    "category": "Windows",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 3.286,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 1.3,
    "ai_intent": 1.5,
    "ai_audience": 2.6,
    "ai_signal": 1.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content discusses the engineering and process burden of supporting multiple production versions, focusing on software development workflows (merge conflicts, technical debt, branching strategies). It never mentions Windows or addresses the Windows environment; the challenges discussed are generic, not exclusive to Windows. None of the outlined key topics (installation, troubleshooting, updates, etc.) are present. The intent, audience, and substance are centered on general software engineering, not Windows-specific concerns.",
    "reasoning_summary": "This content addresses general software engineering pain points about managing multiple production versions and does not reference or pertain to Windows. It lacks any Windows-related context, discussion, or targeted audience fit for the Windows category.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "un1ZqM8aYng",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T20:28:58",
    "ai_confidence": 12.3,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 6.5,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content is heavily focused on technical challenges and the inefficiencies of supporting multiple versions in production. There are no direct mentions of organisational culture, nor is there any discussion of leadership, team dynamics, cultural transformation, or related themes. The content does not explore culture’s influence on technical practices, and its main audience is technical teams. Only an indirect link exists, as culture may influence technical decisions, but this is not explored.",
    "reasoning_summary": "This content is deeply technical and does not address organisational culture, leadership, or team dynamics. It focuses on versioning issues, offering little to no relevant cultural insight, so confidence in the category fit is extremely low.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "un1ZqM8aYng",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 21.475,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.5,
    "ai_audience": 7.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the engineering burden of maintaining multiple production versions, such as increased bugs, merge conflicts, and technical debt. While these challenges can indirectly impact a team's ability to innovate by reducing available time and adding complexity, the text never explicitly addresses innovation, innovation metrics, or practices to foster innovation. It does not reference Evidence-Based Management, Agile, DevOps philosophies, nor discuss mechanisms to improve innovation capacity. The core intent is operational efficiency and codebase management, not innovation per se.",
    "reasoning_summary": "This content is about technical debt and challenges from supporting many production versions, not innovation practices or metrics. There’s minimal conceptual overlap with Ability to Innovate, so the alignment is low and the confidence score reflects that.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "un1ZqM8aYng",
    "category": "Practice",
    "calculated_at": "2025-05-16T20:28:58",
    "ai_confidence": 57.15,
    "ai_mentions": 2.7,
    "ai_alignment": 6.4,
    "ai_depth": 5.9,
    "ai_intent": 5.3,
    "ai_audience": 7.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content critiques the practice of supporting multiple production versions, detailing the pitfalls of reverse integration and branch-by-customer. While it discusses workflow and branching strategies (tangentially related to Practice), it does not directly outline actionable techniques to improve team delivery or continuous improvement. Core 'Practice' themes—like retrospectives, pair programming, or Kanban—are absent. Mentions are indirect and the guidance lacks detail on positive, repeatable habits, which reduces conceptual alignment and depth. The audience and signal fit reasonably well, but the focus is more on warning against certain practices rather than prescribing actionable, continuous improvement habits.",
    "reasoning_summary": "While the content describes pitfalls in version support and advocates for simplified workflows, it doesn't deliver concrete, repeatable practices. It aligns with parts of the 'Practice' category but lacks specific actionable techniques, resulting in moderate confidence.",
    "level": "Tertiary"
  },
  "Increment": {
    "resourceId": "un1ZqM8aYng",
    "category": "Increment",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 11.8,
    "ai_mentions": 0.4,
    "ai_alignment": 1.6,
    "ai_depth": 1.7,
    "ai_intent": 2.2,
    "ai_audience": 3.2,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content addresses the challenges of maintaining multiple production versions and branching strategies. It indirectly alludes to issues that could be mitigated by regular delivery of increments, but does not mention the term 'Increment,' Agile, Scrum, or related concepts directly. Thus, direct mentions are absent, and conceptual alignment is weak since the focus is technical debt, merge conflicts, and branching rather than the delivery of working increments. The target audience is relevant (engineering teams), but the content is not centered on iterative delivery or increment best practices. There is minimal depth in discussing anything increment-related; the primary discussion is version control management complications.",
    "reasoning_summary": "This piece focuses on the technical drawbacks of managing multiple production versions and complex branching, with no direct connection to Agile increments. While relevant to an engineering audience, it only weakly relates to the Increment category.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "un1ZqM8aYng",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T20:29:01",
    "ai_confidence": 11.6,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 1.3,
    "ai_intent": 1.2,
    "ai_audience": 4.8,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content critiques the engineering drawbacks of supporting multiple production versions, emphasizing technical debt and workflow inefficiency. There are no direct or conceptual links to Lean Startup principles. No mention of MVPs, validated learning, build-measure-learn, or startup experimentation appears anywhere. The intent, depth, and alignment are not relevant to Lean Startup's framework; the focus is general software engineering. The audience is technical, matching partially, but the topic remains outside the Lean Startup category.",
    "reasoning_summary": "This piece is squarely about software engineering challenges, not Lean Startup principles. There’s no discussion of MVPs, iterative learning, or validation cycles. It doesn’t fit the Lean Startup category and delivers minimal confidence in that classification.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "un1ZqM8aYng",
    "category": "Throughput",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 13.1,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.0,
    "ai_intent": 2.0,
    "ai_audience": 6.3,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on the engineering complexities and hidden costs of supporting multiple versions in production. It discusses technical debt, inefficiency, context-switching, and merge conflicts. However, it never directly mentions throughput as a delivery metric, nor does it analyse, visualise, or interpret throughput data. The discussion is centered around branching strategies and team efficiency, but lacks meaningful conceptual or thematic alignment with how throughput is measured, tracked, or used to evaluate delivery health. There is no discussion of Cumulative Flow Diagrams, system constraints as analysed through throughput, or trends in throughput. The content’s audience (engineering teams) partially overlaps, but its overall alignment with the throughput category is very low.",
    "reasoning_summary": "This content addresses engineering inefficiencies from supporting multiple versions, but it doesn’t discuss, interpret, or even mention throughput as a delivery metric. While slightly relevant to delivery capacity in spirit, it isn’t a fit for the Throughput category.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T20:28:57",
    "ai_confidence": 9.2,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 0.7,
    "ai_intent": 0.7,
    "ai_audience": 2.8,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses on the challenges of supporting multiple production versions, such as merge conflicts and technical debt. It critiques practices like branch by customer and reverse integration but never mentions or discusses asynchronous development, its principles, tools, or team workflows. Its core themes are version control and process optimization, not asynchronous collaboration. The target audience (engineering teams) has some overlap, but the content does not align conceptually or topically with the category requirements.",
    "reasoning_summary": "This content centers on versioning challenges and branching strategies, not asynchronous development practices. There is little to no overlap with the principles or topics of asynchronous development, leading to a very low categorization confidence.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "un1ZqM8aYng",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T20:28:58",
    "ai_confidence": 49.925,
    "ai_mentions": 2.4,
    "ai_alignment": 5.7,
    "ai_depth": 4.6,
    "ai_intent": 4.2,
    "ai_audience": 6.0,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 50.0,
    "reasoning": "The content focuses on the problems with supporting multiple production versions—such as merge conflicts, bugs, and technical debt—but does not directly discuss 'Frequent Releases' or core practices like continuous delivery/deployment, automation, or DevOps. However, it implicitly supports simplification and standardisation, which align with principles that enable frequent releases. The depth and intent are moderate, and the content is relevant for engineering audiences facing release challenges, but it does not substantially explore solutions or best practices associated with frequent releases. No outdated or contradictory information is present, and no penalties were applied.",
    "reasoning_summary": "This content highlights why maintaining multiple production versions is costly, implicitly supporting the move toward frequent releases. However, it lacks direct discussion of release practices, so the fit is moderate for the Frequent Releases category.",
    "level": "Tertiary"
  },
  "Philosophy": {
    "resourceId": "un1ZqM8aYng",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 13.85,
    "ai_mentions": 0.9,
    "ai_alignment": 1.4,
    "ai_depth": 1.2,
    "ai_intent": 2.0,
    "ai_audience": 5.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on the practical challenges and inefficiencies of supporting multiple production versions, emphasizing issues like technical debt, merge conflicts, and instability. While it promotes the value of process simplification and standardization, it does not discuss foundational beliefs, philosophical underpinnings, or cultural models (e.g., Agile or DevOps philosophy). There is only tangential alignment with the Philosophy category—namely, through high-level recommendations—but it lacks depth, direct philosophical discussion, or references to theory or organizational culture.",
    "reasoning_summary": "This content zeroes in on practical engineering issues, not on underlying philosophical frameworks. Advice to simplify process is pragmatic, not philosophical—leaving only minimal, indirect alignment with the Philosophy category.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "un1ZqM8aYng",
    "category": "Tool",
    "calculated_at": "2025-05-16T20:29:01",
    "ai_confidence": 16.95,
    "ai_mentions": 0.6,
    "ai_alignment": 2.7,
    "ai_depth": 2.2,
    "ai_intent": 2.5,
    "ai_audience": 6.1,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content discusses process and technical debt arising from supporting multiple production versions, focusing on challenges like context switching, merge conflicts, and regressions. While it references practices (branching strategies, back-porting), no specific tools, software, or implementation technologies are named. The main themes are practical and engineering-focused but lack direct tool discussion, minimal alignment with the Tool category, and have limited depth on tool integration or selection. No penalties applied as the content is current and not critical of tools directly.",
    "reasoning_summary": "This content focuses on the challenges of supporting multiple production branches, not on specific tools or their application. While relevant to technical teams, it doesn't discuss software tools or their role, resulting in low confidence for the Tool category fit.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "resourceId": "un1ZqM8aYng",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T20:28:59",
    "ai_confidence": 74.23,
    "ai_mentions": 2.2,
    "ai_alignment": 7.6,
    "ai_depth": 6.9,
    "ai_intent": 7.8,
    "ai_audience": 7.2,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content directly discusses issues of technical debt, workflow inefficiency, and branching strategies—topics highly relevant to technical leadership. It doesn't explicitly mention 'technical leadership,' but it speaks to leaders influencing practices for teams and managing technical complexity. The alignment and depth scores are strong, since the discussion targets architectural decision-making and team process improvement. There are no penalties, as the practices discussed are not outdated or contradictory. The audience is technical, suitable for engineering leaders or architects. The slightly lower 'mentions' is due to no explicit category naming, while signal/noise remains high.",
    "reasoning_summary": "This content is highly relevant to technical leaders, focusing on technical debt and branching strategies that directly affect team performance. It doesn't explicitly mention technical leadership, but provides actionable insight for those guiding engineering teams and managing complexity.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "resourceId": "un1ZqM8aYng",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 17.87,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.3,
    "ai_intent": 2.1,
    "ai_audience": 6.2,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content criticizes the practice of supporting multiple versions in production, emphasizing its costs and technical debt for engineering teams. While aimed at Agile/DevOps practitioners, it never mentions continuous learning or related concepts, practices, or mindsets; nor does it discuss knowledge sharing, experimentation, improvement, or growth. Its focus is on technical strategy, not learning. Thus, only minor alignment exists—primarily in advocating for process improvement.",
    "reasoning_summary": "This content focuses on the inefficiencies of supporting multiple production versions, lacking discussion of growth mindsets, learning practices, or team improvement. It doesn't address continuous learning themes, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T20:29:03",
    "ai_confidence": 18.05,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.1,
    "ai_intent": 1.9,
    "ai_audience": 5.4,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content addresses challenges related to managing multiple versions in production, merge conflicts, and technical debt. However, it contains no explicit mentions of Agile Transformation, and it does not discuss Agile philosophies, frameworks, change management strategies, or organisational transformation themes. Its purpose is practical engineering guidance, not transformation. The only possible weak alignment is in its tone of advocating simplification, but without connection to organisational agility or transformation, the fit is minimal.",
    "reasoning_summary": "This content focuses on engineering workflow challenges from supporting multiple production versions. It doesn’t mention Agile Transformation or organisational agility, so its relevance to the category is low.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Management",
    "calculated_at": "2025-05-16T20:29:04",
    "ai_confidence": 32.02,
    "ai_mentions": 1.1,
    "ai_alignment": 3.8,
    "ai_depth": 3.7,
    "ai_intent": 2.5,
    "ai_audience": 7.2,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on technical challenges and engineering inefficiencies caused by supporting multiple production versions. There are no direct references to product management, its strategic aspects, or methodologies. While it concerns product delivery risks, the main themes revolve around development pain points, not product management strategy. The audience could include product managers, but the discussion is aimed at technical and engineering practitioners. Depth is moderate but not aligned with strategic product management content.",
    "reasoning_summary": "This content highlights the technical drawbacks of managing multiple production versions, targeting engineering teams more than product managers. It lacks direct ties to product management strategy, so the fit to the category is low.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "resourceId": "un1ZqM8aYng",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 78.36,
    "ai_mentions": 3.2,
    "ai_alignment": 8.5,
    "ai_depth": 7.4,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content discusses operational issues related to supporting multiple production versions, such as increased bugs, merge conflicts, technical debt, and the waste of engineering time. It identifies negative practices (e.g., branch by customer) and advocates for simplifying and standardizing workflows, aligning with process optimization and reducing waste as outlined in Operational Practices. While it doesn't directly mention frameworks like Agile, Lean, or DevOps, its core message is process improvement for delivery efficiency. The discussion is substantial but lacks explicit references to the category terms.",
    "reasoning_summary": "The content effectively highlights practical issues with multi-version support, offering actionable advice for process simplification and efficiency. It fits Operational Practices well by focusing on real-world workflow improvements relevant to engineering teams, though it doesn’t use direct category terminology.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "resourceId": "un1ZqM8aYng",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 18.1,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.5,
    "ai_intent": 2.1,
    "ai_audience": 6.2,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content addresses challenges associated with supporting multiple versions in production, primarily focusing on increased technical debt, bugs, and inefficiencies for engineering teams. However, it does not reference or discuss complexity science, complexity thinking principles, or relevant frameworks such as the Cynefin Framework. There is no substantive engagement with non-linear dynamics, emergence, or uncertainty. The approach is linear and reductionist, recommending simplification and standardisation. As such, alignment, depth, and direct mentions remain low, and the overall confidence is limited.",
    "reasoning_summary": "This content focuses on the operational downsides of supporting multiple software versions but doesn't touch on complexity theory or relevant frameworks. Its advice is practical and reductionist rather than complexity-oriented, resulting in a low fit for the 'Complexity Thinking' category.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "un1ZqM8aYng",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 11.7,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 2.0,
    "ai_audience": 3.2,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content thoroughly discusses the challenges of supporting multiple versions in production, such as technical debt and complex branching strategies. However, it never mentions Azure DevOps, nor does it discuss tooling, processes, or practices unique to Azure DevOps. While the topic is relevant to technical audiences who might use Azure DevOps, all concepts addressed are generic and could apply to any software development or DevOps environment. There is no evidence of a substantial discussion specific to Azure DevOps tooling, methodology, or ecosystem, resulting in a low confidence score for this category.",
    "reasoning_summary": "Although the content addresses issues relevant to development workflows and branching strategies, it does not mention or engage with Azure DevOps, nor does it focus on its tools or principles. Thus, the fit with the Azure DevOps category is low.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "un1ZqM8aYng",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T20:29:04",
    "ai_confidence": 33.54,
    "ai_mentions": 1.3,
    "ai_alignment": 3.1,
    "ai_depth": 3.6,
    "ai_intent": 3.1,
    "ai_audience": 8.3,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content does not directly mention 'flow efficiency' or its core terminology. Its focus is on the development pain and inefficiency caused by supporting multiple production versions. While these inefficiencies indirectly relate to flow, there is no explicit discussion of value stream mapping, throughput, cycle time, bottleneck identification, or Lean/Agile practices. Key dimensions, such as conceptual alignment and depth, are weak due to the lack of focused discussion on optimising flow. The target audience is engineering teams, which aligns, but the main intent is to critique branching strategies rather than advise on flow optimisation.",
    "reasoning_summary": "This content highlights pain points from multi-version support but does not discuss flow efficiency concepts or solutions explicitly. It's relevant to engineering teams and touches on process inefficiency, but lacks direct connection to value stream optimisation, resulting in a low confidence fit.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "resourceId": "un1ZqM8aYng",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T20:29:06",
    "ai_confidence": 19.15,
    "ai_mentions": 0.2,
    "ai_alignment": 2.0,
    "ai_depth": 2.1,
    "ai_intent": 2.4,
    "ai_audience": 7.3,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on technical challenges with supporting multiple production versions, highlighting inefficiencies and technical debt. It advocates for standardization and simplification, but does not discuss strategic goals, long-term objectives, or alignment with agile principles. The primary topic is operational process improvement rather than broader organizational strategy. Very few direct category mentions; superficial conceptual alignment; no deep exploration of strategy; target audience (engineering teams) differs from that of strategic decision-makers.",
    "reasoning_summary": "This content addresses operational pain points in software production, focusing on efficiency and technical process rather than strategic goals or organizational agility. While it hints at improvement and standardization, it doesn't meaningfully engage with long-term strategic objectives, keeping its alignment with the category low.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "un1ZqM8aYng",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 2.8,
    "ai_mentions": 0.0,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 2.0,
    "ai_audience": 8.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content discusses engineering pain points around supporting multiple production versions, focusing on merge conflicts, technical debt, and branching strategy. There are no direct or indirect mentions of Liberating Structures or facilitation techniques. The subject is not conceptually aligned, lacks relevant depth, and intent is wholly about development process improvements, not facilitation or engagement. The only marginal alignment is that both audiences might overlap (technical teams), but all other scoring dimensions are low given the absence of relevant content.",
    "reasoning_summary": "This content is about software branching and versioning, not Liberating Structures. There’s no discussion of facilitation techniques, engagement, or teamwork structuring, so it’s an extremely poor fit for the category.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "un1ZqM8aYng",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 44.4,
    "ai_mentions": 1.6,
    "ai_alignment": 4.7,
    "ai_depth": 4.9,
    "ai_intent": 4.5,
    "ai_audience": 6.4,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "Direct mentions of 'value delivery' or its synonyms are absent; discussion centers on technical and team efficiency drawbacks of multiple production versions. While streamlined release processes relate to value delivery in Agile/DevOps, the content focuses more on engineering pain points than on iterative delivery or maximising customer value. The audience is practitioners (engineers), suggesting partial overlap, but the focus is technical impact, not explicit value outcomes.",
    "reasoning_summary": "This content discusses technical drawbacks of supporting many production versions. While simplifying releases can aid value delivery, the article stops short of explicit value-based strategies, focusing mostly on developer efficiency rather than customer impact.",
    "level": "Tertiary"
  },
  "Organisational Physics": {
    "resourceId": "un1ZqM8aYng",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 19.25,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.1,
    "ai_intent": 2.2,
    "ai_audience": 6.2,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on engineering challenges around maintaining multiple production versions, highlighting technical debt, merge conflicts, and branching strategies. While it examines inefficiencies from a team perspective, it does not reference or explore systems thinking, organisational dynamics, or the holistic approaches central to Organisational Physics. The themes are narrowly scoped to software engineering operational pain points rather than the broader organisational interplay of structure, culture, or feedback loops. The intended audience is engineering practitioners, not those interested in organisational systems analysis.",
    "reasoning_summary": "This content addresses technical challenges with supporting multiple software versions, centering on engineering team workflows. It lacks any discussion of systems thinking or organisational dynamics, offering minimal alignment with Organisational Physics.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "un1ZqM8aYng",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T20:29:03",
    "ai_confidence": 6.5,
    "ai_mentions": 0.1,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.9,
    "ai_audience": 2.0,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content explores the technical and process-oriented burdens of supporting multiple production versions, focusing on bugs, merge conflicts, technical debt, and inefficiency for engineering teams. There are no direct mentions or implicit discussion of psychological safety, its principles, or its impact on team culture, openness, or well-being. The article targets process optimization and developer experience, not psychological safety.",
    "reasoning_summary": "This article highlights technical and workflow challenges of multiple production versions but never addresses psychological safety. Its focus is on process and efficiency, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "un1ZqM8aYng",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T20:29:05",
    "ai_confidence": 13.15,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.9,
    "ai_intent": 1.3,
    "ai_audience": 6.6,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses engineering inefficiencies and technical challenges related to supporting multiple software versions in production. It focuses on issues like technical debt, merge conflicts, and development pain points, which are core to software engineering and team management, not entrepreneurship. There is no explicit mention of entrepreneurship, nor does the intent, concepts, or depth address entrepreneurial principles such as innovation, risk-taking, or value creation. The audience is clearly technical (engineering teams), not aspiring or current entrepreneurs. The signal-to-noise ratio is decent, as the content is focused, but still off-topic for the 'Entrepreneurship' category.",
    "reasoning_summary": "This content is about engineering challenges, not entrepreneurship. It lacks alignment with entrepreneurial concepts or audience, resulting in a very low confidence score for this category.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "un1ZqM8aYng",
    "category": "Framework",
    "calculated_at": "2025-05-16T20:29:07",
    "ai_confidence": 21.629,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 3.8,
    "ai_audience": 6.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content critiques the challenges of supporting multiple versions in production, focusing on technical debt, branching strategies, and workflow pain points. It does not mention Agile/DevOps/Lean frameworks, nor does it discuss implementing or adapting structured methodologies. Audience is technical, but there's no substantial coverage of frameworks; discussion stays at process and operational pain points, not at the methodology level.",
    "reasoning_summary": "This content analyzes technical issues in managing multiple production versions, focusing on workflow inefficiencies and technical debt. However, it does not discuss frameworks or structured methodologies, offering little alignment to the 'Framework' category beyond intersecting with engineering practices.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "un1ZqM8aYng",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T20:29:10",
    "ai_confidence": 47.0,
    "ai_mentions": 0.3,
    "ai_alignment": 6.8,
    "ai_depth": 5.9,
    "ai_intent": 6.4,
    "ai_audience": 8.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content does not directly mention Lean Principles, its terminology, or specific tools. However, it indirectly aligns by criticizing inefficiencies (waste) related to supporting multiple production versions and advocating for simplification and process improvement. The focus is on identifying, describing, and discouraging wasteful practices—core to Lean thinking—but without explicitly referencing the framework or its principles. The depth is moderate, exploring multiple problems and making recommendations, but it doesn't delve into continuous improvement (Kaizen), Lean tools, or broader Lean philosophy. The audience (engineering teams, technical leaders) is compatible, and the content stays focused on process issues relevant to Lean, though it never names Lean itself. No penalties apply, as content is current and not satirical or undermining.",
    "reasoning_summary": "This content critiques wasteful engineering practices and advises simplification, showing solid conceptual alignment with Lean Principles. However, it doesn't reference Lean directly or explore its tools, so confidence in full category fit is moderate.",
    "level": "Tertiary"
  },
  "Scrum": {
    "resourceId": "un1ZqM8aYng",
    "category": "Scrum",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 19.3,
    "ai_mentions": 0.7,
    "ai_alignment": 2.6,
    "ai_depth": 2.1,
    "ai_intent": 2.5,
    "ai_audience": 7.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content addresses software engineering challenges, specifically the drawbacks of supporting multiple production versions and poor branching strategies. While issues like technical debt and inefficiency can intersect with themes Scrum cares about, there is no explicit mention of Scrum, its events, roles, artifacts, or Agile principles. The content instead focuses on version control and workflow, not Scrum methodology—or project management or improvement discussions per the Scrum Guide. While engineering teams are a potential audience for Scrum, this discussion is more generic, lacking substantive alignment or depth on Scrum-specific practices or philosophy.",
    "reasoning_summary": "The content critiques inefficient branching strategies in engineering teams, but does not mention or deeply align with Scrum concepts. Its focus is technical process, not Scrum framework or philosophy, so confidence in this categorization is very low.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "un1ZqM8aYng",
    "category": "Principle",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 41.05,
    "ai_mentions": 1.6,
    "ai_alignment": 5.8,
    "ai_depth": 4.7,
    "ai_intent": 4.8,
    "ai_audience": 8.0,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content addresses the negative technical impacts of supporting multiple versions in production, advising simplification and standardisation. However, it does not directly mention or explore principles such as empiricism or continuous improvement in depth. There is some conceptual alignment, as recommendations to reduce technical debt and streamline processes echo Lean or DevOps principles, but these connections are not made explicit. The piece is targeted at technical practitioners and is concise without drifting off-topic. Its depth and overt alignment to 'Principle' are limited.",
    "reasoning_summary": "While the article hints at principles like simplification and efficiency, it never explicitly discusses foundational or guiding principles. Its advice aligns on a surface level but doesn't delve into actionable principles or directly reference them. Confidence is moderate.",
    "level": "Tertiary"
  },
  "Product Owner": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T20:29:00",
    "ai_confidence": 8.36,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.8,
    "ai_intent": 1.2,
    "ai_audience": 2.3,
    "ai_signal": 1.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses strictly on development and engineering challenges of supporting multiple production versions. There are no specific or implicit references to the Product Owner accountability, no discussion of backlog, prioritisation, stakeholder alignment, or strategic value delivery. There are minimal cues of audience overlap, but not enough to suggest Product Owner relevance. The overall intent is directed at engineering process improvement, not Scrum roles.",
    "reasoning_summary": "This content is highly focused on engineering and version control issues, with no meaningful reference to the Product Owner role or its unique responsibilities. It does not fit the 'Product Owner' category.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "un1ZqM8aYng",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T20:29:01",
    "ai_confidence": 13.8,
    "ai_mentions": 0.0,
    "ai_alignment": 1.7,
    "ai_depth": 2.6,
    "ai_intent": 2.2,
    "ai_audience": 5.2,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content critiques the practice of supporting multiple production versions, focusing on engineering inefficiencies, bugs, merge conflicts, and technical debt. There is no mention of Minimum Viable Product, MVP methodology, or market validation. While the piece targets product/engineering teams—a similar audience to MVP discussions—it does not address core MVP concepts or strategies, resulting in low conceptual alignment and depth. The content’s intent and examples are process-focused, not MVP-centric.",
    "reasoning_summary": "This content analyzes the drawbacks of supporting multiple production versions but doesn't mention or align with MVP principles. The audience overlaps, yet the main focus is code/branching strategies, not MVP development or validation, so the fit with the category is weak.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "un1ZqM8aYng",
    "category": "Observability",
    "calculated_at": "2025-05-16T20:29:01",
    "ai_confidence": 16.36,
    "ai_mentions": 0.55,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 2.1,
    "ai_audience": 7.1,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content critiques the challenges of supporting multiple versions in production, focusing on technical debt, merge conflicts, and engineering inefficiency. It does not mention observability, metrics, monitoring, logs, or the ability to understand internal states of systems. Its theme centers on code management and branching strategy rather than observability or its principles. The target audience (engineering teams) marginally overlaps with that of observability discussions, but the content itself is not conceptually or practically tied to observability. There are no outdated or contradictory elements, so no penalties apply, and the low scores across conceptual relevance and direct mentions reflect the weak fit.",
    "reasoning_summary": "This content explores versioning and branching challenges in software development, not observability. It lacks any mention of observability concepts, tools, or practices, and focuses instead on engineering process and code management concerns.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "un1ZqM8aYng",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T20:29:03",
    "ai_confidence": 9.48,
    "ai_mentions": 0.25,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 2.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content discusses the engineering challenges and inefficiencies tied to supporting multiple software versions in production—such as technical debt and merge conflicts—but does not mention Decision Theory, its principles, or key concepts like heuristics, probability, or behavioral economics. Its focus is on process optimization and technical pitfalls, not decision-making under uncertainty. The audience appears to be technical practitioners, not those exploring decision-making frameworks. As such, while implicitly relating to decisions about software branching strategies, it does not align in depth, mention, or intent with the Decision Theory category.",
    "reasoning_summary": "This piece critiques multi-version support in software development, focusing on technical inefficiencies rather than decision-making theory. It doesn't reference Decision Theory or its concepts, so confidence in this category fit is very low.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "un1ZqM8aYng",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 64.15,
    "ai_mentions": 2.4,
    "ai_alignment": 8.1,
    "ai_depth": 6.25,
    "ai_intent": 7.2,
    "ai_audience": 9.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content discusses how supporting multiple production versions causes inefficiencies, technical debt, and engineering pain, clearly connecting these to degraded technical practices. While it doesn't explicitly mention 'Technical Excellence' or use key terms (TDD, CI/CD, modularity), the focus on engineering health, branch strategy, and quality aligns well conceptually. The discussion is moderately deep but could better articulate high-level technical excellence principles or cite improvement strategies. No penalties applied, as the content is current and non-contradictory.",
    "reasoning_summary": "This content strongly aligns with Technical Excellence by highlighting how poor versioning and branching strategies undermine engineering quality and efficiency. While it lacks direct references to core practices, its focus on the systemic impact of technical decisions makes it a solid fit for the category.",
    "level": "Secondary"
  },
  "Software Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Software Development",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 91.63,
    "ai_mentions": 7.6,
    "ai_alignment": 9.7,
    "ai_depth": 8.9,
    "ai_intent": 9.2,
    "ai_audience": 9.3,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses challenges in software development, focusing on version control practices and their impact on engineering productivity, technical debt, and code quality. Concepts such as merge conflicts, reverse integration, and branching strategies are discussed with depth and industry relevance. The primary audience is software engineers, with detailed advice aligning with best practices. No outdated or contradictory material was found, so no penalties applied.",
    "reasoning_summary": "This piece deeply analyzes the negatives of supporting multiple software versions, addressing branching, technical debt, and engineering inefficiency—core software development concerns with strong relevance and actionable insights. The targeted audience is clearly software practitioners.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "un1ZqM8aYng",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T20:29:05",
    "ai_confidence": 41.005,
    "ai_mentions": 0.6,
    "ai_alignment": 4.6,
    "ai_depth": 4.1,
    "ai_intent": 4.0,
    "ai_audience": 8.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content largely discusses the challenges and inefficiencies caused by supporting multiple production versions, such as increased bugs, merge conflicts, regressions, and technical debt. However, these are described in terms of overhead and risks, not explicit troubleshooting practices or methodologies. While there is incidental alignment—problems like bugs and unstable integrations are relevant to troubleshooting—the content prioritizes highlighting strategic pitfalls and workflow pain rather than identifying and resolving specific technical issues. There are no troubleshooting tools, systematic methodologies, or actionable steps for diagnosing or fixing problems. The audience (engineering teams) is relevant, and bug-related obstacles are cited, but the discussion aligns more closely with process management than with in-depth troubleshooting guidance. Thus, alignment and depth scores are modest, and direct category mention is very limited.",
    "reasoning_summary": "While the content highlights pain points like bugs and regressions from multi-version support, it focuses on strategic pitfalls and process inefficiency, not hands-on troubleshooting techniques or solutions. It’s somewhat relevant to troubleshooting but lacks direct alignment and practical problem-solving guidance.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T20:29:07",
    "ai_confidence": 5.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.7,
    "ai_intent": 1.3,
    "ai_audience": 1.9,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content discusses the problems of supporting multiple production versions and advocates for simplifying branching strategies. It does not reference experimentation, hypothesis-driven approaches, validation, or agile testing methods. Its primary focus is technical debt and workflow pain points, not experimenting or learning through hypotheses. The target audience (engineering teams) partially aligns, but the purpose and themes lack substantive relevance to 'Experimentation.'",
    "reasoning_summary": "This piece focuses on the technical debt of multi-version support, with no real mention of experimentation or hypothesis-driven practice. While the audience and context are tangentially related to Agile teams, the content itself is not relevant to 'Experimentation.'",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T20:29:08",
    "ai_confidence": 22.9,
    "ai_mentions": 0.3,
    "ai_alignment": 2.6,
    "ai_depth": 2.1,
    "ai_intent": 2.5,
    "ai_audience": 7.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content discusses engineering inefficiencies caused by supporting multiple production versions. While it recognizes technical and process issues (e.g., technical debt, merge conflicts), it doesn't mention Evidence-Based Management, use empirical metrics, or emphasize outcome or data-driven management. No EBM concepts (Current Value, Time to Market, etc.) or empirical decision-making processes are referenced. The audience is engineering-focused, somewhat aligning with EBM but the signal-to-noise ratio is low for EBM relevance.",
    "reasoning_summary": "This content centers on technical pain points of multi-version support, not evidence-based management. It lacks EBM concepts, metrics, or empirical framing, making its alignment with the category weak despite targeting a technical audience.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Estimation",
    "calculated_at": "2025-05-16T20:29:10",
    "ai_confidence": 6.3,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 1.6,
    "ai_intent": 1.3,
    "ai_audience": 3.9,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses on the engineering costs and challenges of supporting multiple production versions, such as context-switching, merge conflicts, and technical debt. At no point does it explicitly discuss estimation, forecasting, Agile or Scrum estimation techniques, empirical data, or collaborative processes—all core to the intended category. The only weak relevance is the general overlap of audiences (development teams that also might do estimation) and possible indirect impact on planning. No penalties were necessary, as the content is current and does not contradict the category's framing, but scores are low due to surface alignment and lack of direct or in-depth connection.",
    "reasoning_summary": "This content warns about engineering challenges from supporting multiple software versions, but doesn't address Agile estimation practices directly or indirectly. It lacks mentions, depth, and focus on estimation and is only weakly relevant, so receives a very low confidence score for this category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "un1ZqM8aYng",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 1.2,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.7,
    "ai_intent": 2.1,
    "ai_audience": 3.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 1.0,
    "reasoning": "The content discusses challenges with supporting multiple production versions, focusing on technical debt, branching strategies, and engineering team inefficiencies. There are no direct or indirect mentions of Daily Scrum or its core topics. The intent, audience, and focus do not align with Daily Scrum, but are instead relevant to software engineering best practices. No penalties applied, as there are no outdated or contrarian aspects.",
    "reasoning_summary": "This content covers engineering pain points from managing production versions and branching, without any mention or alignment to Daily Scrum. It doesn't fit the category, so confidence is extremely low.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T20:29:02",
    "ai_confidence": 11.05,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 1.1,
    "ai_audience": 4.8,
    "ai_signal": 2.75,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content is focused on the engineering challenges of maintaining multiple software versions in production, emphasizing developer workflow and technical debt. It does not reference portfolio management, nor does it align thematically with strategic alignment, investment prioritization, or value stream optimization. The intended audience is software engineers, not portfolio managers, with no discussion of portfolio-level practices or frameworks.",
    "reasoning_summary": "The content centers on development team challenges from versioning—not on portfolio management strategies. There are no direct or conceptual connections to aligning initiatives with business strategy or managing a portfolio of projects, so the content does not fit the category.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "un1ZqM8aYng",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T20:29:06",
    "ai_confidence": 69.6,
    "ai_mentions": 3.7,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 9.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content intricately discusses the engineering impact of supporting multiple production versions, focusing on technical debt, merge conflicts, bugs, and branching strategies. While it doesn't explicitly name core engineering practices (like CI/CD or TDD), it addresses the consequences of non-standard branching on code quality and efficiency, aligning closely with the intent of promoting clean code, automation, and efficient engineering workflows. The depth of analysis goes beyond surface complaints, offering prescriptive advice to standardize and simplify. The piece is highly relevant for technical practitioners, with clear signal and minimal tangential content, though not all key topics are explicitly mentioned.",
    "reasoning_summary": "This content strongly aligns with Engineering Practices, examining branching strategies, technical debt, and their impact on code quality and efficiency. While direct naming of core practices is limited, the discussion is highly relevant and targeted at technical teams, offering practical advice to improve engineering workflow.",
    "level": "Secondary"
  },
  "Lean": {
    "resourceId": "un1ZqM8aYng",
    "category": "Lean",
    "calculated_at": "2025-05-16T20:29:09",
    "ai_confidence": 38.25,
    "ai_mentions": 0.7,
    "ai_alignment": 4.6,
    "ai_depth": 3.5,
    "ai_intent": 3.4,
    "ai_audience": 7.8,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content centers on the inefficiencies of supporting multiple production versions, emphasizing wasted engineering effort, increased bugs, and technical debt. These indirectly relate to Lean themes (waste, process simplification), but there are no direct mentions or explicit Lean terminology, tools, or methodology. The discussion focuses more on software branching strategy and engineering pain points than on Lean principles. While alignment exists conceptually (waste, efficiency), depth and intent towards Lean are limited. The primary audience—engineering teams—could overlap with Lean practitioners but is not Lean-targeted. Most content is relevant, but its specific framing is not distinctly Lean.",
    "reasoning_summary": "This content highlights technical inefficiency and wasted effort in software versioning, loosely reflecting Lean principles about waste. However, it doesn’t directly reference Lean, its tools, or improvement mindsets, making category fit moderate at best.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "un1ZqM8aYng",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T20:29:10",
    "ai_confidence": 41.2,
    "ai_mentions": 1.5,
    "ai_alignment": 4.8,
    "ai_depth": 3.5,
    "ai_intent": 5.0,
    "ai_audience": 7.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content discusses technical challenges (supporting multiple versions, technical debt, merge conflicts) that indirectly relate to organisational agility but does not mention it explicitly. Its primary focus is on engineering efficiency, not strategies, culture, or frameworks for agility. There's a peripheral alignment since simplifying branching and version management could enhance agility, but there's little depth or direct discussion of agile concepts, leadership, or adaptive structures. The audience seems to be engineers and technical leads who might influence agility, but the piece isn't squarely targeted at organisational change leaders or strategists.",
    "reasoning_summary": "The content highlights technical obstacles that can hinder organisational responsiveness but doesn't explicitly address organisational agility. Its relevance is indirect, focusing primarily on engineering challenges rather than broader agility strategies or frameworks, resulting in low-to-moderate alignment.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "un1ZqM8aYng",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T20:29:12",
    "ai_confidence": 7.24,
    "ai_mentions": 0.0,
    "ai_alignment": 1.6,
    "ai_depth": 0.9,
    "ai_intent": 1.1,
    "ai_audience": 1.6,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on the engineering costs and inefficiencies of supporting multiple production versions, merge conflicts, and technical debt. There are no direct or indirect mentions of customer feedback, feedback mechanisms, or their integration into product development. No techniques, tools, or practices around collecting or using customer feedback are discussed; the primary audience is engineering teams facing version control problems, not practitioners of customer feedback loops. Thus, alignment and depth are minimal, with the discussion irrelevant to customer feedback loops.",
    "reasoning_summary": "This content discusses engineering challenges with versioning and branching but does not mention or address customer feedback mechanisms. It does not fit the 'Customer Feedback Loops' category, as feedback processes and their role in product development are entirely absent.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T20:29:03",
    "ai_confidence": 38.55,
    "ai_mentions": 0.5,
    "ai_alignment": 4.4,
    "ai_depth": 4.7,
    "ai_intent": 5.6,
    "ai_audience": 7.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on the technical and process-related drawbacks of supporting multiple versions in production—highlighting issues for engineering efficiency, technical debt, and stability. While it discusses software development process pain points, it never directly mentions Agile, product management, or related practices and roles (e.g., Product Owner, backlog). The main audience appears to be engineering and possibly delivery leaders, but not product management explicitly. No obsolete practices or negative tone require penalties. There is loose alignment in advocating for simplification, which overlaps with Agile's value on efficiency and minimizing waste, but the connection to Agile Product Management's broader strategic, product-focused scope is only peripheral. Thus, confidence remains moderate.",
    "reasoning_summary": "The content addresses technical pain points in supporting multiple software versions but does not directly relate to Agile Product Management topics like product value, backlog prioritization, or customer feedback loops. Its connection to the category is indirect and mostly process-oriented.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T20:29:03",
    "ai_confidence": 23.85,
    "ai_mentions": 0.6,
    "ai_alignment": 2.8,
    "ai_depth": 2.2,
    "ai_intent": 2.4,
    "ai_audience": 8.2,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content discusses the challenges of supporting multiple production versions, emphasizing increased technical debt, bugs, and merge conflicts. While it addresses engineering team pain points and hints at the need for improved processes (e.g., 'standardise, simplify'), it does not directly mention or explore Agile Planning, its practices, or methodologies. Concepts like backlogs, sprints, or iterative planning are absent, with the focus firmly on branching strategy and codebase maintenance. Its intent is more to warn about engineering overhead rather than guide planning according to Agile principles.",
    "reasoning_summary": "This content focuses on the engineering challenges of multiple version support, not on Agile Planning or its methodologies. It aligns with technical audiences but lacks significant connection to Agile Planning practices or principles.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "un1ZqM8aYng",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T20:29:05",
    "ai_confidence": 9.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.1,
    "ai_intent": 1.2,
    "ai_audience": 3.7,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content discusses engineering challenges around supporting multiple production versions but does not reference evidence-based leadership, use empirical data, or tie back to leadership decision-making. Its focus is on technical efficiency and team workflow, not leadership or evidence-driven management practices. The audience is primarily technical (engineers/DevOps), not leaders or managers concerned with evidence-based frameworks. No explicit or implicit evidence-based leadership principles, metrics, or practices are discussed.",
    "reasoning_summary": "This content analyzes technical costs of versioning but doesn't address evidence-based leadership. There's no mention of data-driven leadership decisions or practices; the content's primary focus is technical, not on leadership or empirical frameworks.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T20:29:18",
    "ai_confidence": 25.3,
    "ai_mentions": 0.6,
    "ai_alignment": 2.5,
    "ai_depth": 2.3,
    "ai_intent": 2.2,
    "ai_audience": 7.9,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on the technical inefficiencies and challenges of supporting multiple versions in production—highlighting issues like branch management, merge conflicts, and technical debt. There is no direct or explicit mention of Agile values, principles, or the Agile Manifesto. While the call to 'standardise and simplify' loosely aligns with Agile's emphasis on adaptability and reducing waste, this is at best a byproduct, not the core discussion. The main audience (engineering teams) is partially aligned, but the content's intent and depth do not meaningfully connect to fostering Agile values or discussing underlying philosophy. Most of the text addresses branching and versioning as technical practices rather than connecting to Agile beliefs or team culture.",
    "reasoning_summary": "This content critiques the complexity of supporting multiple production versions, focusing on technical process and engineering challenges. It lacks direct or deep discussion of Agile values and principles, and aligns only slightly with Agile philosophy. Thus, confidence in this fit is low.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Change Management",
    "calculated_at": "2025-05-16T20:29:19",
    "ai_confidence": 36.05,
    "ai_mentions": 1.2,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 3.5,
    "ai_audience": 8.0,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on the technical burdens of supporting multiple production versions, highlighting issues like bugs, technical debt, and merge conflicts. While it argues for standardization, it doesn't explicitly discuss change management principles, strategies for organizational change, or stakeholder engagement. There are no direct mentions of change management or Agile transformation aspects, and the advice remains technical rather than organizational. The content is clearly aimed at engineers (strong audience fit) and stays on-topic with minimal filler, but lacks depth and conceptual alignment with the defined category.",
    "reasoning_summary": "This content centers on technical issues with version management, not organizational change. It advocates for standardization but lacks discussion of change management strategies, making its relevance to the category low despite being well-targeted to an engineering audience.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "un1ZqM8aYng",
    "category": "Kanban",
    "calculated_at": "2025-05-16T20:29:21",
    "ai_confidence": 2.85,
    "ai_mentions": 0.0,
    "ai_alignment": 1.7,
    "ai_depth": 2.0,
    "ai_intent": 2.0,
    "ai_audience": 5.9,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content discusses the costly impact of supporting multiple versions and branching strategies in production software development. There are no mentions of Kanban or any of its core practices: no discussion of Kanban boards, WIP limits, flow management, metrics, or continuous improvement. The conceptual overlap is minimal, as some Kanban practitioners may value simplification, but the main focus is general engineering workflow pains, not Kanban methodology or philosophy. Depth of discussion stays within the pain points of version management and does not introduce Kanban-aligned solutions. Intent and audience are somewhat adjacent (software teams and their efficiency) but not specifically for Kanban practitioners. The signal is reasonable as the content is focused, but its relevance to Kanban is virtually none.",
    "reasoning_summary": "This content focuses on the downsides of supporting multiple software versions and complex branching, not on Kanban principles. There is no mention or exploration of Kanban practices, making it unrelated to the Kanban category despite some surface-level alignment on workflow simplification.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "un1ZqM8aYng",
    "category": "Market Share",
    "calculated_at": "2025-05-16T20:29:25",
    "ai_confidence": 7.3,
    "ai_mentions": 0.1,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 0.9,
    "ai_audience": 2.1,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on the operational and engineering challenges of supporting multiple software versions in production. There are no explicit or implicit references to market share, strategies for market positioning, competitive analysis, customer acquisition, or any related market share growth themes. The main audience is software engineers or technical leads, not strategists or executives focused on market expansion. The only very indirect overlap is that technical inefficiency can eventually affect a company's ability to compete, but this is not addressed in the content. The confidence score is extremely low, reflecting an absence of market share relevance.",
    "reasoning_summary": "This content discusses technical issues with supporting multiple software versions, targeting engineering teams. It does not address market share or related strategic growth topics, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T20:29:26",
    "ai_confidence": 4.9,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.4,
    "ai_audience": 0.8,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content focuses entirely on operational pain points of supporting multiple software versions in production, like merge conflicts, technical debt, and branching strategies. It contains no reference to Acceptance Test Driven Development (ATDD) or acceptance criteria—nor does it discuss collaborative requirements engineering or acceptance testing principles. The topic, examples, and advice are not conceptually or procedurally aligned with ATDD, nor are they directed at the specific audience for that practice. Only a minimal signal occurs in overlap to broader quality practices, but nothing is present regarding ATDD itself.",
    "reasoning_summary": "This content discusses the challenges of supporting multiple production versions, focusing on branching and technical debt. There's no mention or discussion of ATDD principles, criteria, or collaboration, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "un1ZqM8aYng",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T20:29:28",
    "ai_confidence": 2.25,
    "ai_mentions": 0.2,
    "ai_alignment": 0.9,
    "ai_depth": 0.8,
    "ai_intent": 0.7,
    "ai_audience": 1.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "There are no direct mentions of Open Space Agile or its principles. The content discusses the technical difficulties of supporting multiple production versions, focusing on engineering challenges, merge conflicts, and branching strategies. There is no discussion of Open Space Technology, collective participation, emergence, psychological safety, or other core concepts relevant to Open Space Agile. The audience appears to be engineers or technical leaders, not organisational change agents. Nearly all content is unrelated to Agile transformation or the collaborative, emergent practices that define the Open Space Agile category.",
    "reasoning_summary": "This content centers on technical version management in software engineering, with no mention of Open Space Agile or its core principles. It doesn't address organisational agility, collaborative change, or related methods, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "un1ZqM8aYng",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T20:29:19",
    "ai_confidence": 7.46,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.7,
    "ai_audience": 3.6,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on the operational challenges of supporting multiple software versions, such as technical debt and merge conflicts. It does not mention Beta Codex, nor does it address decentralised, human-centric, or adaptive organisational principles. Its target audience is engineering rather than organisational design professionals. There is no exploration of Beta Codex topics such as decentralisation, hierarchy, or human-centric leadership. Most content is not relevant to Beta Codex.",
    "reasoning_summary": "The content addresses engineering workflow issues, not Beta Codex principles. It does not discuss decentralisation, adaptive practices, or organisational design, so it is a poor fit for the category.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "un1ZqM8aYng",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T20:29:19",
    "ai_confidence": 43.45,
    "ai_mentions": 2.5,
    "ai_alignment": 5.3,
    "ai_depth": 4.8,
    "ai_intent": 5.5,
    "ai_audience": 8.1,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content discusses the drawbacks of supporting multiple production versions and problematic branching strategies like 'branch by customer.' While these are indirectly related to deployment strategies—since managing versions and branches can affect deployment practices—the post does not explicitly discuss deployment methodologies (e.g., blue-green deployments, canary releases, rolling updates). There are no direct references to deployment strategy terminology, and the core focus is on engineering complexity and technical debt, not on actionable deployment practices. The alignment and depth reflect conceptual overlap but do not fully match the category’s intent or depth.",
    "reasoning_summary": "The post critiques managing multiple production versions, touching issues relevant to deployment complexity but lacks direct discussion of actual deployment strategies. Its focus is more on engineering pain than providing actionable deployment methodologies, resulting in only a moderate category fit.",
    "level": "Tertiary"
  },
  "DevOps": {
    "resourceId": "un1ZqM8aYng",
    "category": "DevOps",
    "calculated_at": "2025-05-16T20:29:21",
    "ai_confidence": 48.2,
    "ai_mentions": 1.1,
    "ai_alignment": 6.3,
    "ai_depth": 4.4,
    "ai_intent": 5.6,
    "ai_audience": 7.2,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content discusses pain points related to maintaining multiple production versions and poor branching strategies, which are indirectly relevant to DevOps principles like flow efficiency and reducing technical debt. However, it does not explicitly mention DevOps or directly engage with its core philosophy, automation, collaboration, or cultural shifts. The discussion is practical and of interest to DevOps practitioners, but the lack of direct conceptual depth or explicit references limits the overall confidence. No outdated information or negative tone is present, so no penalties were applied.",
    "reasoning_summary": "While the piece aligns tangentially with DevOps by addressing branching complexity and flow efficiency, it lacks explicit DevOps references and in-depth exploration of its principles, resulting in moderate fit confidence.",
    "level": "Tertiary"
  },
  "Team Motivation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T20:29:24",
    "ai_confidence": 16.6,
    "ai_mentions": 0.9,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.4,
    "ai_audience": 6.6,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on technical challenges of supporting multiple production versions, highlighting practical burdens for engineering teams such as technical debt and inefficiency. While it mentions a 'painful development experience,' it does not directly discuss team motivation, engagement, or psychological and social factors as defined by the category. There is no explicit reference to motivational strategies or agile team dynamics; thus, the alignment, depth, and intent toward 'Team Motivation' remain limited.",
    "reasoning_summary": "This content details technical difficulties faced by teams handling multiple software versions, with only indirect reference to team morale. It lacks exploration of team motivation strategies or agile team dynamics, landing well outside the primary focus of the 'Team Motivation' category.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "un1ZqM8aYng",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T20:29:26",
    "ai_confidence": 12.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.7,
    "ai_intent": 1.2,
    "ai_audience": 6.0,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content discusses engineering challenges related to supporting multiple production versions but makes only vague references to 'engineering teams' rather than Scrum Teams or Scrum-specific accountabilities. There are no direct mentions, and the conceptual alignment with the Scrum Team as defined in the Scrum Guide is minimal. The audience could include Scrum Teams, but the focus is generic, not tied to Scrum practices. There is no depth regarding Scrum Team structure, accountability, or self-management, and no discussion of the Product Owner, Scrum Master, or Developers within a Scrum Team. The piece is well-focused on its technical topic (signal), but that topic is not category-specific.",
    "reasoning_summary": "This content focuses on the technical pain points of version management in engineering teams, missing any meaningful connection to Scrum Team accountability or structure. It's relevant to software practitioners, but not specifically to Scrum Teams as defined by the Scrum Guide.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "un1ZqM8aYng",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T20:29:29",
    "ai_confidence": 13.6,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 5.0,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content does not mention Systems Thinking or its principles. Its focus is on practical engineering pain points caused by supporting multiple production versions—not on holistic, interconnected analysis or systemic dynamics. While it discusses organizational pain (technical debt, process inefficiency), it only analyzes these at a surface level, with no reference to tools, frameworks, feedback loops, or organizational culture change—the pillars of Systems Thinking. The audience mostly matches (software engineering teams), but there is little depth concerning systemic analysis. No penalties applied as the tone is appropriate and the discussion is current.",
    "reasoning_summary": "This content is narrowly focused on technical challenges of version support, not systemic analysis or organizational interconnections. It lacks references to Systems Thinking concepts, tools, or frameworks. Thus, it has very low confidence for fitting the 'Systems Thinking' category.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "un1ZqM8aYng",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T20:29:20",
    "ai_confidence": 13.25,
    "ai_mentions": 0.8,
    "ai_alignment": 1.9,
    "ai_depth": 2.1,
    "ai_intent": 2.2,
    "ai_audience": 4.6,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical challenges and inefficiencies of supporting multiple versions in production environments, particularly from an engineering and branching strategy perspective. It does not mention or discuss working agreements, team norms, or structured collaboration practices. There is some indirect relevance in suggesting standardization, but the main ideas do not align with the definition or key topics of 'Working Agreements.' The audience is likely technical, but the discussion does not address team agreements or collaborative protocols.",
    "reasoning_summary": "This content centers on technical issues with maintaining multiple prod versions, lacking any direct or substantive exploration of working agreements or team norms. It is more about engineering efficiency than collaborative agreements, so alignment with the category is very weak.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T20:29:20",
    "ai_confidence": 64.75,
    "ai_mentions": 2.7,
    "ai_alignment": 7.3,
    "ai_depth": 7.8,
    "ai_intent": 6.0,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content focuses on the engineering challenges of maintaining multiple application versions in production, such as technical debt, merge conflicts, and branching strategies. While it doesn't mention ALM directly, its themes of maintenance, change management, and version control are closely aligned with key facets of Application Lifecycle Management. The depth is shown through nuanced discussion of workflow pains and strategies, though intent leans toward cautionary advice rather than structured ALM practices. The technical audience is a strong fit and the content remains tightly focused on relevant pain points.",
    "reasoning_summary": "This content highlights practical challenges in maintaining multiple production versions and managing branching, which are central ALM concerns, though it doesn't explicitly name ALM. It's a strong partial fit, with the main focus on versioning and workflow within the app lifecycle.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "resourceId": "un1ZqM8aYng",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T20:29:25",
    "ai_confidence": 2.2,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.1,
    "ai_intent": 2.0,
    "ai_audience": 4.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content does not mention Sprint Review directly or conceptually align with its themes. It focuses entirely on the technical challenges of supporting multiple product versions and related engineering concerns. There is no discussion of Scrum events, stakeholders, or product backlog adaptation. Audience is tangentially relevant (engineering teams) but not specifically Scrum practitioners. The content is tightly focused but irrelevant to Sprint Review.",
    "reasoning_summary": "This content solely addresses engineering issues of multiple production versions, with no reference to Sprint Review concepts, purpose, or process, making it irrelevant for the category.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T20:29:27",
    "ai_confidence": 12.56,
    "ai_mentions": 0.7,
    "ai_alignment": 1.1,
    "ai_depth": 1.4,
    "ai_intent": 1.2,
    "ai_audience": 4.1,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses almost entirely on technical issues of software versioning and engineering challenges, with no discussion of leadership roles, culture, empowerment, or Agile principles as defined in the category. There are no explicit references to leadership or Agile leadership concepts. The audience is engineering teams rather than leaders, and there is no substantive alignment with Agile Leadership topics.",
    "reasoning_summary": "This content discusses engineering challenges with multiple versions but lacks leadership or Agile context, making it a poor fit for Agile Leadership. Its technical focus misses the people and culture aspects essential to the category.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T20:29:20",
    "ai_confidence": 11.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.8,
    "ai_intent": 1.6,
    "ai_audience": 2.0,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content addresses challenges in supporting multiple versions in production, emphasizing technical debt, merge conflicts, and branching strategies. Nowhere does it mention, discuss, or even allude to test automation principles, frameworks, tools, or practices. There is no coverage of automated test execution, CI/CD pipelines, or improvement of testing workflows. The audience (engineering teams) could overlap with test automation practitioners, but the subject matter is unrelated. The signal is somewhat focused, but entirely off-topic for the category. No penalties were necessary as the content is relatively current and not satirical or critical of automation.",
    "reasoning_summary": "While clearly aimed at engineering teams, this content focuses on version control and branching issues—not on automating tests or related practices—so it poorly fits the 'Test Automation' category. No relevant mentions, concepts, or depth on test automation are present.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "resourceId": "un1ZqM8aYng",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T20:29:20",
    "ai_confidence": 32.455,
    "ai_mentions": 0.2,
    "ai_alignment": 3.4,
    "ai_depth": 3.7,
    "ai_intent": 3.0,
    "ai_audience": 8.6,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content critiques the complexity and technical debt caused by supporting multiple production versions. While this topic indirectly relates to deployment frequency—since fewer versions often align with more frequent deployments—it doesn't explicitly mention or deeply explore deployment frequency itself, nor does it focus on strategies, metrics, or Agile/DevOps practices directly tied to increasing deployment pace. Its main focus is on branching and complexity reduction. The audience aligns well (engineering/technical), but the connection to 'Deployment Frequency' is indirect and lacks explicit discussion or actionable strategies.",
    "reasoning_summary": "This piece targets engineering teams and emphasizes limiting production versions for efficiency but doesn't specifically focus on deployment frequency. The connection is indirect, lacking mention of frequent deployments or related best practices, so confidence in classification under this category is limited.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "un1ZqM8aYng",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T20:29:29",
    "ai_confidence": 37.09,
    "ai_mentions": 0.8,
    "ai_alignment": 4.9,
    "ai_depth": 3.8,
    "ai_intent": 4.0,
    "ai_audience": 7.3,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on the complexities and engineering burdens of supporting multiple production versions, addressing issues such as context-switching, merge conflicts, and technical debt. While these themes are tangentially relevant to reliability and operational challenges, they do not explicitly or deeply discuss SRE principles, practices, or frameworks. There are no direct mentions of SRE, SLOs, monitoring, incident response, or the integration of development and operations as defined by SRE. The primary audience is likely engineering teams dealing with production issues, which aligns somewhat with SRE professionals, but the intent centers on development process pain points more than on reliability engineering. The signal-to-noise ratio is moderate as the discussion is focused but not category-specific.",
    "reasoning_summary": "This content discusses pain points of supporting multiple production versions, which partially relates to reliability and production stability. However, it doesn't directly address SRE frameworks, principles, or best practices, so its fit for the Site Reliability Engineering category is moderate at best.",
    "level": "Ignored"
  },
  "Forecasting": {
    "resourceId": "un1ZqM8aYng",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T20:29:20",
    "ai_confidence": 6.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.9,
    "ai_depth": 0.8,
    "ai_intent": 1.1,
    "ai_audience": 2.3,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses strictly on the operational and technical drawbacks of supporting multiple production versions—such as increased bugs, merge conflicts, technical debt, and inefficiency. There is no explicit or implicit discussion of forecasting, predictive methods, empirical data, risk management, or Agile/Scrum delivery estimation. While the audience (engineering teams) overlaps with those who would care about forecasting, the subject remains isolated to process challenges, not proactive planning or forecasting methodologies. Accordingly, direct mentions, alignment, depth, and related metrics for forecasting are minimal or absent.",
    "reasoning_summary": "This content is centered on technical and process challenges of maintaining multiple versions, not on forecasting or proactive planning. It barely aligns with the forecasting category and receives a low confidence score as a result.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "un1ZqM8aYng",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T20:29:20",
    "ai_confidence": 4.0,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.6,
    "ai_intent": 1.0,
    "ai_audience": 7.1,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content does not mention Azure Boards or discuss any of its features, best practices, or Agile project management principles. The focus is strictly on the challenges of supporting multiple code versions and problematic branch management, without addressing work item tracking, sprints, reporting, or any integrations unique to Azure Boards. The intended audience (engineering teams) loosely overlaps, but the content is otherwise entirely irrelevant to Azure Boards.",
    "reasoning_summary": "This content is about the technical drawbacks of maintaining multiple software versions, not Azure Boards or Agile project management. It contains no references or relevant insights pertaining to Azure Boards, making it a poor fit for this category.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T20:29:30",
    "ai_confidence": 16.85,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.7,
    "ai_intent": 2.6,
    "ai_audience": 4.2,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content critiques the costs and inefficiencies of supporting multiple software versions in production, discussing issues like technical debt, merge conflicts, and branching strategy. However, it focuses on technical challenges and best practices rather than Agile Philosophy's principles, values, or mindset. There are no direct mentions of Agile, its manifesto, or philosophical concepts such as adaptability, value delivery, or continuous improvement. The discussion is practical and tactical with only indirect relevance to Agile Philosophy, thus earning a low score.",
    "reasoning_summary": "This content addresses technical challenges with managing multiple production versions but doesn't explicitly discuss Agile Philosophy or its key principles. Its focus is more on workflow efficiency than on overarching Agile mindsets, resulting in a low confidence score for category fit.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "resourceId": "un1ZqM8aYng",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T20:29:22",
    "ai_confidence": 16.323,
    "ai_mentions": 0.6,
    "ai_alignment": 1.4,
    "ai_depth": 1.9,
    "ai_intent": 2.1,
    "ai_audience": 7.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content discusses challenges with supporting multiple production versions, merge conflicts, and branching strategies (including 'branch by customer'), all topics relevant to source control. However, it never directly mentions Azure Repos or interacts with its unique features, use cases, or best practices. The thematic alignment is mostly with general version control issues, not Azure Repos specifically. The intended audience (engineering/technical) matches, but the signal-to-noise isn't high for category fit, and depth is limited by lack of platform specificity.",
    "reasoning_summary": "While the post touches on source control challenges like branching and merge conflicts, it never refers to Azure Repos or its features. Its content is relevant to practitioners, but too generic for the Azure Repos category, warranting a low confidence score.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T20:29:23",
    "ai_confidence": 24.537,
    "ai_mentions": 0.4,
    "ai_alignment": 2.4,
    "ai_depth": 2.9,
    "ai_intent": 2.6,
    "ai_audience": 7.6,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on the challenges of supporting multiple production versions, including technical debt, bugs, merge conflicts, and inefficiency for engineering teams. While these inefficiencies are relevant to software delivery, the discussion is not specifically about Value Stream Management as defined (optimizing the flow of value, mapping value streams, continuous improvement, etc.). There are no direct or indirect mentions of Value Stream Management concepts, principles, or practices such as value stream mapping, aligning with customer value, or integrating Agile/Lean for value flow. The advice is tactical (branching strategy, tech debt) rather than strategic or value-focused. Audience alignment is highest, as engineering managers and practitioners may overlap with the Value Stream Management audience, but overall relevance and conceptual fit are low.",
    "reasoning_summary": "This content highlights engineering challenges in managing multiple production versions but doesn’t directly address Value Stream Management principles or practices. It lacks discussion on optimizing value flow or strategic alignment, so relevance to the category is minimal.",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "un1ZqM8aYng",
    "category": "Release Management",
    "calculated_at": "2025-05-16T20:29:23",
    "ai_confidence": 63.6,
    "ai_mentions": 1.6,
    "ai_alignment": 7.5,
    "ai_depth": 7.0,
    "ai_intent": 7.2,
    "ai_audience": 7.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content directly discusses challenges in supporting multiple production versions, focusing on engineering pain points like merge conflicts, regressions, and technical debt. These are related to release strategy decisions and process control—core to Release Management—but there is no explicit use of the term or a deliberate focus on the holistic release process (e.g., scheduling, CI/CD, stakeholder coordination). The advice is relevant to practitioners managing releases and branching practices but doesn't deeply address broader or more strategic aspects of Release Management. Content is technical, relevant, and concise, with high signal and pertinent audience targeting.",
    "reasoning_summary": "This content addresses practical engineering challenges tied to managing software version releases, resonating well with Release Management themes even though it doesn't explicitly mention the category or explore all its facets. It's focused, technical, and relevant for practitioners.",
    "level": "Secondary"
  },
  "Business Agility": {
    "resourceId": "un1ZqM8aYng",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T20:29:23",
    "ai_confidence": 39.89,
    "ai_mentions": 0.2,
    "ai_alignment": 3.3,
    "ai_depth": 2.9,
    "ai_intent": 3.7,
    "ai_audience": 6.0,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content discusses the technical burden of supporting multiple production versions, focusing on developer challenges, technical debt, and branching practices. While these factors can indirectly affect business agility by impacting team efficiency and adaptability, there are no direct references to business agility principles, practices, or outcomes. The content is narrowly focused on engineering process pain rather than on organisational agility, leadership, or strategic transformation. The audience (engineering teams) could overlap with those pursuing business agility, but the core themes are limited to software configuration management challenges rather than the broader principles or implementation of business agility.",
    "reasoning_summary": "This content highlights engineering difficulties with multi-version support, which can indirectly affect agility, but it doesn’t discuss business agility principles or strategies. Its focus is technical, so relevance to Business Agility is low.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T20:29:36",
    "ai_confidence": 69.9,
    "ai_mentions": 3.5,
    "ai_alignment": 8.4,
    "ai_depth": 7.7,
    "ai_intent": 7.3,
    "ai_audience": 8.1,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content directly addresses factors (supporting multiple production versions, branching strategy, technical debt) that impact the effectiveness and efficiency of product delivery teams. It aligns conceptually with delivery challenges but does not explicitly mention 'product delivery' or delve into end-to-end methodologies. The discussion is moderately deep, focusing primarily on scaling and process inefficiencies, offering actionable critique for engineering practitioners. The piece is targeted at technical leads and contributors responsible for software delivery, maintaining high topical relevance with minimal digression or filler.",
    "reasoning_summary": "The content fits the Product Delivery category well, exploring key delivery challenges like version management, technical debt, and branching strategies. While it doesn't mention 'product delivery' directly, its focus on engineering practices and their impact on delivery effectiveness makes it highly relevant to the category.",
    "level": "Secondary"
  },
  "Cycle Time": {
    "resourceId": "un1ZqM8aYng",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T20:29:38",
    "ai_confidence": 25.45,
    "ai_mentions": 0.3,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 2.5,
    "ai_audience": 7.0,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content discusses engineering challenges associated with supporting multiple production versions: increased bugs, merge conflicts, technical debt, and wasted engineering time. These barriers indirectly affect workflow efficiency and, by extension, cycle time. However, 'Cycle Time' is never directly mentioned, nor are its measurement, importance, or means of reduction explored. The focus is on code branching strategies, not cycle time as a metric. Some alignment exists in terms of understanding workflow efficiency, but the content does not delve into cycle time methods, analysis, or improvement, limiting the fit to the category.",
    "reasoning_summary": "While this content addresses process inefficiencies and technical debt, it doesn't explicitly discuss cycle time or related Agile metrics. Its primary focus is on branching strategy pain points, offering only peripheral relevance to cycle time, resulting in a low confidence fit.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "un1ZqM8aYng",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T20:29:40",
    "ai_confidence": 77.8,
    "ai_mentions": 2.3,
    "ai_alignment": 8.5,
    "ai_depth": 7.9,
    "ai_intent": 8.8,
    "ai_audience": 8.6,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content directly addresses practical challenges faced by engineering teams supporting multiple versions in production—merge conflicts, context switching, technical debt, and inefficiencies. Though it does not explicitly mention Agile, Scrum, or DevOps, it aligns substantively with pragmatic problem-solving by identifying real-world issues and recommending practical actions (standardise, simplify). The depth is solid but not exhaustive, and the audience is clearly practitioners seeking actionable guidance, closely matching the Pragmatic Thinking category. No outdated or contradictory viewpoints were detected; no penalties were required.",
    "reasoning_summary": "This content offers actionable insight into real-world engineering challenges, advocating for practical solutions and process simplification. While it does not directly name Agile or DevOps, its clear focus on pragmatic problem-solving for practitioners aligns very well with the category.",
    "level": "Secondary"
  },
  "Unrealised Value": {
    "resourceId": "un1ZqM8aYng",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T20:29:40",
    "ai_confidence": 19.53,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.7,
    "ai_audience": 5.8,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content sharply critiques the costs and technical complexity introduced by supporting multiple production versions, focusing on issues like technical debt, bugs, and inefficiency. However, it does not explicitly mention 'Unrealised Value,' nor does it explore latent potential, untapped opportunities, or frameworks for capturing additional value. The main thrust is operational pain and development process critique, not the category's focus on organizational potential or strategic improvement. Its audience (engineering teams) may overlap partially with evidence-based management stakeholders, but the material is quite tactical and fails to discuss EBM or metrics for Unrealised Value.",
    "reasoning_summary": "This content mainly highlights technical burdens, not untapped potential or innovation opportunity, so it has very limited alignment with 'Unrealised Value.' While well-targeted for engineers, it doesn't address indicators, strategies, or insights related to capturing more value as specified by the category.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T20:29:43",
    "ai_confidence": 52.562,
    "ai_mentions": 1.5,
    "ai_alignment": 6.9,
    "ai_depth": 5.7,
    "ai_intent": 6.3,
    "ai_audience": 8.4,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content addresses inefficiencies caused by supporting multiple versions in production, mentioning wasted engineering time and inefficiency—concepts related to Lean Product Development's focus on waste reduction. However, it does not mention Lean principles, frameworks, or customer value directly. The discussion is somewhat aligned thematically (minimizing waste), but depth is limited and explicit Lean context is lacking. The intended audience is clearly engineering and product leaders, which aligns well, but the relevance is moderate due to the focus being on version management strategies rather than a Lean Product Development framework.",
    "reasoning_summary": "While the content exposes inefficiencies relevant to Lean Product Development, it doesn't explicitly reference Lean principles or practices. Its focus on waste and simplification aligns conceptually, but limited depth and lack of direct linkage reduce confidence.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 8.2,
    "ai_mentions": 0.1,
    "ai_alignment": 0.6,
    "ai_depth": 0.5,
    "ai_intent": 0.8,
    "ai_audience": 2.4,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses the operational costs and workflow pain points of managing multiple production versions and merging strategies. There is no explicit or implicit reference to BDD, its principles (like collaboration, user stories, or specification by example), or its key tools and audiences. The topic is squarely technical workflow management rather than software requirements, quality, or business-stakeholder collaboration, which are core to BDD. Scores reflect near-zero direct mention, negligible conceptual overlap, and essentially no depth or focus on BDD.",
    "reasoning_summary": "This content focuses exclusively on technical versioning and branch strategies, not BDD principles or practices. There is no mention or discussion of Behaviour Driven Development, so the confidence score remains very low.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "un1ZqM8aYng",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T20:29:34",
    "ai_confidence": 5.8,
    "ai_mentions": 0.0,
    "ai_alignment": 0.8,
    "ai_depth": 1.2,
    "ai_intent": 1.5,
    "ai_audience": 1.5,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content does not directly mention or discuss Definition of Ready or its specific criteria. It focuses on the challenges and inefficiencies incurred by supporting multiple production versions, such as increased bugs and technical debt. While these concerns may indirectly relate to readiness in terms of process quality, the alignment is weak as the text does not address readiness of backlog items, user stories, or Agile practices directly relevant to DoR. The content is intended for engineering teams but does not target practitioners looking to understand or implement Definition of Ready. Therefore, the confidence and all individual scores remain very low, as the thematic and conceptual overlap is minimal.",
    "reasoning_summary": "This content discusses the costs and challenges of maintaining multiple production versions, not the readiness of backlog items for sprints. It does not reference Definition of Ready or related Agile practices, so fit is minimal.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "un1ZqM8aYng",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T20:29:37",
    "ai_confidence": 45.947,
    "ai_mentions": 0.2,
    "ai_alignment": 4.8,
    "ai_depth": 4.2,
    "ai_intent": 4.6,
    "ai_audience": 6.5,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content discusses technical debt and engineering inefficiencies from supporting multiple production versions. While it advocates for simplification and notes the drawbacks of poor branching, it never explicitly references Scrum or Professional Scrum values, principles, empiricism, or roles. There's partial conceptual alignment in highlighting professionalism and technical excellence, but no direct exploration of the ethos of Professional Scrum, Scrum values, or evidence-based management. The target audience of developers and teams overlaps somewhat, but the content lacks depth, intent, and explicit connection to the Professional Scrum framework.",
    "reasoning_summary": "This piece offers advice on version management and technical debt, aligning somewhat with ideas of technical excellence, but it doesn't directly tie to Professional Scrum's ethos, values, or guiding principles. It's helpful for engineering teams but isn't a strong fit for the Professional Scrum category.",
    "level": "Tertiary"
  },
  "Accountability": {
    "resourceId": "un1ZqM8aYng",
    "category": "Accountability",
    "calculated_at": "2025-05-16T20:29:35",
    "ai_confidence": 13.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.7,
    "ai_audience": 5.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses exclusively on the technical and process-related drawbacks of supporting multiple software versions in production (bugs, merge conflicts, technical debt) but does not address accountability as a structural mechanism or clarify outcome ownership in modern work systems. There are no explicit mentions of accountability or related constructs (such as role-specific responsibility, ownership of outcomes, or structural clarity). The primary audience (engineers/tech leads) only indirectly overlaps with process accountability, and the discussion never delves into how accountability (or lack thereof) shapes system behavior, ownership, or adaptation. The intent is technical optimization rather than organizational clarity or improvement in outcome ownership. Therefore, confidence is very low.",
    "reasoning_summary": "This content is technical, focusing on the risks and challenges of managing multiple production versions, but it never addresses accountability, roles, or outcome ownership in work systems. As a result, it does not fit the Accountability category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T20:29:35",
    "ai_confidence": 15.06,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 2.2,
    "ai_intent": 2.5,
    "ai_audience": 5.8,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content does not directly mention Agnostic Agile or related principles. It focuses solely on engineering challenges with supporting multiple production versions, merge conflict risks, and technical debt, without referencing agile practices, ethics, or context-driven approaches. There is no comparison of frameworks, discussion of agility, or consideration of ethical/principled adaptation, all of which are essential for inclusion in the Agnostic Agile category. Its audience of engineering practitioners loosely overlaps, but the content stays firmly within the realm of development process pitfalls and branching strategies, not agile philosophy or contextual adaptation.",
    "reasoning_summary": "This content focuses on engineering pain points of supporting multiple versions in production, not on Agnostic Agile principles, context-driven agility, or methodology adaptation. It lacks alignment, intent, and depth for the category, resulting in low confidence.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "un1ZqM8aYng",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T20:29:35",
    "ai_confidence": 22.825,
    "ai_mentions": 0.1,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 3.9,
    "ai_audience": 6.1,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content discusses the inefficiencies and technical debt of maintaining multiple production versions and poor branching practices, focusing on software engineering challenges. While these factors may indirectly impact Lead Time by making development harder and less efficient, there is no direct mention or detailed discussion of Lead Time as an observability metric. The piece is aimed at technical practitioners, staying relevant for engineering audiences, but its alignment and depth regarding Lead Time are minimal, making its fit under this category weak.",
    "reasoning_summary": "This content highlights engineering inefficiencies from poor branching and supporting multiple versions, but doesn't directly address Lead Time or its measurement. Its indirect impact on delivery speed is implied, but not explored, so it's only loosely related to the Lead Time category.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "un1ZqM8aYng",
    "category": "Model",
    "calculated_at": "2025-05-16T20:29:39",
    "ai_confidence": 22.65,
    "ai_mentions": 1.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.4,
    "ai_intent": 3.1,
    "ai_audience": 5.2,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content critiques branching and version support strategies, focusing on the operational impact on engineering teams. It refers to concepts like 'branch by customer' but doesn't explicitly reference conceptual models or frameworks as defined by the category. There is minimal discussion of models or visual frameworks for understanding system complexity or decision-making. The audience (engineering teams) loosely aligns, but the depth and direct mention of models are limited to absent.",
    "reasoning_summary": "This content primarily analyzes practical challenges in engineering workflows without referencing conceptual models or frameworks. It doesn't fit the 'Model' category, as it lacks alignment with systemic modeling or analytical frameworks defined in the category criteria.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "un1ZqM8aYng",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T20:29:38",
    "ai_confidence": 18.05,
    "ai_mentions": 0.1,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.7,
    "ai_audience": 6.8,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content is a technical critique of supporting multiple code versions in production. It focuses on engineering pain points, technical debt, and process inefficiencies, but it does not mention or discuss organisational change principles, frameworks, leadership, or agility. Its audience is developers or engineering leads, not organisational strategists, and while some process decisions have indirect organisational effects, there is no alignment with change management or organisational agility themes. No penalties were applied as the tone and references are neutral and current.",
    "reasoning_summary": "This content is largely technical, discussing engineering challenges with version control—without touching on organisational change, transformation, or agility. Little direct or conceptual overlap with the category, hence a very low confidence score.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "un1ZqM8aYng",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T20:29:39",
    "ai_confidence": 8.1,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses engineering challenges related to supporting multiple versions in production, focusing on merge conflicts, technical debt, and the inefficiencies of branch management. There is no mention or implication of remote work, distributed teams, Agile-specific remote practices, or tools tailored to such teams. The core subject is technical workflow complexity, not remote collaboration. Accordingly, all scores are extremely low, especially on Direct Mentions and Conceptual Alignment; audience gets a slight uptick as engineering teams may overlap, but the content is strictly off-topic for Remote Working.",
    "reasoning_summary": "This content is solely about the technical and organizational risks of multi-version support and branching strategies—there’s no discussion of remote working, collaboration, or related Agile practices. It doesn’t fit the Remote Working category at all.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "un1ZqM8aYng",
    "category": "Capability",
    "calculated_at": "2025-05-16T20:29:43",
    "ai_confidence": 19.16,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 1.8,
    "ai_intent": 2.7,
    "ai_audience": 5.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on the technical and process challenges of supporting multiple production versions, highlighting issues like technical debt and engineering inefficiency. It does touch on systemic impediments but does not directly refer to or thoroughly discuss enduring capabilities, their development, assessment, or organizational embedding. While the advice to 'standardise and simplify' hints at capability-building, the main thrust centers around process pain points and negative outcomes of poor version control rather than capability enhancement itself. There are minimal direct mentions of the category, limited alignment, and shallow depth regarding capability. No penalties applied as the content is current and doesn't contradict the category.",
    "reasoning_summary": "This piece details problems with maintaining multiple versions in production but focuses on process drawbacks, not enduring organizational capabilities. It's more about technical pitfalls than building or assessing capability. Confidence in the Capability category fit is therefore low.",
    "level": "Ignored"
  },
  "Time to Market": {
    "resourceId": "un1ZqM8aYng",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 43.75,
    "ai_mentions": 1.3,
    "ai_alignment": 4.8,
    "ai_depth": 4.6,
    "ai_intent": 4.9,
    "ai_audience": 6.8,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content critiques maintaining multiple production versions, discussing increased bugs, engineering inefficiency, merge conflicts, and technical debt, primarily from an internal software delivery perspective. While these issues can impact Time to Market by slowing development and complicating releases, the piece never explicitly references Time to Market, its metrics, or strategies for improving it. There is implicit conceptual alignment but the lack of direct discussion or depth on actually measuring, optimizing, or framing process change in terms of delivery speed substantially limits fit. Audience alignment and signal are moderate as it targets engineering process concerns relevant to technical leads but lacks focus on Evidence-Based Management or explicit value delivery. No content is outdated, and the tone is critical but constructive, so penalties were not applied.",
    "reasoning_summary": "This content highlights how supporting multiple production versions increases technical debt and slows development. While it aligns with some Time to Market concerns, it never explicitly discusses delivery speed, metrics, or strategies, so the fit is partial and indirect.",
    "level": "Tertiary"
  },
  "Service Level Expectation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 1.8,
    "ai_mentions": 0.0,
    "ai_alignment": 2.0,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 3.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content exclusively focuses on the challenges of supporting multiple production versions, highlighting increased bugs, merge conflicts, technical debt, and engineering inefficiency. It discusses branching strategies but never mentions or implies Service Level Expectation (SLE) in Agile, Scrum, or Kanban contexts. There are no references to cycle time forecasting, probabilistic delivery, or improving predictability for stakeholders. The content does target engineering teams (some overlap with possible SLE audiences), but the intent, depth, and thematic alignment are unrelated to SLE. Thus, the confidence is extremely low.",
    "reasoning_summary": "This content doesn’t discuss Service Level Expectation or related Agile metrics. It’s about technical debt and release strategies, not delivery predictability or SLE concepts. Overall alignment and relevance to the category are minimal.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "un1ZqM8aYng",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T20:29:35",
    "ai_confidence": 18.15,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 2.6,
    "ai_intent": 2.4,
    "ai_audience": 8.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content discusses the drawbacks of supporting multiple versions in production, focusing on technical inefficiencies like merge conflicts and technical debt. There are no explicit or implicit mentions of empirical process control, transparency, inspection, adaptation, or Agile methodologies. The discussion does not cover respond-to-feedback cycles, observation-driven decision-making, or integration with Agile/Scrum concepts—it is focused solely on version management challenges. There is no evidence of theory, methods, tools, or practices within the empirical process control framework. Therefore, the confidence that this content fits the empirical process control category is very low.",
    "reasoning_summary": "This piece focuses on issues of managing multiple production versions and resulting technical debt, without discussing evidence-based process control, feedback mechanisms, or Agile principles. It doesn't align in content, depth, or intent with the Empirical Process Control category.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "un1ZqM8aYng",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T20:29:35",
    "ai_confidence": 7.65,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 0.8,
    "ai_intent": 1.2,
    "ai_audience": 2.5,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "There are no direct mentions of Test First Development or its principles. The content is focused on the complexities and downsides of supporting multiple software versions in production, specifically highlighting context-switching, branch management, merge conflicts, and technical debt. While these are relevant concerns for engineering practices, they are not connected to defining success criteria before implementation, test automation, or feedback loops central to Test First Development. The audience might overlap (engineering teams), but the themes, depth, and alignment with Test First Development are extremely tangential at best.",
    "reasoning_summary": "This content focuses on the difficulties of supporting multiple software versions, not Test First Development. It doesn't discuss defining tests up front or related practices, resulting in very low confidence for the category fit.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T20:29:35",
    "ai_confidence": 13.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 2.3,
    "ai_intent": 1.9,
    "ai_audience": 4.9,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses strictly on technical challenges and inefficiencies engendered by maintaining multiple production versions, including branch management and technical debt. Nowhere does it engage with product validation concepts such as user testing, market fit, prototyping, or integrating user feedback for validating product ideas. Its primary audience is engineering teams, but its aim is to discuss development burdens, not the user-centric concerns crucial for Product Validation. Thus, scores are low across all dimensions due to the lack of conceptual alignment and virtually no direct references or implied intent toward the product validation process.",
    "reasoning_summary": "This content zeroes in on engineering process challenges related to versioning, not on testing or validating product ideas with users. Its purpose and discussion are misaligned with Product Validation, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "un1ZqM8aYng",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T20:29:35",
    "ai_confidence": 33.35,
    "ai_mentions": 1.25,
    "ai_alignment": 3.9,
    "ai_depth": 2.8,
    "ai_intent": 3.2,
    "ai_audience": 7.1,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses engineering challenges related to supporting multiple production versions, such as merge conflicts and technical debt, focusing on operational pain points and the case against 'branch by customer.' While it argues for simplifying and standardizing branching strategies, it does not mention Agile, DevOps, Lean, or market responsiveness. The alignment is low, as the discussion is technical debt centric, not about enabling quicker market response. The audience (engineering teams) loosely aligns with the category, but intent and depth toward actual market adaptability are very limited.",
    "reasoning_summary": "This piece focuses on engineering pain caused by maintaining multiple production versions, not on how to achieve market adaptability. It lacks discussion of Agile/DevOps/Lean and doesn't address how branching strategies help businesses respond to market changes, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "resourceId": "un1ZqM8aYng",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T20:29:37",
    "ai_confidence": 11.8,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 3.0,
    "ai_audience": 2.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content exclusively discusses the challenges and inefficiencies of supporting multiple software versions in production environments. There are no direct mentions of Value Stream Mapping or Lean processes. Conceptually, it does touch upon inefficiency, technical debt, and workflow complexity, but it never explores workflow visualisation or VSM techniques. The discussion is focused on engineering difficulties rather than mapping or process improvement. The audience appears to be engineering leaders or practitioners, but not specifically VSM practitioners. The signal/noise ratio is low because the entire piece centers on versioning pain points in software, which is adjacent—but not central—to Value Stream Mapping.",
    "reasoning_summary": "This content addresses engineering inefficiencies from multiple software version support but never references Value Stream Mapping or Lean frameworks. It focuses on technical debt and workflow pain, offering little alignment with VSM's visualization or process-optimization focus.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "un1ZqM8aYng",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T20:29:40",
    "ai_confidence": 13.7,
    "ai_mentions": 0.1,
    "ai_alignment": 1.9,
    "ai_depth": 2.0,
    "ai_intent": 2.3,
    "ai_audience": 3.2,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on the engineering challenges of supporting multiple production versions, discussing technical debt, context-switching, merge conflicts, and branching strategies. There are no mentions or real exploration of automated testing, its practices, frameworks, or its impact in such scenarios. The closest indirect alignment is that automated testing may mitigate bugs in such complex environments, but this is neither explicit nor discussed. The content targets a technical audience but not specifically those involved with automated testing.",
    "reasoning_summary": "This content analyzes version management and branching pain points, with no discussion of automated testing. It's relevant to software teams but doesn't mention or explore any automated testing methods, tools, or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "resourceId": "un1ZqM8aYng",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T20:29:40",
    "ai_confidence": 13.9,
    "ai_mentions": 0.1,
    "ai_alignment": 1.6,
    "ai_depth": 1.7,
    "ai_intent": 2.5,
    "ai_audience": 5.9,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses the technical and process challenges of supporting multiple software versions in production. There is no explicit mention or strong implication of mentoring, coaching, skill development, or leadership guidance. The tone is advisory for engineering teams but focuses entirely on technical process and workflow issues, not on the people development, mentoring, or coaching aspects central to the category. Any indirect relevance (like advocating for better practices) is limited to workflow advice and not actual team or individual growth via mentoring.",
    "reasoning_summary": "This content focuses on technical process issues and lacks any substantive discussion of mentoring, coaching, or skill development. It gives practical workflow advice to engineers but does not align with the mentoring category’s intent or scope.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "un1ZqM8aYng",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T20:29:38",
    "ai_confidence": 87.6,
    "ai_mentions": 5.5,
    "ai_alignment": 9.2,
    "ai_depth": 8.7,
    "ai_intent": 8.8,
    "ai_audience": 8.4,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content discusses the challenges and ramifications of supporting multiple versions in production, highlighting technical debt, instability, and inefficiency—all core concerns of Engineering Excellence. It explicitly addresses engineering quality, process improvement, and the negative impact of poor branching strategies. The discussion is detailed, critiques counter-productive patterns, and recommends simplification, which directly aligns with best practices in software development. The primary audience is engineering teams, ensuring strong audience fit. While the term 'Engineering Excellence' is not directly named, the conceptual alignment, depth, and intent are strong, and there are no penalties for outdated practices or negative tone.",
    "reasoning_summary": "This content fits Engineering Excellence well, offering an insightful look at how maintaining multiple production versions undermines quality and efficiency. Its critique of harmful practices and focus on process improvement is highly relevant to engineering teams aiming for best-in-class software delivery standards.",
    "level": "Primary"
  },
  "Definition of Workflow": {
    "resourceId": "un1ZqM8aYng",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:18",
    "ai_confidence": 4.25,
    "ai_mentions": 0.3,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 0.8,
    "ai_audience": 0.9,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses on the challenges of maintaining multiple production versions, increased technical debt, risks of branch-by-customer, and encourages simplification of versioning strategies. Nowhere does it reference the Definition of Workflow, explicit workflow policies, entry/exit criteria, WIP limits, or any Kanban/agile workflow theory. The focus is strictly on branching/versioning pain for engineering teams. No penalties applied, since the content is current and the tone is neutral/instructive.",
    "reasoning_summary": "The content discusses the negative impact of supporting multiple production versions but does not address the Definition of Workflow or its principles. There is little conceptual overlap or intent to explain workflow definition as understood in Kanban/agile.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "un1ZqM8aYng",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:29:16",
    "ai_confidence": 2.88,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.0,
    "ai_intent": 2.1,
    "ai_audience": 3.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content exclusively focuses on the engineering and operational challenges inherent in supporting multiple software versions in production—context-switching, merge conflicts, reverse integration, and technical debt. Nowhere does it mention or allude to Objective Key Results (OKRs), goal-setting, outcome-based measurement, or strategic alignment using OKRs. Its audience (engineering teams) could overlap with those practicing OKRs, but OKRs are not discussed or referenced. The intent is to highlight problems with branching strategies, not to connect issues to outcomes, measure progress, or implement continuous improvement frameworks based on OKRs. No penalty was applied since the content is current and not satirical or critical of the OKR framework.",
    "reasoning_summary": "This content discusses engineering pain points in maintaining multiple software versions and does not reference or align with the Objective Key Results framework. There is no discussion of OKRs, goal-setting, or outcome measurement strategies.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "un1ZqM8aYng",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:03:53",
    "ai_confidence": 20.36,
    "ai_mentions": 0.1,
    "ai_alignment": 2.3,
    "ai_depth": 2.6,
    "ai_intent": 2.5,
    "ai_audience": 6.7,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content addresses the challenges associated with maintaining multiple versions in production, focusing on increased complexity, technical debt, and inefficiency for engineering teams. Although it discusses development process pain points (such as merge conflicts and branch management), it does not explicitly or conceptually address the Product Developer accountability, structure, or behavioral expectations as defined in modern product development frameworks. There are no mentions of cross-functional skills, collective accountability, Sprint Backlog, Definition of Done, or other core elements specific to Product Developer as a role. The audience seems to be development practitioners, which partially aligns, but the signal is diluted because it frames the topic generically for 'engineering teams' rather than Product Developers, and lacks depth on formal product development accountability.",
    "reasoning_summary": "This content critiques technical debt from supporting multiple production versions, focusing on engineering inefficiencies. It targets development teams broadly and lacks discussion of the Product Developer role, responsibilities, or accountability, resulting in only partial category alignment.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "un1ZqM8aYng",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:03:54",
    "ai_confidence": 4.65,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.6,
    "ai_intent": 0.7,
    "ai_audience": 1.3,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content focuses on the technical and process-related challenges of supporting multiple versions in production, such as context-switching, merge conflicts, and technical debt. It discusses team experiences and practices, but there are no mentions or explorations of human-AI collaboration, collective cognition, or any interaction between humans and AI. The messaging is aimed at engineering teams but is limited to technical team practices, not socio-technical systems or the emergent qualities highlighted by the 'Collective Intelligence' category. The content never references AI, partnership with AI, or topics like distributed cognition or human-AI decision-making.",
    "reasoning_summary": "This content strictly discusses engineering and process issues with supporting multiple software versions and does not address human-AI collaboration or any aspect of collective intelligence covered by the category definition.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:34",
    "ai_confidence": 23.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.0,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 6.8,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on the operational and developmental inefficiencies caused by supporting multiple production versions, such as increased bugs, merge conflicts, and technical debt. While this touches on engineering practices, it does not address the maximisation of human or AI agency, decentralised decision-making, or other philosophical aspects central to Agentic Engineering. There are no direct mentions of agency, autonomy, observability, or ethical AI. The discussion is technical and practical but remains within the realm of standard engineering process improvement rather than the deliberate design choices and frameworks central to Agentic Engineering. The audience is technical (engineering teams), and the content is focused, but its core intent and depth do not sufficiently align with the category definition.",
    "reasoning_summary": "This content analyzes technical debt and branching strategies but does not discuss maximizing agency for humans or intelligent systems. It stays within conventional process critique, with little conceptual overlap with Agentic Engineering topics.",
    "level": "Ignored"
  },
  "Agentic Software Delivery": {
    "resourceId": "un1ZqM8aYng",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:17",
    "ai_confidence": 13.4,
    "ai_mentions": 0.0,
    "ai_alignment": 1.4,
    "ai_depth": 2.1,
    "ai_intent": 2.0,
    "ai_audience": 4.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses the challenges and drawbacks of supporting multiple software versions in production (merge conflicts, technical debt, branch-by-customer approaches) and advocates for standardization. However, it makes no mention of AI agents, context-aware systems, agentic delivery, or integration of automation with human expertise. The discussion focuses exclusively on engineering workflow and traditional software delivery pain points, with no exploration or hint of agentic principles. Audience is likely technical (engineers), which partially overlaps the Agentic Software Delivery audience, but content is otherwise not relevant to the category. No outdated practices or contradicting tone was found, so no penalties were applied.",
    "reasoning_summary": "This content focuses solely on traditional version management challenges and does not reference or align with Agentic Software Delivery or its key principles. It is unrelated except for targeting a technical audience; relevance is minimal.",
    "level": "Ignored"
  }
}