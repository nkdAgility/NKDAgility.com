{
  "GitHub": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "GitHub",
    "calculated_at": "2025-06-17T16:16:05",
    "ai_confidence": 7.5,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 0.5,
    "ai_intent": 0.7,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum but does not mention GitHub directly or explore its functionalities. There are no implicit references to GitHub services, tools, or workflows, nor is there any discussion of Agile in a GitHub context. Its intent and focus are on improving Scrum practice generally, not on specific GitHub methodologies, features, or audience. Minimal, if any, signal overlaps with the GitHub category.",
    "reasoning_summary": "This content is focused on general Scrum engineering practices like Feature Flags and TDD, without referencing GitHub or aligning with its tools or audience. There is no relevant mention or conceptual overlap with the GitHub category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Daily Scrum",
    "calculated_at": "2025-06-17T16:16:08",
    "ai_confidence": 14.26,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 2.3,
    "ai_intent": 2.2,
    "ai_audience": 4.4,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum, emphasizing the importance of continuous flow and reducing technical debt. There is no explicit or implicit reference to the Daily Scrum event or its related topics, structure, or purpose. While the audience (Scrum practitioners/teams) partially overlaps, the main themes and intent are not aligned with the Daily Scrum category, and references to Scrum are general or focused on Sprint workflow and engineering, not on team alignment, adaptation, or inspection typical of the Daily Scrum context.",
    "reasoning_summary": "This content centers on engineering practices for better Sprint workflow in Scrum, not on the Daily Scrum. There are no mentions or discussion of Daily Scrum roles, structure, or purpose. Audience overlap is limited due to the engineering focus, resulting in low alignment with the category.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Systems Thinking",
    "calculated_at": "2025-06-17T16:16:00",
    "ai_confidence": 25.37,
    "ai_mentions": 0.4,
    "ai_alignment": 3.9,
    "ai_depth": 2.8,
    "ai_intent": 2.2,
    "ai_audience": 7.1,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content discusses evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflows within Scrum. While these techniques can relate to seeing software delivery as a system, the article does not mention 'Systems Thinking,' nor does it explore concepts like feedback loops, system mapping, or holistic analysis. Its focus is practical engineering change, not systemic interconnections, mapping, or theory. The closest alignment is the implicit interconnectedness between engineering practices and workflow, but this is not made explicit or deeply explored. The audience (Scrum teams and engineers) could overlap with Systems Thinking’s audience, and the content is on-topic for engineering practices but not for Systems Thinking as defined.",
    "reasoning_summary": "This content focuses on engineering practices in Scrum, such as Feature Flags and TDD, to enhance Sprint workflow—not on Systems Thinking principles, frameworks, or systemic analysis. There’s minimal alignment, as the main topic is technical workflow improvement rather than organizational system dynamics.",
    "level": "Ignored"
  },
  "Accountability": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Accountability",
    "calculated_at": "2025-06-17T16:16:01",
    "ai_confidence": 30.628,
    "ai_mentions": 2.3,
    "ai_alignment": 3.7,
    "ai_depth": 4.1,
    "ai_intent": 3.9,
    "ai_audience": 8.6,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content centers on evolving engineering practices—Feature Flags, TDD, and refactoring—to improve Sprint workflow quality in Scrum. While it references work completion and technical debt, accountability itself is neither a key theme nor directly discussed. There are only tangential hints towards outcome ownership (\"Unfinished Backlog Items\" vs. \"Undone Work\") but no explicit treatment of accountability structures, role clarity, or outcome ownership as foundational mechanisms. The major focus is practical implementation techniques for flow, not accountability frameworks. The content is targeted at Scrum teams and practitioners, and stays highly relevant for this technical audience, but does not substantially discuss accountability as per the definition.",
    "reasoning_summary": "This content primarily addresses engineering practices that enable smoother Sprint workflows in Scrum, with only minimal and indirect allusion to accountability. It does not directly discuss outcome ownership, role accountabilities, or structural mechanisms, so fit to the 'Accountability' category is low.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agentic Agility",
    "calculated_at": "2025-06-17T16:16:05",
    "ai_confidence": 29.01,
    "ai_mentions": 0.2,
    "ai_alignment": 3.3,
    "ai_depth": 2.7,
    "ai_intent": 3.1,
    "ai_audience": 7.4,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses on technical engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum, linking these to smoother flow and reduced technical debt. However, there are no explicit references to agency, agentic actions, or adaptive intentionality in Agile practices as defined by the 'Agentic Agility' category. The alignment is moderate as the improvements enable better outcomes, but the discussion is primarily about tools and methods, not about agency, autonomy, or intentional adaptation. The audience and signal-to-noise are strong and relevant to Scrum practitioners, but the fundamental conceptual fit for 'Agentic Agility' is weak.",
    "reasoning_summary": "While highly relevant to Scrum engineers, the content does not address agency or agentic adaptation. It focuses on technical enablers of workflow and debt reduction, not on the intentional, adaptive behaviors central to 'Agentic Agility.' The fit is low for this category.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Artifact",
    "calculated_at": "2025-06-17T16:16:06",
    "ai_confidence": 21.025,
    "ai_mentions": 2.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.5,
    "ai_audience": 6.2,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) and their impact on Sprint workflow and technical debt. There are only fleeting references to Scrum artifacts—'Unfinished Backlog Items' and 'Undone Work'—without substantial exploration of artifact structure, transparency, or adaptation. The discussion centers on work flow and engineering enablers rather than the formal role or management of Scrum artifacts. While relevant for Scrum practitioners, the primary focus is not on artifacts as defined by the classification. Audience alignment is moderately strong (Scrum practitioners/engineers). Signal is diluted by discussion of practices rather than artifact inspection or adaptation.",
    "reasoning_summary": "This content is focused on engineering practices and workflow in Scrum, with only brief, indirect references to artifacts. It discusses concepts adjacent to artifacts but does not explore their structure or role in detail, making its relevance to the 'Artifact' category low.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Large Scale Agility",
    "calculated_at": "2025-06-17T16:16:01",
    "ai_confidence": 14.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.7,
    "ai_intent": 2.0,
    "ai_audience": 4.2,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow within Scrum teams. There is no direct mention or implicit discussion of scaling Agile across multiple teams or the enterprise, nor are large-scale frameworks or cross-team strategies referenced. The discussion is strictly at the team level, aligning with improving delivery for Scrum rather than enterprise agility. Therefore, conceptual alignment, depth, and intent toward Large Scale Agility are low, though technical practitioners (audience) and signal are relatively stronger given the focus and specific advice.",
    "reasoning_summary": "This content is centered on evolving engineering practices for individual Scrum teams, not on scaling Agile across an organization. It doesn't address frameworks, leadership, or enterprise-wide strategies key to Large Scale Agility.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Collaboration Tools",
    "calculated_at": "2025-06-17T16:16:01",
    "ai_confidence": 19.1,
    "ai_mentions": 0.4,
    "ai_alignment": 1.7,
    "ai_depth": 2.2,
    "ai_intent": 2.4,
    "ai_audience": 7.1,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on engineering practices such as Feature Flags, TDD, refactoring, and their impact on Sprint workflow in Scrum. There are no direct mentions or substantial discussion of collaboration tools, platforms, or communication enhancers. While relevant to Agile teams, the alignment to Collaboration Tools is tangential at best, as the content is about workflow and engineering enablers rather than tools for team coordination or information sharing. The intent is to discuss engineering excellence rather than collaborative platforms, and almost all key points revolve around code quality, deployment safety, and technical debt, not collaboration tools or their integration. No penalties were applied as the content is neither outdated nor overtly critical. The low confidence score is due to a near-absence of any material directly related to Collaboration Tools per the category's strict definition.",
    "reasoning_summary": "This content discusses engineering practices for improving Sprint workflows in Scrum, focusing on Feature Flags, TDD, and refactoring. It does not address collaboration tools or communication platforms and thus only minimally aligns with the Collaboration Tools category.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Lean Thinking",
    "calculated_at": "2025-06-17T16:16:02",
    "ai_confidence": 38.933,
    "ai_mentions": 1.3,
    "ai_alignment": 3.9,
    "ai_depth": 4.7,
    "ai_intent": 5.2,
    "ai_audience": 9.0,
    "ai_signal": 9.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "Direct mentions of Lean Thinking are absent; key Lean terms like 'flow' and 'waste' are referenced, but only in the context of efficient engineering practice within Scrum, not as Lean principles per se. The content discusses enabling smoother workflow and reducing technical debt through Feature Flags, TDD, and refactoring, aligning to Lean's notions of flow and continuous improvement, but not deeply exploring foundational Lean concepts or explicit Lean tools. The target audience (Scrum practitioners and engineers) overlaps with those interested in Lean, and the content tightly focuses on practical workflow efficiency. However, core Lean Thinking methods—including waste types (Muda), Value Stream Mapping, Kaizen, and Lean leadership—are not directly discussed or named. Therefore, the overall fit is partial: the theme is efficiency and flow but framed via engineering best practices in Scrum, not Lean Thinking as defined.",
    "reasoning_summary": "While the content promotes workflow efficiency and hints at 'flow'—a Lean concept—it doesn't directly discuss Lean Thinking principles, tools, or terminology. Its primary focus is on Scrum engineering practices, leading to only a moderate alignment with the Lean Thinking category.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Organisational Psychology",
    "calculated_at": "2025-06-17T16:16:04",
    "ai_confidence": 11.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 0.8,
    "ai_intent": 1.5,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses almost exclusively on technical engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow within Scrum. It discusses process efficiency and technical debt but does not cover psychological factors, theories of motivation, leadership, team dynamics, or any of the core concepts of organisational psychology. No explicit or implicit references to psychological principles, employee engagement, culture, or behaviour are present. The audience is primarily Scrum practitioners, engineers, or technical leads, not psychologists or those interested in organisational behaviour. The content is clear and on-topic for engineering process improvement, but does not align in theme, intent, or substance with the Organisational Psychology category.",
    "reasoning_summary": "This content centers on technical strategies to improve Scrum workflow, not psychological factors impacting organisational behaviour. Its focus is engineering practice—not motivation, leadership, or team dynamics—so the fit with Organisational Psychology is minimal.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Self Organisation",
    "calculated_at": "2025-06-17T16:16:06",
    "ai_confidence": 36.13,
    "ai_mentions": 0.6,
    "ai_alignment": 3.2,
    "ai_depth": 3.5,
    "ai_intent": 3.2,
    "ai_audience": 6.5,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) as mechanisms to improve Sprint workflow and manage technical debt. While these practices can support autonomy and quality—which are relevant to self-organisation—they are not directly discussed in a self-organisation context. There are no explicit mentions of self-organisation or its principles, and the discussion centers on technical enablers rather than team autonomy, ownership, or collaborative structures. The audience (Scrum/Agile practitioners) is suitable, and the content is focused, but self-organisation is only implied as a possible benefit rather than examined directly. There are no outdated practices or contradictory tones, so no penalties are applied.",
    "reasoning_summary": "This content discusses engineering practices to improve Sprint workflow, focusing on technical methods rather than principles or practices of self-organisation. While related, it falls short of a direct fit with the self-organisation category.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-06-17T16:16:05",
    "ai_confidence": 29.92,
    "ai_mentions": 0.7,
    "ai_alignment": 3.2,
    "ai_depth": 2.6,
    "ai_intent": 3.0,
    "ai_audience": 6.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses on engineering best practices (Feature Flags, TDD, refactoring) to improve Scrum Sprint workflow and reduce technical debt. While these practices enable agile teams to deliver better software and align partially with some principles in Agile Product Operating Models, the material does not discuss APOM itself, nor does it address organizational structure, product-centricity, governance, or cross-team topics central to the defined category. There are no direct mentions of APOM or key elements like business roadmaps, product management integration, or evidence-based management frameworks. The primary audience—practitioner-level Scrum teams—fits peripherally to APOM, but the discussion is engineering-centric, with minimal relevance to broader organizational or operational model considerations.",
    "reasoning_summary": "The content is mostly about technical practices within Scrum, touching on agility but lacking direct or deep connection to Agile Product Operating Models or their organizational context. Relevance to the category is low, with only indirect alignment.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Capability",
    "calculated_at": "2025-06-17T16:16:08",
    "ai_confidence": 56.25,
    "ai_mentions": 2.6,
    "ai_alignment": 6.9,
    "ai_depth": 6.2,
    "ai_intent": 7.1,
    "ai_audience": 7.7,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content discusses evolved engineering practices such as Feature Flags, TDD, and refactoring, positioning them as prerequisites for effective Sprint workflow and enabling flow within Scrum. While these practices can contribute to capability, the discussion mainly frames them as techniques or enablers rather than systemic, enduring capabilities. There is acknowledgement of their importance beyond isolated use, but the piece lacks in-depth exploration of how these practices are cultivated as organizational or team-wide capabilities, and does not address broader integration into culture or sustained improvement. Audience fit is strong, targeting practitioner-level Scrum teams, and the focus largely avoids filler. There are no explicit direct mentions of 'capability' in a systemic sense, leading to a moderate confidence score.",
    "reasoning_summary": "The content highlights important engineering practices that support better Sprint workflows in Scrum, but mainly treats them as enablers or techniques instead of deeply exploring their role as enduring organizational capabilities. Its alignment with the capability category is moderate.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-06-17T16:16:01",
    "ai_confidence": 23.33,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 2.9,
    "ai_audience": 7.6,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content discusses evolving engineering practices (Feature Flags, TDD, refactoring) to enable smoother Scrum Sprint workflows and reduce technical debt. It is focused on practices that support better flow in development but does not mention or discuss Value Stream Mapping explicitly or conceptually. The discussion centers around enabling flow and quality within Scrum, not value stream visualization, identification of waste, or VSM methodologies. The audience aligns broadly as both target practitioners, but there is no substantive connection to VSM topics, steps, or tools.",
    "reasoning_summary": "This content focuses on improving Scrum Sprint workflows through engineering practices but does not address Value Stream Mapping in concept or by name. Its relevance is limited to flow improvement, with no discussion of visualizing or optimizing value streams.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Discipline",
    "calculated_at": "2025-06-17T16:16:02",
    "ai_confidence": 47.61,
    "ai_mentions": 1.2,
    "ai_alignment": 5.6,
    "ai_depth": 4.9,
    "ai_intent": 5.3,
    "ai_audience": 7.9,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content explicitly references evolving engineering practices in Scrum, mentioning systemic improvement concepts such as flow and maintainability. However, its primary focus is on specific techniques (Feature Flags, TDD, refactoring) as enablers of better Sprint workflow, without delving into the mature principles or governance structures that characterize a discipline. There is limited discussion of systemic discipline maturation or organizational performance, and discipline is only implied, not directly conceptualized. The target audience—practitioners working with Scrum—fits, as does the general intent to improve practices, but the depth is moderate and does not extend to codified standards or the evolution of Agile as a discipline.",
    "reasoning_summary": "The content centers on evolving engineering practices for Sprint workflow in Scrum, aligning mostly with practical methodology improvements but only tangentially with the broader concept of Discipline as a structured, systematized field of knowledge.",
    "level": "Tertiary"
  },
  "Psychological Safety": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Psychological Safety",
    "calculated_at": "2025-06-17T16:16:07",
    "ai_confidence": 8.8,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 1.4,
    "ai_audience": 3.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses almost entirely on technical engineering practices (Feature Flags, TDD, refactoring) and their impact on Scrum workflows and technical debt. It does not mention psychological safety, nor does it discuss related concepts like risk-taking, open communication, or team culture. The main audience is technical Scrum practitioners, which partially overlaps with those interested in psychological safety, but all discussion is centered on workflow optimization and reducing unfinished or technical debt rather than team dynamics or emotional climate within teams. There is no evidence of either explicit or implicit discussion of psychological safety, depth, or strategic alignment to the category, and there are no penalties necessary, as the tone and content are neutral and up-to-date.",
    "reasoning_summary": "This content is about technical practices to improve Scrum Sprint flow and reduce technical debt. It does not reference or discuss psychological safety, either directly or implicitly, and focuses entirely on engineering process improvements, making it unrelated to the category.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Evidence Based Management",
    "calculated_at": "2025-06-17T16:16:02",
    "ai_confidence": 24.97,
    "ai_mentions": 0.13,
    "ai_alignment": 2.55,
    "ai_depth": 2.87,
    "ai_intent": 3.1,
    "ai_audience": 7.05,
    "ai_signal": 7.37,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content primarily addresses engineering practices aimed at improving Sprint workflow within Scrum, focusing on techniques like Feature Flags, TDD, and refactoring to manage technical debt and enable continuous delivery. There are no direct mentions of Evidence-Based Management (EBM), nor clear references to data-informed decision-making, key outcome metrics, or strategic value delivery. While the discussion of technical debt and flow hints at process improvement, it does so through the lens of engineering tactics rather than empirical management practices or metric-based optimization. The audience is likely to overlap (practitioners interested in process improvement), but the thematic content remains within technical enablement, not EBM’s strategic scope.",
    "reasoning_summary": "This content explores engineering tactics to enhance Scrum workflow and reduce technical debt but does not address Evidence-Based Management's principles, metrics, or empirical decision-making focus. Its primary alignment is with process improvement, not strategic value delivery via evidence.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Model",
    "calculated_at": "2025-06-17T16:16:05",
    "ai_confidence": 36.35,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.3,
    "ai_intent": 3.5,
    "ai_audience": 8.0,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content centers on practical engineering practices (Feature Flags, TDD, refactoring) that support Scrum workflow, with emphasis on flow and technical debt. It does touch on the concept of 'flow,' which is a model-influenced idea, but does not explicitly reference or deeply discuss any conceptual models, frameworks, or representations as defined by the category. There are scant direct mentions of general model concepts (e.g., 'flow' as a model of work), but the focus remains on actionable practices versus models, frameworks, or abstractions. Audience and signal scores are higher due to alignment with practitioners who might use models, though the bulk of content is not directly model-focused.",
    "reasoning_summary": "While the content references ideas like 'flow' that relate to models in Agile, it primarily describes engineering practices without substantial or explicit discussion of conceptual models or frameworks. Its relevance to the 'Model' category is therefore limited and indirect.",
    "level": "Ignored"
  },
  "Business Agility": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Business Agility",
    "calculated_at": "2025-06-17T16:16:06",
    "ai_confidence": 48.31,
    "ai_mentions": 2.2,
    "ai_alignment": 5.8,
    "ai_depth": 4.7,
    "ai_intent": 5.5,
    "ai_audience": 7.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "Direct mentions of Business Agility are absent; the focus is on evolving engineering practices (Feature Flags, TDD, refactoring, Continuous Delivery) within Scrum teams to improve sprint workflow and reduce technical debt. While these practices can indirectly support organisational responsiveness and adaptability, the content does not connect them to broader principles or strategies of Business Agility. There is little exploration of organisational culture, leadership, or structural agility. The target audience (Scrum practitioners/engineers) partially overlaps with Business Agility’s audience, but the content remains tactical rather than strategic. Discussion depth is moderate, largely addressing technical and workflow improvements, rather than holistic, enterprise agility.",
    "reasoning_summary": "This content centers on engineering practices for Scrum workflow improvement. While practices like CD and refactoring can underpin business agility, the discussion remains technical, with limited treatment of broader agility principles, organisational impact, or strategy.",
    "level": "Tertiary"
  },
  "Modern Source Control": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Modern Source Control",
    "calculated_at": "2025-06-17T16:16:02",
    "ai_confidence": 31.7,
    "ai_mentions": 0.6,
    "ai_alignment": 2.8,
    "ai_depth": 3.3,
    "ai_intent": 3.9,
    "ai_audience": 8.6,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content is focused on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Scrum workflows and reduce technical debt. While Continuous Delivery is mentioned, which can integrate with version control, there are no direct references to modern source control practices, systems, branching strategies, or versioning methods. The thematic alignment and in-depth discussion center on enabling flow and quality within Scrum, not on version control itself. Audience fit is high, as the intended readers are technical practitioners in Agile contexts. The signal-to-noise ratio is moderate—most content is relevant to technical agility, but little is pertinent to modern source control. No penalties are applied as the tone is constructive and not outdated.",
    "reasoning_summary": "This content focuses on engineering practices like Feature Flags, TDD, and refactoring to improve Scrum workflows, with only peripheral relevance to version control practices. It doesn't directly engage with Modern Source Control topics, making alignment and depth relatively low.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Decision Theory",
    "calculated_at": "2025-06-17T16:16:03",
    "ai_confidence": 13.65,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 0.9,
    "ai_intent": 2.1,
    "ai_audience": 4.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum. There are no direct mentions of Decision Theory or its core concepts such as decision-making under uncertainty, heuristics, probability, behavioral economics, or cognitive psychology. The alignment is minimal—there is a subtle nod to confidence and risk in code changes but not in the context of Decision Theory frameworks or methodologies. Discussion depth is shallow, with the primary intent being to advocate best engineering practices, targeting Scrum/DevOps practitioners, not Decision Theory scholars. Only a minor fraction implicitly touches on decision-related language, but this is incidental, not systematic. No penalties were needed as the content is current and neutral in tone.",
    "reasoning_summary": "The content overwhelmingly addresses technical engineering practices in Scrum, not principles or frameworks of Decision Theory. It does not align conceptually or in focus with the Decision Theory category.",
    "level": "Ignored"
  },
  "Forecasting": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Forecasting",
    "calculated_at": "2025-06-17T16:16:07",
    "ai_confidence": 22.09,
    "ai_mentions": 0.5,
    "ai_alignment": 2.2,
    "ai_depth": 2.7,
    "ai_intent": 2.1,
    "ai_audience": 8.4,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content is focused on evolving engineering practices (Feature Flags, TDD, refactoring) to improve sprint flow and minimize technical debt within Scrum. There are no direct or indirect mentions of forecasting, predictive techniques, empirical metrics, or forecast-driven planning. The conceptual alignment, depth, and intent are minimal for the Forecasting category, as the primary concern is workflow efficiency and code quality, not delivery projection or prediction. The audience (Scrum practitioners, engineers) and signal/noise ratio are appropriate, but do not compensate for misalignment with Forecasting.",
    "reasoning_summary": "This content discusses improving engineering practices for better sprint workflow and reduced technical debt, not forecasting or predictive methods in Agile. Its connection to Forecasting is minimal and largely indirect.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Strategy",
    "calculated_at": "2025-06-17T16:16:09",
    "ai_confidence": 36.52,
    "ai_mentions": 1.2,
    "ai_alignment": 3.85,
    "ai_depth": 3.5,
    "ai_intent": 3.7,
    "ai_audience": 7.1,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "Direct mentions of 'strategy' or related high-level planning are absent. The focus is on specific practices (Feature Flags, TDD, refactoring, CD) to improve Sprint workflow, not on strategic alignment or decision-making. The content does emphasize enablers of flow and the importance of evolving practices, but these are discussed at a tactical/operational level without linking to overarching organizational goals or strategic frameworks. The audience consists of practitioners aiming to improve Scrum implementation, rather than strategists or decision-makers. There is little discussion of long-term vision, cross-team alignment, or leadership in setting direction. Signal is moderate—content is focused, but firmly rooted in operations.",
    "reasoning_summary": "The content centers on operational improvements through engineering practices in Scrum, with little emphasis on high-level strategy, alignment, or planning. Its focus is practical and tactically oriented, lacking the broader strategic scope required for this category.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Enterprise Agility",
    "calculated_at": "2025-06-17T16:16:03",
    "ai_confidence": 28.76,
    "ai_mentions": 0.5,
    "ai_alignment": 3.2,
    "ai_depth": 2.7,
    "ai_intent": 3.5,
    "ai_audience": 7.7,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content is focused on engineering practices (Feature Flags, TDD, refactoring) to improve Scrum Sprint workflows, with an emphasis on reducing technical debt at the team level. There are no explicit or implicit mentions of organisational agility, scaling frameworks, enterprise-wide transformation, or cultural dimensions. The audience is developers and Scrum practitioners, not organisational leaders or strategists. While solidly agile-aligned, the discussion does not extend beyond individual/team practice improvement and fails to address enterprise or organisational agility concepts.",
    "reasoning_summary": "This content discusses advanced engineering practices to streamline Scrum Sprints and reduce technical debt, but its focus remains on team-level agile improvements—not organisational or enterprise agility. It lacks references to enterprise change or large-scale agility.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Lean Principles",
    "calculated_at": "2025-06-17T16:16:05",
    "ai_confidence": 47.475,
    "ai_mentions": 1.0,
    "ai_alignment": 6.6,
    "ai_depth": 5.9,
    "ai_intent": 6.4,
    "ai_audience": 6.2,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) within Scrum, highlighting improved workflow, flow, and reduced technical debt. While these themes can ladder up to Lean concepts like flow and waste reduction, there are no direct mentions of Lean or its terminology (Muda, Kaizen, etc.). Discussion is practical and technical, aimed at Scrum practitioners, with indirect alignment to Lean through an emphasis on flow and avoiding technical debt, but does not substantively address Lean principles, tools, or philosophy. The fit is moderate, with the main connection being the promotion of 'flow' as a value, but little explicit or in-depth linkage to Lean specifics.",
    "reasoning_summary": "This content aligns moderately with Lean Principles through its focus on improving flow and reducing technical debt in Scrum via engineering practices, but lacks direct Lean terminology or in-depth discussion of Lean concepts. The fit is indirect rather than explicit.",
    "level": "Tertiary"
  },
  "Technical Excellence": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Technical Excellence",
    "calculated_at": "2025-06-17T16:16:10",
    "ai_confidence": 90.9,
    "ai_mentions": 7.3,
    "ai_alignment": 9.6,
    "ai_depth": 8.5,
    "ai_intent": 9.1,
    "ai_audience": 8.9,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly discusses technical excellence by referencing key engineering practices such as TDD, Feature Flags, refactoring, and Continuous Delivery, and explicitly links these to improved Sprint workflow and reduction of technical debt in Scrum. The conceptual alignment is strong, as the practices are positioned as foundational enablers of high-quality, maintainable software. The discussion goes beyond surface-level mentions by explaining how each practice contributes to flow and addresses technical debt, integrating Agile principles effectively. The primary intent is educational and compellingly aligned with the category's audience—Scrum teams and technical practitioners aiming to improve engineering practices. While some elaboration is left to the imagination, the content remains focused, with little off-topic material and no penalties warranted for outdated or negative framing. Scores are non-identical, reflecting nuance in depth and explicitness versus conceptual alignment.",
    "reasoning_summary": "This content effectively explores technical excellence by highlighting how TDD, Feature Flags, refactoring, and Continuous Delivery support maintainable code and better sprint workflow in Scrum, aligning closely with the intended category for technical audiences.",
    "level": "Primary"
  },
  "Product Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Development",
    "calculated_at": "2025-06-17T16:16:04",
    "ai_confidence": 69.34,
    "ai_mentions": 2.7,
    "ai_alignment": 7.5,
    "ai_depth": 6.8,
    "ai_intent": 7.0,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) and how they improve Sprint workflows and reduce technical debt, which are tangentially connected to product development. While it references Scrum and discusses enabling smoother deliveries, it centers primarily on technical team practices rather than the broader product development lifecycle (e.g., discovery, customer feedback integration). The audience and intent target Scrum teams and engineers looking to improve workflow, which fits a subset of product development but doesn't fully address methodologies for achieving value or strategy alignment across the whole lifecycle. There are no penalties—no outdated content or critical/satirical tone. The discussion is relevant but lacks depth and conceptual breadth about iterative product outcomes, strategic risk mitigation, or broader cross-functional practices.",
    "reasoning_summary": "The content emphasizes technical practices that help Scrum teams deliver more effectively, aligning partly with product development by facilitating smoother iterations and reducing technical debt. However, it stops short of addressing the full product development cycle or strategic alignment.",
    "level": "Secondary"
  },
  "Competence": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Competence",
    "calculated_at": "2025-06-17T16:16:04",
    "ai_confidence": 67.3,
    "ai_mentions": 2.7,
    "ai_alignment": 7.1,
    "ai_depth": 7.5,
    "ai_intent": 7.4,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content centers on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow and reduce technical debt. While it directly promotes skill development and continuous improvement, explicit mention of 'competence' is absent; the focus is more on tools and practices as enablers of professional delivery. The discussion aligns conceptually—emphasizing mastery and code quality to support Scrum—but it doesn't deeply explore competence itself as a principle or distinct topic. The signal is strong and the audience is Scrum practitioners, a direct fit. No penalties were warranted, as the advice and practices are current and positively framed.",
    "reasoning_summary": "This content aligns well with the Competence category by advocating advanced engineering practices that underpin quality and continuous improvement in Scrum teams, even though the concept of competence is implied more than named.",
    "level": "Secondary"
  },
  "Asynchronous Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Asynchronous Development",
    "calculated_at": "2025-06-17T16:16:08",
    "ai_confidence": 19.75,
    "ai_mentions": 0.5,
    "ai_alignment": 2.3,
    "ai_depth": 2.1,
    "ai_intent": 2.8,
    "ai_audience": 6.9,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on evolving engineering practices—Feature Flags, TDD, and refactoring—to improve Scrum workflows, with emphasis on technical flow and reducing technical debt. It does not mention or explore asynchronous development principles, tools, distributed/team coordination across time zones, or asynchronous-specific practices. No direct or indirect references to asynchronous methods are present, and the content is tightly focused on engineering technique within Scrum's context. The audience (Scrum teams/engineers) is somewhat adjacent but not specific to asynchronous development. There is no penalty, as content is not critical or outdated.",
    "reasoning_summary": "This content discusses engineering practices for better sprint flow in Scrum but contains no direct or substantial alignment with asynchronous development. It is focused on process improvement within Sprint/engineering, not on asynchronous collaboration or team structures.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Organisational Physics",
    "calculated_at": "2025-06-17T16:16:09",
    "ai_confidence": 18.15,
    "ai_mentions": 0.1,
    "ai_alignment": 2.7,
    "ai_depth": 2.4,
    "ai_intent": 2.3,
    "ai_audience": 6.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content does not directly mention or reference Organisational Physics or systems thinking. Its focus is exclusively on practical engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum, without discussing organisational dynamics, feedback loops, or structural interactions. There is a slight conceptual overlap regarding flow and team processes, but these are addressed from a technical and team workflow perspective, not from a holistic organisational systems viewpoint. As such, discussion depth, alignment, and intent toward the Organisational Physics category remain minimal. The content does target practitioners (engineers/Scrum teams), somewhat aligning with one potential audience, but overall organisational systems thinking is not addressed.",
    "reasoning_summary": "This content centers on evolving engineering practices to improve Scrum workflows, focusing on technical tools and team-level processes rather than exploring organisational dynamics or systems thinking principles. It bears only minimal relevance to the Organisational Physics category.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Scrum Master",
    "calculated_at": "2025-06-17T16:16:11",
    "ai_confidence": 48.02,
    "ai_mentions": 2.1,
    "ai_alignment": 4.8,
    "ai_depth": 4.2,
    "ai_intent": 4.5,
    "ai_audience": 7.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content references Scrum and discusses evolving engineering practices to improve workflow within Scrum teams, but direct mention of the Scrum Master accountability is absent. The focus is on technical enablers (Feature Flags, TDD, refactoring) and Sprint workflow rather than the responsibilities or systemic impact of the Scrum Master role. While relevant to Scrum teams broadly—and possibly helpful for Scrum Masters—the discussion is not explicitly about the accountability, responsibility, or organizational effects specific to the Scrum Master. Audience fit is somewhat strong (Scrum practitioners, possibly Scrum Masters), but the overall conceptual alignment and depth regarding the Scrum Master accountability are limited.",
    "reasoning_summary": "The content focuses on engineering practices for Scrum teams rather than the Scrum Master accountability. While relevant for practitioners in Scrum contexts, it does not explore or reference the Scrum Master’s distinct responsibilities or impact, resulting in moderate overall confidence.",
    "level": "Tertiary"
  },
  "Working Software": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Working Software",
    "calculated_at": "2025-06-17T16:16:14",
    "ai_confidence": 56.72,
    "ai_mentions": 2.6,
    "ai_alignment": 6.8,
    "ai_depth": 7.3,
    "ai_intent": 6.1,
    "ai_audience": 8.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) that enable smoother Sprint workflow and reduce technical debt in Scrum. While these are crucial to achieving and maintaining working software, the primary discussion centers on process enablers and technical practices, not directly on the working software artifact itself. 'Shipping into production' and references to 'Unfinished Backlog Items' imply concern for working software quality and delivery, but explicit mention of working software as a deliverable is limited. The content's main intent aligns with supporting the creation of working software, but not as the direct subject. Target audience is Scrum and Agile practitioners, matching the category. Depth is moderate, discussing several practices but not exploring the direct definition or characteristics of working software as an artifact. No significant penalties were warranted.",
    "reasoning_summary": "This content is relevant to working software by focusing on practices that enable its delivery in Scrum, but it does not directly discuss working software as an artifact. The fit is moderate: practical alignment, but indirect treatment of the category.",
    "level": "Tertiary"
  },
  "Continuous Learning": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Continuous Learning",
    "calculated_at": "2025-06-17T16:16:09",
    "ai_confidence": 33.15,
    "ai_mentions": 1.3,
    "ai_alignment": 3.9,
    "ai_depth": 3.7,
    "ai_intent": 3.4,
    "ai_audience": 9.0,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content centers on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Scrum workflow and reduce technical debt. While it calls for ongoing practice improvement, it does not directly mention continuous learning or emphasize growth mindset, knowledge sharing, or feedback loops. The focus is technical and process improvement rather than learning or adaptability culture. There are minimal surface cues connecting it to the continuous learning category, resulting in only partial conceptual alignment and low direct mention. The main purpose is about workflow flow and technical rigor more than fostering continuous learning. The strong audience and relevance for Scrum teams, without off-topic drift, raise audience and signal scores. However, it falls short in depth and direct relevance to continuous learning.",
    "reasoning_summary": "While the content addresses evolving engineering practices in Scrum, it lacks direct focus on continuous learning principles. Its main thrust is technical process improvement rather than fostering a learning culture, resulting in low-to-moderate alignment with the 'Continuous Learning' category.",
    "level": "Ignored"
  },
  "Definition of Workflow": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Definition of Workflow",
    "calculated_at": "2025-06-17T16:16:06",
    "ai_confidence": 23.265,
    "ai_mentions": 1.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.9,
    "ai_intent": 2.5,
    "ai_audience": 7.8,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) that help Scrum teams achieve smoother sprint flows and reduce technical debt. However, it does not explicitly discuss the Definition of Workflow as a set of explicit agreements, entry/exit policies, or WIP limits per Kanban or agile theory. Instead, it addresses technical enablers for continuous flow in Scrum, not the dynamic, explicit model for workflow management. The audience is practitioners who would care about workflow visibility and improvement but the core principles of Definition of Workflow are not discussed in a meaningful way.",
    "reasoning_summary": "This content discusses engineering practices that enable flow in Scrum teams but does not explicitly address the Definition of Workflow as per Kanban or agile theory. It lacks detail on workflow policies, agreements, or entry/exit criteria, so relevance to the category is low.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Azure DevOps",
    "calculated_at": "2025-06-17T16:16:08",
    "ai_confidence": 12.075,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 1.4,
    "ai_audience": 4.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content discusses evolving engineering practices within Scrum, including Feature Flags, TDD, and refactoring. It emphasizes concepts like Continuous Delivery and managing technical debt. However, there is no explicit mention of Azure DevOps, its services, tools, or distinctive capabilities. The alignment is minimal, as the focus is on general agile and engineering practices that could be applied using any platform. The intended audience may overlap with Azure DevOps users, but the content is not targeted toward users of that suite specifically. No dimension warrants a penalty, as the content is not outdated or contradictory.",
    "reasoning_summary": "The content focuses on engineering practices in Scrum—like Feature Flags, TDD, and refactoring—but contains no direct or implied reference to Azure DevOps services, tools, or approaches. Thus, its relevance to the Azure DevOps category is very low.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-06-17T16:16:11",
    "ai_confidence": 17.88,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.4,
    "ai_intent": 2.2,
    "ai_audience": 6.7,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) that improve Sprint workflow in Scrum teams—key to technical agility, deployment, and code quality. MVP concepts, such as rapid testing of hypotheses, minimal feature sets, or market validation, are neither directly mentioned nor indirectly discussed. The piece targets Scrum practitioners but has little relation to MVP’s purpose or intent. The audience and focus are both technical but not product validation-centric.",
    "reasoning_summary": "This content centers on engineering practices for better Scrum workflow, not on Minimum Viable Product principles. It lacks direct or conceptual ties to MVP, focusing instead on code quality, flow, and technical debt—not market validation or product experimentation.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Metrics and Learning",
    "calculated_at": "2025-06-17T16:16:13",
    "ai_confidence": 37.25,
    "ai_mentions": 2.6,
    "ai_alignment": 4.2,
    "ai_depth": 4.0,
    "ai_intent": 4.9,
    "ai_audience": 7.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow, technical debt, and flow in Scrum. While these topics are highly relevant to quality and process improvement, the content does not discuss metrics, data, feedback loops, or learning mechanisms. There is a mention of 'confidence' as a question but not as a metric or measurement process. The content targets practitioners and is tightly focused, but lacks direct engagement with the core classification of using data or metrics to foster improvement. No penalties are applied as the content is not outdated nor contrary to the category.",
    "reasoning_summary": "This content discusses engineering practices that enable better workflows in Scrum but does not address metrics, feedback, or data-driven learning. Its fit to 'Metrics and Learning' is indirect—focusing on process enablers rather than evidence-based improvement.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Hybrid Agile",
    "calculated_at": "2025-06-17T16:16:08",
    "ai_confidence": 8.2,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.9,
    "ai_intent": 1.1,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on technical practices (Feature Flags, TDD, refactoring) that improve Sprint workflow within Scrum. There is no discussion or explicit mention of Hybrid Agile, combining traditional and agile approaches, or analysis of their conflicts. No key topics from the Hybrid Agile category definition are present—no mention of preserving command-and-control, failed hybrid efforts, or superficial agile adoption. The purpose centers on engineering best practices in agile, targeting Scrum practitioners, not Hybrid Agile challenges or audience.",
    "reasoning_summary": "This content centers on evolving Scrum engineering practices, not Hybrid Agile. There is no direct or conceptual overlap with Hybrid Agile integration challenges. Discussion targets Scrum teams and technical enhancement, lacking relevance to Hybrid Agile's critical analysis.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Leadership",
    "calculated_at": "2025-06-17T16:16:10",
    "ai_confidence": 14.61,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 1.6,
    "ai_intent": 1.3,
    "ai_audience": 6.2,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content is focused almost entirely on technical engineering practices (Feature Flags, TDD, refactoring) and their impact on Sprint workflow, not on leadership roles, responsibilities, or strategies. There are no direct references to leadership or its frameworks. While the piece may be of interest to leaders concerned with team process improvement, it does not discuss how leaders drive, support, or enable these changes. The audience could incidentally include leaders, but the content is more suited for practitioners or engineers. There are minimal overlaps with leadership themes only in the most indirect sense (e.g., potential for catalyzing change or improvement), but they are not explored or even implied substantively.",
    "reasoning_summary": "This content primarily addresses technical practices to improve Sprint workflow, with no direct engagement with leadership concepts or issues. Its focus is on practical engineering methods rather than organizational or leadership strategies.",
    "level": "Ignored"
  },
  "Product Owner": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Owner",
    "calculated_at": "2025-06-17T16:16:13",
    "ai_confidence": 22.62,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 2.3,
    "ai_audience": 3.1,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content centers on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow and technical health in Scrum teams. It discusses the distinction between unfinished backlog items and undone work, focusing on enabling better workflow and reducing technical debt. There are no explicit or significant references to the Product Owner's accountability, nor to backlog prioritization, value maximization, or stakeholder alignment—the hallmarks of this category. The audience appears to be technical practitioners (engineers, developers, possibly Scrum Masters), not Product Owners. The content's depth and alignment with Product Owner accountability is minimal, largely focusing on engineering process improvements.",
    "reasoning_summary": "The content mainly addresses engineering practices to enhance Scrum workflow and manage technical debt. It does not directly discuss Product Owner accountability, value delivery, or prioritization, making its relevance to the 'Product Owner' category very limited.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Delivery",
    "calculated_at": "2025-06-17T16:16:11",
    "ai_confidence": 75.45,
    "ai_mentions": 4.7,
    "ai_alignment": 8.9,
    "ai_depth": 7.6,
    "ai_intent": 8.3,
    "ai_audience": 9.2,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content directly discusses evolving engineering practices (Feature Flags, TDD, refactoring) that enable smoother software delivery within Scrum, and addresses flow, unfinished work, and technical debt—all key concerns in Product Delivery. It strongly aligns with topics like CI/CD and iterative quality, though it isn’t an exhaustive treatment and only briefly mentions delivery itself without deeply exploring customer-facing aspects. The target audience is clearly Scrum practitioners and Dev teams, and the discussion is concise but focused. No outdated practices or contrary tone are present, so no penalties apply.",
    "reasoning_summary": "The content is highly relevant to Product Delivery, focusing on engineering practices that streamline Sprint workflows in Scrum and referencing CI/CD. Its alignment and intent are strong, and it is aimed at practitioners involved in delivering software products.",
    "level": "Secondary"
  },
  "Behaviour Driven Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-06-17T16:16:13",
    "ai_confidence": 16.19,
    "ai_mentions": 0.1,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 3.7,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on improving Scrum Sprint workflows via engineering practices such as Feature Flags, Test-Driven Development (TDD), and refactoring. There is no mention or discussion of Behaviour Driven Development (BDD), its principles, practices, core terminology, tools, or collaboration with business stakeholders. The main intent is to promote modern technical practices within Scrum rather than discussing or aligning with BDD. The audience overlaps somewhat, as practitioners interested in engineering practices within Agile may also be interested in BDD, but here, the focus is much more on general technical enablement for Scrum workflows. There is minimal conceptual overlap—TDD and BDD are related but distinct—and no evidence of BDD-specific concepts like user stories, acceptance criteria, or cross-role collaboration. Thus, the scores are low across all dimensions except audience. No penalties were necessary as the content is not outdated or critical.",
    "reasoning_summary": "This content centers on engineering practices for Scrum sprints, emphasizing TDD, Feature Flags, and refactoring. It does not mention or align with Behaviour Driven Development, nor does it address its principles, tools, or collaboration focus. Overall fit with the BDD category is minimal.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-06-17T16:16:11",
    "ai_confidence": 38.86,
    "ai_mentions": 1.3,
    "ai_alignment": 4.5,
    "ai_depth": 3.9,
    "ai_intent": 4.8,
    "ai_audience": 5.6,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint flow in Scrum, targeting process improvement for technical teams. However, it discusses only technical practices in relation to Scrum—not the broader interplay between technology and organizational structures, team dynamics, or social/technical alignment. There is no direct mention of sociotechnical systems or reference to organizational culture, collaborative tools, or frameworks such as Cynefin. The audience is Scrum teams and practitioners interested in better workflow, which is somewhat relevant, but the content’s depth and alignment with 'Sociotechnical Systems' is moderate rather than strong, as it does not explore organizational or social factors in tandem with technological change.",
    "reasoning_summary": "This content highlights technical practices in Scrum but focuses mainly on engineering tools, with limited reference to social or organizational dynamics. It only tangentially aligns with the sociotechnical systems category, as it misses the broader interplay of social and technical factors.",
    "level": "Ignored"
  },
  "Customer Focus": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Customer Focus",
    "calculated_at": "2025-06-17T16:16:19",
    "ai_confidence": 29.83,
    "ai_mentions": 0.3,
    "ai_alignment": 3.9,
    "ai_depth": 4.1,
    "ai_intent": 3.7,
    "ai_audience": 8.2,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content is focused on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow and manage technical debt in Scrum teams. While these practices can indirectly support customer value by enabling frequent, safer releases, the content does not explicitly reference customer outcomes, customer feedback, or measuring value from the customer's perspective. Instead, it concentrates on internal process improvements, reducing unfinished work, and maintaining code quality. The lack of direct mention or in-depth discussion of how these techniques specifically drive or measure customer value limits the alignment and depth for the Customer Focus category. No penalties are applied, as the tone is neutral and does not reference obsolete practices; however, the connection to direct customer impact is superficial or implied at best.",
    "reasoning_summary": "The content centers on engineering practices to streamline Scrum workflow and manage technical debt. While these improvements have potential downstream benefits for customers, the content does not directly address customer outcomes or value, keeping alignment with the Customer Focus category limited.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Frequent Releases",
    "calculated_at": "2025-06-17T16:16:13",
    "ai_confidence": 73.25,
    "ai_mentions": 6.9,
    "ai_alignment": 8.4,
    "ai_depth": 7.9,
    "ai_intent": 7.5,
    "ai_audience": 8.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content emphasizes evolving engineering practices (Feature Flags, TDD, refactoring) to promote smoother Sprint workflows and continuous flow in Scrum. It directly mentions Continuous Delivery (CD) and its necessity for achieving flow, aligning conceptually with frequent releases. However, the core discussion centers on enabling technologies and practices, with release frequency a linked but not primary topic. There is no outdated or critical tone present. The content targets practitioners familiar with Agile/Scrum and software engineering. The discussion is mainly relevant, with little off-topic material, but the focus on workflow and technical debt moderately reduces depth and signal for frequent releases specifically.",
    "reasoning_summary": "The content aligns well with Frequent Releases by highlighting Continuous Delivery's importance for workflow in Scrum and discussing enabling practices like Feature Flags. Its central focus is on engineering practices for flow, providing solid but not exhaustive coverage of frequent release concepts.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Azure Pipelines",
    "calculated_at": "2025-06-17T16:16:16",
    "ai_confidence": 10.63,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 0.7,
    "ai_intent": 1.8,
    "ai_audience": 3.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content centers on general engineering practices (Feature Flags, TDD, refactoring) to improve Scrum workflow and discusses the importance of Continuous Delivery in enabling flow. However, there are no direct or indirect references to Azure Pipelines or any Azure DevOps tooling, nor do the concepts, examples, or audience focus mention CI/CD implementation specific to Azure Pipelines. The topic is relevant to DevOps practices at large but not scoped to Azure Pipelines as defined.",
    "reasoning_summary": "This content discusses engineering practices and CD in Scrum but never references Azure Pipelines or Azure DevOps. The fit for the category is extremely weak, focusing instead on general process improvement and technical debt, not Azure-specific CI/CD automation.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Empirical Process Control",
    "calculated_at": "2025-06-17T16:16:19",
    "ai_confidence": 41.05,
    "ai_mentions": 1.0,
    "ai_alignment": 5.2,
    "ai_depth": 4.3,
    "ai_intent": 5.8,
    "ai_audience": 8.3,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on specific engineering practices—Feature Flags, TDD, and refactoring—used to improve Sprint workflow and reduce technical debt in Scrum. While these practices can support transparency, inspection, and adaptation (core tenets of empirical process control), the content does not directly mention empirical process control or substantially explore its principles (e.g., transparency, inspection, and adaptation as explicit concepts). Instead, it assumes the reader understands Scrum’s framework and offers advice on enabling smoother workflow rather than directly addressing evidence-based adjustments or feedback loops. Audience fit is high, as the advice is for Scrum practitioners, and the content is focused on engineering and delivery. No penalties apply, as the content is current and aligned in tone.",
    "reasoning_summary": "The content offers actionable guidance for Scrum practitioners on evolving engineering practices. While these practices can support empirical process control, the material doesn't directly reference or thoroughly discuss its principles, resulting in only partial alignment with the category.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Sprint Review",
    "calculated_at": "2025-06-17T16:16:12",
    "ai_confidence": 11.85,
    "ai_mentions": 0.7,
    "ai_alignment": 1.8,
    "ai_depth": 1.6,
    "ai_intent": 1.2,
    "ai_audience": 3.1,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content heavily focuses on engineering techniques (Feature Flags, TDD, refactoring) to enable better Sprint workflow and reduce technical debt in Scrum teams. It references concepts like 'Unfinished Backlog Items' vs 'Undone Work', which have tangential relevance to Sprint Reviews, but never mentions the Sprint Review explicitly. Main themes are about workflow improvement and engineering rigor, not about inspecting increments, stakeholder feedback, or reviewing product backlog as required in a Sprint Review context. There's minor conceptual overlap in the sense that 'Undone Work' and the 'Increment' could be discussed in a Sprint Review, but depth, alignment, and intent are lacking for a direct fit. No penalties were applied since there is no outdated advice or negative framing.",
    "reasoning_summary": "The content focuses on engineering practices to improve Sprint workflow within Scrum, not on Sprint Review. There is only a tangential link to Sprint Review through mentions of 'Undone Work' and 'Increment,' but it does not discuss review events, participants, or stakeholder collaboration, so its relevance is minimal.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Current Value",
    "calculated_at": "2025-06-17T16:16:12",
    "ai_confidence": 24.96,
    "ai_mentions": 0.8,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.6,
    "ai_audience": 8.2,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content discusses evolving engineering practices such as Feature Flags, TDD, and refactoring to improve Sprint workflow. However, it does not directly mention Current Value, its metrics, or Evidence-Based Management. The discussion is conceptual and practical but focuses on engineering workflow and technical debt, not on assessing or measuring realized value. The intent is to guide engineering teams (strong audience alignment) but not specifically those focused on measuring or evaluating Current Value. There is minimal relevance to the category beyond implying that good practices may influence value delivery, but this connection is not made explicit. The signal-to-noise ratio scores moderate as the content remains relevant to Scrum teams but not to Current Value measurement.",
    "reasoning_summary": "While the content is highly relevant to Scrum practitioners seeking better engineering workflow, it does not address Current Value or its measurement as defined in Evidence-Based Management. Its focus is technical improvement, not value assessment.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Technical Debt",
    "calculated_at": "2025-06-17T16:16:13",
    "ai_confidence": 80.77,
    "ai_mentions": 7.6,
    "ai_alignment": 8.9,
    "ai_depth": 7.8,
    "ai_intent": 8.1,
    "ai_audience": 9.2,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "The content explicitly references technical debt in both the description and the closing rhetorical question, directly tying engineering practices (Feature Flags, TDD, refactoring) to its reduction. Conceptually, it aligns by focusing on how these methods support long-term maintainability—a core debt concern. Depth is moderate: practices are discussed briefly rather than exhaustively, but their role in reducing technical debt is clear. The audience is Scrum practitioners, matching the category’s target group. Intent centers on practical advice for minimizing technical debt within Agile workflows. The content is relevant throughout, with little off-topic discussion.",
    "reasoning_summary": "This piece is strongly relevant to the technical debt category. It connects engineering practices to technical debt management in Scrum contexts, targeting practitioners and focusing on sustainability and workflow improvement.",
    "level": "Primary"
  },
  "Azure Repos": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Azure Repos",
    "calculated_at": "2025-06-17T16:16:13",
    "ai_confidence": 8.68,
    "ai_mentions": 0.3,
    "ai_alignment": 1.7,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 2.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses on advancing Scrum sprint workflow using Feature Flags, TDD, and refactoring, with direct reference to general engineering practices and continuous delivery. There are no explicit or implicit mentions of Azure Repos or its unique functionality, nor discussions related to source control, branching, or any specific Azure Repos feature. Technical audience alignment is moderate, but the topic remains outside the category's boundaries with only a generic DevOps resonance. The confidence score reflects almost zero overlap with 'Azure Repos'-specific content.",
    "reasoning_summary": "This content does not address Azure Repos, instead focusing on general engineering practices for Scrum and CI/CD. There is no direct or implied relevance to Azure Repos source control or its features.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Deployment Strategies",
    "calculated_at": "2025-06-17T16:16:16",
    "ai_confidence": 68.425,
    "ai_mentions": 7.2,
    "ai_alignment": 7.9,
    "ai_depth": 7.5,
    "ai_intent": 7.1,
    "ai_audience": 8.3,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content makes several direct references to deployment-strategy topics—especially Feature Flags (Feature Toggles) and Continuous Delivery (CD). These are explicitly positioned as essential enablers for deploying unfinished work safely and maintaining flow. However, the primary framing is how these practices improve Sprint workflow and reduce technical debt, not solely as deployment methodologies. While Feature Flags and CD are explored in context, TDD and refactoring, though mentioned, are not core deployment strategy topics. The discussion is moderately deep for Feature Flags but less so for infrastructure or phased rollouts. Intent aligns with practitioners optimizing Scrum and delivery, making the audience match strong. The signal-to-noise is high, but some content is about engineering quality generally. No outdated practices or penalty triggers present.",
    "reasoning_summary": "The content refers directly to Feature Flags and Continuous Delivery as key to smoother deployments, aligning well with Deployment Strategies. However, its primary focus is on improving Scrum workflow rather than deeply exploring deployment methodologies, making the fit solid but not exhaustive.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Test Driven Development",
    "calculated_at": "2025-06-17T16:31:24",
    "ai_confidence": 61.875,
    "ai_mentions": 5.6,
    "ai_alignment": 7.7,
    "ai_depth": 6.9,
    "ai_intent": 6.8,
    "ai_audience": 8.0,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "TDD is directly mentioned, with a short explanation that it \"proves your code does what you expect, even after refactoring.\" TDD is presented alongside Feature Flags and refactoring as an enabler for better Sprint flow in Scrum. The conceptual alignment is moderately strong, as TDD is framed correctly, referencing its role in code reliability and the workflow. However, TDD is not the central focus; it's treated as one practice among several without extensive discussion of the TDD cycle or its methodologies. Audience fit is strong (software engineers/teams in Scrum settings), and the signal is moderate due to mixed focus between different practices. No penalties are applied, as content is current and respectful of the TDD concept.",
    "reasoning_summary": "The content directly mentions TDD and accurately links it to improved Sprint workflows, but TDD is part of a broader discussion with limited depth. It aligns moderately well but doesn't provide an in-depth exploration of TDD practices or principles.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Revenue per Employee",
    "calculated_at": "2025-06-17T16:16:19",
    "ai_confidence": 6.75,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.3,
    "ai_intent": 0.6,
    "ai_audience": 2.1,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content strictly concerns engineering enablement for Scrum teams, focusing on practices that improve Sprint workflow (Feature Flags, TDD, refactoring, CD). There are no direct mentions—nor even indirect references—to 'Revenue per Employee' or related financial metrics, efficiency measurement, or workforce throughput at a systemic level. While organizational effectiveness is a possible downstream result, the discussion is exclusively about engineering hygiene and operational technical practices, not about observing or analyzing business metrics. There's minimal alignment, intent, or relevance to the financial observability or empirical comparison themes defined for this category. Audience overlap is marginal, as both target improvement-minded practitioners, but the focus is off-topic for 'Revenue per Employee.'",
    "reasoning_summary": "This content is wholly focused on engineering practices in Scrum and contains no discussion of revenue per employee or related financial metrics. There is almost no overlap with the intended category; its focus and relevance are minimal.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Definition of Ready",
    "calculated_at": "2025-06-17T16:16:14",
    "ai_confidence": 14.1,
    "ai_mentions": 0.4,
    "ai_alignment": 1.6,
    "ai_depth": 1.9,
    "ai_intent": 0.7,
    "ai_audience": 5.4,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on evolving engineering practices like Feature Flags, TDD, and refactoring to improve Sprint workflow in Scrum. There are no direct mentions or discussion of the Definition of Ready (DoR) or its criteria. The discussion centers on enabling continuous delivery and minimizing technical debt, not backlog item readiness. While the target audience (Scrum practitioners, engineers) partially overlaps with the DoR category, the conceptual and practical alignment remains weak as the material is not about ensuring backlog items are actionable before sprint planning, but rather about techniques for delivering features. There is only a minor, indirect relevance to readiness in the sense of preparing for smooth flow, but this does not substantially tie into DoR as defined.",
    "reasoning_summary": "This content discusses engineering practices that support sprint workflow and technical excellence in Scrum but does not address Definition of Ready or backlog item readiness. Its primary focus is on delivery techniques, making its relevance to the DoR category low.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Organisational Agility",
    "calculated_at": "2025-06-17T16:16:16",
    "ai_confidence": 53.35,
    "ai_mentions": 2.1,
    "ai_alignment": 6.6,
    "ai_depth": 5.7,
    "ai_intent": 5.8,
    "ai_audience": 7.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "There are no explicit references to 'Organisational Agility' or its terminology. The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve the Sprint workflow within Scrum. This is moderately aligned as such practices can indirectly support greater organisational adaptability and responsiveness by reducing technical debt and enabling smoother, safer deployments. However, the primary emphasis is technical team-level workflow optimization, not organisation-wide agility initiatives, cultural shifts, or leadership-driven transformation. No penalties are warranted; the content is modern and supportive in tone. The target audience is mainly technical practitioners (Scrum teams, engineers), which partially overlaps but isn't fully congruent with the broader organisational agility audience (executives, strategists).",
    "reasoning_summary": "This content discusses advanced engineering practices in Scrum, which can support organisational adaptability, but its primary focus is on technical workflow, not broad organisational agility. The alignment is moderate due to its indirect relevance and practitioner-centered audience.",
    "level": "Tertiary"
  },
  "Sensemaking": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Sensemaking",
    "calculated_at": "2025-06-17T16:16:20",
    "ai_confidence": 19.17,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.8,
    "ai_audience": 7.2,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "Direct mentions of sensemaking or related frameworks are entirely absent. The main focus is on engineering practices (Feature Flags, TDD, refactoring) that enable smoother Scrum workflows and reduce technical debt, which is a technical and flow-related discussion. There is minimal conceptual overlap with sensemaking: the closest is the question at the end, which gestures toward critical thinking about what constitutes technical debt, but this is incidental and not substantive. The discussion is geared toward practitioners, making the audience partially aligned, but there is little to no explicit engagement with interpreting complexity or collective decision-making dynamics. Depth and alignment are weak, with most content focusing on tools rather than ways to interpret complexity or enhance decision-making through sensemaking. No penalties applied as content is not outdated or dismissive.",
    "reasoning_summary": "The content emphasizes technical engineering practices to improve Sprint workflow in Scrum, lacking direct sensemaking themes. While it briefly touches on distinguishing types of work, it does not address interpreting complexity, frameworks, or decision-making processes central to the Sensemaking category.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Planning",
    "calculated_at": "2025-06-17T16:16:22",
    "ai_confidence": 57.7,
    "ai_mentions": 3.2,
    "ai_alignment": 6.5,
    "ai_depth": 5.7,
    "ai_intent": 6.7,
    "ai_audience": 8.1,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content discusses evolving engineering practices (Feature Flags, TDD, refactoring) as enablers of a smoother Sprint workflow within Scrum teams. It mentions 'Sprint', 'Backlog Items', and 'Scrum', aligning with topics like iterative delivery, backlogs, and team practices, but does not focus chiefly on planning techniques, meetings, or methods for aligning teams on goals or deliverables. There is no in-depth exploration of core Agile Planning practices beyond implications for workflow. The primary audience is Scrum practitioners or technical leads, matching the category. Signal is moderate, as the core focus is on workflow, not planning per se.",
    "reasoning_summary": "While the content references Sprint workflow and Scrum, its main focus is on engineering practices rather than the principles, tools, or techniques of Agile Planning. Its relevance is moderate, with stronger alignment toward technical process improvement than direct Agile Planning discussions.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Validation",
    "calculated_at": "2025-06-17T16:16:18",
    "ai_confidence": 18.2,
    "ai_mentions": 0.5,
    "ai_alignment": 2.6,
    "ai_depth": 2.3,
    "ai_intent": 2.1,
    "ai_audience": 6.3,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) to improve Sprint flow in Scrum. While Feature Flags can be used for product validation, here they're addressed primarily as tools for smooth deployment and managing unfinished work—not explicitly for validating product ideas. There's no direct mention or substantive exploration of user testing, customer feedback loops, or hypothesis validation. The audience (engineering Scrum teams) overlaps somewhat, but the depth and alignment with 'Product Validation' remain low.",
    "reasoning_summary": "This content primarily addresses engineering workflows in Scrum, with minimal and indirect reference to product validation. It doesn't focus on user feedback or validation loops, so alignment with the 'Product Validation' category is limited and mostly tangential.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-06-17T16:16:19",
    "ai_confidence": 7.15,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.4,
    "ai_intent": 0.8,
    "ai_audience": 1.2,
    "ai_signal": 0.85,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on evolving engineering practices within Scrum, specifically Feature Flags, TDD, and refactoring, to improve Sprint workflow and reduce technical debt. There are no explicit or implicit mentions of Artificial Intelligence, nor any discussion about integrating AI into Agile, DevOps, or software development processes. The main ideas, purpose, and examples are all tightly centered on traditional software engineering and Agile methodologies without AI involvement. The audience (Scrum/Agile practitioners) overlaps somewhat with the AI-in-Agile/DevOps community, but the content itself does not address AI topics or use cases, resulting in very low scores across all classification dimensions for this category.",
    "reasoning_summary": "This content centers on engineering practices for improving Scrum workflow, without referencing AI or its integration into Agile or DevOps. It does not fit the Artificial Intelligence category as per the definition.",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Release Management",
    "calculated_at": "2025-06-17T16:16:23",
    "ai_confidence": 54.317,
    "ai_mentions": 2.1,
    "ai_alignment": 6.4,
    "ai_depth": 5.7,
    "ai_intent": 5.9,
    "ai_audience": 7.2,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content discusses evolving engineering practices (Feature Flags, TDD, refactoring) for better sprint flow in Scrum, touching on concepts like shipping to production and Continuous Delivery (CD). It indirectly references elements of release management, such as enabling safer releases with Feature Flags and advocating for CD. However, the primary focus is on engineering practices, not on planning, scheduling, or controlling releases as a primary topic. References to release management are implicit and supportive rather than central. Audience matches technical practitioners, and much content is on-topic for teams interested in modern release-enabling practices. There are no penalties as nothing is outdated or contrary.",
    "reasoning_summary": "While the content supports release-enabling practices (like Feature Flags and CD), its core focus is on engineering workflow within Scrum, not on release management strategy or process. Alignment is moderate due to relevant but indirect connections.",
    "level": "Tertiary"
  },
  "Time to Market": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Time to Market",
    "calculated_at": "2025-06-17T16:16:18",
    "ai_confidence": 47.58,
    "ai_mentions": 1.7,
    "ai_alignment": 5.8,
    "ai_depth": 5.5,
    "ai_intent": 4.9,
    "ai_audience": 8.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content discusses evolved engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow and reduce technical debt. It indirectly references the concept of flow and hints at the importance of Continuous Delivery for frequent shipping. However, it does not explicitly reference 'Time to Market,' nor does it discuss metrics, outcomes, or the business lens outlined in the classification definition. Although some strategies and improvements mentioned can shorten the time from idea to value delivery, the focus centers on technical practices and workflow within Scrum, not the broader outcomes or impact on Time to Market. There are implicit links (e.g., enabling safer, faster deployment), but the depth and intent lean towards engineering effectiveness rather than explicitly optimizing Time to Market.",
    "reasoning_summary": "The content is relevant to practitioners and discusses engineering practices that can indirectly improve Time to Market through better workflow and delivery, but it does not make this connection explicit or focus on Time to Market metrics, intent, or outcomes.",
    "level": "Tertiary"
  },
  "Engineering Practices": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Engineering Practices",
    "calculated_at": "2025-06-17T16:16:19",
    "ai_confidence": 92.25,
    "ai_mentions": 8.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 8.8,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content makes numerous direct references to core engineering practices such as TDD, Feature Flags, refactoring, and CD, as well as their impact on Sprint workflow and technical debt in Scrum. The discussion directly aligns with the category definition, fully focusing on best-practice engineering methods within Agile contexts. It provides reasoning on why these practices matter (enabling flow, reducing technical debt), briefly explains each technique, and ties them to team outcomes. The primary audience is developers or Scrum team practitioners, consistent with the category. There is little irrelevant or tangential content—the entire piece is tightly scoped to the topic. No out-of-date or obsolete advice, and the tone is supportive rather than critical, so no penalties were needed.",
    "reasoning_summary": "This content squarely fits the Engineering Practices category, explicitly discussing key techniques like TDD, Feature Flags, refactoring, and CD, all in the context of Agile Scrum teams. The alignment, depth, and practical relevance are highly appropriate for technical engineering audiences.",
    "level": "Primary"
  },
  "Test Automation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Test Automation",
    "calculated_at": "2025-06-17T16:16:22",
    "ai_confidence": 34.6,
    "ai_mentions": 1.7,
    "ai_alignment": 4.1,
    "ai_depth": 3.3,
    "ai_intent": 3.7,
    "ai_audience": 7.9,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content briefly mentions Test-Driven Development (TDD), which implies automated testing, but does not directly discuss test automation principles, tools, or frameworks. The main focus is on improving sprint workflows through general engineering practices like feature flags, TDD, and refactoring, with only indirect relevance to the test automation category. There are no explicit discussions of automated testing processes, best practices, or CI/CD automation context. The intended audience overlaps with those interested in test automation, but the signal-to-noise ratio is diminished by broader engineering and process concerns. No penalties are applied as there are no outdated or contradictory elements.",
    "reasoning_summary": "This content mainly covers improving engineering practices for better Scrum workflow, with only tangential references to aspects of test automation via TDD. Test automation is not the central theme, resulting in low-to-moderate category fit.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Remote Working",
    "calculated_at": "2025-06-17T16:16:25",
    "ai_confidence": 9.75,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.25,
    "ai_intent": 0.2,
    "ai_audience": 6.05,
    "ai_signal": 0.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content centers entirely on improving Sprint workflow in Scrum via technical engineering practices like Feature Flags, TDD, refactoring, and continuous delivery. It focuses on flow, unfinished work, and technical debt—not remote work. There are no explicit or implicit references to distributed teams, remote communication, tools for remote collaboration, or agility in remote contexts. Audience alignment is moderately high as it speaks to Scrum practitioners and Agile teams, but all other dimensions (mentions, alignment, depth, intent, signal) scored near zero due to total lack of category-relevant material. No content is outdated or critical of the category, so no penalties are applied.",
    "reasoning_summary": "This content discusses engineering best practices for Scrum teams but lacks any mention or connection to remote working or distributed Agile collaboration. It does not fit under the Remote Working category as defined.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Continuous Improvement",
    "calculated_at": "2025-06-17T16:16:19",
    "ai_confidence": 68.24,
    "ai_mentions": 2.2,
    "ai_alignment": 8.3,
    "ai_depth": 6.6,
    "ai_intent": 7.9,
    "ai_audience": 8.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content focuses on improving Sprint workflows in Scrum through evolving engineering practices (Feature Flags, TDD, refactoring), which aligns with incremental technical progression and process enhancement—key tenets of Continuous Improvement. While it strongly embodies the spirit of ongoing enhancement and adaptation, it never directly names 'Continuous Improvement' nor thoroughly explores its broader concepts or organizational aspects. The discussion is substantive for practitioners (Scrum teams/engineers), but the main ideas are more about enabling flow and reducing technical debt than systematically fostering a culture of experimentation, feedback, and organizational learning. Thus, confidence is moderate, led by strong thematic alignment and practical intent but limited by lack of explicit, in-depth treatment of Continuous Improvement as a holistic discipline.",
    "reasoning_summary": "This content aligns well with Continuous Improvement by advocating engineering practice evolution to enhance workflow and reduce debt, hallmarks of ongoing process refinement. However, it lacks direct mention and deeper, systematic exploration of Continuous Improvement itself.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Platform Engineering",
    "calculated_at": "2025-06-17T16:16:22",
    "ai_confidence": 19.85,
    "ai_mentions": 0.4,
    "ai_alignment": 3.7,
    "ai_depth": 3.2,
    "ai_intent": 2.5,
    "ai_audience": 8.3,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on improving Scrum workflows through practices like Feature Flags, TDD, and refactoring, all within the context of Agile teams. There are no explicit references to platform engineering, Internal Developer Platforms, or the discipline’s core concepts such as building internal self-service infrastructure for developer enablement. The alignment is minimal: some topics such as Feature Flags and Continuous Delivery can be components within platform engineering, but here they are addressed as general best practices for Scrum, not platform-specific solutions. The discussion is relatively deep on engineering tactics but not on platform engineering as a discipline. The intent serves Scrum practitioners looking to enhance workflow, not platform engineers or teams building developer-facing platforms. Audience and signal are high due to technical relevance, but overall, the direct fit with Platform Engineering is low.",
    "reasoning_summary": "The content mainly discusses Agile team engineering practices, not platform engineering concepts. While practices like Feature Flags and CD may appear in platform engineering, here they’re positioned simply as general Scrum enablers, not as part of internal platform solutions.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Ability to Innovate",
    "calculated_at": "2025-06-17T16:16:25",
    "ai_confidence": 37.85,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 4.2,
    "ai_intent": 3.9,
    "ai_audience": 8.0,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content centers on engineering practices like Feature Flags, TDD, and refactoring to improve sprint workflow and reduce technical debt. While these practices are important enablers of innovation, the article does not explicitly define, discuss, or measure the 'Ability to Innovate' in the EBM sense. There are no references to innovation metrics, learning cycles, or discussion about fostering a culture of innovation. The focus is mainly on Agile technical practices for flow and technical excellence, which can support innovation but are not explicitly tied to it in this context. The intended audience (Scrum practitioners, Agile engineers) aligns, but the direct relevance to 'Ability to Innovate' is limited and indirect.",
    "reasoning_summary": "This content discusses engineering practices that indirectly support innovation but does not directly address 'Ability to Innovate' as a key focus area or metric. It targets the correct audience but focuses mainly on workflow and technical debt rather than innovation itself.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Leadership",
    "calculated_at": "2025-06-17T16:16:28",
    "ai_confidence": 22.15,
    "ai_mentions": 0.6,
    "ai_alignment": 2.3,
    "ai_depth": 2.2,
    "ai_intent": 2.2,
    "ai_audience": 5.7,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) that facilitate smoother Scrum Sprints and reduce technical debt, but does not explicitly discuss Agile Leadership concepts or the leader's role in driving these changes. There is no direct mention of leadership, leadership strategies, cultural change, or empowerment—key elements of the Agile Leadership category. The content's audience is practitioners or technical team members seeking workflow improvements, not leaders guiding Agile adoption. Although improvement is encouraged and there is an implicit expectation of team responsibility, the thematic and conceptual alignment with Agile Leadership remains minimal and indirect. Little or no depth on leadership principles is provided.",
    "reasoning_summary": "This content addresses technical practices to enhance Scrum workflow and reduce technical debt but lacks direct discussion of leadership roles, empowerment, or Agile Leadership principles. Its focus is on engineering rather than leadership, resulting in limited relevance to the Agile Leadership category.",
    "level": "Ignored"
  },
  "Unrealised Value": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Unrealised Value",
    "calculated_at": "2025-06-17T16:16:21",
    "ai_confidence": 13.8,
    "ai_mentions": 0.5,
    "ai_alignment": 1.8,
    "ai_depth": 2.2,
    "ai_intent": 1.4,
    "ai_audience": 6.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum, focusing on reducing technical debt and enabling flow. It doesn't reference Unrealised Value, latent opportunities, or EBM frameworks, nor does it analyze potential or untapped value. Its main focus is operational improvement rather than the identification or measurement of unrealised value.",
    "reasoning_summary": "This content is primarily about engineering improvements in Scrum, not the concept of Unrealised Value or its exploration within Evidence-Based Management. It lacks explicit references to untapped potential or strategic opportunity.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Scrum Values",
    "calculated_at": "2025-06-17T16:16:23",
    "ai_confidence": 26.18,
    "ai_mentions": 1.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.5,
    "ai_intent": 3.2,
    "ai_audience": 7.1,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content focuses on engineering practices like Feature Flags, TDD, and refactoring to improve Sprint workflow in Scrum teams. While Scrum is directly mentioned, there is no explicit or substantive discussion of Scrum Values—no mention or in-depth exploration of commitment, courage, focus, openness, or respect. The primary intent is technical practice improvement, not the underlying value system. The audience (Scrum practitioners) overlaps, but the topic itself only very indirectly relates to Scrum Values by implication (such as indirectly supporting focus or commitment), and these connections are not made explicit. As such, scores for direct mentions, alignment, depth, and intent are low. No penalties apply as the discussion is current and not satirical or critical of the category.",
    "reasoning_summary": "This content discusses evolving technical practices in Scrum teams, but it does not address Scrum Values directly. It focuses on workflow improvements through engineering methods, making its fit with the 'Scrum Values' category indirect and minimal.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Trend Analysis",
    "calculated_at": "2025-06-17T16:16:25",
    "ai_confidence": 32.64,
    "ai_mentions": 1.4,
    "ai_alignment": 3.1,
    "ai_depth": 3.3,
    "ai_intent": 2.5,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses evolving engineering practices in Scrum (Feature Flags, TDD, refactoring) and their impact on workflow and technical debt. However, it fails to explicitly situate these discussions as part of a broader trend analysis or identify, assess, or contextualize such shifts as organizational or industry patterns. There are no direct trend analysis references, data, or tools for monitoring trends. The intent is instructional and advisory for practitioners, not analytical or strategic. Audience fit and focus are strong, but conceptual alignment and depth are limited relative to the demands of proper trend analysis.",
    "reasoning_summary": "While the content discusses evolving practices in Scrum, it does not analyze or contextualize these as industry or organizational trends. It lacks explicit trend analysis, data, or exploration of broader patterns, making it only thematically adjacent to the Trend Analysis category.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Company as a Product",
    "calculated_at": "2025-06-17T16:16:22",
    "ai_confidence": 16.046,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 2.0,
    "ai_intent": 1.5,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content exclusively discusses evolving engineering practices—Feature Flags, TDD, refactoring—strictly within the context of Scrum team workflows and reducing technical debt. There are no explicit or implied references to conceptualising the company as a product, organisational design, customer insight integration at the company level, or cross-functional collaboration outside the Scrum team. The audience is engineers or Scrum practitioners, not organisational strategists or leaders. No outdated or contradictory elements were found, so no penalties applied. The confidence is very low, as virtually none of the core CaaP aspects are touched.",
    "reasoning_summary": "This content centers on engineering practices in Scrum teams, not on the broader organisational strategies or principles required for the Company as a Product category. It lacks relevance to CaaP frameworks, making alignment and confidence very low.",
    "level": "Ignored"
  },
  "Decision Making": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Decision Making",
    "calculated_at": "2025-06-17T16:16:24",
    "ai_confidence": 13.053,
    "ai_mentions": 0.7,
    "ai_alignment": 1.8,
    "ai_depth": 1.3,
    "ai_intent": 2.0,
    "ai_audience": 3.5,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) to improve Scrum team workflow and reduce technical debt. There is no explicit mention of 'decision making', nor are structured decision methodologies, data, or evidence-based frameworks discussed. The content is aimed at engineering practitioners and has practical relevance, but it lacks alignment with the structured, evidence-based approach central to the Decision Making category. The closest conceptual link is the question about confidence in unfinished work not being technical debt, which only loosely touches on evaluation or judgment, not formal decision making.",
    "reasoning_summary": "This content centers on engineering practices enhancing Scrum workflow, not structured or evidence-based decision making. It is relevant to technical audiences but does not significantly align with the Decision Making category’s definitions or priorities.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-06-17T16:16:27",
    "ai_confidence": 25.5,
    "ai_mentions": 0.3,
    "ai_alignment": 2.4,
    "ai_depth": 2.2,
    "ai_intent": 3.7,
    "ai_audience": 8.0,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to enhance Sprint workflows in Scrum. While it references production readiness and practices that could indirectly support system reliability, there are no direct mentions of SRE or its principles. The main ideas are rooted in Agile and software engineering, not in site reliability, scalability, or post-mortem/incident management practices. There is no substantive exploration of SLOs, SLI, SLAs, or SRE frameworks; depth is limited to development workflow improvements, not reliability engineering. The core audience is Scrum teams and Agile engineers, overlapping somewhat with SRE audiences, but the content’s intent and central discussion do not meaningfully align with Site Reliability Engineering. No penalties were necessary since the content is neither outdated nor actively contrary to SRE principles.",
    "reasoning_summary": "This content centers on engineering practices that improve Scrum workflows, such as Feature Flags and TDD. While these tools can aid reliability, there are no direct links to Site Reliability Engineering frameworks, principles, or core topics. The alignment with the SRE category is minimal.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Lead Time",
    "calculated_at": "2025-06-17T16:16:29",
    "ai_confidence": 32.67,
    "ai_mentions": 1.6,
    "ai_alignment": 3.8,
    "ai_depth": 3.5,
    "ai_intent": 3.7,
    "ai_audience": 5.2,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on improving Sprint workflow in Scrum through engineering practices like Feature Flags, TDD, and refactoring. While these are process enablers that may indirectly influence Lead Time by enabling smoother flow and reduced technical debt, Lead Time itself is not explicitly referenced or deeply discussed. The intent is more about engineering practices and team health than measuring or directly managing Lead Time. The audience (Scrum practitioners/engineers) somewhat overlaps, but the content lacks a direct, in-depth connection to the Lead Time metric, its measurement, or its visualization.",
    "reasoning_summary": "This content briefly touches on process flow but primarily discusses engineering practices for healthier Sprints, with little direct connection to Lead Time as a metric. Its alignment with the Lead Time category is indirect and limited.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Entrepreneurship",
    "calculated_at": "2025-06-17T16:16:25",
    "ai_confidence": 22.35,
    "ai_mentions": 0.5,
    "ai_alignment": 2.7,
    "ai_depth": 2.0,
    "ai_intent": 2.6,
    "ai_audience": 5.3,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content centers exclusively on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Scrum team workflows. There is no direct or indirect discussion on entrepreneurship, innovation, value-driven decision-making, or entrepreneurial mindset. The target audience is technical Scrum practitioners, not entrepreneurs. Content does not engage with entrepreneurial risk-taking, scaling businesses, or economic development. Minimal alignment is found as improved engineering practices can support business agility, but this is only tangential to entrepreneurship.",
    "reasoning_summary": "This content focuses on engineering practices within Scrum teams, with no substantive connection to entrepreneurship topics, audiences, or intent. It remains strictly within technical and workflow improvement, not entrepreneurial innovation or risk-taking.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Continuous Delivery",
    "calculated_at": "2025-06-17T16:16:23",
    "ai_confidence": 73.6,
    "ai_mentions": 6.7,
    "ai_alignment": 8.5,
    "ai_depth": 7.9,
    "ai_intent": 8.1,
    "ai_audience": 7.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content explicitly mentions Continuous Delivery (CD) and frames it as vital for achieving flow in Scrum. It positions CD as essential but does not offer a comprehensive discussion, instead focusing on related engineering practices (Feature Flags, TDD, refactoring) as enablers. While CD is referenced, the main narrative centers around evolving practices within Scrum, with CD as a crucial supporting concept, not the outright topic. Audience alignment is solid—targeting technical Scrum practitioners interested in advanced workflow techniques. The directness, purposeful mention, and relevance are strong, but the discussion of CD itself is limited in depth, with only a moderate level of conceptual and practical exploration before shifting to adjacent topics. No penalties are applied as the tone is current and supportive.",
    "reasoning_summary": "This content positions Continuous Delivery as critical to achieving smooth sprint workflow in Scrum and references it explicitly. However, the main focus is on supporting practices like Feature Flags and TDD, making CD important but not the central subject.",
    "level": "Secondary"
  },
  "Professional Scrum": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Professional Scrum",
    "calculated_at": "2025-06-17T16:16:23",
    "ai_confidence": 78.75,
    "ai_mentions": 6.3,
    "ai_alignment": 8.6,
    "ai_depth": 8.1,
    "ai_intent": 8.2,
    "ai_audience": 7.7,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content makes multiple direct references to Scrum but does not repeatedly emphasize 'Professional Scrum' as a named ethos. There is strong conceptual alignment: it stresses elevated engineering standards, ties practices to Scrum outcomes, and reinforces technical excellence (a Professional Scrum principle). Depth is solid—the difference between 'Unfinished Backlog Items' and 'Undone Work' signals an understanding of Scrum's Done criteria—not just mechanics. It also advocates practices (TDD, refactoring, Feature Flags) as enablers of smooth, valuable Sprint delivery rather than process rituals. Intent is heavily aligned with improving professional standards for Scrum teams. The audience (practicing Scrum teams and engineers striving for professional excellence) is appropriate, though the tone is technical and may not fully address broader organizational or executive concerns. Signal is high, with little filler; nearly all details focus on technical excellence and enabling flow without sacrificing Scrum's core. No evidence of outdatedness, misapplication, or contradictions—no penalties applied.",
    "reasoning_summary": "This content closely aligns with Professional Scrum by emphasizing how disciplined, modern engineering practices support the intent and standards of Scrum. Its discussion of 'Done,' technical debt, and professional rigor underpin the ethos of Professional Scrum, targeting practitioners eager to deliver value through professionalism.",
    "level": "Secondary"
  },
  "Value Stream Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Value Stream Management",
    "calculated_at": "2025-06-17T16:16:26",
    "ai_confidence": 28.336,
    "ai_mentions": 1.1,
    "ai_alignment": 3.4,
    "ai_depth": 2.7,
    "ai_intent": 3.0,
    "ai_audience": 4.2,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum, referencing flow frequently. However, 'flow' is used in a general sense related to Sprint work, not specifically in the context of Value Stream Management. There is no direct mention of Value Stream Management concepts such as value stream mapping, eliminating waste across end-to-end processes, or aligning organizational goals with customer outcomes. The depth remains at practice-level workflow improvement for Scrum teams, not at the strategic or value-stream level. The intent is to help Scrum teams optimize their engineering practices—not to discuss value stream optimization, value delivery chain, or management. The target audience is technical (engineers or Scrum teams), overlapping with Value Stream Management's audience somewhat, but the focus is not on the strategic flow of value. The signal is mainly about engineering flow within sprints, missing specifics of value stream context.",
    "reasoning_summary": "While the content discusses optimizing engineering workflow in Scrum, it does not directly address Value Stream Management principles or practices. The coverage is tactical rather than focusing on organization-wide value flow, value stream mapping, or business agility.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-06-17T16:16:27",
    "ai_confidence": 20.94,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 2.6,
    "ai_audience": 7.1,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum. While it discusses improvement and technical debt, there is no explicit reference to evidence-based leadership, nor are there mentions of empirical data, KPIs, leadership decision-making frameworks, or data-driven leadership principles. The audience is Scrum practitioners and engineering leads, slightly aligned with leadership but not explicitly so. No penalties were needed, since the content isn't outdated or contradictory. Overall, the content is mostly technical and improvement-focused, lacking core themes or explicit references required for the Evidence Based Leadership category.",
    "reasoning_summary": "The content is mainly about Scrum engineering practices; it does not reference evidence-based leadership concepts, frameworks, or data-driven decision-making. Its relevance to the Evidence Based Leadership category is minimal.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "One Engineering System",
    "calculated_at": "2025-06-17T16:16:31",
    "ai_confidence": 34.04,
    "ai_mentions": 0.3,
    "ai_alignment": 3.4,
    "ai_depth": 2.8,
    "ai_intent": 3.7,
    "ai_audience": 7.2,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content does not explicitly mention One Engineering System (1ES) or any of its recognized terminology. Its focus is on evolving engineering practices (Feature Flags, TDD, refactoring) and their effect on Sprint flow within Scrum teams. While these practices could be relevant within a 1ES context, the text makes no reference to integration, unified frameworks, or cross-team standardization—core aspects of 1ES. The alignment is partial, as modern engineering practices are a component of 1ES, but the content does not discuss unified systems, standardized tooling, or organization-wide adoption. Depth of discussion around 1ES is minimal, as all examples revolve around technical tactics within the Scrum methodology. Intent is largely about process improvement in Scrum, not system-level standardization or integration. The audience fits the technical demographic, and signal-to-noise is decent due to focus on best practices. No penalties were required.",
    "reasoning_summary": "This content discusses agile engineering practices to improve Scrum workflow but does not relate them to One Engineering System or unified engineering frameworks. It focuses on team-level improvements, not organization-wide integration or standardization.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Troubleshooting",
    "calculated_at": "2025-06-17T16:16:25",
    "ai_confidence": 32.67,
    "ai_mentions": 1.0,
    "ai_alignment": 3.7,
    "ai_depth": 3.3,
    "ai_intent": 3.5,
    "ai_audience": 8.2,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses Feature Flags, TDD, and refactoring as tools to enable better Sprint flow, referencing technical health and avoidance of technical debt. However, it focuses on workflow improvement and engineering best practices, not on the systematic identification and resolution of specific technical issues. There are no explicit mentions or examples of troubleshooting steps, diagnosis, or resolution of failures, so alignment and depth within the 'Troubleshooting' category are limited. The topic is more preventative and process-oriented than reactive or problem-solving in the troubleshooting sense.",
    "reasoning_summary": "While the content targets technical Scrum practitioners and discusses engineering practices that reduce issues, its main focus is workflow optimization—not the identification and resolution of technical failures. Thus, its fit for 'Troubleshooting' is low.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Philosophy",
    "calculated_at": "2025-06-17T16:16:26",
    "ai_confidence": 35.98,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.4,
    "ai_intent": 4.3,
    "ai_audience": 8.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve flow in Scrum teams. There's minimal direct reference to Agile Philosophy; discussion centers on practical tools and practices rather than Agile's underlying philosophies or values. While it implies continuous improvement and some Agile tenets (e.g., adaptability, maintaining flow), these are not foregrounded or explored conceptually. The main intent is technical enablement within Scrum, not philosophical reflection. Thus, while there is audience overlap with Agile philosophy (technical teams/practitioners), the conceptual and topical alignment is moderate at best, and depth of philosophical discussion is limited.",
    "reasoning_summary": "This content emphasizes engineering techniques to support effective Scrum workflows, focusing on tools over philosophical principles. It aligns mainly with practitioners interested in Agile practices, but it doesn't explicitly explore the deeper philosophy or mindset behind Agile.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Value Delivery",
    "calculated_at": "2025-06-17T16:16:28",
    "ai_confidence": 76.138,
    "ai_mentions": 4.3,
    "ai_alignment": 8.2,
    "ai_depth": 7.8,
    "ai_intent": 8.1,
    "ai_audience": 8.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content directly mentions Scrum and discusses engineering practices (Feature Flags, TDD, refactoring) as enablers of better flow in Sprint workflows. While 'value delivery' is not explicitly named, the text strongly aligns with principles of iterative delivery, reducing technical debt, and supporting continuous delivery—key aspects of Value Delivery. It focuses on practices that facilitate continuous, incremental shipment of value, emphasizing why these practices are essential in the Agile/Scrum context. The discussion goes deeper than surface-level by linking specific practices to the outcomes of smoother flow and healthier systems. The tone directly addresses Agile practitioners/Scrum teams, aligning the intended audience. Minor points are deducted from 'mentions' since the term is not directly cited and the content is more focused on enabling practices rather than measurement or explicit customer feedback, but the alignment and depth are still strong.",
    "reasoning_summary": "This content aligns well with Value Delivery, exploring how modern engineering practices support iterative, incremental releases and healthier Scrum workflows. While it doesn’t directly mention 'value delivery,' its focus on continuous flow and reducing technical debt fits the category's audience and intent.",
    "level": "Secondary"
  },
  "Engineering Excellence": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Engineering Excellence",
    "calculated_at": "2025-06-17T16:16:31",
    "ai_confidence": 90.6,
    "ai_mentions": 7.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.1,
    "ai_audience": 8.7,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly discusses core engineering excellence topics—Feature Flags, TDD, refactoring, tech debt, and CI/CD—in explicit relation to Scrum. It explains their operational importance, not just listing them, and relates them to maintaining software quality and delivery flow. The intent is to encourage Scrum teams to pursue higher engineering standards, directly aligning audience and purpose. No outdated advice or misalignment is present; all content is relevant, with minimal off-topic or filler material.",
    "reasoning_summary": "This content closely matches the Engineering Excellence category, explicitly detailing best practices like TDD, refactoring, and CI/CD, and emphasizing their role in boosting Sprint workflow quality. Its themes, audience, and depth of discussion are all strongly aligned with the category’s intended scope.",
    "level": "Primary"
  },
  "Scrum": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Scrum",
    "calculated_at": "2025-06-17T16:16:27",
    "ai_confidence": 78.9,
    "ai_mentions": 7.2,
    "ai_alignment": 8.8,
    "ai_depth": 7.7,
    "ai_intent": 8.2,
    "ai_audience": 8.4,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content explicitly references Scrum several times and is aimed at practitioners seeking to improve Sprint workflow—a core Scrum event. Its main focus is on how modern engineering practices (Feature Flags, TDD, refactoring) can support Scrum teams in handling unfinished backlog items and technical debt, showing clear conceptual alignment. Depth is solid with concrete examples and implementation advice, but does veer somewhat into general engineering practice and touches briefly on Continuous Delivery, which, while not required by Scrum, is presented as a valuable enabler rather than as the main topic. Intent is to directly support Scrum teams, and audience targeting is appropriate. The content is focused, with minimal tangential material. No penalties are necessary as all practices are current and the tone is supportive.",
    "reasoning_summary": "This content clearly fits under the Scrum category, focusing on how engineering practices like Feature Flags and TDD enhance Sprint workflow and reduce technical debt for Scrum teams. It provides actionable advice relevant to Scrum practitioners, with strong alignment and minimal off-topic content.",
    "level": "Secondary"
  },
  "Personal": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Personal",
    "calculated_at": "2025-06-17T16:16:30",
    "ai_confidence": 27.3,
    "ai_mentions": 2.2,
    "ai_alignment": 3.2,
    "ai_depth": 2.5,
    "ai_intent": 2.8,
    "ai_audience": 7.4,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content mainly discusses the importance of evolving engineering practices for improving Scrum Sprints, focusing on techniques like Feature Flags, TDD, and refactoring. Despite some conversational tone and use of rhetorical questions, there are no explicit personal anecdotes or reflections. The primary intent is instructional and technical, not sharing individual experiences or insights, which reduces fit with the Personal category. It aligns more closely with technical guidance than subjective interpretation.",
    "reasoning_summary": "This content is primarily technical advice regarding engineering practices within Scrum, not personal experience or reflection. It lacks individual anecdotes or unique perspectives required for the Personal category.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Lean Product Development",
    "calculated_at": "2025-06-17T16:16:32",
    "ai_confidence": 41.82,
    "ai_mentions": 1.12,
    "ai_alignment": 4.81,
    "ai_depth": 4.94,
    "ai_intent": 5.18,
    "ai_audience": 8.24,
    "ai_signal": 7.44,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content is primarily concerned with evolving engineering practices (Feature Flags, TDD, refactoring) to improve Scrum Sprint workflows, focusing on flow, reducing technical debt, and enabling continuous delivery. While these are conceptually adjacent to Lean Product Development—particularly the emphasis on flow and waste reduction—there are no direct or frequent mentions of Lean principles, Lean thinking, or explicit discussion of Lean Product Development frameworks. The content focuses more on Agile and engineering efficiency, rather than systematically applying Lean mindsets or techniques (e.g., value stream mapping, experimentation, customer feedback loops). Its depth is moderate, with practical advice for practitioners, strong audience fit, and an overall strong signal-to-noise ratio. However, conceptual and direct alignment with Lean Product Development is only partial.",
    "reasoning_summary": "The content addresses engineering practices in Scrum to improve workflow and reduce technical debt, aligning moderately with Lean Product Development principles of flow and waste reduction, but lacks explicit Lean focus or direct discussion of Lean techniques.",
    "level": "Tertiary"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-06-17T16:16:28",
    "ai_confidence": 8.62,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.7,
    "ai_audience": 4.8,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content exclusively discusses Feature Flags, TDD, refactoring, and Scrum workflow. ATDD is not named, nor are its distinctive principles, collaborative elements, or use of acceptance criteria mentioned. Conceptual overlap is minimal: TDD is discussed, but not in relation to acceptance testing. No exploration of ATDD methods, tools, or contexts occurs. The target audience (Scrum practitioners, engineers) would overlap with ATDD audiences, but the material is not on-topic. No penalty applies, as there is no outdated or negative framing.",
    "reasoning_summary": "The content does not mention or align with Acceptance Test Driven Development. It discusses TDD, refactoring, and engineering flow in Scrum, but makes no reference to ATDD's principles or practices. Thus, relevance to the category is extremely low.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "System Configuration",
    "calculated_at": "2025-06-17T16:16:29",
    "ai_confidence": 16.2,
    "ai_mentions": 0.3,
    "ai_alignment": 2.7,
    "ai_depth": 2.5,
    "ai_intent": 1.7,
    "ai_audience": 4.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on improving Sprint workflows in Scrum through practices like Feature Flags, TDD, and refactoring, but these are discussed in the context of code quality, testing, and deployment—not system configuration. There is almost no mention of actual setup, integration, or maintenance of hardware, software, or systems. Feature Flags are touched on as a deployment/flow tool, but not in terms of configuration management. The discussion is targeted toward software engineers and Scrum teams, not specifically those involved in configuring or maintaining systems. As such, direct mentions and conceptual/depth alignment with 'System Configuration' are very low, with only small tangential overlap.",
    "reasoning_summary": "This content is mostly about modern engineering practices in Scrum, such as TDD and Feature Flags, focused on workflow and code quality—not the setup, integration, or maintenance of systems. It falls outside the core scope of System Configuration, with minimal direct relevance.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Definition of Done",
    "calculated_at": "2025-06-17T16:16:32",
    "ai_confidence": 37.48,
    "ai_mentions": 1.1,
    "ai_alignment": 4.7,
    "ai_depth": 3.8,
    "ai_intent": 5.0,
    "ai_audience": 8.5,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content centers on improving engineering practices (Feature Flags, TDD, refactoring) to optimize Sprint workflow, with tangential reference to the importance of distinguishing 'Unfinished Backlog Items' and 'Undone Work.' While related concepts (technical debt, work completion, flow) border the Definition of Done, the discussion never explicitly details DoD criteria, its creation, or how these practices map onto DoD. The intent is process improvement rather than defining or evolving the DoD itself. Audience and signal alignment are higher since it targets Scrum practitioners, but direct mentions and in-depth exploration of DoD principles are lacking.",
    "reasoning_summary": "The content addresses engineering practices that impact work completion and technical debt in Scrum, touching topics adjacent to the Definition of Done but not exploring DoD itself in detail or purpose. Its primary focus is on enabling Sprint flow, making the fit to DoD indirect.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Portfolio Management",
    "calculated_at": "2025-06-17T16:16:28",
    "ai_confidence": 7.8,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.5,
    "ai_intent": 0.5,
    "ai_audience": 3.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses entirely on technical practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum teams. There is no direct mention or implied discussion of portfolio management, strategic alignment, value streams, or investment prioritization. The intended audience appears to be Scrum team engineers or technical practitioners, not executive or portfolio-level decision-makers. The content is highly focused and relevant to its topic, but that topic (engineering practices for Scrum) is wholly outside the scope of portfolio management.",
    "reasoning_summary": "The content centers on technical engineering practices to improve Scrum Sprint flow and reduce technical debt. It does not discuss portfolio management, strategic alignment, or value-focused methodologies, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Cycle Time",
    "calculated_at": "2025-06-17T16:16:28",
    "ai_confidence": 23.6,
    "ai_mentions": 0.8,
    "ai_alignment": 3.2,
    "ai_depth": 3.5,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on engineering practices that improve workflow and reduce technical debt in Scrum, referencing flow and enabling smooth Sprint transitions. However, Cycle Time itself is never directly discussed, defined, or measured. The material emphasizes flow, Continuous Delivery, Feature Flags, TDD, and refactoring, which, while related to smoother delivery, do not go into Cycle Time as a metric or main topic. The themes are adjacent, discussing process improvement relevant to Cycle Time, but without specificity or quantitative analysis around Cycle Time itself. Therefore, the confidence in categorizing this primarily under Cycle Time is low, with some tangential fit due to the general concern of improving work flow.",
    "reasoning_summary": "The content centers on engineering practices that facilitate smoother Scrum workflows. While related to concepts affecting Cycle Time, it never directly mentions or delves into Cycle Time as a metric or analytic focus, so category fit is weak.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Principle",
    "calculated_at": "2025-06-17T16:16:32",
    "ai_confidence": 51.75,
    "ai_mentions": 1.4,
    "ai_alignment": 5.8,
    "ai_depth": 4.7,
    "ai_intent": 6.0,
    "ai_audience": 8.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "The content focuses on evolving engineering practices—Feature Flags, TDD, refactoring—as enablers for effective Scrum Sprint flow and managing technical debt. Though these practices align with principles like Continuous Improvement and Value Delivery, the discussion centers on methods and tooling more than on the framing, rationale, or actionable rules that define principles in Agile/DevOps contexts. There are brief implicit references to principles (e.g., the need for maintainability and evidence through TDD), but direct mentions of principles or their deep exploration are lacking. The main intent is enabling workflow efficiency, and the audience firmly matches practitioners interested in Agile/DevOps improvement, but the signal-to-noise ratio is somewhat reduced by the focus on techniques over underlying guiding beliefs. No penalties were necessary as the tone is constructive and contemporary.",
    "reasoning_summary": "While the content discusses engineering practices key to supporting Agile principles, it mainly emphasizes methods and enablers rather than explicating the principles themselves. Alignment is partial, with more focus on actionable techniques than foundational guiding rules.",
    "level": "Tertiary"
  },
  "Throughput": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Throughput",
    "calculated_at": "2025-06-17T16:16:34",
    "ai_confidence": 11.65,
    "ai_mentions": 0.6,
    "ai_alignment": 1.8,
    "ai_depth": 2.2,
    "ai_intent": 1.5,
    "ai_audience": 2.0,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "Direct mention of throughput or its metrics is completely absent. The content discusses smoother flow and enablers like Feature Flags and TDD but remains focused on engineering practices improving workflow and technical debt, not throughput measurement or analysis. 'Flow' is used informally to describe workflow, not as a throughput metric. There is no visualisation, calculation, interpretation, or trends of throughput presented. The audience is Scrum practitioners, which is somewhat aligned, but the primary intent is to promote technical practices rather than to interpret throughput as a delivery metric.",
    "reasoning_summary": "The content emphasizes engineering practices for better sprint workflow but does not define, measure, or analyse throughput as a delivery metric. Mention of 'flow' is generic and unrelated to throughput metrics, resulting in low category alignment.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Framework",
    "calculated_at": "2025-06-17T16:16:38",
    "ai_confidence": 35.64,
    "ai_mentions": 3.5,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 4.9,
    "ai_audience": 8.0,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content references Scrum as a framework but does not delve into its principles, structure, implementation strategies, or adaptability in depth. It centers on engineering practices (Feature Flags, TDD, refactoring) that support smoother workflows within Sprints. While Scrum is named and its targets are relevant, most substance focuses on enabling practices rather than discussing frameworks. The discussion is for practitioner teams, aligning broadly with the audience, and mostly maintains relevance. No penalties needed, as no obsolete practices or undermining tone are present.",
    "reasoning_summary": "This content references Scrum and its workflow context but focuses on engineering practices rather than frameworks themselves. Its framework coverage is mostly indirect, so category fit is modest and mainly audience-driven.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Employee Engagement",
    "calculated_at": "2025-06-17T16:16:40",
    "ai_confidence": 7.4,
    "ai_mentions": 0.3,
    "ai_alignment": 1.0,
    "ai_depth": 1.3,
    "ai_intent": 0.6,
    "ai_audience": 1.2,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "This content is focused on technical engineering practices (Feature Flags, TDD, refactoring) and their impact on Sprint workflows and technical debt in Scrum teams. There are no direct or indirect mentions of employee motivation, satisfaction, engagement strategies, or factors affecting team member commitment. The discussion is entirely about process improvement, code quality, and workflow optimization, with no reference to psychological, social, or motivational aspects as defined by the Employee Engagement category. The intended audience is engineers and Scrum practitioners focused on delivery, not engagement leads or HR. No outdated or critical tone is present, so no penalties were applied.",
    "reasoning_summary": "This content deals strictly with technical workflow improvements in Scrum, not the psychological or motivational aspects of employee engagement. It lacks relevant alignment to the Employee Engagement category.",
    "level": "Ignored"
  },
  "Transparency": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Transparency",
    "calculated_at": "2025-06-17T16:16:43",
    "ai_confidence": 17.55,
    "ai_mentions": 0.5,
    "ai_alignment": 2.8,
    "ai_depth": 2.1,
    "ai_intent": 2.2,
    "ai_audience": 6.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow and reduce technical debt in Scrum. While these practices can indirectly enhance transparency (e.g., Feature Flags may increase visibility of code states), the piece does not directly discuss or analyze openness, visibility, communication, or other transparency themes as defined. There are no explicit mentions of 'transparency,' no direct exploration of how these practices affect trust, stakeholder openness, or information radiators. The main intent is on technical flow and maintainability, making transparency only a very peripheral, implied benefit.",
    "reasoning_summary": "The content centers on refining engineering techniques to improve workflow within Scrum, not on transparency itself. Any links to openness or visibility are implicit and not developed, making its fit with the Transparency category weak and largely coincidental.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Service Level Expectation",
    "calculated_at": "2025-06-17T16:16:45",
    "ai_confidence": 4.2,
    "ai_mentions": 0.5,
    "ai_alignment": 0.9,
    "ai_depth": 0.7,
    "ai_intent": 0.7,
    "ai_audience": 0.6,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve flow and reduce technical debt within Scrum Sprints. While the topic of 'flow' is discussed, there is no mention of Service Level Expectation (SLE) or related concepts such as cycle time ranges, probability, or predictability in delivery. The main ideas do not align with SLE's scope; instead, they emphasize technical enablers to support a smoother workflow. No penalties were applied as the content is neither outdated nor satirical, but low scores reflect the lack of SLE relevance.",
    "reasoning_summary": "This content discusses engineering practices for smoother Scrum workflows but does not address Service Level Expectation (SLE) concepts, definitions, or applications. Its focus is on technical enablers rather than delivery predictability or SLE metrics.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Continuous Integration",
    "calculated_at": "2025-06-17T16:16:41",
    "ai_confidence": 27.14,
    "ai_mentions": 1.1,
    "ai_alignment": 3.4,
    "ai_depth": 2.9,
    "ai_intent": 3.3,
    "ai_audience": 8.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content centers on engineering practices for improving Scrum Sprint workflow, emphasizing Feature Flags, TDD, and refactoring, with only indirect implications for Continuous Integration. The term 'Continuous Integration' is not mentioned, and the main focus is on enabling flow in Scrum using these techniques. The only adjacent CI/CD reference is a brief nod to Continuous Delivery, not CI specifically. Alignment and depth are moderate given some overlap (TDD, refactoring benefit CI), but the objectives and framing are more about scrum and general engineering excellence than CI best practices specifically.",
    "reasoning_summary": "This content is primarily about improving Scrum Sprint flow through practices like TDD and Feature Flags, with only minor indirect relevance to Continuous Integration. CI is neither directly mentioned nor is it a core discussion point, making this only modestly relevant to the category.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-06-17T16:16:44",
    "ai_confidence": 19.08,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.0,
    "ai_intent": 3.1,
    "ai_audience": 7.0,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum, but it does not directly mention or explicitly discuss cross-functional teams. While it targets Scrum team members (a partially relevant audience), the main themes are technical practices and workflow improvements, not team composition, collaboration, or cross-functionality. There is minimal if any reference (direct or conceptual) to the structure, benefits, or challenges of cross-functional teams. The intent is to discuss engineering best practices, not cross-functional team operation. The content has high signal for engineering-focused readers but is largely off-topic regarding the cross-functional teams category.",
    "reasoning_summary": "This content addresses engineering practices in Scrum, not cross-functional team concepts. Its relevance to the target category is minimal; there are no direct mentions, and its focus is on technical workflow—not on team structure or cross-functional collaboration.",
    "level": "Ignored"
  },
  "Mentoring": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Mentoring",
    "calculated_at": "2025-06-17T16:16:46",
    "ai_confidence": 10.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 2.1,
    "ai_intent": 1.4,
    "ai_audience": 2.6,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses exclusively on the adoption of modern engineering practices (Feature Flags, TDD, refactoring) to improve Scrum Sprint workflows. There are no direct mentions or substantial discussion about mentoring, coaching, leadership development, or supporting team growth beyond technical practice adoption. The audience is Scrum practitioners, but the angle is technical process improvement, not skill or behavioural development. No evidence of outdated practices or tone issues.",
    "reasoning_summary": "This content centers on technical engineering practices within Scrum without addressing mentoring, coaching, or leadership development. It’s targeted at practitioners seeking better workflows, not those looking for guidance on professional growth or Agile mentoring.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Miscellaneous",
    "calculated_at": "2025-06-17T16:16:43",
    "ai_confidence": 11.1,
    "ai_mentions": 0.4,
    "ai_alignment": 1.3,
    "ai_depth": 1.2,
    "ai_intent": 0.8,
    "ai_audience": 4.7,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content explicitly discusses Scrum frameworks, Sprint workflow, and engineering practices (Feature Flags, TDD, refactoring) that enable smoother Scrum team operation. It directly relates to actionable Agile techniques, Scrum practices, and technical debt, making it aligned with specific frameworks. No miscellaneous themes are present. Mentions of 'Miscellaneous' are nonexistent, and the conceptual, depth, and intent dimensions score very low because the discussion is targeted and framework-specific.",
    "reasoning_summary": "This content centers on Scrum and engineering practices, directly referencing frameworks and actionable methods. It does not fit 'Miscellaneous,' as all main points are rooted in recognized Agile and Scrum practices.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:16:44",
    "ai_confidence": 7.9,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 0.7,
    "ai_intent": 1.0,
    "ai_audience": 4.2,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum. There are no direct mentions or discussions of OKRs, their principles, or structured outcome-based measurement. Its intent is to address technical enablement for Scrum teams—not strategic alignment, measurement, or accountability via OKRs. Only a remote indirect alignment could be inferred if someone equates improvement in team practices with pursuing organizational outcomes, but this is not explicit or explored. The audience (engineering and Scrum practitioners) could overlap with those interested in OKRs, but the content itself contains no evidence of OKR conceptual alignment. Signal-to-noise is moderate since the post is focused, but entirely off-topic for OKRs.",
    "reasoning_summary": "This content does not reference or discuss OKRs and is focused exclusively on engineering practices for Scrum workflows. There is minimal to no relevance to the 'Objective Key Results' category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Open Space Agile",
    "calculated_at": "2025-06-17T16:16:45",
    "ai_confidence": 7.3,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.2,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is focused on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow within Scrum. There are no direct mentions of Open Space Agile or Open Space Technology. The themes, intent, and targeted audience are centered around technical Scrum practitioners and engineering workflows—not organisational change, collaborative transformation, or the emergent principles that define Open Space Agile. Discussion lacks alignment with Open Space Agile's core topics such as shared ownership, open dialogue, or complexity theory. Therefore, very low scores are justified across all dimensions, with no penalties applied.",
    "reasoning_summary": "This content centers on Scrum team engineering practices, with no reference to Open Space Agile principles or processes. Its focus is technical workflow improvement, not organisational transformation or collaborative change, resulting in minimal relevance to the category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agnostic Agile",
    "calculated_at": "2025-06-17T16:16:49",
    "ai_confidence": 33.225,
    "ai_mentions": 0.1,
    "ai_alignment": 3.3,
    "ai_depth": 3.7,
    "ai_intent": 2.2,
    "ai_audience": 7.1,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content exclusively discusses engineering practices (Feature Flags, TDD, refactoring) for improving Scrum workflows. There is no direct mention or reference to Agnostic Agile, its principles, or its advocates. The text aligns with agility in general but is framed specifically around enhancing Scrum, without reference to adapting methods contextually or prioritizing principles beyond the Scrum context. Depth and signal are modest, as the focus remains on technical best practices rather than Agnostic Agile's ethical, context-driven philosophy. The audience is technical Scrum practitioners, which partially overlaps with the likely audience for Agnostic Agile discussions. No penalties were applied as the content is not outdated nor contradictory, but scoring is limited due to strong orientation toward Scrum mechanics and absence of Agnostic Agile philosophy.",
    "reasoning_summary": "This content centers on Scrum-specific engineering practices like Feature Flags and TDD. It does not reference Agnostic Agile principles, context-driven adaptability, or related thought leaders. Its relevance to Agnostic Agile is minimal, focusing chiefly on improving Scrum workflows.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Strategy",
    "calculated_at": "2025-06-17T16:16:45",
    "ai_confidence": 22.95,
    "ai_mentions": 0.3,
    "ai_alignment": 2.4,
    "ai_depth": 2.7,
    "ai_intent": 2.1,
    "ai_audience": 6.1,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content mainly discusses evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow and reduce technical debt within Scrum teams. There are virtually no direct mentions of product strategy or its core concepts—vision, roadmapping, market analysis, customer alignment, or strategic planning. The focus remains technical and process-oriented, discussing how quality engineering practices support development flow, not how they drive or define product strategy. The audience is Scrum practitioners and engineers rather than product strategists. Some general relevance exists only insofar as good practices indirectly enable higher-level product goals, but discussion is neither deep nor intentional about strategy.",
    "reasoning_summary": "The content centers on technical engineering practices to improve Scrum workflow, not on product strategy themes. It lacks direct discussion of vision, roadmapping, market analysis, or customer alignment, and is aimed at engineers rather than strategists, resulting in a very low category fit.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Transformation",
    "calculated_at": "2025-06-17T16:16:50",
    "ai_confidence": 47.55,
    "ai_mentions": 1.2,
    "ai_alignment": 5.0,
    "ai_depth": 5.3,
    "ai_intent": 5.2,
    "ai_audience": 7.8,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content focuses on evolving engineering practices—Feature Flags, TDD, refactoring—within Scrum to improve Sprint workflows and manage technical debt. While these practices are highly relevant to Agile teams, the discussion is primarily at the engineering/process/practitioner level, not on organisation-wide transformation, leadership, or cultural change. Scrum is mentioned, and there is implicit alignment with Agile values, but the core focus is practice improvement within existing Agile teams, not transformation strategy. No direct mention of Agile Transformation or its broader concepts such as change management, readiness assessment, or leadership roles. Audience is Scrum practitioners, and most content is relevant to improving technical practices, so signal remains strong, but depth/focus on transformation is moderate.",
    "reasoning_summary": "This content targets Scrum teams seeking to evolve technical practices for better Sprint flow. While aligned with Agile improvement, it doesn’t address Agile Transformation’s strategic, organisational, or cultural aspects, focusing instead on team-level practices.",
    "level": "Tertiary"
  },
  "Flow Efficiency": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Flow Efficiency",
    "calculated_at": "2025-06-17T16:16:45",
    "ai_confidence": 72.3,
    "ai_mentions": 4.7,
    "ai_alignment": 8.9,
    "ai_depth": 7.5,
    "ai_intent": 8.2,
    "ai_audience": 8.6,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content discusses the evolution of engineering practices (Feature Flags, TDD, refactoring) to support smoother Sprint workflow in Scrum. There are explicit references to 'flow work' and how these practices are 'enablers of flow', with an emphasis on eliminating technical debt and achieving continuous delivery. While the term 'Flow Efficiency' is not named directly, the approach clearly aligns with the category's core focus—optimizing throughput, enabling continuous work, and reducing bottlenecks. The discussion is more practical and practitioner-focused, appealing to Scrum teams and engineers, and provides some depth in exploring how specific practices enable flow but doesn't quantify flow efficiency metrics or discuss bottleneck analysis directly. Most content is on-topic and highly relevant, with minor tangents regarding Scrum/CD philosophy but these reinforce, not detract from, relevance.",
    "reasoning_summary": "The content is practically focused on using modern engineering practices to support flow in Scrum and continuous delivery. While it does not use 'Flow Efficiency' terminology, it closely addresses the core category concepts, making it a strong, relevant fit for this classification.",
    "level": "Secondary"
  },
  "Increment": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Increment",
    "calculated_at": "2025-06-17T16:16:48",
    "ai_confidence": 56.975,
    "ai_mentions": 2.6,
    "ai_alignment": 6.9,
    "ai_depth": 6.7,
    "ai_intent": 6.1,
    "ai_audience": 7.7,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "Direct mentions of 'Increment' are absent, and the term is not cited. However, the content discusses engineering practices (Feature Flags, TDD, refactoring) that enable smoother, higher-quality iterative delivery in Scrum, which correlates to producing a usable Increment. The focus on minimizing unfinished or 'undone' work aligns conceptually with delivering Done increments, and the distinction between 'unfinished backlog items' and 'undone work' is relevant. Discussion is moderately deep, emphasizing enablers of flow rather than the Increment itself. The intent is practitioner-focused, addressing Scrum teams and engineers, which matches the audience for Increment discussions. The content stays focused, but depth lags due to absence of explicit Increment terminology or direct exploration of Scrum Increment as an artifact. No critical or outdated practices detected, so no penalties are applied.",
    "reasoning_summary": "While the content does not mention 'Increment' explicitly, it aligns conceptually by focusing on practices that support the creation of working software per Sprint. The relevance to the Increment category is indirect but present, as the practices discussed help achieve Done, usable outputs in Scrum.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Organisational Culture",
    "calculated_at": "2025-06-17T16:16:46",
    "ai_confidence": 17.79,
    "ai_mentions": 1.2,
    "ai_alignment": 2.4,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 5.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content is specifically about technical practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum. None of the main ideas relate directly to organisational culture. There is no discussion of leadership, cultural attitudes, team dynamics, or any of the key topics outlined for the Organisational Culture category. The content does not mention culture explicitly, nor is there an implicit focus on how culture facilitates or hinders Agile or DevOps adoption. Its audience is Scrum practitioners or engineers, which is somewhat aligned, but the signal-to-noise ratio is relatively high only because it's on-topic for engineering process—not culture. No penalties were applied as there is no evidence of obsolescence or tone issues.",
    "reasoning_summary": "This content is focused on technical Scrum practices and process improvements rather than organisational culture. It lacks direct references, contextual alignment, or in-depth discussion about culture, making it a poor fit for the Organisational Culture category.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Coaching",
    "calculated_at": "2025-06-17T16:16:44",
    "ai_confidence": 23.75,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.0,
    "ai_intent": 2.5,
    "ai_audience": 7.9,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content centers on evolving engineering practices to improve Sprint workflow, primarily discussing technical enablers like Feature Flags, TDD, and refactoring in the context of Scrum. There is no direct reference or implicit emphasis on coaching, facilitation, guidance, building team capabilities, or psychological safety. While it targets Scrum practitioners (aligned with the coaching audience), its focus is process and technique, not on the coaching role or fostering growth/collaboration. No penalties were needed as the content is current and not critical or satirical.",
    "reasoning_summary": "This content is technical and process-oriented, focusing on engineering practices in Scrum. It does not discuss coaching, guidance, or team development, and only minimally aligns with the Coaching category.",
    "level": "Ignored"
  },
  "Lean": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Lean",
    "calculated_at": "2025-06-17T16:16:50",
    "ai_confidence": 34.18,
    "ai_mentions": 0.7,
    "ai_alignment": 3.3,
    "ai_depth": 3.1,
    "ai_intent": 4.0,
    "ai_audience": 7.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "Direct references to Lean, its terminology, or principles are missing—the content focuses exclusively on Scrum workflow and engineering practices (Feature Flags, TDD, refactoring, Continuous Delivery). While these indirectly relate to process effectiveness and efficiency, Lean topics (waste elimination, value stream mapping, Lean principles) are absent. The alignment and depth scores reflect the minimal connection. The audience and signal scores are higher because the content is focused and practical for practitioners, but the fit is tangential to Lean.",
    "reasoning_summary": "This content focuses on engineering practices within Scrum, such as Feature Flags and TDD, to improve workflow—not Lean principles. There’s little direct or conceptual connection to Lean, though some themes overlap around process improvement, resulting in low alignment.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Backlog",
    "calculated_at": "2025-06-17T16:16:48",
    "ai_confidence": 39.45,
    "ai_mentions": 2.4,
    "ai_alignment": 4.7,
    "ai_depth": 4.0,
    "ai_intent": 4.2,
    "ai_audience": 7.0,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content briefly references 'Unfinished Backlog Items', suggesting some relation to the Product Backlog, but its main focus is on engineering practices (Feature Flags, TDD, refactoring) and their impact on sprint workflow and technical debt in Scrum. It does not explore Product Backlog management, refinement, prioritization, or related best practices in any meaningful depth; mentions of the backlog are superficial and not a core element. The intended audience (Scrum practitioners, engineers) partially aligns with Product Backlog discussions, but the content is heavily weighted toward technical execution rather than backlog-specific topics.",
    "reasoning_summary": "The content touches on the Product Backlog only tangentially, focusing primarily on engineering practices in Scrum. Its relevance to Product Backlog is minimal, with limited direct discussion or substantive alignment to backlog management.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Method",
    "calculated_at": "2025-06-17T16:16:45",
    "ai_confidence": 73.85,
    "ai_mentions": 5.7,
    "ai_alignment": 8.1,
    "ai_depth": 7.9,
    "ai_intent": 7.7,
    "ai_audience": 8.6,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "Direct mentions of 'method' are absent, but the content describes step-by-step practices for improving Scrum workflows—specifically, Feature Flags, TDD, and refactoring. These are explained as procedural enablers of better Sprint flow, aligning them with the Method category's definition. The discussion explores how each practice contributes to a smoother workflow and reduces technical debt, showing moderate depth. The main audience is Scrum practitioners seeking pragmatic improvement methods. Signal is high, mostly free from tangents. No outdated practices or negative tone, so no penalties apply.",
    "reasoning_summary": "This content centers on concrete engineering practices—Feature Flags, TDD, and refactoring—as methods to improve Sprint workflow in Scrum, closely matching the category. It provides procedural insight, targets practitioners, and strongly aligns with the Method definition despite lacking explicit method terminology.",
    "level": "Secondary"
  },
  "Estimation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Estimation",
    "calculated_at": "2025-06-17T16:16:48",
    "ai_confidence": 11.85,
    "ai_mentions": 0.4,
    "ai_alignment": 1.2,
    "ai_depth": 1.6,
    "ai_intent": 1.2,
    "ai_audience": 4.0,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content is focused on improving engineering practices to support smoother Sprint workflows in Scrum, emphasizing Feature Flags, TDD, and refactoring. There are no explicit mentions or substantive discussion of estimation techniques, empirical forecasting, or collaborative estimation practices. The main intent is to address technical excellence and workflow, not estimation, though the target audience (Scrum teams) could overlap. Some tangential reference to handling 'unfinished work' may be distantly related to estimation, but the exploration is neither direct nor in-depth.",
    "reasoning_summary": "This content centers on Scrum engineering practices—Feature Flags, TDD, and refactoring—not estimation. While processes overlap in audience, there is minimal conceptual or explicit connection to estimation, yielding low relevance to the Estimation category.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-06-17T16:16:45",
    "ai_confidence": 18.57,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 1.9,
    "ai_intent": 2.8,
    "ai_audience": 7.9,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on Scrum workflow improvements using Feature Flags, TDD, and refactoring. Internal Developer Platform is never mentioned directly or indirectly. While some tools noted (e.g., Feature Flags, CD) are used in IDP environments, the discussion neither frames them as part of an IDP nor explores platform-related concepts such as architecture, implementation, or purpose. The content's purpose centers on evolving engineering practices supporting Agile/Scrum workflows, not on IDPs as a framework or solution. Thus, conceptual alignment and depth are very low, though the audience overlap (engineering teams) and focus (technical practice) afford mildly higher scores in audience and signal-to-noise without warranting major penalties.",
    "reasoning_summary": "This content is focused on engineering practices like Feature Flags and TDD to improve Scrum flow, not on Internal Developer Platforms. There's little to no alignment with the IDP category—no direct mentions or exploration of IDP-specific concepts.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Team Motivation",
    "calculated_at": "2025-06-17T16:16:47",
    "ai_confidence": 15.5,
    "ai_mentions": 0.5,
    "ai_alignment": 1.5,
    "ai_depth": 1.8,
    "ai_intent": 2.0,
    "ai_audience": 8.6,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on technical practices such as Feature Flags, TDD, and refactoring to improve Sprint workflow in Scrum teams. There is no explicit mention of team motivation, engagement, or psychological aspects. The main themes are technical flow and reducing technical debt, not strategies or dynamics that drive motivation or performance from a team or psychological perspective. The intent, audience, and clarity are strong for engineers, but not on 'Team Motivation.'",
    "reasoning_summary": "This content centers on technical practices to enable smooth Sprint workflows, lacking any substantive discussion of team motivation, engagement, or psychological dynamics. Its relevance to the Team Motivation category is minimal.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Project Management",
    "calculated_at": "2025-06-17T16:16:58",
    "ai_confidence": 33.25,
    "ai_mentions": 2.1,
    "ai_alignment": 3.7,
    "ai_depth": 2.8,
    "ai_intent": 3.5,
    "ai_audience": 4.2,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content centers on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow specifically for Scrum teams. Project Management is only indirectly touched, as concepts like technical debt, unfinished work, or workflow optimization may factor into project delivery, but no explicit project management principles, lifecycle phases, methodologies, or managerial tools are referenced. The primary audience is technical Scrum team members rather than project managers, with a focus on team workflow and engineering quality, not broader project management scope. The depth and alignment are modest, with limited cross-over into project management topics, and direct mentions of the category are absent.",
    "reasoning_summary": "This content discusses engineering practices to improve Sprint flow in Scrum, focusing on technical team workflows and quality. While these practices impact delivery, the discussion does not directly reference project management principles, methodology, or tools.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Technical Leadership",
    "calculated_at": "2025-06-17T16:16:51",
    "ai_confidence": 64.55,
    "ai_mentions": 2.0,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 7.1,
    "ai_audience": 6.8,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content discusses evolving engineering practices like Feature Flags, TDD, and refactoring in the context of Scrum and reducing technical debt. It references core agile concepts such as Sprint flow, unfinished work, and continuous delivery. These topics align with aspects of technical leadership, such as fostering best practices, manage technical debt, and leading process improvements, but there is only indirect mention of leadership roles or coaching. The discussion is aimed at practitioners or those responsible for engineering effectiveness but does not explicitly address leadership intent, servant leadership, or coaching teams. Signal-to-noise is moderate: the content stays mostly focused, but is somewhat general and lacks direct engagement with tangible leadership themes.",
    "reasoning_summary": "The content relates to Technical Leadership by recommending engineering practices that improve Scrum team outcomes and manage technical debt, but it does not directly address or exemplify leadership roles, coaching, or team guidance.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-06-17T16:16:54",
    "ai_confidence": 27.065,
    "ai_mentions": 1.8,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 3.1,
    "ai_audience": 8.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring, and Continuous Delivery) to optimize Sprint workflow within Scrum. While it alludes to important Agile behaviors such as flow and reducing technical debt, it does not explicitly discuss Agile Values or Principles or deepen the reader's understanding of them. Instead, it is a pragmatic guidance piece for practitioners seeking workflow improvements, not a principled discussion of Agile philosophies. The only implicit connection is the context of Scrum and the desired outcome of responsiveness, but key Agile Manifesto values and principles are not directly referenced, nor is their impact on team culture or value delivery explored.",
    "reasoning_summary": "This content centers on practical engineering tactics for Scrum teams rather than a discussion of Agile Values and Principles. While related to Agile practice, it does not address core values or principles, making the fit with the category low.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Kanban",
    "calculated_at": "2025-06-17T16:16:49",
    "ai_confidence": 17.72,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 6.2,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content explicitly references Scrum and engineering practices (Feature Flags, TDD, refactoring) to support flow within Scrum Sprints. Although 'flow' is discussed—a key Kanban concept—there are no direct references to Kanban, its practices, or guiding principles. Concepts such as Kanban boards, WIP limits, or cycle time are entirely absent. The main audience (Scrum teams) differs from Kanban practitioners, and signal is diluted by a focus on development techniques rather than Kanban methodology. Minimal overlap exists in the conceptual focus on flow, but this does not constitute substantive alignment with Kanban.",
    "reasoning_summary": "This content addresses engineering practices to improve flow in Scrum, not Kanban. While 'flow' is mentioned, there is no mention or meaningful discussion of Kanban methods or principles. It is focused on supporting Scrum teams, not Kanban adoption or theory.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-06-17T16:16:53",
    "ai_confidence": 12.1,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 1.0,
    "ai_audience": 6.5,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on engineering practices such as Feature Flags, TDD, and refactoring to improve Sprint workflow and reduce technical debt in Scrum. There are no direct mentions or explicit discussions of customer satisfaction, measurement techniques, or strategies for enhancing customer experience. The main intent is technical workflow improvement rather than aligning with customer satisfaction principles. The audience is aligned with Scrum practitioners, partially matching the category's audience, but the topic focus is too technical and internal to meaningfully fit the 'Customer Satisfaction' scope.",
    "reasoning_summary": "While relevant to Agile teams, the content centers on internal engineering workflow and technical debt—not on customer satisfaction, measurement, or experience. Its fit with the 'Customer Satisfaction' category is very minimal.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Beta Codex",
    "calculated_at": "2025-06-17T16:16:54",
    "ai_confidence": 12.1,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 1.9,
    "ai_intent": 2.3,
    "ai_audience": 3.9,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "There are no direct mentions of Beta Codex or its principles. The content focuses exclusively on evolving engineering practices (Feature Flags, TDD, refactoring) and their tactical application to improve flow in Scrum. While there is some tangential relevance to agility, there is no substantive discussion of decentralisation, human-centric design, adaptive culture, or organisational model transformation, which are core Beta Codex topics. Audience alignment is somewhat present (tech practitioners), but the conceptual, intent, and depth scores are low because Beta Codex frameworks or theory are never referenced or discussed.",
    "reasoning_summary": "The content addresses engineering tactics within Scrum, not decentralised or human-centric organisational design. It lacks direct or conceptual connection to Beta Codex principles, focusing instead on practical Scrum improvements and technical workflow.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-06-17T16:16:57",
    "ai_confidence": 27.82,
    "ai_mentions": 0.9,
    "ai_alignment": 2.7,
    "ai_depth": 2.3,
    "ai_intent": 2.8,
    "ai_audience": 7.0,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on engineering practices—Feature Flags, TDD, refactoring—to improve sprint workflow in Scrum. It discusses their benefits for enabling flow and reducing technical debt but does not address Agile Planning Tools, backlog management, tool-specific functionalities (like Jira/Trello), or planning methodologies. The main audience (Scrum practitioners, engineers) somewhat overlaps, but there is no substantive discussion about the tools or processes for Agile planning itself.",
    "reasoning_summary": "This content centers on engineering techniques that support smoother Scrum sprints, not on Agile Planning Tools. While relevant to Agile practitioners, it doesn't explore tools, backlog management, or planning processes, thus only minimally fits the category.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Tenet",
    "calculated_at": "2025-06-17T16:16:50",
    "ai_confidence": 66.15,
    "ai_mentions": 3.2,
    "ai_alignment": 7.9,
    "ai_depth": 6.8,
    "ai_intent": 7.1,
    "ai_audience": 8.4,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 66.0,
    "reasoning": "The content discusses actionable practices (Feature Flags, TDD, refactoring) that facilitate flow and reduce technical debt in Scrum. It implies tenets like 'flow efficiency' and 'technical excellence as a sustainable pace,' aligning with Agile/DevOps guiding doctrines. However, it does not directly name 'tenets,' nor deeply examine their organizational application, resulting in moderate scores for mentions and depth. The content is highly relevant to practitioners, focused on prescriptive improvements, but lacks explicit tenet articulation.",
    "reasoning_summary": "This piece effectively recommends actionable engineering practices that support core Agile/DevOps tenets, like valuing flow and technical excellence. While it doesn't directly label them as tenets, its advice aligns closely with such principles, making it a solid, if somewhat indirect, fit for the Tenet category.",
    "level": "Secondary"
  },
  "Scaling": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Scaling",
    "calculated_at": "2025-06-17T16:16:55",
    "ai_confidence": 19.881,
    "ai_mentions": 0.2,
    "ai_alignment": 2.0,
    "ai_depth": 2.52,
    "ai_intent": 2.191,
    "ai_audience": 7.22,
    "ai_signal": 3.333,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow within Scrum teams. It makes no direct mention of scaling frameworks, cross-team coordination, or enterprise-level Agile practices. The discussion remains squarely at the team/Scrum level and does not address complexities or strategies specific to scaling Agile. The audience may overlap with scaling contexts, but the main themes and depth do not match. Hence, low alignment and depth scores, with minor score boosts for slight relevance to engineering practice evolution in potentially larger contexts.",
    "reasoning_summary": "This content targets Scrum team practices, not Scaling. It discusses workflow enhancements and technical excellence at the team level, without referencing multi-team or enterprise coordination or scaling frameworks. Scaling relevance is minimal.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Scrum Team",
    "calculated_at": "2025-06-17T16:16:50",
    "ai_confidence": 48.56,
    "ai_mentions": 3.9,
    "ai_alignment": 5.8,
    "ai_depth": 5.7,
    "ai_intent": 4.4,
    "ai_audience": 7.1,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content directly references 'Scrum teams' but focuses on engineering practices (Feature Flags, TDD, refactoring) to enable better Sprint flow, rather than explaining the Scrum Team accountability, structure, or responsibilities as defined in the Scrum Guide. The discussion is technical and targeted at practitioners working within Scrum Teams, but the primary aim is to advocate best practices for software delivery—not to outline or analyze the Scrum Team as an accountability. No content is outdated or critical of Scrum; thus, no penalties applied. While moderately relevant to teams operating in Scrum, the content lacks emphasis on what specifically constitutes the Scrum Team’s accountability, empowerment, or structure.",
    "reasoning_summary": "The content addresses technical practices to help Scrum teams improve Sprint workflow but does not delve into the Scrum Team’s accountability, structure, or responsibilities. Its main focus is on engineering enablers, not on describing the formal aspects of the Scrum Team category.",
    "level": "Tertiary"
  },
  "Observability": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Observability",
    "calculated_at": "2025-06-17T16:16:52",
    "ai_confidence": 23.15,
    "ai_mentions": 0.0,
    "ai_alignment": 2.4,
    "ai_depth": 2.6,
    "ai_intent": 2.5,
    "ai_audience": 8.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on evolving Scrum engineering practices—Feature Flags, TDD, refactoring, and Continuous Delivery—to improve workflow and manage technical debt. Observability is not directly mentioned, nor are its principles like metrics, logs, or system insight. While these practices sometimes facilitate observability indirectly, they are highlighted here for flow and code quality. The audience matches (technical Scrum/Agile teams), and the content is on-topic for engineering best practices but not for observability itself.",
    "reasoning_summary": "This content centers on engineering practices for smoother Scrum workflows, not on measuring or understanding internal system states. Observability is neither mentioned nor conceptually central, resulting in a low fit with the Observability category.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Cell Structure Design",
    "calculated_at": "2025-06-17T16:16:50",
    "ai_confidence": 12.8,
    "ai_mentions": 0.0,
    "ai_alignment": 1.1,
    "ai_depth": 1.3,
    "ai_intent": 1.5,
    "ai_audience": 6.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses narrowly on evolving engineering practices—Feature Flags, TDD, refactoring—for enhancing sprint workflow in Scrum. There are no direct mentions or references to Cell Structure Design, the Beta Codex, autonomous cells, or network-based organisational structures. The main theme is technical delivery within Scrum, not organisational model design. Although the audience (Scrum teams, engineers) could theoretically overlap with those interested in Cell Structure Design, the content itself does not even tangentially address, compare, or exemplify any aspects of the category, nor does it provide insight into decentralisation, autonomous units, or the principles underlying Cell Structure Design. As such, scores are minimal except for audience/signal, which reflect possible, but weak, secondary overlaps.",
    "reasoning_summary": "This content covers engineering practices in Scrum, without mentioning or aligning conceptually with Cell Structure Design or the Beta Codex. It focuses on technical delivery, not organisational design or decentralised structures, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Install and Configuration",
    "calculated_at": "2025-06-17T16:16:57",
    "ai_confidence": 7.98,
    "ai_mentions": 0.4,
    "ai_alignment": 1.1,
    "ai_depth": 0.7,
    "ai_intent": 1.0,
    "ai_audience": 2.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses evolving engineering practices (Feature Flags, TDD, Refactoring) to enhance Sprint workflow in Scrum teams, focusing on concepts like technical debt, flow, and code quality. However, it does not directly address installation or configuration of tools or platforms. There are no actionable technical instructions, configuration guides, or system requirements. No explicit or implicit references are made to set-up or implementation aspects of any software or infrastructure. The content is aimed at practitioners but in the context of engineering practices, not install/config topics. No penalties applied as the content is neither outdated nor contradictory.",
    "reasoning_summary": "This content focuses on engineering best practices in Scrum, such as Feature Flags and TDD, without directly discussing software installation or configuration. Its main themes and intent lie outside the Install and Configuration category.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Team Performance",
    "calculated_at": "2025-06-17T16:16:53",
    "ai_confidence": 82.6,
    "ai_mentions": 6.3,
    "ai_alignment": 9.2,
    "ai_depth": 8.7,
    "ai_intent": 8.8,
    "ai_audience": 7.7,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content is directly focused on how evolving engineering practices (Feature Flags, TDD, refactoring) improve Sprint workflow in Scrum teams, which aligns closely with the 'Team Performance' category. While the content does not use the term 'team performance' explicitly, it thoroughly discusses how these practices enhance flow and reduce technical debt, reflecting delivery capability at the team level. The examples are practitioner-oriented and actionable, with minimal off-topic material. The alignment, depth, and signal-to-noise scores are high due to the tight focus on team-level delivery improvements and sustainable workflow. No outdated practices or negative framing were present, so no penalties were required.",
    "reasoning_summary": "The content is solidly relevant to 'Team Performance,' highlighting how engineering practices like Feature Flags and TDD boost Scrum team delivery and workflow. It targets practitioners, offering practical discussion with minimal tangents, resulting in a high fit for the category.",
    "level": "Primary"
  },
  "Ethos": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Ethos",
    "calculated_at": "2025-06-17T16:17:00",
    "ai_confidence": 41.3,
    "ai_mentions": 1.3,
    "ai_alignment": 4.5,
    "ai_depth": 4.2,
    "ai_intent": 4.9,
    "ai_audience": 7.6,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content centers on practical engineering techniques (Feature Flags, TDD, refactoring) for improving Scrum workflows. While it emphasizes their necessity and hints at underlying discipline, its focus remains on enabling flow and reducing technical debt rather than the deeper foundations of belief or system ethos. There is minimal explicit mention or in-depth exploration of core convictions, transformation, or demonstrable system values; the narrative frames practices as enablers, not expressions of ethos. Overall, alignment and depth are moderate, primarily tangential to ethos, with strong relevance for practitioners but lacking underpinning analysis of beliefs or foundational system values.",
    "reasoning_summary": "The content spotlights important engineering practices for Scrum flow but only touches superficially on ethos concepts. Its main focus is practical tools and workflow, not the deep foundational convictions or system-level ethos that guide sustainable Agile or DevOps transformation.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Operational Practices",
    "calculated_at": "2025-06-17T16:17:00",
    "ai_confidence": 85.91,
    "ai_mentions": 7.8,
    "ai_alignment": 9.6,
    "ai_depth": 8.9,
    "ai_intent": 8.1,
    "ai_audience": 8.5,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content explicitly advocates evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum, aligning directly with operational optimisation. It addresses how these practices reduce technical debt, enable continuous delivery, and foster better flow—core elements of operational efficiency. The audience is clearly Agile/Scrum practitioners and engineering teams, with strong, practical relevance and minimal off-topic digression. Mentions of operational practices are frequent, though the term itself ('Operational Practices') is not directly used. The discussion is moderately deep, with multiple best practices and strategies elaborated but could expand further on implementation nuances.",
    "reasoning_summary": "This content directly targets Scrum and Agile practitioners, emphasizing strategies like Feature Flags, TDD, and refactoring to boost operational efficiency and maintain workflow quality—making it a strong fit for the 'Operational Practices' category.",
    "level": "Primary"
  },
  "Shift Left Strategy": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-06-17T16:16:51",
    "ai_confidence": 38.07,
    "ai_mentions": 1.6,
    "ai_alignment": 4.4,
    "ai_depth": 4.0,
    "ai_intent": 3.8,
    "ai_audience": 8.2,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content discusses evolving engineering practices like Feature Flags, TDD, and refactoring in the context of improving Sprint workflow and reducing technical debt. While these practices align with principles often associated with Shift-Left Strategy (like early testing and maintaining code quality), the article does not explicitly mention Shift-Left Strategy, nor does it directly discuss moving testing, security, or compliance earlier in the software delivery cycle. Most discussion focuses on enabling flow and minimizing technical debt in Scrum, rather than articulating or advocating for a Shift-Left approach. The audience is aligned (Scrum practitioners, engineers), and the signal is decent, but the lack of explicit Shift-Left framing keeps the confidence low.",
    "reasoning_summary": "While the content highlights practices related to early quality assurance (TDD, refactoring), it does not directly address or discuss Shift-Left Strategy, its principles, or associated metrics. The fit is indirect—relevant in spirit, but not focused on Shift-Left as defined.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Market Adaptability",
    "calculated_at": "2025-06-17T16:16:55",
    "ai_confidence": 53.825,
    "ai_mentions": 1.7,
    "ai_alignment": 5.9,
    "ai_depth": 6.6,
    "ai_intent": 5.3,
    "ai_audience": 7.1,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on improving Sprint workflow in Scrum by leveraging engineering practices—Feature Flags, TDD, refactoring, and hints at Continuous Delivery. While these practices can enhance adaptability, the content centers on process efficiency, technical debt, and team delivery flow, not directly on responding to market shifts or competitive pressures. Direct mentions of 'market', 'adaptability', or explicit strategies for market responsiveness are absent. The alignment and depth moderately reflect the category due to some overlap with DevOps and Agile flow principles, but the main intent is enabling engineering productivity, not adapting to market changes. No penalties were needed as there are no outdated practices or contradictory tones present.",
    "reasoning_summary": "The content discusses evolving engineering practices in Scrum to improve technical workflow, with indirect ties to market adaptability through enhanced delivery and team agility. However, it does not explicitly address market responsiveness or adaptation strategies central to the category.",
    "level": "Tertiary"
  },
  "Digital Transformation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Digital Transformation",
    "calculated_at": "2025-06-17T16:17:04",
    "ai_confidence": 41.49,
    "ai_mentions": 1.1,
    "ai_alignment": 4.7,
    "ai_depth": 3.2,
    "ai_intent": 4.3,
    "ai_audience": 6.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on specific engineering practices (Feature Flags, TDD, refactoring) to improve Scrum Sprints, aiming to reduce technical debt and enable continuous delivery. While these practices can support digital transformation, the content does not explicitly frame them within a strategic, organizational transformation context or discuss the broader impact of digital technology adoption. There are no direct or frequent mentions of 'Digital Transformation' or its characteristic themes like culture change, strategic transformation frameworks, or driving business agility at scale. The main intent is practical guidance for Scrum teams, not a strategic overhaul of business models, so the fit is only tangential.",
    "reasoning_summary": "The content provides tactical advice for engineering teams using Scrum and DevOps practices but does not directly address digital transformation as a strategic business initiative. Its relevance to the category is incidental rather than focused.",
    "level": "Tertiary"
  },
  "Team Collaboration": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Team Collaboration",
    "calculated_at": "2025-06-17T16:16:54",
    "ai_confidence": 37.05,
    "ai_mentions": 2.2,
    "ai_alignment": 4.9,
    "ai_depth": 3.7,
    "ai_intent": 3.9,
    "ai_audience": 7.6,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) that improve the workflow in Scrum Sprints. While these practices may indirectly support collaboration by improving team output, there is no explicit discussion of teamwork, communication, or shared ownership. Terms core to the category such as trust, cross-functionality, or collaborative dynamics are absent. The audience (Scrum teams, engineers) matches, but the intent is mainly technical rather than collaborative. Minimal direct or conceptual alignment with Team Collaboration, with most of the discussion centering on process and code health.",
    "reasoning_summary": "The content primarily details engineering techniques for smoother Sprints, lacking explicit focus on team communication or collaborative dynamics, hence only partial relevance to Team Collaboration.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Liberating Structures",
    "calculated_at": "2025-06-17T16:16:57",
    "ai_confidence": 2.0,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 2.3,
    "ai_audience": 3.7,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "There are no direct mentions of Liberating Structures, nor does the content reference facilitation methods, team interaction techniques, or any relevant practices from the Liberating Structures toolkit. The focus is strictly on engineering practices such as Feature Flags, TDD, and refactoring within a Scrum context. While the audience (Scrum/Agile practitioners) does overlap with those who might use Liberating Structures, no conceptual or practical alignment exists. There is minimal relevance; the content does not discuss team facilitation, engagement, or specific liberating techniques.",
    "reasoning_summary": "The content is entirely focused on engineering practices for Scrum and does not reference, describe, or align with Liberating Structures or its associated methods. There is no connection in intent or subject matter beyond serving a potentially overlapping audience.",
    "level": "Ignored"
  },
  "Windows": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Windows",
    "calculated_at": "2025-06-17T16:17:02",
    "ai_confidence": 3.329,
    "ai_mentions": 0.1,
    "ai_alignment": 0.3,
    "ai_depth": 0.5,
    "ai_intent": 0.1,
    "ai_audience": 0.2,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "There is no explicit mention or discussion of Microsoft Windows or any aspect of the Windows operating system. The focus is entirely on agile engineering practices like Feature Flags, TDD, refactoring, and Scrum workflow, which are general software and team practices. No installation, configuration, troubleshooting, or user management in the Windows environment are addressed. The intent, alignment, audience, and content are not relevant to the Windows category, resulting in a very low confidence score.",
    "reasoning_summary": "This content does not relate to Windows; it discusses general Scrum and agile engineering practices with no focus on the Windows operating system or its management.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Complexity Thinking",
    "calculated_at": "2025-06-17T16:16:55",
    "ai_confidence": 14.06,
    "ai_mentions": 0.35,
    "ai_alignment": 2.72,
    "ai_depth": 1.81,
    "ai_intent": 2.17,
    "ai_audience": 4.22,
    "ai_signal": 4.08,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on practical engineering practices (Feature Flags, TDD, refactoring) to facilitate Sprint workflow in Scrum, aiming to improve flow and reduce technical debt. There is no explicit mention or discussion of complexity science, the Cynefin Framework, emergence, non-linear dynamics, or other core concepts from Complexity Thinking. The main themes center on technical enablement rather than the systems-thinking, emergence, or unpredictability seen in Complexity Thinking. The target audience (Scrum practitioners, engineers) might overlap with those interested in Complexity Thinking, but the topic focus and conceptual alignment are weak.",
    "reasoning_summary": "This content discusses technical practices for smoother Scrum workflows, with no direct reference to complexity science, theory, or related frameworks. Its alignment with Complexity Thinking is minimal, focusing instead on practical engineering methods.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Practice",
    "calculated_at": "2025-06-17T16:16:55",
    "ai_confidence": 93.5,
    "ai_mentions": 8.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.4,
    "ai_intent": 9.0,
    "ai_audience": 8.7,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly references several actionable engineering practices (Feature Flags, TDD, refactoring, Continuous Delivery) and discusses their role in Scrum workflow improvement. The focus is on repeatable actions that foster flow and reduce technical debt, aligning with 'Practice'. The discussion offers rationale, tactical guidance, and targets practitioner audiences. Minor background context and rhetorical questions reduce the signal slightly, but with no penalties required.",
    "reasoning_summary": "This content strongly aligns with the 'Practice' category by emphasizing actionable engineering techniques that enhance Scrum workflow. The focus on evolving and applying practices like Feature Flags and TDD makes it highly relevant and practical for Scrum practitioners.",
    "level": "Primary"
  },
  "DevOps": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "DevOps",
    "calculated_at": "2025-06-17T16:16:55",
    "ai_confidence": 70.5,
    "ai_mentions": 3.1,
    "ai_alignment": 7.7,
    "ai_depth": 7.9,
    "ai_intent": 7.1,
    "ai_audience": 6.8,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content predominantly discusses evolving engineering practices (Feature Flags, TDD, refactoring) to support flow in Scrum, which aligns with DevOps principles like enabling continuous flow, automation, and reducing technical debt. The mention of continuous delivery and the focus on production readiness reinforce conceptual alignment, but DevOps is never mentioned directly, and the main framing is still Scrum/Sprint workflow improvement. Discussion depth is strong regarding enabling practices, but the content is more Scrum-centric than DevOps-focused, thus moderately aligning on audience and intent. Signal-to-noise is somewhat diluted by the Scrum context. No penalties applied for tone or outdatedness.",
    "reasoning_summary": "The content connects engineering practices central to DevOps—like Feature Flags and Continuous Delivery—with improving Sprint flow in Scrum, reflecting meaningful alignment with DevOps principles, though the framing centers more on Scrum than DevOps itself.",
    "level": "Secondary"
  },
  "Change Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Change Management",
    "calculated_at": "2025-06-17T16:17:01",
    "ai_confidence": 36.57,
    "ai_mentions": 1.0,
    "ai_alignment": 3.6,
    "ai_depth": 4.2,
    "ai_intent": 4.5,
    "ai_audience": 7.4,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content centers on improving sprint workflow in Scrum through engineering practices like Feature Flags, TDD, and refactoring. While these may support organizational adaptation, the focus is technical process improvement—not organizational change strategies, leadership, stakeholder engagement, or cultural transformation as required for Change Management. There are no direct mentions of change management, principles, or its core techniques. The content targets Scrum practitioners seeking to refine engineering discipline, not those managing broader organizational change. Thus, alignment and depth with Change Management are both partial and indirect.",
    "reasoning_summary": "The content discusses evolving engineering practices in Scrum to improve workflow, focusing on tools and techniques like Feature Flags and TDD. It does not directly address change management strategies, leadership, or organizational culture, and only partly aligns with the Change Management category.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Management",
    "calculated_at": "2025-06-17T16:16:57",
    "ai_confidence": 41.516,
    "ai_mentions": 0.3,
    "ai_alignment": 4.9,
    "ai_depth": 4.5,
    "ai_intent": 3.6,
    "ai_audience": 4.5,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content mainly discusses engineering practices (Feature Flags, TDD, refactoring) that facilitate better sprint workflow in Scrum, focusing on technical implementation and workflow efficiency. There are indirect links to product management through the mention of reducing technical debt and improving outcomes, but explicit and sustained discussion about strategic alignment or product management processes is missing. The primary audience appears to be technical practitioners (engineers, Scrum teams), rather than product managers. There is little direct mention of product management concepts or terminology—no reference to strategic product decisions, stakeholder alignment, or Evidence-Based Management. The discussion depth is technical, not strategic or organizational.",
    "reasoning_summary": "This content centers on technical practices in Scrum to improve sprint workflow and reduce technical debt. While tangentially relevant to product management goals, its focus is not on product management strategy, decision-making, or frameworks. Its main audience is engineers, not product managers.",
    "level": "Tertiary"
  },
  "First Principal": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "First Principal",
    "calculated_at": "2025-06-17T16:16:58",
    "ai_confidence": 32.405,
    "ai_mentions": 2.4,
    "ai_alignment": 3.6,
    "ai_depth": 3.2,
    "ai_intent": 3.5,
    "ai_audience": 8.3,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on engineering enablers for Sprint flow—Feature Flags, TDD, refactoring—positioning them as necessary for high-quality delivery. It strongly advocates for these practices, even calling them 'not optional,' but does not identify or discuss irreducible, immutable constraints or first principles themselves. The discussion does not distinguish between first principles and derived heuristics, nor does it reference foundational theorists or address the conceptual role of first principles in Lean, Agile, or Scrum contexts. The main audience aligns well, and the signal is high, but the conceptual alignment and depth for 'First Principal' are fairly weak.",
    "reasoning_summary": "While the content is highly relevant to Scrum practitioners and discusses mandatory engineering practices, it does not directly identify or analyze first principles. It remains focused on practical enablers rather than foundational, immutable constraints, resulting in low alignment to the 'First Principal' category.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-06-17T16:16:57",
    "ai_confidence": 10.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 2.0,
    "ai_audience": 2.8,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow and manage technical debt in Scrum but does not explicitly discuss, reference, or imply customer feedback loops. There is no mention of mechanisms for collecting, analysing, or acting on customer feedback, nor any discussion of integrating customer insights into product development. The intent is strictly engineering process improvement, and the only audience alignment comes from general Scrum relevance. Consequently, alignment, depth, and intent are minimal for this category.",
    "reasoning_summary": "This content discusses engineering tactics for better Scrum workflow but does not address customer feedback loops or related practices. Its focus is technical execution, not feedback integration.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Experimentation",
    "calculated_at": "2025-06-17T16:17:09",
    "ai_confidence": 27.55,
    "ai_mentions": 1.2,
    "ai_alignment": 3.8,
    "ai_depth": 2.9,
    "ai_intent": 3.5,
    "ai_audience": 7.4,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on engineering practices like Feature Flags, TDD, and refactoring within Scrum to enable smoother Sprint workflows and reduce technical debt. However, it does not directly discuss hypothesis-driven experimentation or systematic testing of ideas to validate assumptions, which is central to the Experimentation category. While Feature Flags can facilitate experimentation, their discussion here is centered on enabling flow and risk reduction rather than empirical validation. There are no direct mentions of experimentation, A/B testing, or learning from experiments. The main audience (Scrum practitioners) aligns, but the conceptual and depth scores remain low due to the absence of experimentation-specific content.",
    "reasoning_summary": "This content addresses Scrum engineering practices like Feature Flags and TDD to enable flow and reduce technical debt, but it does not discuss experimentation, hypothesis-testing, or validating assumptions. Its relevance to 'Experimentation' is low despite a good audience fit.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Backlog Refinement",
    "calculated_at": "2025-06-17T16:16:59",
    "ai_confidence": 38.33,
    "ai_mentions": 2.2,
    "ai_alignment": 3.5,
    "ai_depth": 4.2,
    "ai_intent": 4.0,
    "ai_audience": 8.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses primarily on evolving engineering practices (Feature Flags, TDD, refactoring) to improve sprint workflow and reduce technical debt. It mentions 'Unfinished Backlog Items' but does not discuss backlog refinement practices, collaboration, or prioritization processes. Main ideas are about technical enablers for shipping work, not refining backlog items. The intended audience (Scrum teams, engineers) aligns, but the core topic diverges from Backlog Refinement. No explicit alignment with the category's main themes or techniques.",
    "reasoning_summary": "While the piece references backlog items, its main focus is on engineering practices and workflow in Scrum, not on backlog refinement processes such as prioritization or collaboration. Consequently, its alignment with the 'Backlog Refinement' category is limited.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Automated Testing",
    "calculated_at": "2025-06-17T16:17:03",
    "ai_confidence": 62.32,
    "ai_mentions": 4.3,
    "ai_alignment": 7.7,
    "ai_depth": 7.2,
    "ai_intent": 6.8,
    "ai_audience": 9.1,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content explicitly mentions TDD, a core automated testing methodology, and alludes to practices (Feature Flags, CD) that often incorporate automated testing. The alignment score reflects that automated testing is integral but not the sole focus—the main thrust is evolving engineering for better Sprint workflow, with TDD as an enabling practice. The depth and intent highlight practical implications but do not go deep into frameworks/tools. The audience is technical Scrum teams. Some content covers related engineering topics, resulting in a moderate signal-to-noise ratio.",
    "reasoning_summary": "This content connects evolving engineering practices—especially TDD—to improved Scrum workflows, highlighting automated testing as a key enabler. While not exclusively about automated testing, it aligns well with the category's audience and intent by emphasizing its importance in Agile delivery.",
    "level": "Secondary"
  },
  "Application Lifecycle Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-06-17T16:16:55",
    "ai_confidence": 47.02,
    "ai_mentions": 1.4,
    "ai_alignment": 5.0,
    "ai_depth": 4.6,
    "ai_intent": 4.2,
    "ai_audience": 7.5,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content primarily discusses evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow within Scrum and minimize technical debt. While these topics are certainly relevant to software quality and agile processes, there is only indirect alignment with Application Lifecycle Management (ALM). ALM is concerned with managing the end-to-end lifecycle of applications, including governance, deployment, and retirement. The content does not address the comprehensive management of the application lifecycle; instead, it focuses on engineering tactics to enhance flow within sprints. Direct mention of ALM or its core frameworks/tools is absent. However, some overlap exists in maintainability, technical debt management, and deployment practices that are important within ALM. Audience targeting (Scrum teams, engineers) partially overlaps with ALM practitioners. Signal-to-noise ratio is high, as the content is focused, yet depth on ALM-specific practices is lacking.",
    "reasoning_summary": "This content explores engineering practices for efficient Scrum sprints, indirectly touching on lifecycle concepts like maintainability and deployment. However, it doesn’t directly discuss or frame its advice in terms of comprehensive application lifecycle management.",
    "level": "Tertiary"
  },
  "Market Share": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Market Share",
    "calculated_at": "2025-06-17T16:16:58",
    "ai_confidence": 8.89,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 0.8,
    "ai_intent": 1.1,
    "ai_audience": 3.3,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content centers exclusively on improving engineering practices for better Sprint workflow in Scrum, focusing on Feature Flags, TDD, and refactoring to reduce technical debt and enable flow. There is no direct or indirect reference to market share, competitive strategies, or related concepts. The audience (Scrum practitioners/engineers) could, in theory, overlap with those interested in market share, but the discussion is entirely about process quality, not market dynamics. No penalties were warranted, as the material is recent and does not contradict the category framing.",
    "reasoning_summary": "This content discusses Scrum engineering practices for improved Sprint workflow but contains no direct or conceptual link to market share, competitive strategy, or related themes. It is narrowly focused on development process improvement, not market positioning or growth.",
    "level": "Ignored"
  },
  "Common Goals": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Common Goals",
    "calculated_at": "2025-06-17T16:17:01",
    "ai_confidence": 32.963,
    "ai_mentions": 1.2,
    "ai_alignment": 3.8,
    "ai_depth": 3.4,
    "ai_intent": 4.9,
    "ai_audience": 7.3,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum. While these practices contribute indirectly to team effectiveness and potentially support the achievement of sprint or product goals, there is no explicit or in-depth discussion of shared objectives, strategic alignment, or the foundational principles of Common Goals. The main ideas relate more to enabling flow and reducing technical debt, not to defining or operationalising Common Goals. There is no mention of aligning strategy with execution, OKRs, or connecting individual contributions to the organisation's mission. Audience is appropriate (Scrum practitioners), but overall relevance to the Common Goals category is tangential rather than direct.",
    "reasoning_summary": "This content discusses engineering practices that improve sprint workflow in Scrum, focusing on flow and reducing technical debt. While relevant for Scrum teams, it does not directly address the concept of Common Goals or their alignment with strategy and execution.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-06-17T16:16:56",
    "ai_confidence": 91.059,
    "ai_mentions": 6.7,
    "ai_alignment": 9.4,
    "ai_depth": 8.8,
    "ai_intent": 9.3,
    "ai_audience": 8.6,
    "ai_signal": 9.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly addresses the practical application of engineering practices (Feature Flags, TDD, refactoring) in Scrum with a concrete focus on enabling workflow and reducing technical debt—both key aspects of Pragmatic Thinking. It discusses how these tactics provide real-world solutions to incomplete work and workflow bottlenecks. The example-driven explanation (differences between 'Unfinished Backlog Items' and 'Undone Work', the necessity of CD for true flow) further anchors the content in lived experience. The audience is clearly Scrum or Agile practitioners looking for actionable insight. Although the term 'pragmatic thinking' is not explicitly stated, the piece embodies its principles throughout.",
    "reasoning_summary": "This content aligns strongly with Pragmatic Thinking by applying real-world Agile engineering strategies to improve Sprint workflow. It is solution-focused, experience-based, and targets practical challenges faced by Scrum teams, ensuring high relevance to the category.",
    "level": "Primary"
  },
  "Technical Mastery": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Technical Mastery",
    "calculated_at": "2025-06-17T16:16:57",
    "ai_confidence": 93.73,
    "ai_mentions": 8.5,
    "ai_alignment": 9.8,
    "ai_depth": 9.4,
    "ai_intent": 9.2,
    "ai_audience": 9.5,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content addresses evolving engineering practices—Feature Flags, TDD, refactoring—and their impact on Sprint workflows in Scrum, directly aligning with Technical Mastery. It explicitly discusses technical excellence, code quality, maintainability, the management of technical debt, and engineering principles central to software craftsmanship. Although it contextualizes these within Scrum, the discussion maintains a strong technical perspective rather than a process or project management focus. The audience is clearly technical, targeting Scrum team engineers, and the writing maintains a high signal-to-noise ratio without tangents or filler. No indications of outdated or obsolete practices, and no penalties were necessary.",
    "reasoning_summary": "This content strongly fits Technical Mastery—explicitly focusing on engineering practices like Feature Flags, TDD, and refactoring, with a thorough, purposeful technical discussion aimed at practitioners in Scrum teams. It emphasizes software craftsmanship and technical excellence throughout.",
    "level": "Primary"
  },
  "Working Agreements": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Working Agreements",
    "calculated_at": "2025-06-17T16:17:01",
    "ai_confidence": 14.75,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.7,
    "ai_intent": 1.3,
    "ai_audience": 5.9,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum. There is no explicit mention or discussion of working agreements, team norms, or principles governing team collaboration, which is central to the category. While the practices discussed may influence how a team collaborates, their framing is strictly about technical enablement and workflow, not the co-created norms or agreements a team makes. Audience targeting overlaps (Agile practitioners), but most content is tangential to working agreements.",
    "reasoning_summary": "This content is centered on technical practices for smoother Scrum Sprints, with no direct or meaningful discussion of team working agreements, norms, or collaboration principles. Its relevance to the 'Working Agreements' category is very low.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Product Management",
    "calculated_at": "2025-06-17T16:17:04",
    "ai_confidence": 53.05,
    "ai_mentions": 1.1,
    "ai_alignment": 5.7,
    "ai_depth": 5.2,
    "ai_intent": 6.0,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content centers on engineering practices—Feature Flags, TDD, refactoring—that improve Sprint workflow in Scrum. While closely related to Agile and Scrum, it emphasizes technical enablers and team workflow, rather than directly discussing Agile Product Management, such as backlog prioritization, Product Owner roles, or customer value alignment. The audience is likely Scrum practitioners or technical leaders, not product managers. There’s some indirect overlap, since enabling smoother flow supports product value delivery, but the explicit focus is process improvement, not product management per se. The category is only referenced implicitly; direct conceptual and topical alignment is moderate.",
    "reasoning_summary": "The content aligns with Agile and Scrum workflows but mainly addresses technical practices, not Agile Product Management’s focus on backlog strategy, product value, or Product Owner roles. Its relevance is moderate and mostly indirect.",
    "level": "Tertiary"
  },
  "Philosophy": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Philosophy",
    "calculated_at": "2025-06-17T16:17:00",
    "ai_confidence": 28.85,
    "ai_mentions": 0.8,
    "ai_alignment": 3.3,
    "ai_depth": 2.9,
    "ai_intent": 3.0,
    "ai_audience": 6.1,
    "ai_signal": 6.75,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content centers on engineering practices (Feature Flags, TDD, refactoring) as enablers of smoother Scrum workflows and reducing technical debt. While it mentions the importance behind these methods, it focuses primarily on the 'how'—specific tools, techniques, and their impact on delivery—rather than discussing the philosophical underpinnings (the 'why'). The audience (Scrum practitioners/teams) aligns somewhat, but depth and conceptual alignment to philosophy remain limited. No significant penalties apply, as there's no outdated or contradictory tone.",
    "reasoning_summary": "The content emphasizes specific engineering practices to boost Sprint flow in Scrum, focusing on applied techniques over foundational beliefs. It lacks substantial discussion of philosophical principles, aligning only marginally with the Philosophy category.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-06-17T16:17:03",
    "ai_confidence": 24.9,
    "ai_mentions": 0.3,
    "ai_alignment": 2.4,
    "ai_depth": 2.6,
    "ai_intent": 2.2,
    "ai_audience": 8.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content discusses evolving engineering practices (Feature Flags, TDD, refactoring) within the context of improving Scrum workflow and reducing technical debt. While Feature Flags and TDD can support experimentation, the text never articulates hypotheses, experiments, or validated learning. There are no explicit references to hypothesis-driven development, and the focus is on enabling flow and technical robustness rather than experimentation or metrics. The main audience (Scrum teams/engineers) aligns with those adopting hypothesis-driven development, and the discussion stays on topic, but conceptual alignment and depth around H.D.D. are weak.",
    "reasoning_summary": "The content focuses on engineering practices to improve Sprint workflow in Scrum but doesn't address hypothesis formulation, experimentation, or validated learning. It only tangentially connects to Hypothesis Driven Development, resulting in a low confidence score for this category.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Tool",
    "calculated_at": "2025-06-17T16:16:59",
    "ai_confidence": 48.49,
    "ai_mentions": 4.7,
    "ai_alignment": 6.2,
    "ai_depth": 5.8,
    "ai_intent": 5.5,
    "ai_audience": 7.4,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content references mechanisms like Feature Flags and TDD as enablers of Agile flow and discusses their application in Scrum. However, the focus is on evolving engineering practices conceptually, not deep tool-specific discussion, implementation, or features. No particular software or tooling platform is examined in detail, and practices like TDD and refactoring can be both techniques and tools. While practical use is mentioned, the emphasis remains on high-level enablement, not tool overviews or comparative analysis. No evidence of outdated or critical tone was found.",
    "reasoning_summary": "The content discusses how practices such as Feature Flags, TDD, and refactoring support Scrum and flow, referencing tools in a broad context. However, it lacks detailed discussion of specific tools, features, or integrations, making the fit for the 'Tool' category only partial.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Frameworks",
    "calculated_at": "2025-06-17T16:17:07",
    "ai_confidence": 56.6,
    "ai_mentions": 5.8,
    "ai_alignment": 6.9,
    "ai_depth": 5.7,
    "ai_intent": 7.4,
    "ai_audience": 6.0,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content makes explicit mention of Scrum, an Agile framework, and discusses the need for mature engineering practices to optimize Sprint workflows. However, the main focus is on technical practices (Feature Flags, TDD, refactoring, Continuous Delivery) rather than a substantial examination of Scrum or comparison with other frameworks. The alignment and depth scores reflect this: the discussion connects engineering advances to Scrum, but it does not deeply analyze Agile frameworks per se. The intended audience is practitioners within Scrum teams, slightly aligned but not exclusively targeting those seeking framework overviews or comparisons. There are no penalties applied as the content is current and its tone is constructive.",
    "reasoning_summary": "The content references Scrum and links engineering practices to Agile workflows, but its primary focus is technical enablers rather than in-depth analysis or comparison of Agile frameworks. Alignment exists, but overall fit with the Agile Frameworks category is moderate.",
    "level": "Tertiary"
  },
  "Azure Boards": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Azure Boards",
    "calculated_at": "2025-06-17T16:17:01",
    "ai_confidence": 17.25,
    "ai_mentions": 0.3,
    "ai_alignment": 1.7,
    "ai_depth": 1.8,
    "ai_intent": 1.8,
    "ai_audience": 5.3,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on evolving general engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflows in Scrum. There is no mention of Azure Boards, nor of its functionalities or integration. While the topic is Scrum-aligned and relevant to Agile teams, it does not engage with project tracking, work item management, or any features specific to Azure Boards. The audience (Scrum/agile practitioners) does partially overlap, and the content is technically focused without significant off-topic content, yielding a modest signal-to-noise score. Overall, little direct or conceptual fit for the Azure Boards category.",
    "reasoning_summary": "This content discusses evolving engineering practices for Scrum teams but does not mention Azure Boards or discuss its specific Agile management features, making it only tangentially relevant at best.",
    "level": "Ignored"
  },
  "Software Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Software Development",
    "calculated_at": "2025-06-17T16:17:05",
    "ai_confidence": 92.61,
    "ai_mentions": 8.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.2,
    "ai_intent": 9.5,
    "ai_audience": 9.3,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content explicitly discusses key software development practices—Feature Flags, TDD, refactoring—as direct enablers of smoother Scrum Sprint workflows. It references Scrum, technical debt, code health, and Continuous Delivery. The alignment is strong, as these are core topics within the Software Development category. The discussion is substantial, providing a clear context for when and why to use each practice, and directly targets technical practitioners seeking process improvements. No outdated or contradictory elements are present, and the signal is focused without off-topic diversions.",
    "reasoning_summary": "This content is highly relevant to Software Development, focusing on evolving engineering practices like TDD, Feature Flags, and refactoring within Scrum Sprints. It thoroughly aligns with the category’s themes and is tailored to practitioners improving software workflow.",
    "level": "Primary"
  },
  "Social Technologies": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Social Technologies",
    "calculated_at": "2025-06-17T16:17:07",
    "ai_confidence": 33.85,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.1,
    "ai_intent": 3.9,
    "ai_audience": 9.1,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content primarily discusses technical engineering practices (Feature Flags, TDD, refactoring) as enablers for improving Sprint workflow and managing technical debt in Scrum. While the context is an Agile framework, the focus is on workflow, code quality, and technical enablement—there is minimal direct mention or exploration of social technologies per the definition. The main ideas only tangentially relate to collaboration or organisational culture (self-organisation, collective intelligence, or emergent problem-solving); the discussion does not deeply engage with social frameworks, value delivery optimisation by social means, or group dynamics. The audience is aligned (Scrum/Agile practitioners), and the content is focused without noise, but lacks significant engagement with the core social technology themes.",
    "reasoning_summary": "While framed within Scrum and mentioning team workflow, the content concentrates on technical practices (Feature Flags, TDD, refactoring) to improve Sprint delivery, not on collaboration, organisational culture, or decision-making frameworks central to Social Technologies. Alignment is peripheral.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Discovery",
    "calculated_at": "2025-06-17T16:17:03",
    "ai_confidence": 19.6,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.1,
    "ai_intent": 1.9,
    "ai_audience": 7.2,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content centers on engineering practices such as Feature Flags, TDD, and refactoring, emphasizing workflow, technical debt, and delivery in Scrum. There are no mentions or discussion of identifying user needs, ideation, or product feature definition. No product discovery methods (e.g., user research, MVPs, feedback gathering) appear. The focus is on technical execution and workflow, not on the customer or market validation aspects, so alignment and depth are low. The audience overlaps with product teams, but the topic is narrowly technical.",
    "reasoning_summary": "This content primarily discusses engineering tactics for Scrum workflow and technical debt, not about understanding customer needs or defining product features. It barely overlaps with product discovery goals, making it weakly relevant to the category.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Test First Development",
    "calculated_at": "2025-06-17T16:17:06",
    "ai_confidence": 70.51,
    "ai_mentions": 3.7,
    "ai_alignment": 7.8,
    "ai_depth": 7.4,
    "ai_intent": 6.9,
    "ai_audience": 8.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "The content explicitly mentions TDD (Test-Driven Development), a canonical Test First Development practice, describing it as essential for code quality and supporting flow in Scrum. It aligns conceptually by supporting test-first principles (proving code works before changes) and targeting practitioners interested in workflow and quality. However, the main focus is broader—discussing the evolution of various engineering practices (Feature Flags, refactoring, CD) to improve sprint workflow, with only one part devoted to TDD/test-first. Depth covers the rationale and impact of TDD but lacks further exploration of other Test First practices (ATDD, manual success criteria, or collaborative aspects). Audience targeting is strong, aimed at technical Scrum practitioners. The content is relevant but shares focus with other practices.",
    "reasoning_summary": "The content ties TDD—an iconic Test First practice—directly to improved sprint flow in Scrum, supporting alignment. However, since it shares focus with Feature Flags and refactoring, it provides good but not exclusive depth or direct discussion of Test First Development.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Deployment Frequency",
    "calculated_at": "2025-06-17T16:17:08",
    "ai_confidence": 49.95,
    "ai_mentions": 2.2,
    "ai_alignment": 6.5,
    "ai_depth": 5.8,
    "ai_intent": 5.6,
    "ai_audience": 6.3,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 50.0,
    "reasoning": "The content focuses on evolving engineering practices (feature flags, TDD, refactoring) to improve Sprint flow in Scrum. There are light allusions to practices that facilitate higher deployment frequency, such as safe releases and Continuous Delivery (CD). However, deployment frequency is not explicitly mentioned or deeply discussed. Instead, the emphasis is on improving workflow and mitigating technical debt, with CD framed as an essential ingredient for 'flow.' While this lightly aligns with deploying more frequently, there's insufficient direct or thorough exploration of deployment intervals, metrics, or optimizations in this regard. No outdated or contradictory perspectives are present, so no penalties applied. Overall, the fit to 'Deployment Frequency' is adjacent but not central.",
    "reasoning_summary": "This content aligns tangentially with Deployment Frequency by discussing practices that can enable more frequent releases, but its primary focus is on improving Sprint workflow and managing technical debt, with only brief reference to Continuous Delivery.",
    "level": "Tertiary"
  },
  "Customer Retention": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Customer Retention",
    "calculated_at": "2025-06-17T16:17:06",
    "ai_confidence": 14.75,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 1.5,
    "ai_intent": 1.2,
    "ai_audience": 6.2,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses exclusively on engineering practices (Feature Flags, TDD, refactoring, and Continuous Delivery) to improve Scrum Sprint workflow and reduce technical debt. There is no mention of customer retention, customer satisfaction, engagement strategies, or feedback loops. While improved engineering and delivery can have an indirect impact on customer value, the core topic here is internal development process quality, not strategies for retaining customers. The target audience (Scrum teams, engineers) is aligned with practitioners who might effect customer retention as a second-order effect, but this is not made explicit or discussed. Discussion is not deep on retention; it's focused on enabling flow in Sprints.",
    "reasoning_summary": "This content is about improving Sprint workflows through engineering practices within Scrum. It does not directly address customer retention or related strategies, focusing entirely on internal process improvements rather than customer engagement or value delivery.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Strategic Goals",
    "calculated_at": "2025-06-17T16:17:07",
    "ai_confidence": 23.55,
    "ai_mentions": 0.8,
    "ai_alignment": 2.2,
    "ai_depth": 2.0,
    "ai_intent": 2.3,
    "ai_audience": 7.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses primarily on operational engineering practices (Feature Flags, TDD, refactoring) to enhance Sprint workflow, with only indirect connections to strategic goals like reducing technical debt or enabling flow. It does not explicitly discuss long-term objectives, business agility at a strategic level, or align with the broader definition of Strategic Goals. Audience and signal-score are relatively high since it targets Scrum practitioners, but the rest of the dimensions remain low due to limited conceptual and explicit alignment with strategic intent.",
    "reasoning_summary": "This content is tactical, detailing engineering practices to improve Scrum Sprint workflow. It lacks explicit or substantive discussion about long-term strategic objectives, business agility, or alignment with Agile-driven strategic goals, making it only marginally relevant to the category.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Agile Strategy",
    "calculated_at": "2025-06-17T16:17:10",
    "ai_confidence": 39.1,
    "ai_mentions": 1.2,
    "ai_alignment": 3.6,
    "ai_depth": 3.7,
    "ai_intent": 3.4,
    "ai_audience": 4.3,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow in Scrum. While the practices discussed are relevant to Agile teams, the emphasis is on technical enablement, not organizational strategy or aligning Agile principles with business vision. There is some mention of improving flow and reducing technical debt, but discussions around leadership, scaling Agile, or integration into strategic planning are missing. The main audience is practitioners aiming to enhance technical practices, not strategists or executives. No penalties apply, as the content is current and not disparaging.",
    "reasoning_summary": "This content is centered on technical practices in Scrum teams, focusing primarily on engineering effectiveness rather than strategic alignment or broader Agile Strategy concerns. While it relates to Agile delivery, it does not significantly address organizational strategy or vision.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Lean Startup",
    "calculated_at": "2025-06-17T16:17:12",
    "ai_confidence": 6.94,
    "ai_mentions": 0.0,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 1.5,
    "ai_audience": 1.5,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on Scrum workflow and engineering practices like TDD, Feature Flags, and refactoring to optimize flow within sprints. There are no direct mentions of Lean Startup, nor of any Lean principles, MVPs, validated learning, build-measure-learn, or rapid experimentation. While techniques like Feature Flags might be leveraged in a Lean Startup context, the article addresses continuous delivery and technical debt within a Scrum framework, not for hypothesis-driven product validation, customer development, or iterative market learning. The intent, audience, and relevance align to Scrum practitioners, not Lean Startup founders or methodology adopters.",
    "reasoning_summary": "This content addresses Scrum workflow improvements and engineering practices, not Lean Startup principles. There’s no discussion of MVPs, iterative validation, or entrepreneurial learning cycles; therefore, alignment with the Lean Startup category is minimal.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Organisational Change",
    "calculated_at": "2025-06-17T16:17:08",
    "ai_confidence": 29.134,
    "ai_mentions": 1.7,
    "ai_alignment": 3.0,
    "ai_depth": 2.5,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content centers on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Sprint workflow within Scrum teams. While these are valuable in software development, the discussion lacks direct reference to organisational change frameworks, change management principles, leadership, or the role of organisational structure. There is no mention of Agile transformation at the organisational level, nor reference to broader change strategies or overcoming resistance in teams. The focus remains on technical practices rather than change processes or organisational adaptation.",
    "reasoning_summary": "The content primarily focuses on technical engineering practices for Scrum teams and does not address organisational change strategies, frameworks, or change management principles. Its alignment to the category is minimal and incidental rather than intentional.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:01:43",
    "ai_confidence": 41.61,
    "ai_mentions": 2.2,
    "ai_alignment": 4.3,
    "ai_depth": 4.7,
    "ai_intent": 3.9,
    "ai_audience": 7.2,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content centers on evolving engineering practices—Feature Flags, TDD, and refactoring—in the context of improving Sprint workflow within Scrum. While highly relevant to technical practitioners, the article does not reference the Product Developer role directly or discuss its accountability. The focus is on engineering excellence and flow rather than defining or exploring Product Developer responsibilities, collective accountability, or cross-functional aspects as required by the classification. The audience, intent, and technical depth are appropriate, but the conceptual alignment and explicit mention of Product Developer themes are lacking.",
    "reasoning_summary": "This content discusses valuable engineering practices for Scrum teams but doesn’t explicitly link them to the Product Developer role or accountability. Its focus is best aligned with technical contributors generally, not with defining or deepening understanding of Product Developers as per the strict category definition.",
    "level": "Tertiary"
  },
  "Collective Intelligence": {
    "resourceId": "jLgGAlKQ7-O",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:01:32",
    "ai_confidence": 8.41,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 1.7,
    "ai_intent": 1.8,
    "ai_audience": 1.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on evolving engineering practices (Feature Flags, TDD, refactoring) to improve Scrum workflows and address technical debt. While it highlights modern process optimization and team delivery, there are no explicit or implicit references to human-AI collaboration, collective problem-solving with AI, or enhanced cognitive outcomes from human-AI partnership. It also lacks discussion of distributed cognition, socio-technical systems, human agency in AI contexts, or any of the core genre topics outlined for 'Collective Intelligence.' The main ideas, audience, and intent remain technical and practice-oriented, centered on human team practices in engineering and delivery, not on human-AI teaming. No penalties were applied as the content is current and does not undermine the category, but it does not fit the classification meaning.",
    "reasoning_summary": "The content addresses engineering practices for Scrum teams but lacks any discussion of human-AI collaboration or collective intelligence concepts. Its technical focus is not aligned with the defined category.",
    "level": "Ignored"
  }
}