{
  "Large Scale Agility": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Large Scale Agility",
    "calculated_at": "2025-05-16T14:36:51",
    "ai_confidence": 36.12,
    "ai_mentions": 0.9,
    "ai_alignment": 3.9,
    "ai_depth": 4.2,
    "ai_intent": 3.3,
    "ai_audience": 4.1,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on rethinking velocity for Agile teams, presenting metrics tied to continuous delivery within a single team context (Azure DevOps). It does not reference scaling, enterprise, or cross-team aspects, nor does it mention frameworks for large-scale agility. There's low conceptual alignment, limited depth relating to large-scale practices, and its main audience appears to be engineering teams or practitioners rather than enterprise strategists. There are no outdated or satirical references, so no penalties are applied.",
    "reasoning_summary": "This content is about team-level Agile metrics and delivery practices, not enterprise scaling or organisation-wide agility. It lacks references to large-scale frameworks or challenges, so is only weakly aligned to the Large Scale Agility category.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Tenet",
    "calculated_at": "2025-08-07T06:10:14",
    "ai_confidence": 82.28,
    "ai_mentions": 4.7,
    "ai_alignment": 9.2,
    "ai_depth": 9.5,
    "ai_intent": 9.2,
    "ai_audience": 8.4,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content strongly emphasizes specific actionable principles guiding engineering behavior: redefining velocity by flow-oriented, evidence-based metrics instead of abstract story points. It details concrete practices (‘time to build/test/deploy/learn’), matches core DevOps/Agile tenets (flow, feedback, continuous improvement), and targets practitioners. While it doesn’t literally label these as 'tenets', the explicit focus on prescriptive, guiding rules and linking them to desired behaviors and continuous delivery confirms substantial conceptual and practical fit. The direct category term is not used, so 'mentions' is only moderate.",
    "reasoning_summary": "This content advocates specific actionable rules for measuring software delivery performance (“tenets” of DevOps/Agile flow and feedback). It discusses concrete prescriptive metrics, matching the category’s definition, though without explicitly naming them tenets.",
    "level": "Primary"
  },
  "Collaboration Tools": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 16.5,
    "ai_mentions": 1.7,
    "ai_alignment": 2.6,
    "ai_depth": 2.4,
    "ai_intent": 1.9,
    "ai_audience": 4.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on re-defining velocity with metrics like build, test, deploy, and feedback time, specifically referencing Azure DevOps. It discusses internal delivery metrics but does not discuss collaboration tools, their features, their integration into Agile, or best practices for tool use. There are no direct mentions of collaboration platforms or coordinated team work beyond engineering flow metrics. The audience (Agile practitioners/engineering teams) loosely aligns, but the key focus is on process metrics, not tools that enhance team communication or coordination.",
    "reasoning_summary": "This content centers on software delivery speed and measurement metrics, not on platforms or tools that foster collaboration in Agile teams. There's minimal connection to collaboration tools or their impact, resulting in very low confidence.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Revenue per Employee",
    "calculated_at": "2025-08-07T07:06:11",
    "ai_confidence": 11.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.2,
    "ai_intent": 1.3,
    "ai_audience": 2.0,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content is about delivery velocity in Agile/DevOps teams and how to measure it accurately using internal engineering metrics (time to build, test, deploy, learn). There is no mention of financial metrics, workforce efficiency, or revenue per employee. While it targets technical/engineering audiences, the content has nearly zero conceptual overlap with using Revenue per Employee as a metric. There are no direct mentions or in-depth discussions on financial observability or organisational throughput from a revenue perspective.",
    "reasoning_summary": "Content is focused on engineering velocity metrics, not financial observability or Revenue per Employee. No direct or implied alignment with the category’s intent or themes. Fit is poor and at best tangential.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Continuous Delivery",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 94.55,
    "ai_mentions": 9.4,
    "ai_alignment": 9.8,
    "ai_depth": 9.7,
    "ai_intent": 9.6,
    "ai_audience": 9.1,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly references 'continuous delivery' and clarifies misconceptions around velocity in software teams. It highlights key continuous delivery metrics: build, test, deploy, and feedback loops. The main ideas match the core principles of Continuous Delivery, explaining why these metrics matter, their role in short reliable cycles, and their impact on software quality. The discussion is substantive (not superficial) and targets technical practitioners, specifically those seeking to improve delivery throughput. There is minimal off-topic content. No outdated references or negative framing were found.",
    "reasoning_summary": "This content is highly relevant to Continuous Delivery, focusing on essential metrics that reflect its core principles. It offers clear, in-depth discussion aimed at practitioners, with little off-topic material, resulting in a strong confidence score.",
    "level": "Primary"
  },
  "Scaling": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Scaling",
    "calculated_at": "2025-08-07T07:06:15",
    "ai_confidence": 21.05,
    "ai_mentions": 0.4,
    "ai_alignment": 2.1,
    "ai_depth": 2.5,
    "ai_intent": 1.7,
    "ai_audience": 7.7,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on velocity metrics in an Agile/DevOps context, specifically at a single-team level (Azure DevOps team). There are no direct mentions of scaling frameworks or cross-team coordination. The main ideas are about optimizing engineering flow, which can be tangentially relevant to scaling but do not explore scaling methodologies, enterprise alignment, or multi-team challenges. Audience is technical (practitioners), which can align with the scaling category, but the actual themes do not address scaling per the definition.",
    "reasoning_summary": "Content discusses team-level flow and velocity metrics, not scaling methodologies or enterprise alignment. Intent and depth are team-focused, offering minimal fit with Scaling. Only minor, tangential relevance to the scaling category.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "14E6bk6Lmo4",
    "category": "System Configuration",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 21.15,
    "ai_mentions": 0.5,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.3,
    "ai_audience": 6.3,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on measuring software delivery velocity by tracking build, test, deploy, and feedback times. While touching on engineering workflows and automation, it does not discuss system configuration tools, methods, or best practices, nor does it explore integration, security, or maintenance. Direct mentions of system configuration are absent, alignment is low since the main topic is software delivery velocity, and depth is shallow regarding system configuration. Intent and audience partially align due to a technical target audience, but the main purpose is unrelated to system setup or ongoing system configuration practices.",
    "reasoning_summary": "This content mainly discusses agile delivery velocity and metrics, not system configuration. It only loosely relates to technical audiences or automation, so confidence in this category is low.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Definition of Done",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 25.62,
    "ai_mentions": 0.5,
    "ai_alignment": 2.6,
    "ai_depth": 2.3,
    "ai_intent": 3.2,
    "ai_audience": 8.1,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "This content focuses entirely on defining and exploring team velocity—particularly how it relates to delivery speed via build, test, deploy, and feedback metrics. There is no direct or indirect reference to the Definition of Done (DoD), nor any discussion of DoD criteria, role, or practices. The subject and intent do not align: the targeted audience (Agile/DevOps teams) overlaps, but the topic (velocity measurement) is distinct. Minor relevance exists only because both relate to Agile delivery practices, but the content does not address what constitutes work as 'done' or DoD compliance.",
    "reasoning_summary": "This piece discusses team velocity and delivery metrics, not the Definition of Done. While aimed at a similar Agile/DevOps audience, it's conceptually and topically misaligned—the DoD isn't mentioned or explored, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Strategy",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 52.15,
    "ai_mentions": 1.2,
    "ai_alignment": 5.6,
    "ai_depth": 4.9,
    "ai_intent": 5.8,
    "ai_audience": 7.7,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "The content redefines velocity in software development, emphasizing value delivery speed using actionable metrics (build, test, deploy, learn). However, it does not explicitly discuss high-level strategy or strategic alignment, instead focusing on metrics and operational flow within engineering teams. It is valuable for practitioners and process improvement, but lacks depth in connecting these practices to organizational strategy, leadership, or long-term planning. No penalties apply since the content is current, constructive, and not critical toward the classification.",
    "reasoning_summary": "This content reframes velocity metrics in software teams, highlighting meaningful measures of delivery. While insightful for process improvement, it primarily addresses operational practice and lacks a strong strategic orientation, aligning only partially with the Strategy category.",
    "level": "Tertiary"
  },
  "Customer Focus": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Customer Focus",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 63.25,
    "ai_mentions": 1.8,
    "ai_alignment": 6.6,
    "ai_depth": 5.7,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content never explicitly references 'Customer Focus' or its terminology, resulting in a low direct mentions score. However, it does stress turning ideas into value and closing feedback loops via 'Time to Learn', which touches on using user feedback to inform engineering work—an indirect customer outcome measure. Still, the primary emphasis is on engineering speed and controllable metrics, not on defining, measuring, or basing decisions on actual customer outcomes per se. There is some conceptual and intent alignment (particularly through feedback loops), but depth is limited, with most discussion centering on internal process optimization and delivery speed. The audience is likely engineers or delivery leads, and the content is mostly on-topic.",
    "reasoning_summary": "While this content addresses agile velocity and hints at incorporating feedback, its main focus is engineering delivery speed, not deep customer outcomes. It aligns partially with Customer Focus but lacks direct depth or emphasis on measuring and maximizing customer value.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Technical Debt",
    "calculated_at": "2025-05-16T14:36:54",
    "ai_confidence": 23.7,
    "ai_mentions": 0.8,
    "ai_alignment": 2.9,
    "ai_depth": 2.4,
    "ai_intent": 2.5,
    "ai_audience": 6.0,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content discusses velocity as a measure of software delivery, focusing on build, test, deploy, and feedback times. It does not mention technical debt directly or conceptually align with managing or reducing suboptimal code/design. The discussion is about delivery metrics, not long-term maintainability, technical debt strategies, or codebase health. The audience is technical and the content is relevant for practitioners, just not to technical debt management.",
    "reasoning_summary": "This content centers on measuring team velocity and delivery flow but does not address technical debt directly or conceptually. While relevant for technical teams, its focus isn't on managing or discussing technical debt, resulting in a low confidence for this category fit.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agentic Agility",
    "calculated_at": "2025-08-07T07:06:15",
    "ai_confidence": 49.25,
    "ai_mentions": 0.8,
    "ai_alignment": 6.3,
    "ai_depth": 5.9,
    "ai_intent": 6.7,
    "ai_audience": 6.4,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content does not explicitly mention agency or agentic agility but emphasizes aspects of team control, autonomy, and measuring what is within engineering's scope ('entirely within engineering’s control'). The thematic focus is on intentional delivery—aligning moderately with the concept of agentic agility (autonomy, adaptive cycles, delivery focus)—but it lacks direct engagement with broader agency or double-loop learning themes. The approach connects with team autonomy, but there is little discussion of self-management, accountability beyond delivery, or intentionality in a larger socio-technical context. Thus, the fit is partial, mainly by virtue of stressing that teams should measure what they control, but not exploring agency in depth.",
    "reasoning_summary": "Content partially fits by stressing team control and autonomy in delivery metrics, but lacks explicit discussion of agency, agentic agility, or adaptive action. Main focus is delivery improvement, not the broader concept of agency in Agile contexts.",
    "level": "Tertiary"
  },
  "Product Backlog": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Backlog",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 14.47,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.3,
    "ai_intent": 1.6,
    "ai_audience": 6.5,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses velocity and its measurement using engineering-centric metrics (build, test, deploy, feedback), with no explicit reference to the Product Backlog or its management. There is minimal overlap regarding Agile delivery practices, but the backlog itself, prioritization, refinement, or user stories are not discussed. The intended audience (engineering teams) aligns only partially with typical Product Backlog stakeholders, and relevant conceptual overlap is weak and superficial.",
    "reasoning_summary": "This content is focused on measuring velocity through engineering metrics, not Product Backlog management. It has only a peripheral connection to Agile delivery and does not address backlog concepts, practices, or roles—making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Personal",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 18.44,
    "ai_mentions": 0.4,
    "ai_alignment": 2.15,
    "ai_depth": 2.35,
    "ai_intent": 2.1,
    "ai_audience": 4.05,
    "ai_signal": 2.88,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content analyzes how velocity should be measured in Agile/DevOps environments, referencing the practices of the Azure DevOps team and emphasizing practical delivery metrics. However, it lacks any personal anecdotes or subjective reflections. There are no individual experiences, personal interpretations, or unique perspectives—it is structured as a technical clarification rather than a personal reflection. The audience appears to be technical practitioners, not individuals seeking personal stories. Direct mention of personal context is absent, so both mentions and alignment are low. No penalty is necessary, but confidence in the Personal category is very low.",
    "reasoning_summary": "This content offers technical advice on measuring velocity, with no personal reflection or anecdote. It's informative for practitioners but doesn't fit the Personal category, as it lacks individual experiences or subjective insights.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Method",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 86.8,
    "ai_mentions": 7.6,
    "ai_alignment": 9.2,
    "ai_depth": 8.9,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content directly discusses velocity not as a static metric but as a methodical, measurable process involving build, test, deploy, and learn loops—all classic method elements in Agile/DevOps. Metrics such as 'Time to Build' and 'Time to Deploy' reflect a procedural, step-by-step approach. The alignment is strong, as the focus is on actionable methods for delivering value—not just abstract concepts. While the exact term 'method' isn't used repeatedly, the framing is methodological, and the depth of advice pushes beyond surface-level explanation. The intent is prescriptive for practitioners. No penalties are applied, as there's no outdated information or contradictory tone.",
    "reasoning_summary": "This content clearly describes a procedural method for tracking delivery in Agile/DevOps teams, focusing on measurable steps (build, test, deploy, learn). Its depth, alignment, and actionable detail make it an excellent fit for the 'Method' category.",
    "level": "Primary"
  },
  "Enterprise Agility": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 36.9,
    "ai_mentions": 1.3,
    "ai_alignment": 3.1,
    "ai_depth": 3.2,
    "ai_intent": 2.8,
    "ai_audience": 3.7,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on how velocity should be measured in software teams, emphasizing value delivery over story points, and presents four engineering-focused metrics from the Azure DevOps team. It lacks explicit references to enterprise-wide agility, organisational structures or culture, and scaling frameworks. Instead, the discussion is limited to team-level engineering practices with no organisational context, corresponding only partially to the 'metrics and KPIs' key topic but strictly within a single team’s boundaries. The intended audience appears to be technical practitioners rather than strategists or executives. No penalties are applied, as the content is not outdated or contrary, but its fit is weak and primarily tangential to Enterprise Agility.",
    "reasoning_summary": "This content is narrowly focused on engineering team velocity metrics without broader organisational or enterprise context, making it only tangentially relevant to Enterprise Agility. Its main ideas address team practices, not enterprise-level culture or transformation.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-08-07T07:06:14",
    "ai_confidence": 27.55,
    "ai_mentions": 0.4,
    "ai_alignment": 3.2,
    "ai_depth": 2.5,
    "ai_intent": 2.8,
    "ai_audience": 7.2,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content centers on velocity metrics related to delivery speed (build, test, deploy, learn) but never mentions hypotheses, experiments, validated learning, or empirical testing. 'Time to Learn' slightly hints at using feedback, though not in a hypothesis-driven context. There's no formulation or testing of hypotheses, no discussion of A/B testing, nor any explicit connection to the principles outlined in the category. While it mentions 'user feedback informs the next decision', this is not developed into an experimental framework or validated learning cycle. The audience aligns (engineering/product teams), and signal-to-noise is reasonably high since the content is focused, but overall fit to Hypothesis Driven Development is weak.",
    "reasoning_summary": "Content emphasizes delivery speed and feedback without addressing hypothesis formulation or experimentation. Slight alignment via 'Time to Learn,' but does not meet Hypothesis Driven Development criteria. Fit is low and mostly incidental.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Discipline",
    "calculated_at": "2025-05-16T14:36:50",
    "ai_confidence": 43.12,
    "ai_mentions": 1.2,
    "ai_alignment": 5.4,
    "ai_depth": 4.9,
    "ai_intent": 4.1,
    "ai_audience": 5.6,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content centers on distinguishing real velocity from simple metrics like story points and introduces four engineering-focused metrics associated with DevOps practice. However, it focuses on tactical measurement rather than on systemic principles, governance, or the maturation of the discipline itself. There's some conceptual overlap with discipline due to its discussion of feedback loops and improvement, but it lacks depth in discussing shared standards, system evolution, or governance. The audience is technical practitioners seeking to measure delivery performance, not those studying the discipline's codified knowledge or governance. No penalties were applied, as the tone and content are current and palatable.",
    "reasoning_summary": "While the piece offers meaningful insights on delivery metrics, it doesn't deeply explore the principles, evolution, or systemic practices that define a discipline. Its focus is practical and tactical, making it only moderately aligned with the 'Discipline' category.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-16T14:36:51",
    "ai_confidence": 42.38,
    "ai_mentions": 2.7,
    "ai_alignment": 4.2,
    "ai_depth": 4.4,
    "ai_intent": 5.8,
    "ai_audience": 6.2,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content critiques a common misconception about velocity in Agile, emphasizing metrics like build, test, deploy, and feedback speeds. However, it does not discuss Agile planning tools, backlog management, or planning tool methodologies. The focus is on delivery and engineering metrics, not tools or processes that facilitate Agile planning, resulting in low alignment and depth. No penalties as content is up-to-date and constructive.",
    "reasoning_summary": "Although the content discusses Agile velocity and delivery metrics, it does not address Agile Planning Tools, their use, or related methodologies. Its focus on process metrics places it outside the intended scope of this category.",
    "level": "Tertiary"
  },
  "Coaching": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Coaching",
    "calculated_at": "2025-05-16T14:36:51",
    "ai_confidence": 14.75,
    "ai_mentions": 0.5,
    "ai_alignment": 2.4,
    "ai_depth": 2.1,
    "ai_intent": 2.0,
    "ai_audience": 3.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content discusses how to more accurately measure velocity in Agile teams using process metrics instead of story points. There are no direct mentions of coaching or its principles. The focus is on metrics and process, not on facilitating team development, guidance, or fostering growth. Audience is practitioners, but the discussion stays technical, not reflective or supportive. No penalties are necessary as the content is not outdated and does not undermine coaching.",
    "reasoning_summary": "This piece centers on Agile team metrics, not coaching. While informative for practitioners, it neither references nor applies coaching principles or techniques, thus fitting the category only weakly.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-16T14:36:51",
    "ai_confidence": 31.03,
    "ai_mentions": 0.2,
    "ai_alignment": 3.8,
    "ai_depth": 2.9,
    "ai_intent": 4.2,
    "ai_audience": 5.7,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content focuses on redefining 'velocity' in software delivery by emphasizing practical metrics such as build, test, deploy, and feedback cycles, naming Azure DevOps as a context. While these are relevant to software development productivity and continuous delivery—which are concepts related to IDPs—the post never directly references Internal Developer Platforms or examines platform components, automation frameworks, or the architectural concept of an IDP. The alignment is moderate because the ideas support the aims of an IDP but do not address platform aspects explicitly. Depth is shallow, as only metrics for delivery are described, not the systems enabling them. The intent is partially aligned: it pushes better measurement practices for engineers, a probable IDP audience, but the material remains generic as it lacks discussion of platforms or consistency across delivery lifecycles. No overt penalties are warranted due to contemporaneity and neutral tone.",
    "reasoning_summary": "While the content emphasizes improving software delivery speed through build, test, deploy, and feedback metrics, it doesn't directly address Internal Developer Platforms. Its focus is on productivity measurement within DevOps, offering peripheral alignment but lacking depth or specificity to confidently categorize it as IDP content.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-05-16T14:36:51",
    "ai_confidence": 41.4,
    "ai_mentions": 0.8,
    "ai_alignment": 4.3,
    "ai_depth": 3.7,
    "ai_intent": 4.4,
    "ai_audience": 7.3,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content frames velocity as the speed of value delivery using engineering metrics, focusing on build, test, deploy, and feedback loops. It is highly relevant to software engineering audiences but does not mention or discuss sociotechnical systems, organizational structures, or the interplay between social and technical aspects. There is no reference to organizational culture, team dynamics, or alignment of technology and business goals. The depth is limited to technical practices, and the purpose is primarily to clarify technical measurement. High signal-to-noise as it's focused, but insufficient alignment with sociotechnical themes.",
    "reasoning_summary": "This content dives into technical delivery metrics for engineering teams but doesn't address organizational dynamics or social-technical interplay. It's informative for practitioners focused on velocity, yet does not fit the sociotechnical systems category due to lack of discussion on culture, structure, or team interplay.",
    "level": "Tertiary"
  },
  "Continuous Improvement": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 74.48,
    "ai_mentions": 2.7,
    "ai_alignment": 7.9,
    "ai_depth": 7.0,
    "ai_intent": 7.2,
    "ai_audience": 8.2,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content reframes velocity from story points to cycle times and feedback loops, emphasizing metrics that enable faster delivery and learning. It aligns conceptually with continuous improvement by urging ongoing measurement, rapid feedback, and learning. While 'continuous improvement' is not directly mentioned (and the focus is more on delivery speed and continuous delivery), the underlying principles—empiricism, learning cycles, actionable data—are strongly present. The discussion is informative, targets practitioners, and is relevant, though it does not dive deeply into continuous improvement frameworks, nor does it explicitly instruct on process adaptation or organizational integration. The focus is precise, yet narrowly scoped, leading to moderately high but not perfect alignment and depth scores.",
    "reasoning_summary": "The content reframes velocity as a measure of learning and flow, promoting rapid feedback and actionable metrics. While it fits continuous improvement principles—empirical data, iteration, and responsiveness—it doesn’t directly discuss continuous improvement frameworks, slightly limiting its score.",
    "level": "Secondary"
  },
  "Transparency": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Transparency",
    "calculated_at": "2025-05-16T14:36:54",
    "ai_confidence": 46.47,
    "ai_mentions": 1.1,
    "ai_alignment": 4.8,
    "ai_depth": 5.4,
    "ai_intent": 4.6,
    "ai_audience": 7.3,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content focuses on redefining velocity in Agile, emphasizing delivery speed through engineering-controlled metrics. While it discusses visibility into flow and measurement, it does not explicitly mention 'transparency' nor directly link these practices to trust or openness for stakeholders — the core of the category. The alignment and depth show some underlying conceptual overlap but remain mostly diagnostic or process-focused rather than intentionally about fostering transparency, and there’s no direct address to transparency practices, challenges, or tooling.",
    "reasoning_summary": "This piece addresses tracking delivery speed and using engineering metrics, which is tangentially relevant to transparency via visibility, but it doesn’t explicitly focus on transparency or connect these metrics to broader trust or openness themes. Confidence is moderate-low.",
    "level": "Tertiary"
  },
  "Common Goals": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Common Goals",
    "calculated_at": "2025-05-16T14:36:54",
    "ai_confidence": 42.95,
    "ai_mentions": 0.6,
    "ai_alignment": 4.7,
    "ai_depth": 4.2,
    "ai_intent": 5.1,
    "ai_audience": 8.3,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content redefines velocity in practical, delivery-focused terms, emphasizing engineering metrics (build, test, deploy, feedback) over traditional story points. However, it does not directly mention or emphasize the concept of Common Goals, strategic alignment, or organizational objectives. The focus is on process improvement and operational metrics within engineering, with only indirect links to the principle of aligning teams with overarching goals. It targets practitioners but lacks explicit discussion of how these metrics foster shared, strategic objectives or cross-team alignment. Thus, confidence is moderate but limited by weak direct alignment and minimal discussion of Common Goals beyond implicit implications.",
    "reasoning_summary": "This content reframes velocity using engineering metrics but doesn't directly discuss shared objectives or alignment. Its practical advice focuses on process improvement, making it only moderately relevant to the Common Goals category.",
    "level": "Tertiary"
  },
  "Company as a Product": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Company as a Product",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 46.31,
    "ai_mentions": 0.7,
    "ai_alignment": 5.2,
    "ai_depth": 4.9,
    "ai_intent": 5.4,
    "ai_audience": 5.8,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content focuses on velocity metrics at the team/engineering level, emphasizing delivery speed and continuous improvement—elements somewhat relevant to CaaP methodology. However, it neither directly references nor deeply aligns with 'Company as a Product.' There's no discussion of organizational-wide strategies, cross-functional collaboration, or measuring at the company level. The audience seems practitioners seeking better delivery practices, not strategists rethinking their company as a product, and the main intent is illustrative of agile metrics, not CaaP implementation.",
    "reasoning_summary": "The piece discusses delivery velocity metrics in engineering, relating to continuous improvement but stops short of the broader organizational focus required for 'Company as a Product.' It's only tangentially relevant, with minimal conceptual overlap and no explicit mention of CaaP concepts.",
    "level": "Tertiary"
  },
  "Scrum Master": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Scrum Master",
    "calculated_at": "2025-05-16T14:36:49",
    "ai_confidence": 14.75,
    "ai_mentions": 0.7,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 2.4,
    "ai_audience": 3.1,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on velocity, specifically redefining it as a measure of end-to-end delivery speed using engineering metrics. It makes no explicit or implicit reference to the Scrum Master, the accountability, or its responsibilities. The main ideas and themes revolve around DevOps, delivery pipelines, and continuous delivery rather than Scrum roles. While the information could be useful to Scrum teams, it is not centered on the Scrum Master’s accountability, distinct responsibilities, or systemic impact. The audience is likely engineers or delivery leads, not specifically Scrum Masters. Signal-to-noise is moderate, as all content is on topic for engineering velocity, but almost none is relevant to the category in question.",
    "reasoning_summary": "This content redefines velocity using engineering metrics but makes no reference to Scrum Master accountability or responsibilities. Its focus is on delivery performance, not the Scrum framework or its roles. Therefore, it is only minimally aligned with the Scrum Master category.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Discovery",
    "calculated_at": "2025-05-16T14:36:49",
    "ai_confidence": 32.46,
    "ai_mentions": 0.5,
    "ai_alignment": 2.3,
    "ai_depth": 3.2,
    "ai_intent": 2.8,
    "ai_audience": 4.1,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on engineering velocity metrics such as time to build, test, deploy, and learn, emphasizing team delivery speed and feedback cycles. While it briefly references 'turning ideas into value' and feedback, it lacks direct discussion of methodologies or practices fundamental to product discovery (such as user research, idea validation, or feature prioritization). The main intent centers on measuring delivery flow for engineering teams, with minimal alignment to product discovery's scope. The low mentions score and only passing conceptual references keep overall confidence low.",
    "reasoning_summary": "This piece primarily covers engineering velocity and delivery metrics, with scant connection to product discovery methods or goals. Its relevance is limited to a passing mention of feedback, so it doesn’t meaningfully fit the category.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-16T14:36:49",
    "ai_confidence": 64.27,
    "ai_mentions": 3.3,
    "ai_alignment": 7.1,
    "ai_depth": 6.6,
    "ai_intent": 7.2,
    "ai_audience": 8.0,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content emphasizes metrics like build time, automated test duration, and deployment time, which are important in CI workflow. However, it frames the discussion in terms of 'velocity' and overall value delivery rather than explicit CI practices, with only one indirect mention ('continuous delivery'). No direct or repeated references to 'Continuous Integration' occur, and some focus extends to broader delivery and feedback. The target audience is technical and aligned. Mildly limited depth, but the discussion of metrics supports good relevant signal.",
    "reasoning_summary": "While the content covers key metrics relating to build, test, and deploy—central to Continuous Integration—it mostly discusses team velocity and value delivery, only indirectly touching on true CI principles. Its focus overlaps but doesn't dwell fully in the CI category.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 95.2,
    "ai_mentions": 8.6,
    "ai_alignment": 9.8,
    "ai_depth": 9.5,
    "ai_intent": 9.2,
    "ai_audience": 8.2,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly reframes the concept of velocity in terms of actionable DevOps metrics (build, test, deploy, feedback times) rather than superficial story point tracking. It thoroughly explores the rationale for relevant metrics, their impact on learning and continuous improvement, and stresses the importance of real feedback loops. Its intended audience is teams/practitioners focused on DevOps and Agile improvement, aligning with the category. The discussion is substantive, practical, and wholly within the scope of 'Metrics and Learning,' with minimal noise. No out-of-date concepts or contradictory tones were detected, so no penalties were applied.",
    "reasoning_summary": "This content nails Metrics and Learning—it provides targeted metrics, ties them to continuous improvement, and demonstrates relevance to practitioners seeking real results. Its focus is sharp and its alignment with the category is exceptionally strong.",
    "level": "Primary"
  },
  "One Engineering System": {
    "resourceId": "14E6bk6Lmo4",
    "category": "One Engineering System",
    "calculated_at": "2025-05-16T14:36:48",
    "ai_confidence": 42.76,
    "ai_mentions": 0.7,
    "ai_alignment": 5.1,
    "ai_depth": 4.7,
    "ai_intent": 7.1,
    "ai_audience": 7.4,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content focuses on measuring software development velocity using metrics like build, test, deploy, and feedback times, referencing Azure DevOps practices. However, it never explicitly mentions One Engineering System (1ES) or discusses integration, standardisation, or the 1ES framework. While the practices align with modern engineering efficiency (and might be part of a 1ES implementation), the core themes are on delivery speed, not system unification. Limited conceptual overlap exists, but the fit is indirect.",
    "reasoning_summary": "While the content discusses engineering velocity metrics relevant to efficient delivery, it does not directly mention or focus on One Engineering System or its unifying principles. The alignment is moderate, but the connection to the 1ES framework is indirect and implicit rather than explicit.",
    "level": "Tertiary"
  },
  "Team Collaboration": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-16T14:36:50",
    "ai_confidence": 34.9,
    "ai_mentions": 1.1,
    "ai_alignment": 3.7,
    "ai_depth": 3.8,
    "ai_intent": 3.2,
    "ai_audience": 7.2,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on redefining velocity in Agile/DevOps, emphasizing delivery metrics rather than story points. It directly addresses engineering teams and Agile/DevOps contexts. However, it does not explicitly discuss team communication, shared ownership, team dynamics, or collaboration practices. Its primary focus is process improvement via technical metrics, with only tangential relevance to collaboration, lacking depth and conceptual alignment with the Team Collaboration category.",
    "reasoning_summary": "While the post is aimed at Agile/DevOps teams, its focus is on measuring velocity through technical flow metrics, not on teamwork, communication, or collaboration. It addresses process and productivity more than team dynamics, making it a weak but tangential fit for Team Collaboration.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-16T14:36:49",
    "ai_confidence": 7.35,
    "ai_mentions": 0.1,
    "ai_alignment": 1.0,
    "ai_depth": 0.8,
    "ai_intent": 0.5,
    "ai_audience": 3.0,
    "ai_signal": 1.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content discusses modern velocity metrics and continuous delivery in software development, focusing on tangible delivery speed over the traditional story points metric. However, there is no mention, direct or indirect, of Artificial Intelligence, nor any exploration of AI-enhanced practices, automation, or analytics. The themes are aligned with DevOps and Agile, but specifically lack AI relevance per the definition. All dimensions score very low due to absence of AI-application, and no penalties were needed.",
    "reasoning_summary": "This content solely covers measuring velocity and delivery metrics in DevOps/Agile, without mentioning or relating to Artificial Intelligence. Thus, it does not fit the category focus, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-16T14:36:50",
    "ai_confidence": 30.074,
    "ai_mentions": 0.8,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.5,
    "ai_audience": 1.7,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content does not explicitly mention modern source control or related tools (e.g., Git, Mercurial), nor does it detail version control strategies, workflows, or best practices. The discussion centers on engineering velocity and delivery flow, highlighting metrics like build, test, deploy, and feedback times—topics aligned more closely with DevOps and continuous delivery than source control practices specifically. Although it refers to the flow of code changes and build processes (which overlap with version control systems in a general DevOps context), it does not address key modern source control topics such as branching, collaboration workflows, or code review. The audience appears technical, but the signal-to-noise ratio is low in relevance to this category, and no penalties were applied.",
    "reasoning_summary": "This content focuses on delivery metrics and engineering speed, not on source control systems or practices. While it references code changes and build flow, it lacks any substantive discussion of version control, making it a weak fit for 'Modern Source Control.'",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Team Performance",
    "calculated_at": "2025-05-16T14:36:50",
    "ai_confidence": 91.89,
    "ai_mentions": 7.6,
    "ai_alignment": 9.4,
    "ai_depth": 9.2,
    "ai_intent": 9.0,
    "ai_audience": 8.1,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content focuses entirely on interpreting and refining the team's measurement of delivery capability, directly addressing system-level metrics (build, test, deploy, feedback times) and how they reflect team effectiveness. While the term 'team performance' is not repeated verbatim, the discussion of velocity and related engineering metrics offers strong conceptual alignment. The depth is significant as it distinguishes true delivery speed from simplistic story point tracking and grounds the discussion in practical, continuous delivery contexts. There is clear intent to educate engineering teams about how to measure and improve their systemic performance. The content is tailored toward technical practitioners (e.g., engineering teams using Azure DevOps). The signal is high, as the information is focused, with minimal filler or off-topic material. No penalties apply, as content is current and positions the topic supportively.",
    "reasoning_summary": "This content robustly matches 'Team Performance,' offering a deep, practical discussion on using real delivery metrics over simplistic measures. It targets technical teams, focusing on actionable system-level practices essential for effective and sustainable delivery, with minimal off-topic content.",
    "level": "Primary"
  },
  "First Principal": {
    "resourceId": "14E6bk6Lmo4",
    "category": "First Principal",
    "calculated_at": "2025-05-16T14:36:49",
    "ai_confidence": 28.2,
    "ai_mentions": 1.6,
    "ai_alignment": 3.8,
    "ai_depth": 2.9,
    "ai_intent": 4.1,
    "ai_audience": 7.6,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content challenges a common misconception about velocity but does not directly reference or discuss first principles, nor explicitly anchor the four metrics to foundational, immutable truths in Lean, Agile, Scrum, or DevOps. The discussion is more about practical, possibly derived metrics and improved measurement focus, rather than identification or application of first principles. It is relevant to practitioners aiming for effective delivery, but lacks explicit first principles framing.",
    "reasoning_summary": "This content clarifies how velocity should be measured in delivery teams, focusing on practical, operation-level metrics. While it’s useful for Agile practitioners, it doesn’t identify or discuss first principles, making its fit to the First Principal category weak.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 26.65,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.1,
    "ai_intent": 2.8,
    "ai_audience": 9.2,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content focuses on accurately measuring team velocity, critiquing overreliance on story points and emphasizing end-to-end metrics in software delivery. It describes process metrics (build, test, deploy, feedback) and references engineering control, but does not mention, discuss, or explore the structure, dynamics, or benefits of cross-functional teams. There are no direct mentions, no discussion of team skill diversity, collaboration, or Agile team configurations relevant to the category. Its audience fits Agile practitioners or engineers, but relevance to 'Cross Functional Teams' is tangential at best, as the content is about delivery speed measurement, not team structure.",
    "reasoning_summary": "The content centers on measuring delivery velocity using process metrics, with no direct or substantive discussion about cross-functional teams. While aimed at Agile practitioners, its focus is velocity tracking, not team composition, so fit with the category is low.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 11.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 0.9,
    "ai_intent": 1.5,
    "ai_audience": 2.3,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content does not directly mention Backlog Refinement nor discuss any of its practices, processes, or concepts. Its focus is on measuring engineering velocity through delivery metrics, not on backlog clarity, prioritization, or collaborative refinement. No key backlog refinement topics (user stories, estimation, product owner, sprint prep) are referenced, and the target audience is more general engineering than backlog practitioners.",
    "reasoning_summary": "This content centers on engineering velocity and delivery metrics, not backlog refinement. It lacks direct references, alignment, or relevant discussion, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 21.82,
    "ai_mentions": 0.4,
    "ai_alignment": 2.7,
    "ai_depth": 2.8,
    "ai_intent": 2.2,
    "ai_audience": 6.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content directly discusses metrics for tracking delivery speed and value in the context of a DevOps team (Azure DevOps), referencing continuous delivery. It references concrete practices associated with DevOps and flow-based delivery, which specifically excludes it from 'Miscellaneous.' The audience is technical practitioners, and the discussion is focused and relevant, but the main ideas strongly align with DevOps and continuous delivery principles, not with the intent of the Miscellaneous category. There are no direct or explicit references to 'Miscellaneous' as a category or to its core meaning. No satirical or outdated elements were present, so no penalties were applied.",
    "reasoning_summary": "This content is primarily about DevOps delivery metrics and continuous delivery, aligning it directly with specific frameworks, not Miscellaneous. It targets practitioners and is highly relevant, but mostly falls outside the intended scope of the Miscellaneous category.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 93.12,
    "ai_mentions": 7.3,
    "ai_alignment": 9.7,
    "ai_depth": 9.1,
    "ai_intent": 9.2,
    "ai_audience": 9.4,
    "ai_signal": 9.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content directly addresses engineering metrics vital for software delivery, focusing on build, test, deploy, and feedback cycles. While 'Technical Mastery' is not explicitly stated, the discussion is fully aligned—emphasizing DevOps practices, continuous integration, and engineering excellence. The audience is technical (engineering teams), and the signal-to-noise is high, as the content eschews tangential topics. Although explicit category naming is modest, the conceptual, depth, and purpose fit are all strong.",
    "reasoning_summary": "This content strongly fits Technical Mastery by discussing engineering-driven velocity metrics like build, test, deploy, and feedback cycles. It targets practitioners, offering actionable insights for software craftsmanship and delivery excellence, making it highly relevant and focused for a technical audience.",
    "level": "Primary"
  },
  "Scrum Values": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Scrum Values",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 10.15,
    "ai_mentions": 0.3,
    "ai_alignment": 1.5,
    "ai_depth": 1.0,
    "ai_intent": 1.2,
    "ai_audience": 3.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses exclusively on the concept of velocity metrics in software teams, specifically through engineering and DevOps process improvements. The Scrum Values (commitment, courage, focus, openness, respect) are not directly mentioned or explored, nor is the conversation framed around their meaning or importance. While practitioners using Scrum may be interested, the main ideas, examples, and intent are not substantively about the Scrum Values nor do they promote or explain them. As such, the scores across all dimensions are low, reflecting minimal relevance.",
    "reasoning_summary": "This content centers on velocity and DevOps process metrics, not on the core Scrum Values. It doesn’t mention or explore commitment, courage, focus, openness, or respect, so its alignment with the category is minimal.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 48.95,
    "ai_mentions": 1.1,
    "ai_alignment": 5.7,
    "ai_depth": 5.0,
    "ai_intent": 5.6,
    "ai_audience": 6.2,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content discusses the concept of 'velocity' as measuring real delivery speed via build, test, deploy, and feedback times, aligning partially with the Agile Product Operating Model's emphasis on continuous delivery, data-driven metrics, and value delivery. However, it never mentions APOM directly or references product management principles, organizational structures, or end-to-end product orientation. Its focus is on engineering effectiveness, not the full product operating model, and its audience are technical teams rather than strategy or executive-level practitioners. There is moderate conceptual overlap, but no direct category mention, and the discussion remains largely process and team metrics focused.",
    "reasoning_summary": "While the content shares some values with the Agile Product Operating Model—such as metric-driven improvement and speed—it lacks direct reference to product management or the broader operating model. Its focus is mainly technical, so confidence in category fit is moderate.",
    "level": "Tertiary"
  },
  "Shift Left Strategy": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 29.25,
    "ai_mentions": 0.5,
    "ai_alignment": 2.0,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 8.2,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content does not directly mention Shift Left Strategy nor its principles. It focuses on velocity in software delivery, emphasizing build, test, deploy, and feedback times as metrics. While some stages (like automated testing and feedback) overlap conceptually with Shift Left ideas, the main theme is about measuring delivery speed rather than advocating for integrating critical processes earlier in the lifecycle. No case studies or tools for Shift Left are discussed. The primary audience—software teams—is partially aligned, and the content is concise and relevant to delivery metrics, not Shift Left specifically.",
    "reasoning_summary": "This content emphasizes measuring software delivery speed but does not address or promote Shift Left Strategy. Any overlap is indirect and coincidental, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Working Software": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Working Software",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 77.65,
    "ai_mentions": 5.8,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 8.2,
    "ai_audience": 7.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content directly addresses how velocity should be measured based on actual delivery of value (build, test, deploy, feedback), tying closely to the concept of producing working software as deliverable output. It explains each step (Time to Build, Self-Test, Deploy, Learn) within an engineering workflow, highlighting real production of usable software. The discussion is somewhat technical and practically relevant, targeting practitioners focused on continuous delivery. Though it doesn't use the term 'working software' explicitly or explore its full breadth (e.g., customer alignment, maintainability), it clearly centers around the creation and validation of working increments rather than theory or principle. No penalties needed.",
    "reasoning_summary": "This content closely aligns with the 'Working Software' category by focusing on delivering real, usable software incrementally—measured by engineering-driven, practical metrics. While not exhaustive, it’s actionable and relevant for teams committed to effective delivery.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 53.67,
    "ai_mentions": 1.1,
    "ai_alignment": 6.4,
    "ai_depth": 5.8,
    "ai_intent": 5.3,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on the precise measurement of engineering velocity by outlining metrics that track how quickly teams deliver value (time to build, self-test, deploy, and learn). While these metrics are relevant to operational efficiency and could support digital transformation, the text does not mention digital transformation or related strategic themes directly. The core discussion remains tactical, centering on team-level delivery and continuous integration rather than broader organizational change, adoption of digital technologies, or cultural transformation. Audience alignment is moderately strong (tech leads or DevOps interested in delivery metrics). There are no penalties, as the content is current and factual.",
    "reasoning_summary": "This content details engineering metrics for delivery speed, relevant to operational improvement. However, it doesn’t discuss digital transformation or organizational strategy, so its fit with 'Digital Transformation' is partial and indirect.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-16T14:36:53",
    "ai_confidence": 63.05,
    "ai_mentions": 1.3,
    "ai_alignment": 6.6,
    "ai_depth": 6.1,
    "ai_intent": 6.4,
    "ai_audience": 8.1,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content describes modern DevOps velocity metrics, moving beyond classic story points and emphasizing value delivery through measurable engineering cycles. While it aligns with DevOps and references recognized practices, it provides no explicit discussion or analysis of broader trends or patterns over time. The content instructs on current metric use rather than examining shifts, causes, or organizational impact—limiting depth and scope relative to the strict Trend Analysis definition. Audience focus is well-aligned, but the absence of trend identification, historical context, or case comparisons constrains confidence.",
    "reasoning_summary": "This content provides a practical view on measuring velocity in DevOps but stops short of trend analysis. It aligns with DevOps audiences and modern practices but lacks explicit exploration of shifts, patterns, or broader implications needed for high confidence in the Trend Analysis category.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Organisational Psychology",
    "calculated_at": "2025-05-16T14:36:56",
    "ai_confidence": 16.914,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 5.4,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses exclusively on technical metrics for software engineering teams (velocity, build/test/deploy times) and does not mention nor discuss any psychological principles, theories of motivation, leadership, group dynamics, or other aspects central to organisational psychology. While there's a slight implied consideration for efficiency and team processes, there's no exploration of employee engagement, satisfaction, psychological safety, or behavioural dynamics. The material is targeted at a technical audience and is unrelated to the psychological underpinnings of organisational behaviour.",
    "reasoning_summary": "This content is technical, focusing on workflow metrics in DevOps, not the psychological dynamics in organizations. It lacks discussion of motivation, leadership, or team behaviour, so its fit for 'Organisational Psychology' is very low.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-16T14:36:56",
    "ai_confidence": 11.2,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.4,
    "ai_intent": 1.1,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses narrowly on redefining velocity in agile terms, specifically emphasizing engineering flow metrics over story points. There are no explicit mentions of Hybrid Agile, nor is there a discussion about blending agile and traditional methodologies, their integration challenges, or critiques of superficial agile adoption. The intent is purely technical and informational, not analyzing Hybrid Agile dynamics or dysfunctions, and the depth is minimal with no reference to organizational or leadership-level issues associated with Hybrid Agile contexts.",
    "reasoning_summary": "This content purely discusses agile team velocity metrics and does not address Hybrid Agile frameworks, their integration issues, or related themes, making it a poor fit for the Hybrid Agile category.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T14:36:56",
    "ai_confidence": 7.3,
    "ai_mentions": 0.4,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.3,
    "ai_audience": 2.1,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on velocity measurement via technical process metrics (build, test, deploy, feedback) rather than on motivation, commitment, or team satisfaction. While feedback speed is mentioned, it's in the context of delivery cycle time, not psychological or cultural aspects of work. There's no explicit or implicit discussion of employee engagement topics like trust, recognition, or motivation. The intended audience is engineering/technical, and the main purpose is to clarify velocity measurement, not to foster or improve engagement.",
    "reasoning_summary": "This content is technical, centering on delivery metrics, not on motivation, satisfaction, or team commitment. It does not discuss employee engagement concepts, so fit for the category is extremely low.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-16T14:36:56",
    "ai_confidence": 24.65,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 7.3,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on measuring delivery velocity via build, test, deploy, and feedback times, but never directly mentions Test Driven Development or its core methodology. While 'Time to Self-Test' references automated tests, it does not imply writing tests first per TDD and does not discuss TDD cycles, refactoring, or related principles. The alignment with TDD is tangential, as the discussion is about engineering velocity and process optimization, not specifically about TDD practice or philosophy.",
    "reasoning_summary": "This content centers on engineering velocity and value delivery metrics, only indirectly referencing automated testing. There’s little to no discussion of TDD, its principles, or methodology. As such, the fit with TDD is weak, with almost no direct connection.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T14:36:57",
    "ai_confidence": 34.6,
    "ai_mentions": 0.4,
    "ai_alignment": 3.1,
    "ai_depth": 3.0,
    "ai_intent": 3.2,
    "ai_audience": 7.3,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content never mentions 'platform engineering' or connected terms such as Internal Developer Platforms (IDPs). Its main focus is on how teams measure delivery velocity using build, test, deploy, and feedback metrics, with examples drawn from Azure DevOps. While there are procedural overlaps (automation, feedback loops), the discussion is grounded in continuous delivery and engineering metrics rather than platform design, internal developer platforms, or standardisation. The audience is technical practitioners, and the signal is fairly focused, but the piece neither explores nor names platform engineering concepts or practices.",
    "reasoning_summary": "This content is about delivery velocity metrics in software teams using Azure DevOps, not platform engineering. It shares ideas relevant to automation but doesn’t discuss internal platforms or related practices, making it only loosely aligned to the category.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 63.85,
    "ai_mentions": 1.8,
    "ai_alignment": 7.3,
    "ai_depth": 6.8,
    "ai_intent": 7.9,
    "ai_audience": 8.2,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content doesn't directly mention 'Lean Thinking' or its canonical terms (e.g., waste, value stream mapping), but it strongly aligns with Lean principles—focusing on flow, value delivery, and minimizing time between steps. The discussion of key velocity metrics emphasizes flow and continuous feedback, which are prototypical Lean concerns. However, it doesn't explore Lean tools or offer in-depth discussion specific to Lean frameworks. The target audience aligns with Lean practitioners in software delivery, and the content is focused with minimal noise. No outdated practices or contradictory tone present.",
    "reasoning_summary": "Although the content doesn't cite Lean Thinking explicitly, its focus on value, flow, and continuous delivery closely reflects Lean principles. The intended audience and purpose fit well, but the absence of Lean-specific language keeps confidence moderate.",
    "level": "Secondary"
  },
  "Self Organisation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 47.94,
    "ai_mentions": 1.2,
    "ai_alignment": 5.7,
    "ai_depth": 5.2,
    "ai_intent": 6.1,
    "ai_audience": 7.0,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content does not directly mention self-organisation, nor does it explicitly discuss team autonomy, empowerment, or Agile/Scrum self-organising principles. It focuses on measuring delivery speed using DevOps metrics, hinting at areas within 'engineering’s control.' While some themes (e.g., internal team control, continuous delivery) tangentially relate to self-organisation, there are no direct explorations of its principles, team culture, leadership roles, or tools to facilitate self-organisation, as outlined in the category definition. The audience is generally technical (engineers, practitioners) and there’s little noise, but the core emphasis is more on measurement and velocity than self-organisation itself.",
    "reasoning_summary": "This content centers on measuring delivery speed through DevOps metrics, with only mild alignment to self-organisation. It doesn't discuss self-organising principles or practices directly, making its relevance to the category limited.",
    "level": "Tertiary"
  },
  "Competence": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Competence",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 66.53,
    "ai_mentions": 3.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 6.7,
    "ai_audience": 8.5,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content reframes velocity as a measure of real delivery and process effectiveness, not just story points, and details metrics teams control. It aligns well with the competence principle, emphasizing demonstrable skills (e.g., build/test/deploy speed) and continuous improvement, but does not directly discuss skill development, professionalism, or explicit competence themes. Audience targeting and relevance are high, but explicit mentions of competence are low.",
    "reasoning_summary": "This piece strongly aligns with Competence by focusing on measurable delivery skills and real progress indicators, though it doesn't directly discuss skill-building or professionalism. It's practical and relevant, targeting practitioners keen on effectiveness and continuous improvement.",
    "level": "Secondary"
  },
  "Decision Making": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 71.25,
    "ai_mentions": 2.6,
    "ai_alignment": 8.2,
    "ai_depth": 7.6,
    "ai_intent": 7.2,
    "ai_audience": 8.9,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "There is no direct mention of 'decision making,' but the content clearly details metrics that inform evidence-based choices, particularly for technical teams engaged in Agile and DevOps. The discussion connects delivery metrics to feedback and improvement cycles, aligning strongly with structured decision-making, though it doesn't fully explore cognitive biases, evaluation frameworks, or collaborative aspects. The depth is moderate, focused on practical measurement rather than conceptual theory. The intended audience is technical practitioners, matching the category. No penalty applied as there's no outdated content or contradictory tone.",
    "reasoning_summary": "This content doesn't directly mention 'decision making,' but closely aligns with the category by promoting evidence-based delivery metrics that guide informed, continuous improvement in Agile teams. Its focus on actionable metrics and feedback is highly relevant for technical decision-makers.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 17.05,
    "ai_mentions": 0.1,
    "ai_alignment": 2.7,
    "ai_depth": 2.4,
    "ai_intent": 2.6,
    "ai_audience": 4.2,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content doesn't mention installation or configuration topics at all. It focuses on performance metrics within a DevOps process, discussing how teams should measure delivery speed using build, test, deploy, and feedback times. There is no step-by-step guidance, technical setup, or actionable configuration advice. The audience is engineering, but the purpose is conceptual and performance-oriented, not instructional or technical as required. Thus, the content only very loosely aligns with the 'Install and Configuration' category.",
    "reasoning_summary": "This content analyzes delivery metrics, not installation or configuration processes. It targets engineering teams but focuses on performance measurement, not setup or integration, making it an extremely poor fit for the category.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Current Value",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 59.2,
    "ai_mentions": 3.4,
    "ai_alignment": 6.9,
    "ai_depth": 6.4,
    "ai_intent": 6.0,
    "ai_audience": 7.9,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content reframes 'Velocity' in software development—not as story points, but as the speed of turning ideas into value, tracked via build, test, deploy, and feedback cycle times. These metrics are operational and actionable but stop short of directly measuring the tangible outcomes or 'Current Value' as defined in Evidence-Based Management, such as customer satisfaction or actual value delivered to users. The alignment is present in discussing delivery speed and feedback but lacks detailed focus on value realization or customer impact metrics. The audience is practitioners in Agile/DevOps settings who would benefit from EBM guidance, yet the material remains mostly process- and speed-oriented rather than value-centric.",
    "reasoning_summary": "This piece spotlights engineering speed and feedback loops, nudging towards Current Value but focusing more on delivery efficiency than on measuring real-world user or business outcomes. It's relevant for practitioners seeking actionable agility but is only moderately aligned with the full EBM Current Value concept.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 45.78,
    "ai_mentions": 1.0,
    "ai_alignment": 5.7,
    "ai_depth": 4.9,
    "ai_intent": 5.2,
    "ai_audience": 7.9,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content reframes velocity as delivering value faster using metrics like build, test, deploy, and feedback times. It briefly mentions using user feedback to inform decisions, which relates to customer satisfaction, but this is not the core focus. It targets engineering teams aiming for continuous delivery, not explicitly discussing customer satisfaction principles, measurement, or strategic engagement. There is moderate conceptual alignment, but depth and direct mentions are low.",
    "reasoning_summary": "While the content nods to customer feedback and value delivery, its main emphasis is operational efficiency, not customer satisfaction. It’s somewhat relevant to the category but lacks depth, focus, and explicit discussion on customer-related outcomes.",
    "level": "Tertiary"
  },
  "Project Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Project Management",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 55.84,
    "ai_mentions": 2.5,
    "ai_alignment": 6.2,
    "ai_depth": 6.7,
    "ai_intent": 6.0,
    "ai_audience": 5.4,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content focuses on the concept of 'velocity' in software teams, emphasizing the measurement of build, test, deploy, and feedback times over story points. While the discussion involves relevant tracking and improvement practices, it centers mainly on agile engineering throughput rather than broad project management strategies, tools, lifecycle perspectives, or governance. Project management is not directly mentioned, and the primary audience is technical (engineering teams), not project managers. The discussion is thoughtful but narrow, with limited coverage of PM methodologies or roles.",
    "reasoning_summary": "This post dives into agile velocity metrics for engineering teams. While it features relevant tracking concepts, its focus is mostly on technical delivery speed, not broad project management topics. It's useful for practitioners but doesn't fully address the wider project management discipline.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 52.65,
    "ai_mentions": 2.4,
    "ai_alignment": 5.7,
    "ai_depth": 5.6,
    "ai_intent": 6.0,
    "ai_audience": 7.2,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content challenges a common misconception about 'velocity' but frames it in terms of DevOps team metrics, focusing on build, test, deploy, and feedback times. While it references Agile-related terms like 'velocity' and 'continuous delivery', it does not explicitly discuss Agile frameworks or their principles, nor does it explore the frameworks themselves in depth. The piece speaks mainly to engineering teams focusing on delivery efficiency. The exposition is relevant to Agile-adjacent practice—lean without directly aligning with the description of Agile frameworks given. No penalties were applied, as content is current and does not undermine Agile thinking.",
    "reasoning_summary": "This content discusses velocity and continuous delivery metrics from a DevOps perspective, which is adjacent to Agile thinking, but does not focus on Agile frameworks themselves. Its alignment is partial, offering relevant themes but limited framework-specific substance.",
    "level": "Tertiary"
  },
  "Social Technologies": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T14:37:03",
    "ai_confidence": 69.15,
    "ai_mentions": 2.7,
    "ai_alignment": 8.2,
    "ai_depth": 6.8,
    "ai_intent": 7.6,
    "ai_audience": 7.9,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content emphasizes velocity as 'turning ideas into value,' which aligns with value delivery, a Social Technologies principle. It discusses metrics promoting continuous improvement and agile feedback loops central to the category definition. However, explicit terms like 'social technologies,' 'collaboration,' or 'self-organisation' aren't mentioned, reducing the direct mention score. The depth moderately explores metrics but less so frameworks or culture-specific topics. Content intent and audience align well with practitioners interested in organisational improvement through DevOps, supporting the category. No penalties are warranted as the content is current and fits the intent.",
    "reasoning_summary": "The content closely aligns with Social Technologies by focusing on value delivery, feedback, and continuous improvement in an Agile/DevOps context, though it lacks explicit references to collaboration frameworks. It's targeted at practitioners and effectively supports the category despite limited direct terminology.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T14:36:55",
    "ai_confidence": 23.01,
    "ai_mentions": 0.8,
    "ai_alignment": 2.7,
    "ai_depth": 2.6,
    "ai_intent": 1.5,
    "ai_audience": 7.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on technical delivery metrics—build, test, deploy, and feedback times—arguing that true velocity is measured by these rather than story points. There are no direct or indirect mentions of product vision, market analysis, or strategic alignment. The focus remains on engineering workflow metrics, not setting or aligning to product strategy. The main audience is technical teams rather than strategists, and the discussion lacks depth regarding strategic frameworks or product vision.",
    "reasoning_summary": "This content centers on delivery metrics for Agile teams, not on broader product strategy topics. It addresses technical processes rather than vision, roadmapping, or market alignment, so confidence is low for categorizing it under Product Strategy.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Development",
    "calculated_at": "2025-05-16T14:36:55",
    "ai_confidence": 92.75,
    "ai_mentions": 7.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.1,
    "ai_intent": 9.2,
    "ai_audience": 9.3,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content reframes velocity from 'story points burned' to value delivery, directly referencing continuous delivery processes and key DevOps/practices central to product development. It discusses time to build, test, deploy, and learn, aligning with iterative feedback-driven improvement. While 'product development' isn't explicitly cited, the focus on delivering value, integrating feedback, and optimizing DevOps cycles demonstrates strong conceptual and practical fit. The audience is clearly practitioners interested in improving development lifecycle outcomes.",
    "reasoning_summary": "This piece robustly captures product development principles, focusing on measurable delivery speed and rapid feedback. It offers actionable, modern metrics rather than theory, directly supporting iterative improvement and real value—making it a strong fit for the category.",
    "level": "Primary"
  },
  "Sensemaking": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T14:36:55",
    "ai_confidence": 22.12,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.8,
    "ai_audience": 5.3,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content discusses measuring engineering velocity using concrete delivery metrics, emphasizing practical continuous delivery over abstract or traditional measures. While it touches on interpreting delivery performance data (which could tangentially relate to sensemaking), there is no mention of sensemaking principles, frameworks, complexity, or decision-making in uncertain contexts. The main purpose is to inform engineering teams about effective velocity metrics, not to explore sensemaking itself. Therefore, conceptual alignment and depth are minimal. Audience partially overlaps (technical practitioners), but the main themes are focused on measurement, not sensemaking.",
    "reasoning_summary": "This piece focuses on practical velocity metrics for engineering teams, not sensemaking principles. It lacks direct references or deep discussion of interpreting complexity or decision-making, so its confidence for the 'Sensemaking' category is low.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T14:36:55",
    "ai_confidence": 18.6,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.2,
    "ai_audience": 6.5,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on Agile metrics (velocity) and how teams should measure delivery speed using practical, engineering-focused metrics. It doesn't directly or indirectly reference Cell Structure Design, the Beta Codex, or concepts like autonomous cells, decentralisation, or networked organisational principles. The only slight connection is the emphasis on end-to-end delivery and team autonomy, but these are general Agile/DevOps practices, not unique to Cell Structure Design. The audience is practitioners interested in delivery speed, which is tangential to organisational theory. No penalties applied, as the content is current and neutral in tone.",
    "reasoning_summary": "This content is about effective Agile metrics and continuous delivery, not Cell Structure Design. While autonomy is mentioned, it doesn't discuss decentralised structures, cells, or the Beta Codex, making it only faintly relevant at best.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Artifact",
    "calculated_at": "2025-05-16T14:36:55",
    "ai_confidence": 25.4,
    "ai_mentions": 1.4,
    "ai_alignment": 2.7,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 8.1,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on velocity metrics in software delivery, emphasizing flow-related measurements (e.g., time to build, test, deploy, learn). While these are important process metrics, they're not presented as formal artifacts—tangible, inspectable constructs central to Agile or Scrum. There's no explicit discussion of artifacts or their structure, purpose, or management. The content targets engineering practitioners and maintains a strong signal, but it does not fit the Artifact category per strict definition.",
    "reasoning_summary": "This piece focuses on velocity as a process metric, not as an artifact. It discusses stages and measurements in engineering workflows, not formal, inspectable artifacts. The content suits technical audiences but doesn’t fit the Artifact category as defined.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T14:36:58",
    "ai_confidence": 53.8,
    "ai_mentions": 2.7,
    "ai_alignment": 6.2,
    "ai_depth": 5.9,
    "ai_intent": 5.5,
    "ai_audience": 6.3,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content discusses rethinking velocity in Agile terms, emphasizing delivery speed and measurable, customer-facing value. It references continuous delivery and feedback loops, aligning somewhat with Agile principles. However, it mostly delves into engineering metrics rather than strategic or organizational alignment, resulting in moderate alignment, depth, and intent scores. There are no explicit mentions of organizational vision or large-scale Agile strategy, but the underlying intent connects to continuous value delivery. The focus is primarily on teams and practitioners rather than executive or strategic-level audiences.",
    "reasoning_summary": "While the content reframes velocity with Agile-informed metrics and strongly supports continuous delivery, its focus is limited to engineering and process improvement, not broader Agile strategy or organizational transformation.",
    "level": "Tertiary"
  },
  "GitHub": {
    "resourceId": "14E6bk6Lmo4",
    "category": "GitHub",
    "calculated_at": "2025-05-16T14:36:58",
    "ai_confidence": 10.4,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 1.6,
    "ai_intent": 1.8,
    "ai_audience": 2.0,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses delivery velocity using metrics from the Azure DevOps team and does not mention GitHub directly or indirectly. The metrics and themes align with DevOps and continuous delivery concepts, but are platform-agnostic and not tailored to GitHub’s tools, features, or audiences. No aspect of the content addresses GitHub functionalities, collaboration, or best practices, resulting in low scores across all dimensions as per strict category definitions.",
    "reasoning_summary": "This content focuses on measuring delivery speed using Azure DevOps metrics and makes no mention of GitHub, its tools, or practices. Its themes are general DevOps, not GitHub-specific. Confidence in fit is extremely low.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 64.905,
    "ai_mentions": 4.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.6,
    "ai_intent": 7.1,
    "ai_audience": 8.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content references 'Azure DevOps team' and discusses metrics such as build, test, and deployment times, which are core to CI/CD and align with Azure Pipelines practices. However, 'Azure Pipelines' is not mentioned explicitly, and the discussion is conceptual and metric-driven, rather than a deep dive into Azure Pipelines features, configurations, or practices. The target audience is technical, and most of the content is on-point for DevOps practitioners, especially those using automation. No penalties were applied, as the content is current and constructive toward the category.",
    "reasoning_summary": "While the content addresses metrics highly relevant to Azure Pipelines and targets a technical audience, it references 'Azure DevOps' rather than 'Azure Pipelines' explicitly and focuses more on delivery metrics than pipeline-specific implementation, leading to a solid but not maximal confidence score.",
    "level": "Secondary"
  },
  "Leadership": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Leadership",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 32.85,
    "ai_mentions": 1.3,
    "ai_alignment": 3.2,
    "ai_depth": 3.0,
    "ai_intent": 3.5,
    "ai_audience": 7.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content reframes the definition of velocity, emphasizing delivery metrics over story points. However, it focuses primarily on technical workflow optimization and measurement within engineering contexts. Leadership is not directly or deeply discussed—there are no references to leadership practices, team dynamics, cultural change, or adaptive leadership. The main audience is likely engineering practitioners, not leaders. Content is relevant for agile performance but lacks explicit connection to leadership frameworks or the leader's role in driving these measures.",
    "reasoning_summary": "This content is mainly about technical delivery metrics, not leadership. While it may indirectly interest leaders, it doesn't address leadership themes, practices, or responsibilities, making the fit for the Leadership category quite low.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T14:36:59",
    "ai_confidence": 41.25,
    "ai_mentions": 1.1,
    "ai_alignment": 4.8,
    "ai_depth": 4.5,
    "ai_intent": 3.5,
    "ai_audience": 6.9,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on velocity metrics in Agile/DevOps, emphasizing rapid delivery and feedback cycles. While 'Time to Learn' references user feedback, the primary theme is process optimization within engineering, not customer retention strategies. There is little direct discussion of methodologies aimed at maintaining user engagement or minimizing churn. The content may incidentally improve retention by emphasizing feedback, but it lacks depth and intent specifically tied to customer retention such as personalisation, satisfaction measurement, or customer-centric cultural shifts.",
    "reasoning_summary": "This piece centers on engineering velocity and feedback, only briefly referencing user feedback without exploring retention strategies. It is tangential to customer retention, making the fit limited but not entirely absent.",
    "level": "Tertiary"
  },
  "Ethos": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Ethos",
    "calculated_at": "2025-05-16T14:37:01",
    "ai_confidence": 44.7,
    "ai_mentions": 2.4,
    "ai_alignment": 5.0,
    "ai_depth": 4.6,
    "ai_intent": 4.9,
    "ai_audience": 6.4,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content redefines velocity beyond story points, emphasizing the measurement of meaningful engineering outcomes (build, test, deploy, learn). However, it does not explicitly reference foundational beliefs, convictions, or underlying values driving these practices. The main focus is on practical, measurable metrics, not on system-level ethos. While urgency and seriousness are implied ('If you’re not measuring them, you’re not serious...'), the discussion stops short of exploring ethos as the foundational driver and does not explicitly discuss how these metrics flow from or support an underlying system ethos. There are minimal direct mentions and only surface-level conceptual alignment; depth and intent hover just below mid-scale, as the piece is more about operational clarity and process improvement for practitioners. No penalties are needed as the content is current, earnest, and not satirical.",
    "reasoning_summary": "This content clarifies that velocity means the speed of value delivery, not just story points. While it stresses real metrics and accountability, it doesn't directly address the deeper beliefs or system ethos underlying Agile or DevOps, making its fit with the 'Ethos' category limited.",
    "level": "Tertiary"
  },
  "Windows": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Windows",
    "calculated_at": "2025-05-16T14:37:01",
    "ai_confidence": 5.538,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.3,
    "ai_audience": 8.2,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content discusses software engineering velocity metrics as used by the Azure DevOps team, focusing on build, test, deploy, and learning cycles. It does not explicitly mention Windows, nor does it address Windows installation, configuration, troubleshooting, or updates. The conceptual alignment, depth, and intent are not linked to the Windows OS or its management. Though some technical readers could overlap with Windows users, the content remains focused on general DevOps and delivery metrics, not the Windows environment.",
    "reasoning_summary": "This content centers on team velocity and DevOps, not Windows. It lacks Windows-specific discussion, terminology, or relevance, making it a poor fit for the Windows category despite a technical audience overlap.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T14:37:01",
    "ai_confidence": 22.87,
    "ai_mentions": 0.7,
    "ai_alignment": 2.5,
    "ai_depth": 2.9,
    "ai_intent": 2.2,
    "ai_audience": 6.8,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "Direct references to 'organisational culture' are absent. The piece focuses on velocity and delivery metrics relevant to Agile/DevOps, but does not explore the cultural factors, leadership, or transformation aspects vital to the organisational culture category. The main theme is technical measurement, not culture. Intent is to correct technical misunderstanding rather than drive cultural change. Some relevance for a technically minded audience, but only indirect cultural implications.",
    "reasoning_summary": "This content centers on technical delivery metrics, with little direct or substantial exploration of organisational culture themes. It briefly aligns with Agile and DevOps audiences but lacks cultural depth, resulting in a low confidence fit for the category.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 64.55,
    "ai_mentions": 2.0,
    "ai_alignment": 8.5,
    "ai_depth": 6.7,
    "ai_intent": 7.2,
    "ai_audience": 8.0,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content directly addresses delivery velocity and how it's measured using build, test, deploy, and feedback times. While these metrics correlate to organizational agility and can underpin innovation, the piece never explicitly references 'innovation' itself nor directly discusses mechanisms or strategies to foster innovation. Its conceptual alignment is strong since shortening learning cycles and rapid feedback foster innovation, but the depth and explicit mentions are somewhat limited to development velocity, not broader innovation practices. The intended audience—engineering and delivery professionals—is closely aligned with audiences interested in innovation metrics, but the focus is more on process improvement than comprehensive innovation frameworks or capability. No outdated or negative tone, so no penalties applied.",
    "reasoning_summary": "This content emphasizes improving delivery speed and learning cycles, which are foundations for innovation, but never names 'innovation' or explores organizational innovation capacity in depth. It fits the category moderately well by focusing on practices that enable innovation, but not as its main subject.",
    "level": "Secondary"
  },
  "Practice": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Practice",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 89.16,
    "ai_mentions": 7.6,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.4,
    "ai_audience": 9.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content directly discusses specific, actionable practices for measuring and improving team velocity, focusing on time-to-build, self-test, deploy, and learn. It frames these as real engineering practices that can be controlled and improved, aligning closely with the Practice category. The discussion is substantive, targets practitioners (e.g., engineering teams), and maintains a focused, high signal-to-noise ratio. There are no outdated references or contradictions, and all points are tied to continuous delivery practices.",
    "reasoning_summary": "This content strongly fits the Practice category as it emphasizes concrete, actionable techniques for measuring and improving team velocity in engineering. It goes beyond theory to discuss real habits around build, test, deploy, and feedback, making it highly relevant for practitioners seeking continuous improvement.",
    "level": "Primary"
  },
  "Increment": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Increment",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 46.083,
    "ai_mentions": 0.9,
    "ai_alignment": 4.6,
    "ai_depth": 4.3,
    "ai_intent": 5.0,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content centers on velocity as a measure of delivery speed, emphasizing build, test, deploy, and feedback cycles rather than story points. It discusses metrics tied to moving work through technical stages but does not directly mention Increments or the delivery of working software per Scrum/Agile definitions. While the underlying message aligns conceptually with value delivery and release, it lacks explicit reference to the Increment or its role as a core Scrum artifact. The depth is moderate, focused mainly on process efficiency, not Increment best practices or integration with Scrum artifacts. The target audience (engineering teams) partially overlaps with those interested in Increments, and the majority of the content is on-topic.",
    "reasoning_summary": "While the post discusses real delivery and value creation, it doesn't reference Increments or Scrum artifacts directly, focusing instead on velocity and process metrics. It's moderately aligned with the Increment category conceptually but lacks direct connection and depth on Increment-specific best practices.",
    "level": "Tertiary"
  },
  "Lean Startup": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 62.91,
    "ai_mentions": 2.8,
    "ai_alignment": 7.9,
    "ai_depth": 7.7,
    "ai_intent": 7.1,
    "ai_audience": 6.3,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content does not explicitly reference 'Lean Startup' or its terminology (e.g., MVP, Build-Measure-Learn), resulting in a low direct mentions score. However, conceptually it aligns with Lean Startup principles by emphasizing rapid iteration, feedback, and validated learning within development teams. The discussion of time-to-learn and using real user feedback signals some Lean ideas, and the intent is to encourage process improvement in value delivery, which overlaps with Lean Startup interests. Still, the primary focus is on engineering velocity metrics, not startup experimentation, so audience and alignment are good but not maximal. Depth is moderately strong due to the breakdown of specific metrics, although lacking explicit Lean Startup methodology. No penalties apply; content is current and not critical or satirical.",
    "reasoning_summary": "This content discusses measuring real delivery speed using feedback loops and learning cycles—ideas aligned with Lean principles—but doesn't explicitly frame them in Lean Startup terms or audience. Depth and alignment are solid, but it's more about engineering metrics than startup methodology.",
    "level": "Secondary"
  },
  "Throughput": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Throughput",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 31.16,
    "ai_mentions": 1.1,
    "ai_alignment": 3.7,
    "ai_depth": 3.1,
    "ai_intent": 3.2,
    "ai_audience": 7.2,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content primarily discusses 'velocity' in terms of build, test, deploy, and feedback cycle times, explicitly noting it's not about story points. While these metrics (like time to build, deploy, etc.) relate to delivery speed and flow, they describe cycle time, not throughput. Throughput—as measured by items completed over time (e.g., how many features or tickets done per week)—is not directly discussed, nor are its visualization (CFDs) or use in forecasting. No direct mention or analysis of throughput occurs, and the focus is on improving the lean time-to-value loops rather than item quantity delivered per period. The content's intent, depth, and conceptual alignment with throughput are limited, though the audience and delivery context are similar.",
    "reasoning_summary": "This content focuses on velocity and delivery cycle times, not throughput. It doesn't analyze completed items over time or throughput as a metric. While relevant to delivery teams, its main themes don't match throughput's core meaning, resulting in a low confidence score for this category.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 22.27,
    "ai_mentions": 0.2,
    "ai_alignment": 1.42,
    "ai_depth": 2.17,
    "ai_intent": 1.54,
    "ai_audience": 7.13,
    "ai_signal": 4.33,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content redefines velocity in software teams, emphasizing delivery metrics such as build, test, deploy, and feedback cycles. There is no mention of asynchronous development, distributed teams, or asynchronous practices. The main ideas focus on continuous delivery and internal team metrics rather than methodologies for collaborating asynchronously across locations or time zones. The audience partially overlaps (engineering teams), but not specifically those interested in asynchronous workflows. Alignment and depth are low due to lack of conceptual connection.",
    "reasoning_summary": "This content is about measuring team delivery speed using engineering metrics, but doesn't reference asynchronous development or related practices. Its focus is on continuous delivery, not asynchronous teamwork or collaboration.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 92.7,
    "ai_mentions": 7.3,
    "ai_alignment": 9.7,
    "ai_depth": 9.5,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content focuses on velocity as a true measure of software delivery speed, using metrics closely tied to frequent releases: build, test, deploy, and feedback cycles. It explicitly references 'continuous delivery,' and all four described metrics (time to build, test, deploy, and learn) are core elements in CI/CD practices. The discussion is deep and technical, targeting an audience of engineers or DevOps practitioners, and avoids off-topic tangents. No penalties are warranted as the content is current and in line with modern best practices.",
    "reasoning_summary": "This content strongly supports the Frequent Releases category by emphasizing key delivery metrics, advocating for continuous delivery, and addressing a technical audience. It demonstrates deep alignment, relevance, and specificity to best practices in frequent software releases.",
    "level": "Primary"
  },
  "Philosophy": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T14:36:58",
    "ai_confidence": 34.97,
    "ai_mentions": 1.3,
    "ai_alignment": 3.7,
    "ai_depth": 3.6,
    "ai_intent": 4.3,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content challenges a common misunderstanding about 'velocity,' urging readers to focus on actual value delivery instead of just story points. This introduces some philosophical framing (rethinking what matters), but the bulk of the content is devoted to describing concrete team-level metrics (build times, deployment, etc.) and process concerns. The discussion is primarily about how to measure velocity in practice rather than exploring deeper philosophical foundations or the 'why' behind these practices. There is some alignment regarding questioning traditional metrics, but insufficient depth or explicit philosophical exploration as per category guidelines.",
    "reasoning_summary": "While the content questions standard velocity metrics—hinting at philosophical reflection—it mostly details practical measurement, lacking deep exploration of foundational beliefs. It focuses on delivery techniques rather than the underlying philosophical reasons, so its fit to the Philosophy category is limited.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Tool",
    "calculated_at": "2025-05-16T14:36:58",
    "ai_confidence": 79.1,
    "ai_mentions": 7.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.9,
    "ai_intent": 8.5,
    "ai_audience": 7.6,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content discusses advanced velocity measurement using four flow metrics within the context of Azure DevOps, a recognized tool in Agile/DevOps workflows. The discussion is conceptually aligned with tool application and improvement practices, offering meaningful depth through specific metric explanations. Intent targets practitioners interested in value delivery via tooling, with minimal off-topic content. No evidence of outdated or negative framing.",
    "reasoning_summary": "This content fits the 'Tool' category confidently because it explores velocity metrics using Azure DevOps, with practical focus on tool-driven delivery. It’s targeted, insightful, and relevant to Agile/DevOps practitioners seeking to optimize with real engineering workflows.",
    "level": "Secondary"
  },
  "Technical Leadership": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T14:36:58",
    "ai_confidence": 87.7,
    "ai_mentions": 6.3,
    "ai_alignment": 9.2,
    "ai_depth": 8.5,
    "ai_intent": 8.8,
    "ai_audience": 8.6,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content reframes velocity in agile teams, focusing on delivery metrics (build, test, deploy, feedback) rather than story points. This is highly relevant to technical leadership, aligning with key themes like continuous improvement, DevOps metrics, and value delivery. Though it doesn't use the explicit term 'technical leadership', it targets engineering leaders by showing how to guide teams through actionable metrics supporting agile best practices. The discussion is substantial but not exhaustively deep on leadership methods, and its intent is to inform technical leaders on how to better measure delivery. Audience and purpose fit is strong, and the content is wholly focused and up-to-date, with no penalties warranted.",
    "reasoning_summary": "This piece smartly redefines velocity in agile engineering, guiding leaders to adopt meaningful DevOps metrics. It’s practical, audience-focused, and advocates continuous improvement, making it a strong fit for technical leadership—even though it stops just shy of explicitly naming the role.",
    "level": "Primary"
  },
  "Continuous Learning": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T14:36:57",
    "ai_confidence": 62.56,
    "ai_mentions": 1.2,
    "ai_alignment": 7.6,
    "ai_depth": 6.5,
    "ai_intent": 6.9,
    "ai_audience": 8.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content doesn't directly mention 'Continuous Learning', resulting in a low 'mentions' score. Core metrics discussed (Time to Build, Test, Deploy, Learn) overlap partially with continuous feedback and learning cycles but are mainly framed around velocity and delivery. 'Time to Learn' is most relevant, but the main discussion is about delivery speed, not growth mindsets or broader team learning. Depth and intent reflect this partial alignment. The audience and signal scores are higher, as the focus targets Agile/DevOps teams and is concise. No outdated or contradictory elements are present.",
    "reasoning_summary": "This content links delivery metrics with user feedback ('Time to Learn'), lightly touching on Continuous Learning. However, the main emphasis is delivery velocity, not growth or team learning principles, so alignment is partial. Most relevant for Agile/DevOps practitioners interested in improvement cycles.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T14:36:57",
    "ai_confidence": 58.7,
    "ai_mentions": 2.6,
    "ai_alignment": 7.2,
    "ai_depth": 5.8,
    "ai_intent": 6.8,
    "ai_audience": 6.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content discusses how to properly interpret 'velocity' in a software team, emphasizing metrics that demonstrate the flow of value (build, test, deploy, feedback). This reflects Agile principles and continuous improvement—a core concept in Agile Transformation. However, it does not explicitly mention Agile Transformation, frameworks, or organizational culture shifts, and it focuses mostly on metrics for engineering teams, not the broader organizational or change management context typical of Agile Transformation. The main intent is educational for practitioners, with moderate audience and signal alignment, but limited depth regarding transformation at scale.",
    "reasoning_summary": "The content highlights value flow and modern Agile metrics, aligning with Agile thinking but not directly engaging with organizational Agile transformation. Its focus is on team-level engineering practices, not on broader change strategies or leadership aspects.",
    "level": "Tertiary"
  },
  "Product Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Management",
    "calculated_at": "2025-05-16T14:36:57",
    "ai_confidence": 60.96,
    "ai_mentions": 2.2,
    "ai_alignment": 6.4,
    "ai_depth": 5.6,
    "ai_intent": 6.2,
    "ai_audience": 5.7,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content discusses velocity as measuring idea-to-value cycle time, focusing on build, test, deploy, and feedback. This aligns somewhat with product management's interest in delivery speed and measuring product success. However, it mainly emphasizes engineering processes rather than strategic aspects of product management (e.g., vision, stakeholder balance, or business objectives). Product Management-related terms and frameworks are not directly mentioned, and the primary audience seems engineering-focused. While relevant metrics and delivery speed matter to product managers, the depth and framing are more aligned with engineering management or DevOps teams.",
    "reasoning_summary": "While the content touches on delivery metrics relevant to product management, its emphasis is on engineering speed and DevOps practices. It lacks explicit mention or depth on strategic product management roles and frameworks, making the fit partial.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 93.7,
    "ai_mentions": 7.2,
    "ai_alignment": 9.7,
    "ai_depth": 8.9,
    "ai_intent": 9.3,
    "ai_audience": 8.8,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly addresses operational efficiency within Agile/DevOps by reframing velocity with actionable metrics (build, test, deploy, feedback times) and emphasizing practical measurement over theoretical constructs. Detailed explanations for each metric offer substantive depth, clearly targeting engineering practitioners focused on process improvement. The focus is highly relevant and performance-driven, with minimal off-topic content and no outdated perspectives.",
    "reasoning_summary": "This piece thoroughly explains practical, metrics-driven ways to enhance delivery speed in Agile/DevOps. It prioritizes workflow optimization and continuous delivery, making it highly relevant and aligned with operational practices.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T14:36:58",
    "ai_confidence": 28.4,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.5,
    "ai_intent": 5.4,
    "ai_audience": 6.3,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on measuring software delivery velocity by looking at practical engineering metrics (build, test, deploy, feedback) rather than story points. There are no direct mentions of complexity thinking or its frameworks (e.g., Cynefin), and the discussion does not explore non-linear dynamics, emergence, or self-organization. While it touches on feedback loops—relevant to systems thinking—it does not explicitly reference or align deeply with complexity theory principles. The intent is practical guidance for engineering teams, not an exploration of complexity. The audience aligns moderately, as those interested in DevOps may also be interested in complexity, but the framing is not for complexity practitioners or theorists. No irrelevant or outdated content is present; penalties were not applied.",
    "reasoning_summary": "This content focuses on practical DevOps metrics and rapid feedback, not on complexity science or its frameworks. While relevant to engineering teams, it does not explicitly discuss complexity theory, resulting in a low confidence fit for the 'Complexity Thinking' category.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 90.2,
    "ai_mentions": 8.6,
    "ai_alignment": 9.2,
    "ai_depth": 9.0,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content explicitly references the Azure DevOps team and contextualizes delivery metrics directly within the Azure DevOps environment. It avoids generic Agile or DevOps discussion, instead focusing on how Azure DevOps teams define and measure velocity through concrete, relevant metrics: Time to Build, Time to Self-Test, Time to Deploy, and Time to Learn. The discussion is practical, aligns with DevOps best practices, and targets practitioners seeking to optimize their delivery using Azure DevOps. Slight minor deduction for not exploring multiple features/areas of Azure DevOps (e.g., Boards, Repos), but overall, content is focused, relevant, and rich in actionable detail for the intended audience.",
    "reasoning_summary": "This piece focuses specifically on how Azure DevOps teams measure real delivery velocity using meaningful engineering metrics. It provides substantial practical detail, stays on topic, and directly addresses Azure DevOps functionality, making it highly aligned with the category.",
    "level": "Primary"
  },
  "Flow Efficiency": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T14:36:58",
    "ai_confidence": 88.38,
    "ai_mentions": 6.7,
    "ai_alignment": 9.6,
    "ai_depth": 8.7,
    "ai_intent": 9.0,
    "ai_audience": 8.9,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content aligns directly with Flow Efficiency principles, reframing velocity in terms of throughput and workflow stages. It explicitly details four metrics representing flow (build, test, deploy, feedback loops)—all critical in Lean/Agile and DevOps continuous improvement. While 'Flow Efficiency' is not directly named, its practices and metrics are core. The audience is practitioners focused on optimizing delivery speed, matching the category. The discussion is thorough and focused, with no penalties applied.",
    "reasoning_summary": "This content strongly fits Flow Efficiency by reframing velocity in terms of end-to-end flow metrics (build, test, deploy, feedback) rather than just story points. Its focus on real throughput, actionable metrics, and continuous delivery makes it very relevant for teams optimizing work flow speed.",
    "level": "Primary"
  },
  "Strategic Goals": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T14:37:01",
    "ai_confidence": 34.9,
    "ai_mentions": 0.6,
    "ai_alignment": 3.7,
    "ai_depth": 4.1,
    "ai_intent": 3.3,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content directly redefines velocity—not as story points, but as value delivered via cycle time metrics—without explicitly referencing strategic goals or long-term objectives. Its focus is on engineering practices (build, test, deploy, learn) for continuous delivery. While the emphasis on measuring delivery speed connects to agility and improvement, the discussion remains tactical. There’s minimal alignment with setting or tracking organizational-wide, strategic objectives. The audience (tech leads or delivery teams) matches Agilists but not strategic planners. High focus and low noise yield signal points, but the core fails to address frameworks, adaptation techniques, or broader business alignment required of the 'Strategic Goals' category.",
    "reasoning_summary": "While the article highlights agile delivery metrics, it focuses on operational team practices rather than organizational strategic goals. Its relevance to Agile principles is clear, but it doesn’t address long-term objectives, strategic alignment, or broader business goals necessary for this category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T14:36:57",
    "ai_confidence": 2.25,
    "ai_mentions": 0.0,
    "ai_alignment": 0.9,
    "ai_depth": 0.8,
    "ai_intent": 2.1,
    "ai_audience": 5.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content centers exclusively on defining and measuring engineering velocity with specific DevOps metrics such as build time and deploy time. There is no mention, explicit or implied, of Liberating Structures, facilitation techniques, or team participatory methods. The target audience is likely technical practitioners interested in metrics but not facilitation. Only the faintest conceptual overlap exists in terms of process improvement, but that's highly generic. There is no discussion of Liberating Structures methods, philosophy, or application. No dimension warranted a penalty as the content is current and neutral in tone.",
    "reasoning_summary": "This content focuses entirely on DevOps velocity metrics, with no reference or connection to Liberating Structures or facilitation methods. It targets engineers, not facilitators. Therefore, it does not fit the Liberating Structures category.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T14:37:01",
    "ai_confidence": 90.3,
    "ai_mentions": 7.8,
    "ai_alignment": 9.5,
    "ai_depth": 8.8,
    "ai_intent": 9.2,
    "ai_audience": 8.6,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content directly addresses value delivery by redefining velocity in terms of transforming ideas into value. It explicitly lists metrics (build, test, deploy, learn) that reflect core CI/CD and value delivery practices within Agile/DevOps. Examples connect real engineering practices to value output, not just process steps. Target audience is practitioners aiming to improve value throughput. The discussion is focused, actionable, and deeply aligned with the category. No outdated practices or contradictions.",
    "reasoning_summary": "This content reframes velocity to focus on value delivery and illustrates it with actionable DevOps metrics, aligning closely with Agile value delivery principles and practitioner needs. Its clarity and relevance strongly fit the category.",
    "level": "Primary"
  },
  "Organisational Physics": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T14:36:57",
    "ai_confidence": 38.21,
    "ai_mentions": 0.2,
    "ai_alignment": 5.7,
    "ai_depth": 4.9,
    "ai_intent": 6.8,
    "ai_audience": 5.5,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "Direct mentions of Organisational Physics or systems thinking are absent, and the focus is on defining and measuring velocity in software delivery teams. There is moderate alignment: the content touches on organisational performance and flow (e.g., feedback, delivery speed), but doesn't explore holistic organisational dynamics, complex systems, or leadership influences as outlined in the category definition. The discussion is specific and relevant to engineering teams, which partially overlaps with practitioners interested in organisational improvement, but lacks the strategic breadth and depth expected for full fit. No outdated practices or contradictory tones were present.",
    "reasoning_summary": "This content discusses engineering team metrics and process improvement, moderately aligning with organisational dynamics but lacking explicit systems thinking or holistic views. It provides some relevant insights but falls short of fully embodying Organisational Physics.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T14:37:01",
    "ai_confidence": 7.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.9,
    "ai_intent": 1.1,
    "ai_audience": 2.1,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on definitions and metrics of team velocity within an engineering context. Psychological safety is neither directly mentioned nor conceptually discussed. The primary subject is continuous delivery metrics, with no exploration of team dynamics, risk-taking, or open communication central to psychological safety. Audience is technical, partially overlapping, but the signal-to-noise is low for the target category.",
    "reasoning_summary": "This piece centers on velocity metrics, not psychological safety. There's no direct reference or exploration of psychological safety themes, making it a poor fit for the category despite its relevance to engineering teams.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 34.74,
    "ai_mentions": 0.3,
    "ai_alignment": 4.9,
    "ai_depth": 5.0,
    "ai_intent": 3.7,
    "ai_audience": 6.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content addresses velocity as a measure of delivery in software teams, focusing on metrics like build and deploy times. While it discusses value delivery and feedback, these are grounded in engineering practices rather than entrepreneurial concepts such as innovation, risk-taking, or business value creation. There are no direct references to entrepreneurship, with the main audience being practitioners interested in operational efficiency within teams. While there is some conceptual overlap in value creation and iteration, the content never situates itself in the context of entrepreneurial mindset or strategic decision-making around starting or scaling ventures.",
    "reasoning_summary": "This content centers on software delivery metrics and team practices, not entrepreneurship. While it nods to value creation and iteration, it doesn't explore entrepreneurial principles or innovation, so its fit under 'Entrepreneurship' is limited.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Framework",
    "calculated_at": "2025-05-16T14:37:03",
    "ai_confidence": 23.86,
    "ai_mentions": 1.6,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.3,
    "ai_audience": 7.2,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content reframes velocity not as a simple story point metric but as real-time delivery using engineering flow metrics cited by the Azure DevOps team. It focuses on measuring build, test, deploy, and feedback, relating more to operational metrics within a DevOps or Agile team than to structured frameworks (e.g., Scrum, SAFe). There is no discussion of frameworks, their principles, or how to implement or adapt them. The information is more tactical and metrics-driven, suited for practitioners interested in process improvement, but does not directly fit the 'Framework' category as defined. Mentions of framework-related concepts or terminology are minimal and not explicit. No penalties were needed, as the tone and recency are both appropriate.",
    "reasoning_summary": "This content focuses on delivery metrics for velocity rather than discussing Agile, DevOps, or Lean frameworks. While relevant to teams practicing these methods, it doesn't explore frameworks or their application, making it a poor fit for the 'Framework' category.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 69.62,
    "ai_mentions": 3.9,
    "ai_alignment": 7.4,
    "ai_depth": 7.9,
    "ai_intent": 7.1,
    "ai_audience": 7.7,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content reframes velocity away from story points, focusing instead on delivering value and measuring feedback loops, flow, and real-world metrics—all in the spirit of Lean's emphasis on value creation and continuous improvement. It names Lean concepts—flow, feedback, and measurable value—without directly labeling them as Lean, and the context is Agile/DevOps. While it aligns strongly with Lean Principles in intent and practice, the lack of explicit Lean terminology and more in-depth discussion on waste reduction, specific Lean tools, or broader organisational transformation prevents a higher score. The audience is technical and process-oriented; signal-to-noise is high, with very little superfluous or tangential content.",
    "reasoning_summary": "The content aligns closely with Lean Principles by emphasizing delivery speed, flow, and continuous feedback, though it stops short of explicitly labeling its approach as Lean or providing deep theory. It’s focused, relevant, and practical, targeting technical teams seeking process improvement.",
    "level": "Secondary"
  },
  "Scrum": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Scrum",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 34.95,
    "ai_mentions": 1.1,
    "ai_alignment": 3.4,
    "ai_depth": 4.0,
    "ai_intent": 4.3,
    "ai_audience": 6.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content discusses velocity as a performance metric but does not directly mention Scrum. Its focus is primarily on flow metrics relevant to continuous delivery and DevOps, not on Scrum's framework, roles, or practices. While velocity is a term used in Scrum, the usage here is more aligned with engineering/DevOps pipelines than Scrum-specific velocity (story points per sprint). The discussion is somewhat related to Agile principles, but it lacks substantial conceptual or thematic alignment, and does not address Scrum artifacts, events, or roles. The target audience is technical teams involved in product delivery, somewhat overlapping with Scrum practitioners, but the main focus remains outside the core Scrum context.",
    "reasoning_summary": "This content references velocity—a Scrum metric—but defines and applies it using DevOps-style flow metrics rather than Scrum principles. It only loosely connects to Scrum and is more focused on continuous delivery than on Scrum’s methodology.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Principle",
    "calculated_at": "2025-05-16T14:36:57",
    "ai_confidence": 83.7,
    "ai_mentions": 7.1,
    "ai_alignment": 9.4,
    "ai_depth": 8.9,
    "ai_intent": 9.1,
    "ai_audience": 8.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content discusses how velocity should genuinely measure value delivery, not just story points, emphasizing actionable principles like empiricism, value delivery, continuous improvement, and adaptability. It explicitly details four measurable metrics tied directly to DevOps/Agile principles and encourages teams to adopt them, aligning intent and audience with practitioners focused on principles. There is strong conceptual alignment, actionable depth, and an explicit call to use principles rather than vague values. No penalties were warranted.",
    "reasoning_summary": "The content redefines velocity through actionable, principle-driven metrics, linking delivery speed directly to value, feedback, and improvement. Its focus on real-world DevOps flow, empiricism, and value delivery makes it highly relevant to the Principle category, with clear guidance and intent for practitioners.",
    "level": "Primary"
  },
  "Product Owner": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 14.3,
    "ai_mentions": 0.3,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.5,
    "ai_audience": 2.8,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses velocity measurement in software teams, focusing on engineering metrics like build, test, deploy, and feedback speed. Nowhere does it mention the Product Owner accountability or address themes such as backlog prioritization, stakeholder communication, or value maximization as a Product Owner responsibility. The main audience is engineering, not Product Owners, and discussion is limited to delivery metrics internal to development. So, there's only marginal conceptual overlap regarding value delivery, but this is not framed from a Product Owner's perspective or accountability.",
    "reasoning_summary": "This content centers on engineering velocity metrics, not the Product Owner’s accountability. Since it doesn’t reference Product Ownership roles or responsibilities, its fit with the category is very low.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 22.942,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 7.0,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on measuring engineering velocity via build, test, deploy, and feedback cycle times, but does not mention Minimum Viable Product (MVP) or discuss MVP-specific concepts like hypothesis testing, validation, or MVP strategy. The audience (software teams) overlaps somewhat, but the content centers on continuous delivery and engineering flow, not MVP methodology. There is no thematic or explicit alignment with the MVP category’s strict definition.",
    "reasoning_summary": "This content emphasizes engineering velocity metrics, not MVP concepts. It doesn't discuss building or validating a Minimum Viable Product, making its fit for the MVP category low despite some overlap in intended audience and agile delivery themes.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Observability",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 63.55,
    "ai_mentions": 1.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.4,
    "ai_intent": 7.8,
    "ai_audience": 8.2,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content discusses using key engineering metrics (build, test, deploy, feedback times) to assess team velocity and delivery, aligning with observability principles (measuring and understanding internal system states). While it does not use the term 'observability' or discuss logs/traces directly, it emphasizes actionable measurement, transparency, and data-driven improvement within software engineering. Depth is moderate—metrics are listed but not deeply explored with tooling or case studies.",
    "reasoning_summary": "This piece promotes measuring software delivery metrics to improve team performance, directly supporting observability's goal of making work transparent and measurable. While terms like 'observability' aren't named, the focus on actionable metrics and continuous delivery fits the category well.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 11.84,
    "ai_mentions": 0.5,
    "ai_alignment": 1.3,
    "ai_depth": 1.5,
    "ai_intent": 1.4,
    "ai_audience": 3.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content centers on measuring velocity in engineering teams using four specific operational metrics. It does not explicitly reference Decision Theory or any of its core principles (e.g., probability, heuristics, behavioral economics, or frameworks for decision-making under uncertainty). The purpose is to clarify how to measure delivery speed—not to guide or dissect decision-making processes. While 'Time to Learn' touches on the feedback loop, it isn't positioned within a decision-theoretic framework. The audience is engineering/DevOps, not decision theorists. Minimal relevance results in low scores across all decision theory dimensions.",
    "reasoning_summary": "This content focuses on practical DevOps metrics for delivery speed, not on decision-making processes or theories. It barely aligns with Decision Theory, earning a very low confidence score.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 78.53,
    "ai_mentions": 2.8,
    "ai_alignment": 8.5,
    "ai_depth": 8.3,
    "ai_intent": 7.9,
    "ai_audience": 8.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content directly discusses key metrics related to technical engineering practices—build, test, deploy, feedback loops—that are central to technical excellence, particularly continuous delivery. While 'technical excellence' isn't mentioned by name and the framing is about velocity, the alignment is strong: metrics like time to build, test, and deploy are operationalizations of technical excellence principles. The discussion is fairly deep, explaining not only what to measure but why it matters for real delivery speed. Audience is clearly engineering-oriented. No outdated or contradictory tone is present.",
    "reasoning_summary": "This content effectively ties core software engineering metrics—build, test, deploy, feedback—to measuring real delivery speed, aligning well with technical excellence. While it doesn't explicitly use the term, its depth and focus on continuous delivery make it a solid fit for the category.",
    "level": "Secondary"
  },
  "Software Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Software Development",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 96.2,
    "ai_mentions": 7.8,
    "ai_alignment": 9.7,
    "ai_depth": 9.4,
    "ai_intent": 9.0,
    "ai_audience": 9.2,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 96.0,
    "reasoning": "The content directly engages with core software development methodologies and practices by redefining 'velocity' through build, test, deploy, and feedback metrics—classic elements of Agile, DevOps, CI/CD, and continuous delivery. The discussion specifically references real engineering processes (e.g., automated tests, deployment, feedback) and targets a development practitioner audience. It provides substantial, actionable detail far beyond surface mentions, explaining the rationale for each metric and insisting on the methodological seriousness of continuous delivery. No penalties apply, as it is current, methodologically faithful, and suitably technical.",
    "reasoning_summary": "This content strongly fits 'Software Development,' going beyond surface-level mentions to focus on delivery metrics central to Agile and DevOps. It targets engineering practitioners, offers detailed best practices, and closely aligns with the category’s core principles.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 19.45,
    "ai_mentions": 0.6,
    "ai_alignment": 2.15,
    "ai_depth": 2.85,
    "ai_intent": 2.05,
    "ai_audience": 7.0,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content clarifies the proper meaning of 'velocity' in Agile, emphasizing technical flow metrics like build, test, deploy, and feedback cycles. While these metrics are indirectly relevant to troubleshooting, the primary focus is on optimizing delivery flow rather than outlining explicit techniques or methodologies for the identification and resolution of technical issues. There are no direct references or case studies on troubleshooting. Audience alignment and signal are moderate, as the content is technical and addresses engineering teams, but the other dimensions are low since troubleshooting is not the core intent. Penalties were not warranted as there is no outdated information or contradictory tone.",
    "reasoning_summary": "While the content targets technical teams and mentions engineering flow, its focus is on value delivery speed and measurement, not problem diagnosis or resolution. It aligns weakly with troubleshooting—scoring low on depth and alignment—so it does not confidently fit the category.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 56.37,
    "ai_mentions": 2.2,
    "ai_alignment": 5.7,
    "ai_depth": 5.8,
    "ai_intent": 5.6,
    "ai_audience": 7.9,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content focuses on redefining velocity to track real delivery speed using build, test, deploy, and feedback metrics. While 'Time to Learn' alludes to feedback loops, there are no direct mentions of experimentation, hypothesis testing, or systematic validation of assumptions. The main thrust is on measurement and continuous delivery, marginally aligning with experimentation through learning from user feedback, but lacks explicit depth about hypothesis-driven processes or experiments. The audience (engineers, Agile practitioners) fits, and the content is focused, but experimentation is only implicitly present. No penalties were needed.",
    "reasoning_summary": "This content redefines velocity using delivery metrics and emphasizes feedback, which indirectly touches on experimentation. However, it doesn't explicitly discuss hypothesis-driven experimentation or testing ideas, making the fit moderate but not strong for the category.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T14:37:03",
    "ai_confidence": 74.98,
    "ai_mentions": 2.7,
    "ai_alignment": 8.6,
    "ai_depth": 6.3,
    "ai_intent": 8.1,
    "ai_audience": 7.2,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content directly challenges the misuse of 'velocity' as merely story points and instead advocates for real empirical measurement of delivery speed using concrete, measurable metrics (build, test, deploy, feedback times). It shows strong conceptual alignment with topics in Evidence Based Management—especially 'Time to Market' and empirical decision-making—by prescribing data-driven metrics over subjective or output-focused ones. The discussion is substantial for a short post, providing actionable and relevant metrics, not just theory or opinion. The main audience is practitioners and technical leaders seeking to improve delivery by focusing on what can actually be improved and measured. Mentions of EBM or its terminology are implicit, not explicit, slightly lowering the score for direct mentions. No penalties apply as the tone is constructive, not outdated, and perfectly aligned.",
    "reasoning_summary": "This content effectively supports Evidence Based Management by advocating for actionable, data-driven metrics over subjective measures like story points. Its focus on real delivery speed and measurable process improvements aligns well, though explicit EBM references are minimal.",
    "level": "Secondary"
  },
  "Estimation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Estimation",
    "calculated_at": "2025-05-16T14:37:03",
    "ai_confidence": 37.0,
    "ai_mentions": 2.5,
    "ai_alignment": 3.8,
    "ai_depth": 3.7,
    "ai_intent": 4.0,
    "ai_audience": 6.3,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content explicitly discusses velocity, challenging the misconception that it equates to story points and instead reframes velocity as a set of delivery metrics (build, test, deploy, feedback). While velocity is linked to estimation in agile, this piece focuses on delivery speed and flow metrics over estimation techniques. There is no mention of estimation practices, empirical forecasting, or collaborative techniques, and the content lacks discussion on improving or practicing estimation, which are central to the category. Its primary audience—engineering teams using agile practices—does align somewhat, and the signal-to-noise ratio is strong, but the overall fit to 'Estimation' is tangential at best.",
    "reasoning_summary": "This content redefines velocity by emphasizing delivery and feedback metrics, not estimation techniques. It doesn’t cover estimation practices, empirical data use, or collaborative methods directly, so it only partially aligns with the Estimation category. The relevance is more indirect than core.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 7.85,
    "ai_mentions": 0.4,
    "ai_alignment": 0.5,
    "ai_depth": 1.2,
    "ai_intent": 1.1,
    "ai_audience": 2.0,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on velocity and metrics related to delivery speed (build, test, deploy, feedback). It does not mention or discuss the Daily Scrum, its purpose, meeting structure, participant roles, or any event-specific practices. The explicit absence of any Daily Scrum context, terminology, or intent causes extremely low scores across all dimensions. However, it remains technically accurate, so penalties for outdatedness or contradicting tone do not apply.",
    "reasoning_summary": "This content is entirely about velocity metrics and continuous delivery, with zero reference to the Daily Scrum event. Its focus and context do not align with the category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 13.626,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.8,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses narrowly on the definition and measurement of 'velocity' at the team level, specifically for engineering/dev teams (e.g., build/test/deploy cycles). There are no direct mentions of portfolio management. While velocity is a useful metric, it is presented strictly in a team context, with no discussion of aligning projects to strategy, portfolio-level oversight, or related practices. The intent is instructive for practitioners aiming to improve CI/CD, not for portfolio managers or strategists. The audience is at the practitioner/engineering level, and while the content is clear and focused, it has minimal signal for the portfolio management category.",
    "reasoning_summary": "This content is team-focused and centers on engineering velocity metrics, not on managing a portfolio of projects or strategic alignment. There's little to no overlap with portfolio management concepts, so confidence in this category fit is very low.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 92.3,
    "ai_mentions": 7.1,
    "ai_alignment": 9.5,
    "ai_depth": 9.2,
    "ai_intent": 9.3,
    "ai_audience": 9.0,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content sharply focuses on how delivery velocity in Agile teams is enabled through core engineering practices, specifically advocating for metrics like build, test, deploy, and feedback speed. It discusses automation, continuous delivery, and testing in depth. While terms like 'continuous delivery' and 'automated tests' are named, the overall framework strongly aligns with promoting Agile engineering, targeting practitioners with useful, actionable advice.",
    "reasoning_summary": "This post directly promotes engineering practices in Agile by emphasizing automated builds, tests, and continuous delivery metrics over traditional story point counting. The discussion is in-depth, purpose-driven, and targets engineers seeking to improve real delivery speed.",
    "level": "Primary"
  },
  "Lean": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Lean",
    "calculated_at": "2025-05-16T14:37:08",
    "ai_confidence": 41.85,
    "ai_mentions": 0.8,
    "ai_alignment": 5.6,
    "ai_depth": 4.9,
    "ai_intent": 5.3,
    "ai_audience": 7.2,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content never explicitly mentions Lean or its core terminology such as Kaizen or waste reduction. However, it broadly aligns with Lean's focus on value creation and process flow by emphasizing velocity as the speed from idea to delivery value. It highlights metrics reflecting flow efficiency but does not reference Lean-specific frameworks (e.g., value stream mapping, 5S). The intent is to promote continuous delivery, which overlaps with Lean themes but may also fit Agile or DevOps without clear Lean context. Audience targeting is appropriate for Lean-interested practitioners, and the content is focused, but the explicit Lean context is weak, resulting in a modest confidence score.",
    "reasoning_summary": "While the content emphasizes flow, value delivery, and measurement—key Lean themes—it lacks direct references to Lean terminology or principles, aligning more broadly with agile delivery concepts. The fit is partial, not direct, resulting in moderate confidence.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 77.17,
    "ai_mentions": 3.9,
    "ai_alignment": 8.3,
    "ai_depth": 7.6,
    "ai_intent": 7.3,
    "ai_audience": 8.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content challenges a common misconception about 'velocity,' focusing on rapid value delivery through build, test, deploy, and feedback—core Agile concepts. While it doesn’t explicitly reference 'Organisational Agility,' its metrics-based approach to continuous delivery aligns closely with the category's definition, particularly around adaptability, feedback integration, and responsiveness. The discussion assumes a practitioner/technical audience and is largely on-topic. The depth is strong, exploring concrete stages/processes, though the conversation centers on engineering teams rather than organisational-wide agility transformation. There are no outdated practices or contradictory tones, so no penalties were applied.",
    "reasoning_summary": "This content smartly reframes velocity as value delivery cycles, emphasizing fast feedback and measurable metrics. The focus fits well with organisational agility principles, demonstrating practical steps for enhanced adaptability, even though it targets technical teams rather than whole-organisation change.",
    "level": "Secondary"
  },
  "Customer Feedback Loops": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 57.094,
    "ai_mentions": 2.6,
    "ai_alignment": 7.2,
    "ai_depth": 6.9,
    "ai_intent": 6.7,
    "ai_audience": 7.4,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content discusses velocity metrics for delivery teams, listing 'Time to Learn' as the speed at which user feedback informs decisions, directly referencing a feedback loop. However, most of the focus is on other metrics such as build and deploy times, with only a brief mention of customer feedback. The main topic is velocity optimization, not feedback integration processes. Thus, while there is conceptual touchpoint and some alignment, the depth and frequency of direct feedback loop discussion is limited. The audience (DevOps/product teams) overlaps somewhat with the target for feedback loops, but most of the message is centered on operational metrics rather than methods for collecting and acting on customer feedback.",
    "reasoning_summary": "This content touches briefly on customer feedback as part of measuring velocity but focuses more on delivery metrics. While it aligns conceptually with feedback loops, it doesn't explore mechanisms or practices for integrating feedback, making its fit with the category partial but not strong.",
    "level": "Tertiary"
  },
  "Agile Product Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 63.18,
    "ai_mentions": 2.5,
    "ai_alignment": 7.2,
    "ai_depth": 7.0,
    "ai_intent": 6.9,
    "ai_audience": 7.0,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content directly discusses delivery velocity and ties it to real Agile metrics like build, test, deploy, and feedback, referencing the value delivery emphasis in Agile. However, it does not explicitly reference Agile Product Management, product owners, or backlog prioritization; its audience skews toward engineering teams and practitioners interested in delivery metrics, which are closely related but not strictly product management-focused. The content aligns well with Agile principles, especially continuous delivery and learning, but lacks deep engagement with product-centric roles or strategic alignment topics, so confidence is moderate.",
    "reasoning_summary": "This content connects delivery metrics and continuous value flow—core Agile concepts—but is more technology/process-focused than strictly product management. Its depth and alignment with Agile principles are strong, though product management themes are present only implicitly.",
    "level": "Secondary"
  },
  "Agile Planning": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 83.95,
    "ai_mentions": 4.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 7.8,
    "ai_audience": 8.8,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content discusses a common Agile Planning metric (velocity), challenges a common misconception, and promotes measuring delivery using actual flow-of-work metrics (build, test, deploy, feedback), which closely aligns with Agile's focus on empirical planning, feedback loops, and value delivery. It provides concrete metrics and rationale, offering depth beyond surface definitions. The language is targeted at engineering teams/practitioners, the intent supports Agile Planning improvement, and the focus remains tightly on planning for delivery, though 'Agile Planning' is not named directly. No penalty applies as the content is contemporary, positive, and on-topic.",
    "reasoning_summary": "This content strongly supports Agile Planning by challenging story-point-based velocity and advocating for real flow metrics aligned with Agile principles. It offers actionable, in-depth guidance for teams seeking true delivery optimization, fitting the category's audience and intent well.",
    "level": "Primary"
  },
  "Evidence Based Leadership": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T14:37:00",
    "ai_confidence": 87.2,
    "ai_mentions": 6.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.4,
    "ai_intent": 8.6,
    "ai_audience": 8.7,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses key metrics for leadership decisions (Time to Build, Test, Deploy, Learn) and argues for their importance in measuring real delivery speed. It aligns with evidence-based leadership by emphasizing empirical metrics over subjective measures like story points. The article is aimed at team leads or managers interested in data-driven improvement, thoroughly detailing why these KPIs matter and how they influence work. While it doesn't directly name 'evidence-based leadership,' it reflects the methodology and audience quite strongly. No outdated practices or penalties are necessary.",
    "reasoning_summary": "This piece strongly fits Evidence Based Leadership by advocating for real-time metrics and data-driven decision-making in team performance, replacing subjective measures with actionable KPIs. It's well-aligned, detailed, and directly relevant, clearly targeting leaders interested in empirical improvement.",
    "level": "Primary"
  },
  "Agile Values and Principles": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 44.1,
    "ai_mentions": 1.8,
    "ai_alignment": 5.6,
    "ai_depth": 5.9,
    "ai_intent": 4.2,
    "ai_audience": 7.7,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content focuses on the definition and measurement of velocity in a software delivery context. It challenges common misconceptions about velocity, emphasizing the importance of flow metrics (build, test, deploy, feedback) over simply tracking 'story points burned down.' Although this fits with Agile's emphasis on delivering value and continuous improvement, the piece does not directly mention or analyze Agile values or principles such as collaboration, customer centricity, or the Agile Manifesto. It also omits explicit connection to self-organizing teams or Agile culture, instead focusing on practical metrics and delivery process. Audience alignment and signal are relatively strong due to the engineering focus, but the lack of direct Agile framework or principles discussion keeps the confidence moderate.",
    "reasoning_summary": "While the content promotes delivering value and continuous improvement—ideas influenced by Agile—it does not directly engage with Agile values or principles. Its focus on practical metrics and delivery speed yields moderate confidence for the category.",
    "level": "Tertiary"
  },
  "Change Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Change Management",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 34.75,
    "ai_mentions": 0.8,
    "ai_alignment": 4.9,
    "ai_depth": 3.5,
    "ai_intent": 3.9,
    "ai_audience": 7.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content redefines velocity in Agile delivery as meaningful metrics (build, test, deploy, learn), but it does not directly discuss change management, its principles, stakeholder engagement, culture change, or leadership's role in transformation. The discussion is centered on team delivery metrics, which could tangentially inform a change management discussion, but the intent and main focus is on measurement within delivery cycles. While the target audience (engineering teams, DevOps practitioners) somewhat overlaps with change management stakeholders, there are minimal explicit connections to the category's core themes, and no direct mention of change management itself.",
    "reasoning_summary": "This content focuses on practical Agile delivery metrics rather than change management strategies or philosophy. While relevant for teams seeking improvement, it doesn't discuss managing organizational change, cultural alignment, or stakeholder engagement—making its fit for the Change Management category modest at best.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Kanban",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 33.75,
    "ai_mentions": 0.7,
    "ai_alignment": 3.6,
    "ai_depth": 4.1,
    "ai_intent": 3.9,
    "ai_audience": 5.5,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content doesn't mention Kanban directly, nor does it reference visualisation of work, WIP limits, or Kanban-specific practices. Discussion centers on 'velocity' and delivery metrics in an engineering/DevOps context, with four specific flow/feedback measures. While 'flow of work' and 'continuous delivery' are tangentially relevant to Kanban principles, the focus isn't on Kanban methodology or practices as described in the definition. No penalties applied as the language is current and not antagonistic to Kanban, but the lack of direct Kanban content constrains confidence.",
    "reasoning_summary": "This content discusses delivery speed and related DevOps metrics, which overlap with flow concepts relevant to Kanban, but it doesn't explicitly reference or meaningfully explore Kanban-specific principles or practices. Its alignment with Kanban is tangential rather than direct.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Market Share",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 13.246,
    "ai_mentions": 0.1,
    "ai_alignment": 1.3,
    "ai_depth": 1.6,
    "ai_intent": 1.2,
    "ai_audience": 2.0,
    "ai_signal": 1.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses software engineering velocity and internal metrics like build and deployment speed. There is no mention of market share, competitive positioning, or strategies to increase market presence. The concepts, depth, intent, and audience focus on internal team processes for delivery, not market outcomes or competitive advantage. The alignment to the market share category is minimal and indirect, resulting in a very low confidence score.",
    "reasoning_summary": "This content focuses on internal delivery metrics for software teams, not on strategies or themes related to market share. It doesn't touch on competitive positioning, customer acquisition, or similar market share topics, so fit is very low.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 7.7,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 0.7,
    "ai_intent": 1.0,
    "ai_audience": 3.2,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses alternative, metric-based measures of velocity in software delivery, focusing on engineering process efficiency. It mentions automated tests but never alludes to acceptance tests, ATDD principles, or collaborative formulation of acceptance criteria. The discussion is not about acceptance testing, stakeholder-developer collaboration, or test-driven approaches. Audience is technical but not specific to ATDD practitioners. Minimal relevance to the category.",
    "reasoning_summary": "This content centers on measuring software delivery velocity using build/test/deploy feedback loops. It doesn't mention or meaningfully address acceptance criteria, ATDD, or collaboration on acceptance tests, so it is not a good fit for the category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 22.77,
    "ai_mentions": 0.15,
    "ai_alignment": 2.2,
    "ai_depth": 2.4,
    "ai_intent": 2.7,
    "ai_audience": 5.25,
    "ai_signal": 8.75,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on redefining velocity with delivery metrics (build, test, deploy, feedback) in a software engineering context, particularly referencing the Azure DevOps team. There is no mention or discussion of Open Space Agile, Open Space Technology, or related principles such as emergence, psychological safety, or collective participation. The main ideas concentrate on process optimization and measurement, which is tangential to Open Space Agile’s emphasis on participatory transition and co-creation. While the intended audience has some overlap with agile practitioners, the discussion is only peripherally relevant to organisational agility as defined by Open Space Agile. No exclusion criterion is clearly breached, but the lack of direct or conceptual alignment results in a low confidence score.",
    "reasoning_summary": "This content focuses on engineering delivery metrics and process improvements, with no mention or conceptual alignment with Open Space Agile practices, principles, or philosophy. Its relevance to the category is minimal and incidental, resulting in a low confidence assessment.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 14.25,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 2.8,
    "ai_audience": 4.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses agile metrics (velocity) and emphasizes delivery speed over story points, referencing continuous delivery and metrics controlled within engineering. However, there are no explicit mentions of Beta Codex, nor any discussion of decentralisation, human-centric design, or organisational transformation beyond process-level improvement. The ideas are relevant to agile practitioners, but not specifically to Beta Codex principles or audience. Content focus is on engineering metrics, lacking depth or conceptual connection to Beta Codex.",
    "reasoning_summary": "The article focuses on agile delivery metrics rather than Beta Codex's themes of decentralised, adaptive organizations. It lacks direct references, relevant concepts, and depth on Beta Codex, making it only tangentially aligned, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 61.5,
    "ai_mentions": 3.2,
    "ai_alignment": 6.6,
    "ai_depth": 6.4,
    "ai_intent": 6.9,
    "ai_audience": 7.7,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content directly references 'Time to Deploy' and discusses deployment within the broader context of delivery speed metrics. There is conceptual overlap with Deployment Strategies, especially in the emphasis on measuring and optimizing the deployment process. However, it mainly focuses on velocity and delivery flow overall, mentioning deployment as one of several factors rather than exploring specific deployment methodologies. There are no explicit discussions of blue-green, canary releases, feature toggles, etc., so depth and direct mentions are moderate, but the audience and intent are well aligned. No penalties are needed as the advice is current and the tone supportive.",
    "reasoning_summary": "This content highlights deployment as a crucial metric in delivery velocity, showing clear overlap with Deployment Strategies. However, it centers on overall delivery flow and doesn’t delve into specific deployment methods, resulting in medium confidence for the category.",
    "level": "Secondary"
  },
  "DevOps": {
    "resourceId": "14E6bk6Lmo4",
    "category": "DevOps",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 91.7,
    "ai_mentions": 8.4,
    "ai_alignment": 9.7,
    "ai_depth": 9.2,
    "ai_intent": 8.8,
    "ai_audience": 8.9,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content reframes velocity in software development in a way that directly reflects DevOps principles—emphasizing value delivery, flow metrics, feedback, automation, and continuous delivery, with explicit reference to the Azure DevOps team. It deeply engages with concepts like cycle time and actionable metrics, providing a nuanced, non-superficial discussion. The target audience is clearly DevOps practitioners and engineering leaders. There is minimal off-topic material and a high signal-to-noise ratio. No outdated practices or negative tone are present.",
    "reasoning_summary": "This content strongly fits the DevOps category, focusing on flow efficiency, automation, and rapid feedback—core DevOps concepts—and addresses practitioners who care about real delivery metrics, not superficial measures like story points.",
    "level": "Primary"
  },
  "Team Motivation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 22.1,
    "ai_mentions": 0.5,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.5,
    "ai_audience": 7.7,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content redefines velocity as value delivery speed using engineering metrics, focused on build, test, deploy, and feedback time. While it addresses team processes and performance measurement, it centers on technical workflow, not directly on psychological or social drivers of team motivation. There is scant mention of engagement, empowerment, or motivational strategies. The intended audience (engineering teams) overlaps with the category's, but the thematic focus is technical process improvement rather than motivational practices.",
    "reasoning_summary": "This content prioritizes technical delivery metrics over team motivation topics. It targets engineers and highlights process improvements but lacks depth in motivational strategies, making its fit to Team Motivation minor and mostly tangential.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 24.36,
    "ai_mentions": 1.8,
    "ai_alignment": 2.6,
    "ai_depth": 2.7,
    "ai_intent": 2.9,
    "ai_audience": 6.2,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on the concept of velocity in terms of engineering efficiency and continuous delivery, mentioning 'team' generically without specifying or discussing Scrum Teams or their formal accountability. There are no direct references to Scrum practices, team structure, or the responsibilities uniquely defined for a Scrum Team in the Scrum Guide. Most discussion centers on delivery metrics relevant to any software development team, not those particular to a Scrum Team. The audience is technical practitioners, which aligns somewhat, but otherwise, topic fit is low, with minimal mention, alignment, or depth related to the Scrum Team category.",
    "reasoning_summary": "This content discusses delivery metrics and velocity for engineering teams, but it doesn't specifically address Scrum Teams or their unique accountabilities. Its focus is general and not tailored to the Scrum Team category, resulting in low confidence.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T14:37:02",
    "ai_confidence": 39.23,
    "ai_mentions": 0.3,
    "ai_alignment": 4.7,
    "ai_depth": 3.8,
    "ai_intent": 5.2,
    "ai_audience": 4.4,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content discusses metrics for measuring delivery velocity in DevOps teams, emphasizing feedback loops and speed of delivery. While it briefly touches on interconnected workflow stages (build, test, deploy, learn), it never explicitly references Systems Thinking, nor does it explore its principles or holistic analysis. The main thrust is metric-focused process improvement, not systemic organisational analysis. Depth, alignment, and intent with Systems Thinking are partial but fall short of direct engagement with the category’s purpose. Signal-to-noise is high, but key category topics (e.g., causal loop diagrams, system dynamics, interdependencies beyond engineering) are missing.",
    "reasoning_summary": "While the content covers feedback loops and workflow phases, it doesn't explicitly reference Systems Thinking or its core frameworks. Its focus is on practical delivery metrics, not broader systemic analysis, resulting in only a partial fit with the Systems Thinking category.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T14:37:05",
    "ai_confidence": 19.64,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.5,
    "ai_intent": 2.2,
    "ai_audience": 7.8,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses exclusively on defining and measuring velocity through metrics in the context of DevOps/continuous delivery, without direct or indirect mention of working agreements, team norms, or collaborative principles. The main aim is to clarify velocity misconceptions and promote specific technical metrics. There is neither a discussion of team agreements, nor techniques for creating or reviewing them, nor any focus on collaborative foundations. The intended audience somewhat aligns (engineering teams), but the topic is unrelated to the category's core meaning.",
    "reasoning_summary": "This content centers on measuring delivery speed and clarifying velocity, not on establishing or reviewing team working agreements. It doesn’t discuss collaboration norms or agreements, so confidence in its fit for the 'Working Agreements' category is very low.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 84.0,
    "ai_mentions": 3.6,
    "ai_alignment": 9.1,
    "ai_depth": 8.5,
    "ai_intent": 9.2,
    "ai_audience": 8.6,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content focuses on how 'velocity' is measured by process metrics (build, test, deploy, feedback) rather than just story points. While it uses Azure DevOps as context and discusses key practices tied to Agile/DevOps, it aligns with Application Lifecycle Management by detailing stages (development, testing, deployment, learning from feedback) and relevant KPIs. The audience is software engineering teams aiming to improve ALM effectiveness. There are direct but not repeated mentions of lifecycle stages, high conceptual alignment, and in-depth discussion on measuring delivery effectiveness, but less explicit naming of ALM. The content stays focused and relevant, with no off-topic sections.",
    "reasoning_summary": "This content applies lifecycle-focused metrics to measure real software delivery speed, aligning closely with ALM best practices. It targets engineering teams, referencing key lifecycle stages, though ALM itself isn't directly named often. The focus and depth provide strong alignment to the category.",
    "level": "Primary"
  },
  "Sprint Review": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 7.92,
    "ai_mentions": 0.3,
    "ai_alignment": 1.6,
    "ai_depth": 2.4,
    "ai_intent": 1.5,
    "ai_audience": 1.1,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on redefining the measurement of velocity, emphasizing engineering throughput and continuous delivery metrics unrelated to the Sprint Review event in Scrum. There are no direct mentions or thematic elements of Sprint Review. The intent and audience are oriented toward software performance and flow, not incremental inspection or stakeholder feedback. No evidence of stakeholder focus, backlog adaptation, or collaborative review—core to Sprint Review—appears. Thus, the content is only fractionally aligned due to a remote connection (feedback loop) but is otherwise not relevant to the Sprint Review category.",
    "reasoning_summary": "This content is about engineering metrics for velocity, not Sprint Review events or practices. While it touches on feedback, it doesn't address any Scrum Review principles or processes, so confidence in this fit is very low.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 33.18,
    "ai_mentions": 1.2,
    "ai_alignment": 3.9,
    "ai_depth": 4.0,
    "ai_intent": 3.7,
    "ai_audience": 4.2,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on measuring 'velocity' using engineering-centric metrics such as build, test, deploy, and feedback cycle times. While these concepts support Agile practices, the discussion stays technical and addresses team processes, not leadership, culture, or organizational transformation. There's no mention of leaders enabling change, empowering teams, or fostering Agile values from a leadership perspective. The audience is mainly practitioners, not Agile leaders. Therefore, classification under 'Agile Leadership' is only weakly justified.",
    "reasoning_summary": "This content is rooted in technical Agile delivery metrics and does not engage with core Agile leadership concepts like empowerment or cultural change. It's aimed at practitioners rather than leaders, making its fit with 'Agile Leadership' quite limited.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 61.2,
    "ai_mentions": 2.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.8,
    "ai_intent": 6.1,
    "ai_audience": 6.0,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content acknowledges the role of automated tests as a key DevOps metric—'Time to Self-Test: How long automated tests take to run'—directly referencing a test automation concept. However, the main theme is broader velocity metrics, not test automation principles themselves. Alignment and depth scores reflect the inclusion of automated testing within a larger CI/CD and velocity framework, but deeper exploration of test automation frameworks, practices, or specific tools is lacking. The audience is technical, and signal is fairly high as testing automation is central to one of the four metrics. No penalties were necessary—the content is current and not satirical or contradictory.",
    "reasoning_summary": "While the piece spotlights the importance of automated testing in delivery pipelines—explicitly referencing 'automated tests'—it views test automation as one essential metric within broader discussions of software velocity rather than the central theme. Thus, it's relevant but not fully focused on test automation.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 84.55,
    "ai_mentions": 6.7,
    "ai_alignment": 9.1,
    "ai_depth": 8.8,
    "ai_intent": 8.3,
    "ai_audience": 8.8,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content highlights metrics that align closely with Deployment Frequency, especially 'Time to Deploy.' It explicitly emphasizes measuring and improving the speed of deploying validated builds to production as a central part of 'velocity,' tying value delivery directly to deployment intervals. While 'velocity' as a concept is broader, the focus on deployment time and continuous delivery metrics demonstrates substantial depth and alignment with the category, targeting technical teams aiming to optimize these practices. Mentions of 'deploy' are explicit and reinforced but not singularly dominant, and the discussion is focused and practical, with minimal off-topic material. No penalties applied as the content is up-to-date, supportive, and constructive.",
    "reasoning_summary": "This resource strongly supports Deployment Frequency by advocating for metrics—especially time to deploy—as core to delivery velocity. Its clear focus on measuring and optimizing deployment aligns tightly with the category, making it highly relevant for DevOps practitioners.",
    "level": "Primary"
  },
  "Site Reliability Engineering": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T14:37:06",
    "ai_confidence": 21.04,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.3,
    "ai_intent": 2.6,
    "ai_audience": 2.4,
    "ai_signal": 1.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content discusses software delivery velocity, critiquing story points and instead focusing on build, test, deploy, and feedback cycles via engineering metrics. While partially overlapping with operational metrics relevant in SRE, it never mentions SRE, reliability, incident response, or SRE best practices. Its intent and audience are more aligned with general engineering productivity and Agile/DevOps teams rather than SRE professionals. There is minimal to no direct or indirect focus on SRE's core principles (e.g., SLOs, reliability, post-mortems). Thus, confidence is low, reflecting only very light conceptual proximity.",
    "reasoning_summary": "This content centers on team productivity and delivery pace using engineering metrics, not Site Reliability Engineering. It lacks SRE-specific principles, intent, or terminology, so only a minimal confidence score is justified.",
    "level": "Ignored"
  },
  "Forecasting": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 57.7,
    "ai_mentions": 2.2,
    "ai_alignment": 6.4,
    "ai_depth": 6.8,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content focuses on redefining velocity to center on turnaround metrics (build, test, deploy, feedback) rather than just story points. It aligns well with forecasting topics by emphasizing empirical measurement of flow, relevant to predicting delivery and value. However, it doesn't explicitly mention forecasting or discuss it as a primary topic, instead focusing more on measuring and improving flow for continuous delivery. The depth is moderate since it details metrics but not forecasting methods or practices directly. Audience is aligned towards Agile practitioners. There’s little off-topic or filler material.",
    "reasoning_summary": "While the content highlights key empirical metrics and challenges shallow uses of velocity, it focuses on delivery flow and value rather than forecasting per se. It indirectly supports forecasting but does not directly address forecasting methods or practices.",
    "level": "Tertiary"
  },
  "Azure Boards": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 38.475,
    "ai_mentions": 2.0,
    "ai_alignment": 4.2,
    "ai_depth": 3.8,
    "ai_intent": 4.6,
    "ai_audience": 5.7,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content critiques common misunderstandings about velocity and emphasizes flow-based metrics used by the Azure DevOps team, such as build, test, deployment, and feedback cycles. There is a single mention of 'Azure DevOps,' but Azure Boards is not referenced directly. The discussion centers on delivery metrics rather than Agile artifacts or board workflow practices specific to Azure Boards. While the topic is tangentially relevant to Agile tracking, it is not directly aligned with or deep in Azure Boards tool usage, setup, or best practices.",
    "reasoning_summary": "This piece addresses Agile velocity concepts but focuses on engineering delivery metrics, not Azure Boards or its core Agile planning features. The Azure Boards category is only loosely relevant; confidence is low.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 62.8,
    "ai_mentions": 2.1,
    "ai_alignment": 7.2,
    "ai_depth": 6.9,
    "ai_intent": 6.2,
    "ai_audience": 7.4,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content critiques the common misconception of velocity as merely story points, aligning it with delivering value and feedback—core elements of Agile Philosophy. It references continuous delivery, feedback loops, and using metrics that emphasize value creation over point counting. However, it focuses mostly on practical engineering metrics (build, test, deploy) rather than explicitly referencing Agile Philosophy, the Manifesto, or deeper value-driven cultural aspects. There are no direct mentions of Agile or its core principles, and the discussion, while relevant, favors practical workflow improvements over philosophical depth. The target audience seems to be Agile practitioners and technical leads. Signal-to-noise is solid but slightly reduced by the focus on process over philosophy.",
    "reasoning_summary": "This content challenges a narrow view of velocity, emphasizing value delivery and feedback loops in line with Agile thinking. While conceptually aligned, it focuses more on practical engineering metrics than on Agile Philosophy itself, so confidence is moderate.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 26.233,
    "ai_mentions": 2.001,
    "ai_alignment": 2.534,
    "ai_depth": 2.721,
    "ai_intent": 2.653,
    "ai_audience": 8.044,
    "ai_signal": 7.932,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "Direct mention of Azure DevOps, but no explicit reference or discussion of Azure Repos or its functionalities. The content focuses on velocity metrics (build, test, deploy, feedback) and continuous delivery, which are relevant to DevOps generally but not specific to source control management or Azure Repos. No depth or conceptual alignment with Azure Repos; instead, the main topic is delivery performance. Audience and signal scores are higher since this would appeal to practitioners, but overall confidence in the Azure Repos fit is very low.",
    "reasoning_summary": "This content is about velocity and DevOps metrics, not focused on Azure Repos or its functionalities. It suits a technical audience but lacks a direct or deep connection to Azure Repos, resulting in low confidence for the category fit.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T14:37:10",
    "ai_confidence": 64.65,
    "ai_mentions": 1.2,
    "ai_alignment": 7.4,
    "ai_depth": 5.9,
    "ai_intent": 7.2,
    "ai_audience": 6.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content does not directly mention Value Stream Management or related explicit terminology. However, it conceptually aligns with the category by discussing the measurement of value delivery within software engineering — a core concept in Value Stream Management. The four metrics (build, self-test, deploy, learn) represent critical steps in a value stream, focusing on flow and feedback. The depth is moderate, outlining each metric but without exploring broader organizational alignment or continuous improvement frameworks. The target audience appears to be engineering teams and practitioners interested in delivery metrics, which overlaps but does not fully encompass the strategic or management audiences of Value Stream Management. Content stays focused, with minimal tangential information. No penalties for outdatedness or negative framing.",
    "reasoning_summary": "The content aligns with Value Stream Management by emphasizing flow and feedback through delivery metrics, despite not naming the practice directly. Its focus on measuring real stages of value delivery is relevant, though the discussion targets engineering teams and does not fully explore the broader strategic context.",
    "level": "Secondary"
  },
  "Release Management": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Release Management",
    "calculated_at": "2025-05-16T14:37:10",
    "ai_confidence": 71.88,
    "ai_mentions": 4.4,
    "ai_alignment": 8.2,
    "ai_depth": 7.5,
    "ai_intent": 7.8,
    "ai_audience": 8.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content primarily discusses velocity in software delivery, emphasizing metrics like build, test, deploy, and feedback times—core components of release management and continuous delivery. While 'Release Management' is not directly named, the approach advocated (measuring and improving deployment speed, automation, and learning cycles) aligns strongly with best practices in release management. The depth is solid, listing tangible stages with real engineering focus, and the audience is technical engineering teams. The only slight gap is the explicit lack of direct reference to formal 'release management' processes, hence moderate marks for direct mention and a slightly higher alignment and depth score. No penalties are needed as the content is current and in line with modern CI/CD thinking.",
    "reasoning_summary": "This content closely aligns with Release Management by focusing on build, test, deploy, and feedback metrics—a key part of CI/CD and effective release delivery. Its strong technical focus and practical advice provide solid relevance, even though the term 'release management' isn't mentioned directly.",
    "level": "Secondary"
  },
  "Business Agility": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T14:37:10",
    "ai_confidence": 76.6,
    "ai_mentions": 2.4,
    "ai_alignment": 8.6,
    "ai_depth": 7.8,
    "ai_intent": 7.2,
    "ai_audience": 6.5,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content redefines 'velocity' to focus on delivering value quickly, with clear emphasis on flow metrics (build, test, deploy, feedback) important in agile and DevOps cultures. Direct category mentions are low (no explicit use of ‘business agility’), but the conceptual alignment is strong as it stresses responsiveness and continuous delivery. Discussion depth is moderate: practical but limited to engineering practices, not organisational structures or leadership. Intent is relevant (improving delivery agility), but more technical than strategic. Audience fit leans to practitioners rather than business leaders. Content is focused and relevant; little filler. No outdated or contradictory aspects, so no penalties.",
    "reasoning_summary": "This piece connects agile concepts to delivery speed, emphasizing continuous feedback. While it stays practical and developer-focused, it lines up well with business agility principles even though it never names the category directly. Overall, it's a focused, up-to-date guide to boosting agility via DevOps metrics.",
    "level": "Secondary"
  },
  "Product Delivery": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T14:37:10",
    "ai_confidence": 92.8,
    "ai_mentions": 7.2,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content explicitly reframes 'velocity' in the context of product delivery, moving beyond story points to focus on core delivery metrics: build, test, deploy, and feedback time. It references continuous delivery and makes the discussion practical (not theoretical), directly speaking to practitioners in software engineering. All highlighted stages (build, test, deployment, feedback) are central to product delivery methodology. There is minimal filler; the message is highly focused. No dimensions were penalized—content is modern, constructive, and closely tied to the intended audience.",
    "reasoning_summary": "This content strongly aligns with Product Delivery by redefining velocity with practical metrics tied to build, test, deploy, and feedback cycles. It targets engineering teams and offers actionable insights, ensuring high confidence in fit for the category.",
    "level": "Primary"
  },
  "Cycle Time": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T14:37:04",
    "ai_confidence": 61.705,
    "ai_mentions": 2.5,
    "ai_alignment": 7.8,
    "ai_depth": 7.1,
    "ai_intent": 8.0,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content redefines velocity beyond story points, focusing on the speed of delivering value through build, test, deploy, and feedback loops—closely related to workflow efficiency. It introduces key flow metrics that map to phases of Cycle Time, though Cycle Time is not named or discussed explicitly. The discussion is conceptually strong and relevant for Agile/DevOps practitioners, but lacks direct category terminology or in-depth Cycle Time analysis, warranting a moderate confidence score.",
    "reasoning_summary": "This content reframes velocity by emphasizing time-based delivery metrics that overlap with Cycle Time concepts. Despite not explicitly using 'Cycle Time', its focus aligns well with cycle-based efficiency in Agile/DevOps, making it a relevant—though not perfect—fit for this category.",
    "level": "Secondary"
  },
  "Pragmatic Thinking": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T14:37:06",
    "ai_confidence": 92.0,
    "ai_mentions": 7.7,
    "ai_alignment": 9.2,
    "ai_depth": 9.1,
    "ai_intent": 8.6,
    "ai_audience": 8.9,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content redefines velocity in Agile/DevOps terms, shifting from abstract story points to value delivery measured through practical, actionable metrics (build, test, deploy, feedback times). This explicit focus on real-world application, data-driven decision-making, and experience-based improvement aligns very closely with Pragmatic Thinking principles. Audience targeting fits technical practitioners, signals are highly relevant, and the approach is grounded and practical. There are no outdated references or contradictions to penalize.",
    "reasoning_summary": "This content excels in pragmatic thinking—it emphasizes real-world metrics over theoretical measures, shows practical steps for engineering teams, and is highly relevant to those implementing Agile and DevOps practices.",
    "level": "Primary"
  },
  "Unrealised Value": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T14:37:06",
    "ai_confidence": 21.02,
    "ai_mentions": 0.8,
    "ai_alignment": 2.4,
    "ai_depth": 2.7,
    "ai_intent": 1.5,
    "ai_audience": 7.5,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content discusses velocity measurement in terms of delivery flow, focusing on metrics that help teams track build, test, deploy, and feedback loops. While it emphasizes measuring true delivery speed, it doesn't address Unrealised Value, untapped opportunities, or potential improvement measures specific to Evidence-Based Management. There are no direct mentions or frameworks related to Unrealised Value, and the focus is on operational efficiency and realized value. The intended audience (tech practitioners) matches somewhat, but the conceptual alignment and depth are low for the target category.",
    "reasoning_summary": "This article centers on delivery team velocity through engineering metrics, not on Unrealised Value. While relevant for practitioners, it doesn’t discuss untapped opportunities or potential value, so confidence in this fit is low.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T14:37:06",
    "ai_confidence": 70.35,
    "ai_mentions": 2.4,
    "ai_alignment": 7.7,
    "ai_depth": 7.2,
    "ai_intent": 7.8,
    "ai_audience": 7.1,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "Direct mentions of Lean Product Development are absent, but the content focuses on process efficiency, waste reduction (fast feedback cycles), learning, and metrics related to continuous delivery—which conceptually align with Lean principles. The discussion is moderately deep, covering measurable workflow stages and advocating for value-based velocity over story points. Intended audience is practitioners seeking to improve delivery speed, fitting Lean’s target. Minor deduction for not naming Lean explicitly, though the alignment is high.",
    "reasoning_summary": "The content strongly aligns with Lean Product Development by emphasizing efficiency, learning, and value delivery through measurable metrics, but lacks explicit mention of Lean. It's practical, relevant, and aimed at practitioners, providing a solid—if not exhaustive—fit for this category.",
    "level": "Secondary"
  },
  "Behaviour Driven Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T14:37:06",
    "ai_confidence": 12.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.3,
    "ai_intent": 2.5,
    "ai_audience": 3.0,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on redefining velocity using engineering metrics relevant to DevOps and continuous delivery, not Behaviour Driven Development. There are no direct mentions of BDD, its principles, or practices. The main audience seems to be engineering managers and DevOps teams, not BDD practitioners or stakeholders. This conversation might interest someone adopting Agile or DevOps, but it doesn't connect to BDD's aim of aligning development with business objectives or facilitating collaboration via user stories or acceptance criteria. There is minimal conceptual overlap, little depth relative to BDD, and nearly all content is off-topic for the category.",
    "reasoning_summary": "This piece centers on engineering metrics for delivery speed within DevOps, lacking any BDD references or alignment. It does not discuss BDD principles, practices, or tools, so confidence for the Behaviour Driven Development category is extremely low.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T14:37:06",
    "ai_confidence": 9.2,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.4,
    "ai_intent": 0.5,
    "ai_audience": 3.9,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content exclusively discusses velocity measurement in Agile, focusing on delivery flow metrics like build, test, deploy, and feedback times. There is no mention or implication of backlog readiness or Definition of Ready topics. None of the key topics—criteria for readiness, product owner activities, user story refinement—are present. The content targets Agile engineering teams but centers entirely on delivery effectiveness, not readiness preparation.",
    "reasoning_summary": "This content focuses on velocity and delivery metrics, not on the Definition of Ready or backlog item preparation. It does not fit the category, as it lacks relevant discussion of readiness criteria, user story refinement, or related themes.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T14:37:09",
    "ai_confidence": 73.85,
    "ai_mentions": 2.7,
    "ai_alignment": 7.9,
    "ai_depth": 8.3,
    "ai_intent": 8.0,
    "ai_audience": 9.1,
    "ai_signal": 9.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content does not explicitly mention 'Professional Scrum' but strongly aligns with its ethos—focusing on value delivery, empiricism (using real feedback loops), and technical excellence (metrics for build, test, deploy, learn). The depth is good, offering concrete, actionable engineering metrics rather than shallow advice. The audience is practitioners looking to improve the rigor and value of their Scrum/Agile process, not certification-seekers or newcomers. The intent is clear: elevate understanding from story point counting to meaningful, evidence-based flow metrics. There’s little to no off-topic material, and all dimensions are distinctly addressed. No outdated or negative perspectives are present, so no penalties were necessary.",
    "reasoning_summary": "This content goes beyond superficial Scrum practices, stressing value delivery and empirical, actionable metrics. While it doesn't name 'Professional Scrum,' its depth, intent, and practitioner focus match the category's ethos, making it a strong—but not definitive—fit.",
    "level": "Secondary"
  },
  "Accountability": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Accountability",
    "calculated_at": "2025-05-16T14:37:09",
    "ai_confidence": 44.46,
    "ai_mentions": 1.6,
    "ai_alignment": 3.9,
    "ai_depth": 3.5,
    "ai_intent": 3.8,
    "ai_audience": 7.7,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content does not directly mention accountability or focus on ownership of outcomes in work systems. It centers on velocity metrics in DevOps, emphasizing speed and measurement over explicit outcome ownership or structural accountabilities. The narrative is aimed at engineering teams and discusses delivery improvement via measurable metrics, not accountability constructs. There is only a slight indirect suggestion (\"entirely within engineering’s control\") that could touch on team responsibility, but not in a manner core to accountability as defined.",
    "reasoning_summary": "This content primarily focuses on measuring delivery speed using specific DevOps metrics. It doesn’t directly address accountability structures or outcome ownership, making it a weak fit for the Accountability category despite a slight nod toward team responsibility.",
    "level": "Tertiary"
  },
  "Agnostic Agile": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T14:37:09",
    "ai_confidence": 33.96,
    "ai_mentions": 0.25,
    "ai_alignment": 4.3,
    "ai_depth": 3.85,
    "ai_intent": 5.0,
    "ai_audience": 7.05,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content challenges the misconception of velocity as merely story points and emphasizes delivering value, which is loosely conceptually aligned with Agnostic Agile’s focus on value over methodology. However, there are no direct mentions of Agnostic Agile, its principles, or its unique philosophy. The discussion is anchored in metrics and engineering practices (specifically from Azure DevOps), and does not explore context-driven agility, comparison of frameworks, or critical thinking in methodology choice—central to Agnostic Agile. The audience is technical practitioners, which matches in part, and content is highly focused but not deeply aligned with Agnostic Agile’s key distinguishing topics.",
    "reasoning_summary": "While this piece shifts focus from story points to value delivery, echoing Agnostic Agile's preference for outcomes over metrics, it doesn't mention Agnostic Agile or delve into its philosophy. Instead, it’s practical and technical, targeting practitioners; thus, fit with the category is partial and indirect.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T14:37:09",
    "ai_confidence": 32.95,
    "ai_mentions": 0.6,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 3.8,
    "ai_audience": 9.3,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content primarily focuses on velocity as a metric, distinguishing it from story points and contextualizing it with build, test, deploy, and feedback times. While these metrics overlap with some concepts in flow and delivery, lead time is neither mentioned nor clearly defined. The core focus is on velocity measurement, not lead time. Some alignment exists via the breakdown of delivery steps, but key Lead Time topics, definitions, or techniques are absent, limiting the confidence and depth scores.",
    "reasoning_summary": "This piece centers on velocity, contrasting it with story points and emphasizing engineering metrics for delivery speed. While related to delivery flow, it doesn't directly address or define Lead Time, so alignment and depth for this category are limited.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Model",
    "calculated_at": "2025-05-16T14:37:09",
    "ai_confidence": 73.85,
    "ai_mentions": 4.7,
    "ai_alignment": 8.8,
    "ai_depth": 8.0,
    "ai_intent": 8.4,
    "ai_audience": 8.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content reframes velocity not as story points but as a sequence of measurable flow metrics (build, test, deploy, learn), directly aligning with process models in Agile and DevOps. It highlights measurement and feedback loops—concepts central to models like The Three Ways of DevOps and Kanban flow models. The discussion is practical and detailed, targeting practitioners aiming to use models for continuous delivery improvement. It mentions 'metrics' and 'stages in the flow', which are features of operational models, though the word 'model' is not directly used. No penalties apply since the content is current and positive in tone.",
    "reasoning_summary": "This content aligns well with the 'Model' category by reframing velocity as a flow model based on measurable metrics. It offers detailed, actionable insights directly relevant to Agile and DevOps practitioners, deeply exploring how models support effective delivery.",
    "level": "Secondary"
  },
  "Organisational Change": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T14:37:12",
    "ai_confidence": 27.54,
    "ai_mentions": 0.8,
    "ai_alignment": 3.7,
    "ai_depth": 3.5,
    "ai_intent": 3.0,
    "ai_audience": 4.6,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content discusses software delivery metrics and clarifies what velocity means within Agile teams. While it challenges a common misconception about velocity, the emphasis is on engineering processes (build, test, deploy, feedback) and internal delivery, not on broader organisational transformation, change frameworks, culture, leadership, or resistance. There’s minimal direct reference to organisational change concepts or strategies. The audience is mostly technical/engineering practitioners, not change leaders. Hence, alignment and depth related to 'Organisational Change' are low.",
    "reasoning_summary": "This content focuses on team-level engineering metrics for velocity rather than organisational transformation or change management, making only a weak connection to the Organisational Change category.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T14:37:13",
    "ai_confidence": 6.3,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.0,
    "ai_audience": 1.5,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses exclusively on the definition and measurement of velocity in Agile engineering contexts, specifically using metrics like build, test, deploy, and feedback time. There are no explicit or implicit references to remote work, distributed teams, remote Agile practices, collaboration tools, or any unique challenges/solutions tied to remote working. The target audience is likely Agile practitioners or engineering teams, but nothing here aligns with remote work per the category definition.",
    "reasoning_summary": "This piece is strictly about Agile velocity metrics and lacks any mention of remote work practices or challenges. As such, it does not fit the 'Remote Working' category.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Capability",
    "calculated_at": "2025-05-16T14:37:13",
    "ai_confidence": 52.62,
    "ai_mentions": 2.7,
    "ai_alignment": 6.6,
    "ai_depth": 5.3,
    "ai_intent": 5.1,
    "ai_audience": 7.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content discusses velocity and related metrics in the context of delivery speed and feedback loops. While it mentions important metrics (e.g., time to build, test, deploy, learn), its focus is on measurement practices rather than sustained, systemic capabilities. The main theme is improving flow and delivery, aligned somewhat with capability, but more as outcome measurement than the underlying competencies or organisational systems that enable such performance. There's little exploration on embedding these as enduring organisation-wide foundations. Mention of continuous delivery is relevant, but again underscores methods and metrics more than capability development. The intent is moderately aligned, targeting practitioners aiming to improve their workflow, but the discussion does not deeply explore capability-related strategy, culture, or evolution.",
    "reasoning_summary": "This content highlights metrics for measuring real delivery speed, stressing practical steps for teams. While it aligns with improving team practices, its focus is more on tools and outcomes, offering only moderate connection to broader capability development or systemic organisational competencies.",
    "level": "Tertiary"
  },
  "Time to Market": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T14:37:14",
    "ai_confidence": 94.1,
    "ai_mentions": 7.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 9.1,
    "ai_audience": 9.0,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly addresses how teams should define and measure delivery speed, explicitly shifting focus from counting story points (a proxy) to metrics that track the time from idea to value (e.g., time to build, test, deploy, feedback). These metrics are core Time to Market measures per Evidence-Based Management practices. The discussion is aimed at Agile/DevOps practitioners serious about continuous delivery and optimizing processes for fast value delivery. The content is highly aligned in concept, goes beyond surface-level mention with specific breakdowns of relevant metrics, and the main purpose is to clarify and advocate proper Time to Market measurement. No off-topic filler is present and the tone is supportive. While the term 'Time to Market' isn't used verbatim, all definitions and metrics discussed fit squarely within its domain. No penalties applied.",
    "reasoning_summary": "This content expertly reframes 'velocity' to emphasize genuine delivery speed using concrete metrics—build, test, deploy, and feedback times. It’s conceptually rich, action-oriented, and well-targeted for improving Time to Market in modern Agile/DevOps teams.",
    "level": "Primary"
  },
  "Service Level Expectation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T14:37:14",
    "ai_confidence": 12.4,
    "ai_mentions": 0.3,
    "ai_alignment": 1.0,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 5.2,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content discusses redefining 'velocity' using metrics like build, test, deploy, and feedback time. There is no direct mention of Service Level Expectation (SLE) or its calculation, definition, or usage within Agile/Kanban/Scrum frameworks. The focus is on DevOps and delivery metrics, not SLE as a forecasted cycle time range with probability. No link is made to SLE's purpose, application, or theoretical background, so conceptual alignment and depth are minimal; audience is partially aligned (practitioners), but overall relevance to SLE is negligible.",
    "reasoning_summary": "This content is about velocity and DevOps delivery metrics, not Service Level Expectation in Agile/Kanban/Scrum. It lacks direct mention or substantive discussion of SLE, so its fit to the category is very low.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T14:37:14",
    "ai_confidence": 72.85,
    "ai_mentions": 2.3,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 7.4,
    "ai_audience": 9.1,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content reframes 'velocity' from a superficial measure (story points) to a set of real, observable engineering metrics that focus on feedback cycles and evidence-backed delivery speed. It emphasizes using build, test, deploy, and user feedback metrics to achieve genuine continuous delivery, aligning with empirical process control principles of transparency, inspection, and adaptation. There are no explicit mentions of 'empirical process control' or Agile, but the metrics and feedback orientation align conceptually and practically with the category. The discussion is substantive—identifying concrete measurements and their role in learning loops—though not exhaustive. The target audience is clearly engineering and Agile practitioners. No penalties were applied, as the content is contemporary, earnest, and not contradictory.",
    "reasoning_summary": "The content clearly aligns with empirical process control by emphasizing feedback-driven delivery and real metrics over story points, targeting Agile practitioners and engineering teams with relevant, actionable insights, though it lacks explicit category terminology.",
    "level": "Secondary"
  },
  "Test First Development": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T14:37:15",
    "ai_confidence": 37.21,
    "ai_mentions": 0.6,
    "ai_alignment": 4.6,
    "ai_depth": 4.1,
    "ai_intent": 4.4,
    "ai_audience": 6.1,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on velocity metrics related to build, test, deploy, and feedback cycles, with some mention of automated tests (Time to Self-Test). While there is minor alignment with Test First Development—particularly around automation and feedback—the core discussion is on delivery velocity, not on defining success criteria before development or practicing Test First methodologies. There are no direct mentions, and while practitioners interested in Test First could benefit from some points, the depth and focus are not strong enough to warrant high confidence.",
    "reasoning_summary": "While the piece discusses test automation and rapid feedback, its main purpose is redefining delivery velocity—not advocating or instructing on Test First Development. The link is tangential, with only minor conceptual overlap and no direct focus.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 71.95,
    "ai_mentions": 2.2,
    "ai_alignment": 7.9,
    "ai_depth": 7.6,
    "ai_intent": 7.1,
    "ai_audience": 8.3,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content focuses on measuring product delivery speed using build, test, deploy, and especially 'Time to Learn', which is defined as how quickly user feedback informs decisions. This connects to feedback loops, a key topic in product validation. However, the bulk of the discussion is on engineering efficiency metrics, not direct methodologies for user-centric validation, reducing direct mention and slightly lowering alignment. There is thoughtful, relevant depth regarding feedback-driven iteration, but no explicit reference to common product validation frameworks, such as prototyping or A/B testing. The target audience (engineering/practitioner) mostly overlaps with Product Validation. The content is focused with little off-topic material.",
    "reasoning_summary": "The piece aligns with Product Validation through its focus on iterative feedback (“Time to Learn”), but centers more on engineering flow than explicit user validation methods. While it supports real-world feedback loops, the lack of direct mention and breadth in standard validation practices lowers the overall confidence.",
    "level": "Secondary"
  },
  "Market Adaptability": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 87.4,
    "ai_mentions": 5.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.8,
    "ai_intent": 8.6,
    "ai_audience": 8.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "While the content does not directly mention 'market adaptability,' it deeply aligns conceptually. It emphasizes Agile/DevOps metrics—time to build, test, deploy, and learn—as mechanisms for faster idea-to-value cycles. This approach exemplifies adaptability by focusing on responsiveness, continuous delivery, rapid feedback, and real value delivery. The intended audience (engineering and product teams) closely matches the category target. There's substantial discussion beneath surface-level mentions and little irrelevant content. No outdated or contradictory elements warrant penalties.",
    "reasoning_summary": "The content strongly fits the Market Adaptability category by highlighting Agile/DevOps metrics that boost responsiveness and value delivery. It offers a practical framework for evolving quickly, directly supporting market adaptability concepts, with a clear and relevant audience focus.",
    "level": "Primary"
  },
  "Value Stream Mapping": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 23.93,
    "ai_mentions": 0.8,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.5,
    "ai_audience": 8.1,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content does not directly mention Value Stream Mapping. Its focus is on delivery velocity, specifically in terms of build, test, deployment, and feedback flow, which are partly process steps VSM might map. However, the content does not discuss VSM concepts, principles, methods, or mapping activities. The intent is to clarify what 'velocity' should mean, not to explore or support Value Stream Mapping practice. The audience (technical practitioners) overlaps, but most discussion relates to Agile delivery metrics, not VSM. The discussion is specific and relevant, but the topic is at best tangential to Value Stream Mapping.",
    "reasoning_summary": "This content focuses on Agile velocity and delivery metrics, not Value Stream Mapping. While it references process flow steps, it does not discuss mapping, waste, or VSM principles. The audience overlaps with VSM, but the main topic is tangential, resulting in a low confidence rating.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T14:37:07",
    "ai_confidence": 74.26,
    "ai_mentions": 5.1,
    "ai_alignment": 8.8,
    "ai_depth": 7.6,
    "ai_intent": 7.9,
    "ai_audience": 8.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "Automated testing is directly referenced in metric #2, 'Time to Self-Test: How long automated tests take to run.' However, the main focus is on velocity metrics in Agile/DevOps, covering the broader software delivery lifecycle. The conceptual alignment is strong because automated testing is positioned as essential to delivery speed, but it's not the sole focus. The discussion is moderately deep but remains at metric-level rather than exploring test strategies or frameworks. The message is intended for software engineering teams familiar with CI/CD, with a high signal-to-noise ratio, though only one metric out of four centers on automated testing specifically. No penalties apply, as practices and tone align positively.",
    "reasoning_summary": "This content discusses how automated testing impacts delivery speed in Agile/DevOps teams, treating it as a core velocity metric. While not exclusively about automated testing, it's conceptually relevant and useful for practitioners seeking to improve CI/CD efficiency.",
    "level": "Secondary"
  },
  "Mentoring": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T14:37:08",
    "ai_confidence": 13.77,
    "ai_mentions": 0.6,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 0.9,
    "ai_audience": 6.6,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on redefining 'velocity' by discussing value delivery and engineering metrics (build, test, deploy, feedback). There are no explicit mentions or guidance about mentoring, coaching, skill development, or supporting team member growth—core tenets of the 'Mentoring' category. Although the intended audience (agile teams, engineering practitioners) overlaps, the main discussion is on technical measurement, not mentorship. No penalties are required as the content is current, neutral, and not critical of mentoring.",
    "reasoning_summary": "This content centers on team metrics and process improvement, with no focus on mentoring roles, coaching, or skill development. While somewhat relevant to Agile practitioners, it lacks explicit or substantive ties to mentoring, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T14:37:08",
    "ai_confidence": 91.46,
    "ai_mentions": 7.8,
    "ai_alignment": 9.5,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 8.6,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly addresses sophisticated metrics (build, test, deploy, feedback cycles) that drive engineering excellence, going beyond superficial references to velocity. It aligns conceptually with continuous delivery, measurement of engineering performance, and promoting best practices. The discussion is substantial, targeted at technical practitioners, and almost entirely on-topic with minimal noise or irrelevant filler. No penalties are warranted; the content is current, positive, and in strong support of excellence in engineering delivery.",
    "reasoning_summary": "This content thoroughly illustrates engineering excellence by shifting the focus of 'velocity' to core engineering metrics like build, test, deploy, and feedback cycles. The depth, intent, and relevance to technical audiences are high, resulting in a strong alignment with the category.",
    "level": "Primary"
  },
  "Definition of Workflow": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:18",
    "ai_confidence": 29.15,
    "ai_mentions": 1.2,
    "ai_alignment": 3.9,
    "ai_depth": 2.8,
    "ai_intent": 4.3,
    "ai_audience": 8.6,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content discusses 'flow of work' in the context of measuring velocity with engineering metrics (build, test, deploy, feedback). However, it does not explicitly reference the Definition of Workflow or its core components (explicit agreements, policies, entry/exit criteria, or Kanban). Instead, the focus is on delivery speed metrics, not workflow agreements. While it targets a relevant technical audience and touches briefly on stages of work, it lacks conceptual alignment and depth on the category. The intent is more about velocity measurement than about defining or making workflow explicit.",
    "reasoning_summary": "This content addresses engineering flow metrics tied to velocity, not the explicit Definition of Workflow per Kanban. It references work stages but omits policies, agreements, or Kanban-aligned concepts, limiting alignment to the category.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:29:04",
    "ai_confidence": 9.85,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.6,
    "ai_intent": 1.0,
    "ai_audience": 3.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses the concept of velocity and delivery metrics in a DevOps context. While it references measurable outcomes and metrics (such as time to build, deploy, test, and learn), it never mentions Objective Key Results, OKRs, or directly or indirectly aligns itself with OKR principles as defined by John Doerr. The main focus is on delivery flow and continuous delivery, not on the OKR goal-setting system, rationale, or methods. The content is aimed at DevOps and engineering practitioners, but its scope is confined to the measurement of software delivery velocity, unrelated to the strategic, outcome-driven intent or alignment of OKRs.",
    "reasoning_summary": "This content addresses DevOps velocity metrics and team delivery speed, but does not mention OKRs or reflect their framework, intent, or alignment. Its focus is on flow-based engineering measurements, not structured outcome-based goal systems like Objective Key Results.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:03:02",
    "ai_confidence": 32.7,
    "ai_mentions": 0.4,
    "ai_alignment": 3.4,
    "ai_depth": 3.3,
    "ai_intent": 3.8,
    "ai_audience": 7.0,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "Direct mention of Product Developer or its accountability is absent. The content focuses on delivery metrics (build, test, deploy, feedback) and velocity for engineering teams, but does not discuss Product Developers, their role, cross-functional nature, or collective accountability. The examples and themes align with engineering/Product Delivery teams generally—not with Product Developer-specific responsibilities, purpose, or behaviors per modern frameworks. Thus, conceptual alignment and depth are limited, but audience alignment is moderate as technical practitioners are addressed.",
    "reasoning_summary": "This content emphasizes velocity metrics within engineering and continuous delivery, not the role or accountability of Product Developers. It lacks discussion of Product Developer responsibilities, structure, or cross-functionality, so category fit is limited.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:03:03",
    "ai_confidence": 14.2,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.7,
    "ai_intent": 1.8,
    "ai_audience": 5.0,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content addresses measurement of velocity in DevOps teams, focusing on delivery efficiency via build, test, deploy, and feedback cycles. There is no explicit or implicit mention of human-AI collaboration or collective intelligence concepts. The discussion centers on engineering process metrics and continuous delivery, not on socio-technical systems involving both human and AI agents. Audience and signal scores are moderate as the topic is relevant to Agile/DevOps practitioners, but the conceptual mismatch yields low scores in definitions essential to the Collective Intelligence category.",
    "reasoning_summary": "This content focuses on team velocity metrics in DevOps, without referencing or implying human-AI collaboration or collective intelligence. It is relevant to process optimization but does not fit the targeted category.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:56",
    "ai_confidence": 56.54,
    "ai_mentions": 1.6,
    "ai_alignment": 6.3,
    "ai_depth": 6.7,
    "ai_intent": 6.1,
    "ai_audience": 7.0,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content reframes 'velocity' through metrics closely related to DevOps practices: build, test, deploy, and learning feedback loops. This aligns with agentic engineering via an emphasis on engineering control, developer agency, and continuous value delivery. However, there are no direct mentions of 'Agentic Engineering' or explicit discussion of maximizing human/AI agency, ethical autonomy, or systemic observability. The discussion is focused, actionable, and targets a technical audience, with moderate but not deep alignment to core agentic engineering philosophy.",
    "reasoning_summary": "This content highlights metrics that empower engineering autonomy and continuous delivery, resonating with agentic engineering principles. While conceptually aligned, it stops short of explicit references to agency, ethics, or AI collaboration, resulting in moderate category fit.",
    "level": "Tertiary"
  },
  "Agentic Software Delivery": {
    "resourceId": "14E6bk6Lmo4",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:18",
    "ai_confidence": 34.695,
    "ai_mentions": 0.5,
    "ai_alignment": 4.7,
    "ai_depth": 3.8,
    "ai_intent": 3.9,
    "ai_audience": 8.3,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content discusses re-defining velocity using engineering metrics like build, test, deployment, and feedback times. While these align with modern agile and DevOps practices, there is no explicit mention or discussion of autonomous AI agents, contextual intelligence, or agentic principles as defined in the category. The focus is on measurement and flow, not on AI or agent integration in delivery. The audience and signal align moderately, but the conceptual and depth scores are much lower due to lack of agentic themes.",
    "reasoning_summary": "Content discusses software delivery velocity metrics, not agentic delivery or AI agent integration. Lacks references to autonomy, contextual intelligence, or agentic principles. Fit with category is superficial; not direct or substantive.",
    "level": "Ignored"
  }
}