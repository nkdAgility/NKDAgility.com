{
  "Large Scale Agility": {
    "resourceId": "6VmmXorMZZW",
    "category": "Large Scale Agility",
    "calculated_at": "2025-08-07T09:25:36",
    "ai_confidence": 13.55,
    "ai_mentions": 0.1,
    "ai_alignment": 1.15,
    "ai_depth": 1.25,
    "ai_intent": 2.0,
    "ai_audience": 3.25,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on deployment risk, DevOps, and quality engineering practices. There is no explicit mention of large-scale agility or scaling agile frameworks. While it references enterprise examples, the substance centers on technical delivery practices—not on scaling agile at the organisational level. The intended audience could include enterprise engineers, but the themes are not aligned with large scale agile transformation, governance, cross-team alignment, or scaling frameworks. The closest related aspect is that the companies referenced are large, but their inclusion is to exemplify the value of continuous delivery, not large scale agility. No penalties applied as the tone and practices are contemporary.",
    "reasoning_summary": "Content addresses deployment risk in engineering, not principles of scaling Agile. No direct or in-depth connection to large-scale agility, frameworks, or enterprise-level transformation. Fit to category is low and mostly tangential.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "6VmmXorMZZW",
    "category": "Tenet",
    "calculated_at": "2025-08-07T11:24:20",
    "ai_confidence": 79.57,
    "ai_mentions": 4.2,
    "ai_alignment": 8.9,
    "ai_depth": 8.7,
    "ai_intent": 8.6,
    "ai_audience": 8.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content robustly advocates for actionable principles central to Agile, DevOps, and modern delivery—especially fast feedback loops, engineering excellence, automated testing, and quality built-in as opposed to relying on staging environments. It explicitly discusses feedback loops, continuous integration, and test-first approaches as superior tenets for risk reduction. The narrative strongly aligns with Tenet by opposing outdated gatekeeping and emphasizing practices as actionable guiding doctrines. Multiple advanced DevOps/Agile tenets are discussed in depth, and the content is aimed at technical and leadership audiences seeking to improve deployment safety through evidence-based, modern approaches. No penalties applied as the tone is not outdated or critical of tenets themselves.",
    "reasoning_summary": "The content deeply explores core DevOps and Agile tenets like feedback loops, test-first development, and engineering excellence, aligning directly with the category definition and intent. Strong fit; content is focused and actionable.",
    "level": "Secondary"
  },
  "Collaboration Tools": {
    "resourceId": "6VmmXorMZZW",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 7.45,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.6,
    "ai_intent": 0.5,
    "ai_audience": 2.0,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content critiques the usefulness of staging environments in deployment risk management. It focuses on modern delivery practices such as automated testing and continuous integration but never discusses collaboration tools, their features, or their impact on Agile team communication or workflows. No direct or indirect mention of collaboration platforms is made. The content targets engineering and DevOps practitioners but is not aimed at enhancing collaboration per se.",
    "reasoning_summary": "This piece is about deployment risk and modern engineering practices, not about collaboration tools or their role in Agile teams. It doesn't fit the category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "6VmmXorMZZW",
    "category": "Revenue per Employee",
    "calculated_at": "2025-08-07T06:10:29",
    "ai_confidence": 2.5,
    "ai_mentions": 0.1,
    "ai_alignment": 0.5,
    "ai_depth": 0.8,
    "ai_intent": 0.2,
    "ai_audience": 0.7,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses exclusively on deployment risk, staging environments, and modern software delivery practices, with no direct or indirect reference to Revenue per Employee. It does not mention workforce efficiency, financial metrics, throughput, or use any related language. The audience is technical and the discussion is data-driven, but there is no connection to financial observability or the use of metrics like Revenue per Employee for organisational insight. As such, the fit with the category is minimal and incidental at best.",
    "reasoning_summary": "This content does not fit the 'Revenue per Employee' category; it’s about deployment risk and engineering practices, with no mention or relevant discussion of financial observability, efficiency metrics, or organisational throughput.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "6VmmXorMZZW",
    "category": "Continuous Delivery",
    "calculated_at": "2025-05-16T20:20:02",
    "ai_confidence": 89.75,
    "ai_mentions": 8.5,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.1,
    "ai_audience": 8.4,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content directly references 'continuous delivery,' describing its principles by contrasting it with the traditional reliance on staging environments. It discusses modern engineering practices such as automated testing, continuous integration, test-first development, and audience-based deployments, all of which align tightly with Continuous Delivery. There is strong depth, mentioning industry examples and implying cultural shifts towards quality and professionalism. The content purposefully targets technical leaders and practitioners responsible for delivery quality and business continuity. Small deductions were made for the lack of explicit tool discussion and slightly generalized audience reach. The focus is almost entirely on relevant, on-topic material.",
    "reasoning_summary": "This piece robustly critiques outdated deployment practices and champions Continuous Delivery, emphasizing automation, quality engineering, and real-world examples. It aligns strongly with the category, addressing both principles and cultural shifts, making its fit highly confident.",
    "level": "Primary"
  },
  "Scaling": {
    "resourceId": "6VmmXorMZZW",
    "category": "Scaling",
    "calculated_at": "2025-08-07T11:24:19",
    "ai_confidence": 19.88,
    "ai_mentions": 0.6,
    "ai_alignment": 2.5,
    "ai_depth": 2.2,
    "ai_intent": 1.9,
    "ai_audience": 1.8,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content explores the limits of mitigating deployment risk by adding staging environments, emphasizing quality engineering and continuous integration. While tangential to Agile best practices, it doesn't directly relate to scaling frameworks or methodologies (e.g., SAFe, cross-team challenges). There is no mention of coordination across teams, enterprise alignment, or managing value delivery at scale. The target audience overlaps somewhat (engineering leads, decision-makers), but the core topic is delivery risk reduction rather than enterprise scaling.",
    "reasoning_summary": "Content centers on deployment risk and modern DevOps practices, not on scaling frameworks or cross-team enterprise coordination. Only partial conceptual overlap; fit with the 'Scaling' category is weak and tangential.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "6VmmXorMZZW",
    "category": "System Configuration",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 43.07,
    "ai_mentions": 2.5,
    "ai_alignment": 4.2,
    "ai_depth": 4.5,
    "ai_intent": 4.6,
    "ai_audience": 4.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content focuses on deployment risk and advocates for automated testing, continuous integration, and quality engineering over increasing staging environments. While system practices are referenced (automation, CI), the discussion centers on deployment strategy and software delivery rather than system configuration, integration, or setup. There are no direct or explicit mentions of configuration tools, methodologies, or maintenance. The audience is slightly technical, focusing more on engineers and managers concerned with modern deployment, not specifically system configuration professionals. Thus, while tangentially relevant, it does not directly align or deeply discuss System Configuration as framed by the category.",
    "reasoning_summary": "The article critiques reliance on staging environments and promotes automation and CI for deployment safety. While it touches on practices related to system reliability, it doesn't directly address system configuration, making its fit for the category tangential rather than core.",
    "level": "Tertiary"
  },
  "Definition of Done": {
    "resourceId": "6VmmXorMZZW",
    "category": "Definition of Done",
    "calculated_at": "2025-05-16T20:20:03",
    "ai_confidence": 14.85,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 2.1,
    "ai_audience": 4.9,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content does not mention the Definition of Done (DoD) explicitly or implicitly. It discusses deployment risk, staging environments, automated testing, and quality engineering, but does not address criteria for work completion, the role of DoD in Agile/Scrum, or related best practices. Some concepts like high-quality engineering overlap in spirit but do not directly pertain to DoD or its implementation. The audience is somewhat similar, but most of the substance is not about DoD.",
    "reasoning_summary": "This content focuses on modern deployment practices and argues against more staging environments, with little to no reference to the Definition of Done. Its audience and subject matter only tangentially align, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "6VmmXorMZZW",
    "category": "Strategy",
    "calculated_at": "2025-08-07T07:06:29",
    "ai_confidence": 39.32,
    "ai_mentions": 1.6,
    "ai_alignment": 4.2,
    "ai_depth": 5.0,
    "ai_intent": 4.2,
    "ai_audience": 4.8,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content primarily debates deployment practices, challenging the reliance on staging environments for risk mitigation, and promotes engineering excellence (CI, test-first, quality). It references 'proven strategies,' but lacks any explicit or substantial discussion of organisational or high-level strategic alignment. While it uses the word 'strategy' once, it does so narrowly for technical risk mitigation, not in the context of organisational or business strategy. No mention is made of vision, cross-team alignment, decision-making frameworks, or long-term planning. The argument is directed more at operational excellence than strategic frameworks or objectives, resulting in weak conceptual alignment. Intent is to persuade toward modern engineering, but not to guide strategic planning or organisational direction.",
    "reasoning_summary": "Content debates deployment and quality practices without engaging in high-level strategy or organisational alignment. Lacks strategic planning, decision-making, or vision alignment, so only a weak fit to the 'Strategy' category.",
    "level": "Ignored"
  },
  "Customer Focus": {
    "resourceId": "6VmmXorMZZW",
    "category": "Customer Focus",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 27.6,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.9,
    "ai_intent": 2.5,
    "ai_audience": 6.2,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content critiques the belief that more staging environments reduce deployment risk, focusing instead on practices like automated testing and CI. While it references 'user-facing platforms' and mentions 'audience-based deployments,' it lacks direct discussion about defining or measuring customer value or integrating customer feedback. The main thrust is quality engineering, not customer outcomes. Audience and signal scores are higher due to relevance for delivery professionals, but conceptual and depth scores are low given the tangential connection to Customer Focus.",
    "reasoning_summary": "This article is mainly about improving delivery risk through engineering practices, with almost no explicit focus on customer value or outcomes. Customer Focus isn't directly addressed; the piece stays within internal quality and deployment topics—even if users indirectly benefit.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "6VmmXorMZZW",
    "category": "Technical Debt",
    "calculated_at": "2025-08-07T07:06:28",
    "ai_confidence": 19.05,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.4,
    "ai_intent": 2.9,
    "ai_audience": 4.0,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on deployment risk, modern software delivery practices, and criticizes reliance on staging environments but does not discuss technical debt, its trade-offs, types, measurement, or remediation. There is no direct mention of technical debt or related management. The intent is to inform about safer deployment strategies, not about managing or acknowledging suboptimal code or design decisions. The alignment and depth scores are low because, while lack of quality may indirectly relate to 'debt,' this is never explicitly framed as such. The audience is somewhat aligned (technical practitioners), but the content is off-topic for technical debt.",
    "reasoning_summary": "This content focuses on deployment risk and software delivery methods without mentioning or exploring technical debt. Its topic and intent are not aligned with the technical debt category, so the fit is weak.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agentic Agility",
    "calculated_at": "2025-08-07T07:06:28",
    "ai_confidence": 15.9,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.1,
    "ai_intent": 2.6,
    "ai_audience": 5.4,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content debates the effectiveness of staging environments versus modern engineering practices to reduce deployment risk. While it touches on adaptive practices in Agile/DevOps, it doesn't mention or focus on agency, intentionality, or agentic agility. Main themes are technical risk mitigation and engineering excellence, not autonomy, accountability, or purposeful adaptation—the hallmarks of agentic agility. There are no direct references or substantial discussion of the agentic agility dimension, and the alignment with the category's audience is only partial.",
    "reasoning_summary": "This content is focused on engineering and deployment risk, not on agentic agility. There’s minimal, indirect alignment with agency or adaptive action themes; thus, it only marginally fits the assigned category.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Backlog",
    "calculated_at": "2025-09-17T23:12:33",
    "ai_confidence": 4.9,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.6,
    "ai_intent": 0.9,
    "ai_audience": 0.7,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content exclusively discusses deployment risk, staging environments, and practices like continuous integration and testing. There is no mention—direct or implied—of the Product Backlog, its management, role in Agile, backlog refinement, prioritisation, or any related tools or concepts. The content's audience may be similar (software professionals), but the content itself does not reference backlog management or connect its themes to backlog practices. Thus, it does not align with the provided Product Backlog criteria in any significant way.",
    "reasoning_summary": "The content does not address Product Backlog topics; its focus is on deployment risk, quality, and delivery practices, not backlog management, refinement, or prioritisation. No fit with the specified category.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "6VmmXorMZZW",
    "category": "Personal",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 20.02,
    "ai_mentions": 0.25,
    "ai_alignment": 2.33,
    "ai_depth": 2.51,
    "ai_intent": 2.28,
    "ai_audience": 4.11,
    "ai_signal": 3.22,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "There are no direct personal anecdotes or reflections, nor is the Personal category explicitly mentioned. The content is an opinionated argument, but lacks subjective, story-driven insights or unique individual experiences with Agile, Scrum, DevOps, or Lean. The main focus is technical and process critique, not personal context or experiential lessons, hence very low scores for mentions, alignment, and depth, with some signal and audience relevance.",
    "reasoning_summary": "This content primarily delivers a technical critique without any personal stories or reflections. It doesn't fit the 'Personal' category since it lacks individual anecdotes or experiences related to Agile or related methodologies.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "6VmmXorMZZW",
    "category": "Method",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 83.18,
    "ai_mentions": 6.8,
    "ai_alignment": 9.2,
    "ai_depth": 8.9,
    "ai_intent": 8.6,
    "ai_audience": 8.4,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content directly critiques the 'add more staging environments' approach and instead advocates for structured procedural solutions like automated testing, continuous integration, test-first development, and audience-based deployments—each a core method in Agile/DevOps. Terms like 'automated feedback loops' and 'modern delivery practices' reinforce method-centric thinking. While it doesn't enumerate method steps in-depth, it discusses the why and value behind key methods, and targets technical/engineering audiences. General frameworks or tools are not discussed, maintaining a focused method orientation. No outdated practices or critical tone penalizations are triggered.",
    "reasoning_summary": "This content strongly promotes concrete engineering methods (like CI, automated testing, test-first) over superficial solutions. Its depth and relevance make it a strong fit for the 'Method' category, offering actionable, method-driven advice directly aimed at practitioners.",
    "level": "Primary"
  },
  "Enterprise Agility": {
    "resourceId": "6VmmXorMZZW",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-16T20:20:03",
    "ai_confidence": 27.56,
    "ai_mentions": 0.6,
    "ai_alignment": 3.7,
    "ai_depth": 4.2,
    "ai_intent": 2.5,
    "ai_audience": 3.7,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content addresses modern engineering practices such as automated testing, CI/CD, and emphasizes quality engineering and fast feedback. While these are relevant at scale, the main focus is on deployment risk reduction practices, not on scaling agility across the entire enterprise or organizational-level change. No explicit mention is made of enterprise agility or related frameworks, structures, or leadership strategies. The audience is mostly technical practitioners, and discussion is narrow (team-level or engineering practice) rather than on organizational culture or agility transformation. There is indirect alignment via promotion of professional, agile delivery, but it does not overtly fit the enterprise agility category.",
    "reasoning_summary": "This content focuses on engineering choices and deployment risk, advocating for modern delivery practices over staging environments. While somewhat conceptually related to agile values, it lacks explicit ties to enterprise agility frameworks, org-wide change, or leadership, making the category fit weak.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-08-07T07:06:12",
    "ai_confidence": 12.76,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.9,
    "ai_intent": 1.3,
    "ai_audience": 3.1,
    "ai_signal": 1.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content critiques the value of staging environments and advocates for automated testing, quality engineering, and continuous integration as better risk mitigation strategies. However, it does not mention hypothesis formulation, experimentation, validated learning, or hypotheses-driven iteration, either by term or concept. While some principles overlap with modern delivery and empirical practices, there is no demonstration of explicit experiments, forming/testing hypotheses, or leveraging results to inform decision-making, which are core to Hypothesis Driven Development. The focus is more on engineering culture and process rigor rather than experimentation or hypothesis validation.",
    "reasoning_summary": "The content focuses on delivery practices and risk reduction, not hypothesis-driven experimentation or validated learning, so it is not aligned with the Hypothesis Driven Development category.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "6VmmXorMZZW",
    "category": "Discipline",
    "calculated_at": "2025-08-07T09:25:38",
    "ai_confidence": 60.95,
    "ai_mentions": 2.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.8,
    "ai_intent": 7.4,
    "ai_audience": 7.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content critiques reliance on staging environments and strongly advocates for underlying principles (quality, automation, continuous integration) that are hallmarks of DevOps/Agile disciplines. It appeals to professionalism and the systemic application of modern engineering approaches instead of outdated practices. However, the concept of 'discipline' is not named directly, nor are formal points on discipline governance or disciplinary evolution discussed explicitly—focus is mainly on advocating for key practices and principles that underpin such disciplines.",
    "reasoning_summary": "Content supports core discipline principles (quality, automation, professionalism) but doesn't address 'discipline' directly or explore governance/structural aspects; fit is strong on principle, partial on explicit framing.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 6.7,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 2.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": true,
    "ai_penalty_points": 2.0,
    "ai_penalty_details": "All dimensions penalized 0.5 each for critical (rather than supportive) tone toward practices adjacent to Agile Planning Tools and partial misalignment to category purpose.",
    "final_score": 7.0,
    "reasoning": "The content discusses modern software deployment practices, emphasizing continuous integration, automated testing, and engineering culture, while dismissing the value of staging environments. It makes no direct mention of Agile Planning Tools or their typical functionalities (e.g., sprint or backlog management tools). There is only an implicit link to Agile in the promotion of quality delivery practices, but not to tools or planning. The content targets a technical audience but does not focus on Agile tool selection or usage, nor does it reference methods like Scrum or Kanban. Discussion depth for the relevant category is shallow, and the overall intent is critical of redundant environments rather than informative about Agile Planning Tools.",
    "reasoning_summary": "This piece critiques staging environments and promotes modern engineering practices but doesn't discuss Agile Planning Tools or their planning functionalities, resulting in minimal alignment with the category.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "6VmmXorMZZW",
    "category": "Coaching",
    "calculated_at": "2025-05-16T20:20:02",
    "ai_confidence": 6.1,
    "ai_mentions": 0.2,
    "ai_alignment": 0.9,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 2.2,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses on deployment risks and modern software engineering practices, such as continuous integration, automated testing, and quality engineering. It criticizes reliance on multiple staging environments in favor of built-in quality and rapid feedback. There are no direct mentions or concepts of coaching, nor the techniques, roles, or mindsets that define coaching as per the category definition. Its intent is to inform practitioners about delivery best practices, not to provide guidance, support, or developmental feedback for team or personal growth. The only faint alignment with coaching is the indirect advocacy for professionalism and better ways of working, but the framing lacks the collaborative, supportive, or facilitative approach key to coaching. There is no evidence of coaching topics, audiences, tools, or approaches, so the confidence is extremely low.",
    "reasoning_summary": "This content addresses deployment risk and software delivery practices, not coaching. It provides no direct or indirect engagement with coaching techniques, goals, or mindsets, and doesn't target a coaching audience. Minimal alignment with the coaching category results in a very low confidence score.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "6VmmXorMZZW",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 14.22,
    "ai_mentions": 0.3,
    "ai_alignment": 2.7,
    "ai_depth": 2.4,
    "ai_intent": 2.9,
    "ai_audience": 3.1,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses deployment risk and the efficacy of staging environments, emphasizing modern practices like automated testing and continuous integration. There are no direct references to Internal Developer Platforms (IDPs) or their architecture, implementation, or benefits. The main themes partially overlap with some IDP-supportive concepts (e.g., automation, quality engineering), but the focus remains on challenging staging environments rather than enabling internal platforms. Very limited alignment with the category topics or audience.",
    "reasoning_summary": "This content mainly debates deployment risk and modern delivery practices, with little connection to Internal Developer Platforms. It lacks direct mentions or in-depth discussion of IDPs, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "6VmmXorMZZW",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-08-07T09:25:33",
    "ai_confidence": 36.65,
    "ai_mentions": 0.3,
    "ai_alignment": 4.2,
    "ai_depth": 3.7,
    "ai_intent": 3.5,
    "ai_audience": 3.0,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content critiques the reliance on staging environments versus quality engineering, advocating for CI, CD, automated testing, and feedback loops. While it indirectly touches on how organisational investment and engineering practices shape delivery risk, it does not discuss the interplay between social and technical systems explicitly, nor sociotechnical theory. The primary focus remains on technical practices and risk reduction, with only modest alignment to the deeper themes of sociotechnical systems such as org structure, team dynamics, or culture/technology integration.",
    "reasoning_summary": "Content focuses on technical practices (CI, CD, testing) and criticizes staging-centric risk strategies. Sociotechnical alignment is limited; main themes are engineering and risk, not organizational-technical interplay. Partial, tangential fit only.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "resourceId": "6VmmXorMZZW",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 73.74,
    "ai_mentions": 2.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.6,
    "ai_intent": 7.2,
    "ai_audience": 9.0,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content aligns conceptually with Continuous Improvement by emphasizing the limitations of outdated deployment practices (multiple staging environments) and strongly advocating for modern, feedback-driven engineering excellence through automation, CI, and quality practices. However, the term 'Continuous Improvement' isn't mentioned directly, slightly lowering the direct mentions score. The discussion explores root causes, contrasts traditional vs. modern approaches, and recommends data-driven experimentation and continuous feedback—core to Continuous Improvement—but focuses primarily on deployment risk rather than process improvement as a whole. The main audience (engineering/technical leadership) fits well, and the content is focused with little filler. No outdated or negative framing detected; all points reinforce the value of adaptive, modern practices.",
    "reasoning_summary": "This content champions practices central to Continuous Improvement, such as feedback loops and automation, while challenging outdated deployment risk strategies. Although the category name isn't explicit, its philosophy is woven throughout, making the fit strong for technical leaders focused on ongoing process enhancement.",
    "level": "Secondary"
  },
  "Transparency": {
    "resourceId": "6VmmXorMZZW",
    "category": "Transparency",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 11.65,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 1.6,
    "ai_intent": 1.4,
    "ai_audience": 3.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content centers on deployment risk mitigation and advocates modern engineering practices (like CI/CD, automated testing) over relying on multiple staging environments. It does not discuss transparency, nor does it reference the concept, tools, or practices related to transparency in Agile. The lack of mention, alignment, or thematic depth towards transparency justifies very low confidence.",
    "reasoning_summary": "This content focuses on deployment risk and quality engineering, not transparency. There's no mention or exploration of transparency in Agile contexts, leading to a very low confidence classification.",
    "level": "Ignored"
  },
  "Common Goals": {
    "resourceId": "6VmmXorMZZW",
    "category": "Common Goals",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 37.75,
    "ai_mentions": 0.5,
    "ai_alignment": 4.0,
    "ai_depth": 4.2,
    "ai_intent": 4.0,
    "ai_audience": 8.8,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content critiques the use of multiple staging environments and advocates for modern engineering practices like CI, automated testing, and quality-first approaches. While these are relevant in Agile/DevOps, the piece does not discuss shared objectives or the alignment of team efforts under common goals. Direct mentions of 'Common Goals' are absent. The primary audience is practitioners interested in technical delivery improvement, which partially overlaps with the intended audience for Common Goals. The discussion is moderately deep for its area but lacks direct conceptual or operational linkage to the category definition provided.",
    "reasoning_summary": "This content focuses on technical practices to reduce deployment risk but doesn't address shared team objectives, alignment, or strategic goal-setting central to the 'Common Goals' category. Therefore, confidence in its fit for this classification is low.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "6VmmXorMZZW",
    "category": "Company as a Product",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 20.3,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.5,
    "ai_audience": 2.2,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on software delivery risk and the limitations of staging environments, advocating modern engineering practices such as automated testing and continuous integration. There is no reference—explicit or implied—to the concept of treating the whole company as a dynamic product, nor to organisational design, customer-centric strategies, or the principles of Company as a Product (CaaP). The audience is technical (engineering organizations), not strategy or organisational leadership. Discussion is tactical, not about cross-functional collaboration, continuous organisational evolution, or CaaP frameworks.",
    "reasoning_summary": "This content addresses software deployment risk and quality engineering—not Company as a Product. It lacks references to organisational design, customer-centric strategy, or CaaP principles, making it a poor fit for this category.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "6VmmXorMZZW",
    "category": "Scrum Master",
    "calculated_at": "2025-08-07T09:25:38",
    "ai_confidence": 5.6,
    "ai_mentions": 0.3,
    "ai_alignment": 0.9,
    "ai_depth": 0.6,
    "ai_intent": 1.0,
    "ai_audience": 1.5,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content neither mentions the Scrum Master role nor discusses any aspects of the Scrum Master's accountability or responsibilities. It centers exclusively on deployment risk, staging environments, and modern engineering practices without reference to Scrum or agile roles. The audience is broadly engineering/professional, not specifically Scrum Masters. No evidence supports alignment to the category; all scores reflect very minimal incidental relevance.",
    "reasoning_summary": "The content doesn't reference Scrum Masters, their accountability, or system impact. It focuses on engineering practices, so it does not fit the category definition.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Discovery",
    "calculated_at": "2025-08-07T11:24:27",
    "ai_confidence": 7.6,
    "ai_mentions": 0.5,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on deployment risk management, environments, and quality engineering, explaining why more staging environments do not lower risk. It covers DevOps/CI/CD best practices but does not mention product discovery concepts such as user needs, idea validation, or feature definition. The main theme is about technical deployment and risk—not about discovery methodologies, feedback loops with customers, or MVPs. Audience may marginally overlap (e.g., product-oriented engineers), but there is almost no conceptual or intent alignment with product discovery. Mentions are indirect and minimal. No penalties applied as tone is current and not satirical/critical toward discovery itself.",
    "reasoning_summary": "Content is about deployment risk and environments, not Product Discovery. Does not discuss user needs, feature definition, or discovery practices; minimal alignment or mentions. This is a weak fit for the Product Discovery category.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "6VmmXorMZZW",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-16T20:20:02",
    "ai_confidence": 89.81,
    "ai_mentions": 7.4,
    "ai_alignment": 9.3,
    "ai_depth": 8.6,
    "ai_intent": 9.1,
    "ai_audience": 8.8,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content explicitly mentions 'continuous integration' by name and discusses its role in reducing deployment risk. The main argument centers around engineering practices like automated testing and CI versus traditional reliance on staging environments. Several other key CI principles (fast feedback loops, test-first development, seamless code integration) are explored, showing clear conceptual and practical alignment. Most of the text is directly relevant to CI and likely targets practitioners seeking to modernize their delivery pipeline. Depth is strong, presenting both theory and examples. No outdated practices or tonal contradictions are present.",
    "reasoning_summary": "This content closely aligns with Continuous Integration by discussing its principles, best practices, and advantages over traditional staging. It targets practitioners and offers thoughtful analysis, yielding a high confidence in the classification.",
    "level": "Primary"
  },
  "Metrics and Learning": {
    "resourceId": "6VmmXorMZZW",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 85.13,
    "ai_mentions": 6.4,
    "ai_alignment": 9.1,
    "ai_depth": 8.5,
    "ai_intent": 8.9,
    "ai_audience": 8.7,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content directly discusses automated feedback loops, continuous integration, and engineering excellence, which are central to metrics and learning. While it doesn't exhaustively outline metric frameworks or tooling, it strongly promotes evidence-based practices over anecdotal safety. The argument is tailored toward technical and organizational decision makers concerned with reliable delivery and continuous improvement. There are explicit references to feedback mechanisms and implicit alignment with Agile/DevOps values.",
    "reasoning_summary": "This content strongly fits 'Metrics and Learning.' It champions automated feedback, continuous integration, and evidence-driven improvement over outdated safety assumptions, offering relevant insights for Agile and DevOps practitioners.",
    "level": "Primary"
  },
  "One Engineering System": {
    "resourceId": "6VmmXorMZZW",
    "category": "One Engineering System",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 32.2,
    "ai_mentions": 0.2,
    "ai_alignment": 2.9,
    "ai_depth": 3.3,
    "ai_intent": 2.6,
    "ai_audience": 4.2,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content discusses modern deployment risk-reduction methods, focusing on continuous integration, automated testing, and engineering excellence. However, it never mentions or references the One Engineering System (1ES) framework directly, nor does it discuss tool standardization, integration across teams, or the specific mechanics of 1ES. The core argument is against reliance on staging environments, favoring modern practices that can align with 1ES, but the discussion remains general, not specific to 1ES principles or implementation. The intended audience (engineering professionals) partially overlaps, but relevance to 1ES is tangential rather than explicit or in-depth.",
    "reasoning_summary": "The content covers modern engineering and delivery practices but never directly mentions or clearly focuses on One Engineering System. Its relevance is peripheral, offering only partial alignment with 1ES concepts, leading to a low confidence in categorization under this topic.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "6VmmXorMZZW",
    "category": "Team Collaboration",
    "calculated_at": "2025-09-05T03:29:30",
    "ai_confidence": 18.95,
    "ai_mentions": 0.3,
    "ai_alignment": 1.8,
    "ai_depth": 1.9,
    "ai_intent": 1.1,
    "ai_audience": 5.8,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses entirely on deployment risk, modern engineering practices (e.g., automated testing, continuous delivery), and dismisses old approaches (more staging environments) in favor of technical excellence. There is no mention of teamwork, communication, shared ownership, or collaboration dynamics. The subject matter is aligned with DevOps practices but not the aspects of DevOps that deal with team interaction or collaboration; it targets practitioners and technical stakeholders but omits consideration of team behaviors or culture. Signal-to-noise is moderate since the discussion is focused, but not in the direction of Team Collaboration. No penalties were warranted.",
    "reasoning_summary": "This content discusses deployment risk and engineering practices, not team collaboration, communication, or shared ownership. Its focus is technical risk reduction, making it an extremely poor fit for this category.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "6VmmXorMZZW",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 12.5,
    "ai_mentions": 0.1,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 2.5,
    "ai_audience": 3.7,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on deployment risk, advocating for continuous integration, automated testing, and quality engineering practices over additional staging environments. Nowhere does it mention or imply AI, nor does it discuss AI's role in Agile, DevOps, or software engineering. The main audience is technical, but the subject matter does not align with the AI category's requirements. Only an indirect connection could be made if one considers automation as sometimes involving AI, but in this context, 'automated testing' refers generically to software automation, not AI-driven approaches. Thus, the content's conceptual and intent fit for the 'Artificial Intelligence' category is extremely low.",
    "reasoning_summary": "The content does not address AI or its application in Agile or DevOps. It centers on deployment risks and advocates for engineering best practices, making it a poor fit for the 'Artificial Intelligence' category.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "6VmmXorMZZW",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-16T20:20:02",
    "ai_confidence": 29.425,
    "ai_mentions": 0.8,
    "ai_alignment": 3.2,
    "ai_depth": 2.9,
    "ai_intent": 3.8,
    "ai_audience": 5.7,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content discusses the effectiveness of staging environments versus automated testing and continuous integration—concepts related to modern software delivery. However, it makes no direct mention of source control, version control systems, branching, collaboration workflows, or code review. Alignment and depth are thus limited to adjacent DevOps and CI/CD practices rather than core 'Modern Source Control' themes. The primary audience overlaps somewhat (software engineers, DevOps), but the intent and main focus are on deployment safety and delivery pipelines, not on version control methods. Thus, confidence is low and penalties were not necessary.",
    "reasoning_summary": "This content focuses on deployment and CI/CD practices, not modern source control. While it shares an audience and adjacent topics, there's little direct alignment with version control, which keeps the confidence low for fitting this category.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "6VmmXorMZZW",
    "category": "Team Performance",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 72.28,
    "ai_mentions": 2.6,
    "ai_alignment": 8.2,
    "ai_depth": 7.8,
    "ai_intent": 7.2,
    "ai_audience": 6.9,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content doesn't directly mention 'team performance' but discusses system-level delivery practices (e.g., automation, CI/CD, quality engineering) affecting a team's ability to deliver safely and consistently. It aligns conceptually by critiquing outdated practices (staging environments) and advocating for modern, high-performance engineering methods. Discussion around how proper delivery practices impact overall risk and system outcomes demonstrates moderate depth, though it doesn’t explicitly analyze delivery capability using metrics or team behaviors. The audience is likely technical practitioners responsible for delivery systems, fitting the category, though not exclusively so. Most of the content is on-topic, but it could engage further with specific team-level performance measurement, which would boost depth and alignment.",
    "reasoning_summary": "This content strongly aligns with 'Team Performance' by focusing on system-level practices that support safe, efficient delivery. It critiques pre-production gates and emphasizes modern engineering as the path to reliable outcomes. Direct references to team performance are limited, but conceptual fit is high.",
    "level": "Secondary"
  },
  "First Principal": {
    "resourceId": "6VmmXorMZZW",
    "category": "First Principal",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 33.82,
    "ai_mentions": 0.8,
    "ai_alignment": 4.6,
    "ai_depth": 3.2,
    "ai_intent": 4.7,
    "ai_audience": 7.6,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content critiques the idea that more staging environments reduce risk and instead emphasizes modern, robust engineering practices. However, it does not explicitly define, identify, or discuss first principles as 'irreducible, non-negotiable constraints.' Instead, it refers to professionalism and valid practices as desirable, but not immutable first principles per the strict classification definition. There is alignment with a culture of professionalism and quality, but the discussion never isolates these as first principles. Audience and relevance are strong (modern delivery leaders, engineers), but direct references, conceptual mapping, depth, and fit are weak regarding the 'First Principal' category.",
    "reasoning_summary": "While the post addresses foundational delivery practices and critiques outdated methods, it falls short of clearly identifying or explaining true first principles. The tone and focus are on professionalism and engineering quality, not on immutable, non-negotiable constraints tied to first principles.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "6VmmXorMZZW",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 12.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.0,
    "ai_intent": 2.0,
    "ai_audience": 5.5,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content never mentions or alludes to cross-functional teams. It focuses entirely on deployments, staging environments, and quality engineering best practices (like automated testing and continuous integration). While the intended audience (software delivery professionals) may overlap with audiences interested in cross-functional teams, the piece never discusses team structure, collaboration, or Agile-specific concepts central to the category. There is no depth or relevance to cross-functional teams, so confidence is extremely low.",
    "reasoning_summary": "This content is all about deployment risk and quality engineering, with no mention or discussion of cross-functional teams. Its themes and purpose don’t align with the category, resulting in very low confidence for classification.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "6VmmXorMZZW",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 1.9,
    "ai_mentions": 0.1,
    "ai_alignment": 0.6,
    "ai_depth": 0.6,
    "ai_intent": 1.2,
    "ai_audience": 3.0,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses entirely on deployment risk, staging environments, and modern software delivery practices such as continuous integration and automated testing. There is no mention of backlog refinement, backlogs, story mapping, user stories, prioritization, or any related concepts. The content's intent, depth, and alignment do not pertain to backlog refinement in meaning or practice, although it is written for software delivery professionals—a tangential audience overlap. Therefore, confidence in this content fitting the 'Backlog Refinement' category is extremely low.",
    "reasoning_summary": "This content discusses deployment risk and modern release engineering, with no substantive connection to backlog refinement concepts, techniques, or objectives. It does not fit the category.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "6VmmXorMZZW",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 11.9,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.6,
    "ai_intent": 0.8,
    "ai_audience": 5.1,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "This content focuses on deployment risk, emphasizing established practices like automated testing, continuous integration, and test-first development—all core to Agile, DevOps, and Lean. It critiques outdated approaches and directly references recognized methodologies and concepts, rather than providing miscellaneous, anecdotal, or off-framework discussion. It does not fit the Miscellaneous category, as it is deeply rooted in established delivery and engineering philosophies.",
    "reasoning_summary": "The content centers on deployment and quality strategies tightly linked to Agile, DevOps, and Lean concepts. It does not stray from established frameworks, so its fit with the Miscellaneous category is extremely low.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "6VmmXorMZZW",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 89.45,
    "ai_mentions": 7.2,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.5,
    "ai_audience": 8.7,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content strongly emphasizes engineering excellence, advocating for automated testing, continuous integration, and quality-focused practices over reliance on more staging environments. It references technical mastery both in language ('engineering excellence,' 'professionalism') and in concepts, directly aligning with principles of clean code, DevOps integration, and technical debt management. The discussion is deep and detailed, critically analyzing industry misconceptions and pointing towards advanced methodologies. The intended audience is clearly technical practitioners. There are no off-topic tangents, and all points build toward advocating technical mastery. No penalties are applied as all practices referenced remain modern and the tone is supportive.",
    "reasoning_summary": "This content exemplifies technical mastery, focusing on high-level engineering practices like continuous integration and automated testing. It offers a nuanced critique of outdated approaches, delivering valuable insights for technical practitioners seeking excellence.",
    "level": "Primary"
  },
  "Scrum Values": {
    "resourceId": "6VmmXorMZZW",
    "category": "Scrum Values",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 8.4,
    "ai_mentions": 0.1,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 0.6,
    "ai_audience": 4.2,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on technical deployment strategies, advocating for quality engineering, continuous integration, and automation as risk mitigators. It does not directly mention or substantially discuss Scrum Values such as commitment, courage, focus, openness, or respect. The theme is about modern delivery practices versus outdated methods rather than team interactions or values guiding Scrum processes. No penalties were applied as the content does not contradict Scrum Values, but it remains almost wholly unrelated.",
    "reasoning_summary": "This content is about deployment risk and engineering best practices, not Scrum Values. It doesn't reference or explore Scrum Values or their impact, so confidence is very low for fitting the category.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 33.0,
    "ai_mentions": 0.7,
    "ai_alignment": 4.9,
    "ai_depth": 4.5,
    "ai_intent": 3.2,
    "ai_audience": 6.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses deployment risk and advocates modern engineering practices like continuous integration, automated testing, and delivery—principles adjacent to Agile and potentially relevant to APOM. However, it neither directly mentions the Agile Product Operating Model nor explores product-focused principles such as the shift from project to product, product governance, or product roadmaps. The focus is on delivery excellence rather than product operating models, and the main intent revolves around challenging staging environments, not APOM transformation or practice. The content may interest Agile practitioners or technical leaders, but the match is tangential and not substantial to the APOM category.",
    "reasoning_summary": "While the content highlights modern delivery and automation aligned with Agile principles, it does not directly address Agile Product Operating Model themes like product-centric transformation or governance. It's adjacent but not core to the category.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "resourceId": "6VmmXorMZZW",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 67.1,
    "ai_mentions": 2.1,
    "ai_alignment": 7.7,
    "ai_depth": 6.2,
    "ai_intent": 7.3,
    "ai_audience": 8.1,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content strongly favors early quality practices, emphasizing test-first development, automated testing, and continuous integration. These principles conceptually align with Shift Left Strategy; however, the phrase 'shift left' is never directly mentioned, and the discussion focuses on rejecting staging environments rather than thoroughly exploring shift-left approaches. The audience is well-targeted (engineering and delivery professionals), and the signal is high with little off-topic content. No penalties apply, as the practices are current and the tone is not critical of the Shift Left concept.",
    "reasoning_summary": "This piece aligns with Shift Left Strategy in spirit, highlighting automation and early testing over pre-production gates. Although it doesn't explicitly mention the shift-left term, it discusses key practices and targets relevant professionals, producing a moderately strong confidence score.",
    "level": "Secondary"
  },
  "Working Software": {
    "resourceId": "6VmmXorMZZW",
    "category": "Working Software",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 29.17,
    "ai_mentions": 0.6,
    "ai_alignment": 3.2,
    "ai_depth": 3.7,
    "ai_intent": 2.1,
    "ai_audience": 4.8,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses on deployment risk and why introducing more staging environments is not effective, instead advocating for practices like automated testing and continuous integration. There is no direct mention of 'working software' as an artifact or deliverable in Agile/Scrum. While it references quality engineering and delivery, these remain process-oriented points rather than discussions about working software itself. The depth around practices and philosophy is moderate but not deeply centered on the output of working software. The intent is to challenge traditional risk reduction methods, with only peripheral relevance to the category. The audience (engineering/professional) is a moderate fit, but the content itself is more about delivery methods than concrete software outputs.",
    "reasoning_summary": "This piece debates deployment risk and critiques staging environments, centering on quality engineering. While it promotes practices that indirectly support working software, it doesn’t discuss the artifact itself—making its relevance to the category peripheral rather than direct.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 46.915,
    "ai_mentions": 1.8,
    "ai_alignment": 5.4,
    "ai_depth": 4.6,
    "ai_intent": 3.8,
    "ai_audience": 6.1,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content debates deployment risk mitigation via staging environments and strongly advocates for modern delivery practices—automated testing, CI/CD, and engineering quality. While these are components of digital transformation, the content rarely references overall strategic transformation, digital business models, or technology adoption at an organizational level. There is some conceptual overlap (modern practices), and the audience is at least partly aligned (technical professionals who might engage in digital transformation efforts). However, it lacks direct mentions of digital transformation, and its primary focus is on software delivery processes rather than transformational business change. The discussion is technical and process-oriented; depth in software quality, but not in broader digital transformation frameworks or impacts. No penalizable tone or obsolescence detected.",
    "reasoning_summary": "The content focuses on software deployment practices, aligning conceptually with digital transformation in its advocacy of modern engineering methods. However, it lacks strategic discussions, explicit mentions, and broader organizational transformation context, limiting confidence for this specific category.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "resourceId": "6VmmXorMZZW",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 32.0,
    "ai_mentions": 1.1,
    "ai_alignment": 3.5,
    "ai_depth": 3.0,
    "ai_intent": 3.2,
    "ai_audience": 6.0,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content examines deployment risk and the efficacy of modern engineering practices like automated testing and continuous integration, but frames this as a critique of traditional staging rather than an explicit or analytic discussion of trends. While it references shifts from staging environments to practices such as continuous delivery and quality engineering, there is little detailed analysis of how widespread these shifts are, their broader organizational impact, or specific trend data. The focus is more on best practices and prescriptive advice, not on identifying, evidencing, or analyzing trends. Target audience is aligned (technical and delivery professionals), and content is focused, but depth and alignment with 'trend analysis' is moderate-to-weak.",
    "reasoning_summary": "While the article discusses evolving delivery practices, it critiques staging environments instead of providing a true trend analysis backed by pattern identification or data. Its focus on best practices fits the audience but lacks the analytic depth required for the trend analysis category.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "6VmmXorMZZW",
    "category": "Organisational Psychology",
    "calculated_at": "2025-08-07T11:24:27",
    "ai_confidence": 9.13,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.8,
    "ai_audience": 2.1,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content solely discusses technical and engineering practices (e.g., staging environments, continuous delivery, testing, engineering excellence) rather than psychological principles, theories, or employee/team dynamics. There are no explicit references to motivation, engagement, leadership, or other core organisational psychology themes. The intended audience appears to be technical practitioners rather than those seeking insight into psychological aspects of organisational life. Therefore, all scoring dimensions are extremely low, with only minimal scores reflecting the possibility of indirect overlap where 'organisations' invest in 'quality,' but this is not substantially related to psychology as defined.",
    "reasoning_summary": "Content focuses on technical and engineering solutions to deployment risk, not organisational psychology. There are no relevant psychological or behavioural discussions. Fit with the category is negligible and purely incidental, if present at all.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "6VmmXorMZZW",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 12.9,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.4,
    "ai_intent": 2.2,
    "ai_audience": 2.0,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content does not reference Hybrid Agile directly or indirectly. Instead, it critiques reliance on additional staging environments and advocates for modern engineering practices like continuous integration and test automation. There is no examination of blending agile and traditional methods, nor does it address Hybrid Agile's specific challenges, audiences, or intent. All scores reflect minimal alignment and relevance; no penalties were necessary.",
    "reasoning_summary": "This piece focuses on the value of engineering practices over staging environments and does not engage with Hybrid Agile concepts, challenges, or audiences. Its lack of direct or thematic relevance results in a very low confidence for Hybrid Agile categorization.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "6VmmXorMZZW",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 5.41,
    "ai_mentions": 0.1,
    "ai_alignment": 0.9,
    "ai_depth": 1.0,
    "ai_intent": 0.7,
    "ai_audience": 2.5,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content entirely discusses technical practices like staging environments, automated testing, and CI/CD pipelines; it does not explicitly or implicitly address intrinsic/extrinsic motivation, workplace satisfaction, feedback, teamwork, or leadership’s impact on engagement. No terminology or themes related to employee engagement are present. The main audience is technical engineers, not HR or engagement strategists. Thus, this content is not relevant to the Employee Engagement category.",
    "reasoning_summary": "This piece focuses solely on deployment risk and technical engineering practices. It neither mentions nor supports discussions on employee motivation, satisfaction, or engagement, and is targeted at a technical audience. It does not fit the Employee Engagement category.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 48.96,
    "ai_mentions": 2.4,
    "ai_alignment": 5.2,
    "ai_depth": 4.8,
    "ai_intent": 5.9,
    "ai_audience": 5.7,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content briefly mentions 'test-first development,' which is a principle closely related to Test Driven Development (TDD), but does not explicitly discuss TDD or its cycle (Red-Green-Refactor), its tools, or core methodology. The main focus is on arguing against staging environments, advocating for automated testing, continuous integration, and quality engineering as a whole, rather than specifically on TDD. It references test-first as one of several quality practices, but offers little depth regarding TDD principles, benefits, patterns, or challenges. The intent is more about broad modern delivery practices than about educating or discussing TDD in detail. The audience is broadly technical and would overlap with the TDD category, but there's noise due to the content's focus on deployment risk and operational practices.",
    "reasoning_summary": "While the content touches on 'test-first development' as a modern practice, its focus is much broader, centering on deployment risk and quality engineering. TDD is only briefly referenced with minimal depth, making it only moderately relevant to the Test Driven Development category.",
    "level": "Tertiary"
  },
  "Platform Engineering": {
    "resourceId": "6VmmXorMZZW",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 36.5,
    "ai_mentions": 1.3,
    "ai_alignment": 3.8,
    "ai_depth": 3.6,
    "ai_intent": 3.1,
    "ai_audience": 2.7,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "There are no direct mentions of platform engineering or Internal Developer Platforms (IDPs). The content is focused on criticizing the overuse of staging environments and advocates for modern delivery practices like automated testing and continuous integration. These are related concepts but do not specifically tie into platform engineering’s core of building and maintaining internal developer platforms for productivity and lifecycle improvement. There's conceptual overlap with topics like automation and quality gates, but the main focus isn't platform engineering itself. The depth is moderate, but it’s generally about software quality, not platform strategies. The intended audience is technical but not necessarily platform engineers, and the discussion, while relevant to modern engineering, is not specifically tailored to platform engineering. No penalties were needed.",
    "reasoning_summary": "The content critiques reliance on staging environments and advocates for automation and quality engineering, which align with some platform engineering principles but do not directly address platform engineering or Internal Developer Platforms. Confidence in categorization is therefore low.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "6VmmXorMZZW",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 61.6,
    "ai_mentions": 1.6,
    "ai_alignment": 7.2,
    "ai_depth": 6.7,
    "ai_intent": 7.1,
    "ai_audience": 8.0,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content does not directly mention Lean Thinking or its terminology but aligns with several Lean principles: advocating for efficiency, continuous improvement (through automation, test-first, and CI), and questioning wasteful practices (extra staging environments). It thoroughly critiques legacy practices and promotes quality-focused delivery, though without referencing Lean-specific frameworks or tools (e.g., Kaizen, 5S, Value Stream Mapping). The target audience (engineers, technical leaders) closely matches Lean practitioners in modern software delivery. No outdated practices or negative tone toward Lean were detected, so no penalties are applied. Overall alignment is moderate, but the lack of explicit Lean references and terminology lowers the confidence score.",
    "reasoning_summary": "While the content doesn't mention Lean Thinking explicitly, it champions core Lean ideas—eliminating waste, prioritizing quality, and fostering continuous improvement—within a software delivery context. This makes it conceptually aligned with Lean Thinking, but the lack of direct references keeps confidence at a moderate level.",
    "level": "Secondary"
  },
  "Self Organisation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 32.75,
    "ai_mentions": 0.4,
    "ai_alignment": 3.3,
    "ai_depth": 2.6,
    "ai_intent": 3.3,
    "ai_audience": 6.0,
    "ai_signal": 5.5,
    "ai_penalties_applied": true,
    "ai_penalty_points": 2,
    "ai_penalty_details": "alignment and depth penalized (-1 each) for focus on delivery practices and engineering professionalism, with little to no discussion of self-organisation principles or practices.",
    "final_score": 33.0,
    "reasoning": "The content focuses on deployment risk, the limitations of staging environments, and the value of modern engineering practices such as continuous integration and automated testing. While these can support team autonomy indirectly, the text does not explicitly reference or deeply discuss self-organisation, its principles, or tools for fostering it. No direct mentions or substantial conceptual alignment are present, though the intended audience (teams and technical practitioners) has some overlap. Penalties applied to alignment and depth as the main thrust is not about self-organisation.",
    "reasoning_summary": "This piece critiques staging environments and advocates for quality engineering but lacks any meaningful discussion of self-organisation principles or practices. Its focus is on technical delivery risk rather than team autonomy or Agile empowerment, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "6VmmXorMZZW",
    "category": "Competence",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 76.1,
    "ai_mentions": 4.4,
    "ai_alignment": 8.6,
    "ai_depth": 7.7,
    "ai_intent": 7.9,
    "ai_audience": 8.3,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content directly discusses 'engineering excellence,' 'professionalism,' and 'quality built in from the start,' strongly aligning with the definition of Competence as foundational to quality, trust, and progress. While the word 'competence' is never used verbatim, the argument is conceptually about competence: critiquing performative security (staging environments) versus actual skill-driven practices (automated testing, CI, quality engineering). Depth is solid, referencing real industry examples and outlining meaningful strategies rooted in capability and professionalism, but some focus is diluted by the polemic against staging rather than an extended discourse on competence cultivation, limiting maximum scores. The audience is technical and delivery-oriented, matching the typical practitioners interested in competence. No penalties are warranted—practices, tone, and relevance are current and on-topic.",
    "reasoning_summary": "This content champions real skill and quality in software delivery, urging investment in genuine engineering excellence over superficial staging environments. While it doesn’t state 'competence' outright, its argument and examples clearly target the value of authentic, proven capabilities essential to professional delivery.",
    "level": "Secondary"
  },
  "Decision Making": {
    "resourceId": "6VmmXorMZZW",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 79.21,
    "ai_mentions": 3.7,
    "ai_alignment": 8.3,
    "ai_depth": 7.9,
    "ai_intent": 7.4,
    "ai_audience": 8.0,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "Direct references to 'decision making' are absent, but the content strongly aligns conceptually by critically evaluating common deployment practices with an evidence-based approach. It emphasizes quality engineering, automated testing, and feedback loops as better alternatives, which are core to structured decision-making. It critiques anecdotal reasoning (false sense of security) and champions collaborative, empirical strategies, though discussion is more prescriptive than deeply analytical.",
    "reasoning_summary": "The content adopts an evidence-based critique of traditional staging environments, advocating for modern, empirical practices in deployment decisions. Its focus on structured evaluation and continuous feedback fits the Decision Making category well, though it stops short of explicit frameworks or deep exploration.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "resourceId": "6VmmXorMZZW",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 8.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.6,
    "ai_audience": 1.2,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content is a critical opinion on the efficacy of staging environments for deployment risk reduction. It does not discuss installation or configuration steps, techniques, or troubleshooting, nor does it offer actionable setup advice for tools. While the audience is engineers, the subject is high-level delivery strategy, with almost no direct mention or exploration of install/configuration. Scores reflect the nearly complete misalignment with the defined category.",
    "reasoning_summary": "This content focuses on deployment strategies and critiques staging environments, offering no practical guidance on installation or configuration. Its relevance to the 'Install and Configuration' category is almost nonexistent.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "6VmmXorMZZW",
    "category": "Current Value",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 15.38,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.9,
    "ai_intent": 1.6,
    "ai_audience": 3.3,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content critiques the effectiveness of staging environments in reducing deployment risk and advocates for practices like automated testing and continuous delivery. However, it does not mention or discuss 'Current Value,' nor does it refer to Evidence-Based Management. There are no references to customer satisfaction, real-time value metrics, or tangible benefits, failing most alignment and coverage requirements of the category. The intended audience of software engineers or DevOps practitioners overlaps slightly, but the core topic is delivery safety, not measuring or managing Current Value.",
    "reasoning_summary": "This piece focuses on deployment safety and engineering practices, not on measuring, discussing, or applying Current Value. It lacks direct references or alignment to Evidence-Based Management, so the confidence for the 'Current Value' category is low.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "6VmmXorMZZW",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T20:20:09",
    "ai_confidence": 22.15,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 7.5,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses strictly on deployment risk and modern engineering practices. It does not directly mention customer satisfaction or discuss principles or measures for customer happiness. The emphasis is on risk reduction, quality, and technical excellence, with some indirect implication that uptime matters for user experience. There is no engagement with customer satisfaction metrics, feedback, or Agile/DevOps customer-centric frameworks, and thus minimal alignment with the category.",
    "reasoning_summary": "This content centers on deployment risk and engineering quality, not customer satisfaction. While uptime might benefit users, it doesn’t discuss measuring or improving customer experience, making it a weak match for the category.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Project Management",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 51.55,
    "ai_mentions": 2.2,
    "ai_alignment": 6.1,
    "ai_depth": 5.7,
    "ai_intent": 5.9,
    "ai_audience": 5.6,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "The content discusses deployment risk, engineering practices and mentions organizational context. While it touches on themes adjacent to agile project delivery, the main focus is on engineering technical strategies (automation, testing, CI/CD) rather than core project management principles or methodologies. There are no direct mentions of project management or its tools, roles, or lifecycles. The audience is technical leaders rather than project managers, with discussion depth limited to risk mitigation through modern delivery, not project planning or governance.",
    "reasoning_summary": "This content connects to project management mainly through deployment risk and the need for quality delivery practices, but it emphasizes engineering solutions over project management topics. Its relevance to the category is moderate, not core.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 22.7,
    "ai_mentions": 1.3,
    "ai_alignment": 2.9,
    "ai_depth": 2.7,
    "ai_intent": 2.6,
    "ai_audience": 5.1,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content critiques the effectiveness of adding more staging environments and advocates for modern engineering practices like automated testing and CI/CD. While these practices are associated with Agile delivery, the text makes no direct mention of any Agile framework, the Agile Manifesto, or explicit principles. Its focus is on software delivery practices and risk mitigation, not on frameworks, comparative analysis, or organizational agility per the defined category. There is minimal direct alignment or exploration of Agile frameworks, although the implied audience and underlying themes (modern delivery, professionalism) align somewhat. The content briefly references practices often adopted in Agile environments but does not situate the discussion in that context.",
    "reasoning_summary": "This piece focuses on engineering and delivery practices rather than Agile frameworks. While related to modern development concepts, it doesn't discuss, analyze, or reference Agile frameworks directly, yielding a low confidence for this category.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "6VmmXorMZZW",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T20:20:00",
    "ai_confidence": 48.2,
    "ai_mentions": 1.0,
    "ai_alignment": 5.8,
    "ai_depth": 5.2,
    "ai_intent": 6.2,
    "ai_audience": 7.5,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "Direct mention of 'Social Technologies' is absent; instead, the focus is on technical and engineering practices (e.g., automated testing, CI, quality engineering) rather than collaboration frameworks or self-organisation. While it references organisational decision-making (investment in quality, release strategies), it never addresses collaboration, collective intelligence, or emergent problem-solving from a social-tech perspective. The audience is likely technical leaders or engineers—the right audience for Social Technologies—but the message sticks to delivery practices and only tangentially touches the organisational dimension. Depth is moderate due to examples and industry references. Overall, content is relevant for DevOps process improvement, but not Social Technologies as defined.",
    "reasoning_summary": "This content focuses on technical delivery improvements rather than frameworks for collaboration or self-organisation. While relevant to DevOps and likely interesting to the Social Technologies audience, it doesn't directly address the core social frameworks needed for full alignment.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T20:20:02",
    "ai_confidence": 17.45,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.5,
    "ai_intent": 2.4,
    "ai_audience": 5.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content critiques reliance on staging environments and promotes practices such as automated testing, continuous integration, and engineering excellence. However, it does not discuss product vision, roadmap, or the broader methodologies of product strategy. It focuses on technical process and risk management in deployment rather than high-level strategic planning. While some discussion of organizational choice and modern delivery practices indirectly references strategy, the main themes are technical implementation and culture, not product strategy by definition.",
    "reasoning_summary": "This content focuses on deployment and quality engineering best practices, not product strategy. It offers minimal alignment with strategic product planning, vision, or roadmap development, so confidence that it fits the 'Product Strategy' category is very low.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Development",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 84.19,
    "ai_mentions": 5.4,
    "ai_alignment": 9.4,
    "ai_depth": 8.9,
    "ai_intent": 8.1,
    "ai_audience": 8.2,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content examines the misconception that more staging environments reduce risk, instead emphasizing automated testing, continuous integration, and modern delivery practices—key elements in product development. It aligns closely with the category by framing effective, iterative processes and customer-focused quality as essential. While 'product development' is not directly named, the discussion's depth, audience targeting (product leaders, engineers), and focus on outcome-oriented delivery corroborate strong category fit.",
    "reasoning_summary": "This content challenges traditional risk mitigation in deployments, advocating for iterative methods and automation—core product development tenets. It’s highly aligned, in-depth, and speaks to practitioners seeking better delivery practices.",
    "level": "Primary"
  },
  "Sensemaking": {
    "resourceId": "6VmmXorMZZW",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 14.6,
    "ai_mentions": 0.1,
    "ai_alignment": 2.3,
    "ai_depth": 1.7,
    "ai_intent": 3.1,
    "ai_audience": 4.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content critiques the value of additional staging environments in deployment pipelines, focusing on engineering quality and automation as risk mitigators. There are no direct mentions or substantial discussion of 'sensemaking,' nor does it explore frameworks, decision-making in complexity, or organizational adaptation. The subject and primary audience (engineering practitioners) only partially overlap with sensemaking's strategic focus. As the piece is rooted in deployment best practices rather than interpretation of complexity or collective learning, alignment and depth are both low, and the signal-to-noise ratio is modest due to its limited organizational analysis relevant to sensemaking.",
    "reasoning_summary": "This content centers on deployment practices and risk, not sensemaking. It lacks direct references or in-depth alignment with sensemaking concepts, frameworks, or decision-making under complexity. The low confidence reflects that it's about technical delivery, not organizational sensemaking.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "6VmmXorMZZW",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 7.9,
    "ai_mentions": 0.0,
    "ai_alignment": 0.6,
    "ai_depth": 1.1,
    "ai_intent": 1.5,
    "ai_audience": 2.1,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not reference Cell Structure Design by name or concept. It discusses deployment risk, staging environments, and software engineering practices like CI/CD, automated testing, and quality engineering—not organisational structure, autonomy, or decentralisation. There are no connections to Beta Codex, cells, or network-based design, and the intended audience seems software practitioners, not organisational designers. The content is focused, but entirely unrelated to the category.",
    "reasoning_summary": "This content focuses on deployment practices and engineering risk, with no mention or conceptual overlap with Cell Structure Design or the Beta Codex, resulting in a very low confidence score for category fit.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "6VmmXorMZZW",
    "category": "Artifact",
    "calculated_at": "2025-05-16T20:20:09",
    "ai_confidence": 8.65,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 0.8,
    "ai_audience": 2.5,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content critiques the use of multiple staging environments in deployment, focusing instead on continuous integration, automated testing, and engineering practices. It makes no direct reference to artifacts as formal representations of work in Agile, Scrum, or Lean, nor does it discuss artifact structures, purposes, or best practices. The content is more focused on principles, processes, and the philosophy of deployment risk, not on artifacts themselves. Audience is somewhat adjacent (technical practitioners), but topical alignment and depth regarding artifacts are minimal.",
    "reasoning_summary": "This content focuses on deployment and risk but makes no substantive mention of artifacts—the core category. It doesn't discuss artifact structure, purpose, or management. As such, confidence for classifying it under 'Artifact' is extremely low.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 48.32,
    "ai_mentions": 0.4,
    "ai_alignment": 4.3,
    "ai_depth": 4.7,
    "ai_intent": 5.5,
    "ai_audience": 6.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content critiques reliance on staging environments and advocates for modern engineering practices such as automation, continuous integration, and test-first development. While these are foundational in Agile approaches, the discussion is technical and focused on deployment risk—without directly referencing strategic Agile alignment, vision, adaptation, or leadership. The audience is likely technical or delivery-focused, not explicitly executive or strategic. There is little to no explicit mention of Agile or its strategic dimensions, limiting its alignment and depth in relation to the Agile Strategy category.",
    "reasoning_summary": "This piece champions modern delivery and quality practices but targets technical over strategic topics. While its themes align loosely with Agile principles, it lacks direct strategic focus, explicit Agile mentions, or executive intent, resulting in a moderate fit for the Agile Strategy category.",
    "level": "Tertiary"
  },
  "GitHub": {
    "resourceId": "6VmmXorMZZW",
    "category": "GitHub",
    "calculated_at": "2025-05-16T20:20:03",
    "ai_confidence": 9.3,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.3,
    "ai_audience": 0.8,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses on deployment risk, the relative value of staging environments, and broader best practices in software delivery such as automated testing, CI, and engineering quality. However, it never mentions GitHub or any features or tools specific to GitHub. Thematic overlap exists (CI/CD, quality engineering), but there is no direct tie or exploration of GitHub’s platform, tools (e.g., Actions), or workflows. This content is relevant to general DevOps and software delivery audiences, but not to GitHub, even tangentially.",
    "reasoning_summary": "The content is about deployment practices, automated testing, and argues against more staging environments. It doesn't reference GitHub or discuss any of its tools or services, so it isn’t a fit for the GitHub category.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "6VmmXorMZZW",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 12.9,
    "ai_mentions": 0.1,
    "ai_alignment": 1.4,
    "ai_depth": 1.5,
    "ai_intent": 1.8,
    "ai_audience": 4.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content does not mention Azure Pipelines directly or indirectly. While it discusses continuous integration, automated testing, and deployment risk, these are framed in a general DevOps context, not specifically related to Azure Pipelines, its configuration, or practices. The main point is to critique excessive staging rather than discuss Azure Pipelines' role, features, or implementation. The depth on CI/CD and testing exists, but it's generic, and there's no evidence of technical alignment to Azure Pipelines' usage, audience, or specific relevance.",
    "reasoning_summary": "This piece discusses deployment risk and DevOps best practices in general, not Azure Pipelines. It never references Azure services, specific tools, or features unique to Azure Pipelines, so it doesn't fit in this category.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "6VmmXorMZZW",
    "category": "Leadership",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 17.0,
    "ai_mentions": 0.6,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses almost entirely on technical arguments about software delivery risk, quality engineering, and deployment strategies. There is no mention of leadership concepts or roles, and little discussion about decision-making, influence, or cultural transformation from a leadership perspective. Alignment and depth are low because the discussion is aimed at engineering practices, not leadership frameworks or challenges. Audience overlap exists only in that leaders might be among technical readers, but content is not targeted to them.",
    "reasoning_summary": "This content is highly technical, analyzing deployment risk and engineering practices. It lacks a leadership focus—there’s no discussion of leadership strategies, roles, or cultural influence—making its fit with the 'Leadership' category minimal.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "6VmmXorMZZW",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 21.95,
    "ai_mentions": 1.3,
    "ai_alignment": 2.6,
    "ai_depth": 2.7,
    "ai_intent": 2.0,
    "ai_audience": 6.2,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content debates deployment risk reduction strategies, focusing mainly on best engineering practices—automated testing, continuous integration, audience-based deployment—but makes no explicit or implicit link to customer retention. There is no discussion of user engagement, churn, direct value to customers, or feedback loops aimed at retention. While improved operations may indirectly benefit customer experience, the focus is purely on internal delivery effectiveness, not on customer retention strategies.",
    "reasoning_summary": "The content critiques deployment risk management via staging environments, emphasizing engineering practices. However, it doesn't address strategies, metrics, or techniques for retaining customers, making it only tangentially connected to the 'Customer Retention' category.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "6VmmXorMZZW",
    "category": "Ethos",
    "calculated_at": "2025-05-16T20:20:09",
    "ai_confidence": 41.35,
    "ai_mentions": 1.4,
    "ai_alignment": 5.6,
    "ai_depth": 5.2,
    "ai_intent": 5.1,
    "ai_audience": 8.2,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content critiques reliance on staging environments and advocates modern engineering practices such as automated testing, CI, and quality as core to delivery safety. While it mentions foundational convictions like 'engineering excellence' and 'professionalism', it largely focuses on technical practices over system-level ethos. Direct reference to ethos is absent, and the discussion only borders on deeper beliefs (e.g., 'the choice isn't between staging or risk; it's between outdated practices and professionalism'). The main audience is practitioners and leaders in engineering. Signal is moderately clear, as most content is relevant, though some space is spent on examples. No penalties apply; tone aligns with the ethos principle, prioritizing underlying engineering values, but does not examine ethos explicitly or at depth.",
    "reasoning_summary": "The piece champions engineering excellence over superficial risk reduction but doesn't delve explicitly into ethos as foundational system beliefs. Its main focus is advocating proven practices; ethos is implied rather than directly discussed, resulting in moderate confidence.",
    "level": "Tertiary"
  },
  "Windows": {
    "resourceId": "6VmmXorMZZW",
    "category": "Windows",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 14.25,
    "ai_mentions": 1.1,
    "ai_alignment": 1.5,
    "ai_depth": 2.0,
    "ai_intent": 2.5,
    "ai_audience": 4.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content briefly references Windows alongside Microsoft Teams and Starbucks POS as high-stakes software platforms but does not explore any aspect of the Windows OS itself. There is no discussion of Windows installation, configuration, troubleshooting, or user guidance. The main topic is deployment risk, not Windows-specific issues. The intended audience could include enterprise IT practitioners, which somewhat overlaps, but the content offers almost no Windows-focused insights, and its relevance to the category is very peripheral.",
    "reasoning_summary": "Aside from a brief mention, the content doesn't meaningfully address Windows-related topics. Its focus is deployment risk and engineering practices, not Windows system management, making its fit for the Windows category very low.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "6VmmXorMZZW",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T20:20:02",
    "ai_confidence": 18.1,
    "ai_mentions": 0.6,
    "ai_alignment": 1.6,
    "ai_depth": 1.1,
    "ai_intent": 2.3,
    "ai_audience": 6.2,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "While the content critiques technical practices around staging environments and advocates for modern engineering excellence, there is scant explicit or implicit discussion of organisational culture. There are no references to leadership, cultural change, team dynamics, or cultural factors influencing agility. The primary audience may include technical leaders, but the framing is technical, not cultural. No penalties applied as it is not outdated or contrarian to the category, just off-topic.",
    "reasoning_summary": "This content centers on deployment and testing strategies, not the cultural factors that shape organisational agility or DevOps adoption. There's minimal cultural context, so it fits the category poorly.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "6VmmXorMZZW",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T20:20:03",
    "ai_confidence": 25.45,
    "ai_mentions": 0.5,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 3.2,
    "ai_audience": 8.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on deployment risk, testing, and quality engineering. It critiques reliance on staging environments and advocates for practices like automated testing, continuous integration, and test-first development. While these can support innovation, the discussion does not directly address fostering or measuring an organisation's innovation capability, nor does it reference innovation cycles, metrics, or Evidence-Based Management. There are no explicit mentions or deep exploration of innovation concepts; the main alignment is tangential, relating to the adoption of modern practices, not innovation mechanisms per se. The audience is practitioners in technical roles, which partially fits, but overall innovation is not the core theme.",
    "reasoning_summary": "This content is about safer deployments through automation and quality, not directly about fostering or measuring innovation. Its relevance to 'Ability to Innovate' is incidental and limited, resulting in low confidence for this classification.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "6VmmXorMZZW",
    "category": "Practice",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 93.71,
    "ai_mentions": 8.7,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.1,
    "ai_audience": 9.5,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly discusses practices like automated testing, continuous integration, test-first development, and modern delivery techniques, explicitly contrasting these with less effective methods like excessive staging environments. It aligns strongly with the Practice category, focusing on actionable, repeatable techniques that enhance quality and reduce risk. The discussion is deep, targeting practitioners, and maintains a high signal-to-noise ratio, with concrete examples and minimal off-topic material. No penalties were necessary as the content is current, constructive, and highly relevant to the intended audience.",
    "reasoning_summary": "This content thoroughly supports and analyzes best engineering practices such as automated testing and continuous integration, framing them as superior alternatives to excessive staging environments. It’s deeply relevant for practitioners focused on actionable ways to increase delivery quality and speed.",
    "level": "Primary"
  },
  "Increment": {
    "resourceId": "6VmmXorMZZW",
    "category": "Increment",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 14.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 2.0,
    "ai_intent": 1.6,
    "ai_audience": 3.0,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content does not mention 'Increment' or discuss the delivery of tangible, usable output at the end of an iteration. Its focus is on debunking the efficacy of multiple staging environments and advocating for modern engineering excellence (e.g., automated testing, continuous delivery). There are no direct references or in-depth alignment with the Increment concept in Scrum or Agile, nor substantial discussion on software increments. The audience may include technical practitioners but the main purpose is to challenge deployment risk assumptions, not to explore Increments.",
    "reasoning_summary": "This content mainly argues against the value of staging environments, focusing on deployment safety and engineering practices—not on delivering or discussing Increments in Scrum or Agile. It contains minimal relevance to the Increment category.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "6VmmXorMZZW",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 22.25,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 3.1,
    "ai_audience": 5.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content does not directly mention Lean Startup or its principles. Its focus is on effective quality engineering, automated testing, and modern deployment practices rather than iterative MVPs, Build-Measure-Learn cycles, or validated learning. While fast feedback is discussed, it is not explicitly tied to startup innovation or Lean methodology. The targeted audience may overlap with Lean Startup practitioners, but the core concepts are not present or deeply discussed. Overall, the content fails to align with key Lean Startup topics and intent.",
    "reasoning_summary": "This content focuses on deployment safety and engineering excellence, not Lean Startup principles. It lacks direct references, conceptual alignment, or in-depth discussion of Lean practices such as MVPs or iterative learning cycles. Thus, it fits poorly with the Lean Startup category.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "6VmmXorMZZW",
    "category": "Throughput",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 19.0,
    "ai_mentions": 0.2,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.7,
    "ai_audience": 7.4,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content does not directly mention 'throughput' nor discuss it as a delivery metric. Its focus is on deployment risk, challenging the value of staging environments, and advocating for modern engineering practices. While it references delivery speed and quality, throughput as a metric is never defined, visualized, or analyzed. The main audience is technical/engineering professionals, which is a partial match, but the core definition, calculation, or use of throughput in a flow context is not present.",
    "reasoning_summary": "This content debates deployment risk and engineering practices, not throughput metrics. Though it mentions delivery speed, it lacks discussion or analysis of throughput as a metric, so confidence for the Throughput category remains very low.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T20:20:01",
    "ai_confidence": 11.18,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.1,
    "ai_audience": 2.3,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses on deployment risk, the ineffectiveness of staging environments, and the value of modern ci/cd and testing strategies. There are no direct or indirect mentions of asynchronous development, remote or distributed teamwork, or tools/practices pertinent to asynchronous workflows. The discussion targets engineering professionals but is unrelated to async development principles, practices, or challenges. Content is focused and relevant to its own theme, but not the requested category.",
    "reasoning_summary": "This piece addresses deployment risks and modern engineering methods but makes no reference to asynchronous development or distributed collaboration, so it does not fit the target category in focus or intent.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "6VmmXorMZZW",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 93.5,
    "ai_mentions": 7.6,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly discusses continuous delivery, continuous integration, test automation, and fast feedback loops—all core aspects of frequent releases. It advocates for modern delivery over legacy staging, referencing major platforms (Windows, Microsoft Teams) and emphasizing risk reduction via frequent, automated releases, not more manual gates. The piece is thorough, targeting practitioners/leaders interested in minimizing release risk through incremental, automated, and frequent deployment. No outdated practices, contradictions, or irrelevant tangents are present.",
    "reasoning_summary": "This piece critiques legacy staging and strongly endorses continuous delivery and automated release practices. It thoroughly aligns with the principles and objectives of the Frequent Releases category, offering clear, in-depth arguments for modern, incremental deployment strategies.",
    "level": "Primary"
  },
  "Philosophy": {
    "resourceId": "6VmmXorMZZW",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T20:20:02",
    "ai_confidence": 20.94,
    "ai_mentions": 0.4,
    "ai_alignment": 2.5,
    "ai_depth": 2.1,
    "ai_intent": 2.7,
    "ai_audience": 6.2,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "There are no direct mentions of 'philosophy' or discussions of foundational principles, so the 'mentions' score is nearly zero. Conceptual alignment is weak because the content focuses on practical arguments about risk, staging, and engineering practices, rather than exploring underlying values or beliefs. Depth is shallow; the ideas are asserted, not explored philosophically. The intent is to persuade about delivery practices—more 'how' than 'why.' The audience skews technical (practitioner, engineer), which partially overlaps with philosophical discussions, but is not directly targeted. The content's focus is sharp and relevant, mostly on its stated topic, giving a solid signal score.",
    "reasoning_summary": "This piece centers on engineering practices and risk management, not delving into the core philosophies or foundational beliefs behind these methods. While it’s relevant for practitioners, it doesn’t fit the philosophical category’s intent or depth.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "6VmmXorMZZW",
    "category": "Tool",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 56.01,
    "ai_mentions": 2.8,
    "ai_alignment": 7.2,
    "ai_depth": 6.7,
    "ai_intent": 5.7,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content does not directly discuss specific tools, but refers abstractly to 'automated testing', 'continuous integration', and 'test-first development'—practices realized via tools within Agile/DevOps contexts. It explains why staging environments are not risk mitigators and argues for investing in quality and automation, which are enabled by tools. However, there are no explicit tool names, feature overviews, or deep tool-specific discussions. The audience is aligned (technical stakeholders deciding delivery strategy). The focus on best practices is relevant but lacks direct tool-focused analysis, resulting in moderate alignment and depth scores, and a middling overall tool category confidence.",
    "reasoning_summary": "The content touches on tools like automated testing and CI in principle, encouraging their use over staging environments, but it doesn't deeply discuss specific tools or tool features. Its core message is about delivery practices, so its fit with the 'Tool' category is moderate—not strong, but not irrelevant.",
    "level": "Tertiary"
  },
  "Technical Leadership": {
    "resourceId": "6VmmXorMZZW",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 75.05,
    "ai_mentions": 2.7,
    "ai_alignment": 8.5,
    "ai_depth": 6.7,
    "ai_intent": 7.9,
    "ai_audience": 8.3,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "Direct references to 'technical leadership' are absent, lowering the mentions score. However, the content substantially discusses practices central to technical leadership (emphasizing CI, automated testing, fast feedback), advocates for modern engineering excellence, and contrasts progressive delivery techniques with outdated traditions. The intent is clearly to influence technical decision-makers and practitioners toward best practices, which aligns closely with the category. Some limits in depth, as the discussion focuses on a single deployment topic rather than broader team dynamics or leadership models. No penalties are warranted as content is current and aligns tonally and contextually.",
    "reasoning_summary": "While not naming technical leadership, the content robustly advocates for principles and decision-making that are hallmarks of technical leadership, directly targeting those leading engineering practices. Its focus on quality, CI, and delivery excellence aligns well with the category.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "resourceId": "6VmmXorMZZW",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 74.9,
    "ai_mentions": 2.0,
    "ai_alignment": 8.9,
    "ai_depth": 7.1,
    "ai_intent": 7.9,
    "ai_audience": 8.6,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content does not directly mention 'Continuous Learning,' focusing instead on deployment strategies and risk mitigation. However, it strongly aligns with underlying principles of continuous improvement, feedback loops, and modern engineering practices—a core part of Continuous Learning in Agile/DevOps contexts. While it thoroughly explores quality and feedback as drivers of adaptability, it lacks explicit discussions about growth mindsets or knowledge sharing. The target audience (engineering, DevOps, Agile practitioners) is well matched, and the content is focused, with very little extraneous material. No penalties applied, as the tone and modernity align well.",
    "reasoning_summary": "While the article doesn't mention 'Continuous Learning' directly, it advocates for rapid automated feedback and ongoing improvement—key components of the category. It addresses a relevant audience with focused, modern advice, leading to a strong, though not perfect, fit for the category.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 24.25,
    "ai_mentions": 0.1,
    "ai_alignment": 2.7,
    "ai_depth": 2.3,
    "ai_intent": 2.5,
    "ai_audience": 8.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content does not directly mention Agile Transformation and focuses mainly on technical deployment strategies (automated testing, CI, test-first development) rather than organizational change, leadership, or frameworks associated with Agile Transformation. While there is some conceptual alignment with Agile values (e.g., automation, feedback loops), there is no exploration of transformation strategies, cultural shifts, leadership, or Agile-specific methodologies. The intended audience (engineers, teams facing deployment risks) overlaps in practice with Agile-adopting organizations, but purpose and depth are not oriented toward transformation initiatives per se. The signal is high for quality engineering discussion but off-topic for Agile Transformation. No outdated or contradictory perspective noted; thus, no penalties applied.",
    "reasoning_summary": "This content focuses on engineering practices to reduce deployment risk, mentioning concepts aligned with Agile values but never addressing transformation, organizational change, or Agile frameworks. It’s technical and practical, but not about Agile Transformation.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Management",
    "calculated_at": "2025-05-16T20:20:10",
    "ai_confidence": 44.58,
    "ai_mentions": 1.2,
    "ai_alignment": 4.3,
    "ai_depth": 4.9,
    "ai_intent": 4.1,
    "ai_audience": 6.8,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content focuses on deployment risk mitigation, challenging the value of staging environments in favor of engineering practices such as CI, automated testing, and quality engineering. While some themes (risk, organizational investment, delivery practices) are relevant tangentially to product management, the core argument is technical best practices. There are no direct references to product management, its methodologies, frameworks, or strategic considerations outlined in the category scope. The depth and audience are moderately aligned, as technical leaders are sometimes product management's audience. However, the dominant intent, terminology, and recommendations pertain to engineering and DevOps, not product management strategy, positioning, metrics, or stakeholder coordination.",
    "reasoning_summary": "While the content indirectly touches on themes relevant to product management, its main focus is technical deployment practices, risk, and engineering quality—not on strategic product management. Alignment, depth, and intent are moderate, but direct relevance is limited.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "resourceId": "6VmmXorMZZW",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T20:20:03",
    "ai_confidence": 95.0,
    "ai_mentions": 8.5,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.5,
    "ai_audience": 9.1,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly criticizes the notion that more staging environments reduce deployment risk and instead advocates for concrete operational best practices: automated testing, continuous integration, test-first development, audience-based deployments, and quality engineering. These are core to Agile, DevOps, and Lean operational practices. The discussion goes beyond superficial mentions by explaining why traditional staging is less effective than modern delivery strategies. The piece is purpose-built for technical audiences concerned with operational efficiency and risk, focusing tightly on improvements in delivery methods. No penalties were required; there is no sign of outdated advice, off-topic sections, or contradiction of the category framing.",
    "reasoning_summary": "This content strongly fits Operational Practices by arguing against passive risk reduction and promoting modern techniques like automation, CI, and test-first engineering—key to efficient operation. It's tightly focused, practical, and speaks directly to practitioners in Agile and DevOps.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "resourceId": "6VmmXorMZZW",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T20:20:04",
    "ai_confidence": 15.23,
    "ai_mentions": 0.4,
    "ai_alignment": 1.95,
    "ai_depth": 1.42,
    "ai_intent": 2.55,
    "ai_audience": 4.18,
    "ai_signal": 4.48,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on deployment risk, modern software delivery, and quality engineering, advocating for continuous integration and automated testing. Complexity Thinking principles such as non-linear dynamics, emergence, or Cynefin are not discussed or mentioned. While it references concepts relevant to modern adaptive practices, it does not engage with complexity science or theory, nor does it address complexity as a management paradigm. Audience targeting is technical but only indirectly related to the category.",
    "reasoning_summary": "This content is about deployment risk and modern engineering practices, not complexity science or frameworks. It doesn't discuss Complexity Thinking, so there's a very low confidence that it fits the category.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "6VmmXorMZZW",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T20:20:03",
    "ai_confidence": 22.8,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 2.4,
    "ai_audience": 7.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content does not mention Azure DevOps directly or indirectly; it focuses on deployment risk and the merits of staging environments versus automated quality practices. While it references concepts like continuous integration and testing, these are described generically and not in the context of Azure DevOps. The audience is technical, most likely DevOps practitioners, somewhat aligning, but otherwise, the content is outside the explicit scope of the Azure DevOps category.",
    "reasoning_summary": "This content debates deployment best practices in general terms without referencing Azure DevOps. It discusses CI, testing, and engineering excellence broadly but lacks any direct or contextual tie to Azure DevOps services or methodologies, so alignment and confidence are low.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "6VmmXorMZZW",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T20:20:03",
    "ai_confidence": 53.45,
    "ai_mentions": 1.9,
    "ai_alignment": 6.4,
    "ai_depth": 5.7,
    "ai_intent": 6.2,
    "ai_audience": 7.0,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content debates the value of staging environments and promotes practices like automated testing, CI/CD, and rapid feedback. While it advances flow principles by critiquing delays and advocating for speedier work throughput, it doesn't directly name 'Flow Efficiency' or quantify improvements using flow metrics. Its depth is moderate—discussing high-level arguments but lacking detailed flow techniques, visual management, or explicit WIP management. The focus is relevant for technical/engineering readers and favors modern delivery over outdated gates, offering a reasonable signal-to-noise ratio aligned with Lean/Agile ideology.",
    "reasoning_summary": "The piece indirectly supports Flow Efficiency by endorsing rapid feedback, CI/CD, and fewer pre-release gates, urging flow-promoting practices. However, it never explicitly discusses 'flow efficiency,' its metrics, or deep Lean principles, making the fit moderate but not strong.",
    "level": "Tertiary"
  },
  "Strategic Goals": {
    "resourceId": "6VmmXorMZZW",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 26.67,
    "ai_mentions": 0.3,
    "ai_alignment": 3.8,
    "ai_depth": 2.5,
    "ai_intent": 3.7,
    "ai_audience": 9.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content primarily critiques the efficacy of staging environments and advocates for modern engineering practices like automated testing and continuous integration. There are no direct mentions or frameworks for strategic goals, nor is the discussion centered on long-term objectives or organizational alignment. While the content loosely gestures toward 'engineering excellence' as a higher-level aim, its focus remains on tactics and operational delivery practices, not on strategic goal setting or alignment with Agile business agility. The target audience (engineering leaders, practitioners) overlaps somewhat, but the fit is tangential rather than direct.",
    "reasoning_summary": "This piece focuses on engineering practices over strategy, offering minimal discussion of long-term objectives or strategic alignment. Its value is tactical, not strategic, resulting in a low confidence alignment with the 'Strategic Goals' category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "6VmmXorMZZW",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T20:20:05",
    "ai_confidence": 1.2,
    "ai_mentions": 0.0,
    "ai_alignment": 0.8,
    "ai_depth": 0.5,
    "ai_intent": 1.2,
    "ai_audience": 0.9,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 1.0,
    "reasoning": "There are no direct mentions or references to Liberating Structures. The content focuses exclusively on software delivery risk mitigation via testing, CI, and quality engineering, without alluding to facilitation techniques, structured team interactions, or any part of the Liberating Structures toolkit. The intended audience overlaps slightly (technical organizations), but the core category is not invoked, explored, or conceptually aligned.",
    "reasoning_summary": "This content discusses deployment risk and engineering practices but doesn't reference Liberating Structures or facilitation methods, so alignment and confidence are minimal.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "6VmmXorMZZW",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 87.7,
    "ai_mentions": 6.4,
    "ai_alignment": 9.2,
    "ai_depth": 9.1,
    "ai_intent": 8.6,
    "ai_audience": 9.3,
    "ai_signal": 9.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly addresses best practices in continuous delivery and risk management, critiquing outdated staging practices and emphasizing modern Agile/DevOps principles. It discusses continuous integration, test-first development, and audience-based deployments, aligning strongly with Value Delivery's focus on iterative and continuous customer value. The discussion is targeted at technical strategists and practitioners who influence deployment processes, with a focused, relevant message and substantial depth regarding how quality engineering and feedback loops underpin effective value delivery. Mentions of the category are mostly implicit but strongly indicated by examples and context.",
    "reasoning_summary": "This piece compellingly argues for value delivery via modern engineering practices over obsolete staging, emphasizing iterative delivery, quality, and customer focus. It offers detailed, actionable alignment with Value Delivery principles, directly addressing the right audience with high clarity and minimal off-topic content.",
    "level": "Primary"
  },
  "Organisational Physics": {
    "resourceId": "6VmmXorMZZW",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T20:20:09",
    "ai_confidence": 33.45,
    "ai_mentions": 0.3,
    "ai_alignment": 4.8,
    "ai_depth": 4.1,
    "ai_intent": 3.8,
    "ai_audience": 5.7,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content critiques the notion that more staging environments reduce deployment risk, advocating for automated feedback loops and modern engineering practices. While it hints at systemic organizational factors (like feedback loops), it lacks explicit systems thinking or organisational dynamics discussion required by 'Organisational Physics.' The discussion is more about engineering strategy than holistic organizational behaviour, with minimal direct or conceptual linkage to the category's key topics.",
    "reasoning_summary": "This content is mostly focused on software engineering best practices, not on organisational systems or dynamics per se. While there’s some overlap (such as the mention of feedback loops and organisational investment in quality), it does not fit strongly in the 'Organisational Physics' category.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "6VmmXorMZZW",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T20:20:10",
    "ai_confidence": 14.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 0.8,
    "ai_audience": 8.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "Psychological safety is neither mentioned nor implied. The content critiques reliance on staging environments versus advocating modern quality engineering, continuous delivery, and automated testing to reduce risk. Focus is on technical risk mitigation, not on fostering an environment of open communication or psychological safety. The intended audience is engineering professionals, but there is no substantive alignment or depth regarding psychological safety.",
    "reasoning_summary": "This content focuses on deployment risk and engineering practices, not psychological safety. There are no direct or indirect links to team culture, open communication, or team risk-taking. As such, it doesn't fit the category of psychological safety.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "6VmmXorMZZW",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T20:20:12",
    "ai_confidence": 13.6,
    "ai_mentions": 0.3,
    "ai_alignment": 1.7,
    "ai_depth": 2.1,
    "ai_intent": 1.0,
    "ai_audience": 3.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on software engineering practices, specifically deployment risk and strategies like continuous integration, automated testing, and engineering professionalism. It does not explicitly mention or deeply explore entrepreneurship, nor does it center on value creation, risk-taking in business creation, or the entrepreneurial mindset. The target audience appears to be technical practitioners rather than entrepreneurs. While there is a passing mention of business-level risk, this is related to software reliability, not entrepreneurial strategy or innovation.",
    "reasoning_summary": "This piece is technical, centered on deployment practices—not entrepreneurship. It barely aligns with entrepreneurial risk concepts and targets engineers, not entrepreneurs, so confidence in its fit for this category is very low.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "6VmmXorMZZW",
    "category": "Framework",
    "calculated_at": "2025-05-16T20:20:15",
    "ai_confidence": 29.21,
    "ai_mentions": 1.8,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 3.2,
    "ai_audience": 4.0,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses on debating the efficacy of staging environments versus modern software engineering practices (like automated testing, CI/CD, test-first development, and quality engineering). While these are components or practices likely integrated within frameworks, the text does not directly reference, discuss, or compare structured frameworks themselves (such as Scrum, SAFe, or Kanban). There are no explicit mentions of 'framework' or any Agile/DevOps/Lean frameworks by name or principle; instead, the focus is narrowly on specific practices and risk mitigation. Audience targeting somewhat overlaps with framework discussions (technical/engineering/practitioner), but the content neither explores, adapts, nor positions any framework or structured methodology as its main theme. Signal is somewhat diluted by criticism of outdated practices, though not off-topic. The depth is higher than surface-level but lacks substantive exploration of frameworks.",
    "reasoning_summary": "This content critiques the reliance on staging environments and promotes engineering best practices but does not directly discuss or analyze frameworks. It references some practices that frameworks encourage, yet lacks explicit or in-depth framework content, resulting in a low confidence for category fit.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "6VmmXorMZZW",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 38.0,
    "ai_mentions": 0.7,
    "ai_alignment": 4.1,
    "ai_depth": 3.6,
    "ai_intent": 4.5,
    "ai_audience": 6.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content discusses reducing deployment risk through modern delivery practices like automated testing and CI, which can conceptually align with Lean's value on quality and fast feedback. However, there's no direct mention of Lean Principles, waste reduction, or key Lean terminology. The depth is moderate, with a clear intent toward engineering best practices, but the main focus is not explicitly on Lean. The audience (engineering/technology teams) overlaps with Lean practitioners, and most content is signal, though it's nearer to DevOps/CI/CD than Lean, so confidence is moderate.",
    "reasoning_summary": "This piece emphasizes engineering excellence and automated feedback to reduce deployment risk, which loosely aligns with Lean’s focus on quality and value. However, it doesn’t mention Lean or its core concepts directly, so fit is only moderate.",
    "level": "Ignored"
  },
  "Scrum": {
    "resourceId": "6VmmXorMZZW",
    "category": "Scrum",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 21.24,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.8,
    "ai_intent": 2.6,
    "ai_audience": 6.7,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content does not mention Scrum explicitly and focuses on deployment, staging, and modern engineering practices (e.g., test-first, CI/CD), but not on Scrum events, roles, or artifacts. While some values (iterative feedback, professionalism) overlap with Agile ideals, there's no direct or substantive discussion on the Scrum framework or its implementation. Its main audience (delivery/engineering) overlaps somewhat, but the focus is not Scrum-specific.",
    "reasoning_summary": "This content centers on deployment approaches and quality engineering, with little to no reference to Scrum principles or practices. While there are some conceptual alignments with Agile, the discussion is not focused on Scrum, resulting in a low category confidence.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "6VmmXorMZZW",
    "category": "Principle",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 62.05,
    "ai_mentions": 1.6,
    "ai_alignment": 8.0,
    "ai_depth": 7.2,
    "ai_intent": 7.5,
    "ai_audience": 7.1,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content explicitly contrasts outdated and modern delivery practices, emphasizing principles such as quality engineering, fast feedback, and continuous integration (conceptual alignment and depth). It advocates for 'engineering excellence' through actionable approaches like automated testing instead of relying on staging gates. However, direct mentions of 'principle' or named frameworks (e.g., Agile, DevOps) are absent, and while the core message aligns with key principles (e.g., continuous improvement, value delivery), the discussion operates at a practices/advocacy level rather than naming or deeply dissecting formal principles. The primary audience is technical professionals, and the signal-to-noise ratio is high, but the fit is somewhat inferred rather than explicit.",
    "reasoning_summary": "This content strongly advocates for modern engineering practices—continuous integration, automated testing, and quality—but focuses more on best practices than on explicitly named principles. Its message is closely aligned to foundational DevOps and Lean principles, though without directly labeling them.",
    "level": "Secondary"
  },
  "Product Owner": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T20:20:12",
    "ai_confidence": 7.2,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.9,
    "ai_intent": 1.5,
    "ai_audience": 0.8,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on the efficacy of staging environments, continuous integration, and quality engineering, with no direct mention of the Product Owner or their accountability. The main topic is deployment risk mitigation practices and software engineering professionalism. While decision-making and strategic considerations might align with some Product Owner responsibilities, there is no explicit or in-depth connection to the role or accountability of the Product Owner. Audience is more technical (engineers and DevOps) than product accountability practitioners. Minimal relevance to the Product Owner category.",
    "reasoning_summary": "This content centers on engineering and deployment practices, not the Product Owner’s accountability. There are no direct or substantial references to the Product Owner role, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "6VmmXorMZZW",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 10.55,
    "ai_mentions": 0.1,
    "ai_alignment": 1.6,
    "ai_depth": 2.0,
    "ai_intent": 2.2,
    "ai_audience": 3.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content critiques the misconception that more staging environments reduce deployment risk, advocating instead for automated testing, continuous integration, and modern engineering practices. However, there are no direct mentions or discussion of Minimum Viable Product or its principles. The content is focused on deployment and quality assurance rather than MVP development, Lean Startup, or iteration for market validation. While the target audience overlaps slightly (engineering/tech audience), the main theme and depth do not align with MVP concepts, resulting in a very low confidence for this classification.",
    "reasoning_summary": "This content focuses on deployment risk and modern engineering practices, not the Minimum Viable Product concept. There are no direct MVP mentions or discussion of MVP-specific topics, so alignment is weak and confidence is very low.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "6VmmXorMZZW",
    "category": "Observability",
    "calculated_at": "2025-05-16T20:20:16",
    "ai_confidence": 16.18,
    "ai_mentions": 0.3,
    "ai_alignment": 2.6,
    "ai_depth": 1.9,
    "ai_intent": 1.2,
    "ai_audience": 3.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on deployment risk, automated testing, and modern delivery practices but never explicitly discusses observability or its principles (like metrics, logs, or traces). Observability tools and concepts are not mentioned directly or indirectly, and the main arguments revolve around quality engineering, not measuring or understanding system internals by data. The audience somewhat overlaps with those interested in observability, but the content remains tangential and largely unrelated.",
    "reasoning_summary": "This piece centers on deployment risks and quality engineering rather than observability. While the audience overlaps with practitioners who might value observability, the content doesn't reference core observability topics or principles, making it only loosely relevant to this category.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "6VmmXorMZZW",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 11.7,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 1.8,
    "ai_intent": 2.5,
    "ai_audience": 2.1,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content debates the effectiveness of staging environments versus modern engineering practices in reducing deployment risk, but does not reference or explicitly analyze decision theory concepts. There is no discussion of heuristics, modeling uncertainty, or frameworks from decision theory. Alignment is weak since the focus is on technical practices rather than decision-making under uncertainty. Audience and intent are primarily practitioners aiming for delivery excellence, not theorists or strategists in decision theory. The content stays mostly on topic but rarely overlaps with decision theory proper, and the signal remains largely technical without linking to behavioral economics or choices under uncertainty.",
    "reasoning_summary": "The material focuses on software engineering practices for risk reduction, not decision theory. It lacks explicit or conceptual references to decision-making under uncertainty, thus aligning poorly with the category despite discussing risk.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "6VmmXorMZZW",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 93.25,
    "ai_mentions": 7.4,
    "ai_alignment": 9.5,
    "ai_depth": 9.2,
    "ai_intent": 8.9,
    "ai_audience": 9.3,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content centrally questions the efficacy of staging environments, positioning quality engineering practices, test-first development, CI/CD, and automated testing as the real enablers of safe, high-quality delivery. Although 'Technical Excellence' is not named verbatim, principles directly tied to its definition are covered in detail. Multiple explicit references to best engineering practices, a focus on culture change, and a clear intent to educate technical practitioners support strong alignment. The discussion is thorough, citing real-world high-impact platforms, and avoids distraction or filler. No outdated concepts or negatively framed tones are present, thus no penalties were applied.",
    "reasoning_summary": "This content strongly supports Technical Excellence, emphasizing CI/CD, automated testing, and engineering quality as primary mitigators of deployment risk. It provides insightful, practical examples for a technical audience, deeply aligning with the category’s intent and scope.",
    "level": "Primary"
  },
  "Software Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Software Development",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 92.2,
    "ai_mentions": 6.6,
    "ai_alignment": 9.5,
    "ai_depth": 9.2,
    "ai_intent": 9.4,
    "ai_audience": 9.1,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content critiques the myth of multiple staging environments reducing deployment risk, instead advocating for industry-recognized software development practices like automated testing, continuous integration, test-first development, and engineering excellence. It directly addresses core software development concepts—process improvement, risk mitigation, and modern delivery practices—rather than tangential topics. There is high conceptual alignment, intent, and audience fit; the content is practical, focused, and targets practitioners, though the term 'Software Development' itself is not directly named, leading to a modest deduction on the 'mentions' score. There is no outdated recommendation nor anti-category sentiment.",
    "reasoning_summary": "This piece robustly supports modern software development practices and challenges outdated approaches, thoroughly aligning with the category. It's insightful, methodical, and addresses practitioners directly, though lacks explicit category naming.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "6VmmXorMZZW",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T20:20:06",
    "ai_confidence": 19.9,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 1.7,
    "ai_intent": 2.5,
    "ai_audience": 7.1,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content critiques the overuse of staging environments in deployment, suggesting that automated testing and quality engineering are more effective for reducing risk. It does not directly reference troubleshooting, nor does it provide methods for identifying or resolving technical issues. The focus is on delivery philosophy and quality practices, not on diagnosing or resolving software/system problems. The intended audience is technical, and the content remains reasonably focused, but lacks explicit and in-depth engagement with troubleshooting themes.",
    "reasoning_summary": "This content advocates for automated testing and modern engineering over extra staging but doesn't directly address troubleshooting or problem resolution. It's more about software delivery strategy than diagnosing technical issues, so its fit for 'Troubleshooting' is low.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 22.35,
    "ai_mentions": 1.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.9,
    "ai_intent": 2.7,
    "ai_audience": 7.1,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content critiques the efficacy of staging environments in reducing deployment risk but focuses on advocating automated testing, continuous integration, and quality engineering. There are implicit references to hypothesis testing (e.g., audience-based deployments) and feedback loops, aligning tangentially with experimentation. However, it does not directly discuss hypothesis-driven experimentation, formal testing of assumptions, or integrating experiments in Agile processes. It targets practitioners and provides some relevant context, but the primary theme is quality, not experimentation.",
    "reasoning_summary": "This piece emphasizes modern quality and deployment practices over traditional staging environments but offers little direct coverage of experimentation or hypothesis-driven Agile practices, thus only marginally aligns with the Experimentation category.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T20:20:09",
    "ai_confidence": 34.325,
    "ai_mentions": 0.1,
    "ai_alignment": 4.3,
    "ai_depth": 4.6,
    "ai_intent": 5.2,
    "ai_audience": 7.1,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content critiques the reliance on staging environments and promotes modern DevOps practices like automated testing and continuous integration for risk reduction. However, it does not directly reference Evidence Based Management or its core concepts such as empirical decision-making, value metrics, or outcome management. Its alignment is partial—it touches on decision-making and engineering discipline but lacks specific EBM language or metrics focus. The audience (technical leads, engineers, possibly managers) overlaps somewhat with EBM's intended readers, and the discussion is relevant and relatively focused; however, the lack of overt EBM framing and explicit evidence-based management orientation limits the applicability.",
    "reasoning_summary": "While the article emphasizes data-driven deployment and quality engineering, it lacks explicit Evidence Based Management references or discussion of EBM metrics, making it only loosely aligned with the category.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Estimation",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 9.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 1.0,
    "ai_audience": 1.2,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses deployment risk, quality engineering, continuous integration, and automated testing—topics related to modern software development, but it does not mention estimation, forecasting, or any empirically-driven estimation techniques. There are no discussions about Agile or Scrum estimation methods, empirical data in estimation, or stakeholder alignment via estimation. Thus, there is minimal to no alignment with the Estimation category, and the confidence score reflects that the fit is almost nonexistent.",
    "reasoning_summary": "This content addresses deployment risk through quality and automation, not estimation. There are no ties to Agile or Scrum estimation practices, so confidence in its fit for the Estimation category is extremely low.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "6VmmXorMZZW",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 8.0,
    "ai_mentions": 0.1,
    "ai_alignment": 0.2,
    "ai_depth": 0.2,
    "ai_intent": 0.2,
    "ai_audience": 0.2,
    "ai_signal": 0.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not mention or discuss the Daily Scrum, nor any Scrum events, roles, or related practices. Its focus is entirely on deployment risk, staging environments, and modern software delivery practices. There are no connections to the structure, purpose, or processes of a Daily Scrum. Every dimension scores almost the minimum, as there is no relevance to the intended category.",
    "reasoning_summary": "This content is unrelated to the Daily Scrum. It focuses on deployment risk and engineering practices, without mentioning or referencing Scrum events or principles. Therefore, it fits the category extremely poorly.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 14.353,
    "ai_mentions": 0.3,
    "ai_alignment": 1.7,
    "ai_depth": 1.9,
    "ai_intent": 2.4,
    "ai_audience": 3.3,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on deployment risk and engineering practices like automated testing, CI, and quality assurance. There are no direct or indirect mentions of portfolio management, project prioritization, strategic alignment, or value stream optimization. The main audience is engineering practitioners, not portfolio or strategic managers. The discussion stays at the technical process level, offering no consideration of portfolio management concepts. Thus, confidence is very low.",
    "reasoning_summary": "This content is about technical deployment practices, not portfolio management. It targets engineers and doesn’t address topics like strategic alignment or project portfolios, resulting in a low confidence score for this category.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "6VmmXorMZZW",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 94.7,
    "ai_mentions": 8.4,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.0,
    "ai_audience": 9.2,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content makes direct and frequent references to Agile engineering practices such as automated testing, continuous integration, test-first development, and deployment automation—clearly aligning with the category. It robustly critiques outdated staging approaches, advocating for modern practices like CI/CD and automated feedback loops. The discussion goes beyond stating practices by illustrating their real-world impact (e.g., referencing Microsoft Teams and Starbucks POS), and strongly positions engineering excellence through automation, quality assurance, and test-driven strategies as the only sustainable methods for reducing deployment risk. The audience is technical, and the discussion is highly relevant, focused, and aligned. No penalties were warranted: the tone is professional, up-to-date, and supportive of established Agile philosophies.",
    "reasoning_summary": "This content thoroughly and convincingly advocates for core Agile engineering practices—prioritizing automation, continuous integration, and test-first development over legacy staging environments. It's expertly targeted and relevant, with strong alignment and depth, making it an excellent fit for the category.",
    "level": "Primary"
  },
  "Lean": {
    "resourceId": "6VmmXorMZZW",
    "category": "Lean",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 18.35,
    "ai_mentions": 0.7,
    "ai_alignment": 2.9,
    "ai_depth": 2.4,
    "ai_intent": 2.6,
    "ai_audience": 4.2,
    "ai_signal": 2.7,
    "ai_penalties_applied": true,
    "ai_penalty_points": 1.5,
    "ai_penalty_details": "Alignment (-0.5): No explicit Lean concepts or terminology. Depth (-0.5): Lacks Lean-specific exploration, focuses on quality and CI/CD. Signal (-0.5): Lean not topic focus, tangential at best.",
    "final_score": 18.0,
    "reasoning": "The content focuses on deployment risk, modern testing, and continuous delivery but does not reference Lean or its core principles such as waste elimination, value stream mapping, or Lean tools. Concepts like 'engineering excellence' and continuous improvement are Lean-adjacent, but the discussion remains centered on technical delivery rather than Lean methodology. No direct mentions or substantial Lean discourse occur. Some audience overlap exists, but the fit is tangential. Penalties applied for lack of explicit Lean content and depth.",
    "reasoning_summary": "This content is centered on deployment and quality practices, with no direct reference or exploration of Lean principles. While there is some conceptual overlap with continuous improvement, the focus stays technical rather than Lean-specific. As such, it only weakly fits the Lean category.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "6VmmXorMZZW",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 56.87,
    "ai_mentions": 1.2,
    "ai_alignment": 7.7,
    "ai_depth": 4.8,
    "ai_intent": 6.5,
    "ai_audience": 6.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": true,
    "ai_penalty_points": 1.1,
    "ai_penalty_details": "Mentions penalized (by 0.8) for not explicitly referencing 'organisational agility' or synonyms; depth penalized (by 0.3) for discussing agility-enabling practices without exploring cultural or organisational transformation.",
    "final_score": 57.0,
    "reasoning": "The content focuses strongly on deployment risk reduction through modern engineering practices like automated testing, continuous integration, and quality mindset. These themes are conceptually aligned with the technical foundations that support organisational agility (fast feedback loops, continuous learning, engineering excellence), but do not directly discuss agility as a broader organisational paradigm. There is no explicit mention of agility, agile transformations, leadership, or cultural/structural topics—key facets of the category. The depth is moderate, providing practical arguments but staying at the engineering practice level without integrating broader organisational frameworks or agility case studies. The intended audience seems to be technical leads and decision-makers, partially aligned but not focused on agility-first stakeholders. The signal/noise is high: the message is clear and relevant, with little filler. Penalties applied for lack of explicit mention and insufficient organisational/cultural depth.",
    "reasoning_summary": "This content directly champions modern engineering practices that underpin organisational agility, but stops short of explicit references or broader organisational themes. Its relevance is strongest for technical leaders, linking delivery methods to adaptability, though it doesn't address agility as a holistic organisational goal.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "6VmmXorMZZW",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 23.68,
    "ai_mentions": 0.8,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.4,
    "ai_audience": 6.3,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content analyzes deployment risk and advocates for fast, automated feedback loops in engineering practices. While it uses the phrase 'feedback loops', the discussion is focused primarily on automated software testing, CI/CD, and quality assurance—not on processes to gather, analyze, or integrate customer feedback into product development. There is no exploration of customer feedback mechanisms, user insight collection, or feedback integration strategies. Any mention of feedback loops refers strictly to engineering, not to customer or user perspectives. The audience aligns with practitioners, but the content itself is only tangentially related to the classification definition.",
    "reasoning_summary": "This piece spotlights deployment risk and advocates for internal engineering feedback loops. However, it lacks any exploration of customer feedback collection or integration, so its fit with the 'Customer Feedback Loops' category is low.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T20:20:07",
    "ai_confidence": 48.73,
    "ai_mentions": 0.8,
    "ai_alignment": 5.9,
    "ai_depth": 5.6,
    "ai_intent": 5.8,
    "ai_audience": 5.7,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content strongly advocates for modern engineering practices like continuous integration, automated testing, and fast feedback loops—concepts related to Agile principles. However, it does not explicitly mention Agile Product Management or core topics such as product ownership, customer value prioritisation, or product vision alignment. The audience appears to be technical leaders or engineers concerned with deployment risk. While Agile-aligned in spirit, the focus is on technical delivery risk, not the comprehensive scope of Agile Product Management.",
    "reasoning_summary": "While the content encourages Agile-adjacent engineering practices and criticizes outdated deployment methods, it does not directly address Agile Product Management's focus on product strategy, ownership, or backlog value. Its emphasis is more on DevOps and deployment risk than on managing products in an Agile way.",
    "level": "Tertiary"
  },
  "Agile Planning": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T20:20:09",
    "ai_confidence": 51.185,
    "ai_mentions": 2.3,
    "ai_alignment": 6.8,
    "ai_depth": 6.9,
    "ai_intent": 4.7,
    "ai_audience": 6.2,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 51.0,
    "reasoning": "The content critiques over-reliance on staging environments and advocates for modern delivery practices—automated testing, CI, continuous delivery—which are aligned with Agile principles. However, it never explicitly references Agile Planning or its key topics, such as backlog management, sprint planning, or empirical planning. The primary intent is to challenge legacy risk mitigation strategies, not to explore or teach Agile Planning practices directly. While the advocacy of feedback loops and engineering excellence is conceptually aligned, the focus remains more on deployment and quality than on planning processes. The target audience (technical and engineering managers) partially overlaps with Agile practitioners, but the discussion is not tailored to Agile planners specifically, nor is there direct instructional content for Agile Planning.",
    "reasoning_summary": "The content supports Agile-adjacent practices like continuous integration and fast feedback loops but doesn't discuss Agile Planning or its techniques directly. Its main focus is on deployment risk, not Agile planning methodologies, resulting in moderate categorical confidence.",
    "level": "Tertiary"
  },
  "Evidence Based Leadership": {
    "resourceId": "6VmmXorMZZW",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T20:20:10",
    "ai_confidence": 43.35,
    "ai_mentions": 1.9,
    "ai_alignment": 4.2,
    "ai_depth": 4.0,
    "ai_intent": 4.1,
    "ai_audience": 6.1,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content critiques the use of multiple staging environments and advocates for automated testing, quality engineering, and fast feedback loops. While these are modern software delivery principles with some ties to evidence-based practices, the article never explicitly references evidence-based leadership, empirical decision-making, or management frameworks. The focus is on technical and process quality rather than leadership or organisational improvement through empirical evidence. Audience alignment is partial, as engineering and technical leaders might benefit, but executives or leadership practitioners remain a secondary audience. Depth is modest—the argument is clear but not deeply substantiated with metrics or case studies. Overall, the content implies aspects of evidence-based thinking but never grounds it in leadership or evidence-based management.",
    "reasoning_summary": "While this piece promotes modern delivery and risk-reduction strategies, it focuses chiefly on engineering excellence, not on evidence-based leadership practices or decision-making. There’s an implicit nod to data-driven thinking, but little direct or deep alignment with the category.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T20:20:12",
    "ai_confidence": 42.73,
    "ai_mentions": 1.6,
    "ai_alignment": 5.9,
    "ai_depth": 6.1,
    "ai_intent": 5.5,
    "ai_audience": 7.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content strongly critiques traditional deployment risk mitigation through staging and advocates for engineering practices like test-first development, continuous integration, and automation. While these ideas correlate with Agile's emphasis on built-in quality and rapid feedback, there are no explicit references to Agile values, principles, or the Agile Manifesto. The focus is pragmatic process improvement, not a philosophical discussion of Agile. The depth and alignment are moderate because while the advocated practices are common in Agile, the discussion stops short of connecting them directly to Agile principles, values, or transformation. Intent is somewhat aligned—a message consistent with Agile mindset, but the audience targets professionals interested in risk reduction and engineering, not Agile philosophy per se.",
    "reasoning_summary": "The content urges engineering excellence and automated practices to reduce deployment risk, echoing Agile themes but lacking direct discussion of Agile values or principles. Its focus on process over philosophy keeps its fit within the category moderate.",
    "level": "Tertiary"
  },
  "Change Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Change Management",
    "calculated_at": "2025-05-16T20:20:15",
    "ai_confidence": 45.7,
    "ai_mentions": 0.3,
    "ai_alignment": 3.6,
    "ai_depth": 4.8,
    "ai_intent": 3.1,
    "ai_audience": 6.4,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content focuses on deployment risk reduction via engineering practices like automated testing and continuous delivery, not on organizational change management. While it urges organizations to adopt modern practices and shift mindsets, it lacks direct mention or in-depth exploration of change management principles, stakeholder engagement, or substantive change tactics in an Agile/DevOps context. The primary audience could include leaders and practitioners, but the relevance to change management is indirect and not holistic. No outdated or contradictory tone detected, so no penalties applied.",
    "reasoning_summary": "The content argues for technical excellence over outdated deployment safety practices but doesn't directly address change management strategies, stakeholder engagement, or organizational transformation. Its connection to 'Change Management' is indirect and not comprehensive, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Kanban": {
    "resourceId": "6VmmXorMZZW",
    "category": "Kanban",
    "calculated_at": "2025-05-16T20:20:15",
    "ai_confidence": 11.1,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.3,
    "ai_audience": 4.9,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content does not mention Kanban directly or indirectly, nor cover its principles such as visualisation, WIP limits, flow management, or continuous improvement as specifically defined in Kanban methodology. The main focus is on deployment risk management, testing, and quality engineering. There is a passing mention of feedback loops, which is sometimes relevant to Kanban, but these are discussed in a DevOps/engineering excellence context rather than Kanban itself. The intended audience is likely practitioners interested in modern delivery practices, but not specifically Kanban. Therefore, alignment, depth, and intent are all minimal.",
    "reasoning_summary": "This content focuses on engineering practices for deployment risk and quality, with no reference to Kanban principles, boards, or practices. It does not fit the Kanban category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "6VmmXorMZZW",
    "category": "Market Share",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 7.45,
    "ai_mentions": 0.1,
    "ai_alignment": 0.5,
    "ai_depth": 0.5,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content debates whether increasing staging environments reduces deployment risks, focusing on modern engineering practices for reliability and speed. Nowhere does it mention strategies or metrics to expand market share, nor does it discuss competitive advantage, market positioning, or growth. Its intent is on deployment safety, not market presence.",
    "reasoning_summary": "This content centers on deployment risk and engineering processes, not strategies to increase market share. It does not address competitive advantage, market positioning, or customer-centric growth, making it a poor fit for the 'Market Share' category.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 12.8,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 2.4,
    "ai_audience": 2.3,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on deployment practices and risk mitigation, specifically critiquing the reliance on multiple staging environments. It emphasizes automated testing, continuous integration, and test-first development generally, but does not directly mention Acceptance Test Driven Development (ATDD), its principles, collaboration, or acceptance criteria. While 'test-first development' and 'automated testing' overlap with broader testing philosophies, no substantial discussion is provided regarding ATDD’s unique collaborative or acceptance-criteria-driven approach. No outdated or negative tone penalties were warranted.",
    "reasoning_summary": "This piece discusses modern deployment and testing practices, but does not address ATDD principles, collaboration, or acceptance criteria. There are no direct mentions or substantial alignment, resulting in a very low fit for the ATDD category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "6VmmXorMZZW",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T20:20:10",
    "ai_confidence": 7.8,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.2,
    "ai_intent": 1.2,
    "ai_audience": 1.0,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses deployment risks and advocates for modern delivery practices, such as CI/CD, automated testing, and engineering excellence. However, it does not mention Open Space Agile or its principles, nor does it address psychological safety, collective co-creation, emergence, or any aspect of Open Space Technology in Agile transformation. There is an alignment with Agile thinking in promoting quality and continuous integration, but no substantive connection exists to Open Space Agile concepts or methodology, and the audience is general IT/engineering rather than specifically those engaged with organizational agility transformation via Open Space Agile.",
    "reasoning_summary": "This content supports general Agile and modern engineering practices but does not mention or explore Open Space Agile or its core themes. It is not a fit for the 'Open Space Agile' category.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "6VmmXorMZZW",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 16.48,
    "ai_mentions": 0.0,
    "ai_alignment": 2.6,
    "ai_depth": 2.8,
    "ai_intent": 2.4,
    "ai_audience": 4.3,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on deployment risk and the ineffectiveness of staging environments versus modern engineering practices such as automated testing and continuous integration. There are no direct mentions or explicit discussion of Beta Codex principles, decentralised or human-centric organisational design, or related foundational theories. Conceptual overlap is minimal; the emphasis is on quality engineering rather than organisational structure or adaptive culture. The target audience is technical, possibly including engineers and software managers, but not specifically practitioners of BetaCodex. The content remains focused and relevant to modern delivery, but does not address decentralisation, adaptive frameworks, or human-centric leadership.",
    "reasoning_summary": "This article centers on modern engineering practices over staging environments to reduce deployment risk. While highly relevant to development teams, it doesn't address Beta Codex principles, decentralisation, or adaptive organisational design, resulting in low category alignment.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "6VmmXorMZZW",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 81.37,
    "ai_mentions": 7.3,
    "ai_alignment": 8.6,
    "ai_depth": 8.7,
    "ai_intent": 8.5,
    "ai_audience": 7.9,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "The content directly critiques the belief that more staging environments reduce deployment risk, arguing instead that practices like automated testing, continuous integration, and audience-based deployments are more effective. Terms such as 'continuous delivery' and 'audience-based deployments' are closely related to deployment strategies, and the argument is framed around risk management in deployment. However, terms like blue-green deployment or canary releases are not mentioned by name, and the main thrust is a critical perspective on a specific aspect of deployment practice. The depth of discussion is strong, offering practical examples (Windows, Teams, Starbucks POS) and reasoning, but could be more explicit in surveying a wider variety of deployment strategies. The audience is technical and practitioner-oriented, matching the intended category. No penalties apply, as the content is contemporary, relevant, and not satirical.",
    "reasoning_summary": "The content challenges the value of multiple staging environments, instead promoting practices like automated testing and continuous integration—central concepts in modern deployment strategies. It's relevant, in-depth, and targets a technical audience, though it doesn't cite every key deployment strategy by name.",
    "level": "Primary"
  },
  "DevOps": {
    "resourceId": "6VmmXorMZZW",
    "category": "DevOps",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 94.03,
    "ai_mentions": 7.9,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content doesn't explicitly mention 'DevOps' by name, but it exhibits strong conceptual alignment with the DevOps philosophy. It challenges conventional staging environment reliance in favor of modern, automation-driven, quality-first practices—core to DevOps. The focus on continuous integration, feedback loops, automation, and cultural shift toward shared responsibility is thorough and exemplified with industry-relevant examples. The intent is clearly to inform and persuade practitioners and decision-makers toward DevOps-aligned thinking. Audience fit is ideal for those in software delivery, engineering management, or operations. The content stays highly focused, offering minimal filler and strong signal. No penalties were needed, as nothing is outdated, nor does the tone contradict DevOps framing.",
    "reasoning_summary": "This piece aligns closely with DevOps by promoting automated testing, fast feedback loops, and quality engineering over traditional staging environments. It addresses technical and managerial audiences, staying focused on key DevOps practices and offering deep, relevant insights that reinforce the category.",
    "level": "Primary"
  },
  "Team Motivation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 11.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.4,
    "ai_intent": 1.2,
    "ai_audience": 1.5,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses solely on challenging the value of staging environments for deployment risk, advocating for technical practices like automated testing, continuous integration, and engineering excellence. There are no explicit or implicit discussions of team motivation, psychological safety, engagement, or team dynamics. The intent is technical rather than motivational, targeting development and engineering practices, with no audience-specific language toward team motivation. Minor alignment could be inferred only where 'engineering excellence' might contribute to team pride, but this is indirect and unsubstantiated in the text. Thus, confidence for the 'Team Motivation' category is extremely low.",
    "reasoning_summary": "This content centers on engineering practices for deployment risk and doesn't address team motivation, engagement, or team dynamics—key elements of the category. It's strongly technical, so its fit for 'Team Motivation' is minimal.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "6VmmXorMZZW",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 5.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 1.0,
    "ai_audience": 2.5,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses exclusively on deployment risk, staging environments, and quality engineering practices such as automated testing and continuous integration. There is no mention or exploration of Scrum Teams, their structure, accountability, or role within the Scrum framework. The themes and depth have practically zero overlap with the 'Scrum Team' category as defined, hence the extremely low scores across all dimensions. No penalties apply since there is no outdated or contradictory information; the topic is simply unrelated.",
    "reasoning_summary": "This content is not about Scrum Teams. It addresses deployment risk and quality practices, without any references to Scrum Team roles, purpose, or accountability, thus offering negligible alignment with the category.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "6VmmXorMZZW",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 41.55,
    "ai_mentions": 0.2,
    "ai_alignment": 4.8,
    "ai_depth": 3.5,
    "ai_intent": 5.6,
    "ai_audience": 7.3,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content does not mention 'Systems Thinking' directly and focuses on the comparative effectiveness of deployment strategies, specifically critiquing the reliance on staging environments in favor of continuous delivery and automated testing. While there are implicit references to feedback loops and system-wide implications, these are not framed through Systems Thinking principles or language. The alignment and depth are modest, as the core discussion addresses deployment risk and quality engineering more from a modern DevOps perspective than a holistic, systemic one. The audience aligns with practitioners dealing with delivery risk, and the content is focused with little irrelevant material. No penalties apply, as the content is current and not critical of Systems Thinking but rather of outdated practices.",
    "reasoning_summary": "The content critiques traditional deployment risk strategies, advocating for automation and quality over staging environments. While it touches on feedback and systemic improvement, it doesn't explicitly engage with Systems Thinking principles, leading to low overall category confidence.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "resourceId": "6VmmXorMZZW",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 6.02,
    "ai_mentions": 0.0,
    "ai_alignment": 0.4,
    "ai_depth": 0.4,
    "ai_intent": 1.1,
    "ai_audience": 2.1,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content discusses deployment risk mitigation strategies, focusing on the effectiveness of automated testing versus staging environments. It does not mention or explore working agreements, team norms, or collaborative practices. There are no direct or indirect references to the creation, use, or benefits of working agreements in Agile or Scrum. The intent targets engineering practice advocacy rather than norms for team collaboration. Audience may include practitioners, but with no structured discussion on teamwork or collaborative agreements per the classification definition. No penalty is warranted as the content is not outdated nor does it contradict the tone. All scores reflect the minimal—almost nonexistent—fit.",
    "reasoning_summary": "This content focuses on deployment risk and engineering practices, with no references to working agreements or related team norms. It does not match the category's intent or definition, resulting in a very low confidence rating.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 66.95,
    "ai_mentions": 2.3,
    "ai_alignment": 7.2,
    "ai_depth": 7.7,
    "ai_intent": 7.1,
    "ai_audience": 8.1,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content does not mention 'Application Lifecycle Management' directly, focusing instead on deployment risk management and modern engineering practices such as automated testing and continuous integration. However, these are key aspects within the ALM lifecycle (development, deployment, maintenance). The discussion is thorough and targeted at practitioners responsible for application delivery and maintenance. The primary gaps are the lack of explicit ALM-specific language and frameworks, with the argument being framed more as a critique of staging environments than an exploration of ALM as a holistic discipline.",
    "reasoning_summary": "This content dives into risk management and modern deployment practices, aligning well with ALM’s focus on effective governance and delivery. Though ALM isn’t directly named, the depth and audience fit are strong—but broader ALM context and terminology are missing. Confidence is moderate.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "resourceId": "6VmmXorMZZW",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T20:20:08",
    "ai_confidence": 1.6,
    "ai_mentions": 0.1,
    "ai_alignment": 0.7,
    "ai_depth": 0.8,
    "ai_intent": 0.2,
    "ai_audience": 1.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content is focused entirely on deployment risk, staging environments, and DevOps practices such as automated testing and continuous integration. There is no direct or indirect reference to Sprint Review or any Scrum event. The content does not discuss reviewing increments, stakeholder feedback, or backlog adaptation. Its audience is engineering teams or technical leadership concerned with deployment quality, not participants of Scrum Sprint Reviews. There is virtually no signal relevant to Sprint Review; confidence is extremely low.",
    "reasoning_summary": "This content addresses deployment risk and modern engineering practices, without any reference to Sprint Reviews or Scrum events. Its ideas and audience do not fit the Sprint Review category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T20:20:10",
    "ai_confidence": 20.65,
    "ai_mentions": 0.7,
    "ai_alignment": 2.8,
    "ai_depth": 2.7,
    "ai_intent": 3.0,
    "ai_audience": 5.5,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on deployment risk and software engineering practices such as automated testing and continuous delivery, arguing against the use of multiple staging environments. While it promotes modern Agile engineering and hints at organizational improvement, it does not mention leadership, leadership roles, or leader-driven culture change. The intended audience seems practitioner/engineer rather than Agile leaders. No obsolete or critical tone penalties apply.",
    "reasoning_summary": "This content discusses deployment risk and modern engineering but doesn't address leadership or Agile leadership concepts. Its primary focus is technical best practices, not leadership roles or culture, so fit with the 'Agile Leadership' category is minimal.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T20:20:10",
    "ai_confidence": 89.08,
    "ai_mentions": 7.3,
    "ai_alignment": 9.0,
    "ai_depth": 8.7,
    "ai_intent": 8.8,
    "ai_audience": 8.2,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content directly references automated testing and continuous integration as superior to staging environments for reducing deployment risks, explicitly promoting test automation principles and CI/CD. The critique of outdated practices reinforces alignment with Agile/DevOps best practices. The discussion goes beyond simple mentions, articulating the rationale and the impact of automation in delivery pipelines. The primary audience appears to be technical decision-makers and practitioners invested in modern software quality processes. There is strong, consistent focus on automation rather than general testing, and minimal off-topic material.",
    "reasoning_summary": "This piece emphasizes automated testing and modern delivery practices as more effective than extra staging environments, closely aligning with the Test Automation category. It offers clear rationale, practical examples, and targets technical practitioners seeking to improve deployment safety through automation.",
    "level": "Primary"
  },
  "Deployment Frequency": {
    "resourceId": "6VmmXorMZZW",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 88.16,
    "ai_mentions": 6.5,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 9.2,
    "ai_audience": 8.6,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content challenges the myth that adding more staging environments reduces deployment risk, advocating instead for modern delivery practices like continuous integration, automated testing, and quality engineering—core concepts in optimizing deployment frequency. References to 'fast, automated feedback loops' and 'delivering faster' directly address themes of speed and frequency in deployment. While 'deployment frequency' isn't explicitly named, the ideas are conceptually aligned, with substantial depth and strong intent toward Agile/DevOps audiences. The signal is high but slightly diluted by risk-reduction framing rather than explicitly on deployment intervals.",
    "reasoning_summary": "This content argues that deployment safety comes from frequent, automated, high-quality releases—not extra staging. It promotes practices like CI and fast feedback loops, which are central to Deployment Frequency, making it well-targeted for Agile/DevOps readers focused on optimizing delivery speed.",
    "level": "Primary"
  },
  "Site Reliability Engineering": {
    "resourceId": "6VmmXorMZZW",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T20:20:09",
    "ai_confidence": 57.7,
    "ai_mentions": 2.3,
    "ai_alignment": 6.6,
    "ai_depth": 5.2,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "Direct mentions of SRE or its terminology are absent, focusing instead on deployment and testing practices. The content aligns conceptually with some SRE principles—such as automation and engineering quality for reliability—but doesn't explicitly discuss SRE frameworks, roles, or vocabulary (SLOs, SLIs, incident response, etc.). The depth is moderate: the text critiques staging environments and advocates for modern engineering but lacks detailed reliability engineering discussion. The audience is technical and broadly aligns with SRE readership. Nearly all content is on-topic for deployment risk reduction, but with insufficient depth and specificity to classify as a core SRE topic rather than general quality engineering/practices.",
    "reasoning_summary": "While the content critiques staging environments and advocates for modern quality and automation practices relevant to reliability, it lacks explicit SRE concepts, terminology, or depth. It is tangentially aligned with SRE but fits better under general engineering excellence than strict SRE.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "resourceId": "6VmmXorMZZW",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 15.35,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 2.1,
    "ai_audience": 4.5,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content critiques reliance on staging environments and promotes modern engineering (automated testing, CI/CD) for reducing deployment risk. However, it does not discuss forecasting, prediction of delivery timelines, empirical data analysis, or Agile forecasting methods. There are no direct or indirect mentions of forecasting or related metrics. The main audience (engineers, ops, leaders) aligns somewhat with Agile practitioners, but the topic is more about release safety than prediction or planning. Discussion depth is moderate but off-topic for forecasting. No penalties were applied.",
    "reasoning_summary": "This content targets deployment risk reduction through engineering practices, not forecasting. It offers no forecasting methods or predictive metrics discussion, so confidence in this fitting the 'Forecasting' category is understandably low.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "6VmmXorMZZW",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 2.5,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.9,
    "ai_audience": 2.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses exclusively on deployment risk, continuous integration, and quality engineering, without mentioning Azure Boards or Agile project management. No references, direct or implied, to work tracking, boards customization, or any Azure Boards feature are found. The audience could overlap (technical practitioners), but the main intent is unrelated to Azure Boards, resulting in extremely low relevance across all scoring dimensions.",
    "reasoning_summary": "This content discusses deployment risks and modern engineering practices, with no mention of Azure Boards or related Agile management concepts. Its intent, topics, and details fall entirely outside the Azure Boards category.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 49.35,
    "ai_mentions": 1.6,
    "ai_alignment": 5.7,
    "ai_depth": 5.9,
    "ai_intent": 6.2,
    "ai_audience": 5.9,
    "ai_signal": 6.1,
    "ai_penalties_applied": true,
    "ai_penalty_points": 1,
    "ai_penalty_details": "mentions penalized (-1) for never directly referencing Agile or Agile Philosophy by name",
    "final_score": 49.0,
    "reasoning": "The content emphasizes practices like automated feedback loops, continuous integration, and professional engineering, aligning with Agile's emphasis on continuous improvement and adaptability. However, it never explicitly mentions Agile Philosophy, the Agile Manifesto, or its principles. Its main thread is critical of staging environments and advocates for modern delivery and feedback, which echoes Agile philosophy themes (collaboration, quality, responsiveness), but never frames this in the language or context of Agile itself. The depth reaches some foundational culture/behavior implications, but most readers would need to infer the Agile connection. Thus, direct mentions were penalized. The audience (engineering professionals) partially overlaps with Agile Philosophy's audience, but the messaging is more about technical risk reduction than explicit Agile mindset transformation.",
    "reasoning_summary": "This content argues for modern deployment and testing practices associated with Agile thinking but never refers to Agile Philosophy directly. While its focus on feedback loops and professionalism loosely aligns with Agile principles, its purpose and language are only indirectly relevant.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "resourceId": "6VmmXorMZZW",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T20:20:16",
    "ai_confidence": 4.25,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.3,
    "ai_intent": 0.5,
    "ai_audience": 1.2,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses on deployment risk, criticizing reliance on staging environments and advocating for practices like automated testing and CI. While continuous integration aligns tangentially with Azure Repos' broader ecosystem, the discussion never mentions Azure Repos, source control systems, or related features. The thematic focus is on quality engineering and modern DevOps but not on Azure Repos, its functionalities, or its audience specifically. Thus, all dimension scores are low, reflecting near-zero relevancy.",
    "reasoning_summary": "This content discusses deployment risk, staging environments, and the value of automation, but does not mention or relate to Azure Repos or its core topics. Its focus lies outside the scope of source control and repository management, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T20:20:18",
    "ai_confidence": 25.6,
    "ai_mentions": 0.4,
    "ai_alignment": 2.3,
    "ai_depth": 1.8,
    "ai_intent": 2.7,
    "ai_audience": 5.2,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content discusses the risks of staging environments and advocates for continuous integration, automated testing, and quality engineering. It mentions modern delivery practices, but never directly references Value Stream Management or its core concepts such as mapping value streams, eliminating waste, or aligning with customer value. The depth and alignment are limited to general engineering practices, not the strategic optimisation of value streams. The primary intent is to debate deployment risk, not to inform or improve Value Stream Management.",
    "reasoning_summary": "This content centers on deployment risk and quality engineering rather than Value Stream Management. It lacks direct mentions, substantial conceptual overlap, or depth in VSM principles, making it a low-confidence fit for the category.",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "6VmmXorMZZW",
    "category": "Release Management",
    "calculated_at": "2025-05-16T20:20:10",
    "ai_confidence": 78.5,
    "ai_mentions": 4.4,
    "ai_alignment": 8.8,
    "ai_depth": 8.9,
    "ai_intent": 7.9,
    "ai_audience": 8.6,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content critiques the reliance on multiple staging environments, arguing that real deployment safety is achieved through automated testing, CI/CD, quality practices, and fast feedback loops—core topics in Release Management. While it doesn't explicitly name 'release management,' the entire discussion addresses strategies for planning, controlling, and de-risking software releases. Mentions are moderate, as the specific term is not stated, but conceptual alignment, depth, and relevance to technical practitioners are strong.",
    "reasoning_summary": "The content robustly discusses release planning, risk management, and modern delivery practices, clearly fitting the Release Management category despite not mentioning it by name. Its depth and strong technical voice make it highly relevant, though a slight deduction exists for lack of explicit labeling.",
    "level": "Secondary"
  },
  "Business Agility": {
    "resourceId": "6VmmXorMZZW",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 34.35,
    "ai_mentions": 0.3,
    "ai_alignment": 4.5,
    "ai_depth": 3.6,
    "ai_intent": 4.3,
    "ai_audience": 6.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content critiques overreliance on staging environments and champions practices like automated testing, continuous integration, and quality engineering. These are vital for software delivery and do intersect with aspects of business agility, such as responding rapidly to change and reducing deployment risk, but the focus is operational excellence rather than the broader organisational principles, leadership, or agile transformation. No direct mention of business agility or discussion of its frameworks or metrics is present. Some alignment exists where rapid, quality-driven deployment supports adaptability, but overall, the treatment does not deeply explore business agility as a discipline or discuss cultural or organisational transformation, so confidence remains limited.",
    "reasoning_summary": "While the article discusses practices that support faster delivery and reduce risk—relevant to organisational adaptability—the focus is on technical engineering, not broad business agility. No direct category mentions or deep discussion of business agility principles, so confidence is moderate-low.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 92.6,
    "ai_mentions": 7.7,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content engages deeply with core product delivery principles, explicitly mentioning modern deployment, continuous integration, automated testing, and quality assurance. It thoroughly critiques traditional staging practices in favor of advanced delivery methodologies, aligning strongly with the category definition. The author targets practitioners focused on reliable, customer-facing software shipping. The discussion is direct, relevant, and informative with almost no off-topic content. No penalties were necessary, as the arguments are modern, well-aligned, and supportive.",
    "reasoning_summary": "This content strongly fits Product Delivery by thoroughly advocating for modern, quality-driven delivery practices over outdated staging. It’s direct, practical, and targets professionals seeking to enhance deployment reliability—making it highly relevant and confident for this category.",
    "level": "Primary"
  },
  "Cycle Time": {
    "resourceId": "6VmmXorMZZW",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T20:20:15",
    "ai_confidence": 18.73,
    "ai_mentions": 0.6,
    "ai_alignment": 2.0,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 7.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content centers on deployment risk reduction and critiques reliance on staging environments, emphasizing automated testing, CI/CD, and modern engineering practices as the path to risk reduction. However, Cycle Time is never directly mentioned, nor is its measurement, impact, or relationship to the discussed practices explored. While fast feedback loops are alluded to, the core concept of Cycle Time is not the focus, and related metrics are only tangentially referenced. The content aims at a technical audience, with high signal regarding deployment strategies, but Cycle Time itself is not meaningfully linked.",
    "reasoning_summary": "This content sharply critiques staging environments and advocates for modern CI/CD practices, but doesn't discuss Cycle Time directly or in-depth. While connected tangentially via mentions of feedback speed, Cycle Time as a metric isn't the focus. Content fits a technical audience but isn't relevant to this precise category.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "6VmmXorMZZW",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T20:20:17",
    "ai_confidence": 88.7,
    "ai_mentions": 2.7,
    "ai_alignment": 9.4,
    "ai_depth": 8.8,
    "ai_intent": 8.6,
    "ai_audience": 8.1,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "This content delivers explicit, experience-based arguments against overreliance on staging environments. It showcases real-world applications from enterprise platforms, arguing for pragmatic strategies (e.g., automated testing, CI/CD, test-first development) typical of DevOps and modern Agile. Concepts are explored beyond surface level, with the main intent being to advocate practical, outcome-focused process improvement to reduce risk. The audience is clearly practitioners facing delivery risk. There is minimal off-topic content, but direct category naming is low.",
    "reasoning_summary": "This piece strongly exemplifies Pragmatic Thinking, urging process improvements rooted in real-world DevOps and Agile practices and directly targeting practitioners aiming for safer, faster delivery. Its insights are practical, relevant, and focused on evidence-based solutions.",
    "level": "Primary"
  },
  "Unrealised Value": {
    "resourceId": "6VmmXorMZZW",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T20:20:18",
    "ai_confidence": 8.45,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 1.7,
    "ai_intent": 1.6,
    "ai_audience": 1.3,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content thoroughly discusses deployment risk reduction, automated testing, and modern delivery practices but does not address Unrealised Value, Evidence-Based Management, untapped opportunities, or innovation potential. There is no direct mention of the category or its key concepts, nor does it focus on identifying or measuring potential organisational value. The entire message centers on operational excellence, not on exploring possible value the organisation has yet to realise.",
    "reasoning_summary": "This content critiques reliance on staging environments for deployment safety and advocates for modern engineering practices, but it does not reference Unrealised Value or its core concepts. It focuses on operational risk mitigation and quality, not untapped organisational potential.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 64.5,
    "ai_mentions": 1.6,
    "ai_alignment": 6.8,
    "ai_depth": 6.2,
    "ai_intent": 7.1,
    "ai_audience": 8.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content critiques overuse of staging environments and promotes fast feedback, automated testing, and continuous integration — concepts aligned with Lean Product Development's emphasis on reducing waste and maximizing learning. However, Lean Product Development is not mentioned directly, and the discussion centers on software deployment risk reduction rather than Lean as a methodology. While the strategies support Lean principles (limit waste, increase value via feedback), the content never uses Lean terminology or frameworks, and does not dive deeply into Lean tools or explicit practices. The primary audience is relevant, and much of the argument aligns with Lean thinking, but the depth and explicitness regarding Lean Product Development are moderate rather than strong.",
    "reasoning_summary": "The content aligns with Lean principles by advocating for automation, fast feedback, and modern engineering, but doesn't directly reference Lean Product Development or its methodologies. It fits the category indirectly through its intent and concepts, but lacks direct depth and explicit mention.",
    "level": "Secondary"
  },
  "Behaviour Driven Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 12.36,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.9,
    "ai_intent": 2.5,
    "ai_audience": 2.4,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content argues against multiple staging environments and advocates for modern testing and quality engineering practices. While it mentions automated testing and test-first development, it never references Behaviour Driven Development or its unique principles, practices, or tools. The themes are tangential—focused more broadly on deployment risk management and software quality, not on BDD. The audience (engineers, technical leads) overlaps partially, but the lack of explicit BDD discussion and only glancing alignment with BDD concepts results in a very low score.",
    "reasoning_summary": "This discussion centers on software quality and testing strategies but never addresses Behaviour Driven Development directly or in depth, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "6VmmXorMZZW",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 4.85,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.7,
    "ai_audience": 0.9,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content does not mention 'Definition of Ready' explicitly, nor does it discuss criteria for backlog item readiness. Instead, it focuses on deployment risks, the limits of staging environments, and advocates for automated quality practices. There is negligible alignment with DoR concepts, and it does not serve the DoR audience. Depth, intent, and relevance to the category are all minimal.",
    "reasoning_summary": "This piece discusses why staging environments don't reduce deployment risks, but it does not reference or align with Definition of Ready practices or topics. It focuses on delivery and quality engineering, making it irrelevant for this category.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "6VmmXorMZZW",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 64.3,
    "ai_mentions": 2.1,
    "ai_alignment": 7.6,
    "ai_depth": 6.8,
    "ai_intent": 7.2,
    "ai_audience": 7.8,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content does not directly mention 'Professional Scrum' but strongly aligns with its ethos—emphasizing engineering excellence, empiricism, and professionalism over ritualistic practices. The discussion critiques outdated, cargo-cult behaviors (overreliance on staging) and advocates for accountability and technical rigor, key in Professional Scrum. The depth is moderate: while concise, it spotlights professionalism, fast feedback, and value delivery, referencing test-first, automation, and modern practices. Intent is strongly aligned: the message is to encourage organizational change toward empiricism and excellence, matching Professional Scrum's purpose. Audience is practitioners and technical leads, mostly overlapping with Professional Scrum's audience. Signal-to-noise is high: the entire piece is focused. Score dips in mentions and depth cases, as Professional Scrum and Scrum are not cited directly, and themes are discussed implicitly rather than exhaustively.",
    "reasoning_summary": "This content champions technical excellence and empiricism—core to Professional Scrum—by challenging empty rituals and advocating for modern, professional engineering practices. While it never directly references Scrum, its focus and intent closely fit the category’s ethos.",
    "level": "Secondary"
  },
  "Accountability": {
    "resourceId": "6VmmXorMZZW",
    "category": "Accountability",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 19.37,
    "ai_mentions": 0.4,
    "ai_alignment": 2.3,
    "ai_depth": 1.8,
    "ai_intent": 2.6,
    "ai_audience": 2.9,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on the efficacy of staging environments versus modern deployment and testing practices. There are no direct references to accountability, role definitions, or outcome ownership in work systems; the discussion is technical, emphasizing engineering excellence and automation as risk mitigators. While organizational decision-making and process improvement are thematically adjacent to accountability, there’s no substantive alignment with the category’s core definition. The content is aimed at technical practitioners, but discussion on accountability structures, responsibilities, or ownership is lacking.",
    "reasoning_summary": "The article centers on technical risk reduction, not on accountability or outcome ownership structures. Its focus is on engineering practices, making the fit with the 'Accountability' category weak.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T20:20:13",
    "ai_confidence": 34.05,
    "ai_mentions": 0.0,
    "ai_alignment": 3.8,
    "ai_depth": 3.6,
    "ai_intent": 4.1,
    "ai_audience": 5.3,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content does not mention Agnostic Agile nor explicitly reference its movement or principles. While it discusses professionalism, critical thinking, and context-driven engineering solutions, these are not directly tied to Agnostic Agile—nor is there comparison to specific frameworks or ethics in agile. The main focus is deployment risk and environments, rather than broader agility philosophy; some conceptual overlap exists, but not enough for a strong alignment.",
    "reasoning_summary": "The content focuses on deployment risk and engineering excellence without mentioning Agnostic Agile. While it values professionalism and critical thinking, it lacks direct alignment with the category's philosophy. Only minimal conceptual connection exists, so the confidence score is low.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "6VmmXorMZZW",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T20:20:15",
    "ai_confidence": 15.35,
    "ai_mentions": 0.3,
    "ai_alignment": 1.8,
    "ai_depth": 1.2,
    "ai_intent": 2.6,
    "ai_audience": 4.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content doesn’t explicitly mention Lead Time, nor does it explore its definition, measurement, or significance as an observability metric. Its main theme is deployment risk and the efficacy of staging environments versus practices like CI/CD and automated testing. While there is a slight overlap in advocating for faster delivery, the core focus is on risk reduction strategies rather than analyzing or optimizing Lead Time itself. Thus, only minimal alignment exists tangentially, justifying a low confidence score.",
    "reasoning_summary": "This piece focuses on risk mitigation through testing and delivery practices, not on Lead Time. While related concepts like faster delivery are mentioned, Lead Time as a metric or methodology isn't discussed. The content only loosely aligns with the category.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "6VmmXorMZZW",
    "category": "Model",
    "calculated_at": "2025-05-16T20:20:16",
    "ai_confidence": 33.45,
    "ai_mentions": 1.3,
    "ai_alignment": 3.4,
    "ai_depth": 3.3,
    "ai_intent": 4.2,
    "ai_audience": 7.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": true,
    "ai_penalty_points": 2,
    "ai_penalty_details": "alignment: deduct 1 point for mildly critical tone toward conceptual models (staging environment as 'model'), depth: deduct 1 point for a limited conceptual exploration of frameworks—instead, primarily focuses on practice critique",
    "final_score": 33.0,
    "reasoning": "The content does not explicitly reference conceptual models, frameworks, or abstract representations—it critiques a specific practice (increasing staging environments) and advocates for modern engineering processes. While referencing principles compatible with DevOps models (e.g., feedback loops, continuous integration), it lacks explicit model discussion, comparative frameworks, or in-depth analysis. The mention of outdated vs. modern practices grants some alignment, but the argument is anti-model (in this context) and practice-centric. Mild penalties for both limited model depth and a critical stance toward a conceptual approach.",
    "reasoning_summary": "Although the piece uses language familiar to model-driven practices in DevOps, its main focus is critiquing staging environments and advocating for engineering quality—not the discussion or analysis of conceptual models. Its fit for the 'Model' category is thus quite limited.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "6VmmXorMZZW",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T20:20:18",
    "ai_confidence": 24.55,
    "ai_mentions": 0.6,
    "ai_alignment": 2.8,
    "ai_depth": 2.3,
    "ai_intent": 2.7,
    "ai_audience": 4.1,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content centers on reducing deployment risk via technical practices such as automated testing and continuous integration rather than discussing organisational change strategies, frameworks, leadership, or change management. While it indirectly critiques outdated organisational habits, it doesn't explore core topics like leadership in change, resistance management, or structured transformation frameworks. The primary audience is technically inclined practitioners, not leaders or strategists. Only tangential alignment exists via the challenge to outdated practices, but this is not developed in the context of organisational agility or overt change management, making its fit with the given category weak.",
    "reasoning_summary": "This content focuses on technical solutions for deployment risk, not organisational change processes. While it briefly touches on shifting away from outdated practices, it doesn’t address frameworks, leadership, or strategies central to the Organisational Change category, resulting in low alignment.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "6VmmXorMZZW",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T20:20:18",
    "ai_confidence": 6.5,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 1.0,
    "ai_audience": 2.2,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses exclusively on CI/CD, deployment risk, and quality engineering within software delivery. It thoroughly discusses why staging environments are not effective at reducing risk, emphasizing automated testing and continuous integration. There are no explicit or implicit references to remote working or the unique challenges, tools, or practices for remote or distributed Agile teams. The audience is software engineers and delivery leads, but not with a remote-work lens.",
    "reasoning_summary": "This content discusses deployment risk, automated testing, and delivery best practices, with no relation to remote working or the unique challenges of distributed Agile teams. It does not fit the Remote Working category.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "6VmmXorMZZW",
    "category": "Capability",
    "calculated_at": "2025-05-16T20:20:19",
    "ai_confidence": 53.85,
    "ai_mentions": 1.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.1,
    "ai_intent": 6.8,
    "ai_audience": 6.6,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content critiques reliance on staging environments and advocates for modern engineering practices like automated testing, continuous integration, and quality engineering as better ways to reduce deployment risk. While the text clearly references enduring competencies and the cultural embedding of engineering discipline, it does not directly name 'capability' or use capability terminology. Depth is moderate: it positions the core argument within the context of systemic improvement, but focuses more on contrasting practices than elaborating on what constitutes capability per se. The audience aligns with practitioners and teams in engineering or DevOps, and the signal is focused on continuous delivery best practices. No explicit capability framework is referenced, but there is clear, implicit linkage to the principles underlying capabilities as defined. No penalties applied: content is current, supportive, and on-theme.",
    "reasoning_summary": "This content strongly supports the shift from superficial solutions to deeply embedded practices that reflect true organisational capabilities. While it doesn't name the category outright, its focus on lasting, systemic improvement in deployment aligns well with capability thinking.",
    "level": "Tertiary"
  },
  "Time to Market": {
    "resourceId": "6VmmXorMZZW",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 66.211,
    "ai_mentions": 2.2,
    "ai_alignment": 7.5,
    "ai_depth": 6.3,
    "ai_intent": 6.8,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 66.0,
    "reasoning": "Direct mentions of 'Time to Market' are absent, but the content closely aligns with the category by emphasizing the inefficiency of excessive staging and advocating for practices (automation, CI, test-first development) that directly accelerate delivery to production. The discussion explores how engineering excellence reduces time-to-delivery. The main intent is to argue for modern delivery practices that improve both safety and speed, addressing a relevant audience of technical leaders and practitioners. Signal is high, with most points reinforcing the argument, but Time to Market is not the exclusive or primary theme, and there's only moderate depth into the specific metrics, strategies, or definitions around Time to Market itself.",
    "reasoning_summary": "While the post never says 'Time to Market,' it strongly aligns with the category by advocating for delivery practices that speed up feature releases. The content is relevant and purposeful for a technical audience, but lacks deep exploration of Time to Market concepts or metrics, resulting in moderate confidence.",
    "level": "Secondary"
  },
  "Service Level Expectation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T20:20:11",
    "ai_confidence": 0,
    "ai_mentions": 0,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.3,
    "ai_audience": 5.1,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 0.0,
    "reasoning": "The content focuses entirely on deployment risk management, arguing for automated testing and continuous integration over increased staging environments. There is no direct mention or discussion of Service Level Expectation (SLE), nor does it reference any of the key SLE themes such as forecasted delivery times, cycle time analysis, or Kanban/Scrum delivery predictability. The target audience may occasionally overlap with those interested in SLE, but the core concepts, definitions, and applications of SLE are entirely absent. Therefore, confidence for this content fitting the 'Service Level Expectation' category is extremely low.",
    "reasoning_summary": "This piece critiques staging environments and promotes modern deployment practices, but it does not reference or discuss Service Level Expectation (SLE) concepts, making it unrelated to the category.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "6VmmXorMZZW",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 66.92,
    "ai_mentions": 1.8,
    "ai_alignment": 8.3,
    "ai_depth": 7.6,
    "ai_intent": 7.7,
    "ai_audience": 7.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content does not mention 'Empirical Process Control' directly, resulting in a low direct mention score. However, it aligns conceptually with the category by emphasizing fast automated feedback loops, continuous integration, and adapting based on observed results—key tenets of empirical process control. There is solid depth: the argument critiques prescriptive practices (more staging) and advocates for real-time learning and adaptation, echoing principles of Agile transparency and inspection. The primary intent is educational and relevant to practitioners responsible for delivery risk and quality. The audience is technical but would relate to the category's sphere, and the content stays on topic throughout. No penalties were applied, as the content is current, constructively framed, and not critical of empirical process control itself.",
    "reasoning_summary": "While never naming 'Empirical Process Control,' the piece strongly reflects its spirit—championing feedback, adaptation, and evidence-based decisions over outdated, prescriptive deployment practices—making it a well-aligned but implicit fit for the category.",
    "level": "Secondary"
  },
  "Test First Development": {
    "resourceId": "6VmmXorMZZW",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 75.97,
    "ai_mentions": 6.7,
    "ai_alignment": 8.4,
    "ai_depth": 6.6,
    "ai_intent": 8.1,
    "ai_audience": 7.6,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content argues that greater deployment safety comes from practices like test-first development, automated testing, and continuous integration rather than more staging environments. It directly mentions 'test-first development' and advocates for its principles, strongly aligning with the category. However, most depth and focus is on contrasting this with staging environments rather than exploring test-first topics in detail. There is only one direct mention, but the core argument supports the value of test-first practices and automation, and the intended audience matches practitioners concerned with deployment risk. No penalties: it's modern, professional, and does not undermine the category. Scores on alignment and intent are high; depth and mentions are moderate.",
    "reasoning_summary": "The content positions test-first development and related practices as the key to safe, rapid software delivery while criticizing overreliance on staging environments. It supports the category's philosophy, references core ideas, and targets the right audience, though it doesn’t deeply expound on test-first specifics.",
    "level": "Secondary"
  },
  "Product Validation": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T20:20:16",
    "ai_confidence": 38.72,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 3.9,
    "ai_intent": 5.1,
    "ai_audience": 5.3,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "Direct mentions of product validation are absent; the discussion focuses on deployment practices, automated testing, and quality engineering but not explicitly on validating product ideas with users. While elements like feedback loops and risk reduction tangentially connect, the primary theme is release quality, not customer validation or user testing. The intent is critique of technical practices, aimed at engineering professionals, with little to no coverage of validation methodologies per the category definition.",
    "reasoning_summary": "This content centers on deployment quality, not direct product validation. While feedback loops and risk reduction are mentioned, there’s little focus on user testing or validating product ideas, making alignment with 'Product Validation' low.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "6VmmXorMZZW",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T20:20:14",
    "ai_confidence": 87.645,
    "ai_mentions": 7.4,
    "ai_alignment": 9.7,
    "ai_depth": 8.9,
    "ai_intent": 9.2,
    "ai_audience": 8.3,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content strongly aligns with Market Adaptability by emphasizing the role of modern engineering practices such as continuous integration, automated testing, and rapid feedback loops—core elements in fostering responsiveness to market changes and reducing deployment risk. It critiques outdated, risk-averse approaches (e.g., excessive staging environments) and advocates for Agile, DevOps, and quality engineering principles. The depth of discussion is substantial, focusing on the strategic intent and methodologies relevant to the category. While the audience leans toward technical and engineering leaders (rather than purely executive strategists), the overall focus, intent, and clarity drive a high confidence score. There are no outdated practices referenced nor is there satirical or critical tone undermining the category, so no penalties are applied.",
    "reasoning_summary": "This content effectively champions agile and DevOps-aligned delivery practices to enhance organizational adaptability, dismissing legacy approaches in favor of rapid feedback and automation. Its focus, relevance, and depth make it a strong fit for Market Adaptability, with only minor audience skew keeping it from a perfect confidence score.",
    "level": "Primary"
  },
  "Value Stream Mapping": {
    "resourceId": "6VmmXorMZZW",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T20:20:18",
    "ai_confidence": 8.03,
    "ai_mentions": 0.0,
    "ai_alignment": 1.8,
    "ai_depth": 1.2,
    "ai_intent": 1.5,
    "ai_audience": 1.5,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "There are zero direct mentions of Value Stream Mapping (VSM) or related terminology. The content focuses on deployment risk, staging environments, and advocating for quality engineering, automated testing, and CI/CD. While these are tangentially related to process efficiency, there's no discussion or application of VSM principles, mapping, workflow visualization, or lean techniques. The intent and audience are targeting engineering and delivery teams but not in the context of VSM. Signal-to-noise is slightly higher due to strong thematic focus but specificity to VSM is entirely missing.",
    "reasoning_summary": "This content is centered on software deployment risk and quality engineering, not Value Stream Mapping. No VSM concepts are discussed, making alignment and depth very low. While relevant to process improvement, it does not fit the specified category.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "6VmmXorMZZW",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T20:20:19",
    "ai_confidence": 91.2,
    "ai_mentions": 7.5,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 9.8,
    "ai_audience": 9.2,
    "ai_signal": 9.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content explicitly credits automated testing, continuous integration, and modern quality engineering as key to reducing deployment risk, directly referencing these practices multiple times. It frames automated testing as essential, highlighting its role in continuous delivery, fast feedback, and minimizing production risk. Depth is strong, as it critiques staging environments in favor of a holistic, automated approach. The purpose is clear: to advocate best practices closely tied to the 'Automated Testing' category. The audience is technical, targeting practitioners, with nearly all content relevant and focused. No penalties apply as the discussion is up-to-date and affirming.",
    "reasoning_summary": "This content strongly supports automated testing, highlighting its necessity in reducing deployment risk over outdated staging-focused approaches. It’s clear, relevant, deep, and aimed at practitioners seeking to build quality through automation, fully aligning with the category.",
    "level": "Primary"
  },
  "Mentoring": {
    "resourceId": "6VmmXorMZZW",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T20:20:20",
    "ai_confidence": 8.62,
    "ai_mentions": 0.25,
    "ai_alignment": 1.2,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 2.5,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses entirely on software deployment risk and engineering practices like automated testing, continuous integration, and quality assurance. There is no direct or indirect discussion of mentoring, coaching, development of leadership skills, or growth strategies. The intended audience may include practitioners, but the conversation does not address guidance, mentoring roles, or any activities defined by the Mentoring category. All scores are extremely low due to the lack of relevance, as nothing links this technical focus to the mentoring process.",
    "reasoning_summary": "This content focuses solely on deployment risk and engineering practices, with no mention or discussion of mentoring, coaching, or professional development. It does not fit the Mentoring category and scores very low in all dimensions.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "6VmmXorMZZW",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T20:20:21",
    "ai_confidence": 94.5,
    "ai_mentions": 8.1,
    "ai_alignment": 9.7,
    "ai_depth": 9.4,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "This content directly discusses 'engineering excellence', explicitly mentioning the term and emphasizing modern software development practices such as test-first development, CI/CD, automated testing, and audience-based deployments. The main thesis argues against outdated staging environments, advocating for quality and professionalism—the essence of engineering excellence as defined. The argument is thorough and targets practitioners focused on software delivery. No penalties were applied as content is current, serious in tone, and highly relevant.",
    "reasoning_summary": "The content sharply aligns with Engineering Excellence, advocating for quality, automation, and modern delivery over outdated staging practices. It’s explicit, substantial, and directly targets practitioners aiming to improve engineering standards, making it an excellent fit for the category.",
    "level": "Primary"
  },
  "Definition of Workflow": {
    "resourceId": "6VmmXorMZZW",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:18",
    "ai_confidence": 7.3,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.8,
    "ai_intent": 0.5,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content discusses deployment risks, testing strategies, and the ineffectiveness of extra staging environments. There is no mention or exploration of the Definition of Workflow as per Kanban or agile contexts. The content does not discuss explicit agreements, WIP limits, entry/exit criteria, or workflow visibility—central concepts for the category. Its focus is on quality engineering and modern DevOps practices, not on workflow definitions, policies, or explicit workflow models. The audience overlap is only partial as it generally targets teams involved in delivery and DevOps, but not with a focus on Definition of Workflow. Relevance and fit to the category are minimal.",
    "reasoning_summary": "This content centers on deployment risk and quality practices, not on the Definition of Workflow. It lacks direct mentions or substantial discussion of workflow definitions, making its relevance to the category very low.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "6VmmXorMZZW",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:29:10",
    "ai_confidence": 1.95,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 2.4,
    "ai_intent": 1.7,
    "ai_audience": 3.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content does not reference OKRs or their foundational principles and is solely focused on staging environments, deployment risk, and software quality practices. No direct or indirect discussion of objectives, measurable key results, strategic intent, or outcome-driven frameworks occurs. The audience and themes are tangentially aligned only where engineering excellence overlaps with iterative improvement, but this connection stops well short of the OKR framework, yielding an extremely low confidence for classification here.",
    "reasoning_summary": "This content strictly covers deployment risk, staging environments, and quality engineering, without referencing or aligning with the OKR framework or its principles. No meaningful connection to Objective Key Results is present.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "6VmmXorMZZW",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:03:11",
    "ai_confidence": 13.85,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 3.2,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content does not explicitly mention Product Developer as a role or accountability, nor does it discuss their unique responsibilities or behaviors. Its focus is on software delivery practices and engineering excellence, arguing against reliance on staging environments and advocating for automated testing and CI/CD. These are related to modern product development, but not specific to Product Developers as defined in the classification. It addresses practitioners generically, with only peripheral alignment to Product Developer concepts (e.g., professionalism and quality). No dimensions warranted penalties, as there is no satirical tone or outdated advice.",
    "reasoning_summary": "This content is about general engineering practices and deployment risk, not the Product Developer role or its specific accountabilities. It aligns peripherally via modern delivery standards but lacks direct relevance to Product Developer as defined.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "6VmmXorMZZW",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:03:12",
    "ai_confidence": 8.6,
    "ai_mentions": 0.1,
    "ai_alignment": 0.3,
    "ai_depth": 0.2,
    "ai_intent": 0.4,
    "ai_audience": 2.5,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses exclusively on engineering best practices—emphasizing CI/CD, test automation, and risk reduction by quality processes instead of staging environments. There is no mention or discussion of human-AI collaboration, human agency, distributed cognition, AI agent roles, or team-based problem solving involving both humans and AI. The message addresses software delivery professionals, but lacks any alignment to Collective Intelligence as defined (human-AI team cognitive synergy). No content is outdated or contrarian to the category, so no penalties are applied. Scores are minimal across all dimensions except for audience, which has some overlap due to technical practitioners, though the content itself does not target the Collective Intelligence context.",
    "reasoning_summary": "The content addresses deployment risk through engineering practices without involving AI or human-AI collaboration. It does not fit the Collective Intelligence category, as it focuses on process quality and automation in software delivery, not human-AI team capabilities.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:18",
    "ai_confidence": 66.64,
    "ai_mentions": 1.8,
    "ai_alignment": 7.7,
    "ai_depth": 7.9,
    "ai_intent": 8.1,
    "ai_audience": 8.6,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content does not directly mention 'Agentic Engineering,' but strongly aligns with its ethos by advocating for engineering autonomy, feedback-driven adaptation, and DevOps-infused excellence. It promotes agency in engineering choices (test-first, automation, quality practices) over outdated risk-mitigation via staging, resonating with core aspects such as decentralised decision-making and continuous value delivery. The discussion is substantive and aimed at practitioners, maintaining a focused argument relevant to maximizing both human and systemic agency in software delivery. No outdated or contradictory content is present, so no penalties were applied.",
    "reasoning_summary": "The content robustly aligns with Agentic Engineering by emphasizing engineering autonomy, automation, and continuous feedback as safer alternatives to traditional staging environments. It speaks directly to practitioners seeking agency and modern delivery excellence, though it never explicitly references the category.",
    "level": "Secondary"
  },
  "Agentic Software Delivery": {
    "resourceId": "6VmmXorMZZW",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:24",
    "ai_confidence": 35.25,
    "ai_mentions": 0.3,
    "ai_alignment": 4.7,
    "ai_depth": 4.5,
    "ai_intent": 5.6,
    "ai_audience": 6.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content criticizes reliance on staging environments and advocates for modern engineering practices like automated testing and CI/CD. While aligned with some practices enabling Agentic Software Delivery (e.g., fast feedback, automation), it does not mention or explore AI agents, contextual intelligence, or agentic integration. No explicit or inferred discussion of agent autonomy, synergy with human expertise, or governance frameworks occurs. The focus is on improving delivery risk via quality and engineering rigor, not through agentic systems. Fit is partial: thematically adjacent, but not directly about Agentic Software Delivery.",
    "reasoning_summary": "Content supports modern CI/CD and quality but omits agentic principles or AI agent integration, making its fit partial and mostly adjacent to the category.",
    "level": "Ignored"
  }
}