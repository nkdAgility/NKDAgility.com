{
  "Large Scale Agility": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Large Scale Agility",
    "calculated_at": "2025-08-07T09:25:32",
    "ai_confidence": 19.85,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.15,
    "ai_intent": 3.1,
    "ai_audience": 6.0,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses almost exclusively on technical debt as a threat to productivity and system stability at the team level. While it provides a brief case anecdote (Microsoft/TFS), it frames technical debt as a universal threat rather than from an enterprise or large-scale agility perspective. It does not discuss scaling frameworks, multi-team coordination, or broader organisational transformation, nor does it align its main points with themes central to large-scale Agile (e.g., enterprise alignment, leadership for agility, cultural shifts). The audience broadens slightly with the Microsoft example, which hints at organisational impact, but overall, the discussion and intent target team-level concerns and improvement, not scaling Agile practices across an organisation.",
    "reasoning_summary": "Content is focused on technical debt and productivity impact at team/system level. No explicit discussion of scaling Agile or organisation-wide transformation. Fit with Large Scale Agility category is weak and mostly incidental.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Tenet",
    "calculated_at": "2025-08-07T11:23:58",
    "ai_confidence": 41.36,
    "ai_mentions": 1.0,
    "ai_alignment": 4.4,
    "ai_depth": 3.4,
    "ai_intent": 4.3,
    "ai_audience": 4.7,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content discusses the harms of technical debt and advocates for actively addressing it, which aligns tangentially with certain tenets in Agile/DevOps (e.g., continuous improvement, technical excellence). However, it does not directly state, name, or deeply explore actionable tenets. Technical debt is framed more as a problem or risk than as a guiding doctrine. While it mentions improved practices (like Sprints, transparency), these are described as responses to technical debt—not referenced as prescriptive tenets to guide behavior. The intent is relevant for teams, but the thematic fit for 'Tenet' is secondary, not direct. No outdated concepts or penalty triggers detected.",
    "reasoning_summary": "The discussion mainly critiques technical debt and stresses its risks, only implying alignment with improvement-oriented tenets. It lacks explicit or in-depth engagement with tenets as actionable doctrines. Fit is partial and more indirect.",
    "level": "Tertiary"
  },
  "Collaboration Tools": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-16T14:20:48",
    "ai_confidence": 13.84,
    "ai_mentions": 0.7,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 2.3,
    "ai_audience": 7.1,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on technical debt, impacts on productivity, and organizational change, without discussing collaboration tools or platforms. While there is a reference to process improvements (Sprints, transparency), there is no mention of specific tools, tool features, or best practices around coordination platforms. Thus, direct mention and alignment are extremely weak, and depth is shallow regarding the evaluated category. The primary intent is awareness about technical debt, resulting in low confidence for this category.",
    "reasoning_summary": "This piece centers on technical debt and team productivity—not on collaboration tools. It lacks relevant tool discussions, features, or recommendations, so it doesn't align with the Collaboration Tools category.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Revenue per Employee",
    "calculated_at": "2025-08-07T09:25:31",
    "ai_confidence": 10.091,
    "ai_mentions": 0.3,
    "ai_alignment": 1.5,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 3.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses technical debt and its effects on productivity and system stability, referencing inefficiency and delivery risk. However, it neither explicitly mentions nor analyzes Revenue per Employee, nor does it frame technical debt with financial observability metrics or organizational throughput in empirical terms. The Microsoft example focuses on engineering practices and process change, not workforce efficiency measured via revenue. The fit for the category is highly tangential, with only light conceptual adjacency through efficiency themes but no direct data, metric-based discussion, or financial performance focus.",
    "reasoning_summary": "The content is about technical debt, not Revenue per Employee. It doesn’t mention or apply the metric, nor does it analyze financial observability or throughput empirically. Fit for the category is highly tangential and insufficient.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Continuous Delivery",
    "calculated_at": "2025-08-07T06:10:07",
    "ai_confidence": 43.9,
    "ai_mentions": 1.2,
    "ai_alignment": 5.1,
    "ai_depth": 4.5,
    "ai_intent": 4.7,
    "ai_audience": 6.2,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content focuses on the dangers of technical debt and cites the Microsoft TFS case to highlight process improvements after technical debt led to delivery breakdown. However, it never directly discusses Continuous Delivery—they mention automated tasks and delivery ability, but the main thrust is about technical debt management, not the core principles, frameworks, automation, or cultural or systemic practices central to Continuous Delivery. There is an implication that rapid, reliable delivery is impeded by technical debt, but Continuous Delivery as a discipline is not explored, taught, or described. Thus, only a partial fit for the category; most is a technical debt warning, not a CD guide.",
    "reasoning_summary": "While the content touches on automation and delivery barriers, it centers on technical debt, not Continuous Delivery practices or principles. There is conceptual overlap but not enough focus for strong category alignment. Fit is partial.",
    "level": "Tertiary"
  },
  "Scaling": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Scaling",
    "calculated_at": "2025-08-07T07:06:11",
    "ai_confidence": 21.65,
    "ai_mentions": 0.3,
    "ai_alignment": 2.7,
    "ai_depth": 3.5,
    "ai_intent": 3.3,
    "ai_audience": 6.05,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on technical debt—primarily its effects and advocating for its reduction. While it briefly references a large organization (Microsoft, 600 engineers), it does not discuss Scaling frameworks, cross-team alignment, or enterprise agile methodologies. The main intent is not scaling but warning against normalizing technical debt. There's no in-depth discussion of scaling concepts. Thus, minimal alignment with the Scaling category.",
    "reasoning_summary": "The content is about technical debt and team productivity, not scaling methodologies. It lacks discussion of frameworks, cross-team strategies, or enterprise agility, resulting in a weak fit with the Scaling category.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "lLNjkL_zGQa",
    "category": "System Configuration",
    "calculated_at": "2025-08-07T07:06:15",
    "ai_confidence": 22.5,
    "ai_mentions": 0.4,
    "ai_alignment": 2.4,
    "ai_depth": 2.1,
    "ai_intent": 2.0,
    "ai_audience": 7.0,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on technical debt and its impact on productivity and stability, using examples like TFS and automation. While these topics relate to general system health, technical debt management is broader than system configuration and rarely specific to best practices, tools, or direct setup/integration tasks. No explicit or frequent references are made to configuration management, setup, or system integration. The intent is to advocate for tackling technical debt—not to discuss methodologies, tools, or best practices for configuring systems. Only peripheral alignment exists in mentioning automation as a missed opportunity, with no substantial coverage of system configuration topics as defined. Audience alignment is moderately high as practitioners who care about system health read this, but signal-to-noise is middling since much is unrelated to system configuration itself.",
    "reasoning_summary": "The content discusses technical debt at a general level, not system configuration, touching system health but lacking direct alignment with configuration topics or practices. Fit with the 'System Configuration' category is limited and mostly incidental.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Definition of Done",
    "calculated_at": "2025-08-07T09:25:32",
    "ai_confidence": 19.7,
    "ai_mentions": 0.3,
    "ai_alignment": 2.3,
    "ai_depth": 1.7,
    "ai_intent": 2.0,
    "ai_audience": 6.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content discusses technical debt, its impact, and advocates against normalizing it—an indirectly related topic to Definition of Done, since DoD aims to prevent technical debt via quality standards. However, it never mentions or deeply explores the Definition of Done, its criteria, or in-depth practices, nor does it discuss its purpose, best practices, or relationships with Agile artefacts. Its main theme is general advocacy for addressing technical debt, not clarification, application, or improvement of Definition of Done. Thus, alignment, depth, and intent are notably limited, though the target audience overlaps with Agile practitioners.",
    "reasoning_summary": "This content discusses technical debt and its risks. It does not mention, explain, or focus on Definition of Done, nor explore related Agile quality standards, with only a tangential alignment due to overlapping audiences.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Strategy",
    "calculated_at": "2025-09-17T23:12:37",
    "ai_confidence": 34.47,
    "ai_mentions": 0.2,
    "ai_alignment": 3.8,
    "ai_depth": 3.5,
    "ai_intent": 3.9,
    "ai_audience": 8.5,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses primarily on the harms of technical debt and advocates for addressing it but does not explicitly frame the discussion in terms of strategic planning, alignment with organisational goals, or high-level decision-making frameworks. There is a slight theme of transformation (e.g., Microsoft’s overhaul), but it’s presented mainly as evidence for tackling technical debt, not within a broader strategic planning or execution context. The intent is to persuade teams to reduce technical debt; this could have strategic implication, but the article does not deeply explore strategic mechanisms, alignment, or leadership topics. Audience is possibly leaders and practitioners, but depth and conceptual tie to strategy remains superficial.",
    "reasoning_summary": "The content emphasizes reducing technical debt but does not meaningfully discuss strategy or high-level alignment. Its focus is operational, lacking depth or explicit strategic framing. Fit with 'Strategy' is limited and mostly incidental.",
    "level": "Ignored"
  },
  "Customer Focus": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Customer Focus",
    "calculated_at": "2025-05-16T14:20:48",
    "ai_confidence": 18.8,
    "ai_mentions": 0.6,
    "ai_alignment": 2.2,
    "ai_depth": 1.8,
    "ai_intent": 2.0,
    "ai_audience": 6.3,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content discusses technical debt exclusively from the perspective of internal productivity and engineering risk, without explicitly or implicitly focusing on customer outcomes, value delivery, or feedback mechanisms. There is no direct mention of customers, measuring value from the customer’s perspective, or prioritising based on validated customer needs. The primary audience is likely technical leads and engineers, which is somewhat aligned, but the substance is about internal optimisation. Thus, alignment, depth, and intent are notably low for the Customer Focus category.",
    "reasoning_summary": "This piece focuses on technical debt and its impact on productivity and engineering outcomes, not on delivering customer value or outcomes. It lacks direct or conceptual alignment with customer focus principles, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Technical Debt",
    "calculated_at": "2025-05-16T14:20:49",
    "ai_confidence": 89.03,
    "ai_mentions": 9.7,
    "ai_alignment": 9.5,
    "ai_depth": 8.9,
    "ai_intent": 9.2,
    "ai_audience": 8.4,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content directly focuses on technical debt, emphasizing its negative impact, necessity of addressing it, and providing a case study (Microsoft TFS). There are multiple explicit mentions of technical debt, clear conceptual alignment, and the discussion delves into consequences and remediation. The purpose is to inform and challenge teams to manage technical debt, targeting practitioners and leaders. Very little off-topic or outdated content is present. Scores reflect a thorough, relevant, and focused exploration.",
    "reasoning_summary": "This content explicitly addresses technical debt, its dangers, and the need for remediation. It provides practical examples and a relevant case study, making it highly aligned with the category and useful for practitioners seeking to manage technical debt effectively.",
    "level": "Primary"
  },
  "Agentic Agility": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agentic Agility",
    "calculated_at": "2025-05-16T14:20:50",
    "ai_confidence": 16.308,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.4,
    "ai_intent": 2.5,
    "ai_audience": 4.0,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on technical debt, its effects, and the importance of addressing it. While it references some Agile concepts (like Sprints and transparency) and encourages proactive behaviors, it never explicitly discusses agency, agentic agility, intentionality, or adaptive actions within socio-technical environments. Its primary focus is risk mitigation rather than the enhancement of agency or autonomy. Consequently, direct mentions and conceptual alignment with Agentic Agility are extremely limited.",
    "reasoning_summary": "This piece is about responding to technical debt, not agentic agility. While it encourages taking action, it doesn't discuss agency or adaptive capacity in Agile terms. Its relevance to Agentic Agility is minimal.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Backlog",
    "calculated_at": "2025-05-16T14:20:50",
    "ai_confidence": 16.67,
    "ai_mentions": 0.7,
    "ai_alignment": 1.8,
    "ai_depth": 1.5,
    "ai_intent": 2.5,
    "ai_audience": 6.5,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content is a critique on technical debt and its impact on productivity and stability, providing a strong argument against normalizing technical debt. While it references Agile concepts like Sprints and improvement of process, it does not directly mention Product Backlog, nor does it discuss backlog-specific practices or roles. The conceptual alignment is weak, as backlog management is not the main focus. Audience alignment is moderate since Agile teams who manage backlogs may find the topic relevant, but the discussion centers on technical debt, not backlog organization, prioritization, or refinement. Signal is lowered due to off-topic focus, and depth is shallow regarding Product Backlog.",
    "reasoning_summary": "This piece focuses on technical debt and its consequences, making only tangential reference to Agile practices. It lacks substantive discussion of the Product Backlog, resulting in a low confidence score for fitting this category.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Personal",
    "calculated_at": "2025-05-16T14:20:51",
    "ai_confidence": 20.57,
    "ai_mentions": 1.5,
    "ai_alignment": 2.9,
    "ai_depth": 2.3,
    "ai_intent": 2.7,
    "ai_audience": 5.6,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content presents a strong opinion on technical debt, referencing both generic scenarios and a Microsoft case. However, it does not include individual reflections, personal anecdotes, or subjective experiences related to Agile, Scrum, or business agility. The discussion is largely prescriptive and lacks personal context or insights, thus misaligning with the category's definition. The intended audience is practitioners, matching the category somewhat, but the core content misses the Personal focus.",
    "reasoning_summary": "This content gives a strong stance on technical debt but doesn’t share a personal story or first-hand reflection. It’s more a professional opinion piece than a personal narrative, so it only weakly fits the 'Personal' category.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Method",
    "calculated_at": "2025-05-16T14:20:51",
    "ai_confidence": 44.07,
    "ai_mentions": 2.3,
    "ai_alignment": 5.7,
    "ai_depth": 4.8,
    "ai_intent": 5.5,
    "ai_audience": 7.2,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content mainly addresses the negative impact of technical debt, urging teams to avoid normalising it. While there is a brief mention of remedy via 'Sprints' and changing work practices (implying method), the core discussion doesn't explicitly focus on structured, step-by-step procedural methods, but rather emphasizes a conceptual stance on technical debt's harms. There is moderate alignment due to the TFS example referencing Scrum Sprints, yet details about method are very limited; the audience is practitioners grappling with technical debt, partially overlapping with the intended audience for Method discussions. The signal is mixed: a strong opinion on technical debt dominates, but specifics on methods are minimal.",
    "reasoning_summary": "This content critiques technical debt and briefly nods to Scrum-like practices as a remedy, but lacks sustained or detailed discussion of step-by-step methods. Its focus is cautionary, not methodical, with only moderate relevance to the 'Method' category.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Enterprise Agility",
    "calculated_at": "2025-08-07T09:25:31",
    "ai_confidence": 33.8,
    "ai_mentions": 1.1,
    "ai_alignment": 3.5,
    "ai_depth": 2.6,
    "ai_intent": 2.8,
    "ai_audience": 7.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on the negative impact of technical debt, mainly at the team and engineering practice level, with some reference to improving delivery (e.g., Microsoft TFS case). Enterprise-level implications are only tangentially addressed (overhaul in how they worked), but the main thrust is about productivity and technical risk—not about enterprise-wide agility frameworks, transformation, or culture. There are no direct mentions of enterprise agility or its key concepts, aside from indirect links to organisational learning (the Microsoft example). Audience is potentially mixed but mostly targets practitioners and engineering leaders. Most of the signal relates to developing good engineering hygiene, not explicit enterprise-wide agility themes.",
    "reasoning_summary": "Focuses on team/engineering-level technical debt, with little direct reference to enterprise agility. Only tangential organisational links (one Microsoft example), but overall topic, intent, and themes do not match enterprise agility.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-08-07T07:06:12",
    "ai_confidence": 9.1,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 1.0,
    "ai_audience": 3.0,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content exclusively focuses on technical debt, its costs, and urges teams to tackle it proactively. There are no explicit or implied references to hypothesis-driven development, experimentation, validated learning, or empirical testing. Discussion revolves around pragmatic impacts and workflow changes, not on formulating or testing hypotheses in product development. The content's intent is to critique the rationalization of technical debt, not to discuss H.D.D. principles or methodology. Audience is practitioners, but not specifically those seeking info on hypothesis-driven decision making.",
    "reasoning_summary": "This content does not fit the 'Hypothesis Driven Development' category; it focuses solely on technical debt without mentioning experimentation, hypotheses, or validated learning.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Discipline",
    "calculated_at": "2025-08-07T07:06:14",
    "ai_confidence": 36.05,
    "ai_mentions": 1.8,
    "ai_alignment": 4.3,
    "ai_depth": 4.7,
    "ai_intent": 4.0,
    "ai_audience": 5.2,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on technical debt as a harmful phenomenon in software development, emphasizing its risks and urging teams to take action. While it references systemic challenges (e.g., TFS overhaul, process change, Sprints), it mainly critiques the acceptance of technical debt and encourages remediation. Explicit discussion of 'discipline' as a field of principles, methodologies, or professional standards is largely implicit. There is minor reference to Agile terms (Sprints), but no systematic exploration of discipline as a concept or field, its evolution, governance structures, or codified principles. Audience appears to be practitioners, partially aligning with the category definition, but focus is largely behavioral and cautionary about bad habits, not the maturation or application of a disciplined framework.",
    "reasoning_summary": "Primarily highlights technical debt risks and team behavior, not discipline as a systemic practice. Mentions Agile process peripherally but lacks sustained discussion or principles of discipline. Fit for the discipline category is marginal and mostly implicit.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-09-05T03:28:06",
    "ai_confidence": 13.27,
    "ai_mentions": 0.4,
    "ai_alignment": 2.1,
    "ai_depth": 2.7,
    "ai_intent": 2.3,
    "ai_audience": 3.2,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical debt and its impact on productivity, citing an example of process change (e.g., Sprints) when addressing technical debt. However, it does not discuss Agile Planning Tools or methodologies directly, nor does it mention tools that facilitate Agile planning. The audience is likely technical/engineering-focused, which marginally aligns with the category, but the central discussion is technical debt management, not planning tool selection, use, or integration. Surface-level nods to Agile (Sprints, transparency) aren't expanded into the function or value of Agile Planning Tools.",
    "reasoning_summary": "Content addresses technical debt and engineering risk, with only incidental mention of Agile. It lacks any substantial connection to Agile Planning Tools, making it a poor fit for this category.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Coaching",
    "calculated_at": "2025-05-16T14:20:48",
    "ai_confidence": 18.75,
    "ai_mentions": 0.4,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 2.3,
    "ai_audience": 5.5,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content primarily discusses the negative impacts of technical debt and argues against normalising it. There are no explicit references to coaching or its concepts (trust-building, facilitation, feedback, or self-discovery). Although the Microsoft example covers process change, it is framed around productivity and risk, not coaching. The call-to-action at the end prompts team action but does not employ coaching techniques, active listening, or facilitative language. Therefore, there's minimal conceptual alignment, depth, or intent relevant to Coaching, though engineers and Agile teams (the possible coaching audience) are referenced.",
    "reasoning_summary": "This content focuses on technical debt and productivity, lacking direct or substantial connections to coaching. It doesn't reference or embody coaching principles, so confidence for the 'Coaching' category is very low.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-16T14:20:48",
    "ai_confidence": 13.36,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 0.8,
    "ai_intent": 1.7,
    "ai_audience": 3.5,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content is focused entirely on technical debt, advocating for addressing it to improve productivity and stability. While it references automation and engineering process inefficiencies, it never directly mentions Internal Developer Platforms (IDPs) or substantially explores their principles, benefits, or implementation. The case example (TFS) describes agile and process overhaul, but does not discuss IDP components or architecture. Audience alignment and signal are moderately higher since developers are addressed, but overall the content does not meaningfully fit the category as defined.",
    "reasoning_summary": "This article critiques technical debt and urges developers to address it, but it lacks direct mention or in-depth exploration of Internal Developer Platforms. The content is relevant to technical audiences, yet its focus and detail do not strongly align with the IDP category.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-05-16T14:20:49",
    "ai_confidence": 47.7,
    "ai_mentions": 1.4,
    "ai_alignment": 5.8,
    "ai_depth": 5.0,
    "ai_intent": 5.5,
    "ai_audience": 6.3,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content focuses primarily on technical debt, highlighting its detrimental effects on productivity and software quality. While it references team productivity and a case study (Microsoft TFS) involving process overhaul, its treatment of sociotechnical interplay is shallow. There is no explicit mention of sociotechnical systems or theoretical frameworks, and the main thrust remains technical. Some references to team impact and process changes moderately align with the category, but these are not explored in depth; organisational and cultural connections are implied rather than discussed. The intent is somewhat aligned as it encourages organisational change, but the primary audience is technical rather than strategic, and the signal remains moderately relevant.",
    "reasoning_summary": "While the article discusses the impact of technical debt on teams and references organisational process changes, it stops short of explicitly exploring sociotechnical systems. Its main focus is technical, with only moderate alignment to the category through brief mentions of team productivity and process improvements.",
    "level": "Tertiary"
  },
  "Continuous Improvement": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-16T14:20:50",
    "ai_confidence": 53.11,
    "ai_mentions": 1.8,
    "ai_alignment": 6.6,
    "ai_depth": 7.5,
    "ai_intent": 7.0,
    "ai_audience": 8.0,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content focuses on highlighting the risks of technical debt and the need to proactively address it, referencing a real-world case (Microsoft TFS) where process adaptation and transparency enabled improvement. However, it never directly mentions 'Continuous Improvement', its tools, or frameworks. The narrative aligns with continuous improvement principles (reflecting, adapting, empirical intervention), but is framed specifically through the lens of technical debt reduction, not as an explicit ongoing improvement practice. The depth is moderate due to discussion of consequences and reference to business agility concepts, but strong signals about ongoing or incremental improvement culture are mostly implied. The intent supports improvement, and the technical/engineering audience fits, but explicit discussion of broader continuous improvement practices is limited.",
    "reasoning_summary": "This piece encourages tackling technical debt and references process transformation, aligning with continuous improvement themes, though it never names or deeply explores the concept. Its focus on risk and adaptation fits the audience and intent, but direct links to continuous improvement practices are implied rather than explicit.",
    "level": "Tertiary"
  },
  "Transparency": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Transparency",
    "calculated_at": "2025-05-16T14:20:52",
    "ai_confidence": 54.8,
    "ai_mentions": 4.1,
    "ai_alignment": 7.6,
    "ai_depth": 6.8,
    "ai_intent": 6.9,
    "ai_audience": 8.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "Transparency is only explicitly mentioned once (Microsoft embraced transparency), and the main topic is technical debt. However, the Microsoft case links transparency to successful technical debt reduction, suggesting some conceptual overlap. The piece doesn’t delve deeply into transparency itself, nor is its main intent to inform about transparency—it’s more a critique of normalising technical debt, using transparency as a supporting factor. The audience (engineering and Agile teams) and the focus are moderately aligned to the category, but transparency is a secondary thread. No outdated practices or undermining tones are present, so no penalties are applied. Confidence is moderate since transparency is referenced substantively but not centrally.",
    "reasoning_summary": "While the content’s core focus is on technical debt, it references transparency as important in addressing this issue. Transparency is treated as a contributing factor rather than the main theme, resulting in moderate alignment but not a strong primary fit for the category.",
    "level": "Tertiary"
  },
  "Common Goals": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Common Goals",
    "calculated_at": "2025-05-16T14:20:52",
    "ai_confidence": 17.9,
    "ai_mentions": 0.5,
    "ai_alignment": 2.4,
    "ai_depth": 2.2,
    "ai_intent": 2.5,
    "ai_audience": 4.8,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content is focused on the dangers of technical debt, arguing there's no such thing as 'good' technical debt and urging teams to address it proactively. While it references Agile practices like sprints and transparency, there are no direct or in-depth mentions of 'Common Goals,' alignment, or their significance within Agile/DevOps frameworks. The main topic is technical debt rather than shared objectives, and there is little discussion on how common goals foster alignment or performance. The intended audience (teams/engineers) overlaps partially, but the content is not explicitly aligned with the category’s core meaning, key topics, or purpose.",
    "reasoning_summary": "This content centers around technical debt and productivity risks, only referencing Agile methods tangentially. It does not discuss common goals, alignment, or strategic objectives—the core focus of the category—leading to a low confidence score.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Company as a Product",
    "calculated_at": "2025-05-16T14:20:52",
    "ai_confidence": 16.6,
    "ai_mentions": 0.0,
    "ai_alignment": 2.9,
    "ai_depth": 2.1,
    "ai_intent": 3.3,
    "ai_audience": 4.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on technical debt and its negative impact on productivity and system stability. While there is mention of organizational change (such as Microsoft's overhaul and introduction of sprints), the discussion is centered on engineering practices rather than organizational strategy as a product. There are no direct mentions or explicit alignment with 'Company as a Product' principles, and the depth is surface-level regarding organizational design, not matching the category's core themes. Minimal audience overlap as it targets engineers/teams rather than leaders shaping organizational strategy.",
    "reasoning_summary": "This content addresses technical debt in software teams, not organizational design as a product. There's minor mention of work strategy changes, but no direct CaaP alignment or depth, so it doesn't fit the category closely.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Scrum Master",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 12.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 2.6,
    "ai_audience": 3.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses technical debt, its negative impacts, and how ignoring it leads to risk and inefficiency. Apart from a brief mention of 3-week Sprints and transparency (Scrum-like elements), there is no direct reference to the Scrum Master accountability, its role, or responsibilities. The main focus is technical debt—not the Scrum Master, their influence, or systemic impact. The intended audience could overlap with Scrum Masters, but the discussion is not aligned with the category’s purpose. As such, low scores are warranted across all dimensions, and no penalties apply.",
    "reasoning_summary": "This content is centered on technical debt, not on the Scrum Master accountability. While it briefly references sprints, it neither discusses nor explores Scrum Master roles, responsibilities, or impact. Therefore, the content only marginally fits the 'Scrum Master' category.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Discovery",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 8.25,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.15,
    "ai_intent": 1.25,
    "ai_audience": 2.3,
    "ai_signal": 0.75,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on technical debt and its impact on productivity, system stability, and team efficiency. It discusses technical implementation challenges, risks, and maintenance but does not directly explore methodologies, techniques, or practices of exploring customer needs, defining features, or validating product ideas. No explicit or implicit mention of product discovery concepts, such as user research, MVPs, or customer feedback, is present. The closest connection is the effect technical debt has on an organization's ability to deliver features, but this is tangential and not framed within product discovery. Therefore, direct mentions, alignment, and depth scores are low, as is overall confidence.",
    "reasoning_summary": "This content focuses on technical debt and team efficiency, not on identifying customer needs or defining product features. It lacks both direct reference to and substantive discussion of Product Discovery practices, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Continuous Integration",
    "calculated_at": "2025-08-07T11:23:57",
    "ai_confidence": 16.042,
    "ai_mentions": 0.3,
    "ai_alignment": 2.0,
    "ai_depth": 2.6,
    "ai_intent": 2.1,
    "ai_audience": 5.0,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses entirely on technical debt and its negative impacts, emphasizing automation and productivity. While automation is tangentially related to CI, there are no explicit mentions of CI, its principles, best practices, tools, or integration workflows. The main intent is to raise awareness about technical debt, not educate about or discuss Continuous Integration specifically. Audience overlap with software practitioners is moderate, but the topic, intent, and discussion depth do not meet the criteria for the CI category.",
    "reasoning_summary": "The content addresses technical debt and productivity but does not mention or discuss Continuous Integration. The alignment is weak and mostly tangential, offering little direct or in-depth relevance to the CI category.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T14:20:48",
    "ai_confidence": 50.65,
    "ai_mentions": 0.7,
    "ai_alignment": 5.1,
    "ai_depth": 5.4,
    "ai_intent": 5.0,
    "ai_audience": 8.2,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 51.0,
    "reasoning": "The content strongly discusses the impact and risks of technical debt and gives an industry case study (Microsoft/TFS). However, it focuses mainly on warning against technical debt instead of exploring metrics, data, or iterative learning cycles. There are brief mentions that hint at transparency and productivity measurement, but it lacks direct, substantive discussion of data-driven improvement, feedback loops, or specific metrics and methodologies, thus aligning only partially to the category.",
    "reasoning_summary": "This piece raises awareness about technical debt and its risks but addresses metrics and learning only indirectly, with limited analysis of data or improvement frameworks. As such, alignment with 'Metrics and Learning' is moderate but not strong.",
    "level": "Tertiary"
  },
  "One Engineering System": {
    "resourceId": "lLNjkL_zGQa",
    "category": "One Engineering System",
    "calculated_at": "2025-05-16T14:20:50",
    "ai_confidence": 22.525,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 1.8,
    "ai_intent": 2.4,
    "ai_audience": 8.1,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses exclusively on the challenges of technical debt: its impact on productivity, architecture, and delivery. While it references process changes at Microsoft (e.g., sprints), these pertain to agile or modernization generally—not the One Engineering System framework. There is no explicit mention of 1ES, nor is there discussion of integrating tools or standardising engineering systems as per 1ES. The audience is technical, and the content is focused and relevant for those facing technical debt but lacks any framing related to 1ES core principles, practices, or terminology.",
    "reasoning_summary": "This article is about the dangers of technical debt, not One Engineering System. It doesn’t mention or discuss 1ES, though it addresses relevant process topics. So, while targeted at engineers, its alignment with the 1ES category is minimal.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 36.84,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 3.6,
    "ai_intent": 4.8,
    "ai_audience": 7.1,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content primarily critiques technical debt, focusing on its impact on productivity and risk. While there are indirect references to team activity (e.g., 'your team,' 'engineers'), direct discussion of collaboration, shared ownership, or team dynamics is minimal. The Microsoft case study hints at process improvements (moving to sprints, embracing transparency), but does not deeply engage with techniques, culture, or collaboration tools relevant to the category. The audience is Agile/DevOps practitioners, but the intent and focus are only weakly related to team collaboration.",
    "reasoning_summary": "This content centers on technical debt's negative effects, only briefly referencing team processes and transparency. It scarcely addresses team collaboration principles or practices, resulting in a low confidence fit for the category.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-16T14:20:54",
    "ai_confidence": 8.15,
    "ai_mentions": 0.1,
    "ai_alignment": 0.3,
    "ai_depth": 0.2,
    "ai_intent": 0.6,
    "ai_audience": 2.0,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content exclusively discusses technical debt and productivity challenges within software teams, referencing Agile practices like Sprints. However, it does not mention Artificial Intelligence at all, nor does it address AI’s role in Agile or DevOps, automation, or analytics deeper than generic references to manual tasks. The main focus is on team practices and technical debt reduction, not AI integration, applications, or ethics. Thus, it fits the category extremely poorly.",
    "reasoning_summary": "This content is about technical debt in software teams and does not relate to Artificial Intelligence or its application in Agile or DevOps. It does not fit the category.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Modern Source Control",
    "calculated_at": "2025-08-07T11:23:57",
    "ai_confidence": 14.4,
    "ai_mentions": 0.6,
    "ai_alignment": 2.2,
    "ai_depth": 2.8,
    "ai_intent": 3.1,
    "ai_audience": 3.6,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on technical debt, system stability, and process automation, but does not discuss version control systems, branching, code reviews, or any key topic of Modern Source Control. There is a brief Microsoft TFS mention but not in a source control context. Intent and alignment are weak; the main theme is technical debt, not source control.",
    "reasoning_summary": "The content centers on technical debt and process improvement, not version control. It makes only the vaguest connection to source control through a TFS anecdote. The fit with Modern Source Control is minimal and at best tangential.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Team Performance",
    "calculated_at": "2025-08-07T11:23:57",
    "ai_confidence": 69.53,
    "ai_mentions": 4.3,
    "ai_alignment": 8.7,
    "ai_depth": 8.2,
    "ai_intent": 7.7,
    "ai_audience": 7.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content articulates how technical debt undermines productivity, system stability, and delivery capability—core themes in measuring and improving team performance. It highlights systemic impacts (onboarding time, fragile architecture, manual vs automated work) and cites the Microsoft TFS example (feature throughput and transformation via Scrum), all aligning with delivery outcomes and constraints. However, 'team performance' is not directly named, and the discussion focuses predominantly on technical debt as the root issue rather than a multi-faceted team performance analysis. Still, the relationship to team output is clear, the intent is advisory for teams, and the audience is aligned (technical, delivery-focused). Signal is affected by narrative and rhetorical flourishes but remains mostly relevant.",
    "reasoning_summary": "Content discusses technical debt’s direct effects on team delivery and productivity using real-world metrics, strongly aligning with team performance. Lacks explicit use of the term but context and intent make the fit substantial if not exhaustive.",
    "level": "Secondary"
  },
  "First Principal": {
    "resourceId": "lLNjkL_zGQa",
    "category": "First Principal",
    "calculated_at": "2025-05-16T14:20:49",
    "ai_confidence": 34.693,
    "ai_mentions": 0.2,
    "ai_alignment": 3.9,
    "ai_depth": 3.7,
    "ai_intent": 4.5,
    "ai_audience": 4.2,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content does not mention 'first principles' or anchor its argument in foundational, self-evident truths as defined by Lean-Agile, Scrum, or DevOps thought leaders. It argues strongly against normalising technical debt, framing it as always harmful, but this is presented as an opinion or strong recommendation, not as a restatement or application of immutable, discipline-defining constraints. No reference is made to canonical sources or definitions of first principles. The discussion, while relevant to practitioners, focuses on the harms and risks of technical debt and the imperative to address it, but it does not explore the distinction between first principles and other types of principles, nor does it discuss system boundaries or professional standards in terms of irreducible truths. The Microsoft/TFS case is an example but not a demonstration or application of first principles thinking. The audience fit and clarity are decent, but almost all the content operates at the level of best practice or strong heuristic, not immutable principle.",
    "reasoning_summary": "This content critiques technical debt and encourages resolution, but it doesn’t reference or analyze first principles. Instead, it frames its argument as a strong practical stance, not as an immutable, foundational constraint, so it only marginally fits the 'First Principal' category.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T14:20:50",
    "ai_confidence": 18.26,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 1.9,
    "ai_intent": 2.9,
    "ai_audience": 5.2,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content centers entirely on technical debt—its negative impacts, examples, and calls to action for addressing it. There is no direct mention of cross-functional teams, nor does the text discuss team structure, collaboration, or diversity of skills. While it references a team and agile practices like Sprints, the focus is technological process improvement, not the composition or dynamics of cross-functional teams per Agile. Thus, conceptual and discussion depth for Cross Functional Teams are minimal, with only tangential audience and purpose alignment.",
    "reasoning_summary": "This content focuses narrowly on technical debt and its risks, lacking discussion of cross-functional teams, collaboration, or relevant team structures. Its alignment with the category is incidental at best, resulting in low confidence for classification under 'Cross Functional Teams.'",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 17.67,
    "ai_mentions": 0.4,
    "ai_alignment": 2.1,
    "ai_depth": 1.9,
    "ai_intent": 1.5,
    "ai_audience": 5.3,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content passionately discusses technical debt, its impact, and the imperative to address it, but never directly mentions backlog refinement or related Agile practices. While the story references sprints and transparency, it does not explore backlog refinement techniques, roles, or collaborative processes. Its aim is more to provoke action on technical debt, not to inform or support the actual improvement of backlog items through refinement.",
    "reasoning_summary": "This content is about the negative impact of technical debt, not backlog refinement. While it touches on Agile practices like sprints, it doesn't discuss backlog refinement concepts or guidance, resulting in low confidence for the category.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-16T14:20:54",
    "ai_confidence": 13.31,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 2.0,
    "ai_intent": 2.5,
    "ai_audience": 2.1,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content centers on technical debt, with explicit references to practices like Sprints and transparency that are core to Agile/Scrum. It discusses process improvements (e.g., overhaul, transparency, 3-week Sprints) rooted in Agile philosophy. This direct connection to Agile practices excludes it from being classified as Miscellaneous. There are no anecdotes or undefined critiques; content intention aligns with actionable Agile principles, not the broad 'catch-all' of Miscellaneous. No penalties applied.",
    "reasoning_summary": "This content directly references Agile principles and framework practices, focusing on actionable approaches to technical debt, so it does not fit the Miscellaneous category, which is for unrelated or anecdotal content.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-16T14:20:55",
    "ai_confidence": 81.89,
    "ai_mentions": 7.6,
    "ai_alignment": 8.9,
    "ai_depth": 8.3,
    "ai_intent": 8.1,
    "ai_audience": 8.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content is centered on the harms of technical debt, criticizing normalization and advocating for its active management. It references system readability, automation, fragility, and gives a concrete example from Microsoft, showing understanding of software engineering practices. The messaging aligns tightly with technical mastery, targeting practitioners concerned with software quality and delivery. Direct category keywords and related concepts appear frequently. While the piece is more an opinionated essay than a deep technical how-to, it discusses architecture, maintainability, and debt management with substance. No penalty is needed: the tone, scenario, and references are contemporary and respectful to the category’s ethos.",
    "reasoning_summary": "This content powerfully emphasizes the dangers of technical debt, urging technical teams to address it directly. Its examples and arguments are clear, practical, and relevant to software engineering excellence, making it well aligned with Technical Mastery.",
    "level": "Primary"
  },
  "Scrum Values": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Scrum Values",
    "calculated_at": "2025-05-16T14:20:48",
    "ai_confidence": 7.2,
    "ai_mentions": 0.6,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is almost entirely focused on technical debt—a vital Agile/engineering topic, but not a Scrum Value. It only briefly references ideas like transparency (loosely related to openness) and working in Sprints (a Scrum event, not a value). There are no direct or implied references to commitment, courage, focus, openness, or respect as Scrum defines them. The audience (software teams) overlaps, but the core intent and discussion lack alignment or depth on Scrum Values. No penalties were applied as the tone and examples do not contradict the category, but neither do they support it.",
    "reasoning_summary": "This content discusses technical debt in depth but doesn't focus on Scrum Values. Though there’s a passing mention of transparency and Sprints, it doesn’t explore or tie into Scrum’s core values, resulting in a very low confidence score for this category.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-16T14:20:50",
    "ai_confidence": 41.24,
    "ai_mentions": 0.75,
    "ai_alignment": 3.5,
    "ai_depth": 3.75,
    "ai_intent": 4.2,
    "ai_audience": 5.1,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "While the content discusses technical debt's impact on productivity and references improvements via agile practices (3-week sprints, transparency), it doesn't directly mention the Agile Product Operating Model or go deeply into its principles. The primary intent is to argue against the acceptance of technical debt rather than to explore APOM. There is mild conceptual overlap in process improvement and organizational effectiveness, but no explicit discussion of product orientation, roadmaps, or governance. The audience (engineers and team leads) partly overlaps with APOM's practitioners, though focus is primarily technical, not on operating model transformation. Noise is moderate as the narrative is focused, but somewhat tangential to APOM core concepts.",
    "reasoning_summary": "This content forcefully addresses technical debt and references agile team process change, but doesn’t engage with the Agile Product Operating Model’s core principles. Its primary value is advocating for technical quality rather than discussing product-oriented transformation or operating models.",
    "level": "Tertiary"
  },
  "Shift Left Strategy": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 25.45,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.1,
    "ai_intent": 3.5,
    "ai_audience": 8.8,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on technical debt, its harms, and urges teams to address it proactively. While technical debt management can be tangentially related to Shift-Left principles (i.e., addressing issues early in the process), the content does not mention, discuss, or explicitly align with Shift-Left Strategy. There are no references to early testing, security, compliance, specific methodologies, or collaboration processes that define Shift-Left. The Microsoft case study and calls to pay back debt are about process overhaul and debt remediation, not early integration. The intent is more about awareness and action against technical debt rather than promoting or explaining Shift-Left. The audience is technical and relevant, and the content remains focused, but direct category fit is weak.",
    "reasoning_summary": "While the post strongly urges proactive handling of technical debt, it neither discusses nor explicitly aligns with Shift-Left Strategy. Its focus is technical debt awareness, with only minor, tangential overlap to the category. Shift-Left concepts aren’t directly addressed.",
    "level": "Ignored"
  },
  "Working Software": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Working Software",
    "calculated_at": "2025-05-16T14:20:54",
    "ai_confidence": 36.09,
    "ai_mentions": 0.5,
    "ai_alignment": 3.8,
    "ai_depth": 3.6,
    "ai_intent": 4.2,
    "ai_audience": 6.7,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on technical debt and its negative impacts, emphasizing team productivity, maintainability, and stability. While these relate to principles underpinning working software (such as code quality and long-term maintainability), the discussion never directly addresses working software as a tangible deliverable or artifact. There are no explicit mentions of 'working software'; the framing is theoretical, using technical debt as a lens for discussing dysfunction rather than describing how to achieve or measure working software. The Microsoft example highlights process change, but does not connect outcomes directly to the delivery or increment of working software. Audience targeting (practitioners/teams) is a reasonable fit, as is relevance to Agile and DevOps contexts, but the signal-to-noise ratio is diminished by the philosophical framing: it's about why technical debt is bad, not how to deliver, measure, or sustain working software. No penalties applied as the content is current and not satirical.",
    "reasoning_summary": "This piece debates technical debt’s pitfalls and touches on Agile practices, but it never directly discusses working software as an output or artifact. While tangentially related, its primary focus is risk and dysfunction, not the core category.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-16T14:20:49",
    "ai_confidence": 47.85,
    "ai_mentions": 1.0,
    "ai_alignment": 5.4,
    "ai_depth": 4.5,
    "ai_intent": 6.1,
    "ai_audience": 8.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content focuses on technical debt and its impact on productivity, stability, and risk, particularly highlighting a transformation case at Microsoft involving process changes. However, 'Digital Transformation' is only indirectly addressed: the main theme is technical debt, not the broader strategic adoption of digital technologies to drive agility or innovation. There is a relevant case study and suggestion of process overhaul, but there's limited direct discussion of digital transformation concepts, frameworks, or holistic organizational change. Audience alignment is high, as practitioners concerned with tech debt often overlap with digital transformation leadership, but intended outcomes and terminology do not consistently map to the category. Signal-to-noise is strong due to heavy focus, despite some tangential critique.",
    "reasoning_summary": "While the piece spotlights technical debt and includes a case where a tech overhaul improved productivity, it doesn’t directly focus on digital transformation or its broader strategies. The audience and topic are related, but the content doesn't fully meet the category's definition.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-16T14:20:58",
    "ai_confidence": 33.6,
    "ai_mentions": 0.7,
    "ai_alignment": 3.5,
    "ai_depth": 4.2,
    "ai_intent": 3.0,
    "ai_audience": 7.1,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on technical debt as a detrimental factor in productivity and system stability, highlighted with an anecdote about Microsoft but does not explicitly or frequently reference 'Trend Analysis.' While it indirectly touches on patterns of dysfunction (accumulation of technical debt), it lacks in-depth analysis of trends or shifts within Agile, DevOps, or business agility frameworks. There is no explicit use of trend monitoring tools, data, or an exploration of broader organizational impact, which reduces the alignment, depth, and intent scores. The audience is tech-focused, aligning moderately well, but the content is primarily an opinion piece urging action and lacks substantive evidence-driven trend exploration.",
    "reasoning_summary": "This content critiques technical debt, mentioning real-world impact but barely addresses Trend Analysis as defined. While it hints at systemic issues, it lacks explicit trend discussion or data, so confidence is moderate and largely driven by indirect relevance.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Organisational Psychology",
    "calculated_at": "2025-05-16T14:20:49",
    "ai_confidence": 10.69,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.4,
    "ai_intent": 0.7,
    "ai_audience": 3.3,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content primarily addresses technical debt, its impact on productivity, and system stability within software engineering. While it references team productivity and process changes, these are framed in technological or procedural terms, not psychological theories or principles. There is no discussion of motivation, leadership, team dynamics, psychological safety, or organisational culture as per the category definition. The intended audience appears to be technical engineering professionals, rather than those focused on organisational psychology. Overall, the fit for Organisational Psychology is extremely weak.",
    "reasoning_summary": "This piece focuses on technical debt as a software challenge, lacking discussion of psychological aspects like motivation or team dynamics. Its content is not aligned with Organisational Psychology, leading to a very low confidence score for this category.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-16T14:20:59",
    "ai_confidence": 7.6,
    "ai_mentions": 0.6,
    "ai_alignment": 1.2,
    "ai_depth": 1.7,
    "ai_intent": 0.7,
    "ai_audience": 2.1,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content exclusively discusses technical debt: its negatives, productivity impacts, and a real example (Microsoft TFS). There is no mention—explicit or implicit—of Hybrid Agile, nor any exploration of its challenges, concepts, or pitfalls. No direct references, critical analysis of methodological integration, or focus on Hybrid Agile’s intended audience. As such, confidence in classifying this under Hybrid Agile is extremely low.",
    "reasoning_summary": "The content focuses solely on technical debt and system efficiency, without discussing Hybrid Agile or its challenges. There are no references or analysis relevant to the Hybrid Agile category, so the fit is very weak.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T14:20:51",
    "ai_confidence": 10.54,
    "ai_mentions": 0.1,
    "ai_alignment": 1.0,
    "ai_depth": 1.1,
    "ai_intent": 0.6,
    "ai_audience": 4.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content is purely focused on technical debt and its risks, discussing inefficiency, risk, productivity, and process improvements. While it references team dynamics (e.g., new engineers onboarding), it does not discuss motivation, commitment, or psychological/social aspects of work. No explicit or implicit exploration of employee engagement principles. All scoring is low except for audience, as some engineering leaders may be targeted. No penalties—nothing outdated or contrary in tone.",
    "reasoning_summary": "This content discusses technical debt's impact on productivity and system architecture, not employee engagement. It lacks any meaningful connection to motivation or workplace satisfaction, so confidence in this classification is very low.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-16T14:20:49",
    "ai_confidence": 18.275,
    "ai_mentions": 0.5,
    "ai_alignment": 2.4,
    "ai_depth": 2.1,
    "ai_intent": 2.3,
    "ai_audience": 6.7,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses exclusively on technical debt, its impact on productivity, and the dangers of normalising it. While there is an indirect connection between technical debt and Test Driven Development (TDD), TDD itself is never mentioned, nor are its practices, tools, or core principles discussed. The main intent is to highlight the harms of technical debt, not to describe, explain, or promote TDD as a solution. There is no reference to TDD frameworks, cycles (e.g., Red-Green-Refactor), nor an exploration of automated testing as a core strategy. The audience may include practitioners interested in code quality, but no part of the content is clearly directed towards TDD practitioners or those wishing to learn about TDD methodology.",
    "reasoning_summary": "This content discusses the harms of technical debt but does not mention or align closely with Test Driven Development. While related in theme of code quality, the material lacks TDD focus, making fit with the category very weak.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T14:20:52",
    "ai_confidence": 19.4,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.1,
    "ai_audience": 8.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content addresses technical debt in software development, discussing its negative impact on productivity and system stability. While it touches on themes relevant to developer efficiency and automation, it does not explicitly mention platform engineering or internal developer platforms (IDPs). The main focus is technical debt management, not designing internal platforms. Audience and signal scores are higher, given targeting of developers, but overall alignment, depth, and intent with platform engineering are low.",
    "reasoning_summary": "While the text is relevant to engineering teams, its primary focus is technical debt, not platform engineering. It lacks explicit mention or significant discussion of internal platforms or related concepts, so confidence in the Platform Engineering category is low.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T14:20:49",
    "ai_confidence": 41.25,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.4,
    "ai_intent": 5.1,
    "ai_audience": 5.7,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on technical debt as a barrier to productivity and stability. While inefficiency and waste from technical debt are themes related to Lean Thinking, the piece never directly mentions Lean principles, Lean tools, or Lean frameworks. Actions like moving to Sprints and automation echo Lean ideals but aren’t explicitly connected to Lean Thinking or its core topics (e.g., Muda, Kaizen, Value Stream Mapping). The intent is more general improvement and risk reduction, not specifically Lean-aligned. The audience (tech, engineering teams) is somewhat adjacent to Lean’s target, but without explicit Lean language or focus. The content is relevant to Lean but not overt or deep in its application; therefore, confidence is moderate but not high.",
    "reasoning_summary": "While the piece highlights inefficiency from technical debt (a Lean concern), it lacks direct references to Lean Thinking or its principles. The alignment is partial—focused on process improvement, but not through a Lean lens—resulting in only moderate confidence for this category.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T14:20:55",
    "ai_confidence": 22.37,
    "ai_mentions": 0.5,
    "ai_alignment": 2.8,
    "ai_depth": 3.1,
    "ai_intent": 2.6,
    "ai_audience": 7.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content exclusively discusses technical debt—its harms, consequences, and the importance of addressing it. There is no direct mention or in-depth exploration of self-organisation, autonomy, or team empowerment. While there is a brief reference to adopting 3-week Sprints and transparency in the Microsoft TFS case, these are not explicitly linked to self-organisation principles. The focus remains on technical practices and productivity risks associated with technical debt rather than how teams can self-organise to address the issue. Audience targeting aligns somewhat, as Agile and software delivery teams care about both topics, but the core category definition is not well met.",
    "reasoning_summary": "This content is focused on technical debt, not self-organisation. It doesn't discuss team autonomy, self-management, or Agile principles beyond mentioning Sprints, and makes no direct connection to self-organising practices. As such, its fit for the 'Self Organisation' category is poor.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Competence",
    "calculated_at": "2025-05-16T14:20:55",
    "ai_confidence": 54.1,
    "ai_mentions": 2.6,
    "ai_alignment": 6.2,
    "ai_depth": 5.9,
    "ai_intent": 6.1,
    "ai_audience": 8.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses mainly on the dangers and impact of technical debt. While it aligns with professionalism and effectiveness—concepts connected to competence—it does not explicitly mention competence or make it a central theme. The narratives about onboarding, architecture fragility, and inefficiency touch on consequences of lacking competence, yet the main intent is to discourage normalizing technical debt, not to explore continuous skill development or mastery. The discussion is moderately deep and relevant for technical practitioners, but key aspects of competence such as learning, capability development, and professional growth are only implied. Thus, the confidence score reflects a partial but not strong alignment.",
    "reasoning_summary": "This content critiques technical debt and urges teams to address it, touching on themes of quality and professionalism, which relate to competence, but does not center competence directly or discuss skill development. The fit is partial, with moderate relevance to the category.",
    "level": "Tertiary"
  },
  "Decision Making": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T14:20:52",
    "ai_confidence": 38.06,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.5,
    "ai_intent": 2.9,
    "ai_audience": 3.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content discusses the dangers of technical debt, advocating for its proactive management and referencing Microsoft’s shift to Sprints and transparency. However, it does not directly reference structured or evidence-based decision-making principles, frameworks, or analytics. There is a lack of explicit discussion around formal decision-making methodologies, collaborative processes, or empirical evaluation. The examples and tone are focused more on urging action against technical debt due to negative experience rather than outlining how teams should make decisions about it using evidence-based methods. Thus, conceptual alignment and depth with the 'Decision Making' category are limited.",
    "reasoning_summary": "While the content urges teams to address technical debt, it lacks direct ties to structured or evidence-based decision-making methods. It primarily provides opinion and anecdote rather than guiding on decision-making frameworks, making its fit for this category limited.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-16T14:20:58",
    "ai_confidence": 7.83,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.8,
    "ai_intent": 0.5,
    "ai_audience": 2.6,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on technical debt's negative impacts, discussing productivity, system stability, and the consequences of allowing technical debt to persist. There is no mention at all of installation, configuration, setup, tool integration, or related best practices. No instructions, procedures, or technical actions are described. The target audience appears to be engineering leaders and Agile practitioners, but the theme is high-level risk and productivity, not the specified category. No penalty deductions were necessary as the tone is appropriate and the content is current.",
    "reasoning_summary": "This content centers on the strategic dangers of technical debt, offering no discussion of installation or configuration topics. Its concept and purpose miss the category, resulting in a very low confidence that it fits 'Install and Configuration.'",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Current Value",
    "calculated_at": "2025-05-16T14:20:55",
    "ai_confidence": 24.43,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.3,
    "ai_audience": 6.0,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on the perils of technical debt, linking it to productivity and system stability, but does not directly reference Evidence-Based Management or Current Value concepts. There is minimal alignment with metrics, indicators, or practical measurement of value delivered in real time. The main audience (engineering teams) overlaps only somewhat with EBM-CV stakeholders. Neither explicit references, conceptual depth, nor intent align strongly with Current Value, making its fit weak overall.",
    "reasoning_summary": "This content centers on the dangers of technical debt, not on measuring or managing Current Value in Evidence-Based Management. Any overlap with the category is incidental, lacking direct or thorough treatment of EBM concepts, metrics, or applications.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T14:20:58",
    "ai_confidence": 18.755,
    "ai_mentions": 0.4,
    "ai_alignment": 2.9,
    "ai_depth": 3.2,
    "ai_intent": 2.6,
    "ai_audience": 5.15,
    "ai_signal": 2.85,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content centers on technical debt and its impact on productivity, stability, and engineering practices. While improved code quality may indirectly benefit customers, the discussion never addresses customer satisfaction, its measurement, or related Agile/DevOps principles. Audience alignment is moderate since engineers concerned about these issues may also consider customer outcomes, but the main focus is internal technical health. No direct references, methods, or metrics about customer satisfaction are present.",
    "reasoning_summary": "This content focuses on technical debt and its consequences for teams and delivery, not customer satisfaction. It doesn't discuss customer feedback, engagement, or experience, so its relevance to the category is quite limited.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Project Management",
    "calculated_at": "2025-05-16T14:20:59",
    "ai_confidence": 48.84,
    "ai_mentions": 2.6,
    "ai_alignment": 5.4,
    "ai_depth": 5.1,
    "ai_intent": 5.7,
    "ai_audience": 6.2,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content centers on the impact of technical debt on productivity, efficiency, and delivery, using Microsoft as an example. While it references project outcomes, efficiency, and delivery, there is no explicit mention of project management concepts, methodologies, or tools. The alignment to project management is indirect through discussions around risk and delivery, but the focus is primarily on technical debt as a software engineering concern rather than project management as a discipline. The depth and intent are moderate, targeting practitioners interested in team effectiveness, and the signal-to-noise ratio is high, but the lack of explicit project management framing limits confidence.",
    "reasoning_summary": "This content is mainly about technical debt’s harmful effects on productivity and system stability. While it touches on themes relevant to project management, it does not directly address project management methods, roles, or processes, limiting its fit with the category.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 29.2,
    "ai_mentions": 0.8,
    "ai_alignment": 3.5,
    "ai_depth": 2.8,
    "ai_intent": 3.9,
    "ai_audience": 6.7,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content is a critique of technical debt, with one passing reference to Agile practice (3-week sprints) during a Microsoft case study. It does not discuss or compare Agile frameworks, their principles, or their influence in detail. Most of the focus is on the harmful effects of technical debt, not on frameworks themselves. The audience (engineering/tech teams) could overlap with Agile practitioners, but core Agile concepts/frameworks are neither explored nor deeply analyzed.",
    "reasoning_summary": "This piece spotlights technical debt’s risks, touching briefly on Scrum-style sprints as part of a case study, but lacks significant discussion of Agile frameworks. It doesn’t fit the category, as its primary focus is technical debt over Agile implementation.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 42.45,
    "ai_mentions": 2.7,
    "ai_alignment": 4.3,
    "ai_depth": 4.4,
    "ai_intent": 5.0,
    "ai_audience": 6.2,
    "ai_signal": 6.35,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content directly addresses technical debt's impact on productivity but does not reference 'social technologies' or their frameworks, methods, or principles. There is one mention of transparency and team workflow adjustments (sprints), which nods to Agile/social tech practices but superficially. The discussion emphasizes technical debt's risk rather than collaboration, decision-making, or emergent problem-solving. Therefore, while tangentially relevant for an audience familiar with Agile or DevOps, it lacks conceptual depth, alignment, or explicit focus on Social Technologies.",
    "reasoning_summary": "This piece discusses technical debt's organizational impacts and hints at Agile-like changes, but lacks meaningful focus on social technologies or their core principles. Its fit is marginal, with only superficial overlaps in themes.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 28.8,
    "ai_mentions": 0.2,
    "ai_alignment": 3.9,
    "ai_depth": 2.8,
    "ai_intent": 3.7,
    "ai_audience": 4.3,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses on the harms of technical debt and the need to address it but does not mention or deeply explore product strategy, vision, roadmapping, or alignment with business goals. The main theme is technical health and process change, not strategic product direction. There is some indirect audience overlap (product leaders may care), but the discussion remains squarely technical, with minimal reference to product strategy frameworks or methodologies.",
    "reasoning_summary": "This piece is chiefly about technical debt’s negative impact, not about product strategy. While it tangentially relates to product outcomes and may interest product strategists, it doesn’t cover methods, vision, or strategic planning required for this category.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Development",
    "calculated_at": "2025-05-16T14:20:55",
    "ai_confidence": 65.557,
    "ai_mentions": 1.2,
    "ai_alignment": 7.7,
    "ai_depth": 6.5,
    "ai_intent": 7.2,
    "ai_audience": 8.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 66.0,
    "reasoning": "The content focuses on the impact of technical debt—particularly how neglecting it impairs productivity and product delivery. There is explicit mention of agile practice (3-week sprints) and references to organizational shifts in engineering strategy (Microsoft TFS). Discussion aligns with risk management, continuous improvement, and enabling delivery. However, the primary emphasis is on technical debt rather than broader product development methodologies or customer feedback cycles. No outdated practices or critical tones are present, so no penalties are applied. The audience seems to be engineering leaders or teams concerned with system health and delivery velocity—a moderately close fit to product development practitioners. Depth is significant but focused on a single factor (tech debt), limiting comprehensive coverage.",
    "reasoning_summary": "The content discusses technical debt and its risk to product delivery, referencing agile practices and organizational change but keeps a technical focus. It's relevant to product development, though not deeply exploring wider methodologies. Suitable for engineering leads working on delivery improvement.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T14:20:56",
    "ai_confidence": 18.25,
    "ai_mentions": 0.6,
    "ai_alignment": 2.1,
    "ai_depth": 2.4,
    "ai_intent": 2.2,
    "ai_audience": 5.3,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses exclusively on technical debt, its negative impacts, and the necessity of addressing it. While it references a well-known case (Microsoft TFS) and changes like sprints and transparency, it remains anchored in productivity and system stability, not in sensemaking—there are no models, frameworks, or discussions about interpreting complexity or collective sensemaking processes. No sensemaking vocabulary is used, nor are relevant frameworks referenced. The audience is relevant to tech teams, which might overlap with sensemaking audiences, but the intent is practical management of technical debt, not exploring decision-making in complex environments.",
    "reasoning_summary": "This piece is about the risks of technical debt, not about sensemaking or navigating complexity. Without frameworks or approaches rooted in sensemaking, it doesn’t fit the category, resulting in a low confidence classification.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T14:20:58",
    "ai_confidence": 4.9,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.7,
    "ai_intent": 2.0,
    "ai_audience": 3.1,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content is solely focused on the concept of technical debt in software engineering, specifically arguing that technical debt is inherently harmful and should not be normalized. While it briefly references organizational change (at Microsoft and adoption of sprints/transparency), it does not mention or discuss the principles, terminology, or conceptual framework of Cell Structure Design, the Beta Codex, or decentralised autonomous cells. There is no exploration of network-based structures, value creation, end-to-end responsibility, or self-organization as described in the category definition. The content is aimed at technical audiences interested in software practices, not organizational design innovation. Thus, its conceptual alignment and discussion depth related to Cell Structure Design are negligible, and there are no direct mentions.",
    "reasoning_summary": "The text focuses only on technical debt in software engineering, not on Cell Structure Design, its principles, or its organizational context. There's no conceptual or explicit connection to the category, making alignment extremely low.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Artifact",
    "calculated_at": "2025-05-16T14:20:57",
    "ai_confidence": 9.9,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.5,
    "ai_intent": 2.4,
    "ai_audience": 2.6,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content critiques technical debt as a harmful element in software development and advocates for addressing it. It references practices like Sprints and transparency but does not explicitly discuss artifacts as formal representations of work. There's no mention of specific artifacts (e.g., Product Backlog, Sprint Backlog), nor is there an exploration of their structure, purpose, or management. The focus remains on technical debt—a related but distinct concept—without aligning with the artifact category's themes or intent. Thus, confidence that this content fits under 'Artifact' is extremely low.",
    "reasoning_summary": "This content focuses on the consequences and risks of technical debt, not on Agile or Scrum artifacts. It doesn't define, analyze, or instruct on artifacts as formal work representations, so very little confidence it fits the 'Artifact' category.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T14:21:00",
    "ai_confidence": 42.8,
    "ai_mentions": 1.7,
    "ai_alignment": 5.9,
    "ai_depth": 5.2,
    "ai_intent": 6.6,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content centers on the negative impact of technical debt and calls for actively addressing it to restore productivity and stability. While a Microsoft case study hints at Agile-esque interventions (3-week Sprints, transparency), there is no direct mention or in-depth exploration of Agile strategy, principles, or organizational strategic alignment. The focus remains mostly on technical execution and organizational dysfunction rather than explicit Agile strategic integration or methodology at scale. Slight alignment and audience fit is present given references to process overhaul, but the main thrust is technical—not strategic.",
    "reasoning_summary": "This piece mainly critiques technical debt and indirectly references Agile practices but doesn't directly address Agile strategy or organizational alignment, making its fit for the category only partial.",
    "level": "Tertiary"
  },
  "GitHub": {
    "resourceId": "lLNjkL_zGQa",
    "category": "GitHub",
    "calculated_at": "2025-05-16T14:21:00",
    "ai_confidence": 3.9,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 2.0,
    "ai_audience": 4.6,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses exclusively on the concept of technical debt and its consequences, with no mention of GitHub, its tools, or practices. It references Microsoft and TFS, but never addresses code collaboration, repositories, CI/CD, or any GitHub features. The audience may overlap with engineers using GitHub, but the discussion never actually connects to GitHub's context. Thus, scores across all dimensions are very low, with zero direct mentions and almost no conceptual or practical overlap with the category.",
    "reasoning_summary": "This content doesn’t address GitHub or its tools at all; it’s solely about the perils of technical debt in software engineering, making it a clear mismatch for the GitHub category.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T14:21:02",
    "ai_confidence": 1.7,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 1.9,
    "ai_audience": 2.1,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses on technical debt, its negative impacts, and a historical Microsoft/TFS example. Nowhere does it mention Azure Pipelines directly or indirectly. While the audience may overlap with Azure DevOps practitioners and there is a tangential connection to process automation, neither the principles nor the practices, configuration, or discussion of Azure Pipelines is covered. References to automation are generic. No outdated or contradictory information is present. The content does not fit the category.",
    "reasoning_summary": "This content addresses technical debt and process improvement but makes no direct or implied reference to Azure Pipelines or CI/CD tooling, so it strongly falls outside the scope of the Azure Pipelines category.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Leadership",
    "calculated_at": "2025-05-16T14:20:54",
    "ai_confidence": 31.75,
    "ai_mentions": 0.5,
    "ai_alignment": 3.2,
    "ai_depth": 2.9,
    "ai_intent": 3.4,
    "ai_audience": 5.1,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content is focused on technical debt and its negative impacts. There is no direct mention of 'Leadership' or discussion of leaders' roles, styles, or responsibilities. While the topic may implicitly interest leaders (e.g., decisions around technical debt, team productivity), the main emphasis is on technical outcomes and team-level dysfunction. The only indirect reference related to leadership is the anecdote about Microsoft’s transformation (e.g., sprints, transparency), but this is not framed through the lens of leadership models or practices. The audience could include leaders, but the depth of leadership-specific content is minimal; thus, the overall confidence score is low.",
    "reasoning_summary": "This content focuses on technical debt and system dysfunction, offering little direct discussion of leadership practices or theory. While leaders might be part of the target audience, the primary attention is on technical process and risks—not leadership.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T14:20:54",
    "ai_confidence": 14.95,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.8,
    "ai_intent": 2.6,
    "ai_audience": 3.1,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on the negative impact of technical debt, especially regarding productivity, system stability, and engineering process efficiency. It discusses practices such as improving development workflows and addressing inefficiencies, but never references or directly connects these points to customer engagement, satisfaction, or retention. Audience alignment is modest as the piece primarily addresses engineering leads, not customer retention strategists. Although process failures can affect customer experience, the content does not explore this connection explicitly or implicitly in any depth. There are no outdated references or criticisms of retention concepts, so no penalties are applied.",
    "reasoning_summary": "This piece centers on technical debt's impact on engineering productivity and risk, without discussing strategies for customer retention or engagement. It doesn't directly reference or align with the category, resulting in low confidence for classification under Customer Retention.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Ethos",
    "calculated_at": "2025-05-16T14:20:53",
    "ai_confidence": 42.1,
    "ai_mentions": 2.3,
    "ai_alignment": 4.8,
    "ai_depth": 4.2,
    "ai_intent": 5.1,
    "ai_audience": 5.9,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content mostly frames technical debt as a pressing operational concern, highlighting risk and advocating for addressing inefficiencies and poor engineering practices. While it briefly mentions the need for transparency and a shift in how work is approached, the focus is not on the foundational beliefs, convictions, or system-level ethos that drive sustainable delivery in Agile, DevOps, or Lean. Direct mentions of ethos are absent, and the discussion sticks to consequences and remediation in practice. There is limited exploration of underlying convictions, so the conceptual alignment and depth are moderate. The primary audience is practitioners or technical leaders, aligning somewhat with the category but not strongly. The signal is fairly focused, without much tangential content. No penalties are applied as the content is not outdated or overtly critical of the ethos concept. The confidence score is low-to-moderate because while the argument against normalizing technical debt aligns in spirit with some system-level beliefs, it doesn’t substantively explore ethos per the strict definition supplied.",
    "reasoning_summary": "This piece urges teams to address technical debt but centers on productivity and risk, not deeper beliefs or system ethos. While it hints at shifts in approach, it lacks substantive discussion of foundational convictions, resulting in a moderate fit for the 'Ethos' category.",
    "level": "Tertiary"
  },
  "Windows": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Windows",
    "calculated_at": "2025-05-16T14:20:55",
    "ai_confidence": 18.05,
    "ai_mentions": 0.3,
    "ai_alignment": 1.8,
    "ai_depth": 2.1,
    "ai_intent": 2.2,
    "ai_audience": 5.2,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content broadly discusses the concept of technical debt, its risks, and the need for remediation, referencing general engineering best practices and Microsoft’s TFS as an illustrative case. However, it does not directly mention Windows or discuss its installation, configuration, troubleshooting, or any of the category’s specific themes. The mention of Microsoft is organizational, not product-specific. The content largely targets software engineering teams—a partial overlap, but not specifically Windows practitioners. Thus, there is minimal direct/category relevance, low mentions, and shallow alignment. No outdated or critical tone present; no penalties applied.",
    "reasoning_summary": "This content focuses on technical debt, using a Microsoft example but not addressing Windows or its environment. It targets general engineering teams, not Windows users. As a result, its relevance to the Windows category is very limited.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T14:20:56",
    "ai_confidence": 37.0,
    "ai_mentions": 1.1,
    "ai_alignment": 4.7,
    "ai_depth": 3.2,
    "ai_intent": 4.3,
    "ai_audience": 6.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses almost entirely on technical debt—its dangers, impacts, and the need for action. Organisational culture is only implied through reference to shifting work practices at Microsoft and the notion of normalising dysfunction, but there are no direct mentions of culture or in-depth discussion of cultural change. Themes like team dynamics or leadership in shaping culture occur only on the periphery. The content primarily targets engineers and technical leaders with a practical, problem-focused message. Overall, the discussion is somewhat related to culture via attitudes to technical debt, but it does not substantially or explicitly address the core of 'Organisational Culture' as per the provided classification.",
    "reasoning_summary": "While this piece briefly touches on organisational attitudes, its core message is about technical debt—not culture. There's some indirect relevance, but it lacks a substantial focus on how organisational culture shapes or changes technical debt practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T14:20:57",
    "ai_confidence": 43.8,
    "ai_mentions": 2.2,
    "ai_alignment": 4.1,
    "ai_depth": 4.6,
    "ai_intent": 5.0,
    "ai_audience": 7.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content focuses on technical debt's negative impact on productivity and system stability. While it references a case (Microsoft TFS) involving process change (Sprints, transparency) to alleviate technical debt, it doesn't explicitly discuss mechanisms or practices supporting innovation, nor does it mention innovation directly. The theme is about removing barriers to delivery rather than proactively increasing innovation capability. Audiences interested in innovation might find it tangentially relevant but not central.",
    "reasoning_summary": "This piece mainly addresses technical debt as a barrier to productivity, not directly the ability to innovate. While some aspects (like changing processes to reduce debt) could support innovation, the focus is not on innovation mechanisms or metrics, leading to only a moderate fit with the category.",
    "level": "Tertiary"
  },
  "Practice": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Practice",
    "calculated_at": "2025-05-16T14:20:59",
    "ai_confidence": 54.58,
    "ai_mentions": 1.8,
    "ai_alignment": 6.9,
    "ai_depth": 5.4,
    "ai_intent": 7.1,
    "ai_audience": 6.6,
    "ai_signal": 8.2,
    "ai_penalties_applied": true,
    "ai_penalty_points": 1.0,
    "ai_penalty_details": "Mentions dimension penalized (-1): The content does not explicitly reference actionable practices by name (e.g., pair programming, retrospectives), relying more on the technical debt concept without directly linking to categorized practices.",
    "final_score": 55.0,
    "reasoning": "The content focuses on the harms of technical debt and encourages teams to address it, referencing the negative consequences of neglecting system quality and the impact on productivity. While it mentions process improvements (automation, transparency, sprints) in the Microsoft example, the actionable practice discussion is indirect. Major practice names (like continuous deployment or retrospectives) aren't named outright, and the content is more opinion-driven, urging action without outlining specific repeatable habits or methods. This results in modest conceptual alignment and depth, though the target audience (software teams/engineers) is appropriate. A penalty is applied for lack of direct practice terminology.",
    "reasoning_summary": "While the content urges teams to address technical debt and hints at improved workflows, it doesn’t explicitly discuss or teach repeatable practices. It’s relevant but falls short of the Practice category’s focus on specific, actionable techniques.",
    "level": "Tertiary"
  },
  "Increment": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Increment",
    "calculated_at": "2025-05-16T14:21:01",
    "ai_confidence": 13.15,
    "ai_mentions": 0.4,
    "ai_alignment": 1.3,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 2.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content is focused on technical debt, discussing its negative impacts and advocating for addressing it. There are no explicit references to Increment, working software, or the delivery of usable outputs in Scrum. While there is a mention of sprints, the main thrust ignores Increment altogether, with minimal conceptual overlap. The audience may include Agile teams but the topic is not tailored to Increment-related knowledge or practices.",
    "reasoning_summary": "This content centers on technical debt management, not on Increment or delivering working software in iterative cycles. It lacks direct references, depth, and alignment to the Increment category, resulting in very low confidence for this classification.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T14:21:02",
    "ai_confidence": 13.85,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 2.1,
    "ai_intent": 1.3,
    "ai_audience": 5.4,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content exclusively focuses on the risks and consequences of technical debt, emphasizing its harmful impact and citing an example (Microsoft and TFS). However, there are no references—explicit or implicit—to Lean Startup principles such as MVPs, Build-Measure-Learn, validated learning, or iterative customer development. The main ideas and recommendations are centered on engineering best practices rather than Lean Startup's core iterative experimentation and feedback cycle. Intent is aligned with technical improvement, not innovation or hypothesis-driven startup methodology. Thus, both mention and conceptual fit with Lean Startup are extremely low.",
    "reasoning_summary": "This content centers on technical debt, not Lean Startup. There are no references to Lean principles, iterative learning, or experimentation. While it targets engineers, it doesn't address Lean Startup core concepts, resulting in low confidence for the category.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Throughput",
    "calculated_at": "2025-05-16T14:20:54",
    "ai_confidence": 13.94,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 0.7,
    "ai_intent": 1.1,
    "ai_audience": 6.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses exclusively on technical debt and its negatives, equating it with lowered productivity and delivery risk. While it briefly mentions the TFS team 'shipping 24 features per year,' it doesn't analyze, interpret, or even mention 'throughput' as a metric. The intent is to persuade the audience to address technical debt, not to discuss throughput measurement, trends, or visualizations. The scant reference to features delivered per year is anecdotal support for a productivity argument, not an exploration of throughput as a delivery metric. There’s little alignment with the 'Throughput' category beyond incidental discussion of delivery difficulties due to debt; no throughput metrics are defined, visualized, or evaluated.",
    "reasoning_summary": "This content critiques technical debt and its risks, using feature delivery as an anecdotal point but never analyzing throughput itself. It doesn't define, measure, or discuss throughput as a delivery metric, so fit with the category is very weak.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T14:20:56",
    "ai_confidence": 7.88,
    "ai_mentions": 0.05,
    "ai_alignment": 1.7,
    "ai_depth": 1.6,
    "ai_intent": 0.8,
    "ai_audience": 1.15,
    "ai_signal": 0.92,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on the harms of technical debt—its impact on productivity, maintainability, and team performance. While it references remote team challenges and a Microsoft case study, it does not mention, explore, or align thematically with asynchronous development. No principles, practices, or challenges of asynchronous workflows are discussed. Any relevance to asynchronous collaboration is purely inferential and not explicit, so nearly no alignment exists.",
    "reasoning_summary": "This content addresses technical debt, not asynchronous development. It lacks explicit mention, conceptual fit, or depth on asynchronous principles, making it a poor match for the category.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T14:20:57",
    "ai_confidence": 34.05,
    "ai_mentions": 0.6,
    "ai_alignment": 2.8,
    "ai_depth": 3.2,
    "ai_intent": 2.7,
    "ai_audience": 7.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content centers on the pitfalls of technical debt and argues against its normalization, with some reference to delivery impediments. Although it briefly mentions a scenario where release pace was increased (Microsoft's move to 3-week Sprints), the primary focus is technical debt, not frequent releases. There is minimal direct discussion about principles, tools, or best practices related to frequent releases. The audience, however, matches practitioners interested in process improvement. The overall confidence reflects that only a small part of the content tangentially relates to the category.",
    "reasoning_summary": "While the article touches on team productivity and briefly mentions increased release frequency, it is primarily about technical debt—not frequent releases. There's little alignment with core frequent release practices, so confidence for this category is low.",
    "level": "Ignored"
  },
  "Philosophy": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T14:20:59",
    "ai_confidence": 29.87,
    "ai_mentions": 0.7,
    "ai_alignment": 3.6,
    "ai_depth": 3.2,
    "ai_intent": 4.1,
    "ai_audience": 4.8,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses on the negative impact of technical debt, referencing productivity, stability, and the consequences of not addressing it. However, it centers on practical outcomes and warnings rather than philosophical frameworks or foundational beliefs. There are no direct philosophical terms or explicit reference to Agile, Lean, or DevOps philosophy, and discussion is limited to technical debt's risks and operational impact. The main intent is cautionary and practical, not foundational or theoretical, with most content aimed at practitioners facing technical debt. There is minimal overlap with philosophical exploration.",
    "reasoning_summary": "This content focuses on practical drawbacks of technical debt, not its philosophical underpinnings. While it addresses organizational impact, it lacks exploration of deeper methodological beliefs or frameworks, making it only loosely aligned with the Philosophy category.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Tool",
    "calculated_at": "2025-05-16T14:20:59",
    "ai_confidence": 22.06,
    "ai_mentions": 0.7,
    "ai_alignment": 3.8,
    "ai_depth": 2.9,
    "ai_intent": 3.4,
    "ai_audience": 6.6,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on the harms of technical debt, advocating for addressing it but provides no explicit or direct reference to any tool, software, or mechanism as defined in the category. The mention of TFS is historical, as an example of a team overhauling process, but does not analyze TFS as a tool or describe any specific tooling features, functionality, or tool integration. The audience is technical and agile-oriented, moderately aligning with the tools category's intended readers, but lacks sufficient tool discussion for high confidence.",
    "reasoning_summary": "This content discusses technical debt and process change, but does not explicitly discuss tools or their application, offering only a brief mention of TFS without analysis. Therefore, it only weakly fits the 'Tool' category.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T14:21:00",
    "ai_confidence": 86.6,
    "ai_mentions": 7.1,
    "ai_alignment": 9.3,
    "ai_depth": 8.2,
    "ai_intent": 9.0,
    "ai_audience": 8.9,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses technical debt, a key responsibility of technical leadership per the category definition. It references practical impact on team productivity, system stability, and organizational change, aligning well with agile leadership priorities. The Microsoft TFS example underscores the architecture and process roles of technical leaders. While the focus is specific (technical debt), the discussion is substantial and aimed at leaders of technical teams, supporting team improvement and agile practices. There is minimal off-topic content, and the message is both a warning and a challenge directly applicable to technical leaders.",
    "reasoning_summary": "This content strongly fits Technical Leadership. It addresses a core leadership concern—technical debt—relates real-world agile transformation, and targets tech leads seeking better team outcomes. The analysis is focused, practical, and highly relevant, justifying a high confidence score.",
    "level": "Primary"
  },
  "Continuous Learning": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T14:21:01",
    "ai_confidence": 31.88,
    "ai_mentions": 0.5,
    "ai_alignment": 3.9,
    "ai_depth": 3.6,
    "ai_intent": 3.7,
    "ai_audience": 6.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on the dangers of technical debt but does not mention or deeply explore continuous learning, growth mindset, or related practices. While it references team practices using the Microsoft TFS example, the emphasis is on addressing technical debt, not on knowledge sharing, adaptation, or continuous improvement as ongoing cultural processes. Audience overlap exists (technical, Agile-oriented), and there's a nod to process change, but little explicit or in-depth focus on continuous learning principles.",
    "reasoning_summary": "This content zeroes in on technical debt and its risks, offering minimal focus on continuous learning. While some audience and intent overlap exists, it lacks explicit discussion of growth mindset or ongoing team improvement central to the category.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T14:21:03",
    "ai_confidence": 38.25,
    "ai_mentions": 2.2,
    "ai_alignment": 4.8,
    "ai_depth": 4.4,
    "ai_intent": 4.2,
    "ai_audience": 4.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses intensely on technical debt, explicitly arguing against the idea of 'good' technical debt. It references a Microsoft case study involving a shift to '3-week Sprints' and increased transparency, implying but not explicitly discussing Agile methodologies or transformation. There's minimal discussion of Agile principles, transformation strategies, leadership, or cultural change beyond the Sprint reference. Most of the message centers on risk and productivity, not organizational agility or change management. The intended audience could align with those interested in Agile, but the focus is technical debt rather than organizational factors of Agile transformation.",
    "reasoning_summary": "While this piece touches briefly on team practices like Sprints, its core message is about eliminating technical debt, not guiding Agile transformation. There's minimal alignment with Agile transformation principles, resulting in a low confidence fit for the category.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Management",
    "calculated_at": "2025-05-16T14:21:00",
    "ai_confidence": 43.15,
    "ai_mentions": 1.2,
    "ai_alignment": 4.3,
    "ai_depth": 4.1,
    "ai_intent": 4.8,
    "ai_audience": 5.1,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content focuses on technical debt as a barrier to productivity and system stability, referencing real-life consequences and the need for process improvement. While these points intersect with concerns of product management (efficient delivery, system health), the discussion centers on an engineering perspective rather than strategic alignment, frameworks, or stakeholder balancing. Direct references to product management roles, techniques, or decision-making frameworks are absent. The audience seems to be engineers or teams managing codebases; while product managers care about these outcomes, the approach is operational, not strategic. Thus, alignment and depth toward the Product Management category are moderate at best.",
    "reasoning_summary": "This content addresses technical debt's impact on productivity and hints at organizational process changes. However, it focuses on engineering practices rather than strategic product management themes, making it only moderately relevant to the Product Management category.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T14:21:00",
    "ai_confidence": 77.86,
    "ai_mentions": 4.4,
    "ai_alignment": 8.9,
    "ai_depth": 8.2,
    "ai_intent": 8.1,
    "ai_audience": 7.8,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content directly addresses the harm of technical debt and links its resolution to operational efficiency, referencing workflow automation, delivery speed, and a real-world case (Microsoft’s TFS transformation). It focuses on practical improvement and the necessity of addressing technical debt as part of operational practices. While it doesn't mention 'Operational Practices' by name and is not a comprehensive methods guide, it strongly aligns with core topics (automation, continuous improvement, waste reduction), intended for teams/practitioners interested in operational efficiency. Explicit processes like Sprints and debt remediation are discussed. The depth is strong with concrete examples and actionable reflection, although not exhaustive. Minor deductions for not explicitly listing methodologies or metrics, but overall relevance is high.",
    "reasoning_summary": "This piece offers a persuasive, example-driven discussion of how unaddressed technical debt impairs operational efficiency, urging teams to tackle it with practical strategies like automation and Sprint planning. The focus on transformation and improvement closely aligns with Operational Practices, giving it a strong confidence score.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T14:21:03",
    "ai_confidence": 29.74,
    "ai_mentions": 0.5,
    "ai_alignment": 3.1,
    "ai_depth": 2.9,
    "ai_intent": 3.8,
    "ai_audience": 7.1,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses entirely on technical debt, its negative consequences, and the importance of addressing it. While there is a passing mention that technical debt 'doesn't accumulate linearly,' this is the only point aligning with non-linear dynamics, a minor overlap with the Complexity Thinking category. There are no direct references to complexity science, its frameworks (like Cynefin), or emergent system behaviors. The discussion is rooted in traditional productivity and risk topics and remains practical, reductionist, and narrowly focused on managing technical debt, not on broader organisational complexity. No dimensions required penalty deductions, as the content is neither outdated nor overtly oppositional. Given the negligible conceptual and thematic engagement with Complexity Thinking, the confidence score is low.",
    "reasoning_summary": "This content strictly addresses technical debt and its impact, with only a fleeting nod to non-linear accumulation—falling far short of engaging with Complexity Thinking’s core themes or frameworks.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T14:21:06",
    "ai_confidence": 16.16,
    "ai_mentions": 1.1,
    "ai_alignment": 2.2,
    "ai_depth": 2.7,
    "ai_intent": 2.2,
    "ai_audience": 5.5,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content discusses technical debt broadly, with only a historical mention of Microsoft’s TFS transformation (relevant as the predecessor of Azure DevOps). However, there is no explicit or detailed discussion of Azure DevOps services, features, or methodologies, nor any specific alignment to Azure DevOps principles. The focus is on general engineering practices and the perils of technical debt, rather than Azure DevOps-specific solutions, tools, or best practices. The audience partially overlaps (engineering teams), but the content is not targeted at Azure DevOps practitioners.",
    "reasoning_summary": "This content addresses technical debt using a Microsoft TFS example, but does not meaningfully discuss Azure DevOps. Since it lacks focus on Azure DevOps services, practices, or tools, its confidence score for this category is appropriately low.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T14:21:07",
    "ai_confidence": 42.29,
    "ai_mentions": 2.0,
    "ai_alignment": 5.3,
    "ai_depth": 3.7,
    "ai_intent": 4.4,
    "ai_audience": 7.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content centrally discusses technical debt as a source of inefficiency and risk, including how it hampers productivity and delivery. It references a case where overhauling work processes improved throughput. However, it does not directly name or elaborate on Flow Efficiency concepts, nor does it discuss methods for optimising throughput (e.g., WIP limits, Kanban, specific Lean/Agile principles). The alignment is partial—there’s some connection via the effect of technical debt on efficiency and delivery speed—but the discussion remains mostly at the level of technical debt’s general harms rather than the operational strategies for Flow Efficiency. The intended audience (teams/engineers) is generally consistent with Flow Efficiency topics, but the lack of direct discussion keeps confidence moderate.",
    "reasoning_summary": "This content talks about how technical debt hurts productivity and team delivery but doesn't directly engage with core Flow Efficiency concepts or methods. While the audience and general theme fit, the lack of explicit mention or detailed exploration keeps confidence moderate.",
    "level": "Tertiary"
  },
  "Strategic Goals": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 19.0,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 1.7,
    "ai_intent": 2.0,
    "ai_audience": 7.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content addresses technical debt and its risks for productivity and stability but focuses on immediate, tactical concerns rather than long-term strategic goals or business agility. The example of Microsoft moving to Agile methods is briefly touched upon, but the core discussion is about operational problems, not the definition, measurement, or adaptation of strategic objectives. No explicit mention of strategic goals or frameworks, and minimal alignment with the topic’s conceptual depth or intent. Audience and signal are higher, as the content still targets skilled practitioners and is relevant to software engineering contexts.",
    "reasoning_summary": "This content centers on technical debt as a productivity issue rather than aligning with strategic goals or business agility themes. It lacks depth and explicit reference to long-term objectives, so its relevance to the Strategic Goals category is quite low.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 0,
    "ai_mentions": 0,
    "ai_alignment": 0,
    "ai_depth": 0,
    "ai_intent": 1.2,
    "ai_audience": 5.3,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 0.0,
    "reasoning": "The content is exclusively focused on technical debt, its effects on productivity, and system stability, providing industry examples and calling for change. There is no mention or discussion of Liberating Structures methods, facilitation techniques, or related practices. None of the classification criteria is met; the only slight alignment is that the post addresses a technical team audience (a small fit in audience relevance) and is mostly on-topic. No penalties are required, as there is no outdated or contradictory tone.",
    "reasoning_summary": "This piece is only about technical debt, not Liberating Structures. It provides no mentions or connections to facilitation methods or toolkit practices, and the content’s core intent, details, and audience are unrelated to the category.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T14:21:01",
    "ai_confidence": 68.7,
    "ai_mentions": 2.4,
    "ai_alignment": 7.5,
    "ai_depth": 6.9,
    "ai_intent": 7.9,
    "ai_audience": 9.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content discusses technical debt's negative impacts on productivity, efficiency, and system stability—essentially implicating value delivery without explicitly naming the term. While the narrative highlights consequences of unmanaged technical debt and references an Agile transformation (TFS shifting to Sprints), it rarely directly addresses value delivery strategies, practices, or methodologies in line with the strict definition. The discussion is most deeply aligned when referencing efficiency, risk, and system overhaul, but omits direct mention of continuous value delivery, iterative practices, or value measurement. The intended audience matches leaders and practitioners involved in Agile or DevOps environments. The tone is focused and relevant, though mostly addresses technical debt as a risk to productivity rather than directly using value delivery frameworks or concepts.",
    "reasoning_summary": "This content critiques unaddressed technical debt, showcasing its risks to productivity and system health. It resonates with value delivery by illustrating loss of effectiveness from accumulated technical debt, especially with the Agile transformation example, but lacks explicit reference to value delivery strategies or terminology.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T14:21:02",
    "ai_confidence": 30.34,
    "ai_mentions": 0.4,
    "ai_alignment": 3.5,
    "ai_depth": 2.7,
    "ai_intent": 3.3,
    "ai_audience": 6.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content solely addresses technical debt's impact on productivity, system stability, and team performance, with emphasis on risk and inefficiency. While it mentions systemic outcomes (e.g., productivity loss, system fragility) and hints at organisational process change (e.g., sprints, transparency), it doesn't discuss systems thinking, feedback loops, organisational structure, or adaptivity. The focus is not on understanding or applying 'Organisational Physics' principles, but rather on urging action against technical debt within a team or engineering context. Thus, alignment and depth with the category are low. Audience and signal are somewhat higher since the advice is for engineering teams, but the direct connection to 'Organisational Physics' is minimal.",
    "reasoning_summary": "This content focuses on the harms of technical debt in software engineering teams but lacks any meaningful connection to organisational physics, such as systems thinking or organisational dynamics. Its scope is too narrow, so confidence that it fits the category is low.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T14:21:03",
    "ai_confidence": 8.11,
    "ai_mentions": 0.1,
    "ai_alignment": 1.3,
    "ai_depth": 0.8,
    "ai_intent": 1.2,
    "ai_audience": 2.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content exclusively discusses technical debt—its impact on productivity, risk, and architectural health—without ever mentioning psychological safety directly or indirectly. There are no references to team dynamics, open communication, or supportive environments. Even the Microsoft case study focuses on process improvements and transparency in relation to technical debt, not psychological safety. Thus, alignment, depth, and mentions scores are extremely low, as the material does not fit the category per the provided definition.",
    "reasoning_summary": "This content focuses strictly on technical debt, offering little to no mention or exploration of psychological safety principles or themes, making it a poor fit for this category.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T14:21:01",
    "ai_confidence": 21.246,
    "ai_mentions": 0.7,
    "ai_alignment": 2.4,
    "ai_depth": 2.3,
    "ai_intent": 2.8,
    "ai_audience": 6.1,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content is focused on technical debt in software engineering—not entrepreneurship. There are no direct mentions of entrepreneurship or entrepreneurial concepts such as innovation, risk-taking in the entrepreneurial sense, or value creation for new ventures. The discussion revolves around code quality, productivity, and team processes, which are relevant to software practitioners and managers but do not align with the entrepreneurial process. Examples reference Microsoft's internal practices; while these touch on transformation, they are framed as engineering process improvements, not entrepreneurial strategies. The target audience more closely aligns with technical leaders than with entrepreneurs or startup founders.",
    "reasoning_summary": "This content centers on technical debt and software productivity, not entrepreneurship. It lacks relevant themes like innovation, risk-taking in business, or value creation typical of entrepreneurial discourse, making fit for the category low.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Framework",
    "calculated_at": "2025-05-16T14:21:05",
    "ai_confidence": 11.45,
    "ai_mentions": 1.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 3.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses almost entirely on the drawbacks of technical debt, its impact on productivity, and overall risk to software teams. It references a case where Microsoft adopted 3-week Sprints and became more transparent, but the mention of a methodology (Sprints) is brief and incidental—not a discussion of frameworks. There's no exploration or analysis of frameworks, their principles, how or why they are implemented, or guidance on adapting frameworks. Thus, the alignment, intent, and depth with the Framework category are minimal; primarily, the subject is technical debt, not frameworks.",
    "reasoning_summary": "This content critiques technical debt and encourages addressing it, but provides only a passing mention of a framework element (Sprints) without discussing frameworks themselves. It's not suited for the Framework category.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T14:21:02",
    "ai_confidence": 53.7,
    "ai_mentions": 2.0,
    "ai_alignment": 6.7,
    "ai_depth": 6.4,
    "ai_intent": 7.0,
    "ai_audience": 8.3,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content critiques the normalization of technical debt, arguing it always damages efficiency and productivity. While focusing on inefficiency aligns loosely with Lean's waste reduction principles, Lean terminology and core concepts (like Kaizen, Value Stream Mapping, 5S, etc.) are not directly mentioned. The main thrust is a warning against complacency about technical debt rather than an explicit discussion of Lean principles or tools. The Microsoft TFS case points to process overhaul and improved delivery, possibly hinting at iterative improvement, but without directly referencing Lean or deeply exploring Lean practices. The content is suitably targeted at practitioners and tech leaders concerned with process efficiency, partially aligning with Lean’s audience, and stays focused on addressing inefficiency and risk. However, the lack of explicit Lean vocabulary, limited exploration of Lean frameworks, and absence of core Lean tools or methodology in the discussion reduce both depth and direct conceptual fit.",
    "reasoning_summary": "This content urges teams to confront technical debt due to its negative productivity impact. While it touches on process inefficiency, which partially aligns with Lean thinking, it never directly references Lean concepts or tools, making the connection indirect. The focus is on risk, not Lean principles.",
    "level": "Tertiary"
  },
  "Scrum": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Scrum",
    "calculated_at": "2025-05-16T14:21:06",
    "ai_confidence": 42.45,
    "ai_mentions": 2.4,
    "ai_alignment": 4.3,
    "ai_depth": 4.7,
    "ai_intent": 3.6,
    "ai_audience": 5.3,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content centers around technical debt, highlighting its dangers and the need to address it for productivity and system stability. Scrum is only alluded to via mention of 3-week Sprints and transparency, but there's no substantive exploration of Scrum principles, roles, or events. The main focus is not on Scrum, but rather on the hazards of technical debt and the importance of confronting it. Audience is tech-oriented, likely familiar with agile, but not explicitly Scrum-focused.",
    "reasoning_summary": "Although there are brief nods to Scrum-like practices, this content primarily tackles technical debt with minimal direct relationship to Scrum's framework or philosophy. Its main intent and depth lie outside 'Scrum' as a topic.",
    "level": "Tertiary"
  },
  "Principle": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Principle",
    "calculated_at": "2025-05-16T14:21:04",
    "ai_confidence": 44.45,
    "ai_mentions": 1.2,
    "ai_alignment": 5.8,
    "ai_depth": 4.9,
    "ai_intent": 4.8,
    "ai_audience": 7.3,
    "ai_signal": 3.1,
    "ai_penalties_applied": true,
    "ai_penalty_points": 1.5,
    "ai_penalty_details": "Depth (-0.5): Content is more opinion-driven and doesn't discuss principles at a substantial level. Signal (-1.0): Majority of focus is exhortation rather than explicit principle exploration.",
    "final_score": 44.0,
    "reasoning": "The content primarily argues against normalising technical debt, framing it as inherently harmful and sharing an anecdote from Microsoft's experience. There are indirect references to principles like transparency and continuous improvement (e.g., 'embraced transparency,' 'started paying back their technical debt'), but these are not deeply discussed or presented as actionable principles in the context of Agile, Lean, or DevOps. Instead, the piece is an opinion-heavy critique, focusing on risks and consequences. The primary intent is to motivate teams to address technical debt, with minimal exploration of foundational principles or their implications. Audience alignment is moderately high—this targets practitioners facing tech debt issues—but the absence of a framework or explicit principle-based framing reduces conceptual alignment, depth, and signal-to-noise ratio.",
    "reasoning_summary": "This content forcefully argues against accepting technical debt but focuses on critique and motivation more than explicit principles. While indirectly touching on continuous improvement and transparency, it lacks the depth and explicit discussion required for strong alignment with the 'Principle' category.",
    "level": "Tertiary"
  },
  "Product Owner": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T14:21:09",
    "ai_confidence": 13.6,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 2.5,
    "ai_audience": 4.1,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses exclusively on the issue of technical debt and its impact on productivity, system stability, and delivery risk. There are zero direct references to the Product Owner, Scrum, or accountability for product value, backlog, or stakeholder alignment. The overall alignment is weak, as it does not discuss any Product Owner responsibilities or themes from the definition. Audience is somewhat generic and could include Product Owners, but technical topics dominate. Therefore, the content fits poorly with the Product Owner category.",
    "reasoning_summary": "This content centers on technical debt and its risks, without mentioning Product Owner accountabilities, backlog prioritisation, or value delivery. It targets broad engineering concerns, making its relevance to the Product Owner category very low.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 6.6,
    "ai_mentions": 0.0,
    "ai_alignment": 1.8,
    "ai_depth": 1.9,
    "ai_intent": 2.2,
    "ai_audience": 0.8,
    "ai_signal": 1.2,
    "ai_penalties_applied": true,
    "ai_penalty_points": 4.2,
    "ai_penalty_details": "All dimensions penalized (-0.7 each); content is explicitly critical, framing opposes category intent, and does not align with MVP concepts or practices.",
    "final_score": 7.0,
    "reasoning": "The content is focused entirely on the harms of technical debt, arguing that none is acceptable. It references process change and Agile practices but does not discuss MVPs, market validation, core feature identification, or iterating with minimal resources. No mention or conceptual alignment with MVP principles is present; the primary audience is engineering teams concerned with code quality, not MVP practitioners. The content's tone contradicts the MVP framing by rejecting pragmatic compromises, leading to deductions across all dimensions.",
    "reasoning_summary": "This piece focuses on technical debt and its dangers, not on building or iterating MVPs. It lacks any direct or conceptual connection to Minimum Viable Product themes, resulting in a very low fit for the MVP category.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Observability",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 23.15,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.9,
    "ai_intent": 2.4,
    "ai_audience": 7.8,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses exclusively on technical debt—its negative impacts, necessity of repayment, and cultural attitudes toward it. There is no direct mention of observability, nor discussion of its principles, tools, or role in system understanding. While there is a reference to transparency and productivity, these are framed in relation to technical debt, not observability. The audience (teams involved in systems development) overlaps, but the content does not address observability topics in detail, depth, or intent.",
    "reasoning_summary": "This content is about technical debt, not observability. It lacks direct references or in-depth discussion of observability concepts, though it targets similar technical audiences. Overall, there is little alignment or relevance to the observability category.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T14:21:09",
    "ai_confidence": 14.45,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 1.1,
    "ai_intent": 3.0,
    "ai_audience": 3.6,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content is focused on arguing that technical debt is always harmful and should never be normalized, using emotionally charged language and an industry example (Microsoft TFS). There are no explicit mentions of Decision Theory or its terminology. The conceptual alignment is weak: while risk is mentioned, it's framed in general terms, without bridging to decision-making frameworks, heuristics, probability, or behavioural economics. There’s no discussion of models, uncertainty, or structured approaches to choice under complexity. Instead, the focus remains on a normative stance against technical debt, not on the process or science of making such decisions under uncertainty. The audience is practitioners, which partially overlaps with Decision Theory’s target, but the signal-to-noise ratio is low for this category. Thus, confidence is very low.",
    "reasoning_summary": "This piece is a strong opinion on eliminating technical debt, but lacks the core concepts, frameworks, or analytical lens of Decision Theory. It doesn't delve into decision-making processes under uncertainty, so its relevance to the category is minimal.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 72.7,
    "ai_mentions": 3.8,
    "ai_alignment": 8.2,
    "ai_depth": 6.5,
    "ai_intent": 7.9,
    "ai_audience": 8.4,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content strongly aligns with Technical Excellence by emphasizing the dangers of technical debt, the impact on productivity, and the need for systemic solutions (e.g., architecture, automation). The Microsoft/TFS example highlights how changing engineering practices (sprints, transparency, debt payment) leads to improvements. However, the depth is somewhat limited, as explicit connections to specific technical excellence principles (like TDD, CI/CD, modularity) remain implicit rather than directly discussed. There's a clear audience fit (technical leaders or practitioners) and little off-topic content. No outdated references or undermining tone are present.",
    "reasoning_summary": "This content stresses why technical debt is detrimental and encourages teams to address root causes, echoing Technical Excellence values. While it lacks explicit mention of all technical practices, its intent and audience are well-matched, and the discussion is both relevant and engaging.",
    "level": "Secondary"
  },
  "Software Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Software Development",
    "calculated_at": "2025-05-16T14:21:02",
    "ai_confidence": 85.14,
    "ai_mentions": 8.9,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 9.1,
    "ai_audience": 8.5,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content is unambiguously focused on software development practices, deeply exploring the concept of technical debt. It references real-world examples (Microsoft, TFS), touches on engineering productivity, system stability, architectural fragility, and automation—all core to software engineering. The main arguments challenge the normalization of technical debt and urge teams to address it, reflecting high alignment and intent fit. There are direct but not repeated mentions of key terms, and the discussion has depth though it centers around a strong opinion on technical debt. Audience is clearly practitioners and teams in software development. No penalties apply as the content is relevant, up-to-date, and seriously intended.",
    "reasoning_summary": "This content presents a well-targeted, insightful critique on technical debt in software engineering, providing relevant examples and actionable considerations for practitioners. Its focus and depth support strong confidence in the 'Software Development' category fit.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T14:21:02",
    "ai_confidence": 35.359,
    "ai_mentions": 1.1,
    "ai_alignment": 4.7,
    "ai_depth": 3.9,
    "ai_intent": 3.9,
    "ai_audience": 7.5,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content primarily frames technical debt as a source of inefficiency and risk, urging teams to address it rather than accept it. It uses impactful language and a Microsoft case study to illustrate consequences of excessive technical debt, but the discussion stays at a motivational and conceptual level. There are no direct troubleshooting techniques, root cause analyses, or step-by-step problem-solving methodologies explored. While it targets technical audiences and relates to system stability, it remains broad and lacks practical troubleshooting depth. The intent is more about advocating for prevention and remediation of technical debt, not the concrete identification and resolution of specific technical issues, which is core to the 'Troubleshooting' category.",
    "reasoning_summary": "This content spotlights the risk and consequences of technical debt and urges action but doesn't directly discuss troubleshooting techniques or methodologies. While aimed at technical audiences and related to system health, it lacks the specific focus and depth needed for the Troubleshooting category.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T14:21:02",
    "ai_confidence": 14.05,
    "ai_mentions": 0.3,
    "ai_alignment": 1.6,
    "ai_depth": 1.9,
    "ai_intent": 2.1,
    "ai_audience": 3.7,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses entirely on technical debt, its consequences, and advocating for its reduction. There is no direct mention or discussion of experimentation, hypothesis-driven development, or systematic testing of ideas within Agile workflows. While it briefly references a process overhaul and Sprint adoption at Microsoft, these are not described as experiments nor framed around validating assumptions. The narrative is one of warning and advocacy, not exploration or iterative improvement via experimentation.",
    "reasoning_summary": "This piece is a critique of technical debt, with no meaningful connection to experimentation or hypothesis-driven Agile practices. It doesn't address how experimentation validates assumptions or supports continuous improvement, making it a poor fit for the 'Experimentation' category.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T14:21:04",
    "ai_confidence": 28.15,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.5,
    "ai_intent": 2.9,
    "ai_audience": 9.0,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content directly addresses technical debt, its risks, and productivity impacts but does not explicitly mention Evidence Based Management or its core concepts. There is no direct reference to EBM frameworks, metrics, or evidence-based empirical decision-making. The argument is rooted largely in anecdote and generalized claims, with only a passing reference to a real-world case (Microsoft), but lacking specific metric discussion. The audience aligns with engineering/management professionals, and the content stays focused on technical debt, giving it a high signal-to-noise ratio, but it falls short on conceptual alignment and depth regarding EBM.",
    "reasoning_summary": "This content strongly discusses the dangers of technical debt but does not align with Evidence Based Management principles or metrics. It lacks evidence-based frameworks or data-informed strategies, so confidence in the EBM category fit is low.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Estimation",
    "calculated_at": "2025-05-16T14:21:06",
    "ai_confidence": 7.5,
    "ai_mentions": 0.3,
    "ai_alignment": 0.8,
    "ai_depth": 0.6,
    "ai_intent": 0.9,
    "ai_audience": 1.0,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on technical debt, its harms, and the need for teams to address it. There is no explicit mention of estimation, estimation practices, or Agile/Scrum estimation techniques. While the narrative references a Sprint-based workflow and risk, it does not discuss forecasting, empirical data, or collaborative estimation, making the alignment with the 'Estimation' category extremely weak. Minimal scores across all dimensions reflect the lack of relevant content.",
    "reasoning_summary": "This content centers on technical debt and risk, not estimation. It lacks discussion of Agile estimation practices, techniques, or empirical approaches. Thus, it fits the 'Estimation' category almost not at all.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T14:21:06",
    "ai_confidence": 3.1,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.5,
    "ai_audience": 5.8,
    "ai_signal": 7.2,
    "ai_penalties_applied": true,
    "ai_penalty_points": 1,
    "ai_penalty_details": "Direct Mentions penalized (-0.9): Daily Scrum not referenced; Alignment penalized (-0.6): only general Scrum topics; Depth penalized (-0.7): no substantive discussion of Daily Scrum. (Capped total penalty at 1 point to avoid over-deduction).",
    "final_score": 3.0,
    "reasoning": "The content exclusively discusses technical debt, its negative impact, and the need to address it, but never references the Daily Scrum or its purpose. While it briefly mentions transparency and a move to 3-week Sprints, neither relates specifically to the Daily Scrum event. No exploration of Daily Scrum structure, role, or best practices is present. The audience and signal are high, but relevance to Daily Scrum is almost nil; penalties applied for lack of reference and thematic divergence.",
    "reasoning_summary": "This content focuses on technical debt and productivity risks but never addresses Daily Scrum. While mildly related to agile practices, it contains no direct or indirect discussion of Daily Scrum roles, structure, or purpose, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T14:21:07",
    "ai_confidence": 11.94,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.7,
    "ai_intent": 1.6,
    "ai_audience": 2.0,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on technical debt and its impact on productivity and risk, centering on engineering teams and system health. There are no direct mentions or discussion of portfolio management, strategic investment alignment, value streams, or related practices. The intent is to warn about technical debt consequences, not to manage project portfolios, and the audience appears to be technical teams versus portfolio-level executives. There's no coverage of portfolio metrics, prioritization, or strategy-execution alignment central to the classification.",
    "reasoning_summary": "This content is centered on technical debt management within teams. It lacks references to portfolio-level strategy, prioritization, or value stream optimization, making it a poor fit for the Portfolio Management category.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 82.1,
    "ai_mentions": 5.3,
    "ai_alignment": 8.7,
    "ai_depth": 7.8,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content is a strong critique of technical debt, arguing for proactive management to avoid productivity and stability problems. It foregrounds principles of clean code, automation, and maintaining high code quality, referencing a Microsoft case that aligns with Agile and engineering best practices. While it does not use explicit terminology like 'clean code' or 'refactoring,' its focus on automation, technical clarity, and delivering value is conceptually and practically aligned with Engineering Practices. The discussion assumes a technical audience and remains highly on topic, but only moderately covers the depth by focusing on the importance of addressing technical debt rather than specific engineering solutions.",
    "reasoning_summary": "This content passionately highlights the peril of normalizing technical debt, urging teams to address it for better productivity. It aligns well with engineering practices in both audience and intent, though it lacks explicit terminology or deep technical guidance, so the confidence remains strong but not perfect.",
    "level": "Primary"
  },
  "Lean": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Lean",
    "calculated_at": "2025-05-16T14:21:09",
    "ai_confidence": 24.22,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.3,
    "ai_intent": 2.2,
    "ai_audience": 8.6,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on technical debt, productivity, and system stability, emphasizing how ignoring technical debt leads to inefficiency. While 'inefficiency' and 'waste' are related to Lean, no explicit Lean principles, methodologies, or tools are mentioned. The TFS example refers to Sprint cycles (an Agile concept) and technical debt management, but not Lean thinking or specific Lean practices such as value stream mapping, 5S, or JIT. There is a slight conceptual overlap via the discussion of inefficiency, but it does not align with Lean’s core themes or intent. The audience (engineering teams) would fit Lean, but the message lacks the required depth, terminology, and contextual alignment. No penalties applied as the tone and content are not outdated or contradict Lean framing, but Lean is not substantively addressed.",
    "reasoning_summary": "While the content discusses inefficiency and process improvement in relation to technical debt, it does not mention Lean principles or tools. The overlap is indirect, making it only marginally relevant to Lean, so the confidence in its fit with the Lean category is very low.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 53.73,
    "ai_mentions": 1.8,
    "ai_alignment": 6.95,
    "ai_depth": 7.43,
    "ai_intent": 5.91,
    "ai_audience": 9.1,
    "ai_signal": 6.04,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "Direct references to 'organisational agility' are absent; the focus is instead on technical debt's impact on productivity and delivery. The Microsoft TFS example hints at agile practices (3-week sprints, transparency) but primarily as part of addressing technical debt, not as an exploration of agility frameworks, culture, or responsiveness. The alignment score is moderate, as the suggested overhaul and team actions overlap with improving adaptability. Depth is slightly higher due to the real case study and discussion of consequences, but lacks thorough coverage of core agility principles. The intent is more prescriptive about dealing with technical debt than truly fostering organisational agility. The signal and audience scores are high as it engages practitioners concerned with adaptive work environments. No dimensions are heavily penalised, as the tone is consistent and the examples current.",
    "reasoning_summary": "This content focuses on the consequences of technical debt and advocates for overhauls to engineering practices, touching on elements of agility but not deeply exploring organisational agility principles. It aligns partially with the category, resulting in moderate confidence.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T14:21:05",
    "ai_confidence": 7.65,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.6,
    "ai_intent": 1.0,
    "ai_audience": 2.1,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content centers exclusively on technical debt—its risks, costs, and the necessity to address it—citing the example of Microsoft's TFS overhaul. There is no direct or indirect reference to customer feedback mechanisms, how feedback is collected, integrated, or its role in iterative development. The main intent, themes, and audience are all focused on internal technical practices rather than on closing the customer feedback loop.",
    "reasoning_summary": "This article focuses on the dangers of technical debt without addressing customer feedback loops. It lacks discussion of how customer insights inform improvements, making it unrelated to the requested category.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T14:21:05",
    "ai_confidence": 45.77,
    "ai_mentions": 1.3,
    "ai_alignment": 4.4,
    "ai_depth": 4.1,
    "ai_intent": 4.7,
    "ai_audience": 6.2,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content focuses heavily on the impact of technical debt, referencing productivity, system stability, and process inefficiency. While it briefly mentions sprints and a process overhaul (Microsoft and 3-week Sprints), it does not directly discuss Agile Product Management principles, the Product Owner role, backlog prioritization, customer feedback, or alignment with organizational goals. Its main audience includes engineers and teams concerned with technical quality, not strictly product managers or Agile leaders. Direct mentions of Agile practices are minimal, and the treatment of sprints is only tangentially linked to product management. The discussion centers more on engineering and process hygiene rather than maximizing product value. No penalty deductions applied.",
    "reasoning_summary": "This piece mainly addresses the dangers of technical debt from a productivity and process lens, offering only a light, indirect connection to Agile Product Management through brief mention of sprints. Its relevance to the category is limited, so confidence remains modest.",
    "level": "Tertiary"
  },
  "Agile Planning": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T14:21:07",
    "ai_confidence": 39.25,
    "ai_mentions": 1.2,
    "ai_alignment": 4.1,
    "ai_depth": 4.4,
    "ai_intent": 4.0,
    "ai_audience": 7.3,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses almost entirely on technical debt, its dangers, and the need for addressing it. While technical debt is relevant to Agile teams, the core discussion is not about Agile Planning methodologies, principles, or practices. The brief Microsoft example references Sprints, but only tangentially links it to Agile Planning. The discussion does not explore planning ceremonies, feedback loops, or iterative planning in depth. The intended audience (teams dealing with technical debt) may overlap with Agile audiences, but most content remains centered on remediation rather than how to plan in Agile. Thus, there is limited direct mention of Agile Planning, moderate conceptual overlap, but shallow depth on Agile-specific planning issues.",
    "reasoning_summary": "This content focuses mainly on technical debt and its impact, offering only a minor connection to Agile Planning via a reference to sprints. Without substantive discussion of Agile Planning methods or principles, its fit with the category is limited.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T14:21:07",
    "ai_confidence": 27.87,
    "ai_mentions": 0.4,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 2.1,
    "ai_audience": 5.6,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on the negative impact of technical debt, using a Microsoft case study as an example of organizational response. However, it does not explicitly discuss or advocate for evidence-based leadership, data-driven decision-making, or empirical techniques. The alignment to the category is superficial—the closest fit is in referencing organizational change linked to observable outcomes, but there is no structured approach or metrics discussed. The intent and depth are too centered on opinion and caution rather than leadership frameworks or evidence-based strategies. The audience is somewhat aligned to those in leadership, but the content has a high signal-to-noise ratio for technical debt rather than category topics.",
    "reasoning_summary": "While the content uses a real-world example to highlight risks of technical debt, it lacks explicit discussion of evidence-based leadership practices, data-driven decision making, or relevant frameworks, making its fit with the category limited and overall confidence low.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 29.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 3.3,
    "ai_audience": 8.3,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content is focused on technical debt, emphasizing its risks and dangers. While it references concepts such as transparency, continuous improvement, and team productivity, it does not explicitly mention Agile values or principles. 'Sprints' are mentioned (a Scrum term), but the discussion centers on debt, not Agile philosophy. No direct mentions of the Agile Manifesto, its values, or principles are made. The audience is likely Agile practitioners, but the thematic alignment and depth are limited. No penalty was warranted as there is no contradiction or outdated practice.",
    "reasoning_summary": "This content focuses on the dangers of technical debt without directly addressing Agile values or principles. While there are peripheral ties, such as improving process and mentioning Sprints, it lacks direct alignment, making it only marginally relevant to the specified category.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Change Management",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 41.93,
    "ai_mentions": 1.2,
    "ai_alignment": 4.9,
    "ai_depth": 3.6,
    "ai_intent": 4.0,
    "ai_audience": 7.2,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "This content focuses on the nature and risks of technical debt, using strong opinions and examples (like Microsoft’s shift to Sprints) to argue it should not be normalized. There's a brief suggestion of organizational transformation (e.g., adopting Sprints, enhancing transparency), but the piece narrowly centers on productive engineering and risk, not strategies for managing or sustaining organization-level change. While there's indirect relevance to change management (in that technical debt reduction often requires it), there's no explicit mention of change management concepts, stakeholder engagement, measuring impact, leadership roles, or best practices for transitioning organizations. The content aims more to provoke engineering team introspection than to guide on the process or strategy of managing organizational change.",
    "reasoning_summary": "While this piece discusses technical debt and hints at organizational change, it lacks explicit focus on the principles and practices of Change Management. Its main thrust is about technical productivity and risk, not structured organizational transformation.",
    "level": "Tertiary"
  },
  "Kanban": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Kanban",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 10.4,
    "ai_mentions": 0.3,
    "ai_alignment": 1.0,
    "ai_depth": 1.2,
    "ai_intent": 1.1,
    "ai_audience": 4.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content exclusively discusses technical debt—not Kanban principles, practices, or terminology. There are no direct mentions of Kanban, nor indirect references to Kanban's visualisation, WIP limits, or flow management. While work process inefficiency is noted, the focus is on technical debt and risk, not Kanban methodology. Only broad overlap exists in targeting engineering/process audiences.",
    "reasoning_summary": "This resource is about technical debt, not Kanban. There’s no mention of Kanban practices, principles, or related methodology. The content is focused elsewhere, so fit with the Kanban category is extremely low.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Market Share",
    "calculated_at": "2025-05-16T14:21:12",
    "ai_confidence": 4.9,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.5,
    "ai_intent": 0.7,
    "ai_audience": 1.1,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content focuses exclusively on technical debt, its negative effects, and the necessity of addressing it promptly. While it briefly references a Microsoft case study (TFS overhaul), the perspective centers on productivity, code quality, and engineering practices. There's no explicit discussion or analysis of increasing market share, competitive positioning, market strategies, or related methodologies. No market share metrics, customer engagement, marketing, or expansion techniques are mentioned. The intended audience seems to be engineering managers or developers rather than strategists aiming to grow market presence. Overall, the content does not fit the Market Share category, leading to very low scores across all dimensions.",
    "reasoning_summary": "This content tackles technical debt in software teams without connecting it to market share strategies or outcomes. It’s highly focused on productivity and engineering risks, not on growing or defending market presence. Therefore, it’s not a fit for the Market Share category.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T14:21:13",
    "ai_confidence": 2.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.7,
    "ai_depth": 2.2,
    "ai_intent": 2.3,
    "ai_audience": 4.1,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content is entirely about technical debt: its nature, impact, and the need to address it proactively. ATDD is not mentioned or discussed, nor are acceptance criteria, collaborative processes, or acceptance test writing. The Microsoft TFS example discusses process change, but not in relation to ATDD. While the target audience (development teams) partially overlaps, no portion of the content aligns directly with the definition or core practices of Acceptance Test Driven Development. No penalties apply, as the tone is not satirical or outdated, but the content is irrelevant to ATDD beyond a vague association with good software practice.",
    "reasoning_summary": "This content focuses on technical debt, not ATDD. There are no mentions of acceptance tests, criteria, or ATDD principles, making the fit very weak. While relevant to developers, it does not address the category's specific themes.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 7.53,
    "ai_mentions": 0.2,
    "ai_alignment": 0.3,
    "ai_depth": 0.25,
    "ai_intent": 0.4,
    "ai_audience": 5.0,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content is centered entirely on technical debt—its risks, impacts, and the necessity to address it—rather than Open Space Agile or its foundational principles. There are no mentions of Open Space Technology, collective participation, psychological safety, co-creation, or iterative dialogue. The one case study involves Microsoft adopting Sprints and transparency, but this aligns more with standard Agile practices than Open Space Agile. The target audience is technical/engineering teams, which is partially relevant, but the discussion lacks the depth and specificity required by the category definition.",
    "reasoning_summary": "This content focuses on technical debt and Agile basics. It doesn’t discuss Open Space Agile practices, principles, or philosophy, and lacks conceptual or direct alignment with the category.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 10.88,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.2,
    "ai_intent": 2.1,
    "ai_audience": 3.0,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "This content addresses the nature and impact of technical debt, emphasizing the dangers of ignoring it and advocating active management. However, there are no direct or indirect references to Beta Codex principles, and the discussion remains at the level of software engineering best practices, not decentralised, adaptive, or human-centric organisational design. Audience is broad, and relevance to Beta Codex is incidental at best.",
    "reasoning_summary": "The content focuses on managing technical debt but doesn’t touch on Beta Codex principles, decentralisation, or adaptive organizational design. There’s no alignment with the Beta Codex category, so confidence is very low.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 16.57,
    "ai_mentions": 0.4,
    "ai_alignment": 2.6,
    "ai_depth": 2.7,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on technical debt, its negative impacts, and the importance of addressing it proactively. There is no substantive discussion of any deployment strategy (such as blue-green, canary releases, CI/CD, etc.), nor are methodologies for deploying software covered. The only tangential reference is to manual processes versus automation, which relates loosely to software quality but not deployment practices. The TFS example describes an overhaul to improve productivity but does not detail deployment approaches. No direct mentions, conceptual alignment, or audience targeting fit the 'Deployment Strategies' category. Therefore, confidence is appropriately low.",
    "reasoning_summary": "This piece is centered on technical debt and its consequences, not on deployment strategies or methods. There are no direct or indirect discussions of deployment practices, making the content a very poor match for this category.",
    "level": "Ignored"
  },
  "DevOps": {
    "resourceId": "lLNjkL_zGQa",
    "category": "DevOps",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 51.85,
    "ai_mentions": 1.3,
    "ai_alignment": 6.5,
    "ai_depth": 5.9,
    "ai_intent": 6.3,
    "ai_audience": 7.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "The content focuses on technical debt, system inefficiency, automation, and a team’s transformation (with the Microsoft/TFS example). Although these themes relate tangentially to DevOps principles (such as process automation and continuous improvement), it never directly discusses DevOps, its philosophy, or core practices. It touches on automation, transparency, and delivery flow, which align with DevOps, but stops short of an in-depth, explicit DevOps discussion. The main thrust is about addressing technical debt to achieve productivity, not about DevOps as a holistic philosophy or set of practices.",
    "reasoning_summary": "While the content highlights issues like technical debt, automation, and team practices, it doesn't explicitly discuss DevOps principles. Its relevance is tangential, focusing more on productivity than on DevOps philosophy or culture, resulting in moderate confidence for this category.",
    "level": "Tertiary"
  },
  "Team Motivation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T14:21:08",
    "ai_confidence": 17.14,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.5,
    "ai_intent": 2.7,
    "ai_audience": 6.7,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses entirely on technical debt—its dangers, impact on productivity, and need for remediation—but does not discuss team motivation, psychological safety, or strategies for team engagement. While some team-level references exist (e.g., productivity, workflow), these are framed as consequences of technical debt, not as motivational drivers or team dynamics discussions. No explicit or implicit coverage of team motivation concepts or techniques, and most references are technical/process focused, not motivational.",
    "reasoning_summary": "This content centers on technical debt and its effects on efficiency, not on team motivation. While it mentions teams and productivity, its focus isn't on fostering team engagement or motivation, making it a poor fit for the Team Motivation category.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 13.97,
    "ai_mentions": 0.8,
    "ai_alignment": 1.6,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 3.7,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses exclusively on technical debt and its impact on productivity, risk, and engineering practices. There is a brief reference to Sprints as a working cadence, but the piece never discusses Scrum Team accountability, structure, or roles—nor does it mention the Scrum Team at all. Concepts such as self-management, cross-functionality, or boundaries of accountability are absent. The audience is broadly aimed at engineering teams in general, not specifically the Scrum Team defined in the Scrum Guide. Therefore, the content does not align with the category except for a passing mention of Sprints, which itself is weak as direct evidence.",
    "reasoning_summary": "This content is about technical debt and its risks for teams in general—not about Scrum Teams as defined by the Scrum Guide. Beyond a mention of Sprints, the material does not focus on Scrum Team accountability, purpose, or structure, so confidence in this tag is very low.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 37.85,
    "ai_mentions": 0.2,
    "ai_alignment": 4.3,
    "ai_depth": 3.8,
    "ai_intent": 4.7,
    "ai_audience": 9.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on technical debt and its negative impacts on productivity and system stability, referencing its non-linear accumulation. While it hints at systemic consequences and interdependencies (e.g., debt collapsing delivery), it lacks explicit mention of Systems Thinking principles, tools, or terminology. Techniques like system mapping or feedback loops are absent. The primary audience—engineering leaders and teams—is aligned, and the content is focused and relevant, but it does not deeply engage with Systems Thinking as defined.",
    "reasoning_summary": "While the discussion highlights technical debt’s complex effects on software teams, it doesn’t explicitly reference Systems Thinking or its core principles. The content’s focus is more on linear risks and remediation, not holistic system dynamics, resulting in a low-to-moderate category fit.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 21.45,
    "ai_mentions": 0.5,
    "ai_alignment": 2.3,
    "ai_depth": 2.8,
    "ai_intent": 2.7,
    "ai_audience": 5.1,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses almost entirely on the negative impact of technical debt, arguing for its elimination and citing process overhaul as a case study. While it briefly references team working methods (e.g., moving to 3-week Sprints, embracing transparency), it does not explicitly discuss working agreements—their definition, examples, or how to formalize norms within a team. There's minor thematic overlap (e.g., adopting new working styles), but it never directly addresses or structures its argument around working agreements as collaborative team norms. There are no explicit mentions, and the focus remains problem-centered, not solution or agreement-centered.",
    "reasoning_summary": "This content is about technical debt and its dangers, with minor nods to teamwork and process changes, but it does not discuss working agreements explicitly or conceptually. It falls outside the intended category.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 54.85,
    "ai_mentions": 2.3,
    "ai_alignment": 6.5,
    "ai_depth": 6.7,
    "ai_intent": 5.9,
    "ai_audience": 8.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content focuses on technical debt and its impact on productivity and risk. It references a real-world example (Microsoft and TFS), discusses mitigating actions (overhauling processes, Agile sprints), and advocates for addressing technical debt. While technical debt is a significant ALM concern, the piece does not explicitly discuss the end-to-end stages or broader practices of Application Lifecycle Management. There are brief tangential references to process improvement, but the main discourse misses the broader ALM methodology, governance, or tools. The audience appears to be engineers and managers who make decisions affecting application health—aligned with ALM's target—but the specificity of the topic (technical debt only) limits surface coverage and depth. Signal is high, but direct category mention and intent are moderate.",
    "reasoning_summary": "This content strongly addresses technical debt—a vital aspect of ALM—but doesn't cover ALM's full lifecycle scope. Its main value is illustrating why managing technical debt matters, making it partially relevant to ALM, but lacking explicit alignment with ALM's broader themes and practices.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 2.9,
    "ai_mentions": 0.0,
    "ai_alignment": 1.0,
    "ai_depth": 2.0,
    "ai_intent": 4.0,
    "ai_audience": 5.2,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content focuses entirely on technical debt, its implications, and the necessity for teams to address it. While it mentions practices such as sprints and transparency, there is no direct or substantive discussion of the Sprint Review event, its process, or outcomes. Key Sprint Review topics (increment inspection, stakeholder feedback, backlog adaptation) are absent. The target audience (engineering teams) may overlap with Sprint Review participants, but the content does not serve to inform or support Sprint Review practice. Thus, confidence is very low.",
    "reasoning_summary": "This piece addresses the dangers of technical debt without discussing Sprint Review or its core purposes. It shares an agile transformation story but lacks specific ties to the Sprint Review event, process, or best practices, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 23.75,
    "ai_mentions": 0.6,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 3.6,
    "ai_audience": 6.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses overwhelmingly on the negative impacts of technical debt and advocates its resolution. While there is a passing reference to process change (3-week sprints, transparency), the main thrust is technical and productivity risks, not on Agile leadership or leadership roles explicitly. Leadership aspects like empowerment, servant leadership, or cultural facilitation are absent. The audience may include leaders, but the discussion remains technical. Thus, confidence in the 'Agile Leadership' fit is low.",
    "reasoning_summary": "This content centers on the hazards and remedies for technical debt, not Agile Leadership. Leadership themes are not discussed in depth; technical process change is highlighted instead. The fit for the 'Agile Leadership' category is weak.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T14:21:14",
    "ai_confidence": 10.7,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.5,
    "ai_intent": 2.1,
    "ai_audience": 3.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses almost entirely on technical debt, productivity, and system stability, with only a fleeting statement referencing manual tasks 'that should be automated.' There is no meaningful discussion of test automation principles, frameworks, tools, or any of the other key topics defined for the category. Test automation is not directly mentioned; automation as a concept is noted only in passing with no elaboration on testing. The audience is technical but not specifically aligned to test automation practitioners. The intent is to discuss technical debt rather than advancing knowledge or best practices in test automation.",
    "reasoning_summary": "This content discusses technical debt and its impact, barely mentioning automation—and not test automation specifically—without detail or focus. It does not meaningfully fit the 'Test Automation' category.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T14:21:14",
    "ai_confidence": 12.25,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses entirely on technical debt—its problems, consequences, and organizational anecdotes. There are no direct mentions of deployment frequency, nor are strategies, metrics, or relationships to release intervals discussed. While it touches on software process improvement (e.g., sprints), these are presented in the context of clearing technical debt, not optimizing deployment intervals. The intended audience (technical practitioners) overlaps somewhat, but the content is only tangentially relevant to the deployment frequency category and does not explore or align with its core themes.",
    "reasoning_summary": "This content discusses technical debt and its negative effects, not deployment frequency. It doesn’t address release intervals, CI/CD, or related metrics, so its relevance to the deployment frequency category is very low.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T14:21:14",
    "ai_confidence": 36.16,
    "ai_mentions": 0.6,
    "ai_alignment": 3.9,
    "ai_depth": 4.3,
    "ai_intent": 4.7,
    "ai_audience": 4.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses strongly on technical debt, productivity, and architectural fragility. While technical debt impacts system reliability, the post never references SRE principles, practices, or terminology such as monitoring, incident response, SLOs, or the integration of development and operations for reliability. The audience is broadly technical and the intent is relevant to reliability, but the discussion stays within general software engineering. No penalties apply as the content is current and constructive.",
    "reasoning_summary": "This post discusses technical debt and its risks but doesn't directly address Site Reliability Engineering principles, terminology, or core practices. Its relevance is limited to general engineering reliability, not SRE specifics, so confidence is low.",
    "level": "Ignored"
  },
  "Forecasting": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T14:21:13",
    "ai_confidence": 18.55,
    "ai_mentions": 0.6,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 2.0,
    "ai_audience": 5.3,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content is focused solely on technical debt, its downsides, and the necessity to address it, with examples (like Microsoft’s transition to Agile practices). There is no explicit or implicit discussion of forecasting methods, the use of empirical data to predict timelines, or Agile/Scrum forecasting strategies. Delivery risk and productivity decline are mentioned as negative outcomes but not as forecasted metrics or themes. The content is relevant to Agile practitioners, but the intent is to warn against technical debt, not to discuss forecasting methodologies. Very little alignments exist regarding predictive analysis or optimization based on historical data, resulting in a low confidence score.",
    "reasoning_summary": "This piece critiques technical debt in Agile teams but doesn’t address forecasting practices or methodologies. It lacks direct and substantial links to forecasting topics, so it fits poorly in this category.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T14:21:14",
    "ai_confidence": 21.67,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 7.4,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on technical debt and its impact on productivity, using the Microsoft TFS team's experience as an example. While Agile concepts (sprints, transparency) are briefly mentioned, there are no direct references to Azure Boards, its features, best practices, or core functionalities. The discussion is broad, relevant for technical teams, and lacks any specific guidance on using Azure Boards. Only a tangential connection to Agile practice through Sprints is made; nothing is directly about Azure Boards in planning, tracking, or workflow. Thus, alignment and depth remain low, and the confidence score appropriately reflects the lack of relevance.",
    "reasoning_summary": "This content critiques technical debt and cites Agile practices for improvement, but never references Azure Boards or its capabilities. While relevant to technical teams and Agile, it does not fit the category's strict focus, so confidence in classifying it as 'Azure Boards' is low.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T14:21:16",
    "ai_confidence": 33.31,
    "ai_mentions": 0.6,
    "ai_alignment": 3.7,
    "ai_depth": 2.9,
    "ai_intent": 4.1,
    "ai_audience": 6.3,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content primarily discusses technical debt as a concept and urges teams to address it, using the Microsoft TFS example. While it briefly mentions practices like sprints and transparency that are adjacent to Agile, it never explicitly addresses Agile Philosophy, the Agile Manifesto, principles, or the broader mindset. There are no direct mentions of Agile or deep exploration of its philosophy. The overall alignment is limited to values like transparency and improvement, but is focused on technical outcomes, not on value delivery, adaptability, or customer collaboration. The content’s intent is more about technical quality and risk, only touching tangentially on themes related to Agile. The target audience—engineering teams—may overlap with Agile practitioners, but without framing in Agile terms. Minimal surface alignment without depth or direct engagement.",
    "reasoning_summary": "This content centers on technical debt and system quality, with only indirect overlaps to Agile values. It lacks explicit reference and depth about Agile Philosophy, so the confidence for this category is low despite discussing transparency and improvement.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T14:21:17",
    "ai_confidence": 4.3,
    "ai_mentions": 0.1,
    "ai_alignment": 0.3,
    "ai_depth": 0.4,
    "ai_intent": 0.2,
    "ai_audience": 2.1,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses entirely on technical debt in general, not specifically on Azure Repos or any source control system. Although it mentions Microsoft and TFS (Team Foundation Server) in a historical context, there is no direct or indirect discussion of Azure Repos functionalities, best practices, or integration. The conceptual alignment, intent, and signal are very low, since the article’s primary topic is managing technical debt and process improvement, not the category’s focus of Azure Repos’ source control functionalities or DevOps integration.",
    "reasoning_summary": "This content is about technical debt and organizational productivity, not Azure Repos. It neither explores Azure Repos features nor addresses its audience, thus scoring extremely low for this category.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T14:21:14",
    "ai_confidence": 23.86,
    "ai_mentions": 0.3,
    "ai_alignment": 2.4,
    "ai_depth": 2.7,
    "ai_intent": 3.45,
    "ai_audience": 7.25,
    "ai_signal": 6.37,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content critiques technical debt, emphasizing its dangers and urging action to resolve it. While technical debt reduction can improve flow and efficiency—goals of Value Stream Management (VSM)—the article never mentions VSM directly or explores its concepts with depth. Instead, it focuses on the impacts of technical debt on productivity and stability. The Microsoft example details team output but doesn't frame it in VSM terms. Some alignment is present, as risk mitigation and process efficiency tie conceptually to value flow, but there is minimal depth on mapping, metrics, process alignment, or continuous improvement from a VSM lens. The intended audience (engineers, technical leads) does overlap with VSM practitioner roles, and the article is mostly focused and relevant, but it is not explicitly or primarily about Value Stream Management.",
    "reasoning_summary": "This piece targets risks of technical debt, which can affect value flow, but it neither mentions nor meaningfully explores Value Stream Management. While some themes overlap, the focus is on engineering efficiency, not VSM's broader principles or techniques.",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Release Management",
    "calculated_at": "2025-05-16T14:21:09",
    "ai_confidence": 18.35,
    "ai_mentions": 1.0,
    "ai_alignment": 2.9,
    "ai_depth": 3.2,
    "ai_intent": 3.1,
    "ai_audience": 4.2,
    "ai_signal": 3.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content is a strong critique of technical debt, emphasizing its harm to productivity and system stability. While it touches on system delivery and a real-world example (Microsoft's overhaul), there are almost no direct references to release planning, deployment, or other core release management concepts. The main focus is code quality and team dynamics. Thus, conceptual alignment and direct mention are both low. There are no outdated practices or contradictory tones to justify penalties.",
    "reasoning_summary": "This piece focuses on the dangers of technical debt, not release management itself. There’s some overlap around software delivery, but the main emphasis is quality practices, not planning or managing releases. So, it only weakly fits the release management category.",
    "level": "Ignored"
  },
  "Business Agility": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T14:21:09",
    "ai_confidence": 41.15,
    "ai_mentions": 2.3,
    "ai_alignment": 4.9,
    "ai_depth": 4.4,
    "ai_intent": 4.7,
    "ai_audience": 5.0,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses primarily on the harms of technical debt and strategies for addressing it. While the example (Microsoft TFS overhaul, Sprints, transparency) hints at agile methodologies tied to business agility, the material does not explicitly discuss business agility principles, practices, or outcomes. Its main theme—managing technical debt to improve productivity—relates tangentially but doesn't deeply align with, or explore, business agility as defined. There are brief mentions relevant to agile practices, but not enough substantive depth or direct connection to warrant a high confidence score.",
    "reasoning_summary": "While the content touches agile practices like Sprints and technical debt, its focus is on code quality and productivity—not business agility as a whole. It falls short of explicitly discussing or exploring business agility principles, offering only indirect alignment, so confidence in this fit is modest.",
    "level": "Tertiary"
  },
  "Product Delivery": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T14:21:09",
    "ai_confidence": 67.85,
    "ai_mentions": 2.8,
    "ai_alignment": 8.9,
    "ai_depth": 7.1,
    "ai_intent": 7.8,
    "ai_audience": 9.1,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content is centered on technical debt and its negative impact on productivity, system stability, and delivery capability, referencing a real example with Microsoft TFS. While concepts of delivery velocity, inefficiency, and the impact on release cycles are explored (e.g., fewer features shipped, collapse of delivery ability), the explicit mention of 'Product Delivery' and related methodologies is minimal. The alignment and depth are strong owing to the detailed discussion of how technical debt impedes rapid, stable product delivery, and the nod to Agile practices (3-week Sprints), but the article stops short of discussing delivery-specific best practices, planning, or metrics in depth. Audience is well aligned (engineers, delivery-focused teams). Overall, the content is highly relevant but less direct in surfacing classic delivery frameworks or KPIs, justifying a solid confidence but below top-tier.",
    "reasoning_summary": "This content focuses on technical debt’s impact on productivity and delivery, referencing Agile practices and real-world delivery failures. It aligns well with a product delivery audience and concept, though it doesn’t deeply explore delivery processes, earning a strong but not top-tier confidence score.",
    "level": "Secondary"
  },
  "Cycle Time": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 19.43,
    "ai_mentions": 0.3,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 1.0,
    "ai_audience": 6.7,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses exclusively on technical debt, its harms, and the necessity of addressing it. While inefficiency and delivery speed are mentioned (e.g., the TFS example of feature throughput, onboarding delays), Cycle Time as a metric or concept is never directly named. There are no in-depth descriptions of Cycle Time, methods for measurement, or strategies specifically related to Cycle Time reduction. The audience is Agile/DevOps practitioners, which partially overlaps with the Cycle Time topic, and there is some mention of delivery, but all within the technical debt framing. Minimal tangential reference to workflow efficiency relates indirectly to Cycle Time, but not substantively.",
    "reasoning_summary": "This content is mainly about technical debt and its negative impacts, rarely touching on Cycle Time or its measurement in any direct sense. While there's a shared audience and indirect overlap in workflow efficiency discussions, the piece lacks focus on Cycle Time, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T14:21:12",
    "ai_confidence": 58.89,
    "ai_mentions": 2.3,
    "ai_alignment": 6.4,
    "ai_depth": 6.8,
    "ai_intent": 7.1,
    "ai_audience": 7.7,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "There is no explicit mention of 'Pragmatic Thinking' or its synonyms, so direct mentions are low. The content does align with pragmatic problem-solving—discusses technical debt in the context of real-world consequences and cites the Microsoft TFS case, linking strategy to outcome. It suggests a practical approach (agile sprints, transparency), fits a practitioner audience, and focuses on actionable lessons, but doesn't explore a wide range of pragmatic techniques or deeply deconstruct complex scenarios beyond the case provided. Not theoretical or abstract, but narrowly focused on technical debt, which impacts the depth and SNR. No penalties are applied.",
    "reasoning_summary": "The content offers a real-world example of addressing technical debt in software teams and highlights practical takeaways, mostly aligned with pragmatic thinking. Its focus is pragmatic but narrow, providing decent but not comprehensive alignment with the category.",
    "level": "Tertiary"
  },
  "Unrealised Value": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T14:21:12",
    "ai_confidence": 17.41,
    "ai_mentions": 0.2,
    "ai_alignment": 2.0,
    "ai_depth": 2.8,
    "ai_intent": 3.5,
    "ai_audience": 5.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content centers on technical debt and its negative impacts—productivity loss, architectural fragility, and inefficiency—without discussing unrealised value as defined within Evidence-Based Management. There is heavy focus on realised risks and dysfunctions rather than indicators, measurement, or strategies to capture untapped value. While audience and signal are moderately aligned, the main intent is technical remediation, not strategic value discovery.",
    "reasoning_summary": "This piece focuses on the harms of technical debt and productivity loss, not on unrealised value, untapped opportunities, or EBM. While it addresses improvement, it lacks alignment with the core category concepts, hence a low confidence score.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T14:21:14",
    "ai_confidence": 38.74,
    "ai_mentions": 0.5,
    "ai_alignment": 4.6,
    "ai_depth": 4.8,
    "ai_intent": 6.0,
    "ai_audience": 6.4,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content centrally discusses technical debt—its negative impacts on productivity and system stability—and advocates resolving it to prevent inefficiency. Eliminating inefficiency and improving process stability are Lean principles, but Lean Product Development is not mentioned directly, nor are Lean-specific tools, practices, or frameworks. The Microsoft TFS example touches on workflow changes but omits explicit Lean framing. Audience fit skews to product engineering teams, partially aligning with Lean PD practitioners. Overall, the thematic connection is moderate but indirect.",
    "reasoning_summary": "This content focuses on technical debt and its negative impact on productivity, advocating for action. While some discussion aligns with Lean principles like waste reduction, it doesn't directly address Lean Product Development methods or terminology, resulting in only moderate category fit.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T14:21:15",
    "ai_confidence": 7.8,
    "ai_mentions": 0.1,
    "ai_alignment": 1.6,
    "ai_depth": 1.3,
    "ai_intent": 1.4,
    "ai_audience": 1.5,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses entirely on technical debt, arguing there is no such thing as 'good' technical debt and detailing its risks and impacts. There are no direct or indirect mentions of Behaviour Driven Development, its principles, tools, or practice. Themes of system stability, team productivity, and process automation align with general software quality but stay outside the BDD scope. The TFS example discusses productivity and process change but does not tie to BDD concepts like user stories, stakeholder collaboration, or testable requirements. Target audience is general software teams concerned with debt, not specifically those interested in BDD. No penalties are warranted as the content is contemporary and maintains a professional tone.",
    "reasoning_summary": "This content addresses technical debt exclusively, without referencing Behaviour Driven Development. Its focus, depth, and audience do not match the BDD category, resulting in a very low confidence score for this classification.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T14:21:15",
    "ai_confidence": 10.95,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.4,
    "ai_intent": 1.1,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses on technical debt and its impact on productivity and risk. There are no direct or indirect mentions of Definition of Ready, nor any discussion of backlog item criteria, readiness, or sprint planning preparation. While the audience is Agile or engineering teams, the discussion is wholly unrelated to DoR concepts. Minimal relevance leads to a very low confidence score.",
    "reasoning_summary": "This piece is entirely about technical debt, with no focus on backlog readiness or Definition of Ready. It doesn't discuss criteria or preparation for sprint planning, so its fit to the category is extremely weak.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T14:21:17",
    "ai_confidence": 63.15,
    "ai_mentions": 1.4,
    "ai_alignment": 7.9,
    "ai_depth": 6.6,
    "ai_intent": 7.4,
    "ai_audience": 9.2,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content addresses the importance of technical excellence and accountability, both central to Professional Scrum, by discussing the dangers of technical debt and the need for transparency and continuous improvement. The Microsoft example aligns with empiricism and iterative delivery. However, Professional Scrum is not named directly and Scrum principles are only referenced implicitly, not thoroughly explored. The primary focus is technical debt and system health, intersecting with but not comprehensively covering Professional Scrum. There's significant value for practitioners, but the discussion could deepen the explicit link to Scrum roles, values, or empiricism.",
    "reasoning_summary": "This content powerfully champions technical excellence and the dangers of tolerating technical debt, themes that fit Professional Scrum's ethos. However, its link to Scrum is largely indirect and implicit, lacking explicit discussion of Scrum artifacts, roles, or values, so confidence is moderate.",
    "level": "Secondary"
  },
  "Accountability": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Accountability",
    "calculated_at": "2025-05-16T14:21:17",
    "ai_confidence": 38.9,
    "ai_mentions": 0.6,
    "ai_alignment": 3.7,
    "ai_depth": 3.3,
    "ai_intent": 5.2,
    "ai_audience": 8.2,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content is a critique of normalizing technical debt and emphasizes risks and productivity, but explicit discussion of accountability is absent. Only implicit ties—such as references to transparency and team action—loosely suggest structural responsibility. The main focus is handling technical debt, not accountability as a work-system mechanism. While relevant to practitioners, accountability is tangential, and other category fit criteria are not met deeply.",
    "reasoning_summary": "This post mainly addresses technical debt’s harms and team productivity, only marginally touching on themes like transparency. Explicit structural accountability isn’t discussed, so the fit for the Accountability category is weak.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 25.4,
    "ai_mentions": 0.2,
    "ai_alignment": 2.4,
    "ai_depth": 2.8,
    "ai_intent": 2.6,
    "ai_audience": 8.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on technical debt and argues it is always negative, referencing an organizational example (Microsoft) but lacks any direct or indirect mention of Agnostic Agile, its principles, comparisons, or philosophy. There is no discussion on context-driven agility, pragmatic adaptation, or ethical considerations in agile practices. The primary audience (software practitioners) does overlap, which is the only moderately high score. Signal-to-noise is middling as discussion is focused on technical debt but not on the category. Given these factors, confidence is low.",
    "reasoning_summary": "This piece focuses solely on technical debt without referencing Agnostic Agile principles, philosophy, or context-driven practices. It targets relevant practitioners but doesn't align conceptually or in depth with the category, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 17.467,
    "ai_mentions": 0.6,
    "ai_alignment": 2.7,
    "ai_depth": 2.3,
    "ai_intent": 2.2,
    "ai_audience": 4.1,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on technical debt with strong emphasis on its negative impact on productivity, engineering stability, and risk. While this topic is relevant to software delivery, there are no direct mentions of Lead Time or its definition, nor any explicit discussion of cycle time, observability metrics, or related optimization strategies. The alignment is minimal as Lead Time is only very indirectly implied through phrases like 'collapse your ability to deliver' or 'inefficiency,' but it is not measured, defined, or discussed as a metric. The audience is similar (engineering leaders/teams), but the signal-to-noise ratio is low for the Lead Time category since almost all content is technical debt–centric.",
    "reasoning_summary": "This piece spotlights technical debt’s dangers but barely relates to Lead Time. There’s no mention of lead time itself, and only a loose connection via delivery and productivity impacts. Content is informative but doesn’t address Lead Time concepts, measurement, or improvement.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Model",
    "calculated_at": "2025-05-16T14:21:11",
    "ai_confidence": 21.15,
    "ai_mentions": 0.8,
    "ai_alignment": 2.3,
    "ai_depth": 2.8,
    "ai_intent": 1.2,
    "ai_audience": 7.5,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on technical debt, productivity impacts, and a real-world case (Microsoft TFS), but does not explicitly discuss conceptual models or frameworks, nor does it align with the defined focus of the 'Model' category (e.g., Cynefin, Three Ways, Kanban models, or visual frameworks). Instead, it offers a strong opinion about technical debt without referencing or analysing models that guide organisational decision-making. Thus, it scores low on direct mentions, conceptual alignment, depth, and intent fit, but is highly targeted (signal) and audience-appropriate.",
    "reasoning_summary": "While well-targeted and relevant for technical audiences, the content doesn’t discuss conceptual models or frameworks. It centers on technical debt philosophy rather than applying or analysing organisational models, resulting in low confidence for the 'Model' category.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T14:21:13",
    "ai_confidence": 36.11,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 4.1,
    "ai_audience": 6.2,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content primarily focuses on the perils of technical debt and urges proactive remediation within engineering teams. While there is a brief case about Microsoft shifting to Sprints to address technical debt—which hints at process change—the discussion is mostly framed around technical practices and team productivity, not the broader strategies or frameworks characteristic of organisational change. There is no deep dive into change management methodologies, leadership roles, or holistic transformation practices. Audience targeting leans toward practitioners (engineers, team leads) rather than organisational strategists. The signal is moderately high, but off-topic content is present, and the category is not directly mentioned or substantially explored; thus, confidence is modest.",
    "reasoning_summary": "This content centers on the impact of technical debt within engineering, with only a passing reference to process change. It lacks significant discussion of broader organisational change principles, frameworks, or leadership context, resulting in a low alignment with the 'Organisational Change' category.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T14:21:13",
    "ai_confidence": 4.5,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.6,
    "ai_audience": 1.5,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses exclusively on technical debt, system stability, and team productivity. While it references Agile practices like sprints and team process improvement, there is no explicit or substantive discussion of remote working. The main ideas, solutions, and examples are aligned to Agile software development and productivity, not remote collaboration. The only tenuous connection relates to general team productivity and process—which is not unique to remote work. All discussion and examples (e.g., the Microsoft TFS anecdote) relate to internal process change, not distributed or remote teams. The audience (tech leads, engineers, managers) moderately align, since they may overlap with remote teams, but no remote context is addressed. Almost all of the content is off-topic for the category, resulting in very low scores for each dimension.",
    "reasoning_summary": "This content analyzes technical debt and its impact on productivity, focusing on in-team process and Agile improvements, without discussing remote working. Its relevance to remote work is incidental at best, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Capability",
    "calculated_at": "2025-05-16T14:21:15",
    "ai_confidence": 27.8,
    "ai_mentions": 0.6,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 3.6,
    "ai_audience": 7.3,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on the dangers of technical debt, urging its reduction for productivity and system stability. However, it doesn't explicitly mention or deeply explore organizational capabilities, nor does it discuss systemic enablers or enduring competencies. While improvement is implied, the main thrust is problem awareness, not capability development, measurement, or integration. The audience (teams/tech leaders) is somewhat aligned, and relevance remains moderate, but the content lacks depth and conceptual framing to fit the strict definition of 'Capability.'",
    "reasoning_summary": "This content stresses the harms of technical debt and calls for its reduction. While the topic is adjacent to capability (as debt reduction can support competency), it doesn’t directly address or develop organizational capabilities, resulting in a low confidence score for this category.",
    "level": "Ignored"
  },
  "Time to Market": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T14:21:15",
    "ai_confidence": 36.672,
    "ai_mentions": 1.7,
    "ai_alignment": 3.6,
    "ai_depth": 3.8,
    "ai_intent": 3.5,
    "ai_audience": 4.2,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content primarily discusses technical debt, its negative consequences on productivity and system stability, and urges teams to address it without normalising dysfunction. While it references delivery slowdowns (e.g., Microsoft shipping only 24 features per year), the focus is on technical debt itself rather than Time to Market as a conceptual metric or practice. There are indirect links between technical debt and speed of delivery, but no explicit discussion of Time to Market, strategies to improve it, or its metrics. Audience alignment is moderate, as readers concerned with technical debt might overlap with those interested in Time to Market, but the content is not tailored to that specific category. There is moderate alignment/depth, but mostly tangential to the core category.",
    "reasoning_summary": "This content strongly addresses technical debt and its impact on productivity, but it only indirectly relates to Time to Market. There are brief references to delivery issues, yet it lacks focused discussion on Time to Market concepts or metrics, resulting in a low confidence fit.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T14:21:16",
    "ai_confidence": 3.9,
    "ai_mentions": 0.1,
    "ai_alignment": 1.4,
    "ai_depth": 1.5,
    "ai_intent": 0.9,
    "ai_audience": 5.0,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content is a critique about technical debt, emphasizing negative impacts and a case study from Microsoft. It does not mention Service Level Expectation (SLE) by name or concept, nor does it discuss cycle time forecasting, elapsed days, or probabilities. There is no reference to Kanban, Scrum SLEs, or related improvements. While it targets technical teams (partially overlapping audiences), the discussion is wholly focused on debt, not SLE, and doesn't align with the intended category content.",
    "reasoning_summary": "This content focuses on technical debt's risks and impact without discussing SLE, its calculation, or its role in Agile/Kanban practices. There is no conceptual or practical overlap with service level expectations, so confidence in classification is very low.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T14:21:17",
    "ai_confidence": 31.1,
    "ai_mentions": 0.6,
    "ai_alignment": 3.8,
    "ai_depth": 2.7,
    "ai_intent": 4.5,
    "ai_audience": 5.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content centers on technical debt, its negative consequences, and an anecdote on transformation using Sprints and transparency. Although 'transparency' and iterative delivery are briefly referenced, empirical process control principles (transparency, inspection, adaptation) are only tangentially implied, not explicitly discussed or explored in depth. There are no direct or frequent mentions of empirical process control; related agile practices are supporting context, not the main focus. The main audience is agile practitioners facing technical debt, sharing some overlap with the empirical process control audience but remaining broader. The overall alignment, depth, and focus on empirical process control are partial and underdeveloped.",
    "reasoning_summary": "While the content hints at Agile concepts—like Sprints and transparency—its primary focus is on technical debt rather than empirical process control. Core principles such as inspection or adaptation receive minimal attention, resulting in only a modest connection to the category.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T14:21:17",
    "ai_confidence": 14.98,
    "ai_mentions": 0.7,
    "ai_alignment": 1.9,
    "ai_depth": 1.7,
    "ai_intent": 2.3,
    "ai_audience": 4.8,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content exclusively critiques the general concept of technical debt and advocates for addressing it. However, it never mentions Test First Development, nor its principles, practices, or terminology (such as success criteria, TDD, or test-first approaches). While engineering best practices are implicit, there is no conceptual or thematic coverage of Test First Development, and the audience is only tangentially relevant (teams suffering technical debt). The discussion remains superficial in relation to the Test First Development category, focusing instead on productivity harms and risk, not on the methods or mindsets of test-first approaches.",
    "reasoning_summary": "This piece does not discuss Test First Development. It focuses solely on the consequences of technical debt, offering no direct or conceptual alignment with test-first principles or practices, resulting in a very low confidence score for the category.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T14:21:10",
    "ai_confidence": 13.9,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 1.6,
    "ai_audience": 5.4,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses technical debt and its negative impacts on productivity and system stability. While relevant to software development, it doesn't reference or discuss product validation, user feedback, market fit, or any methodology for validating product ideas with real users. The focus is on engineering practices and risk management, not on validating assumptions about user or market needs, resulting in very low alignment and mention scores.",
    "reasoning_summary": "This content centers on the harms of technical debt, lacking any mention or discussion of product validation, user engagement, or iterative testing, and therefore barely fits the Product Validation category.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T14:21:12",
    "ai_confidence": 54.16,
    "ai_mentions": 2.4,
    "ai_alignment": 6.7,
    "ai_depth": 6.9,
    "ai_intent": 5.3,
    "ai_audience": 8.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses primarily on technical debt, arguing against its normalization and urging proactive management. While this is somewhat relevant to Market Adaptability—since unmanaged technical debt hinders responsiveness and delivery—explicit discussion of Agile, DevOps, Lean, or adaptable strategies is minimal. The Microsoft/TFS example hints at market adaptability by describing a change to 3-week Sprints, but does not delve into specific methodologies or practices in depth. Audience targeting (engineering leads, teams) and focused signal are strong, but conceptual and depth alignment with Market Adaptability is partial rather than central.",
    "reasoning_summary": "This piece critiques technical debt and highlights a case where process change (Sprints) helped. While relevant to adaptability, it lacks deep discussion of the category’s methods, so confidence is moderate. It’s useful for practitioners but not a direct or thorough fit.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T14:21:12",
    "ai_confidence": 13.78,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.7,
    "ai_intent": 2.0,
    "ai_audience": 3.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on technical debt's impacts on productivity and system stability, advocating for its resolution. It concentrates on software engineering process quality but makes no mention of Value Stream Mapping, Lean, or workflow visualisation. There is no explicit discussion of VSM concepts or principles. Some secondary relevance exists regarding workflow inefficiency, but VSM is not implied or discussed.",
    "reasoning_summary": "This piece is about technical debt and its consequences, with no direct or substantial connection to Value Stream Mapping or Lean practices. It does not mention or explore any VSM concepts, so alignment is very low.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T14:21:12",
    "ai_confidence": 13.75,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 1.8,
    "ai_audience": 4.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses almost exclusively on technical debt—its dangers, examples, and the need for remediation. While automation is mentioned in the phrase 'manually handling tasks that should be automated,' it is not specified or explored as automated testing. There are no direct mentions of automated testing, its tools, practices, or its role in Agile/DevOps, nor is there any substantial conceptual or purposeful alignment with the Automated Testing category. The audience (software practitioners) somewhat aligns, but none of the key pillars or depth expected for this category are met.",
    "reasoning_summary": "This content centers on technical debt, not automated testing. While automation is briefly referenced, automated testing isn’t discussed directly or in detail, and there’s no substantial exploration of its principles or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T14:21:14",
    "ai_confidence": 15.79,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.7,
    "ai_intent": 2.1,
    "ai_audience": 4.0,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on technical debt, productivity, and engineering practices, with no direct mention or discussion of mentoring, coaching, skill/leadership development, or agile team professional growth. The content is intended for engineering audiences but lacks mentoring intent, conceptual depth, or relevance to building skills/behaviors through mentorship. There's a tangential connection via organizational change, but it does not directly address any mentoring processes or relationships.",
    "reasoning_summary": "This content discusses technical debt and productivity without addressing mentoring, coaching, or professional skill development. While intended for technical audiences, it lacks alignment with mentoring themes or practices, making it a poor fit for the Mentoring category.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T14:21:15",
    "ai_confidence": 87.3,
    "ai_mentions": 8.6,
    "ai_alignment": 9.7,
    "ai_depth": 8.9,
    "ai_intent": 9.2,
    "ai_audience": 8.3,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content is tightly focused on the concept of technical debt—a core topic in engineering excellence. It explicitly names technical debt multiple times and illustrates the risks with concrete examples (unreadable systems, fragile architecture, lack of automation). The Microsoft TFS case highlights a real-world transformation achieved by improving engineering practices, including agile sprints and tackling legacy issues. The piece is directly addressed to engineering teams, urging improvement. There are no outdated practices or undermining tones; rather, it strongly advocates for high standards. While the discussion thoroughly covers technical debt, it touches on related themes (automation, transparency), though the overall depth is focused more on technical debt than the entire sweeping range of engineering excellence, resulting in a slightly less than perfect depth score.",
    "reasoning_summary": "This content is a focused, compelling call to address technical debt—central to engineering excellence. It uses real examples, advocates best practices, and speaks directly to engineering teams, strongly aligning with the category’s themes and intended audience.",
    "level": "Primary"
  },
  "Definition of Workflow": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:12",
    "ai_confidence": 6.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.6,
    "ai_intent": 0.8,
    "ai_audience": 1.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses exclusively on the harms of technical debt, using examples and case studies to illustrate its negative impacts. It discusses technical debt's effects on productivity, system stability, and business risk but does not address, mention, or explore the Definition of Workflow or its core concepts within Kanban/agile practice. There are no explicit or implicit references to entry/exit criteria, WIP limits, workflow visualization, or policies governing the flow of work. Audience focus is on engineering teams, which somewhat aligns, but the messaging is off-category.",
    "reasoning_summary": "The content is solely about technical debt and lacks any discussion of the Definition of Workflow or related Kanban/agile workflow concepts. It is off-topic for this category and only aligns very tangentially, resulting in very low confidence.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:27:02",
    "ai_confidence": 6.38,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.8,
    "ai_intent": 0.7,
    "ai_audience": 2.7,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content is focused exclusively on technical debt—its negative impact, warning signs, and a case study (Microsoft TFS)—with no explicit or implicit reference to OKRs. There is no mention of objectives, key results, measurable outcomes, or strategic alignment as described by John Doerr or the OKR framework. Even though some terms like 'transparency,' 'Sprints,' or tackling systemic issues may be present, these are addressed in service to reducing technical debt, not through the lens of outcome-based measurement, OKR structure, or iterative alignment. There is no discussion of setting objectives, tracking measurable key results, or strategic intent. The desired audience seems to be engineering or delivery teams, potentially aligning to an agile/DevOps context, but not in connection to OKRs. Consequently, each dimension scores near the minimum: barely any direct mention, negligible conceptual overlap, and shallow depth regarding the category. Signal-to-noise is low for OKR, as the signal is entirely about technical debt rather than outcome-driven frameworks.",
    "reasoning_summary": "This content centers on technical debt and its effects, offering no reference or real alignment with Objective Key Results. It neither discusses OKR frameworks, measurable objectives, nor connects technical debt remediation to outcome-driven approaches described by OKRs.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:02:21",
    "ai_confidence": 23.6,
    "ai_mentions": 0.8,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.4,
    "ai_audience": 8.0,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content discusses technical debt broadly in engineering and product teams but never mentions Product Developers as a role or accountability, nor does it discuss their collective responsibilities. The piece focuses on general best practices, risk, and technical debt management, not on the distinct role definition, behaviors, or accountability associated with Product Developers within product development frameworks. While the audience (teams, engineers) might overlap, the primary topic is too generic and not directly linked to the formal accountability or structure of the Product Developer role.",
    "reasoning_summary": "This content addresses technical debt and its impact on teams but doesn't directly reference or deeply explore Product Developer accountability, structure, or responsibilities. Its general focus makes alignment with the 'Product Developer' category minimal.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:02:25",
    "ai_confidence": 8.83,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.7,
    "ai_intent": 1.2,
    "ai_audience": 2.5,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content does not mention collective intelligence or themes of human-AI collaboration. It focuses on technical debt, team productivity, code maintainability, and historical examples involving traditional DevOps/Agile practices, without reference to AI agent collaboration, distributed cognition, or socio-technical dynamics between humans and AI. The intent is solely to advocate for rigorous attention to technical debt and process improvement in human teams, not on enhancement via AI partnership.",
    "reasoning_summary": "The content centers on the impact and consequences of technical debt from a purely human team perspective, without addressing human-AI collaboration or collective intelligence themes.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:18",
    "ai_confidence": 38.75,
    "ai_mentions": 0.6,
    "ai_alignment": 5.3,
    "ai_depth": 4.7,
    "ai_intent": 6.2,
    "ai_audience": 7.0,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on technical debt and systemic dysfunction, mainly from the perspective of productivity, risk, and process improvement. It references themes like transparency and automation, overlapping tangentially with Agentic Engineering (e.g., empowering dev teams and continuous improvement), but stops short of exploring developer agency, AI collaboration, or decision-making frameworks in depth. There are no explicit references to Agentic Engineering or its defining principles, nor is the philosophical grounding for maximizing human/AI agency deeply engaged. The audience (technical practitioners) is generally appropriate, and content is focused without filler, but the fit is ultimately limited to conceptual alignment on practices like automation and adaptation rather than core agentic principles.",
    "reasoning_summary": "This content critiques technical debt and highlights practices that marginally touch on Agentic Engineering, such as automation and process transparency, but does not explicitly discuss agency, AI, or decentralized decision-making. Its alignment is indirect and limited to related engineering best practices.",
    "level": "Ignored"
  },
  "Agentic Software Delivery": {
    "resourceId": "lLNjkL_zGQa",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:07",
    "ai_confidence": 12.7,
    "ai_mentions": 0.1,
    "ai_alignment": 1.7,
    "ai_depth": 1.5,
    "ai_intent": 2.5,
    "ai_audience": 3.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content is a focused critique of technical debt with emphasis on its negative impact and urgency for remediation. It lacks mention of autonomous AI agents, contextual intelligence, or agentic delivery principles. Modern engineering practices and delivery models are referenced only indirectly (e.g., sprints, automation), and there is no exploration of AI integration, feedback loops, or collaboration between agents and humans. The audience overlaps partially (engineering teams), but conceptual and topical fit to 'Agentic Software Delivery' is minimal. No penalties apply.",
    "reasoning_summary": "Main theme is technical debt management, not agentic delivery. No reference to autonomous AI, contextual intelligence, or agent-human synergies. Intent and audience moderately related, but fit to category is very low and mostly indirect.",
    "level": "Ignored"
  }
}