{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-11T14:28:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not focus on hypothesis formulation, experimentation, or data-driven decision-making, which are central to Hypothesis Driven Development.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-11T14:28:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not focus on hypothesis-driven experimentation or the systematic testing of ideas within Agile workflows.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-11T14:28:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching models in version control systems, which do not align with the principles and practices of entrepreneurship.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-11T14:28:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no clear focus on the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-11T14:28:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not related to Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-03-14T16:29:16",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which are primarily technical topics rather than focusing on organisational dynamics or systems thinking. While it touches on the impact of these models on team performance and agility, it lacks a comprehensive exploration of organisational structure, culture, or processes. The mention of organisational dysfunction is relevant but not sufficiently developed to align with the core themes of Organisational Physics.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-11T14:28:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no focus on coaching practices, team development, or facilitation of growth.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-11T14:28:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, without any focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 3.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which are more technical implementation details rather than strategic aspects of product management. While it touches on the importance of delivering value and agility, it lacks a focus on customer needs, business objectives, or methodologies specific to product management. The discussion does not align with the core themes of product management, such as stakeholder interests or product vision, and does not provide depth in these areas.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with limited focus on leadership roles or practices within Agile contexts.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-11T14:29:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on the Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-11T14:29:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not directly related to system configuration. It focuses on development practices rather than the technical aspects of configuring systems.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which indirectly relate to digital transformation by emphasising agility and continuous delivery. However, it lacks a direct focus on the strategic adoption of digital technologies for business transformation, making it more about operational practices than a comprehensive discussion on digital transformation.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-07T12:30:10",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 40.0,
    "ai_depth": 27.0,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content primarily critiques traditional software delivery models and advocates for more effective branching strategies that enhance continuous delivery and reduce complexity. It discusses the importance of delivering value and maintaining software quality through practices like GitHub Flow and Release Flow, which align with the principles of working software. However, while it touches on the characteristics of working software, it does not delve deeply into specific metrics or case studies, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for alternatives like GitHub Flow and Release Flow, which indirectly relates to decision-making in software development. However, it lacks a structured discussion on evidence-based methodologies or frameworks for decision-making, focusing more on operational practices rather than the decision-making process itself.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which can support self-organisation by enabling teams to deliver value more efficiently. However, it primarily focuses on technical practices rather than the principles of self-organisation, such as team autonomy and leadership support. The mention of organisational dysfunction hints at a lack of self-organisation but does not delve deeply into fostering a culture of autonomy or trust within teams.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-11T14:29:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on remote working practices, challenges, or solutions within an Agile context.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and promotes continuous integration and delivery, which aligns with Lean principles of minimising waste and maximising value delivery. However, it primarily focuses on Git workflows rather than explicitly addressing Lean Product Development concepts, resulting in a lower confidence score.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on technical practices related to branching strategies in software development, specifically critiquing the branch promotion model and advocating for alternatives like GitHub Flow and Release Flow. While it briefly touches on the idea that branch promotion is a symptom of organisational dysfunction, this is not explored in depth, nor is there a significant discussion on how organisational culture influences these practices. The content lacks a primary focus on cultural aspects, leadership roles, or team dynamics, which are essential for a stronger alignment with the category of Organisational Culture.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-11T14:29:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery processes, with no focus on customer feedback mechanisms or practices.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses branching strategies and models, including GitHub Flow and Release Flow, which are relevant to source control practices. However, it primarily critiques the branch promotion model without a direct focus on Azure Repos specifically. While it touches on concepts applicable to Azure Repos, such as pull requests and continuous delivery, it lacks a detailed exploration of Azure Repos functionalities or best practices, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-11T14:29:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the flaws of traditional branching models in software delivery and advocates for alternative approaches like GitHub Flow and Release Flow. It does not focus on transparency within Agile processes or the importance of clear communication and visibility in team dynamics.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-11T14:29:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and their implications on software delivery, without addressing the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching models and software delivery processes rather than product strategy, vision, or market analysis.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-11T14:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no direct focus on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-11T14:30:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, with no focus on Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-03-13T15:18:46",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 50,
    "final_score": 79.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative strategies like GitHub Flow and Release Flow, which directly relate to Agile delivery processes. It provides a detailed analysis of how these strategies can optimise delivery and enhance team performance, aligning well with the core themes of the Strategy category. The depth of discussion is significant, as it covers various aspects of branching strategies and their impact on agility, making it a strong fit for the category.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for more efficient practices like GitHub Flow and Release Flow, which can enhance delivery speed and reduce complexity. However, it primarily focuses on software delivery processes rather than directly addressing the measurement and improvement of innovation capabilities. While there are elements that touch on innovation in terms of improving workflows, the discussion lacks a strong emphasis on frameworks, metrics, or Evidence-Based Management principles that are central to the Ability to Innovate category.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses branching strategies and their impact on software delivery, which indirectly relates to Agile principles of continuous delivery and responsiveness. However, it primarily focuses on specific Git workflows rather than exploring Agile frameworks like Scrum or Kanban. The mention of 'agility' and the critique of traditional models suggest some alignment with Agile concepts, but the depth and focus on specific tools and practices limit its relevance to the Agile Frameworks category.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily focuses on branching strategies and their impact on software delivery, rather than discussing scaling agility practices or frameworks. While it touches on organisational dysfunction and the need for continuous delivery, it does not centralise the topic of scaling agility across multiple teams or the organisation as a whole.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses branching models and their impact on software delivery, which indirectly relates to team collaboration by highlighting how certain practices can hinder team efficiency and agility. However, it primarily focuses on technical processes rather than explicit team dynamics, communication, or shared ownership, leading to a lower confidence score in the 'Team Collaboration' category.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-11T14:30:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on customer satisfaction or related practices.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content discusses software delivery models and the inefficiencies of branch promotion, which indirectly relates to Lean principles of minimising waste and enhancing flow. However, it does not explicitly mention Lean Thinking concepts or tools, nor does it focus on Lean principles as a primary topic. The discussion is more centred on software development practices rather than Lean methodologies.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses the inefficiencies of traditional branch promotion models and advocates for continuous integration and delivery practices, which indirectly relate to Cycle Time by highlighting how these practices can reduce delays in value delivery. However, it does not explicitly define or focus on Cycle Time as a primary metric, nor does it provide detailed methods for measuring or improving it. The discussion is more centred on branching strategies rather than the measurement of Cycle Time itself.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-14T16:12:01",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for modern practices like GitHub Flow and Release Flow, which are closely aligned with Agile engineering principles. It explicitly mentions continuous integration and delivery, automation, and the importance of maintaining clean and efficient workflows. The depth of discussion is substantial, providing detailed comparisons and recommendations, which supports a high confidence score in the category of Engineering Practices.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-11T14:30:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which do not align with the principles of portfolio management or the strategic alignment of projects and initiatives.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-14T16:11:36",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content extensively discusses software development practices, particularly focusing on branching strategies in version control systems like Git. It critiques traditional models and advocates for modern approaches such as GitHub Flow and Release Flow, aligning closely with key topics in software development methodologies and CI/CD practices. The depth of discussion is significant, providing detailed explanations of the issues with branch promotion and offering alternatives, which reinforces its primary focus on software development.",
    "level": "Primary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-06T13:23:23",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content provides a thorough critique of traditional branching models in software development, advocating for modern practices like GitHub Flow and Release Flow. It directly addresses principles of continuous integration and delivery, which are core to engineering excellence. The discussion is detailed, covering the pitfalls of outdated models and the benefits of streamlined processes, thus aligning well with the key topics of the category.",
    "level": "Secondary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-03-07T12:35:24",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content discusses the inefficiencies of traditional branch promotion models and advocates for continuous integration and delivery practices that enhance throughput. It highlights how these models can lead to delays and increased complexity, which directly impacts the flow of work. However, while throughput is a significant theme, the content primarily focuses on branching strategies rather than a comprehensive exploration of throughput metrics or measurement techniques.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-03-14T16:11:11",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses branching strategies and their implications on software delivery, which indirectly relates to CI/CD practices. However, it does not explicitly mention Azure Pipelines or provide detailed insights into its configuration, management, or specific features. The focus is more on general branching models rather than Azure-specific implementations, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily critiques traditional branching models and promotes alternatives like GitHub Flow and Release Flow, focusing on efficiency and delivery speed. While it touches on concepts related to agility, such as reducing complexity and improving delivery, it does not explicitly discuss Agile values or principles, nor does it reference the Agile Manifesto or its core values. The discussion is more about specific practices rather than the underlying Agile philosophy.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 20,
    "final_score": 40.0,
    "reasoning": "The content discusses automated testing in the context of GitHub Flow and Release Flow, highlighting its importance in validating changes and enabling continuous deployment. However, the primary focus is on branching strategies and the flaws of traditional promotion models rather than a comprehensive exploration of automated testing principles, practices, or methodologies. While it mentions automated tests, it does not delve deeply into the types, best practices, or tools associated with automated testing, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not central to Site Reliability Engineering principles. While it touches on aspects of deployment and stability, it does not focus on SRE practices such as monitoring, incident response, or the integration of development and operations.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-11T14:30:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 20,
    "final_score": 13.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on technical practices rather than change management principles. While it touches on the need for organisational change in software delivery, it lacks a detailed exploration of change management strategies, stakeholder engagement, or leadership roles, which are central to the category.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-11T14:30:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, with no focus on mentoring, coaching, or professional development in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which indirectly relate to Agile principles. However, it lacks a direct focus on empirical process control, transparency, inspection, and adaptation. While it touches on the importance of continuous integration and delivery, it does not provide substantial detail on empirical process control practices or case studies, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-11T14:30:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on the flaws of traditional Dev → Test → Staging → Production models rather than validating product ideas through user engagement or feedback.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-11T14:30:41",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no mention of Azure Boards or its functionalities in Agile project management.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-11T14:30:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in development, with no focus on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-14T16:11:42",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses modern branching strategies in software development, particularly focusing on GitHub Flow and Release Flow, which are relevant to Agile and DevOps practices. It critiques traditional branch promotion models and advocates for continuous integration and delivery, aligning closely with the core themes of the Software Developers category. The depth of discussion is significant, providing detailed explanations of the issues with current practices and offering alternatives that enhance developer productivity and collaboration.",
    "level": "Secondary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-11T14:30:46",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative workflows like GitHub Flow and Release Flow. It does not focus on Test First Development principles, practices, or related testing methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-03-14T16:29:22",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content discusses the flaws of traditional branch promotion models and advocates for continuous delivery practices, specifically highlighting GitHub Flow and Release Flow as effective strategies for frequent releases. It aligns well with the principles of Continuous Delivery and Continuous Deployment, emphasising the importance of delivering value quickly and efficiently. The depth of discussion on alternative branching strategies and their impact on release frequency supports a strong alignment with the category, although it could benefit from more explicit metrics or case studies.",
    "level": "Secondary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-11T14:30:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no focus on estimation techniques or Agile/Scrum estimation practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses issues related to branch promotion models and their impact on software delivery, but it primarily focuses on advocating for alternative branching strategies rather than providing specific troubleshooting techniques or methodologies for diagnosing and resolving technical issues.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-03-14T16:29:10",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 10,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and their impact on value delivery, but it primarily focuses on branching strategies rather than the concept of Increment in Agile. While it touches on the importance of delivering value and avoiding delays, it does not explicitly define or explore the Increment as a core Agile concept, nor does it provide in-depth discussion on best practices for ensuring the quality and completeness of an Increment.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-11T14:30:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices, specifically branching models in Git, and does not address any aspects related to the Windows operating system.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-11T14:30:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on Sprint Reviews or related Scrum events.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 2,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the inefficiencies of traditional branch promotion models and how they can delay value delivery, which relates to Lead Time. However, it does not provide a focused discussion on Lead Time itself, nor does it delve into measurement techniques or strategies specifically aimed at reducing Lead Time. The primary focus is on branching strategies rather than a comprehensive exploration of Lead Time as a metric.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models rather than focusing on scaling Agile practices across multiple teams or at an enterprise level.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-14T16:29:35",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content provides a thorough critique of traditional branch promotion models in software development, emphasising practical alternatives like GitHub Flow and Release Flow. It discusses real-world implications of these models, highlighting the importance of continuous integration and delivery, which aligns well with pragmatic thinking. The depth of discussion is significant, as it covers various aspects of branching strategies and their impact on agility and efficiency, demonstrating a strong alignment with the category's core themes.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-03-13T16:18:47",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models and advocates for continuous integration and delivery practices that enhance deployment frequency. It discusses specific strategies like GitHub Flow and Release Flow, which are directly related to optimising deployment intervals. The depth of discussion is substantial, providing detailed insights into how these practices can improve value delivery and reduce complexity, aligning well with the core themes of the category.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily critiques traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which are more aligned with agile principles. However, it lacks direct discussions on agile methodologies, roles, or frameworks, making it a secondary focus rather than a primary exploration of Agile Project Management.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-14T16:11:09",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models and advocates for continuous integration practices, specifically highlighting GitHub Flow and Release Flow as effective alternatives. It discusses the importance of merging changes continuously into the main branch, automated testing, and the elimination of bottlenecks associated with branch promotion, which aligns closely with the principles of Continuous Integration. The depth of discussion is substantial, providing detailed insights into the implications of various branching strategies on CI, thus justifying a high confidence score.",
    "level": "Secondary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-03-07T12:42:12",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which align with Agile principles of continuous delivery and value delivery. However, it primarily focuses on technical practices related to version control rather than a broader Agile strategy context, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-14T16:29:19",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models and advocates for Continuous Delivery practices such as GitHub Flow and Release Flow. It discusses the importance of maintaining a production-ready state, the role of automation in deployment, and strategies to mitigate risks associated with deployment. The depth of discussion is substantial, providing detailed insights into how to achieve Continuous Delivery effectively, thus aligning well with the category's core themes.",
    "level": "Secondary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-11T14:31:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on the flaws of traditional promotion models and advocating for alternatives like GitHub Flow and Release Flow. It does not address cross-functional teams or their characteristics, roles, or benefits within Agile methodologies.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-11T14:31:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models and their impact on software delivery, with no focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses branching models and software delivery strategies, focusing on technical implementations rather than the interpretation of complexity or decision-making processes in organisational contexts.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-11T14:31:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which can indirectly impact team performance by streamlining processes. However, it primarily focuses on technical practices rather than directly addressing team dynamics, collaboration, or Agile methodologies. While it mentions the effects of branching strategies on team workflows, it lacks a thorough exploration of team performance metrics, leadership roles, or conflict resolution strategies, which are essential for a higher confidence score in the 'Team Performance' category.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-11T14:31:33",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses branching strategies in software development and does not address AI or its integration within Agile methodologies or DevOps practices.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-11T14:31:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues with branch promotion models and alternatives like GitHub Flow and Release Flow, which are not related to Scaling Kanban principles or practices.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-11T14:31:37",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, focusing on Git Flow, GitHub Flow, and Release Flow, without any mention of Behaviour Driven Development principles, practices, or collaboration among stakeholders.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-11T14:31:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery strategies, with no focus on working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and the inefficiencies of branch promotion, which indirectly relates to Lean principles of waste reduction and value maximisation. However, it primarily focuses on Git workflows rather than explicitly addressing Lean concepts or practices. While there are mentions of reducing complexity and improving delivery speed, the discussion lacks depth in Lean-specific tools or methodologies, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which are related to Agile practices but does not primarily focus on Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and their impact on software delivery, which can be related to technical debt. However, it primarily focuses on branching strategies rather than explicitly addressing the management or implications of technical debt itself. While it touches on concepts like complexity and risk, it does not delve deeply into the identification, measurement, or remediation of technical debt, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-11T14:31:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum Values such as commitment, courage, focus, openness, or respect.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which are technical in nature. While it touches on concepts like agility and the need for change in processes, it does not delve into the broader organisational change frameworks or methodologies. The focus is on specific coding practices rather than the principles of organisational change, making it only tangentially related to the category.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses branching strategies and their impact on software delivery but only briefly mentions automated tests in the context of GitHub Flow. It does not focus on test automation principles, frameworks, or best practices, which are central to the category. The primary focus is on improving delivery processes rather than on the automation of testing itself.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-11T14:31:51",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum principles, roles, or product development practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-14T16:11:57",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models in software delivery and advocates for more efficient practices like GitHub Flow and Release Flow. It discusses operational inefficiencies, the importance of continuous integration and delivery, and strategies to reduce complexity and improve delivery speed, aligning closely with the core themes of operational practices. The depth of discussion is substantial, providing detailed comparisons and practical recommendations, which further supports a high confidence score.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-11T14:31:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no mention of backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-11T14:31:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-11T14:32:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no direct reference to the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are more focused on team-level practices rather than large-scale Agile principles or frameworks. While it touches on aspects of agility, it does not address the scaling of Agile methodologies across an organisation.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-11T14:32:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no clear focus on forecasting methods or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-03-14T16:12:17",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for modern practices like GitHub Flow and Release Flow, which align with agile methodologies. However, it lacks direct discussions on mentoring, team dynamics, or servant leadership principles, which are crucial for technical leadership. The focus is more on technical practices than on leadership strategies, resulting in a moderate confidence score.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-11T14:32:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on technical implementation details rather than exploring customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-11T14:32:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching strategies, focusing on Git workflows rather than Lean Startup principles such as MVP, Build-Measure-Learn feedback loops, or validated learning.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery rather than Agile Planning principles or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-11T14:32:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on accountability, ownership, or team dynamics in Agile practices.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-11T14:32:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Minimum Viable Product concepts or related practices.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-11T14:32:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no focus on collaboration tools or enhancing communication within Agile teams.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-11T14:32:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-03-13T16:26:51",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models and advocates for modern deployment strategies like GitHub Flow and Release Flow. It discusses the implications of these strategies on deployment speed and risk management, aligning well with the core themes of deployment methodologies. The depth of discussion is substantial, providing detailed insights into how these strategies can enhance continuous delivery and integration, while also addressing the risks associated with outdated practices.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-11T14:32:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum roles, team dynamics, or collaboration practices.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-10T11:34:02",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content provides a thorough critique of traditional branch promotion models in software development, aligning closely with the principles of clean code, continuous integration, and agile engineering practices. It discusses best practices such as GitHub Flow and Release Flow, emphasising the importance of reducing complexity and improving delivery speed, which are key aspects of technical mastery. The depth of discussion is significant, with detailed explanations of the pitfalls of outdated practices and the benefits of modern approaches, demonstrating a strong focus on software craftsmanship.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-03-14T16:11:29",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models and advocates for modern release strategies like GitHub Flow and Release Flow. It discusses the implications of these models on software delivery, emphasising continuous integration and delivery, which are core aspects of release management. The depth of discussion is significant, providing detailed insights into the risks associated with outdated practices and the benefits of adopting more efficient workflows. Overall, the content aligns closely with the key topics of release management, making it a strong fit for the category.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-11T14:32:32",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and the flaws of traditional deployment models, without addressing Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the flaws of traditional branching models in software delivery and suggests alternatives like GitHub Flow and Release Flow. While it touches on trends in DevOps practices, it primarily focuses on critiquing specific methodologies rather than analysing broader trends or their implications for Agile and DevOps. The discussion lacks depth in exploring how these trends impact organisational practices or strategic decision-making.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on technical aspects of branching strategies in software development, specifically critiquing traditional models like branch promotion and advocating for alternatives like GitHub Flow and Release Flow. While it touches on concepts related to agility, such as delivering value and reducing complexity, it lacks a direct discussion of Agile principles or the broader Agile mindset. The emphasis is on practical implementation rather than the philosophical underpinnings of Agile, leading to a lower confidence score in alignment with the Agile Philosophy category.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-03-14T16:11:20",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily focuses on modern branching strategies in source control, specifically critiquing traditional branch promotion models and advocating for GitHub Flow and Release Flow. It discusses the implications of these strategies on continuous integration and delivery, conflict resolution, and the overall efficiency of code management. The depth of discussion is substantial, providing detailed explanations of the flaws in outdated practices and the benefits of modern approaches, thus aligning closely with the core themes of the category.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-11T14:32:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on Git workflows rather than Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-11T14:32:45",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on Git workflows rather than Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-11T14:32:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models and their impact on software delivery, focusing on GitHub Flow and Release Flow, without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-11T14:32:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching strategies, with no direct relevance to market share or strategies for increasing a product's presence in the market.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on operational tactics rather than long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-03-14T16:29:12",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily critiques traditional branching models in software development and advocates for more efficient practices like GitHub Flow and Release Flow. While it touches on concepts of agility and continuous integration, it lacks a direct focus on continuous learning principles such as growth mindset, knowledge sharing, or feedback loops. The discussion is more about process improvement than fostering a culture of continuous learning within teams.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-11T16:06:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development processes and branching strategies, with no focus on employee engagement, motivation, or team dynamics.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with limited focus on decision-making processes or frameworks related to uncertainty. While it touches on the consequences of certain practices, it does not delve into decision theory principles or methodologies.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for more agile practices like GitHub Flow and Release Flow. While it touches on themes of agility and continuous delivery, it primarily focuses on team-level practices and specific branching strategies without addressing broader organisational implications or frameworks for scaling agility. Therefore, it does not fully align with the category of Enterprise Agility.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and the inefficiencies of branch promotion, which indirectly relates to Lean principles of minimising waste and maximising value. However, it primarily focuses on Agile practices and Git workflows rather than explicitly addressing Lean methodologies or tools. While there are mentions of reducing complexity and improving delivery speed, the core themes of Lean, such as value stream mapping and waste reduction techniques, are not thoroughly explored.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-03-14T16:29:24",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on technical implementations rather than organisational resilience or change management. While it touches on agility and the need for adaptive practices, it lacks a comprehensive exploration of the human and cultural aspects of change, which are crucial for the category of 'Resilience and Change'. The discussion is more about improving technical processes than fostering a culture of adaptability or addressing organisational resilience.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-11T14:27:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not provide actionable instructions or insights related to the installation or configuration of tools, software, or platforms.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-11T14:15:18",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 30,
    "final_score": 77.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models in software development, highlighting how they introduce unnecessary complexity and hinder agility. It directly addresses the impact of these models on code quality and delivery processes, aligning well with the core themes of the category. The depth of discussion is substantial, providing detailed alternatives like GitHub Flow and Release Flow, and explaining their benefits in reducing complexity. However, while it touches on complexity, it does not delve deeply into complexity theory or its broader implications, which slightly lowers the alignment score.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-03-14T16:29:38",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 34,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content primarily focuses on optimising the software delivery process by critiquing traditional branch promotion models and advocating for more efficient alternatives like GitHub Flow and Release Flow. It discusses the negative impacts of bottlenecks caused by outdated practices and highlights strategies for improving flow efficiency, such as continuous integration and delivery. The depth of discussion is substantial, providing detailed explanations of how to eliminate inefficiencies and enhance throughput, aligning closely with the principles of Flow Efficiency.",
    "level": "Secondary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-11T14:27:52",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models without any mention of AI or automation technologies in Agile frameworks.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-14T16:29:41",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models in software delivery and advocates for more efficient methodologies like GitHub Flow and Release Flow. It discusses the importance of continuous integration and delivery, which are key aspects of product delivery. The depth of discussion is significant, providing detailed critiques of existing practices and offering practical alternatives, thus aligning well with the core themes of product delivery.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not directly related to Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily critiques traditional branching models and advocates for alternative strategies like GitHub Flow and Release Flow. While it touches on the importance of continuous integration and delivery, which can relate to learning and adapting, it lacks a direct focus on discovery and learning processes. The discussion is more about technical implementation and project management rather than fostering a culture of innovation or learning from experimentation.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on linear problem-solving approaches rather than the interconnectedness of systems or holistic analysis. While it touches on organisational dysfunction, it does not delve into Systems Thinking principles or methodologies.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the flaws of traditional branching models in software development, highlighting issues like complexity and unpredictability. However, it primarily focuses on practical software delivery strategies rather than explicitly engaging with complexity science principles or frameworks. While it touches on themes of organisational dysfunction and agility, it lacks a thorough exploration of complexity theory or its application in organisational contexts, which diminishes its alignment with the category.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-11T14:28:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery, without a focus on transparency or accountability within Agile teams.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-11T17:17:49",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content provides a thorough critique of traditional branch promotion models in software development, specifically discussing GitHub Flow and Release Flow as practical alternatives. It directly addresses the application of these methodologies, aligning well with the category's focus on practical techniques and tooling. The depth of discussion is significant, covering the implications of various branching strategies and their impact on team performance and delivery outcomes.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-11T14:28:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies in software development and does not reference any events, presentations, or discussions related to Agile, DevOps, or software engineering conferences.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-03-06T13:23:26",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which enhance agility and responsiveness in software delivery. While it does not explicitly mention 'market adaptability', it aligns with the principles of Agile methodologies and continuous delivery, which are crucial for adapting to market changes. The depth of discussion on improving delivery processes contributes to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-11T14:28:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies in software development, specifically critiquing traditional models and advocating for GitHub Flow and Release Flow, which are directly related to DevOps practices.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-06T14:35:18",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 50,
    "final_score": 83.0,
    "reasoning": "The content focuses extensively on the flaws of traditional branching models in software delivery, advocating for modern practices like GitHub Flow and Release Flow, which are integral to DevOps principles. It discusses continuous integration and delivery, automation, and the cultural shifts necessary for effective DevOps implementation. The depth of discussion is significant, providing detailed critiques and alternatives to outdated practices, thus aligning well with the core themes of DevOps.",
    "level": "Primary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-06T14:35:24",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses branching strategies and models relevant to software delivery, including GitHub Flow and Release Flow, which are associated with Azure DevOps. However, while it mentions Release Flow as developed by Microsoft, the primary focus is on general branching practices rather than specific Azure DevOps functionalities or best practices. The discussion lacks depth in Azure DevOps-specific tools and methodologies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-11T14:28:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models in software development and their implications on delivery processes, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and their impact on agility, particularly critiquing traditional branch promotion strategies. While it touches on themes of efficiency and responsiveness, it primarily focuses on technical practices rather than broader principles of business agility. The mention of 'delivering value' aligns with business agility, but the overall emphasis is on specific methodologies rather than the organisational culture or leadership aspects that are central to the category.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-11T14:28:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues with branch promotion models and alternatives like GitHub Flow and Release Flow, focusing on software delivery practices rather than Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-14T16:11:25",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models and advocates for continuous delivery practices, which directly aligns with the principles of iterative development and maximising customer value. It discusses the impact of branching strategies on agility and value delivery, providing detailed alternatives like GitHub Flow and Release Flow. The depth of discussion on how these practices enhance delivery speed and reduce complexity further supports its strong alignment with the Value Delivery category.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-14T16:29:31",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 27.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content primarily critiques traditional branch promotion models and advocates for modern practices like GitHub Flow and Release Flow, which align with Continuous Integration and Continuous Delivery (CI/CD) principles. It discusses the inefficiencies of outdated models and promotes a more agile approach to software delivery, which is a key aspect of Technical Excellence. However, while it touches on these topics, the depth of discussion on specific engineering practices is somewhat limited, focusing more on the critique of existing models rather than a detailed exploration of methodologies. Therefore, while it aligns well with the category, it does not delve deeply into the technical practices themselves.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-06T15:41:25",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes more agile practices like GitHub Flow and Release Flow, which align with the principles of organisational agility. However, it primarily focuses on technical aspects of software delivery rather than broader organisational strategies or cultural shifts, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-11T14:28:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of branching models in software development, focusing on Git workflows and their implications for delivery processes. It does not include personal experiences, reflections, or anecdotes related to Agile, Scrum, or DevOps methodologies.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-14T16:12:22",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the flaws of traditional branching models and their impact on team dynamics and delivery processes. It highlights how organisational dysfunction can arise from poor branching strategies, which directly relates to team performance and process improvement. However, while it touches on human factors, the primary focus is on technical methodologies rather than the interplay between people and processes, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses technical branching models and their implications on software delivery without a significant focus on the sociotechnical aspects, such as team dynamics or organisational culture. While it touches on organisational dysfunction and the need for better practices, it lacks a thorough exploration of how these technical practices interact with social systems within teams or organisations.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-03-14T16:29:27",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the flaws of traditional branch promotion models in software development and advocates for alternatives like GitHub Flow and Release Flow. While it provides insights into current practices and critiques outdated methods, it lacks direct references to industry news or reviews of specific tools or methodologies. The focus is more on technical critique and recommendations rather than on news or reviews, which diminishes its alignment with the specified category.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily critiques traditional branching models and advocates for more efficient workflows like GitHub Flow and Release Flow. While it touches on concepts of continuous delivery and the importance of reducing complexity, it lacks a direct focus on metrics, data analysis, or feedback mechanisms that are central to the 'Metrics and Learning' category. The discussion is more about process improvement rather than evidence-based decision-making or performance metrics, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily critiques branching models in software development, focusing on GitHub Flow and Release Flow as alternatives. While it touches on aspects of application delivery and deployment, it lacks a comprehensive discussion on the entire application lifecycle, including stages like conception, maintenance, and retirement. The emphasis is more on branching strategies rather than the broader practices and tools of Application Lifecycle Management, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses software delivery models and branching strategies, focusing on improving efficiency and reducing complexity. However, it does not explicitly mention Value Stream Management or its principles. While it touches on concepts like delivering value and minimising waste, it primarily centres on Git workflows rather than a comprehensive discussion of value stream management practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-11T14:28:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in version control systems, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-13T21:46:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software delivery models and branching strategies, with no clear focus on Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses branching strategies and their impact on software delivery, which indirectly relates to platform engineering principles. However, it primarily focuses on version control practices rather than the design and construction of internal platforms or enhancing developer productivity through IDPs. While it touches on automation and continuous delivery, it lacks a direct connection to the core themes of platform engineering, resulting in a moderate confidence score.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-13T21:46:16",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses branching models and their impact on software delivery, without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-13T21:46:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses branching strategies and their impact on software delivery, rather than focusing on the Agile Product Operating Model or its principles.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-13T21:46:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery models and branching strategies, with no clear focus on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:46:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery models and branching strategies, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-14T16:29:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which indirectly relate to Agile practices and continuous delivery. However, it lacks explicit references to Scrum, Kanban, Lean, or Agile methodologies, and does not focus on team dynamics or collaboration, which are key aspects of Social Technologies.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:29:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses branching strategies and their impact on software delivery, without a clear focus on Internal Developer Platforms or their implementation.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:29:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses branching strategies in software development and does not address AI integration or applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T10:38:37",
    "ai_confidence": 10.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 9.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, focusing on Git Flow, GitHub Flow, and Release Flow. While it touches on concepts like agility and delivery, it does not explicitly mention Scrum principles, roles, or events, nor does it delve into the Scrum framework or its implementation. Therefore, it aligns very minimally with the Scrum category.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T15:36:56",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the flaws of traditional branch promotion models and advocates for continuous integration and delivery, which aligns with the Shift-Left Strategy's principles of integrating processes earlier in the development lifecycle. However, it primarily focuses on branching strategies rather than explicitly addressing testing, security, or compliance integration, leading to a lower confidence score. The depth of discussion on alternative models like GitHub Flow and Release Flow provides some relevant insights but does not fully explore the Shift-Left Strategy's core themes.",
    "level": "Ignored"
  }
}
