{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-11T14:28:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not focus on hypothesis formulation, experimentation, or data-driven decision-making, which are central to Hypothesis Driven Development.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-11T14:28:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not focus on hypothesis-driven experimentation or the systematic testing of ideas within Agile workflows.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-11T14:28:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching models in version control systems, which do not align with the principles and practices of entrepreneurship.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-11T14:28:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no clear focus on the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-11T14:28:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not related to Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses organisational dysfunction related to software delivery processes, highlighting how branching models can reflect and reinforce organisational issues. While it touches on systems thinking in the context of software development, it primarily focuses on specific practices rather than a comprehensive exploration of organisational dynamics.",
    "level": "Tertiary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-11T14:28:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no focus on coaching practices, team development, or facilitation of growth.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-11T14:28:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, without any focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-07T12:35:18",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 3.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which are more technical implementation details rather than strategic aspects of product management. While it touches on the importance of delivering value and agility, it lacks a focus on customer needs, business objectives, or methodologies specific to product management. The discussion does not align with the core themes of product management, such as stakeholder interests or product vision, and does not provide depth in these areas.",
    "level": "Quinary"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with limited focus on leadership roles or practices within Agile contexts.",
    "level": "Quaternary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-11T14:29:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on the Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-11T14:29:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not directly related to system configuration. It focuses on development practices rather than the technical aspects of configuring systems.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-03-11T00:15:17",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which indirectly relate to digital transformation by emphasising agility and continuous delivery. However, it lacks a direct focus on the strategic adoption of digital technologies for business transformation, making it more about operational practices than a comprehensive discussion on digital transformation.",
    "level": "Quaternary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-07T12:30:10",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 40.0,
    "ai_depth": 27.0,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content primarily critiques traditional software delivery models and advocates for more effective branching strategies that enhance continuous delivery and reduce complexity. It discusses the importance of delivering value and maintaining software quality through practices like GitHub Flow and Release Flow, which align with the principles of working software. However, while it touches on the characteristics of working software, it does not delve deeply into specific metrics or case studies, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for evidence-based alternatives like GitHub Flow and Release Flow, which aligns with structured decision-making principles. However, the primary focus is on software delivery practices rather than explicit decision-making methodologies.",
    "level": "Secondary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-03-13T14:55:28",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which can support self-organisation by enabling teams to deliver value more efficiently. However, it primarily focuses on technical practices rather than the principles of self-organisation, such as team autonomy and leadership support. The mention of organisational dysfunction hints at a lack of self-organisation but does not delve deeply into fostering a culture of autonomy or trust within teams.",
    "level": "Quaternary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-11T14:29:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on remote working practices, challenges, or solutions within an Agile context.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 75,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models in software development, emphasising the importance of continuous delivery and reducing waste in the process. While it primarily focuses on branching strategies, it aligns with Lean principles by advocating for faster delivery and minimising complexity, making Lean Product Development a significant theme.",
    "level": "Secondary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses technical practices and models related to software delivery and branching strategies, with only a brief mention of organisational dysfunction. The focus is not on cultural aspects or their influence on agility and transformation.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-11T14:29:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery processes, with no focus on customer feedback mechanisms or practices.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses branching strategies and mentions Release Flow, which is associated with Azure DevOps, but the primary focus is on critiquing branch promotion models and advocating for alternative workflows rather than specifically on Azure Repos functionalities.",
    "level": "Tertiary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-11T14:29:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the flaws of traditional branching models in software delivery and advocates for alternative approaches like GitHub Flow and Release Flow. It does not focus on transparency within Agile processes or the importance of clear communication and visibility in team dynamics.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-11T14:29:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and their implications on software delivery, without addressing the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching models and software delivery processes rather than product strategy, vision, or market analysis.",
    "level": "Quaternary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-11T14:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no direct focus on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-11T14:30:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, with no focus on Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-03-13T15:18:46",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 50,
    "final_score": 79.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative strategies like GitHub Flow and Release Flow, which directly relate to Agile delivery processes. It provides a detailed analysis of how these strategies can optimise delivery and enhance team performance, aligning well with the core themes of the Strategy category. The depth of discussion is significant, as it covers various aspects of branching strategies and their impact on agility, making it a strong fit for the category.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-03-10T17:47:57",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for more efficient practices like GitHub Flow and Release Flow, which can enhance delivery speed and reduce complexity. However, it primarily focuses on software delivery processes rather than directly addressing the measurement and improvement of innovation capabilities. While there are elements that touch on innovation in terms of improving workflows, the discussion lacks a strong emphasis on frameworks, metrics, or Evidence-Based Management principles that are central to the Ability to Innovate category.",
    "level": "Quaternary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses branching models and their impact on delivery speed and organisational agility, which aligns with Agile principles, but it primarily focuses on Git workflows rather than a specific Agile framework.",
    "level": "Tertiary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily focuses on branching strategies and their impact on software delivery, rather than discussing scaling agility practices or frameworks. While it touches on organisational dysfunction and the need for continuous delivery, it does not centralise the topic of scaling agility across multiple teams or the organisation as a whole.",
    "level": "Quaternary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses team dynamics in the context of branching strategies and their impact on delivery speed and efficiency, which relates to collaboration but is primarily focused on technical processes rather than direct team collaboration techniques.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-11T14:30:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on customer satisfaction or related practices.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models in software development, which aligns with Lean principles of minimising waste and enhancing flow. However, it primarily focuses on Git workflows rather than Lean Thinking itself.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-03-13T14:44:44",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses the inefficiencies of traditional branch promotion models and advocates for continuous integration and delivery practices, which indirectly relate to Cycle Time by highlighting how these practices can reduce delays in value delivery. However, it does not explicitly define or focus on Cycle Time as a primary metric, nor does it provide detailed methods for measuring or improving it. The discussion is more centred on branching strategies rather than the measurement of Cycle Time itself.",
    "level": "Quaternary"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses modern branching strategies in software development, focusing on Continuous Integration and Continuous Delivery (CI/CD) practices, and critiques outdated models like branch promotion and Git Flow. It emphasises the importance of clean, efficient workflows that enhance agility and value delivery, aligning closely with key topics in Engineering Practices.",
    "level": "Primary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-11T14:30:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which do not align with the principles of portfolio management or the strategic alignment of projects and initiatives.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 88.0,
    "reasoning": "Content primarily discusses software development practices, specifically focusing on branching strategies, continuous integration, and delivery models, which are central to effective software engineering.",
    "level": "Primary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-06T13:23:23",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content provides a thorough critique of traditional branching models in software development, advocating for modern practices like GitHub Flow and Release Flow. It directly addresses principles of continuous integration and delivery, which are core to engineering excellence. The discussion is detailed, covering the pitfalls of outdated models and the benefits of streamlined processes, thus aligning well with the key topics of the category.",
    "level": "Secondary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-03-07T12:35:24",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content discusses the inefficiencies of traditional branch promotion models and advocates for continuous integration and delivery practices that enhance throughput. It highlights how these models can lead to delays and increased complexity, which directly impacts the flow of work. However, while throughput is a significant theme, the content primarily focuses on branching strategies rather than a comprehensive exploration of throughput metrics or measurement techniques.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses branching strategies and their impact on software delivery, which relates to CI/CD practices. However, it does not specifically focus on Azure Pipelines or its configuration, making Azure Pipelines a secondary theme.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-03-11T16:04:05",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily critiques traditional branching models and promotes alternatives like GitHub Flow and Release Flow, focusing on efficiency and delivery speed. While it touches on concepts related to agility, such as reducing complexity and improving delivery, it does not explicitly discuss Agile values or principles, nor does it reference the Agile Manifesto or its core values. The discussion is more about specific practices rather than the underlying Agile philosophy.",
    "level": "Quaternary"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated tests in the context of GitHub Flow and Release Flow, highlighting their role in continuous integration and delivery. However, the primary focus is on branching strategies rather than automated testing itself.",
    "level": "Tertiary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not central to Site Reliability Engineering principles. While it touches on aspects of deployment and stability, it does not focus on SRE practices such as monitoring, incident response, or the integration of development and operations.",
    "level": "Quaternary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-11T14:30:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 45,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies rather than focusing on change management principles or practices. While it touches on organisational dysfunction and the need for improved processes, it does not centralise around change management as a primary topic.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-11T14:30:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, with no focus on mentoring, coaching, or professional development in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for continuous integration and delivery, which aligns with the principles of empirical process control. However, it primarily focuses on branching strategies rather than a comprehensive discussion of empirical process control itself.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-11T14:30:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on the flaws of traditional Dev → Test → Staging → Production models rather than validating product ideas through user engagement or feedback.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-11T14:30:41",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no mention of Azure Boards or its functionalities in Agile project management.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-11T14:30:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in development, with no focus on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "Content primarily discusses modern branching strategies in software development, specifically focusing on GitHub Flow and Release Flow, which are relevant to Agile and DevOps practices.",
    "level": "Primary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-11T14:30:46",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative workflows like GitHub Flow and Release Flow. It does not focus on Test First Development principles, practices, or related testing methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses the flaws of traditional branching models and advocates for continuous delivery practices, specifically highlighting GitHub Flow and Release Flow as methods to enable frequent releases and faster delivery of value.",
    "level": "Primary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-11T14:30:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no focus on estimation techniques or Agile/Scrum estimation practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses issues related to branch promotion models and their impact on software delivery, but it primarily focuses on advocating for alternative branching strategies rather than providing specific troubleshooting techniques or methodologies for diagnosing and resolving technical issues.",
    "level": "Quaternary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses software delivery models and their impact on value delivery, which aligns with the Increment concept, but it primarily focuses on branching strategies rather than the Increment itself.",
    "level": "Tertiary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-11T14:30:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices, specifically branching models in Git, and does not address any aspects related to the Windows operating system.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-11T14:30:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on Sprint Reviews or related Scrum events.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-03-07T12:39:23",
    "ai_confidence": 32.0,
    "ai_mentions": 2,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the inefficiencies of traditional branch promotion models and how they can delay value delivery, which relates to Lead Time. However, it does not provide a focused discussion on Lead Time itself, nor does it delve into measurement techniques or strategies specifically aimed at reducing Lead Time. The primary focus is on branching strategies rather than a comprehensive exploration of Lead Time as a metric.",
    "level": "Quaternary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models rather than focusing on scaling Agile practices across multiple teams or at an enterprise level.",
    "level": "Quaternary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 83.0,
    "reasoning": "Content primarily discusses practical problem-solving strategies in software delivery, specifically critiquing traditional branching models and advocating for GitHub Flow and Release Flow as more effective alternatives. It emphasises real-world applications of DevOps principles to enhance collaboration and efficiency, aligning closely with the key topics of pragmatic thinking.",
    "level": "Primary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-03-13T16:18:47",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content primarily focuses on the flaws of traditional branch promotion models and advocates for continuous integration and delivery practices that enhance deployment frequency. It discusses specific strategies like GitHub Flow and Release Flow, which are directly related to optimising deployment intervals. The depth of discussion is substantial, providing detailed insights into how these practices can improve value delivery and reduce complexity, aligning well with the core themes of the category.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes continuous delivery practices, which align with agile principles. However, it primarily focuses on version control strategies rather than core agile methodologies or frameworks.",
    "level": "Tertiary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for continuous integration practices, specifically highlighting GitHub Flow and Release Flow as effective strategies for CI. It emphasises the importance of merging changes continuously and automating testing, which are core principles of Continuous Integration.",
    "level": "Primary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-03-07T12:42:12",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which align with Agile principles of continuous delivery and value delivery. However, it primarily focuses on technical practices related to version control rather than a broader Agile strategy context, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for Continuous Delivery practices such as GitHub Flow and Release Flow, emphasising the importance of maintaining a production-ready state and minimising deployment risks.",
    "level": "Primary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-11T14:31:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on the flaws of traditional promotion models and advocating for alternatives like GitHub Flow and Release Flow. It does not address cross-functional teams or their characteristics, roles, or benefits within Agile methodologies.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-11T14:31:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models and their impact on software delivery, with no focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses branching models and software delivery strategies, focusing on technical implementations rather than the interpretation of complexity or decision-making processes in organisational contexts.",
    "level": "Quaternary"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-11T14:31:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the impact of branching models on team agility and delivery, which relates to team performance, but it primarily focuses on technical practices rather than direct team dynamics or collaboration strategies.",
    "level": "Tertiary"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-11T14:31:33",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses branching strategies in software development and does not address AI or its integration within Agile methodologies or DevOps practices.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-11T14:31:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues with branch promotion models and alternatives like GitHub Flow and Release Flow, which are not related to Scaling Kanban principles or practices.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-11T14:31:37",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, focusing on Git Flow, GitHub Flow, and Release Flow, without any mention of Behaviour Driven Development principles, practices, or collaboration among stakeholders.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-11T14:31:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery strategies, with no focus on working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models in software delivery, emphasising the importance of continuous integration and delivery, which aligns with Lean principles of waste reduction and value maximisation. However, it primarily focuses on Git workflows rather than Lean principles themselves.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which are related to Agile practices but does not primarily focus on Agile transformation principles or methodologies.",
    "level": "Quaternary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the inefficiencies and risks associated with traditional branch promotion models, which can be seen as a form of technical debt. However, the primary focus is on branching strategies rather than a comprehensive exploration of technical debt management.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-11T14:31:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum Values such as commitment, courage, focus, openness, or respect.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 45,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which are more technical in nature. While it touches on themes of agility and organisational dysfunction, these are not the central focus of the discussion.",
    "level": "Tertiary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous integration and delivery practices, which are related to test automation, but the primary focus is on branching strategies rather than test automation principles or tools.",
    "level": "Tertiary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-11T14:31:51",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum principles, roles, or product development practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "Content primarily discusses the inefficiencies of traditional branch promotion models and advocates for alternative workflows like GitHub Flow and Release Flow, focusing on enhancing operational efficiency in software delivery.",
    "level": "Primary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-11T14:31:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no mention of backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-11T14:31:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-11T14:32:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no direct reference to the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are more focused on team-level practices rather than large-scale Agile principles or frameworks. While it touches on aspects of agility, it does not address the scaling of Agile methodologies across an organisation.",
    "level": "Quaternary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-11T14:32:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no clear focus on forecasting methods or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for modern practices like GitHub Flow and Release Flow, which are relevant to technical leadership in guiding teams towards effective software delivery and agile methodologies.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-11T14:32:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on technical implementation details rather than exploring customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-11T14:32:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching strategies, focusing on Git workflows rather than Lean Startup principles such as MVP, Build-Measure-Learn feedback loops, or validated learning.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery rather than Agile Planning principles or methodologies.",
    "level": "Quaternary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-11T14:32:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on accountability, ownership, or team dynamics in Agile practices.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-11T14:32:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Minimum Viable Product concepts or related practices.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-11T14:32:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no focus on collaboration tools or enhancing communication within Agile teams.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-11T14:32:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses various deployment strategies, specifically critiquing traditional branch promotion models and advocating for GitHub Flow and Release Flow as effective methodologies for continuous delivery and deployment. It focuses on optimising deployment processes and managing associated risks, aligning closely with the category's definition.",
    "level": "Primary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-11T14:32:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum roles, team dynamics, or collaboration practices.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-10T11:34:02",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content provides a thorough critique of traditional branch promotion models in software development, aligning closely with the principles of clean code, continuous integration, and agile engineering practices. It discusses best practices such as GitHub Flow and Release Flow, emphasising the importance of reducing complexity and improving delivery speed, which are key aspects of technical mastery. The depth of discussion is significant, with detailed explanations of the pitfalls of outdated practices and the benefits of modern approaches, demonstrating a strong focus on software craftsmanship.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative strategies like GitHub Flow and Release Flow, which are directly related to release management practices and continuous delivery.",
    "level": "Primary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-11T14:32:32",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and the flaws of traditional deployment models, without addressing Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternative approaches like GitHub Flow and Release Flow, which can be seen as a response to emerging trends in software delivery practices. However, the primary focus is on critiquing existing models rather than a comprehensive analysis of trends in Agile or DevOps.",
    "level": "Tertiary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-03-11T11:10:31",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on technical aspects of branching strategies in software development, specifically critiquing traditional models like branch promotion and advocating for alternatives like GitHub Flow and Release Flow. While it touches on concepts related to agility, such as delivering value and reducing complexity, it lacks a direct discussion of Agile principles or the broader Agile mindset. The emphasis is on practical implementation rather than the philosophical underpinnings of Agile, leading to a lower confidence score in alignment with the Agile Philosophy category.",
    "level": "Quaternary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses modern branching strategies, specifically criticising traditional branch promotion models and advocating for GitHub Flow and Release Flow. It addresses best practices for version control, continuous integration, and deployment, making it highly relevant to the category of Modern Source Control.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-11T14:32:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on Git workflows rather than Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-11T14:32:45",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on Git workflows rather than Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-11T14:32:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models and their impact on software delivery, focusing on GitHub Flow and Release Flow, without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-11T14:32:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching strategies, with no direct relevance to market share or strategies for increasing a product's presence in the market.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on operational tactics rather than long-term strategic goals or business agility.",
    "level": "Quaternary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternative strategies that enhance delivery and integration, which aligns with the principles of Continuous Learning in Agile and DevOps. However, it primarily focuses on technical practices rather than explicitly discussing growth mindset or knowledge sharing.",
    "level": "Tertiary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-11T16:06:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development processes and branching strategies, with no focus on employee engagement, motivation, or team dynamics.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with limited focus on decision-making processes or frameworks related to uncertainty. While it touches on the consequences of certain practices, it does not delve into decision theory principles or methodologies.",
    "level": "Quaternary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-03-10T13:51:02",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for more agile practices like GitHub Flow and Release Flow. While it touches on themes of agility and continuous delivery, it primarily focuses on team-level practices and specific branching strategies without addressing broader organisational implications or frameworks for scaling agility. Therefore, it does not fully align with the category of Enterprise Agility.",
    "level": "Quaternary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-03-11T09:47:03",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and the inefficiencies of branch promotion, which indirectly relates to Lean principles of minimising waste and maximising value. However, it primarily focuses on Agile practices and Git workflows rather than explicitly addressing Lean methodologies or tools. While there are mentions of reducing complexity and improving delivery speed, the core themes of Lean, such as value stream mapping and waste reduction techniques, are not thoroughly explored.",
    "level": "Quaternary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and advocates for more agile practices, which indirectly relates to organisational resilience and adaptability. However, the primary focus is on technical implementations rather than the broader themes of resilience and change management.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-11T14:27:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not provide actionable instructions or insights related to the installation or configuration of tools, software, or platforms.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-11T14:15:18",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 30,
    "final_score": 77.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models in software development, highlighting how they introduce unnecessary complexity and hinder agility. It directly addresses the impact of these models on code quality and delivery processes, aligning well with the core themes of the category. The depth of discussion is substantial, providing detailed alternatives like GitHub Flow and Release Flow, and explaining their benefits in reducing complexity. However, while it touches on complexity, it does not delve deeply into complexity theory or its broader implications, which slightly lowers the alignment score.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses the inefficiencies of traditional branch promotion models and advocates for alternatives that enhance flow efficiency in software delivery, aligning closely with the principles of Flow Efficiency in Lean and Agile methodologies.",
    "level": "Primary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-11T14:27:52",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models without any mention of AI or automation technologies in Agile frameworks.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "Content primarily discusses the flaws of traditional software delivery models and advocates for modern practices like GitHub Flow and Release Flow, which are central to effective product delivery.",
    "level": "Primary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not directly related to Agile Product Management principles or practices.",
    "level": "Quaternary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses alternative branching models and their impact on delivery speed and team efficiency, which relates to learning from past practices. However, the primary focus is on technical implementation rather than a clear exploration of discovery and learning methodologies.",
    "level": "Tertiary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-17T09:00:57",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on linear problem-solving approaches rather than the interconnectedness of systems or holistic analysis. While it touches on organisational dysfunction, it does not delve into Systems Thinking principles or methodologies.",
    "level": "Quaternary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-03-11T13:04:58",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the flaws of traditional branching models in software development, highlighting issues like complexity and unpredictability. However, it primarily focuses on practical software delivery strategies rather than explicitly engaging with complexity science principles or frameworks. While it touches on themes of organisational dysfunction and agility, it lacks a thorough exploration of complexity theory or its application in organisational contexts, which diminishes its alignment with the category.",
    "level": "Quaternary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-11T14:28:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery, without a focus on transparency or accountability within Agile teams.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-11T17:17:49",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content provides a thorough critique of traditional branch promotion models in software development, specifically discussing GitHub Flow and Release Flow as practical alternatives. It directly addresses the application of these methodologies, aligning well with the category's focus on practical techniques and tooling. The depth of discussion is significant, covering the implications of various branching strategies and their impact on team performance and delivery outcomes.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-11T14:28:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies in software development and does not reference any events, presentations, or discussions related to Agile, DevOps, or software engineering conferences.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-03-06T13:23:26",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternatives like GitHub Flow and Release Flow, which enhance agility and responsiveness in software delivery. While it does not explicitly mention 'market adaptability', it aligns with the principles of Agile methodologies and continuous delivery, which are crucial for adapting to market changes. The depth of discussion on improving delivery processes contributes to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-11T14:28:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies in software development, specifically critiquing traditional models and advocating for GitHub Flow and Release Flow, which are directly related to DevOps practices.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-06T14:35:18",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 50,
    "final_score": 83.0,
    "reasoning": "The content focuses extensively on the flaws of traditional branching models in software delivery, advocating for modern practices like GitHub Flow and Release Flow, which are integral to DevOps principles. It discusses continuous integration and delivery, automation, and the cultural shifts necessary for effective DevOps implementation. The depth of discussion is significant, providing detailed critiques and alternatives to outdated practices, thus aligning well with the core themes of DevOps.",
    "level": "Primary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-06T14:35:24",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses branching strategies and models relevant to software delivery, including GitHub Flow and Release Flow, which are associated with Azure DevOps. However, while it mentions Release Flow as developed by Microsoft, the primary focus is on general branching practices rather than specific Azure DevOps functionalities or best practices. The discussion lacks depth in Azure DevOps-specific tools and methodologies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-11T14:28:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models in software development and their implications on delivery processes, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the flaws of traditional software delivery models and advocates for more agile practices like GitHub Flow and Release Flow, which align with the principles of business agility. However, the primary focus is on branching strategies rather than a broader exploration of business agility principles.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-11T14:28:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues with branch promotion models and alternatives like GitHub Flow and Release Flow, focusing on software delivery practices rather than Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models and advocates for continuous integration and delivery practices that enhance value delivery to customers.",
    "level": "Primary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 86.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for modern practices like GitHub Flow and Release Flow, which are central to enhancing agility and efficiency in software delivery. It focuses on continuous integration and delivery, addressing technical methodologies that improve code quality and deployment processes.",
    "level": "Primary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-06T15:41:25",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes more agile practices like GitHub Flow and Release Flow, which align with the principles of organisational agility. However, it primarily focuses on technical aspects of software delivery rather than broader organisational strategies or cultural shifts, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-11T14:28:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of branching models in software development, focusing on Git workflows and their implications for delivery processes. It does not include personal experiences, reflections, or anecdotes related to Agile, Scrum, or DevOps methodologies.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the impact of branching models on team dynamics and delivery processes, highlighting how organisational dysfunction can arise from poor practices. However, the primary focus is on technical aspects of branching strategies rather than a deep exploration of human behaviour or team collaboration.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the impact of branching models on software delivery and team dynamics, highlighting how organisational dysfunction can arise from poor practices. However, the primary focus is on technical practices rather than a comprehensive exploration of sociotechnical interactions.",
    "level": "Tertiary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses branching models and their implications in software delivery, which relates to DevOps practices. However, it primarily focuses on advocating for specific methodologies rather than providing industry news or reviews.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery processes, rather than focusing on metrics, data analysis, or learning methodologies. While it touches on aspects of continuous delivery and team dynamics, these are not the central themes.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 75,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses branching strategies and their impact on software delivery, which relates to the deployment and maintenance stages of the application lifecycle. However, it primarily focuses on branching models rather than a comprehensive view of the entire application lifecycle management process.",
    "level": "Secondary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and advocates for practices that enhance the flow of value in software delivery, aligning with principles of Value Stream Management. However, it primarily focuses on branching strategies rather than a comprehensive discussion of Value Stream Management itself.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-11T14:28:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in version control systems, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-13T21:46:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software delivery models and branching strategies, with no clear focus on Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T08:55:22",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which are relevant to developer productivity and application lifecycle management, but it primarily focuses on branching practices rather than the broader principles of platform engineering.",
    "level": "Tertiary"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-13T21:46:16",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses branching models and their impact on software delivery, without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-13T21:46:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses branching strategies and their impact on software delivery, rather than focusing on the Agile Product Operating Model or its principles.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-13T21:46:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery models and branching strategies, with no clear focus on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:46:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery models and branching strategies, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-07T12:39:20",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which indirectly relate to Agile practices and continuous delivery. However, it lacks explicit references to Scrum, Kanban, Lean, or Agile methodologies, and does not focus on team dynamics or collaboration, which are key aspects of Social Technologies.",
    "level": "Quaternary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:29:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses branching strategies and their impact on software delivery, without a clear focus on Internal Developer Platforms or their implementation.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:29:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses branching strategies in software development and does not address AI integration or applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T10:38:37",
    "ai_confidence": 10.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 9.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, focusing on Git Flow, GitHub Flow, and Release Flow. While it touches on concepts like agility and delivery, it does not explicitly mention Scrum principles, roles, or events, nor does it delve into the Scrum framework or its implementation. Therefore, it aligns very minimally with the Scrum category.",
    "level": "Ignored"
  }
}
