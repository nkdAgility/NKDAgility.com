{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-11T14:28:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not focus on hypothesis formulation, experimentation, or data-driven decision-making, which are central to Hypothesis Driven Development.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-11T14:28:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not focus on hypothesis-driven experimentation or the systematic testing of ideas within Agile workflows.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-11T14:28:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching models in version control systems, which do not align with the principles and practices of entrepreneurship.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-11T14:28:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no clear focus on the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-11T14:28:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not related to Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-11T14:28:51",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses organisational dysfunction related to software delivery processes, highlighting how branching models can reflect and reinforce organisational issues. While it touches on systems thinking in the context of software development, it primarily focuses on specific practices rather than a comprehensive exploration of organisational dynamics.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-11T14:28:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no focus on coaching practices, team development, or facilitation of growth.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-11T14:28:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, without any focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-11T14:29:26",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which are more technical implementation details rather than strategic aspects of product management.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-11T14:29:27",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with limited focus on leadership roles or practices within Agile contexts.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-11T14:29:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on the Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-11T14:29:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not directly related to system configuration. It focuses on development practices rather than the technical aspects of configuring systems.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-11T14:29:32",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 54.0,
    "reasoning": "The content discusses modern software delivery practices and the need for agility in development processes, which aligns with digital transformation themes. However, it primarily focuses on specific branching strategies rather than a broader strategic adoption of digital technologies.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-11T14:29:36",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses software delivery models and practices that enhance the functionality and quality of software, aligning closely with the principles of working software in Agile methodologies.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-11T14:29:38",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for evidence-based alternatives like GitHub Flow and Release Flow, which aligns with structured decision-making principles. However, the primary focus is on software delivery practices rather than explicit decision-making methodologies.",
    "level": "Secondary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-11T14:29:42",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes continuous integration and delivery, which aligns with self-organisation principles. However, it primarily focuses on technical practices rather than explicitly addressing self-organisation as a central theme.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-11T14:29:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on remote working practices, challenges, or solutions within an Agile context.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-11T14:29:46",
    "ai_confidence": 75,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models in software development, emphasising the importance of continuous delivery and reducing waste in the process. While it primarily focuses on branching strategies, it aligns with Lean principles by advocating for faster delivery and minimising complexity, making Lean Product Development a significant theme.",
    "level": "Secondary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-11T14:29:48",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses technical practices and models related to software delivery and branching strategies, with only a brief mention of organisational dysfunction. The focus is not on cultural aspects or their influence on agility and transformation.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-11T14:29:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery processes, with no focus on customer feedback mechanisms or practices.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-11T14:29:52",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses branching strategies and mentions Release Flow, which is associated with Azure DevOps, but the primary focus is on critiquing branch promotion models and advocating for alternative workflows rather than specifically on Azure Repos functionalities.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-11T14:29:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the flaws of traditional branching models in software delivery and advocates for alternative approaches like GitHub Flow and Release Flow. It does not focus on transparency within Agile processes or the importance of clear communication and visibility in team dynamics.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-11T14:29:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and their implications on software delivery, without addressing the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-11T14:29:57",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching models and software delivery processes rather than product strategy, vision, or market analysis.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-11T14:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no direct focus on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-11T14:30:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, with no focus on Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-11T14:30:01",
    "ai_confidence": 85,
    "non_ai_confidence": 50,
    "final_score": 82.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models and advocates for alternative strategies like GitHub Flow and Release Flow, focusing on optimising delivery processes and enhancing team performance within Agile frameworks.",
    "level": "Primary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-11T14:30:03",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternative strategies that enhance delivery speed and reduce complexity, which indirectly relates to innovation in software delivery practices. However, the primary focus is on branching strategies rather than a direct exploration of innovation capabilities or Evidence-Based Management.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-11T14:30:05",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses branching models and their impact on delivery speed and organisational agility, which aligns with Agile principles, but it primarily focuses on Git workflows rather than a specific Agile framework.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-11T14:30:07",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily focuses on branching strategies and their impact on software delivery, rather than discussing scaling agility practices or frameworks. While it touches on organisational dysfunction and the need for continuous delivery, it does not centralise the topic of scaling agility across multiple teams or the organisation as a whole.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-11T14:30:09",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses team dynamics in the context of branching strategies and their impact on delivery speed and efficiency, which relates to collaboration but is primarily focused on technical processes rather than direct team collaboration techniques.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-11T14:30:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on customer satisfaction or related practices.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-11T14:30:12",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models in software development, which aligns with Lean principles of minimising waste and enhancing flow. However, it primarily focuses on Git workflows rather than Lean Thinking itself.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-11T14:30:14",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and their impact on delivery speed, which relates to Cycle Time. However, it primarily focuses on branching strategies rather than directly measuring or analysing Cycle Time.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-11T14:30:16",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses modern branching strategies in software development, focusing on Continuous Integration and Continuous Delivery (CI/CD) practices, and critiques outdated models like branch promotion and Git Flow. It emphasises the importance of clean, efficient workflows that enhance agility and value delivery, aligning closely with key topics in Engineering Practices.",
    "level": "Primary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-11T14:30:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which do not align with the principles of portfolio management or the strategic alignment of projects and initiatives.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-11T14:30:19",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 88.0,
    "reasoning": "Content primarily discusses software development practices, specifically focusing on branching strategies, continuous integration, and delivery models, which are central to effective software engineering.",
    "level": "Primary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-11T14:30:22",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses the flaws of traditional branching models in software development and advocates for best practices in continuous integration and delivery, aligning closely with the principles of engineering excellence.",
    "level": "Primary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-11T14:30:24",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 76.0,
    "reasoning": "The content primarily discusses the inefficiencies of traditional branch promotion models and advocates for practices that enhance the flow of work, such as GitHub Flow and Release Flow, which directly relate to improving throughput in software delivery.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-11T14:30:25",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses branching strategies and their impact on software delivery, which relates to CI/CD practices. However, it does not specifically focus on Azure Pipelines or its configuration, making Azure Pipelines a secondary theme.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-11T14:30:27",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery, with only a brief mention of agility. It does not focus on Agile values or principles as a central theme.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-11T14:30:29",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated tests in the context of GitHub Flow and Release Flow, highlighting their role in continuous integration and delivery. However, the primary focus is on branching strategies rather than automated testing itself.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-11T14:30:31",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not central to Site Reliability Engineering principles. While it touches on aspects of deployment and stability, it does not focus on SRE practices such as monitoring, incident response, or the integration of development and operations.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-11T14:30:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-11T14:30:34",
    "ai_confidence": 45,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies rather than focusing on change management principles or practices. While it touches on organisational dysfunction and the need for improved processes, it does not centralise around change management as a primary topic.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-11T14:30:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in Git, with no focus on mentoring, coaching, or professional development in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-11T14:30:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for continuous integration and delivery, which aligns with the principles of empirical process control. However, it primarily focuses on branching strategies rather than a comprehensive discussion of empirical process control itself.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-11T14:30:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on the flaws of traditional Dev → Test → Staging → Production models rather than validating product ideas through user engagement or feedback.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-11T14:30:41",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no mention of Azure Boards or its functionalities in Agile project management.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-11T14:30:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in development, with no focus on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-11T14:30:44",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "Content primarily discusses modern branching strategies in software development, specifically focusing on GitHub Flow and Release Flow, which are relevant to Agile and DevOps practices.",
    "level": "Primary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-11T14:30:46",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative workflows like GitHub Flow and Release Flow. It does not focus on Test First Development principles, practices, or related testing methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-11T14:30:48",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses the flaws of traditional branching models and advocates for continuous delivery practices, specifically highlighting GitHub Flow and Release Flow as methods to enable frequent releases and faster delivery of value.",
    "level": "Primary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-11T14:30:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no focus on estimation techniques or Agile/Scrum estimation practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-11T14:30:51",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses issues related to branch promotion models and their impact on software delivery, but it primarily focuses on advocating for alternative branching strategies rather than providing specific troubleshooting techniques or methodologies for diagnosing and resolving technical issues.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-11T14:30:52",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses software delivery models and their impact on value delivery, which aligns with the Increment concept, but it primarily focuses on branching strategies rather than the Increment itself.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-11T14:30:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices, specifically branching models in Git, and does not address any aspects related to the Windows operating system.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-11T14:30:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no focus on Sprint Reviews or related Scrum events.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-11T14:30:58",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses the inefficiencies of traditional branch promotion models and their impact on delivery speed, which directly relates to Lead Time. It emphasises the importance of optimising processes to reduce delays in value delivery, aligning well with the key topics of Lead Time.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-11T14:31:00",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models rather than focusing on scaling Agile practices across multiple teams or at an enterprise level.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-11T14:31:02",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 83.0,
    "reasoning": "Content primarily discusses practical problem-solving strategies in software delivery, specifically critiquing traditional branching models and advocating for GitHub Flow and Release Flow as more effective alternatives. It emphasises real-world applications of DevOps principles to enhance collaboration and efficiency, aligning closely with the key topics of pragmatic thinking.",
    "level": "Primary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-11T14:31:04",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for continuous integration and delivery practices that enhance deployment frequency. It emphasises the importance of reducing complexity and increasing the speed of deployments, aligning closely with the principles of optimising deployment intervals in Agile and DevOps.",
    "level": "Primary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-11T14:31:06",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes continuous delivery practices, which align with agile principles. However, it primarily focuses on version control strategies rather than core agile methodologies or frameworks.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-11T14:31:08",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for continuous integration practices, specifically highlighting GitHub Flow and Release Flow as effective strategies for CI. It emphasises the importance of merging changes continuously and automating testing, which are core principles of Continuous Integration.",
    "level": "Primary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-11T14:31:14",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes continuous delivery practices, aligning with Agile principles of value delivery and adaptability. It emphasises the need for a strategic shift in development practices to enhance agility, making Agile Strategy a primary theme.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-11T14:31:16",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for Continuous Delivery practices such as GitHub Flow and Release Flow, emphasising the importance of maintaining a production-ready state and minimising deployment risks.",
    "level": "Primary"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "calculated_at": "2025-02-11T14:31:18",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content critiques traditional software delivery models and promotes more agile practices, but it primarily focuses on branching strategies rather than the principles of decentralised, adaptive, and human-centric organisational design central to BetaCodex.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-11T14:31:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on the flaws of traditional promotion models and advocating for alternatives like GitHub Flow and Release Flow. It does not address cross-functional teams or their characteristics, roles, or benefits within Agile methodologies.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-11T14:31:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models and their impact on software delivery, with no focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-11T14:31:23",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses branching models and software delivery strategies, focusing on technical implementations rather than the interpretation of complexity or decision-making processes in organisational contexts.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-11T14:31:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-11T14:31:27",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the impact of branching models on team agility and delivery, which relates to team performance, but it primarily focuses on technical practices rather than direct team dynamics or collaboration strategies.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-11T14:31:33",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses branching strategies in software development and does not address AI or its integration within Agile methodologies or DevOps practices.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-11T14:31:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues with branch promotion models and alternatives like GitHub Flow and Release Flow, which are not related to Scaling Kanban principles or practices.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-11T14:31:37",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, focusing on Git Flow, GitHub Flow, and Release Flow, without any mention of Behaviour Driven Development principles, practices, or collaboration among stakeholders.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-11T14:31:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery strategies, with no focus on working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-11T14:31:41",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models in software delivery, emphasising the importance of continuous integration and delivery, which aligns with Lean principles of waste reduction and value maximisation. However, it primarily focuses on Git workflows rather than Lean principles themselves.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-11T14:31:42",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses software delivery models and branching strategies, which are related to Agile practices but does not primarily focus on Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-11T14:31:44",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the inefficiencies and risks associated with traditional branch promotion models, which can be seen as a form of technical debt. However, the primary focus is on branching strategies rather than a comprehensive exploration of technical debt management.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-11T14:31:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum Values such as commitment, courage, focus, openness, or respect.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-11T14:31:47",
    "ai_confidence": 45,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, which are more technical in nature. While it touches on themes of agility and organisational dysfunction, these are not the central focus of the discussion.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-11T14:31:49",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous integration and delivery practices, which are related to test automation, but the primary focus is on branching strategies rather than test automation principles or tools.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-11T14:31:51",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum principles, roles, or product development practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-11T14:31:54",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "Content primarily discusses the inefficiencies of traditional branch promotion models and advocates for alternative workflows like GitHub Flow and Release Flow, focusing on enhancing operational efficiency in software delivery.",
    "level": "Primary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-11T14:31:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in version control systems, without a focus on evidence-based management principles or empirical data to inform decision-making.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-11T14:31:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no mention of backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-11T14:31:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-11T14:32:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no direct reference to the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-11T14:32:02",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are more focused on team-level practices rather than large-scale Agile principles or frameworks. While it touches on aspects of agility, it does not address the scaling of Agile methodologies across an organisation.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-11T14:32:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no clear focus on forecasting methods or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-11T14:32:05",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for modern practices like GitHub Flow and Release Flow, which are relevant to technical leadership in guiding teams towards effective software delivery and agile methodologies.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-11T14:32:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on technical implementation details rather than exploring customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-11T14:32:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching strategies, focusing on Git workflows rather than Lean Startup principles such as MVP, Build-Measure-Learn feedback loops, or validated learning.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-11T14:32:11",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery rather than Agile Planning principles or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-11T14:32:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on accountability, ownership, or team dynamics in Agile practices.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-11T14:32:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Minimum Viable Product concepts or related practices.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-11T14:32:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching models and software delivery practices, with no focus on collaboration tools or enhancing communication within Agile teams.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-11T14:32:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-11T14:32:25",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses various deployment strategies, specifically critiquing traditional branch promotion models and advocating for GitHub Flow and Release Flow as effective methodologies for continuous delivery and deployment. It focuses on optimising deployment processes and managing associated risks, aligning closely with the category's definition.",
    "level": "Primary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-11T14:32:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum roles, team dynamics, or collaboration practices.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-11T14:32:28",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 76.0,
    "reasoning": "The content primarily discusses software delivery models, specifically critiquing traditional branch promotion strategies and advocating for modern practices like GitHub Flow and Release Flow. It addresses principles of continuous integration and delivery, which are central to technical mastery in software engineering.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-11T14:32:30",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative strategies like GitHub Flow and Release Flow, which are directly related to release management practices and continuous delivery.",
    "level": "Primary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-11T14:32:32",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and the flaws of traditional deployment models, without addressing Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-11T14:32:35",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternative approaches like GitHub Flow and Release Flow, which can be seen as a response to emerging trends in software delivery practices. However, the primary focus is on critiquing existing models rather than a comprehensive analysis of trends in Agile or DevOps.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-11T14:32:37",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 54.0,
    "reasoning": "The content discusses the flaws of traditional branching models and advocates for continuous delivery practices, which align with Agile principles of delivering value and adaptability. However, it primarily focuses on technical aspects of version control rather than a broader discussion of Agile philosophy.",
    "level": "Secondary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-11T14:32:39",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses modern branching strategies, specifically criticising traditional branch promotion models and advocating for GitHub Flow and Release Flow. It addresses best practices for version control, continuous integration, and deployment, making it highly relevant to the category of Modern Source Control.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-11T14:32:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on Git workflows rather than Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-11T14:32:45",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and models in software development, focusing on Git workflows rather than Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-11T14:32:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models and their impact on software delivery, focusing on GitHub Flow and Release Flow, without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-11T14:32:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching strategies, with no direct relevance to market share or strategies for increasing a product's presence in the market.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-11T14:32:50",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on operational tactics rather than long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-11T14:32:52",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternative strategies that enhance delivery and integration, which aligns with the principles of Continuous Learning in Agile and DevOps. However, it primarily focuses on technical practices rather than explicitly discussing growth mindset or knowledge sharing.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-11T16:06:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development processes and branching strategies, with no focus on employee engagement, motivation, or team dynamics.",
    "level": "Ignored"
  }
}
