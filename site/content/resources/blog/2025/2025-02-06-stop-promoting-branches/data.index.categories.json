{
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily discusses the inefficiencies of traditional branching models in software delivery and advocates for practices that enhance value delivery, aligning closely with Value Stream Management principles.",
    "level": "Secondary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models in software delivery, advocating for continuous integration and delivery practices, which are central to Application Lifecycle Management.",
    "level": "Secondary"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 95,
    "non_ai_confidence": 50,
    "final_score": 82.0,
    "reasoning": "Content primarily discusses the flaws of traditional branching models in software delivery, advocating for modern practices like GitHub Flow and Release Flow, which are central to DevOps principles.",
    "level": "Primary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in version control, rather than focusing on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "ai_confidence": 92,
    "non_ai_confidence": 30,
    "final_score": 73.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models in software development, advocating for simpler and more effective branching strategies like GitHub Flow and Release Flow, which directly relate to code management and complexity reduction.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the flaws of branch promotion models in software development and advocates for alternative strategies, making it focused on software delivery practices rather than miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models and advocates for continuous integration and delivery practices, which are central to scaling agility in software development.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily discusses branching strategies and workflows relevant to Azure DevOps, particularly focusing on GitHub Flow and Release Flow, which are integral to Azure DevOps practices.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the flaws of branch promotion models and advocates for alternative branching strategies, rather than focusing on metrics or learning.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses software development practices and branching models, with no clear focus on products or books.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the flaws of traditional branching models and advocates for continuous delivery practices, which are central to enhancing enterprise agility.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content heavily discusses the flaws of traditional branch promotion models and advocates for alternatives that enhance value delivery through continuous integration and deployment.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses the inefficiencies of branch promotion models and advocates for streamlined workflows that enhance flow efficiency in software delivery.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses software delivery models and their impact on team dynamics and organisational processes, indicating a major but secondary theme related to sociotechnical systems.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses various branching models and their implications on software delivery, which includes elements of learning about effective practices, but the primary focus is on critiquing existing models rather than a clear exploration of discovery and learning.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in version control systems, with no clear focus on organisational psychology.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the flaws of traditional branching models and advocates for practices that enhance agility in software delivery, focusing on continuous integration and delivery.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on optimising software delivery processes by eliminating unnecessary complexity and promoting continuous integration and delivery, which aligns closely with Lean principles.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models in software development and advocates for more efficient practices like GitHub Flow and Release Flow, demonstrating a strong focus on improving technical processes.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, with no clear focus on Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the need for teams to adapt their branching strategies to improve delivery speed and reduce complexity, which aligns with market adaptability principles, but it is primarily focused on software development practices.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the complexities and inefficiencies of traditional branch promotion models in software development, advocating for simpler, more effective alternatives that enhance agility and reduce cognitive load.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the flaws of branch promotion models and advocates for alternative branching strategies, rather than focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on AI or automation.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the flaws of traditional branching models in software delivery and advocates for continuous integration and delivery practices, which are central to Agile methodologies.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no clear focus on transparency or accountability.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses team processes and organisational dysfunction related to branching models, making it a major but secondary theme.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily discusses the flaws of traditional software delivery models and advocates for more efficient practices like GitHub Flow and Release Flow, focusing on improving value delivery.",
    "level": "Secondary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily discusses alternative branching models and their practical implications for software delivery, focusing on GitHub Flow and Release Flow as effective techniques for continuous integration and delivery.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the flaws in traditional software delivery models and promotes alternative approaches, indicating a systemic view of software development processes. However, it primarily focuses on branching strategies rather than a comprehensive systems thinking perspective.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses software development practices and branching strategies, with no clear focus on news or reviews.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with no focus on events or presentations.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and branching models, with no clear focus on personal topics.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the flaws of traditional branching models and promotes alternative strategies that enhance agility and stability in software delivery, indicating a significant focus on improving processes and adapting to change.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues with branch promotion models and alternatives like GitHub Flow and Release Flow, without a clear focus on Kanban principles or practices.",
    "level": "Ignored"
  }
}
