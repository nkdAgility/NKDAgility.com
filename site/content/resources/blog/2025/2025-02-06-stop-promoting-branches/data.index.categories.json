{
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-11T14:27:36",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, with limited focus on decision-making processes or frameworks related to uncertainty. While it touches on the consequences of certain practices, it does not delve into decision theory principles or methodologies.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-11T14:27:37",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 54.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and advocates for continuous integration and delivery practices, which are relevant to fostering a culture of agility. However, it primarily focuses on technical practices rather than broader organisational agility strategies.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-11T14:27:39",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 54.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models in software development, emphasising the importance of continuous delivery and value delivery, which aligns with Lean principles. However, it primarily focuses on Git workflows rather than Lean methodologies directly.",
    "level": "Secondary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-11T14:27:42",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and advocates for more agile practices, which indirectly relates to organisational resilience and adaptability. However, the primary focus is on technical implementations rather than the broader themes of resilience and change management.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-11T14:27:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for alternative branching strategies like GitHub Flow and Release Flow. It does not provide actionable instructions or insights related to the installation or configuration of tools, software, or platforms.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-11T14:27:46",
    "ai_confidence": 85,
    "non_ai_confidence": 30,
    "final_score": 80.0,
    "reasoning": "The content primarily discusses the complexities and inefficiencies of traditional branch promotion models in software development, advocating for simpler, more effective branching strategies like GitHub Flow and Release Flow. It addresses the impact of these models on code quality, delivery speed, and organisational dysfunction, aligning well with the themes of code quality and complexity management.",
    "level": "Primary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-11T14:27:48",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses the inefficiencies of traditional branch promotion models and advocates for alternatives that enhance flow efficiency in software delivery, aligning closely with the principles of Flow Efficiency in Lean and Agile methodologies.",
    "level": "Primary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-11T14:27:52",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models without any mention of AI or automation technologies in Agile frameworks.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-11T14:27:53",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "Content primarily discusses the flaws of traditional software delivery models and advocates for modern practices like GitHub Flow and Release Flow, which are central to effective product delivery.",
    "level": "Primary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-11T14:27:55",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, which are not directly related to Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-11T14:27:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses alternative branching models and their impact on delivery speed and team efficiency, which relates to learning from past practices. However, the primary focus is on technical implementation rather than a clear exploration of discovery and learning methodologies.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-11T14:27:58",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies, focusing on linear problem-solving approaches rather than the interconnectedness of systems or holistic analysis. While it touches on organisational dysfunction, it does not delve into Systems Thinking principles or methodologies.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-11T14:28:00",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses the complexities and inefficiencies of traditional branching models in software development, highlighting the need for adaptive practices like GitHub Flow and Release Flow. While it touches on themes of organisational dysfunction and the importance of agility, it does not primarily focus on complexity science or its principles.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-11T14:28:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery, without a focus on transparency or accountability within Agile teams.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-11T14:28:03",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 84.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models and advocates for practical alternatives like GitHub Flow and Release Flow, focusing on their implementation and benefits in Agile and DevOps practices.",
    "level": "Primary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-11T14:28:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching strategies in software development and does not reference any events, presentations, or discussions related to Agile, DevOps, or software engineering conferences.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-11T14:28:07",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 76.0,
    "reasoning": "The content primarily discusses the flaws of traditional branching models and advocates for GitHub Flow and Release Flow, which enhance agility and responsiveness in software delivery. It emphasises continuous integration and delivery, aligning closely with principles of Agile and DevOps that support market adaptability.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-11T14:28:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies in software development, specifically critiquing traditional models and advocating for GitHub Flow and Release Flow, which are directly related to DevOps practices.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-11T14:28:11",
    "ai_confidence": 92,
    "non_ai_confidence": 50,
    "final_score": 88.0,
    "reasoning": "Content primarily discusses the flaws of traditional branching models in software delivery and advocates for modern practices like GitHub Flow and Release Flow, which are central to DevOps principles of continuous integration and delivery.",
    "level": "Primary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-11T14:28:12",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses branching strategies and CI/CD practices, specifically mentioning Microsoft's Release Flow, which is directly related to Azure DevOps functionalities. It focuses on improving delivery processes, aligning with Azure DevOps principles.",
    "level": "Secondary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-11T14:28:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses branching models in software development and their implications on delivery processes, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-11T14:28:16",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the flaws of traditional software delivery models and advocates for more agile practices like GitHub Flow and Release Flow, which align with the principles of business agility. However, the primary focus is on branching strategies rather than a broader exploration of business agility principles.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-11T14:28:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues with branch promotion models and alternatives like GitHub Flow and Release Flow, focusing on software delivery practices rather than Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-11T14:28:19",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "Content primarily discusses the flaws of traditional branch promotion models and advocates for continuous integration and delivery practices that enhance value delivery to customers.",
    "level": "Primary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-11T14:28:22",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 86.0,
    "reasoning": "The content primarily discusses the flaws of traditional branch promotion models and advocates for modern practices like GitHub Flow and Release Flow, which are central to enhancing agility and efficiency in software delivery. It focuses on continuous integration and delivery, addressing technical methodologies that improve code quality and deployment processes.",
    "level": "Primary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-11T14:28:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses branching strategies and software delivery models, focusing on Git workflows rather than scaling Agile practices across multiple teams or organisational structures.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-11T14:28:25",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "Content primarily discusses the flaws of traditional branching models and advocates for more agile practices like GitHub Flow and Release Flow, which enhance organisational agility by promoting continuous delivery and reducing complexity.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-11T14:28:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of branching models in software development, focusing on Git workflows and their implications for delivery processes. It does not include personal experiences, reflections, or anecdotes related to Agile, Scrum, or DevOps methodologies.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-11T14:28:28",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the impact of branching models on team dynamics and delivery processes, highlighting how organisational dysfunction can arise from poor practices. However, the primary focus is on technical aspects of branching strategies rather than a deep exploration of human behaviour or team collaboration.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-11T14:28:30",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the impact of branching models on software delivery and team dynamics, highlighting how organisational dysfunction can arise from poor practices. However, the primary focus is on technical practices rather than a comprehensive exploration of sociotechnical interactions.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-11T14:28:32",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses branching models and their implications in software delivery, which relates to DevOps practices. However, it primarily focuses on advocating for specific methodologies rather than providing industry news or reviews.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-11T14:28:33",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses branching strategies and their impact on software delivery processes, rather than focusing on metrics, data analysis, or learning methodologies. While it touches on aspects of continuous delivery and team dynamics, these are not the central themes.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-11T14:28:36",
    "ai_confidence": 75,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses branching strategies and their impact on software delivery, which relates to the deployment and maintenance stages of the application lifecycle. However, it primarily focuses on branching models rather than a comprehensive view of the entire application lifecycle management process.",
    "level": "Secondary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-11T14:28:38",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "The content discusses the inefficiencies of traditional branching models and advocates for practices that enhance the flow of value in software delivery, aligning with principles of Value Stream Management. However, it primarily focuses on branching strategies rather than a comprehensive discussion of Value Stream Management itself.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-11T14:28:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software delivery models and branching strategies in version control systems, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  }
}
