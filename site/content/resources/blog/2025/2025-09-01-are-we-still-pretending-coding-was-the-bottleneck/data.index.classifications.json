{
  "Tenet": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Tenet",
    "calculated_at": "2025-06-06T14:13:06",
    "ai_confidence": 91.7,
    "ai_mentions": 8.7,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly references and deeply explores core tenets of Agile, DevOps, and Lean, such as systems thinking (First Way of DevOps), flow efficiency, autonomous teams, built-in quality, and disciplined engineering practices. It critiques outdated practices and advocates for actionable, prescriptive changes aligned with tenets, not just values. The discussion is thorough, focused, and targets practitioners and leaders in software delivery. No penalties apply as the tone is constructive and current.",
    "reasoning_summary": "This content strongly aligns with the 'Tenet' category, focusing on actionable guiding principles like systems thinking, flow, autonomy, and built-in quality in DevOps and Agile. It offers a deep, prescriptive discussion for practitioners, making it a highly relevant fit.",
    "level": "Primary"
  },
  "Strategy": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Strategy",
    "calculated_at": "2025-06-06T14:13:14",
    "ai_confidence": 77.6,
    "ai_mentions": 4.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.3,
    "ai_intent": 8.0,
    "ai_audience": 7.6,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content critiques the misconception that coding is the main bottleneck in software delivery, emphasizing system flow, team practices, and organizational culture as true constraints. It references the First Way of DevOps (Systems Thinking), value stream mapping, and the need for strategic changes in how teams operate. While it doesn't explicitly use the word 'strategy' often, its core message is about shifting organizational focus from tactical to strategic levers—aligning with the category. The discussion is thorough, targeting leaders and change agents, and maintains a high signal-to-noise ratio. However, it leans more on critique and high-level guidance than on explicit strategic frameworks or planning, which slightly lowers the direct mentions and depth scores.",
    "reasoning_summary": "This content strongly aligns with the Strategy category by challenging tactical misconceptions and advocating for systemic, strategic change in software delivery. It addresses organizational alignment, flow, and culture, making it highly relevant for strategic audiences.",
    "level": "Secondary"
  },
  "Principle": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Principle",
    "calculated_at": "2025-06-06T14:13:21",
    "ai_confidence": 92.7,
    "ai_mentions": 8.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content directly references foundational DevOps principles, especially Systems Thinking (the First Way of DevOps), and repeatedly emphasizes actionable principles such as flow, value stream mapping, autonomous teams, built-in quality, and disciplined engineering practices. It critiques superficial interpretations of DevOps and coding as the bottleneck, instead advocating for principle-driven change. The discussion is deep, practical, and targeted at practitioners and leaders in Agile/DevOps contexts. There is minimal off-topic content, and the focus remains on how principles—not tools or coding—drive effective delivery. No penalties were applied, as the content is current, constructive, and fully aligned with the category definition.",
    "reasoning_summary": "This content strongly aligns with the 'Principle' category, focusing on actionable DevOps and Agile principles like Systems Thinking, flow, autonomy, and built-in quality. It critiques common misconceptions and emphasizes how these principles—not coding—drive effective software delivery. The discussion is deep, relevant, and highly targeted to practitioners.",
    "level": "Primary"
  },
  "Artifact": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Artifact",
    "calculated_at": "2025-06-06T14:13:26",
    "ai_confidence": 23.85,
    "ai_mentions": 1.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.2,
    "ai_audience": 7.1,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, team practices, and organizational culture as bottlenecks in software delivery, not on artifacts as formal representations of work. While there are brief mentions of 'Definition of Done' and test-first development, these are referenced as practices or principles rather than as artifacts themselves. The main themes are about systemic dysfunctions, DevOps principles, and the impact of AI, not the structure, purpose, or management of artifacts. The audience is practitioners in Agile/DevOps, which aligns, but the content is only tangentially related to artifacts and does not explore them in depth.",
    "reasoning_summary": "This content is primarily about systemic bottlenecks and DevOps principles, with only passing references to artifacts like 'Definition of Done.' It does not focus on artifacts' structure, role, or management, so alignment with the 'Artifact' category is low.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Capability",
    "calculated_at": "2025-06-06T14:13:32",
    "ai_confidence": 87.7,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.7,
    "ai_audience": 8.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content strongly aligns with the Capability category by emphasizing enduring, systemic factors like systems thinking, flow, team autonomy, and embedding quality into processes. It critiques superficial fixes (e.g., focusing on coding or tools) and instead highlights the need for organizational and cultural change—core to capability development. While it doesn't use the term 'capability' directly, it discusses the characteristics, development, and impact of capabilities (e.g., autonomous teams, built-in quality, disciplined engineering practices) in Agile and DevOps contexts. The discussion is deep and targeted at practitioners and leaders interested in systemic improvement, with minimal off-topic content. No penalties were applied as the content is current, constructive, and fully aligned.",
    "reasoning_summary": "This content is highly relevant to Capability, focusing on systemic, enduring competencies like systems thinking, flow, and team autonomy. It critiques surface-level fixes and emphasizes embedding quality and adaptability, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Ethos": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Ethos",
    "calculated_at": "2025-06-06T14:13:39",
    "ai_confidence": 87.7,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.7,
    "ai_audience": 8.2,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly challenges superficial interpretations of software delivery bottlenecks, emphasizing that system flow, disciplined practices, and organizational culture—not coding—are the real constraints. It references the First Way of DevOps (Systems Thinking), critiques ritualistic or tool-focused approaches, and highlights the need for accountability, autonomy, and quality as system responsibilities. The discussion is deeply aligned with Ethos, focusing on foundational beliefs and convictions that drive sustainable delivery and authentic transformation. While 'ethos' is not named explicitly, the content's main themes, depth, and intent are strongly aligned with the category. The audience is practitioners and leaders in Agile/DevOps contexts. No penalties are warranted as the content is current, serious, and not satirical.",
    "reasoning_summary": "This content robustly aligns with the Ethos category, critiquing surface-level practices and emphasizing foundational system beliefs, accountability, and authentic delivery. It explores how core convictions—not tools or rituals—drive sustainable transformation, making it highly relevant to Ethos.",
    "level": "Primary"
  },
  "Philosophy": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Philosophy",
    "calculated_at": "2025-06-06T14:13:45",
    "ai_confidence": 87.2,
    "ai_mentions": 7.6,
    "ai_alignment": 9.2,
    "ai_depth": 8.9,
    "ai_intent": 8.3,
    "ai_audience": 8.0,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content directly references the First Way of DevOps (Systems Thinking), critiques common misinterpretations of DevOps, and emphasizes foundational beliefs about flow, system responsibility, and culture over technical practices. It explores the philosophical underpinnings of delivery models, team autonomy, and quality as a system property. While it includes some references to practices (e.g., test-first, observability), these are used to illustrate philosophical points rather than provide procedural guidance. The main intent is to challenge prevailing mindsets and refocus on the 'why' behind DevOps and Agile, targeting leaders and strategists. There are no outdated references or contradictory tones, and the content is highly focused on philosophical themes.",
    "reasoning_summary": "This content strongly aligns with the Philosophy category, focusing on DevOps' foundational beliefs, systems thinking, and cultural change. It critiques surface-level practice adoption and emphasizes the 'why' behind delivery models, making it highly relevant for philosophical discussion.",
    "level": "Primary"
  },
  "Practice": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Practice",
    "calculated_at": "2025-06-06T14:13:50",
    "ai_confidence": 91.7,
    "ai_mentions": 8.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.1,
    "ai_audience": 8.8,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly discusses actionable practices such as Test-First development, observability, Definition of Done, autonomous teams, and value stream mapping. It critiques common anti-patterns (handoffs, QA as a separate team) and emphasizes the importance of disciplined engineering practices. The main theme is the need for repeatable, effective team practices to improve flow and delivery, aligning closely with the Practice category. The discussion is deep, practical, and targets practitioners, with minimal off-topic content. No penalties were applied as the content is current, constructive, and not satirical.",
    "reasoning_summary": "This content strongly aligns with the Practice category, focusing on actionable team techniques like Test-First development, value stream mapping, and building quality in. It offers practical guidance for practitioners, emphasizing repeatable habits that improve delivery and collaboration.",
    "level": "Primary"
  },
  "First Principal": {
    "resourceId": "IO5EHjiHhTf",
    "category": "First Principal",
    "calculated_at": "2025-06-06T14:14:02",
    "ai_confidence": 67.7,
    "ai_mentions": 3.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content references the 'First Way of DevOps' (Systems Thinking) and critiques misconceptions about bottlenecks in software delivery, aligning with the identification and application of foundational constraints. However, it does not explicitly discuss 'first principles' as irreducible truths, nor does it deeply distinguish them from derived practices or heuristics. The discussion is conceptually close—emphasizing immutable system constraints and the consequences of ignoring them—but lacks explicit, thorough exploration of first principles as defined. The audience and intent are well-aligned, focusing on practitioners and system-level thinking. The signal is strong, with minimal off-topic content, but the lack of direct, explicit first principle language and some reliance on derived practices (e.g., 'Test-First', 'Definition of Done') lower the direct mention and depth scores.",
    "reasoning_summary": "This content strongly aligns with the spirit of first principles by emphasizing system-level constraints and immutable truths in DevOps, but it stops short of explicitly identifying or dissecting first principles as such. Its focus and audience are well-matched to the category.",
    "level": "Secondary"
  },
  "Framework": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Framework",
    "calculated_at": "2025-06-06T14:14:07",
    "ai_confidence": 41.35,
    "ai_mentions": 2.2,
    "ai_alignment": 5.7,
    "ai_depth": 5.9,
    "ai_intent": 4.8,
    "ai_audience": 6.1,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content references the First Way of DevOps (Systems Thinking) and discusses systemic issues in software delivery, which are foundational to frameworks like DevOps and Lean. However, it does not explicitly discuss frameworks, their principles, or implementation strategies. The focus is on critiquing misconceptions about bottlenecks and advocating for systemic improvements, not on structured methodologies or adapting frameworks. There are indirect references to framework-aligned practices (e.g., Definition of Done, autonomous teams), but the main thrust is cultural and systemic critique rather than framework exploration. Thus, while there is some conceptual overlap, the content does not deeply or directly engage with the Framework category as defined.",
    "reasoning_summary": "This content critiques common misconceptions in software delivery and highlights systemic issues, referencing DevOps principles. While it touches on framework-aligned practices, it does not directly discuss or explore frameworks, their principles, or implementation strategies, resulting in only moderate alignment with the Framework category.",
    "level": "Tertiary"
  },
  "Method": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Method",
    "calculated_at": "2025-06-06T14:14:13",
    "ai_confidence": 81.6,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.4,
    "ai_intent": 8.1,
    "ai_audience": 8.6,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly references several method-related concepts, such as Systems Thinking (the First Way of DevOps), value stream mapping, test-first development, observability, Definition of Done, and autonomous teams. It critiques common anti-patterns (handoffs, QA as a separate team) and advocates for disciplined engineering practices, all of which are procedural and method-focused. The discussion is thorough, with actionable steps and clear alignment to methodical approaches in Agile and DevOps. While the term 'method' is not always used explicitly, the content's main thrust is about how structured practices (methods) are the real levers for improvement, not just tools or coding. The audience is practitioners and leaders in software delivery, matching the category. There is minimal off-topic content, and no penalties are warranted.",
    "reasoning_summary": "This content strongly aligns with the 'Method' category, focusing on structured practices like Systems Thinking, test-first development, and value stream mapping. It thoroughly discusses how these methods address real bottlenecks in software delivery, making it highly relevant for practitioners seeking procedural improvement.",
    "level": "Primary"
  },
  "Accountability": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Accountability",
    "calculated_at": "2025-06-06T14:13:56",
    "ai_confidence": 67.35,
    "ai_mentions": 3.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.3,
    "ai_intent": 6.8,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content focuses on systemic issues in software delivery, emphasizing flow, system responsibility, and outcome ownership. It references 'autonomous teams accountable for outcomes, not output,' and critiques models that obscure accountability (e.g., separate QA teams). However, explicit direct mentions of 'accountability' are limited, and the main thrust is broader than just accountability, touching on DevOps principles, system flow, and culture. The discussion aligns with the category by highlighting how clear accountabilities (e.g., team autonomy, outcome ownership) are essential for effective delivery, but accountability is not the sole or central theme. The audience is practitioners and leaders in Agile/DevOps contexts, matching the category. No penalties were applied as the content is current and not contradictory.",
    "reasoning_summary": "The content aligns with the Accountability category by stressing outcome ownership, system responsibility, and the need for autonomous teams. While accountability is not the main focus, the discussion supports its importance in modern work systems, especially in Agile and DevOps environments.",
    "level": "Secondary"
  },
  "Model": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Model",
    "calculated_at": "2025-06-06T14:14:17",
    "ai_confidence": 87.7,
    "ai_mentions": 7.8,
    "ai_alignment": 9.4,
    "ai_depth": 8.9,
    "ai_intent": 9.2,
    "ai_audience": 8.7,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly references the First Way of DevOps (Systems Thinking), discusses value stream mapping, and critiques delivery models—core conceptual models in Agile and DevOps. It explores how these models reveal true bottlenecks, not coding, and how AI exposes systemic issues. The discussion is deep, with practical examples and clear alignment to model-based thinking. The audience is practitioners and leaders in Agile/DevOps contexts. No penalties apply as the content is current, constructive, and model-focused.",
    "reasoning_summary": "This content strongly aligns with the 'Model' category by focusing on the First Way of DevOps, value stream mapping, and systems thinking. It uses these models to analyze bottlenecks in software delivery, making it highly relevant for Agile and DevOps practitioners.",
    "level": "Primary"
  },
  "Tool": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Tool",
    "calculated_at": "2025-06-06T14:14:22",
    "ai_confidence": 27.85,
    "ai_mentions": 2.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.2,
    "ai_intent": 2.8,
    "ai_audience": 7.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content references tools (AI, code-writing agents, pipelines, automation) but primarily to argue that tools are not the main constraint in software delivery. The main focus is on system flow, team practices, and organizational culture, not on the overview, integration, or best practices of tools. While there are brief mentions of tools and their misuse, the discussion is conceptual and critical of overemphasizing tools, rather than exploring their functionality or impact. The audience is aligned (practitioners in Agile/DevOps), and the content is focused, but the fit with the 'Tool' category is weak due to lack of depth and direct discussion.",
    "reasoning_summary": "This content critiques the overemphasis on tools in software delivery, focusing instead on systemic issues like flow and culture. While tools are mentioned, the discussion does not align with the 'Tool' category’s intent of exploring tool functionality, integration, or best practices.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Discipline",
    "calculated_at": "2025-06-06T14:14:28",
    "ai_confidence": 87.6,
    "ai_mentions": 7.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.5,
    "ai_audience": 8.1,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly references 'disciplined engineering practices' and repeatedly discusses systemic application of DevOps principles, especially the First Way (Systems Thinking). It critiques superficial tool-focused approaches and emphasizes the importance of shared principles, value stream mapping, and continuous improvement—core to the definition of Discipline. The discussion is deep, exploring how organizational culture, flow, and governance structures impact performance, and how AI exposes weaknesses in undisciplined systems. The audience is practitioners and leaders interested in maturing their work systems, aligning well with the category. No penalties are warranted as the content is current, constructive, and not satirical.",
    "reasoning_summary": "This content strongly aligns with the 'Discipline' category, focusing on systemic DevOps principles, disciplined engineering practices, and organizational maturity. It critiques tool-centric mindsets and highlights the importance of shared principles and continuous improvement in modern work systems.",
    "level": "Primary"
  },
  "Observability": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Observability",
    "calculated_at": "2025-06-06T14:14:33",
    "ai_confidence": 67.6,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content directly mentions 'observability' once, advocating for it as a core engineering practice, and references related concepts like feedback, flow, and operational readiness. The main focus is on system bottlenecks, DevOps principles, and the impact of AI on delivery models, with observability positioned as one of several key practices. The discussion aligns conceptually with observability, especially in the context of Agile and DevOps, but it is not the central theme. The depth of discussion on observability is moderate, as it is included in a list of essential practices rather than explored in detail. The intent is to inform practitioners about systemic issues in software delivery, which matches the category's audience. The content is focused and relevant, with minimal off-topic material.",
    "reasoning_summary": "Observability is discussed as an essential practice for modern software delivery, especially in Agile and DevOps contexts, but it is not the main focus. The content aligns well with the category's audience and intent, offering moderate depth and strong conceptual relevance.",
    "level": "Secondary"
  },
  "Kanban": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Kanban",
    "calculated_at": "2025-06-06T14:14:40",
    "ai_confidence": 34.85,
    "ai_mentions": 0.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 3.2,
    "ai_audience": 7.1,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on system flow, bottlenecks, and value stream mapping—concepts that overlap with Kanban principles. However, Kanban is never directly mentioned, and the discussion is framed through DevOps and general systems thinking rather than Kanban-specific practices (e.g., WIP limits, Kanban boards, Kanban metrics). The depth and alignment are moderate, as the content addresses flow and continuous improvement but not in a Kanban-centric way. The audience is relevant (practitioners interested in flow and delivery), and the signal is fairly high, but the lack of explicit Kanban context limits confidence.",
    "reasoning_summary": "While the content discusses flow, bottlenecks, and value stream mapping—areas relevant to Kanban—it does not directly reference Kanban or its specific practices. The alignment is partial, with a stronger focus on DevOps and systems thinking than on Kanban methodology.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Leadership",
    "calculated_at": "2025-06-06T14:14:48",
    "ai_confidence": 62.7,
    "ai_mentions": 2.2,
    "ai_alignment": 7.6,
    "ai_depth": 6.8,
    "ai_intent": 6.3,
    "ai_audience": 7.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content critiques common misconceptions in software delivery, emphasizing system flow, team practices, and organizational culture over coding as the main constraint. While it doesn't directly discuss leadership or use the term, it strongly aligns with leadership themes such as fostering autonomy, accountability, and cultural change. The depth is moderate, focusing on systemic issues and advocating for disciplined practices, but it stops short of explicitly addressing leadership roles, frameworks, or models. The intent is to provoke a shift in mindset, which is relevant to leaders and change agents, and the audience is likely practitioners and those influencing organizational practices. The content is focused, with minimal off-topic material, but lacks direct leadership terminology or frameworks.",
    "reasoning_summary": "The content aligns with leadership by challenging organizational culture and advocating for systemic change, autonomy, and accountability. While it doesn't explicitly discuss leadership, its focus on practices and mindsets relevant to leaders in Agile and DevOps contexts makes it moderately relevant to the category.",
    "level": "Secondary"
  },
  "Product Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Management",
    "calculated_at": "2025-06-06T14:14:53",
    "ai_confidence": 41.7,
    "ai_mentions": 1.2,
    "ai_alignment": 4.8,
    "ai_depth": 4.5,
    "ai_intent": 4.2,
    "ai_audience": 4.0,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps principles, systems thinking, and team practices. While it critiques traditional workflows and highlights the importance of flow, autonomy, and quality, it does not directly address product management's strategic alignment, customer needs, or business objectives. There are no explicit references to product management frameworks, prioritization, or metrics. The audience is more technical (engineering, DevOps) than product-focused, and the discussion, though relevant to organizational improvement, is not centered on product management as defined.",
    "reasoning_summary": "This content critiques delivery bottlenecks and advocates for systems thinking and DevOps, but it does not directly address product management's strategic concerns, frameworks, or audience. Its relevance to product management is tangential rather than central.",
    "level": "Tertiary"
  },
  "Engineering Excellence": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Engineering Excellence",
    "calculated_at": "2025-06-06T14:14:58",
    "ai_confidence": 91.7,
    "ai_mentions": 7.2,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.0,
    "ai_audience": 8.7,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses core themes of Engineering Excellence, such as disciplined engineering practices, test-first development, observability, and quality built into the process. It critiques superficial approaches to DevOps and emphasizes systems thinking, value stream mapping, and the importance of flow—key aspects of high engineering standards. The discussion is deep, with practical examples and actionable recommendations, targeting technical practitioners and leaders. While the term 'engineering excellence' is not explicitly named, the conceptual alignment and depth are very strong, and the focus remains tightly on software development practices and their improvement. No penalties are warranted as the content is current, constructive, and fully aligned with the category.",
    "reasoning_summary": "This content strongly aligns with Engineering Excellence, focusing on disciplined practices, systems thinking, and quality as a system responsibility. It offers deep, actionable insights for technical audiences, emphasizing continuous improvement and best practices in software development.",
    "level": "Primary"
  },
  "Product Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Development",
    "calculated_at": "2025-06-06T14:15:02",
    "ai_confidence": 91.7,
    "ai_mentions": 7.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses systemic issues in software delivery, emphasizing flow, team practices, and organizational culture over coding as the bottleneck. It references DevOps principles (notably the First Way: Systems Thinking), value stream mapping, and the integration of quality into the product lifecycle. The discussion is conceptually aligned with product development, focusing on iterative improvement, cross-functional teams, and evidence-based practices. The depth is strong, with detailed examples of dysfunctions and recommended practices (test-first, observability, autonomous teams). The intent is to challenge misconceptions and advocate for modern, customer-centric, and iterative product development approaches. The audience is practitioners and leaders in product delivery, and the content is highly focused with minimal off-topic material. No penalties were applied as the content is current, constructive, and not satirical or outdated.",
    "reasoning_summary": "This content is highly relevant to Product Development, focusing on systemic flow, team practices, and DevOps principles. It advocates for iterative improvement, quality integration, and organizational alignment, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Technical Leadership": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Technical Leadership",
    "calculated_at": "2025-06-06T14:15:08",
    "ai_confidence": 87.7,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 9.0,
    "ai_intent": 8.7,
    "ai_audience": 8.9,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly addresses systemic issues in software delivery, emphasizing systems thinking, value stream mapping, and the importance of disciplined engineering practices—core concerns of technical leadership. It critiques outdated practices (e.g., QA as a separate team, focusing on coding as the bottleneck) and advocates for team autonomy, flow, and continuous improvement, all central to agile technical leadership. While the term 'technical leadership' is not explicitly named, the discussion is conceptually and practically aligned with the category, targeting practitioners and leaders responsible for team practices and delivery models. The depth is strong, with actionable recommendations and a clear focus on leadership-driven change. No penalties were applied as the content is current, constructive, and fully within scope.",
    "reasoning_summary": "This content strongly aligns with Technical Leadership, focusing on systems thinking, team autonomy, and agile best practices. It addresses leaders and practitioners, offering deep insights into improving delivery models and fostering a culture of continuous improvement.",
    "level": "Primary"
  },
  "Scrum": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Scrum",
    "calculated_at": "2025-06-06T14:15:15",
    "ai_confidence": 23.6,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks in software delivery, with repeated references to the First Way of DevOps and value stream mapping. While it touches on concepts like team autonomy and disciplined engineering practices, it does not directly mention Scrum, its roles, events, or artifacts. The main themes align more with DevOps and general agile thinking than with Scrum specifically. The audience (software delivery professionals) overlaps with Scrum's, but the content's intent and depth are not centered on Scrum. There is minimal direct mention or exploration of Scrum principles, practices, or frameworks.",
    "reasoning_summary": "This content centers on DevOps, system flow, and organizational bottlenecks, with little direct reference to Scrum. While some agile concepts overlap, the discussion does not focus on Scrum roles, events, or artifacts, making its fit with the Scrum category weak.",
    "level": "Ignored"
  },
  "DevOps": {
    "resourceId": "IO5EHjiHhTf",
    "category": "DevOps",
    "calculated_at": "2025-06-06T14:15:19",
    "ai_confidence": 97.2,
    "ai_mentions": 9.7,
    "ai_alignment": 9.9,
    "ai_depth": 9.8,
    "ai_intent": 9.6,
    "ai_audience": 9.3,
    "ai_signal": 9.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 97.0,
    "reasoning": "The content directly references DevOps multiple times, including explicit mention of the 'First Way of DevOps' and its core principle of Systems Thinking. It deeply explores DevOps concepts such as flow efficiency, value stream mapping, shared accountability, automation, observability, and the integration of quality early in the lifecycle. The main intent is to clarify misconceptions about bottlenecks in software delivery, aligning closely with DevOps philosophy. The audience is practitioners and leaders interested in DevOps transformation. The content is highly focused, with minimal off-topic material, and no outdated or contradictory elements were found.",
    "reasoning_summary": "This content is highly relevant to DevOps, thoroughly discussing its principles, cultural shifts, and practices. It targets practitioners and leaders, emphasizing flow, systems thinking, and shared accountability, making it an excellent fit for the DevOps category.",
    "level": "Primary"
  },
  "Lean": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Lean",
    "calculated_at": "2025-06-06T14:15:23",
    "ai_confidence": 67.6,
    "ai_mentions": 2.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.3,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content does not directly mention Lean or its terminology, resulting in a low Direct Mentions score. However, it strongly aligns with Lean principles: it critiques focusing on coding as the bottleneck and instead emphasizes system flow, value stream mapping, and the elimination of wasteful practices—core Lean concepts. The discussion is deep, referencing systemic issues, value stream mapping, and continuous improvement, though it frames these through DevOps and systems thinking rather than Lean explicitly. The intent is to shift thinking toward systemic improvement, which fits Lean's purpose. The audience is practitioners and leaders interested in delivery optimization, matching Lean's typical audience. The content is focused and relevant, with little off-topic material. No penalties were applied as the content is current and not critical of Lean itself.",
    "reasoning_summary": "While Lean is not named, the content’s focus on system flow, value stream mapping, and eliminating non-value-adding activities closely aligns with Lean principles. The discussion is substantial and relevant for Lean audiences, though framed through DevOps and systems thinking rather than Lean terminology.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Azure DevOps",
    "calculated_at": "2025-06-06T14:15:30",
    "ai_confidence": 7.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 1.0,
    "ai_audience": 2.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not mention Azure DevOps at all, nor does it discuss any Azure DevOps-specific tools, practices, or methodologies. Its focus is on general DevOps principles, system flow, and the impact of AI on software delivery bottlenecks. While it references DevOps concepts (e.g., the First Way, systems thinking, value stream mapping), these are not tied to Azure DevOps as a platform or suite. The audience is broadly relevant to DevOps practitioners, but not specifically Azure DevOps users. There is no discussion of Azure DevOps services, features, or best practices, and the signal is entirely about general DevOps and organisational culture, not Azure DevOps.",
    "reasoning_summary": "This content is a general critique of software delivery bottlenecks and DevOps culture, with no mention or discussion of Azure DevOps tools, practices, or methodologies. It does not fit the Azure DevOps category.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Working Agreements",
    "calculated_at": "2025-06-06T14:15:34",
    "ai_confidence": 23.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on systemic issues in software delivery, emphasizing DevOps principles, system flow, and team practices. While it discusses team autonomy, accountability, and disciplined engineering practices, it does not directly mention or deeply explore working agreements as defined. There are no explicit references to the creation, adaptation, or review of team norms or agreements. The audience is relevant (practitioners, leaders), and the content is focused, but the alignment and depth with the 'Working Agreements' category are low.",
    "reasoning_summary": "This content addresses systemic team practices and DevOps culture but does not directly discuss working agreements or their formation. Its relevance to the category is tangential, focusing more on delivery models and engineering discipline than on explicit team norms or agreements.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Sprint Review",
    "calculated_at": "2025-06-06T14:15:39",
    "ai_confidence": 2.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content does not mention Sprint Review directly or indirectly. Its focus is on system flow, DevOps principles, and organizational bottlenecks, not on Scrum events or the Sprint Review process. There are no references to presenting increments, stakeholder feedback, or adapting the product backlog. The audience is broadly practitioners in software delivery, not specifically Scrum teams or those interested in Sprint Review. The signal-to-noise ratio is low for this category, as nearly all content is off-topic.",
    "reasoning_summary": "This content is unrelated to Sprint Review, focusing instead on DevOps, system flow, and organizational bottlenecks. It neither discusses nor aligns with the Sprint Review event or its key topics.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Market Share",
    "calculated_at": "2025-06-06T14:15:42",
    "ai_confidence": 2.35,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 2.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses on software delivery bottlenecks, DevOps principles, and the impact of AI on development practices. There are no direct or indirect references to market share, competitive positioning, or strategies for increasing market presence. The main audience is technical practitioners interested in process improvement, not market strategists. The discussion is deep regarding system flow and team practices but entirely unrelated to market share. No penalties were applied as the content is current and not satirical or critical of the category itself.",
    "reasoning_summary": "This content is about software delivery bottlenecks, DevOps, and AI's impact on engineering practices. It does not address market share, competitive strategy, or related topics, making it a poor fit for the 'Market Share' category.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Technical Debt",
    "calculated_at": "2025-06-06T14:15:47",
    "ai_confidence": 13.45,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.6,
    "ai_intent": 1.3,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks, arguing that coding is not the main constraint in software delivery. It discusses AI's impact on development practices and advocates for disciplined engineering, but does not mention or explore technical debt, its management, or its implications. There are no direct or indirect references to technical debt, its types, measurement, or remediation. The audience is technical, but the discussion is not aligned with the technical debt category.",
    "reasoning_summary": "This content centers on system flow, DevOps, and organizational bottlenecks, not technical debt. It does not discuss the accumulation, management, or impact of technical debt, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Backlog",
    "calculated_at": "2025-06-06T14:15:50",
    "ai_confidence": 13.25,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.0,
    "ai_intent": 1.2,
    "ai_audience": 4.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content does not mention the Product Backlog directly or indirectly. Its focus is on system flow, DevOps principles, and organizational bottlenecks, not on backlog management, refinement, or prioritization. While it addresses Agile and delivery models, it does not discuss backlog concepts, Product Owner roles, or related tools. The audience may overlap with those interested in Agile, but the content is not relevant to Product Backlog as defined.",
    "reasoning_summary": "This content focuses on system flow, DevOps, and organizational bottlenecks, with no discussion of Product Backlog concepts, practices, or roles. It does not align with the Product Backlog category.",
    "level": "Ignored"
  },
  "Working Software": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Working Software",
    "calculated_at": "2025-06-06T14:15:55",
    "ai_confidence": 56.85,
    "ai_mentions": 2.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.3,
    "ai_intent": 5.8,
    "ai_audience": 7.1,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content critiques the misconception that coding is the main bottleneck in software delivery, emphasizing system flow, team practices, and organizational culture. While it references concepts like 'Definition of Done,' 'Test-First,' and 'working software,' these are discussed as part of broader delivery system improvements rather than focusing directly on working software as an artifact. The main thrust is about systemic issues, not the creation or characteristics of working software itself. The audience is practitioners and leaders in Agile/DevOps, and the content is relevant but only moderately aligned with the category, as working software is referenced but not deeply explored as the central topic.",
    "reasoning_summary": "This content addresses delivery bottlenecks and system flow in Agile/DevOps, mentioning working software and related practices but focusing more on organizational and process issues than on working software as a core artifact. Its relevance is moderate but not central to the category.",
    "level": "Tertiary"
  },
  "Lean Thinking": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Lean Thinking",
    "calculated_at": "2025-06-06T14:16:01",
    "ai_confidence": 74.6,
    "ai_mentions": 2.7,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 8.2,
    "ai_audience": 7.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content strongly aligns with Lean Thinking principles, especially in its focus on system flow, value stream mapping, and the elimination of wasteful practices (e.g., unnecessary handoffs, bottlenecks outside coding). It references value stream mapping and systemic constraints, which are core Lean topics, and advocates for continuous improvement and building quality in. However, it does not explicitly mention 'Lean Thinking' or Lean-specific terminology (e.g., Muda, Kaizen, 5S), instead framing its arguments through DevOps and systems thinking. The depth is substantial, with practical examples and actionable advice, but the lack of direct Lean vocabulary slightly lowers the direct mentions score. The audience is practitioners and leaders in software delivery, matching Lean's typical audience. No penalties were applied as the content is current, constructive, and not critical of Lean itself.",
    "reasoning_summary": "This content is highly relevant to Lean Thinking, emphasizing system flow, value stream mapping, and the elimination of non-coding bottlenecks. While it doesn't use Lean-specific terms, its focus on systemic improvement and waste reduction closely aligns with Lean principles.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Revenue per Employee",
    "calculated_at": "2025-06-06T14:16:06",
    "ai_confidence": 7.2,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 0.7,
    "ai_audience": 1.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, challenging the idea that coding is the main constraint. While it discusses workforce efficiency, flow, and organisational practices, it never mentions or analyzes Revenue per Employee as a metric, nor does it use empirical financial data or discuss financial observability. The alignment is minimal, as the themes are tangentially related to efficiency but not to the specific metric or its application. No penalties were applied, as the content is current and not critical of the metric itself.",
    "reasoning_summary": "This content addresses organisational bottlenecks and efficiency in software delivery but does not mention or analyze Revenue per Employee as a metric. Its focus is on system flow and DevOps practices, making its relevance to the category minimal.",
    "level": "Ignored"
  },
  "Mentoring": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Mentoring",
    "calculated_at": "2025-06-06T14:16:11",
    "ai_confidence": 23.45,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 2.1,
    "ai_audience": 7.1,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, DevOps principles, and organizational culture. While it offers advice and challenges readers to adopt better practices (e.g., test-first, autonomous teams), it does not discuss mentoring, coaching, or skill development. There are no direct or indirect references to mentoring roles, techniques, or relationships. The audience is agile/DevOps practitioners, but the focus is on systemic critique and improvement, not on guidance or professional growth through mentoring.",
    "reasoning_summary": "This content focuses on systemic issues in software delivery and DevOps, not on mentoring or coaching. It offers advice on practices but does not address mentoring roles, relationships, or skill development, making it a poor fit for the Mentoring category.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Test First Development",
    "calculated_at": "2025-06-06T14:16:16",
    "ai_confidence": 77.6,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.1,
    "ai_audience": 8.4,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content directly references 'Test-First development' as a disciplined engineering practice and advocates for writing tests before code, making intent explicit, and integrating quality from the start. It discusses the importance of acceptance criteria, Definition of Done, and feedback loops, all of which align with Test First Development principles. However, the main focus is broader—on systemic issues in software delivery, DevOps, and the impact of AI—rather than an in-depth exploration of Test First Development itself. The discussion of Test First is substantial and well-aligned, but not the exclusive or central theme. The audience is technical practitioners, matching the category. No penalties are warranted as the content is current, supportive, and not critical of the Test First approach.",
    "reasoning_summary": "The content strongly aligns with Test First Development by advocating for writing tests before code and integrating quality early. While Test First is not the sole focus, its principles are clearly promoted within a broader discussion of delivery flow and system responsibility.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-06-06T14:16:23",
    "ai_confidence": 36.45,
    "ai_mentions": 1.2,
    "ai_alignment": 3.8,
    "ai_depth": 3.6,
    "ai_intent": 3.2,
    "ai_audience": 7.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing flow, DevOps principles, and the impact of AI on traditional development models. While it briefly references 'acceptance criteria' and 'test-first' development, these are not explored in the context of Acceptance Test Driven Development (ATDD). There is no explicit mention of ATDD, its collaborative nature, or its specific practices. The main themes are broader than ATDD, centering on organizational culture, system flow, and quality as a systemic responsibility. The audience (practitioners, leaders) overlaps with ATDD, and some concepts (test-first, quality built-in) are tangentially related, but the discussion lacks depth, directness, and sustained focus on ATDD. No penalties were applied as the content is current and not critical of ATDD.",
    "reasoning_summary": "This content addresses systemic issues in software delivery and quality, with only brief, indirect references to acceptance criteria and test-first practices. It does not directly discuss or align with Acceptance Test Driven Development, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-06-06T14:16:28",
    "ai_confidence": 94.7,
    "ai_mentions": 7.6,
    "ai_alignment": 9.8,
    "ai_depth": 9.5,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly addresses practical, experience-based problem-solving in Agile, Scrum, and DevOps contexts. It critiques common misconceptions (e.g., coding as the bottleneck), emphasizes systems thinking, value stream mapping, and disciplined engineering practices—all core to pragmatic thinking. The discussion is deep, with actionable advice (test-first, observability, autonomous teams), and targets practitioners and leaders in software delivery. The focus is consistently on real-world application, not theory. No outdated or contradictory elements are present, so no penalties were applied. The confidence score reflects strong alignment, depth, and relevance.",
    "reasoning_summary": "This content exemplifies Pragmatic Thinking by focusing on real-world system constraints, practical DevOps principles, and actionable strategies for improving software delivery. It targets practitioners and leaders, offering deep, experience-based insights with minimal off-topic content.",
    "level": "Primary"
  },
  "Trend Analysis": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Trend Analysis",
    "calculated_at": "2025-06-06T14:16:34",
    "ai_confidence": 67.85,
    "ai_mentions": 2.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.3,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content discusses the impact of AI on software delivery, challenging the misconception that coding is the main bottleneck. It references DevOps principles (notably the First Way: Systems Thinking) and critiques outdated practices, urging a shift toward flow, autonomy, and quality built into the system. While it does not explicitly mention 'trend analysis,' it implicitly analyzes a major shift (AI's role in software delivery) and its implications for Agile and DevOps practices. The discussion is conceptually aligned and substantial, with clear relevance for practitioners and strategists. However, the lack of explicit trend analysis terminology and only indirect references to trend monitoring tools or data-driven techniques lowers the 'Direct Mentions' and slightly tempers 'Depth.' The content is focused, relevant, and targets the right audience, but is more of a critical essay than a structured trend analysis case study.",
    "reasoning_summary": "This content analyzes how AI is exposing deeper bottlenecks in software delivery, aligning with trend analysis by examining shifts in DevOps and Agile practices. While it doesn't explicitly discuss 'trend analysis,' it offers substantial, relevant insights for practitioners and strategists.",
    "level": "Secondary"
  },
  "Lean Principles": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Lean Principles",
    "calculated_at": "2025-06-06T14:16:38",
    "ai_confidence": 77.6,
    "ai_mentions": 3.7,
    "ai_alignment": 8.9,
    "ai_depth": 8.3,
    "ai_intent": 8.1,
    "ai_audience": 7.8,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content strongly aligns with Lean Principles by emphasizing system flow, value stream mapping, and the elimination of non-value-adding activities. It critiques traditional bottlenecks and advocates for continuous improvement, autonomy, and building quality in—core Lean concepts. While it references DevOps and does not explicitly name 'Lean' or its tools, the discussion is conceptually deep and highly relevant to Lean audiences. The focus is on systemic issues, flow, and value, with minimal off-topic content. No penalties were applied as the content is current, constructive, and not satirical.",
    "reasoning_summary": "This content is highly relevant to Lean Principles, focusing on system flow, value stream mapping, and eliminating waste. It addresses core Lean themes like continuous improvement and building quality in, making it a strong fit for the category despite not explicitly naming Lean.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Scrum Values",
    "calculated_at": "2025-06-06T14:16:43",
    "ai_confidence": 13.45,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.8,
    "ai_intent": 2.1,
    "ai_audience": 3.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks, with no direct mention or substantive discussion of Scrum Values such as commitment, courage, focus, openness, or respect. While it references team practices and culture, these are not framed in the context of Scrum Values or the Scrum framework. The main intent is to critique misconceptions about bottlenecks in software delivery, not to explore or promote Scrum Values. The audience is broadly practitioners in software delivery and DevOps, not specifically Scrum teams. The signal-to-noise ratio is moderate, as the content is focused but not on the target category.",
    "reasoning_summary": "This content centers on DevOps, system flow, and delivery bottlenecks, not Scrum Values. It does not reference or discuss the core Scrum Values, and its intent and audience are not specifically aligned with the category.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Definition of Done",
    "calculated_at": "2025-06-06T14:16:50",
    "ai_confidence": 54.7,
    "ai_mentions": 2.2,
    "ai_alignment": 5.8,
    "ai_depth": 5.3,
    "ai_intent": 5.0,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content directly mentions 'Definition of Done' twice, specifically referencing its inclusion of operational readiness and as a criterion for quality. However, the main focus is on systemic bottlenecks, DevOps principles, and the impact of AI on delivery models, with DoD discussed only as one of several disciplined engineering practices. The alignment and depth are moderate, as DoD is contextualized within broader quality and flow discussions rather than explored in detail. The intent is tangential, using DoD as an example rather than the main subject. The audience is well-aligned (practitioners, Agile/DevOps teams), and the signal-to-noise ratio is high, with most content relevant to delivery quality and system flow. No penalties were applied, as the content is current and does not contradict the DoD framing.",
    "reasoning_summary": "While the content references Definition of Done and its role in quality, its primary focus is on systemic issues in software delivery and DevOps principles. DoD is discussed as one of several practices, making the fit partial but relevant for practitioners interested in delivery quality.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Azure Repos",
    "calculated_at": "2025-06-06T14:16:54",
    "ai_confidence": 1.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.3,
    "ai_intent": 0.4,
    "ai_audience": 0.2,
    "ai_signal": 0.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content does not mention Azure Repos at all, nor does it discuss any source control system, branching, pull requests, or related practices. Its focus is on systemic bottlenecks in software delivery, the impact of AI on coding, and DevOps principles, with no direct or indirect reference to Azure Repos functionalities, best practices, or integration. The audience is broadly software practitioners, but not specifically those interested in Azure Repos. There is no signal relevant to the category, and all dimensions score near zero.",
    "reasoning_summary": "This content is unrelated to Azure Repos, focusing instead on systemic issues in software delivery and the impact of AI. It does not address source control, repository management, or any Azure Repos-specific topics.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Customer Retention",
    "calculated_at": "2025-06-06T14:16:58",
    "ai_confidence": 18.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 5.2,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on debunking the myth that coding is the main bottleneck in software delivery, emphasizing systems thinking, flow, and DevOps principles. While it discusses organizational culture, team practices, and quality, it does not directly address customer retention, user engagement, or strategies to minimize churn. There are no explicit mentions or in-depth exploration of customer-centric practices, feedback loops, or retention metrics. The audience (technical/organizational leaders) partially overlaps, but the main intent is process improvement, not customer retention.",
    "reasoning_summary": "This content centers on delivery bottlenecks and DevOps systems thinking, not on customer retention. It lacks direct discussion of user engagement, feedback loops, or retention strategies, making its fit with the 'Customer Retention' category minimal.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Validation",
    "calculated_at": "2025-06-06T14:17:03",
    "ai_confidence": 23.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.4,
    "ai_intent": 1.8,
    "ai_audience": 8.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps, flow, and organizational culture rather than product validation. While it briefly mentions testing and quality practices (e.g., test-first, Definition of Done), these are discussed in the context of engineering discipline and delivery flow, not as methodologies for validating product ideas with real users. There is no substantive discussion of user testing, market fit, prototyping, customer feedback loops, or evidence-based validation. The audience (technical practitioners) aligns, and the content is focused, but the core themes do not match the definition of Product Validation.",
    "reasoning_summary": "This content centers on delivery bottlenecks, DevOps, and engineering practices, not on validating product ideas with users. While testing is mentioned, it serves as a quality and flow mechanism, not as a product validation method. Alignment with the Product Validation category is minimal.",
    "level": "Ignored"
  },
  "Forecasting": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Forecasting",
    "calculated_at": "2025-06-06T14:17:15",
    "ai_confidence": 18.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 6.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and the impact of AI on software delivery bottlenecks, but does not discuss forecasting methods, empirical prediction, or Agile/Scrum forecasting practices. There are no direct mentions of forecasting or related metrics (e.g., burn-down charts, velocity for prediction). The main intent is to critique misconceptions about bottlenecks and advocate for systemic improvements, not to inform or guide on forecasting. The audience (Agile/DevOps practitioners) partially overlaps, but the content is not aligned with the forecasting category's core topics.",
    "reasoning_summary": "This content critiques delivery bottlenecks and advocates for systemic improvements in DevOps and Agile, but does not address forecasting methods, metrics, or practices. It is not relevant to the Forecasting category as defined.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Product Management",
    "calculated_at": "2025-06-06T14:17:35",
    "ai_confidence": 54.6,
    "ai_mentions": 1.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.9,
    "ai_intent": 6.1,
    "ai_audience": 7.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. It references DevOps principles (notably Systems Thinking and value stream mapping) and advocates for practices like test-first development, observability, and autonomous teams. While these are highly relevant to Agile and Lean delivery, the discussion is framed more around delivery models, engineering culture, and DevOps than Agile Product Management specifically. There is no direct mention of product management, Product Owner roles, backlog prioritization, or explicit alignment with product value maximization. The audience is likely to overlap (delivery leaders, Agile/DevOps practitioners), and the content's intent is to challenge delivery mindsets, which is tangentially relevant. However, the lack of direct product management focus and terminology limits the fit.",
    "reasoning_summary": "The content focuses on delivery bottlenecks, DevOps, and system flow, with strong Agile/Lean themes but little direct reference to product management roles or practices. Its relevance to Agile Product Management is indirect, centering more on delivery culture than on product strategy or value alignment.",
    "level": "Tertiary"
  },
  "Agile Leadership": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Leadership",
    "calculated_at": "2025-06-06T14:17:46",
    "ai_confidence": 67.6,
    "ai_mentions": 2.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.3,
    "ai_intent": 6.8,
    "ai_audience": 7.1,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content critiques common misconceptions in software delivery, emphasizing system flow, team practices, and organizational culture over coding as the bottleneck. It references DevOps principles (notably Systems Thinking and value stream mapping), advocates for autonomous teams, and highlights the importance of quality as a system responsibility. While it does not explicitly mention 'Agile Leadership,' its themes—empowering teams, fostering continuous improvement, and challenging organizational dysfunction—align conceptually with Agile Leadership. The depth is strong, with actionable recommendations and systemic critique, but direct references to Agile Leadership or its terminology are minimal. The audience is likely leaders or change agents, but the framing is more about system improvement than explicit leadership practice.",
    "reasoning_summary": "The content aligns with Agile Leadership by challenging organizational bottlenecks, advocating for empowered teams, and emphasizing systemic improvement. While it rarely mentions leadership directly, its focus on culture, autonomy, and flow is highly relevant to Agile Leadership audiences.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Continuous Delivery",
    "calculated_at": "2025-06-06T14:18:03",
    "ai_confidence": 67.6,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and cultural factors over coding. It references DevOps principles (notably the First Way: Systems Thinking), value stream mapping, and the importance of quality being built in from the start. While it discusses practices like test-first development, observability, and frequent deployment—core to Continuous Delivery—it never directly mentions 'Continuous Delivery' or explores its principles in depth. The main focus is on systemic dysfunctions and the impact of AI, with Continuous Delivery practices implied but not central. The audience is technical, and the content is highly relevant, but the lack of explicit mention and only moderate depth on Continuous Delivery itself lowers the confidence.",
    "reasoning_summary": "The content aligns with Continuous Delivery by advocating for flow, automation, and quality built in, but focuses more on systemic issues and DevOps principles than on Continuous Delivery itself. Relevant practices are discussed, yet the category is not directly named or deeply explored.",
    "level": "Secondary"
  },
  "Agile Planning": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Planning",
    "calculated_at": "2025-06-06T14:18:11",
    "ai_confidence": 56.7,
    "ai_mentions": 1.2,
    "ai_alignment": 6.8,
    "ai_depth": 6.3,
    "ai_intent": 5.7,
    "ai_audience": 7.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "Direct mentions of Agile Planning are absent; the content never references Agile, planning, or related ceremonies explicitly. However, it conceptually aligns with Agile Planning by critiquing traditional bottlenecks and advocating for systems thinking, flow, and disciplined engineering practices—principles that underpin effective Agile Planning. The discussion is moderately deep, focusing on value stream mapping, team autonomy, and feedback loops, but it frames these within a DevOps and systems context rather than Agile Planning per se. The intent is to challenge misconceptions about bottlenecks and promote holistic improvement, which partially overlaps with Agile Planning's goals. The audience (practitioners, leaders in software delivery) matches the category, and the content is focused with little off-topic material. No penalties were applied as the content is current and not critical of Agile itself.",
    "reasoning_summary": "While the content doesn't directly mention Agile Planning, it aligns with its principles by emphasizing flow, system constraints, and team practices. The focus is more on DevOps and systems thinking, but the themes overlap with Agile Planning, resulting in moderate confidence for this category.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Lead Time",
    "calculated_at": "2025-06-06T14:18:22",
    "ai_confidence": 54.6,
    "ai_mentions": 1.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.3,
    "ai_intent": 6.0,
    "ai_audience": 8.1,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content focuses on system flow, bottlenecks, and the importance of end-to-end delivery, which conceptually aligns with Lead Time. However, 'Lead Time' is never directly mentioned, and the discussion is framed more around general flow efficiency, DevOps principles, and systemic constraints than on the explicit measurement or optimization of Lead Time as a metric. There are strong thematic overlaps—such as value stream mapping, flow, and observability—but the content does not deeply explore Lead Time's definition, measurement, or its role as a key metric. The audience is well-aligned (practitioners, technical leaders), and the signal is high, but the lack of direct mention and metric-specific depth limits the confidence score.",
    "reasoning_summary": "This content strongly aligns with the spirit of Lead Time by emphasizing system flow and bottlenecks, but it never directly discusses Lead Time as a metric. Its focus is broader, centering on DevOps, value stream mapping, and systemic improvement rather than explicit Lead Time measurement or optimization.",
    "level": "Tertiary"
  },
  "Agile Transformation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Transformation",
    "calculated_at": "2025-06-06T14:18:32",
    "ai_confidence": 67.35,
    "ai_mentions": 2.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 7.8,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture—core Agile Transformation concerns. It references DevOps principles (notably Systems Thinking and value stream mapping), advocates for autonomous teams, and highlights the need for cultural and process change. However, it does not explicitly mention 'Agile Transformation' or Agile frameworks, and the discussion is framed more around DevOps and systemic improvement than a direct Agile transformation journey. The depth is strong, with actionable practices and mindset shifts, but the lack of explicit Agile terminology and case studies slightly lowers the directness and intent scores.",
    "reasoning_summary": "This content aligns well with Agile Transformation by focusing on systemic change, flow, and cultural shifts in software delivery. While it doesn't explicitly reference Agile frameworks, its emphasis on organizational agility, team autonomy, and value stream thinking makes it highly relevant to the category.",
    "level": "Secondary"
  },
  "Experimentation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Experimentation",
    "calculated_at": "2025-06-06T14:18:41",
    "ai_confidence": 23.35,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and the impact of AI on software delivery bottlenecks. While it discusses testing practices (e.g., test-first, observability, Definition of Done), it does not explicitly address hypothesis-driven experimentation, systematic testing of ideas, or validation of assumptions within Agile workflows. There are no direct mentions of experimentation or related methodologies. The main intent is to critique misconceptions about bottlenecks and advocate for systemic improvements, not to explore experimentation as defined. The audience is aligned (Agile/DevOps practitioners), and the content is focused, but the conceptual and depth alignment with 'Experimentation' is weak.",
    "reasoning_summary": "This content critiques software delivery bottlenecks and advocates for systemic improvements, but it does not discuss hypothesis-driven experimentation or systematic validation of ideas. Its focus is on flow, quality, and DevOps culture, not experimentation as defined by the category.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Personal",
    "calculated_at": "2025-06-06T14:18:47",
    "ai_confidence": 41.35,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.9,
    "ai_intent": 4.2,
    "ai_audience": 6.1,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content is a critical analysis of misconceptions in software delivery, focusing on system flow, DevOps principles, and the impact of AI. While it uses a conversational and direct tone, it does not share personal anecdotes, individual reflections, or subjective experiences. The arguments are generalized and analytical, not rooted in the author's personal journey or unique perspective. The audience is practitioners and leaders in Agile/DevOps, but the content lacks the personal context required for the 'Personal' category. No penalties were applied as the content is current and not satirical.",
    "reasoning_summary": "This content offers a strong critique of common software delivery practices and highlights DevOps principles, but it lacks personal stories or subjective reflections. Its focus is analytical and generalized, making it a weak fit for the 'Personal' category.",
    "level": "Tertiary"
  },
  "Social Technologies": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Social Technologies",
    "calculated_at": "2025-06-06T14:18:53",
    "ai_confidence": 91.7,
    "ai_mentions": 7.2,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses organisational culture, team practices, and system flow—core aspects of Social Technologies. It references DevOps principles (e.g., Systems Thinking, value stream mapping, autonomous teams) and critiques outdated, siloed approaches. The discussion is deep, focusing on how collaboration, self-organisation, and continuous improvement are essential for value delivery, especially in the context of AI. The audience is practitioners and leaders in Agile/DevOps environments. There are no outdated references or negative tone; all dimensions are strongly aligned, with only minor variation in direct mentions.",
    "reasoning_summary": "This content is highly relevant to Social Technologies, focusing on system flow, team autonomy, and organisational culture in software delivery. It deeply explores how collaboration and adaptive practices, not coding, are the real levers for value, aligning closely with the category’s intent and audience.",
    "level": "Primary"
  },
  "Customer Focus": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Customer Focus",
    "calculated_at": "2025-06-06T14:18:59",
    "ai_confidence": 38.7,
    "ai_mentions": 0.2,
    "ai_alignment": 4.6,
    "ai_depth": 4.2,
    "ai_intent": 3.8,
    "ai_audience": 6.1,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. While it references DevOps principles like Systems Thinking and value stream mapping, it does not explicitly discuss defining, measuring, or prioritizing customer value, nor does it focus on feedback loops with real users or customer outcomes. The main thrust is internal process improvement and system responsibility, not customer-centricity. There are some indirect links (e.g., 'outcomes, not output'), but these are not developed in the context of customer value. The audience (practitioners, leaders in DevOps/agile) is somewhat aligned, but the content lacks direct, actionable discussion of customer focus as defined.",
    "reasoning_summary": "This content centers on system flow and delivery bottlenecks, not on customer value or outcomes. While it references DevOps principles and outcomes, it does not explicitly address customer focus, feedback loops, or measuring value from the customer’s perspective. Its relevance to Customer Focus is limited and mostly indirect.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Organisational Psychology",
    "calculated_at": "2025-06-06T14:19:04",
    "ai_confidence": 41.35,
    "ai_mentions": 0.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 4.8,
    "ai_audience": 6.1,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on system flow, team practices, and organisational culture as bottlenecks in software delivery, which tangentially relates to Organisational Psychology. However, it does not explicitly discuss psychological theories, motivation, leadership, or team dynamics in depth. The main thrust is on process improvement and DevOps principles, not psychological factors. There are some indirect references to culture and autonomy, but these are not explored from a psychological perspective. The audience is practitioners interested in delivery models, not specifically those seeking insights into psychological principles. The signal-to-noise ratio is moderate, as the content is focused but not directly aligned with the category's core topics.",
    "reasoning_summary": "While the content references organisational culture and team autonomy, its primary focus is on system flow and delivery models rather than psychological principles or theories. It only loosely aligns with Organisational Psychology, offering limited direct relevance.",
    "level": "Tertiary"
  },
  "Software Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Software Development",
    "calculated_at": "2025-06-06T14:19:10",
    "ai_confidence": 97.2,
    "ai_mentions": 8.7,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 97.0,
    "reasoning": "The content directly discusses software development, referencing DevOps, SDLC practices, team structures, and quality assurance. It critiques common misconceptions about bottlenecks in software delivery, emphasizing systems thinking, value stream mapping, and disciplined engineering practices like test-first development and observability. The discussion is deep, practical, and targets practitioners and leaders in software engineering. There are no outdated references or negative tone; all points are relevant and focused on improving software development outcomes.",
    "reasoning_summary": "This content is highly relevant to Software Development, focusing on DevOps, team practices, quality assurance, and the impact of AI on delivery models. It offers deep, practical insights for software practitioners and leaders, aligning closely with the category’s core themes.",
    "level": "Primary"
  },
  "Modern Source Control": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Modern Source Control",
    "calculated_at": "2025-06-06T14:19:14",
    "ai_confidence": 13.85,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.6,
    "ai_intent": 2.1,
    "ai_audience": 3.2,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps, systems thinking, and organizational culture. While it references code merging and branch management in passing, it does not discuss version control systems, branching strategies, or source control best practices in any depth. There are no direct mentions of modern source control tools or methodologies, and the main themes are not aligned with the category. The audience is technical, but the content is not targeted at practitioners seeking source control guidance. Signal-to-noise is low for this category, as most discussion is off-topic.",
    "reasoning_summary": "This content centers on delivery bottlenecks, DevOps, and organizational flow, with only a brief, tangential mention of code merging. It does not address modern source control practices, tools, or strategies, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Azure Boards",
    "calculated_at": "2025-06-06T14:19:18",
    "ai_confidence": 7.2,
    "ai_mentions": 0.0,
    "ai_alignment": 0.6,
    "ai_depth": 0.7,
    "ai_intent": 0.8,
    "ai_audience": 1.2,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content does not mention Azure Boards at all, nor does it discuss any of its features, best practices, or its role in Agile project management. The focus is on systemic bottlenecks in software delivery, DevOps principles, and the impact of AI on coding and team practices. While the audience (Agile/DevOps practitioners) could overlap with Azure Boards users, there is no conceptual or practical alignment with the category. The discussion is deep and relevant to system flow and team practices, but entirely unrelated to Azure Boards.",
    "reasoning_summary": "This content does not address Azure Boards or its functionalities. Its focus is on systemic issues in software delivery and DevOps, making it irrelevant to the Azure Boards category.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Metrics and Learning",
    "calculated_at": "2025-06-06T14:19:24",
    "ai_confidence": 67.25,
    "ai_mentions": 2.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content strongly aligns with the 'Metrics and Learning' category through its focus on system flow, feedback loops, and continuous improvement in Agile/DevOps contexts. It references value stream mapping, observability, and disciplined engineering practices, all of which are core to evidence-based improvement. However, it does not directly discuss metrics, data collection, or specific measurement techniques, and explicit mentions of 'metrics' or 'learning' are minimal. The depth is solid, with practical examples and systemic critique, but the discussion is more conceptual than quantitative. The audience is clearly Agile/DevOps practitioners and leaders. No penalties were applied as the content is current and not contradictory.",
    "reasoning_summary": "This content is conceptually well-aligned with 'Metrics and Learning,' emphasizing system flow, feedback, and continuous improvement in Agile/DevOps. While it lacks explicit metric terminology, its focus on systemic practices and learning cycles makes it a relevant fit for the category.",
    "level": "Secondary"
  },
  "Cross Functional Teams": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-06-06T14:19:30",
    "ai_confidence": 67.7,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 7.5,
    "ai_audience": 8.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content does not directly mention 'cross-functional teams' but strongly aligns with the category's core concepts. It critiques siloed practices (e.g., separate QA teams, handoffs) and advocates for autonomous teams accountable for outcomes, which is a key trait of cross-functional teams. The discussion on system flow, end-to-end responsibility, and building quality in from the start further supports the cross-functional philosophy. However, the lack of explicit terminology and case studies, and a broader focus on DevOps and system thinking, slightly reduce the depth and directness. The audience is well-aligned (practitioners, leaders in Agile/DevOps), and the content is focused with minimal off-topic material.",
    "reasoning_summary": "While the content rarely uses the term 'cross-functional teams,' it robustly supports their principles by challenging silos and advocating for autonomous, outcome-focused teams. Its emphasis on system flow and shared responsibility closely aligns with the category, making it a strong but indirect fit.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Install and Configuration",
    "calculated_at": "2025-06-06T14:19:35",
    "ai_confidence": 6.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 0.5,
    "ai_audience": 1.2,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is a critical analysis of bottlenecks in software delivery, focusing on system flow, team practices, and organizational culture. It references DevOps concepts and practices but does not discuss installation, configuration, or technical setup of tools. There are no explicit or implicit instructions, guides, or troubleshooting related to installing or configuring Agile or DevOps tools. The audience is technical, but the content is conceptual and strategic, not technical or instructional. No penalties were applied as the content is current and not satirical.",
    "reasoning_summary": "This content does not align with the Install and Configuration category, as it focuses on systemic and cultural issues in software delivery rather than technical setup or configuration of tools.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Evidence Based Management",
    "calculated_at": "2025-06-06T14:19:41",
    "ai_confidence": 41.7,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.9,
    "ai_intent": 4.2,
    "ai_audience": 6.1,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content critiques common misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. While it aligns conceptually with EBM's focus on value delivery and system constraints, it does not explicitly mention EBM, its metrics, or empirical decision-making. The discussion is deep regarding systems thinking and flow but lacks direct references to evidence-based practices, data, or outcome management. The audience (leaders, practitioners) overlaps with EBM, and the content is focused, but the fit is indirect and lacks explicit EBM framing.",
    "reasoning_summary": "This content strongly advocates for systems thinking and flow in software delivery, challenging output-focused mindsets. While it aligns with EBM principles in spirit, it does not directly reference evidence-based management, its metrics, or data-driven decision-making, making the fit indirect.",
    "level": "Tertiary"
  },
  "Continuous Integration": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Continuous Integration",
    "calculated_at": "2025-06-06T14:19:45",
    "ai_confidence": 38.35,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.9,
    "ai_intent": 4.2,
    "ai_audience": 5.1,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing systems thinking, value stream mapping, and DevOps principles. While it references practices like test-first development, automation, and frequent deployment—concepts related to CI—it never directly discusses Continuous Integration, its tools, or its specific practices. The main thrust is organizational culture and flow, not CI itself. The audience is technical, but the discussion is broader than CI, with only tangential relevance.",
    "reasoning_summary": "This content centers on systemic issues in software delivery and DevOps, with only indirect references to CI-related practices. It does not explicitly discuss Continuous Integration, its tools, or its principles, making its fit to the category limited and mostly tangential.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Discovery",
    "calculated_at": "2025-06-06T14:19:49",
    "ai_confidence": 19.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 6.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks in software delivery, not on Product Discovery. There are no direct mentions or substantial discussion of user research, feature definition, or validation of product ideas. The main intent is to critique misconceptions about coding as a bottleneck, not to explore methodologies for understanding customer needs or defining product features. The audience overlaps somewhat with Product Discovery practitioners, but the content is not targeted at discovery activities.",
    "reasoning_summary": "This content centers on delivery bottlenecks, DevOps, and system flow, with little to no focus on Product Discovery topics like user needs, feature definition, or idea validation. It is only tangentially relevant to the Product Discovery category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Daily Scrum",
    "calculated_at": "2025-06-06T14:19:55",
    "ai_confidence": 6.7,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 2.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, the impact of AI, and DevOps principles, with emphasis on flow, quality, and team practices. There are no direct or indirect references to the Daily Scrum, its structure, purpose, or best practices. The main audience is practitioners interested in DevOps and organizational change, not specifically Scrum teams or Daily Scrum participants. The content is highly relevant to system-level improvement but does not address Daily Scrum topics, roles, or events. No penalties were applied as the content is current and not satirical or critical of the Daily Scrum itself.",
    "reasoning_summary": "This content does not discuss the Daily Scrum or related Scrum events. Its focus is on system flow, DevOps, and AI's impact on delivery bottlenecks, making it largely irrelevant to the Daily Scrum category.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-06-06T14:20:00",
    "ai_confidence": 13.45,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 1.5,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and the impact of AI on software delivery bottlenecks. While it discusses feedback in the context of testing and quality (e.g., 'test feedback takes hours'), it does not address customer feedback loops, mechanisms for collecting or integrating customer insights, or related practices. The main themes are about internal process improvement, not customer-driven feedback. There are no direct mentions or substantial exploration of customer feedback loops.",
    "reasoning_summary": "This content centers on internal delivery bottlenecks, DevOps, and engineering practices, with only passing references to feedback in testing. It does not discuss customer feedback loops or their integration into product development, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Team Collaboration",
    "calculated_at": "2025-06-06T14:20:07",
    "ai_confidence": 86.7,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 8.5,
    "ai_audience": 8.9,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content strongly aligns with Team Collaboration by critiquing siloed practices (e.g., separate QA teams, handoffs) and advocating for autonomous, cross-functional teams, shared ownership, and system-wide responsibility for quality. It references DevOps principles, especially Systems Thinking, and emphasizes practices like test-first development, observability, and operational readiness—all of which foster collaborative team dynamics. While 'team collaboration' is not always named directly, the main themes and recommendations are deeply rooted in improving how teams work together within Agile and DevOps contexts. The discussion is substantial, with practical examples and actionable advice, and is clearly aimed at practitioners and leaders in Agile/DevOps environments. There is minimal off-topic content, and no penalties are warranted.",
    "reasoning_summary": "This content is highly relevant to Team Collaboration, focusing on breaking down silos, fostering shared ownership, and improving team practices in Agile and DevOps. It offers actionable insights for teams to enhance collaboration and system flow, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Value Stream Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Value Stream Management",
    "calculated_at": "2025-06-06T14:20:12",
    "ai_confidence": 87.6,
    "ai_mentions": 7.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.7,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly references value stream mapping and repeatedly discusses system flow, bottlenecks, and the importance of organisational practices over coding as constraints. It aligns conceptually with Value Stream Management by focusing on flow, waste, and systemic improvement. The discussion is deep, referencing DevOps principles (especially the First Way: Systems Thinking), mapping value streams, and advocating for practices that build quality and flow into the system. The intent is to shift thinking from code-centric to system-centric, targeting practitioners and leaders interested in delivery improvement. While not a textbook on Value Stream Management, the content is highly relevant, focused, and avoids off-topic tangents.",
    "reasoning_summary": "This content strongly aligns with Value Stream Management, emphasizing system flow, value stream mapping, and organisational bottlenecks over coding. It targets practitioners seeking to improve delivery by focusing on systemic practices, making it highly relevant to the category.",
    "level": "Primary"
  },
  "Coaching": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Coaching",
    "calculated_at": "2025-06-06T14:20:17",
    "ai_confidence": 23.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.5,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing systems thinking, value stream mapping, and disciplined engineering practices. While it encourages organizational self-reflection and improvement, it does not discuss coaching, guidance, or facilitation of growth in teams or individuals. There are no direct or indirect references to coaching roles, techniques, or mindsets. The focus is on system-level dysfunctions and DevOps principles, not on the collaborative, supportive, or developmental aspects central to coaching. The audience (practitioners, leaders) overlaps with coaching, but the content's purpose and substance do not align with the coaching category.",
    "reasoning_summary": "This content focuses on system-level issues in software delivery and DevOps, not on coaching practices or mindsets. It lacks direct or substantial discussion of coaching, guidance, or facilitation, making it a poor fit for the Coaching category.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Platform Engineering",
    "calculated_at": "2025-06-06T14:20:22",
    "ai_confidence": 23.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps principles, systems thinking, and organizational culture. While it discusses automation, flow, and disciplined engineering practices, it does not directly address platform engineering, internal developer platforms, or self-service capabilities. There are no explicit mentions of platform engineering or its core concepts. The audience is technical, but the main themes are broader than platform engineering, centering on delivery models and DevOps culture rather than platform solutions.",
    "reasoning_summary": "This content centers on DevOps, systems thinking, and delivery bottlenecks, not platform engineering. It lacks direct references to internal developer platforms or platform engineering principles, making its fit with the category low.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Market Adaptability",
    "calculated_at": "2025-06-06T14:20:27",
    "ai_confidence": 87.6,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.7,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly references DevOps principles, especially Systems Thinking and flow, which are core to market adaptability. It critiques outdated practices and emphasizes the need for cross-functional teams, continuous feedback, and disciplined engineering—key to adapting to market shifts. The discussion is deep, focusing on systemic constraints and how AI exposes them, rather than just code. The audience is practitioners and leaders interested in improving delivery models for adaptability. There are no outdated or contradictory elements, and the content is highly focused on relevant themes.",
    "reasoning_summary": "This content strongly aligns with Market Adaptability, emphasizing DevOps, flow, and systemic change over coding as the constraint. It targets practitioners seeking to enhance adaptability through modern practices, with a focused and relevant discussion.",
    "level": "Primary"
  },
  "Liberating Structures": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Liberating Structures",
    "calculated_at": "2025-06-06T14:20:31",
    "ai_confidence": 1.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.0,
    "ai_depth": 1.2,
    "ai_intent": 2.0,
    "ai_audience": 2.5,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content does not mention Liberating Structures or any specific facilitation techniques. Its focus is on system flow, DevOps principles, and the impact of AI on software delivery bottlenecks. While it discusses team practices and system responsibility, there is no reference to facilitation methods, engagement techniques, or the toolkit described in the category. The audience (practitioners, leaders) partially overlaps, but the content is not aligned with the category's core meaning or use cases.",
    "reasoning_summary": "This content does not reference Liberating Structures or related facilitation methods. Its focus is on DevOps, system flow, and AI's impact on delivery, making it unrelated to the category.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Hybrid Agile",
    "calculated_at": "2025-06-06T14:20:37",
    "ai_confidence": 23.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 7.1,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, DevOps, and the real bottlenecks in software delivery, critiquing traditional handoffs and siloed QA. However, it does not directly mention Hybrid Agile or critically analyze the blending of agile and traditional methods. While it addresses dysfunctions common in hybrid environments (e.g., command-and-control, QA as a gate), it never frames them as Hybrid Agile issues or explores the category's core challenges. The audience and signal are moderately aligned, but conceptual and depth scores are low due to lack of explicit category focus.",
    "reasoning_summary": "This content critiques traditional delivery models and highlights system flow issues, but it does not directly address Hybrid Agile or its unique challenges. Its relevance to the category is incidental rather than intentional.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-06-06T14:20:42",
    "ai_confidence": 13.45,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.3,
    "ai_intent": 1.0,
    "ai_audience": 6.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on system flow, DevOps, and organisational bottlenecks in software delivery, with a strong emphasis on AI's impact on coding and delivery models. There are no direct mentions or discussions of Minimum Viable Product (MVP), its definition, strategies, or role in product validation. While the audience overlaps with those interested in MVP (e.g., practitioners in Agile/DevOps), the content does not address MVP concepts, techniques, or case studies. The discussion is about delivery system constraints, not about building or iterating on MVPs.",
    "reasoning_summary": "This content centers on delivery bottlenecks, DevOps, and AI's impact on software practices, not on Minimum Viable Product concepts. There are no direct or indirect discussions of MVP, its strategies, or its role in product validation, making alignment with the category minimal.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Deployment Strategies",
    "calculated_at": "2025-06-06T14:20:47",
    "ai_confidence": 23.7,
    "ai_mentions": 1.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 7.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks, arguing that coding is not the main constraint in software delivery. While it references delivery, flow, and some DevOps practices, it does not directly discuss deployment methodologies or strategies such as blue-green deployments, canary releases, or infrastructure as code. There are only indirect, high-level mentions of deployment (e.g., 'deploy frequently'), but no substantive exploration of deployment strategies or actionable insights specific to the category. The audience is technical and relevant, but the content's main intent and depth are not aligned with deployment strategies.",
    "reasoning_summary": "This content centers on system flow and DevOps culture, not deployment strategies. While it briefly mentions deployment frequency, it lacks direct discussion of deployment methodologies or practices, making its fit with the category low.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-06-06T14:20:53",
    "ai_confidence": 54.35,
    "ai_mentions": 2.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.9,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team autonomy, and quality as system responsibility. While it references concepts like autonomous teams, continuous improvement, and system thinking (which align with Agile principles), it does not directly mention Agile, the Manifesto, or its core values. The main framing is through DevOps and system flow, with only indirect overlap to Agile Values and Principles. The depth and alignment are moderate, as the discussion supports Agile-aligned thinking (e.g., collaboration, self-organization, customer focus) but does not explicitly ground itself in Agile philosophy. The audience is practitioners and leaders interested in delivery improvement, which overlaps with Agile's audience. The content is focused, with little off-topic material, but the lack of direct Agile references and explicit principle discussion limits the confidence score.",
    "reasoning_summary": "The content aligns moderately with Agile Values and Principles by advocating for system flow, team autonomy, and quality as a shared responsibility. However, it frames these ideas through DevOps and delivery models rather than explicitly referencing Agile values or principles.",
    "level": "Tertiary"
  },
  "Scrum Master": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Scrum Master",
    "calculated_at": "2025-06-06T14:20:59",
    "ai_confidence": 18.7,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.0,
    "ai_audience": 5.1,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organisational bottlenecks, with no direct mention of the Scrum Master accountability or its responsibilities. While it discusses team autonomy and system improvement—concepts relevant to Scrum Masters—the framing is generic and not specific to Scrum or the Scrum Master role. The audience is broad (delivery leaders, DevOps practitioners), and the discussion is not tailored to the unique accountability or impact of the Scrum Master. There is minimal alignment with the category definition, and the content does not explore the Scrum Master’s role, responsibilities, or systemic impact within Scrum.",
    "reasoning_summary": "This content addresses system flow and organisational bottlenecks in software delivery, referencing DevOps and team autonomy, but does not discuss the Scrum Master accountability or its responsibilities. Its focus and framing are not specific to Scrum or the Scrum Master role.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Large Scale Agility",
    "calculated_at": "2025-06-06T14:21:04",
    "ai_confidence": 54.85,
    "ai_mentions": 1.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.3,
    "ai_intent": 6.0,
    "ai_audience": 6.5,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content critiques common misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. It references DevOps principles (notably Systems Thinking and value stream mapping) and advocates for cross-functional, autonomous teams and built-in quality. However, it does not explicitly discuss large-scale Agile frameworks, enterprise transformation, or alignment across multiple teams. The focus is on systemic improvement and culture, which aligns conceptually with some large-scale agility principles, but the discussion remains at a general organizational and team practice level, without direct reference to scaling Agile methodologies or enterprise-level strategies. The audience appears to be leaders and practitioners interested in improving delivery models, but not specifically those engaged in large-scale Agile transformation.",
    "reasoning_summary": "The content aligns moderately with Large Scale Agility by emphasizing systemic flow, culture, and cross-team practices, but lacks explicit discussion of scaling Agile frameworks or enterprise-level transformation. Its focus is more on DevOps and organizational improvement than on large-scale Agile adoption.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Cycle Time",
    "calculated_at": "2025-06-06T14:21:10",
    "ai_confidence": 41.85,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 4.8,
    "ai_audience": 7.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on system flow, bottlenecks, and the importance of end-to-end delivery, which are conceptually adjacent to Cycle Time but never directly mention or deeply explore it. The main argument is that coding is not the true constraint in software delivery; instead, systemic issues are. While this aligns with the broader context in which Cycle Time is relevant (workflow efficiency, value stream mapping), the article does not define, measure, or analyze Cycle Time specifically. There are no explicit references to Cycle Time, its measurement, or its relationship to other metrics. The audience is practitioners interested in DevOps and Agile, which matches the category, and the content is focused and relevant to workflow efficiency, but Cycle Time is only implied, not discussed in depth.",
    "reasoning_summary": "The content discusses bottlenecks and system flow in software delivery, which are related to Cycle Time, but it never directly addresses or analyzes Cycle Time itself. Its focus is on broader systemic issues rather than the specific metric.",
    "level": "Tertiary"
  },
  "Lean Product Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Lean Product Development",
    "calculated_at": "2025-06-06T14:21:17",
    "ai_confidence": 74.7,
    "ai_mentions": 2.2,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 7.7,
    "ai_audience": 8.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content does not directly mention 'Lean Product Development' or Lean terminology, resulting in a low 'Direct Mentions' score. However, it strongly aligns conceptually: it critiques wasteful practices (handoffs, queues, siloed QA), advocates for value stream mapping, systems thinking, and continuous improvement—core Lean principles. The discussion is deep, focusing on systemic constraints, flow, and cultural change, not just surface-level observations. The intent is to shift thinking toward optimizing the whole system, which matches Lean's purpose. The audience (practitioners, leaders in software/product delivery) is well-aligned. The content is focused, with little off-topic material. No penalties are applied as the content is current, constructive, and not critical of Lean itself.",
    "reasoning_summary": "While the content never explicitly references Lean Product Development, it deeply explores Lean-aligned themes like value stream mapping, systems thinking, and eliminating waste in software delivery. Its focus on flow, culture, and continuous improvement makes it a strong conceptual fit for the category.",
    "level": "Secondary"
  },
  "Open Space Agile": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Open Space Agile",
    "calculated_at": "2025-06-06T14:22:02",
    "ai_confidence": 23.7,
    "ai_mentions": 0.0,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 8.1,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content does not mention Open Space Agile or Open Space Technology at all. Its main focus is on system flow, DevOps principles (especially the First Way: Systems Thinking), and the impact of AI on software delivery bottlenecks. While it discusses organisational culture, autonomy, and system responsibility—concepts that overlap with Agile values—there is no discussion of collective participation, emergence, co-creation, or the specific practices and principles of Open Space Agile. The depth and intent are not aligned with the category, as the article is a critique of common software delivery misconceptions, not an exploration of Open Space Agile. The audience (practitioners, leaders in software delivery) is somewhat aligned, and the content is focused, but overall, the fit is very weak.",
    "reasoning_summary": "This content focuses on DevOps, system flow, and AI's impact on software delivery, not Open Space Agile. It lacks any mention or exploration of Open Space Technology, co-creation, or emergence, making it only tangentially relevant to the category.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-06-06T14:22:06",
    "ai_confidence": 13.7,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.3,
    "ai_intent": 1.0,
    "ai_audience": 5.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps principles, systems thinking, and cultural/organizational issues. There are no direct mentions or substantial discussion of Internal Developer Platforms (IDPs), their architecture, implementation, or benefits. While the audience overlaps with those interested in IDPs (technical leaders, practitioners), the main themes are about flow, quality, and team practices, not about platforms that streamline development. The content is relevant to DevOps and modern engineering practices but does not address IDPs conceptually or explicitly.",
    "reasoning_summary": "This content centers on DevOps, systems thinking, and organizational bottlenecks, not Internal Developer Platforms. It lacks direct references or substantial alignment with the IDP category, making its relevance to IDPs minimal.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Organisational Change",
    "calculated_at": "2025-06-06T14:22:11",
    "ai_confidence": 81.7,
    "ai_mentions": 5.6,
    "ai_alignment": 9.2,
    "ai_depth": 8.7,
    "ai_intent": 8.3,
    "ai_audience": 8.0,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly addresses systemic issues in software delivery, focusing on organisational culture, system flow, and team practices rather than technical coding. It references DevOps principles (notably Systems Thinking and value stream mapping), critiques outdated organisational structures (e.g., separate QA teams, handoffs), and advocates for practices that foster agility and resilience. While it doesn't explicitly name 'organisational change' frameworks, its core message is about transforming organisational mindset and processes to enable effective change. The depth is strong, with practical examples and actionable recommendations. The audience is leaders and practitioners interested in improving organisational effectiveness, aligning well with the category. Minor deductions for not explicitly referencing change management models, but overall, the content is highly relevant.",
    "reasoning_summary": "This content strongly aligns with 'Organisational Change' by critiquing outdated delivery models and advocating for systemic, cultural, and process transformation. It emphasizes flow, autonomy, and organisational learning, targeting leaders and change agents seeking greater agility.",
    "level": "Primary"
  },
  "Continuous Improvement": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Continuous Improvement",
    "calculated_at": "2025-06-06T14:22:17",
    "ai_confidence": 87.6,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.1,
    "ai_audience": 8.7,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content strongly aligns with Continuous Improvement by emphasizing systemic issues over coding, advocating for relentless reflection, and promoting practices like value stream mapping, test-first development, and building quality in from the start. It references DevOps principles (notably Systems Thinking), encourages adaptation, and critiques outdated models. While 'Continuous Improvement' is not directly named, the themes, intent, and audience fit are highly relevant, with deep discussion on how to foster ongoing improvement in software delivery. No penalties were applied as the content is current, constructive, and fully aligned with Agile/DevOps philosophies.",
    "reasoning_summary": "This content is highly relevant to Continuous Improvement, focusing on systemic change, flow, and adaptive practices in software delivery. It advocates for ongoing reflection and learning, aligning closely with the category’s core principles and audience.",
    "level": "Primary"
  },
  "Frequent Releases": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Frequent Releases",
    "calculated_at": "2025-06-06T14:22:23",
    "ai_confidence": 67.35,
    "ai_mentions": 3.7,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 8.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "Direct mentions of 'frequent releases' or synonymous terms are limited, with only a few references to practices like 'deploy frequently' and 'flow from idea to delivery.' However, the content is conceptually aligned, emphasizing system flow, DevOps principles, and the importance of removing bottlenecks to enable continuous delivery. The discussion is moderately deep, exploring systemic issues that impede frequent releases, such as organizational silos, lack of automation, and poor quality practices. The intent is to challenge misconceptions about bottlenecks and advocate for practices that support frequent, reliable delivery. The audience is technical and managerial, matching the category. The content is focused, with little off-topic material. No penalties were applied as the content is current and not critical of the category itself.",
    "reasoning_summary": "The content aligns well with 'Frequent Releases' by emphasizing system flow, DevOps, and practices that enable continuous delivery, though it only briefly mentions frequent deployment. Its main focus is on removing systemic bottlenecks to support reliable, incremental software delivery.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Enterprise Agility",
    "calculated_at": "2025-06-06T14:22:27",
    "ai_confidence": 81.7,
    "ai_mentions": 4.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.3,
    "ai_intent": 8.1,
    "ai_audience": 8.0,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content critiques the misconception that coding is the main bottleneck in software delivery, emphasizing systemic issues such as organisational culture, flow, and team practices. It references DevOps principles (notably Systems Thinking and value stream mapping), advocates for cross-functional, autonomous teams, and highlights the need for organisational change over tool adoption. While it doesn't explicitly mention 'Enterprise Agility' or scaling frameworks, its focus on system-wide flow, culture, and adaptability aligns closely with the category. The discussion is deep and relevant for leaders and practitioners interested in organisational transformation, though direct category mentions are limited.",
    "reasoning_summary": "This content strongly aligns with Enterprise Agility by focusing on systemic organisational constraints, culture, and flow rather than team-level practices or tooling. It addresses the broader need for adaptability and continuous improvement across the enterprise.",
    "level": "Primary"
  },
  "Miscellaneous": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Miscellaneous",
    "calculated_at": "2025-06-06T14:22:38",
    "ai_confidence": 7.2,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.3,
    "ai_intent": 0.9,
    "ai_audience": 1.0,
    "ai_signal": 0.8,
    "ai_penalties_applied": true,
    "ai_penalty_points": 4.0,
    "ai_penalty_details": "All dimensions penalized by 1 point each for directly referencing and applying DevOps principles, specifically the First Way of DevOps, and for providing actionable guidance rooted in established frameworks.",
    "final_score": 7.0,
    "reasoning": "The content is deeply rooted in DevOps philosophy, explicitly referencing the First Way of DevOps (Systems Thinking) and advocating for practices such as value stream mapping, test-first development, observability, and autonomous teams. It critiques common misconceptions about bottlenecks in software delivery and provides actionable advice aligned with DevOps and Agile principles. The audience is clearly practitioners familiar with these frameworks. As such, the content does not fit the 'Miscellaneous' category, which is reserved for topics not directly connected to Agile, Scrum, DevOps, Lean, or EBM. All dimensions are penalized for direct application of established theories and practices.",
    "reasoning_summary": "This content is not Miscellaneous; it directly applies and discusses DevOps principles, especially Systems Thinking, and offers actionable guidance rooted in established frameworks. Its focus and audience are tightly aligned with DevOps, not general or unrelated topics.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Digital Transformation",
    "calculated_at": "2025-06-06T14:22:46",
    "ai_confidence": 67.7,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content does not directly mention 'Digital Transformation' but discusses how AI and DevOps practices reveal deeper systemic issues in software delivery, such as organisational culture, flow, and team autonomy. These themes align with digital transformation's focus on leveraging digital tools (AI, DevOps) to drive organisational change and improve efficiency. The discussion is substantial, exploring how technology exposes and amplifies existing process flaws, and advocates for systemic, cultural, and process changes—core to digital transformation. The intent is to challenge outdated practices and promote modern, agile, and autonomous approaches, targeting practitioners and leaders interested in transformation. However, the lack of explicit references to digital transformation and some focus on DevOps/engineering practices (rather than broader business strategy) slightly reduce the directness and depth of fit.",
    "reasoning_summary": "This content aligns with Digital Transformation by highlighting how AI and DevOps expose the need for systemic, cultural, and process change in organisations. While it doesn't name the category directly, its focus on leveraging digital tools to drive organisational improvement fits the core intent.",
    "level": "Secondary"
  },
  "Current Value": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Current Value",
    "calculated_at": "2025-06-06T14:22:50",
    "ai_confidence": 36.85,
    "ai_mentions": 0.7,
    "ai_alignment": 3.6,
    "ai_depth": 3.9,
    "ai_intent": 3.2,
    "ai_audience": 4.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. While it references DevOps principles and value stream mapping, it does not directly discuss or measure Current Value as defined in Evidence-Based Management. There are no explicit mentions of Current Value, its metrics, or its role in decision-making. The focus is on systemic improvement and flow, not on real-time value assessment or customer/revenue impact. The audience (practitioners, leaders in Agile/DevOps) is somewhat aligned, and the discussion is relevant to value delivery, but it lacks the direct, practical application or measurement of Current Value required for a high confidence score.",
    "reasoning_summary": "This content focuses on systemic bottlenecks and DevOps principles, not on measuring or discussing Current Value as defined in Evidence-Based Management. While relevant to value delivery, it lacks direct alignment with the category’s core topics and metrics.",
    "level": "Ignored"
  },
  "Increment": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Increment",
    "calculated_at": "2025-06-06T14:22:55",
    "ai_confidence": 23.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 7.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": true,
    "ai_penalty_points": 2.0,
    "ai_penalty_details": "alignment (-1): content is critical of traditional delivery models and only tangentially references Increment concepts; intent (-1): tone is critical and undermines the category’s framing.",
    "final_score": 24.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, arguing that coding is not the main constraint and critiquing traditional models. While it references practices like 'Definition of Done' and 'deploy frequently,' it does not directly discuss the Increment as a Scrum artifact or its role in delivering working software. The main themes are about flow, system responsibility, and DevOps principles, not the creation or value of Increments. The tone is critical of current practices, which warrants penalties for both alignment and intent. There are only passing, indirect connections to Increment-related topics, and no explicit or in-depth discussion of Increments, their measurement, or their relationship to Scrum artifacts.",
    "reasoning_summary": "This content critiques delivery bottlenecks and advocates for systemic improvements, but it does not directly address the Increment or its role in Agile or Scrum. References to related practices are indirect and insufficient for strong category alignment.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Company as a Product",
    "calculated_at": "2025-06-06T14:23:01",
    "ai_confidence": 54.7,
    "ai_mentions": 1.2,
    "ai_alignment": 6.6,
    "ai_depth": 6.9,
    "ai_intent": 6.1,
    "ai_audience": 7.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content critiques the misconception that coding is the main bottleneck in software delivery, emphasizing systemic issues like flow, team practices, and organizational culture. It references DevOps principles (notably Systems Thinking and value stream mapping), advocates for cross-functional teams, autonomy, and outcome accountability, and highlights the need for organizational change. However, it never directly mentions 'Company as a Product' or frames the organization explicitly as a product. The alignment is moderate: the themes of systemic improvement, customer value, and organizational agility are present, but the discussion is rooted in DevOps and delivery models rather than the explicit CaaP paradigm. The depth is solid regarding organizational dysfunctions and improvement, but lacks direct CaaP terminology or case studies. The audience is practitioners and leaders interested in organizational effectiveness, which partially overlaps with CaaP's target. The content is focused and relevant, with little off-topic material.",
    "reasoning_summary": "This content strongly critiques organizational bottlenecks in software delivery, emphasizing systemic flow, team autonomy, and cultural change. While it aligns with several CaaP principles, it never explicitly frames the company as a product, so the fit is moderate but not direct.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Strategy",
    "calculated_at": "2025-06-06T14:23:05",
    "ai_confidence": 23.45,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 2.0,
    "ai_audience": 2.2,
    "ai_signal": 2.25,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks in software delivery, emphasizing cultural and process issues over coding. While it discusses high-level delivery models and the impact of AI, it does not address product vision, roadmapping, market analysis, or customer-centric strategy. There are no direct mentions or substantial exploration of product strategy frameworks, methodologies, or alignment with business goals. The audience is more technical and operational than strategic. Thus, the fit with 'Product Strategy' is weak.",
    "reasoning_summary": "This content centers on delivery bottlenecks, DevOps, and team practices, not on product vision, roadmapping, or strategic planning. It lacks direct relevance to product strategy and is aimed at operational improvement rather than strategic product development.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-06-06T14:23:09",
    "ai_confidence": 36.7,
    "ai_mentions": 0.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 4.1,
    "ai_audience": 4.3,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing systems thinking, flow, and DevOps principles. While it references observability, operational readiness, and disciplined engineering practices, it does not directly discuss SRE principles, SLOs, SLIs, incident response, or reliability engineering. The main thrust is about organizational culture and delivery models, not the specific practices or frameworks of Site Reliability Engineering. The audience overlaps somewhat, but the content is not tailored to SRE practitioners or the unique challenges of reliability in production systems.",
    "reasoning_summary": "This content centers on DevOps, systems thinking, and organizational flow, with only tangential relevance to Site Reliability Engineering. It lacks direct discussion of SRE principles, practices, or terminology, making its fit with the category limited and indirect.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Psychological Safety",
    "calculated_at": "2025-06-06T14:23:15",
    "ai_confidence": 23.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.6,
    "ai_intent": 2.9,
    "ai_audience": 7.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks, with no direct mention of psychological safety. While it touches on culture, autonomy, and team practices, these are discussed in the context of delivery efficiency and system responsibility, not in fostering an environment of open communication or risk-taking. There is minimal conceptual overlap with psychological safety, and the main intent is to critique delivery models, not to explore or promote psychological safety. The audience (technical/DevOps practitioners) aligns, but the content is only tangentially relevant to the category.",
    "reasoning_summary": "This content critiques delivery models and DevOps practices, focusing on system flow and organizational constraints. While it briefly references culture and autonomy, it does not address psychological safety or its core themes, making it only marginally relevant to the category.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Strategic Goals",
    "calculated_at": "2025-06-06T14:23:19",
    "ai_confidence": 41.35,
    "ai_mentions": 0.7,
    "ai_alignment": 4.8,
    "ai_depth": 4.2,
    "ai_intent": 4.5,
    "ai_audience": 6.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. While it references high-level system thinking and DevOps principles, it does not explicitly discuss long-term strategic goals, frameworks for setting objectives, or alignment with agile strategy. The focus is on operational dysfunctions and cultural issues, not on defining or measuring strategic objectives. The audience is likely leaders or practitioners interested in improvement, but the discussion remains tactical and diagnostic rather than strategic. There are no penalties, as the content is current and not satirical.",
    "reasoning_summary": "This content focuses on diagnosing delivery bottlenecks and advocating for systemic improvements, but it does not directly address the definition, alignment, or measurement of strategic goals. Its relevance to the Strategic Goals category is limited and mostly indirect.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Azure Pipelines",
    "calculated_at": "2025-06-06T14:23:24",
    "ai_confidence": 7.2,
    "ai_mentions": 0.4,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.6,
    "ai_audience": 1.2,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content does not directly mention Azure Pipelines, nor does it discuss any specific features, configuration, or practices unique to Azure Pipelines. While it references DevOps, pipelines, YAML, and automation, these are only mentioned in passing and as examples of misunderstood DevOps practices, not as the main focus. The main thrust is a critique of organizational bottlenecks and a call for systems thinking, not a discussion of Azure Pipelines or its use in CI/CD. The audience is technical, but the content is not tailored to Azure Pipelines practitioners. There is minimal relevant signal and no depth on the category.",
    "reasoning_summary": "This content is a broad critique of software delivery bottlenecks and DevOps misunderstandings, with only passing, non-specific references to pipelines. It does not align with the Azure Pipelines category, lacking direct relevance or depth.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Complexity Thinking",
    "calculated_at": "2025-06-06T14:23:28",
    "ai_confidence": 41.85,
    "ai_mentions": 0.7,
    "ai_alignment": 4.6,
    "ai_depth": 4.2,
    "ai_intent": 4.5,
    "ai_audience": 7.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on system flow, organisational culture, and the limitations of traditional bottleneck thinking in software delivery. While it references systems thinking and value stream mapping—concepts adjacent to complexity—it does not explicitly mention complexity science, non-linear dynamics, emergence, or frameworks like Cynefin. The discussion is more about DevOps and systemic dysfunctions than about complexity theory itself. The audience (practitioners, leaders in Agile/DevOps) aligns, and the signal is high, but the direct connection to complexity thinking is limited to indirect themes rather than explicit exploration.",
    "reasoning_summary": "This content discusses systemic issues in software delivery and advocates for systems thinking, but it does not directly engage with complexity science or its frameworks. Its relevance to Complexity Thinking is indirect, focusing more on DevOps and organisational flow than on complexity theory.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Business Agility",
    "calculated_at": "2025-06-06T14:23:32",
    "ai_confidence": 84.7,
    "ai_mentions": 4.2,
    "ai_alignment": 9.1,
    "ai_depth": 8.7,
    "ai_intent": 8.5,
    "ai_audience": 8.9,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content does not directly mention 'business agility' but is conceptually aligned, focusing on system flow, organisational culture, and practices that enable adaptability and value delivery—core to business agility. It critiques traditional bottlenecks, advocates for systems thinking, value stream mapping, and autonomous teams, and highlights the importance of organisational change over technical fixes. The discussion is deep, targeting leaders and practitioners interested in improving organisational responsiveness, with minimal off-topic content.",
    "reasoning_summary": "While not explicitly naming business agility, the content strongly aligns with its principles—emphasizing system flow, culture, and organisational adaptability over technical bottlenecks. It offers a deep, relevant discussion for leaders and practitioners seeking greater agility.",
    "level": "Primary"
  },
  "Deployment Frequency": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Deployment Frequency",
    "calculated_at": "2025-06-06T14:23:37",
    "ai_confidence": 62.85,
    "ai_mentions": 3.7,
    "ai_alignment": 7.8,
    "ai_depth": 7.2,
    "ai_intent": 6.9,
    "ai_audience": 8.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content centers on system flow, bottlenecks, and DevOps principles, emphasizing that coding is not the main constraint in software delivery. While it references deployment practices and the importance of flow, it only briefly and indirectly mentions deployment frequency (e.g., 'deploy frequently, observe outcomes, adapt fast'). The main focus is on systemic issues, team practices, and cultural blockers rather than the explicit optimization of deployment intervals. The audience is well-aligned (DevOps, Agile practitioners), and the discussion is deep regarding system flow, but direct mentions of deployment frequency are sparse. No penalties were applied as the content is current and not critical of the category itself.",
    "reasoning_summary": "This content aligns with the deployment frequency category by advocating for frequent, reliable releases as part of healthy system flow, but its primary focus is on broader DevOps system constraints rather than directly optimizing deployment intervals.",
    "level": "Secondary"
  },
  "Agentic Agility": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agentic Agility",
    "calculated_at": "2025-06-06T14:23:43",
    "ai_confidence": 81.7,
    "ai_mentions": 4.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 8.1,
    "ai_audience": 8.6,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content does not explicitly mention 'Agentic Agility' or agency by name, but it is conceptually aligned throughout. It critiques the misconception that coding is the main bottleneck, emphasizing that true constraints are systemic—team practices, flow, and culture. The discussion highlights the importance of autonomy, accountability, and adaptive action (e.g., 'autonomous teams accountable for outcomes,' 'owning the system,' 'adopting disciplined engineering practices'), which are core to agentic agility. The text contrasts superficial Agile/DevOps rituals with genuine, intentional improvement, and stresses the need for teams to shape their environment and delivery model, not just follow process. The audience is clearly Agile/DevOps practitioners and leaders. The discussion is deep and focused, with little off-topic content. No penalties were applied, as the content is current, constructive, and not satirical or critical of the concept itself.",
    "reasoning_summary": "While the content never directly names 'Agentic Agility,' it strongly aligns with the concept by emphasizing autonomy, accountability, and adaptive action in Agile and DevOps. The focus on systemic improvement, team ownership, and intentional practices makes it highly relevant to the category.",
    "level": "Primary"
  },
  "GitHub": {
    "resourceId": "IO5EHjiHhTf",
    "category": "GitHub",
    "calculated_at": "2025-06-06T14:23:47",
    "ai_confidence": 2.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.3,
    "ai_intent": 0.4,
    "ai_audience": 0.8,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content does not mention GitHub at all, nor does it discuss any GitHub-specific tools, practices, or workflows. Its focus is on AI, bottlenecks in software delivery, DevOps principles, and systemic issues in team practices and culture. While the audience may overlap with those interested in GitHub (technical practitioners, DevOps professionals), there is no conceptual or direct alignment with the GitHub category. The discussion is broad and platform-agnostic, with no references to version control, collaboration features, or any GitHub service. Therefore, the confidence score is extremely low.",
    "reasoning_summary": "This content does not reference GitHub or discuss any related tools or practices. Its focus is on systemic issues in software delivery and DevOps, making it irrelevant to the GitHub category.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Team Performance",
    "calculated_at": "2025-06-06T14:23:53",
    "ai_confidence": 91.7,
    "ai_mentions": 7.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses systemic constraints and delivery bottlenecks at the team and system level, repeatedly referencing team practices, flow, and delivery models. It critiques common misconceptions (e.g., coding as the bottleneck) and emphasizes system-level metrics, value stream mapping, and team autonomy. The discussion is deep, with actionable examples (test-first, observability, Definition of Done, autonomous teams) and clear alignment to team performance as defined. The audience is practitioners and leaders focused on delivery effectiveness. There is minimal off-topic content, and no outdated or contradictory elements.",
    "reasoning_summary": "This content strongly aligns with 'Team Performance,' focusing on system flow, team practices, and delivery constraints. It explores how team-level behaviors and systemic factors impact outcomes, offering actionable insights for practitioners seeking to improve delivery effectiveness.",
    "level": "Primary"
  },
  "Change Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Change Management",
    "calculated_at": "2025-06-06T14:23:59",
    "ai_confidence": 74.2,
    "ai_mentions": 2.7,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 8.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content does not directly mention 'change management' but is conceptually aligned, focusing on systemic issues in software delivery, organisational culture, and the need for meaningful transformation—core to change management in Agile/DevOps. It discusses the importance of systems thinking, value stream mapping, and shifting team practices, all of which are foundational to effective change management. The depth is strong, with practical examples and critique of superficial fixes, but the main thrust is more about exposing dysfunctions than providing a structured change management approach. The intent is to provoke reflection and advocate for deeper organisational change, which fits the category, though not as its primary focus. The audience is well-aligned (practitioners, leaders in Agile/DevOps), and the content is focused with little off-topic material. No penalties were applied as the content is current and not satirical or critical of the category itself.",
    "reasoning_summary": "While the content rarely names 'change management' directly, it strongly aligns with its principles by challenging superficial fixes and advocating for systemic, cultural, and process change in Agile/DevOps environments. The focus on organisational transformation and flow makes it a relevant fit for the category.",
    "level": "Secondary"
  },
  "Team Motivation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Team Motivation",
    "calculated_at": "2025-06-06T14:24:04",
    "ai_confidence": 67.2,
    "ai_mentions": 2.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.9,
    "ai_intent": 6.8,
    "ai_audience": 8.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "Direct mentions of 'motivation' or related terms are minimal, but the content strongly aligns with team motivation concepts by emphasizing autonomy, ownership, and system-level practices that empower teams. It critiques dysfunctional delivery models and advocates for practices (autonomous teams, accountability, building in quality) that foster engagement and high performance. The depth is solid, with multiple examples and actionable advice, though the main focus is on system flow and DevOps principles rather than explicit motivational strategies. The audience is practitioners and leaders in agile/DevOps contexts, matching the category. The signal is high, with little off-topic content.",
    "reasoning_summary": "While not explicitly about team motivation, the content closely aligns by advocating for autonomy, ownership, and system practices that drive engagement and high performance in agile teams. Its focus on team empowerment and accountability makes it a strong, though indirect, fit for the category.",
    "level": "Secondary"
  },
  "System Configuration": {
    "resourceId": "IO5EHjiHhTf",
    "category": "System Configuration",
    "calculated_at": "2025-06-06T14:24:09",
    "ai_confidence": 18.7,
    "ai_mentions": 0.6,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 5.1,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on systemic issues in software delivery, such as value stream mapping, team practices, and organisational culture, rather than the setup, integration, or maintenance of systems. While it references DevOps and touches on automation and quality, these are discussed in the context of workflow and responsibility, not system configuration. There are no direct mentions of configuration management tools, system setup, or related best practices. The audience is technical, but the discussion is about delivery models and organisational flow, not configuring systems.",
    "reasoning_summary": "This content critiques software delivery bottlenecks and organisational practices, not system configuration. It discusses DevOps, flow, and team responsibility, but does not address system setup, integration, or configuration management. Relevance to 'System Configuration' is minimal.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-06-06T14:24:15",
    "ai_confidence": 67.6,
    "ai_mentions": 2.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "Direct mentions of 'Application Lifecycle Management' or ALM are absent, but the content strongly aligns with ALM principles by focusing on system flow, team practices, quality integration, and the end-to-end value stream. It discusses DevOps, disciplined engineering, and organizational culture as key to effective software delivery, all of which are central to ALM. The depth is solid, with practical examples and critique of common dysfunctions, though the focus is more on delivery flow and DevOps than on the full lifecycle (e.g., retirement, governance, or ALM tooling). The intent is to challenge misconceptions about bottlenecks in software delivery, targeting practitioners and leaders responsible for software systems. The content is focused, with minimal off-topic material.",
    "reasoning_summary": "The content aligns well with Application Lifecycle Management by emphasizing system flow, quality integration, and DevOps principles across the software lifecycle. While it lacks explicit ALM references, its focus on delivery practices and organizational culture is highly relevant to ALM audiences.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Decision Theory",
    "calculated_at": "2025-06-06T14:24:21",
    "ai_confidence": 19.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 6.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks in software delivery, with an emphasis on culture, practices, and value stream mapping. There is no explicit mention of decision theory, heuristics, probability, or behavioral economics. While the discussion touches on decision-making indirectly (e.g., how teams organize work, system responsibility), it does not explore decision theory frameworks, models, or cognitive psychology. The main intent is to critique misconceptions about bottlenecks and advocate for systems thinking, not to analyze or improve decision-making under uncertainty. The audience (DevOps, Agile practitioners) partially overlaps, but the content is not conceptually or deeply aligned with decision theory.",
    "reasoning_summary": "This content critiques misconceptions about bottlenecks in software delivery, focusing on systems thinking and DevOps practices. It does not discuss decision theory concepts, frameworks, or decision-making under uncertainty, so its relevance to the Decision Theory category is minimal.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-06-06T14:24:29",
    "ai_confidence": 18.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.8,
    "ai_intent": 2.1,
    "ai_audience": 5.1,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, DevOps principles, and disciplined engineering practices. However, it does not mention or discuss hypothesis formulation, experimentation, or validated learning. There are no references to testing hypotheses, A/B testing, or data-driven decision-making. The focus is on organizational culture, system responsibility, and the impact of AI on existing workflows, not on hypothesis-driven development. The audience (practitioners, leaders) overlaps, but the content lacks direct or conceptual alignment with the category.",
    "reasoning_summary": "This content focuses on system flow, DevOps, and organizational bottlenecks, not on hypothesis-driven development. It does not discuss hypothesis formulation, experimentation, or validated learning, making its relevance to the category minimal.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-06-06T14:24:35",
    "ai_confidence": 23.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks, emphasizing the importance of disciplined engineering, autonomy, and quality built into the process. However, it does not directly discuss customer satisfaction, measurement techniques, or customer feedback. While improved flow and quality can indirectly impact customer experience, the content never references customer satisfaction explicitly or explores it as a theme. The audience (DevOps, Agile practitioners) aligns, but the main intent and depth are not focused on customer satisfaction.",
    "reasoning_summary": "This content centers on DevOps system flow and organizational bottlenecks, not customer satisfaction. While improved practices may benefit customers, the discussion does not address customer happiness, feedback, or satisfaction metrics, making alignment with the category minimal.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Estimation",
    "calculated_at": "2025-06-06T14:24:40",
    "ai_confidence": 13.45,
    "ai_mentions": 0.7,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.1,
    "ai_audience": 4.2,
    "ai_signal": 2.3,
    "ai_penalties_applied": true,
    "ai_penalty_points": 2.5,
    "ai_penalty_details": "Mentions (-0.3): No direct reference to estimation; Alignment (-0.5): Content is about bottlenecks and system flow, not estimation; Depth (-0.5): No substantive discussion of estimation; Intent (-0.5): Intent is critique of delivery models, not estimation; Signal (-0.7): Most content is off-topic for estimation.",
    "final_score": 13.0,
    "reasoning": "The content focuses on system bottlenecks, DevOps principles, and the impact of AI on delivery models, not on estimation practices. There are no direct mentions or substantive discussion of estimation techniques, empirical forecasting, or collaborative estimation. The audience overlaps with Agile practitioners, but the content is not aligned with the Estimation category. Penalties were applied for lack of relevance and off-topic focus.",
    "reasoning_summary": "This content centers on system flow, DevOps, and AI's impact on delivery, not estimation. It lacks direct references or meaningful discussion of estimation practices, making it a poor fit for the Estimation category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agnostic Agile",
    "calculated_at": "2025-06-06T14:24:46",
    "ai_confidence": 54.7,
    "ai_mentions": 0.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.3,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content does not directly mention Agnostic Agile or its thought leaders, resulting in a very low 'mentions' score. However, it strongly aligns with Agnostic Agile principles: it critiques rigid, framework-centric thinking, emphasizes systems thinking, value delivery, and context-driven practices over process dogma. The discussion is deep regarding system flow, team autonomy, and the pitfalls of focusing on coding as the bottleneck, but it never explicitly frames these in Agnostic Agile terms. The intent is to challenge conventional agile/DevOps practices and advocate for context-sensitive, principle-driven improvement, which fits the Agnostic Agile ethos. The audience is practitioners and leaders interested in modern, adaptive delivery models. The content is focused and relevant, with little off-topic material. No penalties were applied as the content is current and not satirical or critical of Agnostic Agile itself.",
    "reasoning_summary": "While the content never mentions Agnostic Agile by name, it embodies many of its core principles—challenging rigid frameworks, focusing on system flow, and advocating for context-driven agility. Its alignment is strong, but lack of explicit reference limits overall confidence.",
    "level": "Tertiary"
  },
  "Definition of Ready": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Definition of Ready",
    "calculated_at": "2025-06-06T14:24:50",
    "ai_confidence": 13.7,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.5,
    "ai_intent": 1.2,
    "ai_audience": 4.1,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content does not directly mention or discuss the Definition of Ready (DoR). Its focus is on system flow, DevOps principles, and organizational bottlenecks, with only tangential references to backlog clarity (e.g., 'acceptance criteria are vague'). The only checklist-related mention is to Definition of Done, not DoR. There is no substantive exploration of DoR criteria, refinement techniques, or its impact on sprint planning. The audience is broadly Agile/DevOps practitioners, but the content is not targeted at DoR-specific concerns.",
    "reasoning_summary": "This content is not about Definition of Ready. It focuses on system flow, DevOps, and organizational bottlenecks, with only passing references to backlog clarity and no substantive discussion of DoR or its criteria.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Value Delivery",
    "calculated_at": "2025-06-06T14:24:55",
    "ai_confidence": 93.7,
    "ai_mentions": 8.7,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly addresses value delivery by challenging the misconception that coding is the main bottleneck, instead emphasizing system flow, team practices, and organizational culture—core aspects of value delivery in Agile, Scrum, and DevOps. It references value stream mapping, systems thinking (First Way of DevOps), and practices like test-first development, observability, and autonomous teams, all of which are central to maximizing customer value and business agility. The discussion is deep, with practical examples and actionable recommendations, and is clearly targeted at practitioners and leaders in Agile/DevOps environments. The focus remains tightly on value delivery, with minimal off-topic content and no outdated or contradictory elements.",
    "reasoning_summary": "This content is highly relevant to Value Delivery, focusing on system flow, value stream mapping, and organizational practices that impact iterative and continuous value delivery in Agile and DevOps. It aligns closely with the category’s intent and audience, offering deep, practical insights.",
    "level": "Primary"
  },
  "Organisational Culture": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Organisational Culture",
    "calculated_at": "2025-06-06T14:25:00",
    "ai_confidence": 87.2,
    "ai_mentions": 7.3,
    "ai_alignment": 9.4,
    "ai_depth": 8.8,
    "ai_intent": 8.7,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content directly references organisational culture as a root cause of delivery bottlenecks, explicitly stating 'your culture is [the enemy]' and contrasting effective versus dysfunctional cultures. It aligns conceptually by focusing on how culture, not coding, constrains agility and DevOps adoption. The discussion is deep, exploring systemic issues, value stream mapping, and the First Way of DevOps (Systems Thinking), all of which are cultural in nature. The intent is to challenge readers to address cultural and systemic barriers, not just technical ones. The audience is practitioners and leaders interested in Agile, DevOps, and transformation. The content is focused, with minimal off-topic material. No penalties were applied as the content is current, constructive, and directly relevant.",
    "reasoning_summary": "This content strongly fits the 'Organisational Culture' category, emphasizing how culture, not coding, is the true bottleneck in software delivery. It explores cultural dysfunctions, systemic flow, and DevOps principles, targeting Agile and DevOps practitioners seeking transformation.",
    "level": "Primary"
  },
  "Engineering Practices": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Engineering Practices",
    "calculated_at": "2025-06-06T14:25:06",
    "ai_confidence": 87.6,
    "ai_mentions": 7.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.5,
    "ai_audience": 8.0,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly references and advocates for core engineering practices such as test-first development, automation, observability, and building quality in from the start. It critiques organizational dysfunctions that undermine these practices and emphasizes the importance of disciplined engineering over tool-centric thinking. While not exhaustively technical, the discussion is deep, conceptually aligned, and targets practitioners and leaders in Agile/DevOps contexts. There are explicit mentions of engineering practices, but the main thrust is on system flow and culture, slightly reducing the directness and depth scores. No penalties are warranted as the content is current, supportive, and not satirical.",
    "reasoning_summary": "This content strongly aligns with Engineering Practices, emphasizing test-first development, automation, and building quality in. It critiques organizational habits that undermine these principles, targeting Agile and DevOps practitioners. The focus is relevant and substantial, with only minor emphasis on broader system issues.",
    "level": "Primary"
  },
  "Systems Thinking": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Systems Thinking",
    "calculated_at": "2025-06-06T14:25:11",
    "ai_confidence": 91.2,
    "ai_mentions": 8.7,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 8.8,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly references Systems Thinking, explicitly naming it as the 'First Way of DevOps' and framing the discussion around system flow, value streams, and organisational constraints. It aligns conceptually by emphasizing holistic analysis, feedback loops, and the interconnectedness of practices, culture, and delivery. The depth is strong, with detailed examples (e.g., mapping value streams, queues, feedback delays) and actionable strategies (test-first, observability, autonomous teams). The intent is to shift the reader's focus from isolated coding to systemic improvement, matching the category's purpose. The audience is practitioners and leaders in software delivery, consistent with Systems Thinking's typical audience. The content is focused, with minimal tangents, and no penalties were needed as it is current and supportive of the category.",
    "reasoning_summary": "This content is highly relevant to Systems Thinking, explicitly naming and applying its principles to software delivery. It explores systemic constraints, value streams, and organisational culture, offering practical strategies and aligning closely with the category’s intent and audience.",
    "level": "Primary"
  },
  "Behaviour Driven Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-06-06T14:25:18",
    "ai_confidence": 18.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 5.2,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content does not directly mention Behaviour Driven Development (BDD) or its core practices. While it discusses disciplined engineering, test-first development, and the importance of clear acceptance criteria, these are only tangentially related to BDD and are not explored in the context of BDD principles, collaboration, or tools. The main focus is on system flow, DevOps, and organizational bottlenecks, not on aligning development with business objectives through BDD. The audience overlaps somewhat (practitioners interested in delivery practices), but the content is not targeted at BDD practitioners or stakeholders. The signal-to-noise ratio is moderate, as some practices mentioned are relevant to BDD, but the overall discussion is not BDD-centric.",
    "reasoning_summary": "This content focuses on system flow, DevOps, and organizational bottlenecks, with only brief, indirect references to practices that overlap with BDD. It does not discuss BDD principles, collaboration, or tools, and is not targeted at a BDD-specific audience.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-06T14:25:25",
    "ai_confidence": 7.2,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content does not mention OKRs or related terminology at all. Its focus is on DevOps, systems thinking, value stream mapping, and the impact of AI on software delivery bottlenecks. While it discusses outcome accountability and disciplined engineering practices, these are not framed within the OKR methodology or its principles. There is no exploration of objectives, key results, alignment, or measurement as defined by John Doerr. The audience (DevOps, engineering leaders) could overlap with OKR practitioners, but the content is not targeted at OKR implementation or theory. Signal-to-noise is moderate, as the content is focused but not on OKRs.",
    "reasoning_summary": "This content is focused on DevOps, system flow, and AI's impact on software delivery, with no mention or exploration of OKRs. It does not align with the Objective Key Results category.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Cell Structure Design",
    "calculated_at": "2025-06-06T14:25:31",
    "ai_confidence": 23.45,
    "ai_mentions": 0.1,
    "ai_alignment": 2.3,
    "ai_depth": 2.6,
    "ai_intent": 2.2,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on bottlenecks in software delivery, DevOps principles, and the impact of AI on coding practices. While it discusses autonomous teams and system flow, it does not mention Cell Structure Design, the Beta Codex, or decentralised network-based structures. The main themes are aligned with modern delivery models and autonomy, but not specifically with Cell Structure Design. The audience and signal are relatively high due to relevance for organisational design practitioners, but direct alignment and depth regarding Cell Structure Design are minimal.",
    "reasoning_summary": "This content addresses DevOps, system flow, and team autonomy but does not reference Cell Structure Design or its core principles. Its focus is tangential, with only minor conceptual overlap regarding autonomy and accountability.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Philosophy",
    "calculated_at": "2025-06-06T14:25:35",
    "ai_confidence": 81.6,
    "ai_mentions": 4.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.3,
    "ai_intent": 8.1,
    "ai_audience": 8.6,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content strongly aligns with Agile Philosophy by critiquing the misconception that coding is the main bottleneck and emphasizing system flow, team autonomy, and cultural change—core Agile values. It references value delivery, feedback loops, and the importance of organizational culture, echoing Agile principles. While it doesn't explicitly mention 'Agile' or the Manifesto, its focus on systems thinking, continuous improvement, and team responsibility is conceptually aligned. The discussion is deep and targets practitioners and leaders interested in Agile mindsets, with minimal off-topic content. No penalties were applied as the tone is constructive and current.",
    "reasoning_summary": "This content closely fits Agile Philosophy, focusing on system flow, team autonomy, and cultural change over technical bottlenecks. It deeply explores Agile-aligned themes like value delivery and continuous improvement, making it highly relevant to the category.",
    "level": "Primary"
  },
  "Artificial Intelligence": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-06-06T14:25:41",
    "ai_confidence": 86.7,
    "ai_mentions": 8.7,
    "ai_alignment": 9.5,
    "ai_depth": 8.9,
    "ai_intent": 8.8,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content directly discusses AI's impact on software development, Agile, and DevOps, repeatedly referencing AI in the context of coding, delivery models, and system constraints. It aligns conceptually with the category by exploring how AI exposes systemic issues rather than being a panacea, and it delves into DevOps principles, value stream mapping, and quality practices in the context of AI. The discussion is substantial, with practical examples and recommendations for integrating AI into disciplined engineering practices. The intent is to inform practitioners and leaders about the real implications of AI in Agile/DevOps environments, matching the category's audience. The content is focused, with minimal off-topic material, and no penalties are warranted.",
    "reasoning_summary": "This content is highly relevant to the 'Artificial Intelligence' category, focusing on AI's role in exposing and influencing Agile and DevOps practices. It offers a deep, practical discussion for practitioners, aligning closely with the category's intent and audience.",
    "level": "Primary"
  },
  "Scrum Team": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Scrum Team",
    "calculated_at": "2025-06-06T14:25:45",
    "ai_confidence": 18.7,
    "ai_mentions": 0.6,
    "ai_alignment": 2.2,
    "ai_depth": 2.7,
    "ai_intent": 2.0,
    "ai_audience": 5.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks, with only tangential references to team autonomy and accountability. There are no direct mentions of the Scrum Team as an accountability, nor discussion of its structure, roles, or responsibilities per the Scrum Guide. While 'autonomous teams' and 'Definition of Done' are mentioned, these are not explicitly tied to Scrum Teams. The main audience is practitioners interested in DevOps and modern delivery, not specifically Scrum Team members or those seeking to understand Scrum Team accountability. The content is relevant to team practices in general but does not align with the strict definition of the 'Scrum Team' category.",
    "reasoning_summary": "This content discusses delivery bottlenecks, DevOps, and team autonomy, but does not address the Scrum Team accountability, structure, or responsibilities as defined in the Scrum Guide. Its focus is broader and not specific to Scrum Teams.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Lean Startup",
    "calculated_at": "2025-06-06T14:25:58",
    "ai_confidence": 7.8,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on system flow, DevOps, and organizational bottlenecks in software delivery, especially in the context of AI and coding. There are no direct mentions of Lean Startup, nor are Lean Startup concepts like MVPs, Build-Measure-Learn, or validated learning discussed. The main themes are about systems thinking, team practices, and quality as a system responsibility, which are not unique to Lean Startup. The audience is technical and delivery-focused, which partially overlaps with Lean Startup practitioners, but the content is not tailored to Lean Startup methodology or its core principles. The signal-to-noise ratio is moderate, as the discussion is focused but not on the Lean Startup category.",
    "reasoning_summary": "This content centers on DevOps, system flow, and organizational culture in software delivery, with no reference to Lean Startup principles or practices. It does not discuss MVPs, iterative learning, or Lean experimentation, making it a poor fit for the Lean Startup category.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Sensemaking",
    "calculated_at": "2025-06-06T14:26:04",
    "ai_confidence": 54.7,
    "ai_mentions": 1.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.9,
    "ai_intent": 6.2,
    "ai_audience": 7.1,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content does not directly mention 'sensemaking' or its frameworks, but it does encourage readers to re-examine assumptions about bottlenecks in software delivery, focusing on system flow, team practices, and organisational culture. It aligns conceptually with sensemaking by challenging prevailing mental models and urging systemic analysis (e.g., mapping value streams, understanding constraints). However, it lacks explicit discussion of sensemaking principles, frameworks like Cynefin, or collective interpretation of complexity. The depth is moderate, as it explores systemic issues and the need for new perspectives, but does not deeply analyze sensemaking as a discipline. The intent is to provoke reflection and systemic thinking, which is adjacent to sensemaking, but not fully centered on it. The audience (practitioners, leaders in software delivery) is well-aligned. The content is focused, with little off-topic material, but the signal is not exclusively about sensemaking.",
    "reasoning_summary": "This content encourages systemic reflection and challenges assumptions about bottlenecks in software delivery, aligning moderately with sensemaking themes. While it promotes re-examining complexity and organizational constraints, it does not explicitly discuss sensemaking frameworks or practices.",
    "level": "Tertiary"
  },
  "Remote Working": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Remote Working",
    "calculated_at": "2025-06-06T14:26:08",
    "ai_confidence": 7.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on bottlenecks in software delivery, DevOps principles, and the impact of AI on coding and system flow. It discusses team practices, system thinking, and quality, but does not mention or address remote working, distributed teams, or related challenges. There are no references to remote collaboration, tools, or Agile ceremonies in a remote context. The audience is technical, but the content is not aligned with remote working topics.",
    "reasoning_summary": "This content does not address remote working or distributed Agile teams. Its focus is on system flow, DevOps, and AI's impact on software delivery, with no discussion of remote collaboration, tools, or practices relevant to the Remote Working category.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Delivery",
    "calculated_at": "2025-06-06T14:26:14",
    "ai_confidence": 91.7,
    "ai_mentions": 7.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.1,
    "ai_audience": 8.8,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses product delivery by challenging the misconception that coding is the main bottleneck, instead emphasizing system flow, team practices, and organizational culture. It references DevOps principles, value stream mapping, quality assurance as a system responsibility, and disciplined engineering practices—all core to product delivery. The discussion is deep, practical, and targets practitioners and leaders involved in delivering software. While the term 'product delivery' is not repeatedly named, the entire narrative is conceptually and practically aligned with the category, focusing on improving delivery effectiveness and outcomes. No penalties were applied as the content is current, constructive, and fully relevant.",
    "reasoning_summary": "This content is highly relevant to Product Delivery, focusing on system flow, DevOps, quality practices, and organizational culture as key delivery constraints. It offers practical insights for practitioners and leaders, deeply aligning with the category’s core themes and audience.",
    "level": "Primary"
  },
  "Technical Excellence": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Technical Excellence",
    "calculated_at": "2025-06-06T14:26:18",
    "ai_confidence": 91.7,
    "ai_mentions": 7.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.0,
    "ai_audience": 8.7,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content strongly aligns with Technical Excellence, focusing on disciplined engineering practices (test-first, observability, automation, Definition of Done) and their role in building quality into software systems. It critiques superficial DevOps/tooling approaches and emphasizes system-level thinking, flow, and team autonomy—core to technical excellence. While it doesn't use the term 'technical excellence' directly, it thoroughly explores its principles, targeting practitioners and leaders. The discussion is deep, relevant, and focused, with minimal off-topic content. No penalties were applied as the content is current, constructive, and fully aligned.",
    "reasoning_summary": "This content deeply explores how disciplined engineering practices, system thinking, and team autonomy drive high-quality software delivery—core aspects of Technical Excellence. It connects these principles to modern challenges like AI, making it highly relevant and well-aligned with the category.",
    "level": "Primary"
  },
  "Competence": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Competence",
    "calculated_at": "2025-06-06T14:26:22",
    "ai_confidence": 62.7,
    "ai_mentions": 2.3,
    "ai_alignment": 7.6,
    "ai_depth": 6.9,
    "ai_intent": 6.2,
    "ai_audience": 7.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. While it references disciplined engineering practices, autonomy, and quality as system responsibilities, it does not directly focus on competence as defined (continuous skill development, mastery, or professional capability). The alignment is moderate, as fostering autonomy and quality implies competence, but the main thrust is about systemic issues, not individual or team capability development. There are few explicit mentions of competence, and the depth is more about system flow than skill-building. The audience is practitioners and leaders in Agile/DevOps, which fits, and the content is focused with little filler.",
    "reasoning_summary": "This content addresses systemic issues in software delivery, highlighting the importance of flow, autonomy, and quality. While it touches on practices that imply competence, its primary focus is not on skill development or mastery, resulting in moderate alignment with the 'Competence' category.",
    "level": "Secondary"
  },
  "Automated Testing": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Automated Testing",
    "calculated_at": "2025-06-06T14:26:26",
    "ai_confidence": 67.7,
    "ai_mentions": 4.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 6.9,
    "ai_audience": 8.1,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "Direct mentions of automated testing are limited, but the content references 'Test-First' development, automation, and feedback loops, which conceptually align with automated testing principles. The discussion emphasizes quality as a system responsibility, advocating for automation and integration of testing into the development process. However, the main focus is on systemic bottlenecks and organizational culture, not a deep dive into automated testing practices, tools, or methodologies. The audience is technical and process-oriented, matching the category, and the content is mostly relevant, though not exclusively about automated testing.",
    "reasoning_summary": "The content aligns moderately with Automated Testing by advocating for test-first practices, automation, and quality as a system responsibility, but its primary focus is on systemic delivery issues rather than in-depth automated testing methods or tools.",
    "level": "Secondary"
  },
  "Unrealised Value": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Unrealised Value",
    "calculated_at": "2025-06-06T14:26:31",
    "ai_confidence": 36.85,
    "ai_mentions": 0.2,
    "ai_alignment": 3.7,
    "ai_depth": 4.1,
    "ai_intent": 3.2,
    "ai_audience": 7.1,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on system flow, DevOps, and organisational bottlenecks, arguing that coding is not the main constraint in software delivery. While it discusses value stream mapping and systemic improvement, it does not directly mention or deeply explore Unrealised Value as defined in Evidence-Based Management. There are no explicit references to untapped market opportunities, innovation potential, or EBM frameworks. The main intent is to critique misconceptions about bottlenecks and advocate for systemic change, not to identify or measure Unrealised Value. The audience (technical leaders, DevOps practitioners) overlaps with those interested in Unrealised Value, and the content is focused and relevant to improvement, but the conceptual and intent fit is only partial.",
    "reasoning_summary": "This content critiques common bottlenecks in software delivery and advocates for systemic improvement, referencing value stream mapping. However, it does not directly address Unrealised Value or EBM concepts, resulting in only a partial alignment with the category.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Empirical Process Control",
    "calculated_at": "2025-06-06T14:26:47",
    "ai_confidence": 67.6,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content does not directly mention 'Empirical Process Control' or its canonical terminology, resulting in a low 'mentions' score. However, it strongly aligns with the category's core concepts: it critiques prescriptive, process-driven approaches and advocates for system-level transparency, inspection, and adaptation—key tenets of empirical process control. The discussion of mapping value streams, building quality in, and adapting based on observed outcomes reflects deep conceptual alignment and moderate depth. The intent is to shift mindsets toward evidence-based, adaptive practices, targeting practitioners and leaders in Agile/DevOps contexts. The content is focused, with minimal off-topic material. No penalties were applied, as the content is current and not contradictory.",
    "reasoning_summary": "While the content rarely names empirical process control directly, it robustly explores its principles—transparency, inspection, adaptation, and system-level improvement—within Agile and DevOps. The focus on evidence-based change and critique of prescriptive models aligns well with the category.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Continuous Learning",
    "calculated_at": "2025-06-06T14:26:52",
    "ai_confidence": 67.7,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 7.0,
    "ai_audience": 8.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational culture, emphasizing the need for disciplined engineering practices, feedback loops, and team autonomy. While it does not directly mention 'Continuous Learning,' it aligns conceptually by advocating for systemic improvement, learning from failures, and adapting practices. The discussion is deep and relevant for Agile/DevOps practitioners, but explicit references to growth mindset or knowledge sharing are limited, resulting in lower direct mention and slightly reduced depth scores.",
    "reasoning_summary": "This content aligns with Continuous Learning by promoting systemic improvement, feedback, and adaptive practices in Agile/DevOps contexts, though it lacks explicit mention of learning or growth mindset. Its focus on team practices and system thinking makes it relevant to the category.",
    "level": "Secondary"
  },
  "Asynchronous Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Asynchronous Development",
    "calculated_at": "2025-06-06T14:26:56",
    "ai_confidence": 18.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 5.2,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, DevOps principles, and the impact of AI on coding practices. It discusses flow, autonomy, and team practices, but does not mention or explore asynchronous development, its principles, tools, or challenges. There is no discussion of distributed teams, asynchronous workflows, or related best practices. The audience (technical leaders, practitioners) partially overlaps, but the content is not aligned with the category's core meaning.",
    "reasoning_summary": "This content addresses systemic issues in software delivery and DevOps, not asynchronous development. It lacks discussion of asynchronous principles, tools, or workflows, making it only marginally relevant to the category.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-06-06T14:27:03",
    "ai_confidence": 41.7,
    "ai_mentions": 0.4,
    "ai_alignment": 4.8,
    "ai_depth": 4.2,
    "ai_intent": 4.5,
    "ai_audience": 6.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content critiques common misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. It references DevOps principles (notably Systems Thinking and value stream mapping) and advocates for disciplined engineering practices, autonomy, and feedback loops. However, it does not explicitly discuss evidence-based leadership, empirical data, or metrics-driven decision-making. The focus is on systemic improvement and culture, which aligns tangentially with evidence-based leadership, but lacks direct mention or in-depth exploration of evidence-based frameworks, leadership decision processes, or the use of empirical evidence in leadership. The audience is likely leaders or change agents, but the primary intent is to challenge delivery models, not to instruct on evidence-based leadership per se.",
    "reasoning_summary": "The content aligns partially with Evidence Based Leadership by advocating systemic improvement and referencing DevOps principles, but lacks explicit discussion of evidence-based leadership, empirical data, or metrics-driven decision-making. Its focus is more on delivery culture and system flow than on evidence-based leadership practices.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Frameworks",
    "calculated_at": "2025-06-06T14:27:07",
    "ai_confidence": 41.85,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.9,
    "ai_intent": 4.2,
    "ai_audience": 4.6,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content critiques common misconceptions in software delivery, emphasizing system flow, team practices, and organizational culture over coding as the bottleneck. It references DevOps principles (notably the First Way: Systems Thinking) and advocates for practices like test-first development, observability, and autonomous teams. However, it does not directly discuss or compare Agile frameworks, nor does it explicitly reference Scrum, Kanban, Lean, XP, or the Agile Manifesto. The focus is on systemic improvement and DevOps culture rather than Agile frameworks themselves. While some practices overlap with Agile thinking, the content is not primarily about Agile frameworks, their principles, or their implementation. Thus, the fit is tangential, with only partial conceptual alignment and limited direct relevance to the category.",
    "reasoning_summary": "This content centers on system flow, DevOps, and organizational culture, with only indirect overlap to Agile frameworks. It does not directly discuss or compare Agile frameworks, so its relevance to the category is limited and mostly tangential.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Operational Practices",
    "calculated_at": "2025-06-06T14:27:12",
    "ai_confidence": 93.2,
    "ai_mentions": 7.7,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content directly addresses operational practices by critiquing common misconceptions about bottlenecks in software delivery and emphasizing the importance of system flow, value stream mapping, and disciplined engineering practices. It references DevOps principles (notably the First Way: Systems Thinking), discusses the integration of quality into the process, and highlights practical strategies such as test-first development, observability, and autonomous teams. The discussion is deep and practical, targeting practitioners and leaders responsible for operational efficiency. There is minimal off-topic content, and the focus remains on improving operational practices rather than theoretical debate or unrelated business strategy. No penalties were applied as the content is current, constructive, and fully aligned with the category.",
    "reasoning_summary": "This content is highly relevant to Operational Practices, focusing on system flow, value stream mapping, and practical DevOps principles. It offers actionable insights for improving operational efficiency, making it an excellent fit for the category.",
    "level": "Primary"
  },
  "Organisational Physics": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Organisational Physics",
    "calculated_at": "2025-06-06T14:27:16",
    "ai_confidence": 91.7,
    "ai_mentions": 7.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.1,
    "ai_audience": 8.8,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly references systems thinking, value stream mapping, feedback loops, and organisational culture—core to Organisational Physics. It thoroughly discusses how organisational structure, flow, and practices, not coding, are the true constraints in software delivery. The main intent is to shift focus from individual coding to systemic organisational issues, targeting practitioners and leaders. The discussion is deep, focused, and highly relevant, with minimal off-topic content. No penalties were applied as the content is current, constructive, and fully aligned.",
    "reasoning_summary": "This content is highly relevant to Organisational Physics, focusing on systems thinking, organisational flow, and the interplay of structure and culture in software delivery. It deeply explores how systemic issues, not coding, are the real constraints, making it an excellent fit for the category.",
    "level": "Primary"
  },
  "Entrepreneurship": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Entrepreneurship",
    "calculated_at": "2025-06-06T14:27:19",
    "ai_confidence": 18.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 1.8,
    "ai_audience": 6.0,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on software delivery bottlenecks, DevOps principles, and the impact of AI on development practices. It discusses system flow, team practices, and organizational culture, but does not address entrepreneurship, innovation in business, risk-taking, or value creation from an entrepreneurial perspective. There are no direct mentions or substantial conceptual overlap with entrepreneurship. The audience is technical, not entrepreneurial, and the content is tightly focused on delivery models, not venture creation or entrepreneurial strategy.",
    "reasoning_summary": "This content centers on DevOps, system flow, and AI in software delivery, with no direct or substantial connection to entrepreneurship. It targets technical practitioners, not entrepreneurs, and does not discuss innovation, risk-taking, or value creation in a business context.",
    "level": "Ignored"
  },
  "Common Goals": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Common Goals",
    "calculated_at": "2025-06-06T14:27:24",
    "ai_confidence": 54.35,
    "ai_mentions": 1.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.9,
    "ai_intent": 6.1,
    "ai_audience": 7.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on systemic issues in software delivery, emphasizing flow, systems thinking, and the need for disciplined engineering practices. While it references DevOps principles (notably the First Way: Systems Thinking) and critiques siloed practices, it does not directly discuss the concept of Common Goals, shared objectives, or explicit alignment between strategy and execution. There are implicit connections to team alignment and accountability, but the main thrust is about identifying real bottlenecks and improving system flow, not about establishing or operationalizing Common Goals. The audience is practitioners and leaders in Agile/DevOps contexts, and the content is relevant, but the direct fit to the Common Goals category is moderate rather than strong.",
    "reasoning_summary": "This content critiques common misconceptions in software delivery, highlighting the importance of systems thinking and flow. While it aligns with Agile/DevOps audiences and touches on team accountability, it only indirectly relates to Common Goals, focusing more on systemic improvement than on shared objectives or alignment.",
    "level": "Tertiary"
  },
  "Beta Codex": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Beta Codex",
    "calculated_at": "2025-06-06T14:27:31",
    "ai_confidence": 54.7,
    "ai_mentions": 0.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.3,
    "ai_intent": 6.0,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content does not directly mention Beta Codex or its terminology, resulting in a very low Direct Mentions score. However, it strongly critiques traditional hierarchical practices and advocates for systemic thinking, autonomy, and flow—concepts that align with Beta Codex principles. The discussion is substantial, focusing on organisational culture, team autonomy, and system-level constraints rather than code, which resonates with decentralised, adaptive approaches. The intent is to challenge outdated models and promote more human-centric, adaptive practices, which fits the Beta Codex audience and purpose, though the framing is more DevOps-centric. The audience is practitioners and leaders interested in modern organisational design, and the content is focused with little off-topic material. No penalties were applied as the content is current and not critical of Beta Codex itself.",
    "reasoning_summary": "While the content never mentions Beta Codex, it aligns conceptually by challenging hierarchical bottlenecks and advocating for autonomy, flow, and systemic thinking. Its focus on adaptive, human-centric practices fits the category, but the framing is more DevOps than Beta Codex-specific.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-06-06T14:27:36",
    "ai_confidence": 74.35,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.1,
    "ai_audience": 7.6,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content directly references value stream mapping, especially in the section 'If You Map Your Value Stream, the Bottleneck Isn't Where You Think,' and discusses mapping the system to identify bottlenecks. The main theme is systems thinking and flow, which are core to VSM. However, the discussion is broader, focusing on DevOps, AI, and organisational culture, with VSM as a supporting concept rather than the sole focus. The depth on VSM is moderate, with practical examples and alignment to the intended audience (practitioners and leaders in software delivery). No penalties were applied as the content is current and not critical of VSM.",
    "reasoning_summary": "The content aligns well with Value Stream Mapping by highlighting the importance of mapping systems to identify bottlenecks and improve flow. While VSM is not the exclusive focus, it is discussed meaningfully within the broader context of DevOps and organisational improvement.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "resourceId": "IO5EHjiHhTf",
    "category": "One Engineering System",
    "calculated_at": "2025-06-06T14:27:40",
    "ai_confidence": 41.85,
    "ai_mentions": 0.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 4.8,
    "ai_audience": 6.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, advocating for systems thinking, flow, and disciplined engineering practices. While these themes conceptually overlap with 1ES principles (integration, standardisation, quality), there is no direct mention of One Engineering System or its specific framework, tools, or implementation. The discussion is rooted in DevOps and general engineering culture, not 1ES itself. The audience and intent are partially aligned, but the lack of explicit 1ES reference and depth on its unique aspects limits confidence.",
    "reasoning_summary": "This content discusses systemic issues in software delivery and advocates for integrated, flow-focused practices, which conceptually align with One Engineering System principles. However, it does not mention 1ES directly or explore its specific framework, limiting its fit to the category.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-06-06T14:27:45",
    "ai_confidence": 62.7,
    "ai_mentions": 1.2,
    "ai_alignment": 7.6,
    "ai_depth": 6.9,
    "ai_intent": 7.2,
    "ai_audience": 7.8,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content does not directly mention the Agile Product Operating Model (APOM) or its terminology, resulting in a low 'mentions' score. However, it strongly aligns with APOM principles: it critiques project-based thinking, advocates for systems thinking, flow, autonomous teams, and quality built into the product—core APOM themes. The discussion is substantial, focusing on organisational culture, delivery models, and the shift from output to outcome, but it does not explicitly frame these within APOM or discuss its governance, incentives, or roadmap elements in detail. The intent is to challenge traditional bottlenecks and promote a product-centric, flow-based approach, which fits the APOM audience. The content is focused and relevant, with minimal off-topic material. No penalties were applied as the content is current and not critical of APOM itself.",
    "reasoning_summary": "While the content never directly references the Agile Product Operating Model, it is conceptually aligned—emphasising systems thinking, flow, autonomous teams, and product-centric delivery. The discussion is relevant and substantial for APOM audiences, though it lacks explicit APOM framing or terminology.",
    "level": "Secondary"
  },
  "Product Owner": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Owner",
    "calculated_at": "2025-06-06T14:27:49",
    "ai_confidence": 13.85,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.3,
    "ai_intent": 1.0,
    "ai_audience": 5.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, DevOps principles, and the impact of AI on development practices. It discusses value streams, team autonomy, and quality as a system responsibility, but does not mention or explore the Product Owner accountability, backlog prioritization, or stakeholder management. There is no direct or indirect reference to the Product Owner role, its responsibilities, or its decision-making authority. The audience may overlap with Product Owners, but the content is not tailored to their accountability or challenges.",
    "reasoning_summary": "This content addresses systemic issues in software delivery and DevOps, not the Product Owner's accountability. It lacks direct or indirect discussion of Product Owner responsibilities, decision-making, or value maximization, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Scaling": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Scaling",
    "calculated_at": "2025-06-06T14:27:54",
    "ai_confidence": 38.35,
    "ai_mentions": 0.7,
    "ai_alignment": 4.6,
    "ai_depth": 4.2,
    "ai_intent": 4.0,
    "ai_audience": 4.5,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on system flow, value stream mapping, and organizational culture as bottlenecks in software delivery, referencing DevOps principles and the First Way (Systems Thinking). However, it does not directly discuss scaling frameworks, cross-team coordination, or enterprise-level alignment. While it addresses systemic issues relevant to scaling, it lacks explicit mention of scaling methodologies, multi-team coordination, or scaling-specific challenges. The audience is practitioners interested in improving delivery models, which partially overlaps with scaling, but the main thrust is not scaling-specific. The discussion is deep on system flow and DevOps dysfunctions, but not on scaling strategies or frameworks.",
    "reasoning_summary": "The content explores systemic bottlenecks and DevOps principles, emphasizing flow and organizational culture. While these are relevant to scaling, it does not directly address scaling frameworks, cross-team coordination, or enterprise-level alignment, making its fit with the Scaling category partial rather than direct.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Self Organisation",
    "calculated_at": "2025-06-06T14:27:59",
    "ai_confidence": 77.6,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.3,
    "ai_intent": 7.8,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content strongly aligns with Self Organisation by critiquing traditional, hierarchical bottlenecks and advocating for autonomous, accountable teams. It highlights the need for system-level thinking, flow, and practices like test-first development, observability, and team ownership of outcomes. While 'self-organisation' is not directly named, the principles and practices discussed (autonomous teams, system responsibility for quality, flow over handoffs) are core to the category. The depth is substantial, with practical examples and a clear critique of anti-patterns. The audience is practitioners and leaders in Agile/DevOps contexts. No penalties apply, as the tone is constructive and current.",
    "reasoning_summary": "This content is highly relevant to Self Organisation, emphasizing autonomous teams, system responsibility, and flow over traditional bottlenecks. It thoroughly explores how empowered teams and disciplined practices drive value, closely matching the category’s intent and audience.",
    "level": "Secondary"
  },
  "Decision Making": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Decision Making",
    "calculated_at": "2025-06-06T14:28:05",
    "ai_confidence": 54.7,
    "ai_mentions": 1.2,
    "ai_alignment": 6.6,
    "ai_depth": 6.9,
    "ai_intent": 5.8,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content critiques common misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. It references DevOps principles (notably the First Way: Systems Thinking) and advocates for mapping value streams, building in quality, and adopting disciplined engineering practices. While these are adjacent to evidence-based decision-making, the discussion does not directly address structured, data-driven decision frameworks, metrics, or explicit evidence-based management. There are no direct mentions of 'decision making' or its core methodologies, and the focus is more on diagnosing systemic issues and advocating for cultural and process change. The audience (practitioners, leaders in Agile/DevOps) aligns, and the content is focused, but the fit with the Decision Making category is moderate due to the lack of explicit discussion on decision frameworks or evidence-based evaluation.",
    "reasoning_summary": "The content focuses on systemic issues in software delivery, advocating for flow and quality practices rooted in DevOps. While it aligns with the audience and touches on process improvement, it only moderately fits the Decision Making category due to limited direct discussion of structured, evidence-based decision methodologies.",
    "level": "Tertiary"
  },
  "Windows": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Windows",
    "calculated_at": "2025-06-06T14:28:09",
    "ai_confidence": 0.0,
    "ai_mentions": 0.0,
    "ai_alignment": 0.0,
    "ai_depth": 0.0,
    "ai_intent": 0.0,
    "ai_audience": 0.1,
    "ai_signal": 0.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 0.0,
    "reasoning": "The content does not mention Windows at all, nor does it discuss any aspect of the Windows operating system. Its focus is on software delivery, DevOps, AI in coding, and organisational practices. There are no references to Windows installation, configuration, troubleshooting, or any other key topic relevant to the Windows category. The audience is software delivery professionals, not specifically Windows users or administrators. The content is entirely off-topic for the Windows category.",
    "reasoning_summary": "This content is unrelated to Windows, focusing instead on software delivery, DevOps, and AI. It does not address any Windows-specific topics or audiences.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Project Management",
    "calculated_at": "2025-06-06T14:28:14",
    "ai_confidence": 77.6,
    "ai_mentions": 2.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.3,
    "ai_intent": 7.8,
    "ai_audience": 8.1,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content does not directly mention 'project management' or its methodologies, but it strongly aligns with project management principles, especially in the context of delivery models, system flow, team practices, and organizational culture. It discusses value stream mapping, bottlenecks, quality as a system responsibility, and the impact of AI on delivery processes—all highly relevant to project management, particularly in agile and DevOps environments. The depth is substantial, exploring systemic issues and practical strategies for improvement. The intent is to challenge misconceptions about bottlenecks and advocate for holistic, system-level thinking, which is central to effective project management. The audience is practitioners and leaders involved in delivery and organizational improvement, matching the category. The content is focused and relevant, with minimal off-topic material. No penalties were applied as the content is current and not critical of project management itself.",
    "reasoning_summary": "While not explicitly about project management, the content deeply explores systemic delivery issues, value stream mapping, and organizational practices—core concerns of project management. Its focus on flow, quality, and team autonomy aligns well with the category’s scope and audience.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Ability to Innovate",
    "calculated_at": "2025-06-06T14:28:22",
    "ai_confidence": 56.7,
    "ai_mentions": 2.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.9,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content focuses on system flow, team practices, and organisational culture as the real constraints in software delivery, challenging the misconception that coding is the main bottleneck. It references DevOps principles (notably the First Way: Systems Thinking) and advocates for practices like test-first development, observability, and autonomous teams. While these are foundational to innovation, the discussion is framed more around delivery effectiveness and system improvement than directly on innovation mechanisms or metrics. There are no explicit mentions of 'innovation' or its measurement, and the content does not delve into innovation-specific frameworks, metrics, or case studies. However, the emphasis on removing systemic bottlenecks, fostering autonomy, and improving flow aligns conceptually with enabling innovation. The audience (practitioners, leaders in Agile/DevOps) matches the category, and the content is focused and relevant, but the direct connection to 'Ability to Innovate' is more implicit than explicit.",
    "reasoning_summary": "The content aligns with 'Ability to Innovate' by highlighting systemic barriers to effective delivery and advocating for practices that enable innovation, though it stops short of directly discussing innovation metrics or frameworks. Its relevance is strong but mostly implicit.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Organisational Agility",
    "calculated_at": "2025-06-06T14:28:26",
    "ai_confidence": 91.7,
    "ai_mentions": 7.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.1,
    "ai_audience": 8.8,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses organisational constraints, system flow, team practices, and culture as the real bottlenecks in software delivery, not coding. It references DevOps principles (notably Systems Thinking and value stream mapping), advocates for cross-functional, autonomous teams, and stresses building quality in from the start. The discussion is deep, with actionable practices (test-first, observability, operational readiness) and a clear critique of traditional, siloed structures. The main intent is to shift organisational mindset and practices toward agility, targeting leaders and practitioners responsible for delivery models. While 'organisational agility' is not named verbatim, the conceptual alignment and depth are very strong, and the content is highly focused on relevant themes.",
    "reasoning_summary": "This content strongly aligns with Organisational Agility, emphasizing system flow, cultural change, and agile practices over technical bottlenecks. It targets leaders and practitioners, offering deep, focused discussion on shifting organisational models for greater adaptability and responsiveness.",
    "level": "Primary"
  },
  "Test Automation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Test Automation",
    "calculated_at": "2025-06-06T14:28:30",
    "ai_confidence": 41.6,
    "ai_mentions": 2.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 3.8,
    "ai_audience": 7.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "Direct mentions of test automation are minimal; the content references automation and test-first practices but does not focus on test automation principles, frameworks, or tools. The main theme is systems thinking and organizational bottlenecks, with only tangential discussion of testing and automation. The audience is technical, and some best practices (test-first, automation) are mentioned, but the depth and alignment with the category are limited. No penalties were applied as the content is current and not critical of test automation itself.",
    "reasoning_summary": "The content primarily discusses systemic bottlenecks in software delivery, with only brief, indirect references to test automation. While it mentions automation and test-first practices, its main focus is not on test automation principles, tools, or frameworks.",
    "level": "Tertiary"
  },
  "Release Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Release Management",
    "calculated_at": "2025-06-06T14:28:36",
    "ai_confidence": 36.85,
    "ai_mentions": 0.7,
    "ai_alignment": 4.2,
    "ai_depth": 4.6,
    "ai_intent": 3.8,
    "ai_audience": 4.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, emphasizing system flow, team practices, and organizational culture over coding. While it references DevOps principles (e.g., Systems Thinking, value stream mapping, flow, feedback, and quality as a system responsibility), it does not directly discuss release management strategies, scheduling, or tools. There are no explicit mentions of release management or its key practices. The alignment is partial, as some concepts (flow, feedback, operational readiness) overlap with release management, but the main focus is on systemic dysfunctions and cultural issues, not the planning, scheduling, or control of releases. The depth of discussion is moderate regarding delivery system issues but shallow for release management specifics. The audience is technical and process-oriented, which partially aligns, and the content is focused but not directly relevant to release management.",
    "reasoning_summary": "This content focuses on systemic bottlenecks and DevOps principles, not on release management practices. While some themes overlap, it does not directly address release planning, scheduling, or control, resulting in only partial alignment with the Release Management category.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Portfolio Management",
    "calculated_at": "2025-06-06T14:28:40",
    "ai_confidence": 23.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 7.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and team-level practices, critiquing misconceptions about coding as a bottleneck. While it references value streams and system thinking, it does not discuss portfolio-level strategy, investment prioritization, or portfolio management frameworks. There are no direct mentions of portfolio management, and the depth remains at the operational or team level. The audience is somewhat aligned, as leaders may read this, but the main focus is not on portfolio management. No penalties were applied.",
    "reasoning_summary": "This content centers on system flow and DevOps, not portfolio management. While it touches on value streams and organizational culture, it lacks direct discussion of portfolio-level strategy, prioritization, or management practices, making its fit with the category low.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Strategy",
    "calculated_at": "2025-06-06T14:28:44",
    "ai_confidence": 81.7,
    "ai_mentions": 3.6,
    "ai_alignment": 8.7,
    "ai_depth": 8.3,
    "ai_intent": 8.0,
    "ai_audience": 8.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content strongly aligns with Agile Strategy by critiquing traditional bottleneck assumptions and advocating for systems thinking, value stream mapping, and cultural change—core Agile strategic themes. It references DevOps principles, continuous value delivery, and organisational adaptability, targeting leaders and strategists. While 'Agile' is not directly named, the discussion is conceptually and practically aligned with Agile Strategy, focusing on integrating Agile/DevOps principles into organisational strategy and delivery models. The depth is substantial, with actionable recommendations and systemic analysis, though explicit Agile terminology is limited, slightly lowering the 'mentions' score.",
    "reasoning_summary": "This content deeply explores systemic constraints in software delivery, advocating for flow, autonomy, and cultural change—key Agile Strategy themes. While it rarely uses the term 'Agile,' its focus on organisational alignment and value delivery makes it highly relevant to Agile Strategy.",
    "level": "Primary"
  },
  "Flow Efficiency": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Flow Efficiency",
    "calculated_at": "2025-06-06T14:28:49",
    "ai_confidence": 91.7,
    "ai_mentions": 8.7,
    "ai_alignment": 9.6,
    "ai_depth": 9.2,
    "ai_intent": 9.0,
    "ai_audience": 8.5,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly challenges the misconception that coding is the main bottleneck, instead emphasizing system flow, value stream mapping, and the importance of eliminating bottlenecks—core to Flow Efficiency. It references DevOps' First Way (Systems Thinking), discusses mapping the value stream, and highlights practices like test-first development, observability, and autonomous teams, all of which are highly aligned with Flow Efficiency. The discussion is deep, practical, and targets practitioners and leaders in Agile/DevOps contexts. There is minimal off-topic content, and no outdated or contradictory elements. The only minor deduction is for a slightly broader audience focus, but this does not warrant a penalty.",
    "reasoning_summary": "This content is highly relevant to Flow Efficiency, focusing on system flow, value stream bottlenecks, and DevOps principles. It thoroughly explores how organizational practices impact throughput, making it an excellent fit for the category.",
    "level": "Primary"
  },
  "Backlog Refinement": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Backlog Refinement",
    "calculated_at": "2025-06-06T14:28:53",
    "ai_confidence": 13.7,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.8,
    "ai_intent": 2.0,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps, systems thinking, and organizational culture. While it references issues like vague acceptance criteria and the need for disciplined engineering practices, it does not discuss backlog refinement, its purpose, techniques, or related Agile practices. There are no direct mentions or substantial exploration of backlog refinement, and the main intent is to critique misconceptions about bottlenecks, not to inform or guide on backlog refinement. The audience overlaps somewhat with Agile practitioners, but the content is not targeted at backlog refinement specifically.",
    "reasoning_summary": "This content critiques software delivery bottlenecks from a DevOps and systems thinking perspective, with minimal relevance to backlog refinement. It neither discusses nor explores backlog refinement practices, making its fit with the category very low.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-06-06T14:28:58",
    "ai_confidence": 54.7,
    "ai_mentions": 1.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.3,
    "ai_intent": 6.0,
    "ai_audience": 7.1,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content does not directly mention 'Shift Left Strategy' but discusses related concepts such as building quality in from the start, test-first development, and integrating feedback early. The main focus is on systemic bottlenecks and DevOps principles, with some overlap to Shift Left ideas (e.g., quality as a system responsibility, test-first, observability). However, it does not explicitly frame these practices as 'Shift Left' nor does it deeply explore the strategy or its methodologies. The audience is technical and the signal is high, but the fit is partial and indirect.",
    "reasoning_summary": "This content aligns moderately with Shift Left Strategy by advocating for early quality practices and systemic improvements, but it does not explicitly discuss or frame these as Shift Left. The focus is broader, centering on DevOps and system flow rather than the specific strategy.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Test Driven Development",
    "calculated_at": "2025-06-06T14:29:03",
    "ai_confidence": 41.85,
    "ai_mentions": 2.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 4.0,
    "ai_audience": 7.1,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content is primarily a critique of misconceptions about bottlenecks in software delivery, focusing on system flow, DevOps, and organizational culture. TDD is mentioned only briefly (e.g., 'Test-First development so intent is explicit' and 'Write the test before the code'), but these are not explored in depth. The main discussion centers on systemic issues, not TDD principles, practices, or challenges. The audience is technical and would overlap with TDD practitioners, but the content's intent and depth are not strongly aligned with the TDD category. No penalties were applied as the content is current and not satirical or critical of TDD itself.",
    "reasoning_summary": "While the content briefly references test-first and writing tests before code, its main focus is on system flow, DevOps, and organizational culture, not Test Driven Development. TDD is not discussed in depth, making the fit with the category limited and mostly tangential.",
    "level": "Tertiary"
  },
  "Time to Market": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Time to Market",
    "calculated_at": "2025-06-06T14:29:09",
    "ai_confidence": 81.6,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.3,
    "ai_intent": 8.0,
    "ai_audience": 8.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly addresses systemic bottlenecks in software delivery, emphasizing flow, value stream mapping, and the importance of system-level practices over coding speed. While 'Time to Market' is not explicitly named, the discussion is conceptually aligned: it critiques practices that slow delivery and highlights strategies (autonomous teams, test-first, observability) that improve delivery speed. The depth is strong, with practical examples and actionable advice. The audience is practitioners and leaders in Agile/DevOps, matching the category. The signal is high, with little off-topic content. No penalties apply as the content is current and supportive.",
    "reasoning_summary": "This content strongly aligns with 'Time to Market' by focusing on systemic delivery bottlenecks, value stream flow, and practices that accelerate delivery. It offers deep, relevant insights for Agile and DevOps audiences, even though the term itself is not directly used.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-06-06T14:29:14",
    "ai_confidence": 13.7,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.3,
    "ai_intent": 1.0,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps principles, systems thinking, and cultural issues rather than Agile Planning Tools. There are no direct mentions of Agile planning tools, backlog management, or related methodologies. The discussion is conceptual and critical of common delivery models but does not explore or reference tools like Jira, Trello, or Asana, nor does it discuss planning techniques, metrics, or tool integration. The audience overlaps somewhat with Agile practitioners, but the content is not targeted at those seeking information about Agile Planning Tools. The signal-to-noise ratio is low for this category, as most content is off-topic for Agile Planning Tools.",
    "reasoning_summary": "This content critiques delivery bottlenecks and organizational culture in software development, focusing on DevOps and systems thinking. It does not discuss Agile Planning Tools, their use, or related methodologies, making it a poor fit for this category.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Service Level Expectation",
    "calculated_at": "2025-06-06T14:29:21",
    "ai_confidence": 7.2,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on system flow, bottlenecks, DevOps principles, and the impact of AI on software delivery. It discusses value stream mapping, flow, and quality practices, but never mentions Service Level Expectation (SLE) directly or indirectly. There is no discussion of SLE's definition, calculation, or application, nor any reference to its use in Agile, Scrum, or Kanban. The audience is practitioners interested in flow and DevOps, but the content is not aligned with SLE as a concept.",
    "reasoning_summary": "This content addresses system flow, bottlenecks, and DevOps culture but does not mention or discuss Service Level Expectation (SLE) in any form. It is not relevant to the SLE category as defined.",
    "level": "Ignored"
  },
  "Transparency": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Transparency",
    "calculated_at": "2025-06-06T14:29:25",
    "ai_confidence": 41.7,
    "ai_mentions": 1.2,
    "ai_alignment": 4.8,
    "ai_depth": 4.5,
    "ai_intent": 4.2,
    "ai_audience": 7.1,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks, emphasizing the need for disciplined engineering, autonomy, and accountability. While these themes are adjacent to transparency (e.g., visibility of bottlenecks, explicit intent, observability), the article does not directly discuss transparency, its practices, or its explicit role in Agile. There are no direct mentions or in-depth exploration of transparency as a core topic. The audience (Agile/DevOps practitioners) aligns, and the content is focused, but transparency is only tangentially addressed through related concepts like observability and system visibility.",
    "reasoning_summary": "The content is tangentially related to transparency through its focus on system flow, observability, and accountability, but it does not directly address transparency or its practices. Its main emphasis is on system bottlenecks and DevOps principles, making transparency a secondary, implicit theme.",
    "level": "Tertiary"
  },
  "Collaboration Tools": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Collaboration Tools",
    "calculated_at": "2025-06-06T14:29:29",
    "ai_confidence": 13.85,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on systemic bottlenecks in software delivery, emphasizing DevOps principles, system flow, and organizational culture. While it discusses team practices, autonomy, and quality, it does not mention or discuss collaboration tools, their features, or their integration with Agile. There are no references to platforms, tool comparisons, or best practices for tool usage. The audience is technical, but the content is not aligned with the category's focus on tools that enhance team communication and coordination.",
    "reasoning_summary": "This content addresses systemic issues in software delivery and DevOps but does not discuss collaboration tools or their role in Agile teams. It lacks direct references, alignment, and depth related to the category.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Throughput",
    "calculated_at": "2025-06-06T14:29:34",
    "ai_confidence": 36.45,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 3.8,
    "ai_audience": 7.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content critiques the misconception that coding is the main bottleneck in software delivery, emphasizing system flow, value stream mapping, and organizational constraints. However, it never directly discusses throughput as a delivery metric, nor does it analyze, visualize, or interpret throughput data. The focus is on systems thinking, flow, and DevOps principles, not on measuring or using throughput to inspect delivery health. While the audience and some themes overlap with throughput discussions, the content lacks explicit mention, calculation, or analysis of throughput, resulting in low scores for direct mentions, alignment, depth, and intent. No penalties were applied as the content is current and not satirical or critical of throughput itself.",
    "reasoning_summary": "This content focuses on system flow and organizational bottlenecks in software delivery, not on throughput as a delivery metric. While it shares some audience and conceptual overlap, it does not analyze or discuss throughput directly, resulting in a low confidence for this category.",
    "level": "Ignored"
  },
  "Definition of Workflow": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Definition of Workflow",
    "calculated_at": "2025-06-06T14:29:38",
    "ai_confidence": 36.7,
    "ai_mentions": 1.2,
    "ai_alignment": 4.8,
    "ai_depth": 4.5,
    "ai_intent": 4.0,
    "ai_audience": 7.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on system flow, bottlenecks, and DevOps principles, emphasizing the importance of value stream mapping and systemic constraints over coding. However, it does not explicitly discuss the Definition of Workflow as a set of explicit agreements or policies governing work flow, nor does it mention entry/exit criteria, WIP limits, or the Kanban-specific concept. The closest alignment is in its advocacy for systems thinking and flow, but it lacks direct references or in-depth exploration of Definition of Workflow as defined in Kanban or agile contexts. The audience is practitioners interested in DevOps and flow, which partially overlaps, and the content is focused, but the core category is only tangentially addressed.",
    "reasoning_summary": "While the content strongly advocates for systems thinking and flow in software delivery, it does not explicitly address the Definition of Workflow as a formal, explicit set of agreements or policies per Kanban or agile theory. Its relevance to the category is indirect and limited.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Professional Scrum",
    "calculated_at": "2025-06-06T14:29:44",
    "ai_confidence": 67.7,
    "ai_mentions": 1.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.3,
    "ai_intent": 7.0,
    "ai_audience": 8.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "Direct mentions of 'Professional Scrum' or its explicit terminology are absent, resulting in a low score for mentions. However, the content strongly aligns with Professional Scrum's ethos: it critiques mechanical, output-focused delivery models and advocates for system thinking, accountability, empiricism, and technical excellence (e.g., 'Definition of Done,' 'autonomous teams,' 'test-first development'). The discussion is deep and practical, focusing on how value is delivered and how dysfunctions in system flow and culture—not coding—are the real constraints. The intent is to challenge practitioners to adopt more professional, outcome-oriented ways of working, which matches the category's purpose. The audience is clearly practitioners and leaders in software delivery, and the content is focused with little filler. No penalties were applied, as the tone is constructive and current.",
    "reasoning_summary": "While the content never directly references Professional Scrum, it embodies its core principles—emphasizing system thinking, accountability, empiricism, and technical excellence. The discussion is deep and relevant for practitioners seeking to elevate their ways of working beyond mechanical frameworks.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-06-06T14:29:48",
    "ai_confidence": 91.7,
    "ai_mentions": 7.2,
    "ai_alignment": 9.7,
    "ai_depth": 9.4,
    "ai_intent": 9.0,
    "ai_audience": 8.6,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly addresses the interplay between organisational culture, team practices, and technology, repeatedly emphasizing that bottlenecks in software delivery are sociotechnical, not purely technical. It references systems thinking, value stream mapping, team autonomy, and the impact of organisational structure on outcomes. The discussion is deep, with practical examples and clear alignment to the category's definition. While the term 'sociotechnical systems' is not explicitly named, the concepts and frameworks discussed are central to the field. The audience is practitioners and leaders interested in improving software delivery through both social and technical means. No penalties were applied as the content is current, constructive, and highly relevant.",
    "reasoning_summary": "This content strongly aligns with Sociotechnical Systems, focusing on how organisational culture, team practices, and system flow—not just coding—shape software delivery. It deeply explores the integration of social and technical factors, making it highly relevant for this category.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Troubleshooting",
    "calculated_at": "2025-06-06T14:29:52",
    "ai_confidence": 38.45,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 3.8,
    "ai_audience": 7.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content critiques misconceptions about bottlenecks in software delivery, focusing on system flow, team practices, and organizational culture rather than direct troubleshooting. While it references issues like poor quality practices and system dysfunctions, it does not provide explicit methodologies or case studies for diagnosing or resolving technical issues. The discussion is conceptual, advocating for systemic change and disciplined engineering, but lacks in-depth, practical troubleshooting guidance. The audience is technical, and some points (e.g., test-first, observability) are tangentially relevant, but the main thrust is not troubleshooting-focused.",
    "reasoning_summary": "This content primarily challenges organizational and systemic bottlenecks in software delivery, with only indirect references to troubleshooting. It aligns with technical audiences but does not directly address the identification or resolution of technical issues.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Employee Engagement",
    "calculated_at": "2025-06-06T14:29:56",
    "ai_confidence": 23.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.5,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on system flow, DevOps principles, and organizational bottlenecks in software delivery, with emphasis on practices like test-first development, observability, and team autonomy. While it references culture and team practices, it does not directly address employee motivation, commitment, or engagement strategies. There are no explicit mentions of employee engagement, nor does the discussion delve into psychological or social aspects of work. The primary audience is technical leaders and practitioners interested in delivery models, not specifically those seeking to enhance employee engagement.",
    "reasoning_summary": "This content centers on system flow and DevOps, not employee engagement. While it touches on culture and team autonomy, it lacks direct discussion of motivation, commitment, or engagement strategies, making its fit with the category minimal.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Technical Mastery",
    "calculated_at": "2025-06-06T14:30:01",
    "ai_confidence": 77.6,
    "ai_mentions": 3.7,
    "ai_alignment": 8.9,
    "ai_depth": 8.2,
    "ai_intent": 7.6,
    "ai_audience": 8.1,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content critiques the misconception that coding is the main bottleneck in software delivery, emphasizing system flow, DevOps principles, and disciplined engineering practices. It discusses test-first development, observability, quality as a system responsibility, and the importance of technical practices over mere code writing. While it doesn't directly mention 'Technical Mastery' or all its key terms, its conceptual alignment and depth are strong, focusing on engineering excellence and the integration of DevOps principles. The audience is technical practitioners, and the content is highly relevant, though some focus is on organizational and cultural issues rather than purely technical mastery.",
    "reasoning_summary": "The content strongly aligns with Technical Mastery by emphasizing disciplined engineering, DevOps principles, and quality practices, though it frames these within broader system and cultural contexts rather than focusing solely on technical craftsmanship.",
    "level": "Secondary"
  },
  "Product Developer": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:00:58",
    "ai_confidence": 38.12,
    "ai_mentions": 1.4,
    "ai_alignment": 4.4,
    "ai_depth": 4.6,
    "ai_intent": 3.4,
    "ai_audience": 2.8,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content critiques the misconception that coding is the primary bottleneck in software delivery, emphasizing systemic constraints, team autonomy, and quality built into development. While it aligns conceptually with modern product delivery mindsets—especially cross-functional autonomy and accountability—it never directly addresses the Product Developer role or its specific formal accountabilities as defined in frameworks like Scrum. The term 'Product Developer' is never mentioned, nor are the precise elements (e.g., collective Sprint Backlog responsibility, integration with PO/SM, or explicit references to Increment creation/accountability) that would make this a strong category fit. Instead, the focus is on systems thinking and DevOps culture, discussing quality, flow, autonomous teams, and outcomes, which only partially overlap the category through shared modern practices. The audience appears to be broad (delivery leaders, agile/DevOps practitioners) rather than specifically targeting Product Developer accountabilities. There are no penalties for outdatedness or negative framing toward the Product Developer concept.",
    "reasoning_summary": "This content critiques system bottlenecks in software delivery and advocates for autonomy and quality, but does not reference or focus on the formal Product Developer role or its unique accountabilities. Its relevance to this category is tangential and partial, not direct.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "IO5EHjiHhTf",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:01:02",
    "ai_confidence": 46.65,
    "ai_mentions": 1.25,
    "ai_alignment": 5.8,
    "ai_depth": 4.55,
    "ai_intent": 4.45,
    "ai_audience": 6.4,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content discusses how AI's introduction into software delivery exposes systemic constraints but does not directly explore human-AI collaboration patterns or emergent cognitive capabilities as defined under 'Collective Intelligence'. While it references AI's place in modern workflows and implies some interaction, it focuses on systems thinking, team practices, and organizational culture, examining AI more as a catalyst than a genuine partner in collective decision-making or cognition. There are limited direct mentions or deep explorations of human-AI partnership or distributed cognition. Overall, the alignment with the Collective Intelligence category is partial and indirect, largely due to emphasis on human/team system issues rather than designing or leveraging collaborative human-AI teams.",
    "reasoning_summary": "The piece critiques organizational and system bottlenecks exposed by AI in software delivery but rarely addresses true human-AI collaboration or collective cognitive outcomes. Most focus remains on flow, culture, and existing team practices, placing it only loosely within 'Collective Intelligence'.",
    "level": "Tertiary"
  }
}