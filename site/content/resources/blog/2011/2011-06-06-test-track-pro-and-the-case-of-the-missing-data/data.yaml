post:
  title: Test Track Pro and the case of the missing data
  link: https://nkdagility.com/blog/test-track-pro-and-the-case-of-the-missing-data/
  pubDate: Mon, 06 Jun 2011 05:24:51 +0000
  creator: MrHinsh
  guid:
    _: http://blog.hinshelwood.com/?p=3596
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - >-
    <p><a href="http://blog.hinshelwood.com/files/2011/06/ttp2011_1.gif"><img
    style="background-image: none; border-right-width: 0px; padding-left: 0px;
    padding-right: 0px; display: inline; float: left; border-top-width: 0px;
    border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px"
    title="ttp2011_1" border="0" alt="ttp2011_1" align="left"
    src="http://blog.hinshelwood.com/files/2011/06/ttp2011_1_thumb.gif"
    width="466" height="112" /></a></p>  <p>As you may know, I have been having
    lots of problems with creating a Test Track Pro Adapter for the TFS
    Integration Platform. You may have been following my trials and tribulations
    in trying to get the data through.</p>  <br clear="all" />  <hr />  <p>It
    looks as if someone dropped the ball at Seapine when they wrote the query
    code for TTP. When you query the server to get a list of data the only
    control you have over the number of records that you get back is to use a
    “filter”. These filter are pre-setup and I have on on the production TTP
    system that will give me all of the data that I need to migrate. The problem
    is that it take around 15 minutes for the query to return the 3000+ records.
    </p>  <p>So, I first run the query as is and retrieve all of the records and
    suffer the long load.</p>  <p><a
    href="http://blog.hinshelwood.com/files/2011/06/SNAGHTML2899f19.png"><img
    style="background-image: none; border-right-width: 0px; padding-left: 0px;
    padding-right: 0px; display: inline; border-top-width: 0px;
    border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px"
    title="SNAGHTML2899f19" border="0" alt="SNAGHTML2899f19"
    src="http://blog.hinshelwood.com/files/2011/06/SNAGHTML2899f19_thumb.png"
    width="576" height="480" /></a>     <br /><strong>Figure: Initial Query
    loads the entire data set</strong></p>  <p>&#160;<a
    href="http://blog.hinshelwood.com/files/2011/06/image6.png"><img
    style="background-image: none; border-right-width: 0px; margin: 0px;
    padding-left: 0px; padding-right: 0px; display: inline; border-top-width:
    0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px"
    title="image" border="0" alt="image"
    src="http://blog.hinshelwood.com/files/2011/06/image_thumb6.png" width="640"
    height="245" /></a>     <br /><strong>Figure: This produces a large data
    set, but check the top</strong></p>  <p>Once the initial run is done, there
    is really no need to load the entire data set, just to find the two or three
    or sum records that have changed since the last run. I decided, just to be
    safe, to load the data from the last day, some ~25 records, as that is
    almost the balance between load and loss.</p>  <p>So lets add an additional
    filter for data in the last month…</p>  <p><a
    href="http://blog.hinshelwood.com/files/2011/06/SNAGHTML2979ebb.png"><img
    style="background-image: none; border-right-width: 0px; padding-left: 0px;
    padding-right: 0px; display: inline; border-top-width: 0px;
    border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px"
    title="SNAGHTML2979ebb" border="0" alt="SNAGHTML2979ebb"
    src="http://blog.hinshelwood.com/files/2011/06/SNAGHTML2979ebb_thumb.png"
    width="576" height="480" /></a>     <br /><strong>Figure: Only get data in
    the last Day</strong></p>  <p>With my recent debugging efforts I was maybe
    looking more closely at things than I would normally, and I noticed that the
    most recent changes were not being displayed.</p>  <p><a
    href="http://blog.hinshelwood.com/files/2011/06/image7.png"><img
    style="background-image: none; border-right-width: 0px; margin: 0px;
    padding-left: 0px; padding-right: 0px; display: inline; border-top-width:
    0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px"
    title="image" border="0" alt="image"
    src="http://blog.hinshelwood.com/files/2011/06/image_thumb7.png" width="640"
    height="191" /></a>     <br /><strong>Figure: Where has my data
    gone</strong></p>  <p>If you look closely you will see that the top two
    records have disappeared. What the heck!</p>  <p>If I change the query to be
    the last 24 hours instead of the last day then the data miraculously
    appears.</p>  <p><a
    href="http://blog.hinshelwood.com/files/2011/06/SNAGHTML29b421b.png"><img
    style="background-image: none; border-right-width: 0px; margin: 0px;
    padding-left: 0px; padding-right: 0px; display: inline; border-top-width:
    0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px"
    title="SNAGHTML29b421b" border="0" alt="SNAGHTML29b421b"
    src="http://blog.hinshelwood.com/files/2011/06/SNAGHTML29b421b_thumb.png"
    width="585" height="412" /></a>     <br /><strong>Figure: Last 24 hours
    works</strong></p>  <p>In fact I just checked again and the data is now
    there! Oh, it has just gone midnight in Boston (where the TTP server is) and
    the data now appears.</p>  <p>You may now ask, “What is the problem? The
    data will eventually get into the list?”… well, by that time it is too late.
    Let me explain.</p>  <p>As part of the TFS Integration Platform there is
    something called a “High Water Mark” and in this case it is a Date. This
    stores the date of the last run of data so we can check which records to add
    and which to edit.</p>  <pre class="brush: plain; ruler: true; highlight:
    [6,16,27];">Me._highWaterMarkDelta.Reload()

    '------------------------------------------------------

    Dim context As TtpContext = GetTtpContext()

    Dim raw As List(Of TtpDefectMigrationItem) = GetTtpRawData(context,
    viewName)

    TraceManager.TraceInformation(&quot;Located {0} raw updates since {1} in {2}
    seconds&quot;, raw.Count, _highWaterMarkDelta.Value,
    Now.Subtract(_tstart).TotalSeconds)

    Dim deltaNew = (From ri In raw Where
    ri.CreatedOn.CompareTo(_highWaterMarkDelta.Value) &gt; 0).ToList

    TraceManager.TraceInformation(&quot;Located {0} deltas as NEW in {1}
    seconds&quot;, deltaNew.Count, Now.Subtract(_tstart).TotalSeconds)

    deltaNew = GetDeltaWorkflow(context, deltaNew)

    TraceManager.TraceInformation(&quot;Updated {0} deltas with workflow in {1}
    seconds&quot;, deltaNew.Count, Now.Subtract(_tstart).TotalSeconds)

    Dim changesNew As List(Of ChangeGroup) = GetChangeGroupsForAdds(deltaNew)

    TraceManager.TraceInformation(&quot;Created {0} add change groups in {1}
    seconds&quot;, changesNew.Count, Now.Subtract(_tstart).TotalSeconds)

    For Each c In changesNew
        c.Save()
    Next

    TraceManager.TraceInformation(&quot;Saved {0} add change groups in {1}
    seconds&quot;, changesNew.Count, Now.Subtract(_tstart).TotalSeconds)

    Dim deltaEdit = (From ri In raw Where
    ri.ModifiedOn.CompareTo(_highWaterMarkDelta.Value) &gt; 0 And Not
    ri.CreatedOn.CompareTo(_highWaterMarkDelta.Value) &gt; 0).ToList

    TraceManager.TraceInformation(&quot;Located {0} deltas as EDIT in {1}
    seconds&quot;, deltaEdit.Count, Now.Subtract(_tstart).TotalSeconds)

    deltaEdit = GetDeltaWorkflow(context, deltaEdit)

    TraceManager.TraceInformation(&quot;Updated {0} deltas with workflow in {1}
    seconds&quot;, deltaEdit.Count, Now.Subtract(_tstart).TotalSeconds)

    Dim changesEdit As List(Of ChangeGroup) = GetChangeGroupsForEdits(deltaEdit)

    TraceManager.TraceInformation(&quot;Created {0} edit change groups in {1}
    seconds&quot;, changesEdit.Count, Now.Subtract(_tstart).TotalSeconds)

    For Each c In changesEdit
        c.Save()
    Next

    TraceManager.TraceInformation(&quot;Saved {0} edit change groups in {1}
    seconds&quot;, changesEdit.Count, Now.Subtract(_tstart).TotalSeconds)

    '------------------------------------------------------

    Me._highWaterMarkDelta.Update(DateTime.Now)

    Me._changeGroupService.PromoteDeltaToPending()</pre>


    <p><strong>Figure: </strong></p>


    <p>As you can see on lines 6 and 16 we do a query based on the High Water
    Mark to make sure that we only import data once, and that we can tell the
    difference between add and update.</p>


    <ul>
      <li>If the date that the item was <em>created</em> is after the last high water mark then it is an add</li>

      <li>If the date that the item was <em>modified</em> is after the last high water mark, while also not being in the previous category then it is an <em>edit</em></li>
    </ul>


    <p>So, if you are using “last day” in your query then by the time the data
    is returned in the query then all the dates are before the high water mark.
    Not good as all of this data gets missed and you will not get any updates
    after the first run.</p>


    <p>The solution is to use the number of “hours” since, rather than days…</p>
  - ''
  post_id: '3596'
  post_date: '2011-06-05 22:24:51'
  post_date_gmt: '2011-06-06 05:24:51'
  post_modified: '2011-06-05 22:24:51'
  post_modified_gmt: '2011-06-06 05:24:51'
  comment_status: open
  ping_status: open
  post_name: test-track-pro-and-the-case-of-the-missing-data
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: robotsmeta
    meta_value: index,follow
  - meta_key: dsq_thread_id
    meta_value: '323336306'
  - meta_key: _flattr_post_language
    meta_value: ''
  - meta_key: _flattr_post_category
    meta_value: ''
  - meta_key: _flattr_post_hidden
    meta_value: ''
  - meta_key: _flattr_btn_disabled
    meta_value: ''
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/19Ajkt8
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474789537;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:6202;}i:1;a:1:{s:2:"id";i:3408;}i:2;a:1:{s:2:"id";i:9239;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2011-06-05-test-track-pro-and-the-case-of-the-missing-data.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '787'
  comment:
  - comment_id: '1017'
    comment_author: >-
      A working Test Track Pro Adapter for the TFS Integration Platform | Visual
      Studio ALM
    comment_author_email: ''
    comment_author_url: >-
      http://blog.hinshelwood.com/a-working-test-track-pro-adapter-for-the-tfs-integration-platform/
    comment_author_IP: 184.168.230.128
    comment_date: '2011-06-06 11:06:00'
    comment_date_gmt: '2011-06-06 18:06:00'
    comment_content: >-
      [...] About      &laquo; Test Track Pro and the case of the missing data
      [...]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:15:"1307383560.9575";s:7:"message";s:28:"Akismet
        cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:15:"1307392403.2943";s:7:"message";s:46:"MrHinsh
        changed the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '1018'
    comment_author: >-
      TOC: TFS Integration Tools Blog Posts and Reference Sites - Willy&#039;s
      Cave - Site Home - MSDN Blogs
    comment_author_email: ''
    comment_author_url: >-
      http://blogs.msdn.com/b/willy-peter_schaub/archive/2011/06/06/toc-tfs-integration-tools.aspx
    comment_author_IP: 65.52.96.177
    comment_date: '2011-06-06 20:20:35'
    comment_date_gmt: '2011-06-07 03:20:35'
    comment_content: '[...] Test Track Pro and the case of the missing data [...]'
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
      meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:15:"1307418932.6501";s:7:"message";s:46:"MrHinsh
        changed the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '1019'
    comment_author: MSDN Blogs
    comment_author_email: ''
    comment_author_url: >-
      http://blogs.msdn.com/b/willy-peter_schaub/archive/2012/03/20/toc-tfs-integration-tools-blog-posts-and-reference-sites.aspx
    comment_author_IP: 65.52.96.176
    comment_date: '2012-04-09 23:43:48'
    comment_date_gmt: '2012-04-10 06:43:48'
    comment_content: '[...] Test Track Pro and the case of the missing data [...]'
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
      meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:13:"1334171470.87";s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
