{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-03-15T06:42:54",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) and Visual Studio for Application Lifecycle Management (ALM), focusing on traceability and compliance rather than Agile product management principles. While it touches on aspects like requirements and tasks, it lacks a direct focus on Agile methodologies, the role of the Product Owner, or techniques for prioritising product backlogs. The depth of discussion on related topics is present, but it does not align closely with the core themes of Agile Product Management.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T15:32:46",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content provides a detailed exploration of how Visual Studio 2010 and Team Foundation Server (TFS) can be used as practical tools for Application Lifecycle Management (ALM). It discusses specific features of TFS, such as traceability, work item tracking, and the relationships between requirements, tasks, changesets, and builds, which are all relevant to Agile and DevOps practices. The article also touches on compliance and auditing, linking these concepts to the practical application of the tools. Overall, the content aligns well with the category's focus on practical techniques and tooling, providing both insights and methodologies for effective implementation.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) and tools like Team Foundation Server (TFS) that can enhance developer productivity and compliance, which aligns with some principles of platform engineering, but it primarily focuses on compliance and specific tool functionalities rather than a comprehensive discussion on platform engineering.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-03-22T08:46:36",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server (TFS) in relation to compliance and traceability. While it touches on aspects of tracking and managing work items, it does not explicitly focus on Evidence-Based Management principles or metrics such as current value, time to market, or empirical decision-making. The discussion lacks depth in terms of evidence-based practices and does not provide a clear connection to the core themes of EBM.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-15T06:42:38",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses the features and functionalities of Team Foundation Server (TFS) and Visual Studio 2010 in relation to Application Lifecycle Management (ALM) and compliance. While it touches on aspects of code traceability and the relationships between various artifacts in software development, it lacks a focused discussion on the principles of code quality, complexity theory, or best practices in coding and architecture. The mention of tasks, changesets, and requirements is more about process management than the complexities of code itself, leading to a low confidence score in the 'Code and Complexity' category.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-15T23:57:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on the features and functionalities of Visual Studio 2010 and Team Foundation Server, with an emphasis on compliance and traceability rather than on discovery and learning processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-15T23:57:03",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to Application Lifecycle Management, without a focus on AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-15T23:57:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) and compliance features of Visual Studio and Team Foundation Server, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-15T23:57:06",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the features and benefits of Team Foundation Server and Visual Studio 2010 in relation to compliance and traceability, rather than providing actionable installation or configuration instructions.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-03-15T06:43:15",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the traceability features of Team Foundation Server (TFS) and how they facilitate compliance and auditing, which aligns with the principles of transparency and accountability. It mentions the importance of tracking changes, requirements, and tasks, which supports accountability within teams. However, the focus is more on the technical capabilities of TFS rather than a broader discussion on transparency and accountability principles in Agile teams. The depth of discussion on these principles is moderate, but it lacks explicit emphasis on team dynamics and communication.",
    "level": "Secondary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-15T23:57:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to compliance and traceability, without a clear focus on market adaptability strategies or methodologies.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-15T06:42:21",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) and Visual Studio 2010 in the context of Application Lifecycle Management (ALM), focusing on traceability and compliance. While it touches on the roles of different team members and the relationships between various artifacts, it primarily centres on technical tools and their functionalities without a strong emphasis on the sociotechnical interplay. The mention of team roles indicates some alignment with sociotechnical systems, but the overall focus remains on technical aspects, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-15T23:57:15",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server, focusing on traceability and compliance rather than organisational resilience or change management.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-22T08:46:23",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server (TFS) in relation to compliance and traceability. While it touches on aspects of collaboration and roles within a team, it lacks a direct focus on the core principles of DevOps such as continuous value delivery, automation, and shared accountability. The discussion is more aligned with project management and compliance rather than the cultural and philosophical aspects of DevOps.",
    "level": "Tertiary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T23:57:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server, with a focus on Application Lifecycle Management and compliance, which are directly related to Agile and DevOps practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-15T23:57:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server, focusing on Application Lifecycle Management and compliance, without addressing decision-making processes or theories.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-15T23:57:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server, with no reference to events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-15T23:57:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Team Foundation Server and Visual Studio 2010 in relation to compliance and traceability, without a clear focus on optimising work throughput or flow efficiency.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-10T13:02:28",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 30,
    "final_score": 63.0,
    "reasoning": "The content discusses the roles of various team members (e.g., Business Analysts, Programmers, Testers) in the context of using Team Foundation Server (TFS) for Application Lifecycle Management (ALM). It highlights how these roles interact with the system to ensure compliance and manage requirements, tasks, and bugs. However, while it touches on team dynamics and responsibilities, the primary focus remains on the technical capabilities of TFS rather than a deep exploration of human behaviour or process methodologies. Thus, while there is a significant connection to the 'People and Process' category, it is not the primary focus.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-03-15T06:43:02",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses the features and functionalities of Team Foundation Server (TFS) and Visual Studio 2010 in relation to Application Lifecycle Management (ALM) and compliance. While it touches on aspects of traceability and roles within teams, it lacks a broader organisational context and does not explicitly address enterprise-level agility principles such as scaling frameworks, organisational structures, or cultural aspects of agility. The focus remains on tool usage rather than on fostering a culture of adaptability or collaboration across the organisation.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) and Visual Studio 2010 in relation to compliance and traceability, which are important for maintaining agility in software development. However, the primary focus is on compliance and audit features rather than directly on business agility principles or practices.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses traceability and the relationships between various artifacts in Team Foundation Server, which can relate to metrics and performance data. However, the primary focus is on compliance and the functionality of TFS rather than on metrics and learning as a central theme.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T23:57:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Team Foundation Server and its features related to Application Lifecycle Management, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-15T06:43:18",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content extensively discusses the technical capabilities of Team Foundation Server (TFS) and Visual Studio 2010 in relation to Application Lifecycle Management (ALM), focusing on traceability, compliance, and the relationships between various artifacts such as requirements, tasks, changesets, and test cases. It aligns well with the principles of technical excellence by highlighting how these tools facilitate high-quality engineering practices and support agile methodologies. However, while it touches on relevant technical practices, it lacks a deeper exploration of methodologies like TDD or CI/CD, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-15T23:57:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to Application Lifecycle Management and compliance, without a focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T23:57:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of Application Lifecycle Management (ALM) and Team Foundation Server (TFS), with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-10T15:01:16",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content extensively discusses the role of Team Foundation Server (TFS) and Visual Studio in managing the software development lifecycle, focusing on traceability, requirements management, task tracking, and testing—all of which are integral to effective product delivery. It covers methodologies related to planning, development, testing, and deployment, aligning well with the core themes of product delivery. The depth of discussion is significant, providing detailed insights into how TFS facilitates compliance and audit requirements, which are crucial for delivering quality software products. However, while the content is highly relevant, it does not explicitly mention agile methodologies or CI/CD practices, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T23:57:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server, focusing on compliance and traceability rather than the principles of decentralised, adaptive, and human-centric organisational design.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-15T23:57:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) and the features of Team Foundation Server, without a clear focus on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-03-15T06:42:51",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server (TFS) as tools for Application Lifecycle Management (ALM). While it provides insights into how these tools can aid compliance and Agile practices, it lacks direct reviews or analyses of literature related to Agile methodologies or DevOps principles. The discussion is more focused on the practical applications of the software rather than a critical evaluation or recommendation of resources, which diminishes its alignment with the 'Products and Books' category.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-15T06:42:30",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 45.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the traceability and relationships between various artifacts in Team Foundation Server (TFS) and Visual Studio, which indirectly relates to value delivery by emphasising the importance of requirements and their management. However, it primarily focuses on technical implementation details and compliance rather than explicitly addressing strategies for iterative value delivery or customer satisfaction. The depth of discussion on how these practices enhance value delivery is moderate, but the primary focus remains on technical aspects rather than value management principles.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-10T18:49:14",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses Team Foundation Server (TFS), which is a core component of Azure DevOps, focusing on its functionalities related to Application Lifecycle Management (ALM), traceability, and compliance. It provides detailed insights into various aspects of TFS, including requirements, tasks, changesets, builds, and test cases, all of which are integral to Azure DevOps. The discussion aligns well with the key topics of Azure DevOps, particularly in the context of CI/CD and agile project management. The depth of the discussion is significant, covering multiple features and their interrelations, thus justifying a high confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-15T23:57:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical features and functionalities of Visual Studio 2010 and Team Foundation Server, without personal reflections or experiences.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-15T23:57:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to Application Lifecycle Management, without a clear focus on Systems Thinking principles or practices.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the integration of tools and processes within Team Foundation Server (TFS) and Visual Studio 2010, which aligns with the principles of standardising software development practices. However, it primarily focuses on TFS features rather than a comprehensive discussion of the One Engineering System framework itself.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-03-22T08:46:34",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server (TFS) in relation to compliance and traceability, without a clear focus on the Agile Product Operating Model. While it touches on aspects of Agile methodologies, such as requirements and tasks, it does not delve into the principles or frameworks of the Agile Product Operating Model, nor does it discuss the transition from project to product ethos or the integration of Scrum practices. Therefore, the content's relevance to the category is minimal.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-15T23:57:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the features and functionalities of Visual Studio 2010 and Team Foundation Server for compliance and traceability, rather than discussing organisational agility or related methodologies.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the features and capabilities of Visual Studio 2010 and Team Foundation Server in relation to compliance and Agile practices, making it relevant to industry updates. However, it primarily focuses on technical details rather than providing a clear review or news update.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-11T10:39:00",
    "ai_confidence": 92.0,
    "ai_mentions": 90.0,
    "ai_alignment": 95.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 30,
    "final_score": 86.0,
    "reasoning": "The content extensively discusses the functionalities and benefits of Team Foundation Server (TFS) and Visual Studio 2010 as tools for Application Lifecycle Management (ALM). It covers various aspects of the application lifecycle, including requirements management, task tracking, change management, and compliance, which are all core themes of ALM. The depth of discussion is significant, providing detailed insights into how TFS supports traceability and governance throughout the application lifecycle, thus aligning closely with the category's definition.",
    "level": "Primary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) using Visual Studio and Team Foundation Server, with no clear focus on Daily Scrum practices, structure, or discussions.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses Team Foundation Server and its compliance with audit requirements without focusing on the Definition of Done or Agile principles.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-15T06:42:57",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content primarily discusses the technical aspects of using Visual Studio 2010 and Team Foundation Server (TFS) for Application Lifecycle Management (ALM), focusing on traceability, compliance, and the relationships between various artifacts in software development. It aligns well with the principles of software craftsmanship, particularly in terms of code quality, testing, and the integration of development practices. However, while it provides substantial detail on TFS functionalities, it lacks a broader discussion on best practices or methodologies that contribute to software engineering excellence, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the features and functionalities of Visual Studio 2010 and Team Foundation Server with respect to application lifecycle management, compliance, and traceability, rather than on understanding customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-22T08:46:38",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses aspects of Application Lifecycle Management (ALM) and traceability in Team Foundation Server (TFS), which are relevant to Continuous Delivery. However, it primarily focuses on compliance and audit requirements rather than the core principles of Continuous Delivery, such as automation in deployment or rapid feedback loops. While there are mentions of builds and tasks, the overall emphasis is on compliance rather than the Continuous Delivery process itself.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to compliance and traceability, rather than focusing on long-term strategic objectives or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on Application Lifecycle Management (ALM) processes, tool features, and compliance requirements rather than discussing Lead Time as a metric from initiation to delivery.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical features of Visual Studio 2010 and Team Foundation Server, focusing on traceability and compliance, without addressing organisational culture, agility, or team dynamics.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses features and capabilities of Team Foundation Server in relation to application lifecycle management and compliance, with no clear focus on the Definition of Ready criteria or its importance in Agile practices.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on Application Lifecycle Management (ALM) tools, specifically Team Foundation Server and Visual Studio, rather than on portfolio management, project alignment, or strategic investment frameworks.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the capabilities of Team Foundation Server and Visual Studio for Application Lifecycle Management, with minimal focus on the Product Backlog concepts, and does not delve into backlog refinement or prioritization.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-03-15T06:43:23",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) and Visual Studio for Application Lifecycle Management (ALM), which includes aspects of Agile Planning such as managing requirements, tasks, and test cases. However, the primary focus is on compliance and traceability rather than on Agile Planning methodologies or practices. While it touches on Agile principles, it does not delve deeply into iterative planning, feedback loops, or team dynamics, which are core to Agile Planning. Therefore, the confidence score reflects a moderate alignment with the category.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the functionalities and benefits of Visual Studio 2010 and Team Foundation Server in relation to Application Lifecycle Management, with no mention of Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) features of Visual Studio and Team Foundation Server (TFS) without focusing on customer feedback collection, analysis, or integration into product development.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-11T15:08:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the operational practices of using Team Foundation Server (TFS) and Visual Studio 2010 for Application Lifecycle Management (ALM), focusing on traceability, compliance, and the relationships between various work items. It provides practical insights into how these tools can enhance operational efficiency and support Agile methodologies. The depth of discussion on how to manage tasks, requirements, and changesets indicates a strong alignment with operational practices, although it could benefit from more explicit strategies for continuous improvement and metrics for measuring efficiency.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-03-15T06:43:10",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses roles within a team, such as Business Analysts, Programmers, and Testers, which aligns with the Scrum Team's focus on roles and responsibilities. However, it primarily centres on the functionalities of Team Foundation Server and Application Lifecycle Management rather than the dynamics and collaboration specific to a Scrum Team. The depth of discussion on Scrum principles is limited, focusing more on tools and processes than on team interactions or Scrum practices.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses Agile principles in the context of using Visual Studio and Team Foundation Server for compliance and traceability, making Agile a major but secondary theme.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-03-15T06:43:26",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses the functionalities and features of Team Foundation Server (TFS) and Visual Studio 2010 in relation to compliance and traceability, rather than focusing on strategic approaches within Agile, Scrum, or DevOps frameworks. While it touches on aspects of Agile practices, such as the roles of team members and the importance of requirements, it lacks a comprehensive discussion on strategic alignment, value-driven approaches, or techniques for optimising delivery processes. The depth of discussion is more technical and operational than strategic, leading to a low confidence score in the Strategy category.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on the features and benefits of Visual Studio and Team Foundation Server related to compliance and application lifecycle management, rather than discussing methodologies for validating product ideas through user feedback or testing.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "While the content primarily discusses Team Foundation Server (TFS) as an Application Lifecycle Management (ALM) platform and its capabilities for compliance and traceability, it does touch upon Agile principles indirectly, particularly in its conclusion where it states that TFS can enable teams to be Agile. However, the main focus is on compliance and tool-specific functionalities rather than a comprehensive discussion on Agile transformation practices or methodologies.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-16T00:44:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the functionalities of Visual Studio 2010 and Team Foundation Server regarding Application Lifecycle Management and compliance, without discussing mentoring, coaching, or skill development in Agile methodologies.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-03-15T06:43:20",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content briefly mentions Test Cases and their association with automated tests, but the primary focus is on the traceability and compliance aspects of Team Foundation Server (TFS) rather than on automated testing principles or methodologies. The discussion lacks depth in exploring automated testing practices, tools, or frameworks, which are crucial for a higher confidence score in this category.",
    "level": "Tertiary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-15T06:42:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) and Visual Studio for Application Lifecycle Management (ALM), focusing on traceability and compliance rather than directly addressing team performance or collaboration strategies. While it mentions roles within a team, it lacks a detailed exploration of team dynamics, communication, or methodologies aimed at enhancing team effectiveness. The primary focus is on tools and processes rather than the performance of the team itself.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-03-15T06:42:02",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content primarily discusses the ALM capabilities of Visual Studio and TFS, focusing on traceability, requirements, and task management, with minimal reference to the concept of Increment in Agile.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-03-15T06:42:27",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content discusses various aspects of Team Foundation Server (TFS) and its role in Application Lifecycle Management (ALM), including requirements, tasks, and test cases. While it touches on the importance of requirements and testing, it does not focus specifically on Acceptance Test Driven Development (ATDD) principles or the collaborative nature of defining acceptance criteria. The mention of test cases and acceptance criteria is too brief and lacks depth, making ATDD a secondary theme rather than a primary focus.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-11T12:04:11",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the use of Team Foundation Server (TFS) and Visual Studio 2010 in the context of Application Lifecycle Management (ALM), focusing on traceability, requirements management, task tracking, and compliance with audit standards. It aligns well with key topics in software development, such as version control, task management, and the software development life cycle. The depth of discussion is significant, covering various aspects of TFS and its integration into the development process, making it a strong fit for the Software Development category.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) in relation to managing tasks, requirements, and builds, which are relevant to agile practices. However, it primarily focuses on compliance and traceability rather than core agile methodologies or principles.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the functionalities and capabilities of Visual Studio 2010 and Team Foundation Server (TFS) in relation to application lifecycle management and compliance tracking, without a clear focus on Agile values and principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Team Foundation Server (TFS) and its role in Application Lifecycle Management (ALM), with no clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-03-15T06:42:10",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content extensively discusses Team Foundation Server (TFS) and its features related to source control, including changesets, tasks, and builds, which are integral to modern source control practices. It provides detailed insights into how TFS facilitates version control, traceability, and compliance, aligning well with the core themes of the category. However, while it covers many aspects of source control, it also delves into broader application lifecycle management topics, which slightly detracts from its primary focus on modern source control.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-03-15T06:42:02",
    "ai_confidence": 20,
    "non_ai_confidence": 10,
    "final_score": 19.0,
    "reasoning": "While the content discusses tools and techniques for traceability in software development and the role of various artifacts in the process, it does not explicitly focus on empirical process control principles such as transparency, inspection, and adaptation. The main emphasis is on the compliance and tracking capabilities of Team Foundation Server rather than on decision-making based on observed evidence.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly focuses on the features and functionality of Visual Studio and Team Foundation Server in relation to Application Lifecycle Management, without discussing the Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-03-15T06:42:05",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses Team Foundation Server (TFS) and its features related to Application Lifecycle Management (ALM), including work item tracking, requirements, tasks, and bugs. While it touches on concepts relevant to Azure Boards, such as work item types and their relationships, it primarily focuses on TFS as a whole rather than specifically on Azure Boards. The discussion lacks depth in Azure Boards functionalities and best practices, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-03-15T06:43:12",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses Team Foundation Server (TFS) and its features related to Application Lifecycle Management (ALM), which includes aspects of collaboration and task management. However, the primary focus is on compliance and traceability rather than on enhancing communication and coordination within Agile teams. While there are mentions of team roles and task management, the depth of discussion on collaboration tools and their integration with Agile methodologies is limited.",
    "level": "Tertiary"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily focuses on application lifecycle management and compliance using Visual Studio and TFS, without a clear emphasis on organisational change processes or frameworks.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) features of Visual Studio and Team Foundation Server, with a focus on compliance and traceability, which is not aligned with Lean Startup principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-03-15T06:43:31",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the traceability and management of software development processes using Team Foundation Server (TFS) and Visual Studio, which indirectly relates to release management. However, it primarily focuses on compliance and audit requirements rather than the principles of frequent releases, continuous delivery, or deployment. While there are mentions of builds and tracking changes, the overall emphasis is not on frequent releases as a primary topic.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on Application Lifecycle Management (ALM) tools and compliance in software development, lacking a primary emphasis on customer satisfaction or enhancing customer experience.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) using Visual Studio and Team Foundation Server, with a focus on traceability, compliance, and role-based artifact management rather than on scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the functionalities and compliance aspects of Visual Studio and TFS without a clear focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses application lifecycle management, traceability, and compliance within Team Foundation Server and Visual Studio, without addressing psychological safety or related themes.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses features and capabilities of Visual Studio 2010 and Team Foundation Server in the context of Application Lifecycle Management (ALM) and compliance, without a clear focus on scaling agile practices across an organization.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-07T15:32:42",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) and Visual Studio for Application Lifecycle Management (ALM), focusing on traceability and compliance, which are important for maintaining high standards in software development. However, while it touches on aspects of engineering excellence, such as tracking requirements, tasks, and bugs, it primarily centres on compliance and audit processes rather than broader engineering practices or craftsmanship principles. The depth of discussion on engineering excellence is limited, as it does not delve into coding standards, testing methodologies, or continuous improvement practices.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the features and functionalities of Visual Studio 2010 and Team Foundation Server related to Application Lifecycle Management and compliance, without discussing Revenue per Employee or related financial metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Team Foundation Server and its features for Application Lifecycle Management without addressing asynchronous development principles, practices, or collaborations.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and capabilities of Team Foundation Server and Visual Studio for Application Lifecycle Management, focusing on compliance and traceability; it does not address systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the capabilities of Visual Studio 2010 and Team Foundation Server for compliance and project management, without addressing strategies for customer retention or maintaining user engagement.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-11T18:09:52",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content extensively discusses the practical applications of Team Foundation Server (TFS) and Visual Studio 2010 in managing compliance and traceability within Agile frameworks. It provides detailed insights into how various components like Requirements, Tasks, Changesets, and Builds interact to facilitate effective project management and compliance, demonstrating a strong alignment with pragmatic thinking. The depth of discussion is significant, covering real-world applications and strategies for navigating complexity in software development, which supports a high confidence score.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily about the features and functionalities of Visual Studio 2010 and Team Foundation Server in the context of Application Lifecycle Management, with no clear focus on backlog refinement practices or principles.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the features and functionality of Team Foundation Server and its relevance to compliance and traceability in software development. It does not focus on the measurement, enhancement, or strategies for fostering a culture of innovation.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-03-15T06:42:41",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses various aspects of Application Lifecycle Management (ALM) using Team Foundation Server (TFS) and Visual Studio, touching on roles, requirements, tasks, and builds. However, it lacks a direct focus on Scrum principles and practices, such as sprint planning or iterative development. While it mentions roles and artifacts relevant to Scrum, the overall emphasis is more on compliance and traceability rather than on Scrum product development methodologies.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses extensively on the details of using Team Foundation Server and Visual Studio for application lifecycle management, without discussing the scaling of Agile practices across teams or at an enterprise level. It primarily covers technical aspects and compliance features rather than the coordination or transformation strategies essential in a scaled Agile context.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the technical aspects of Application Lifecycle Management (ALM) using Visual Studio and Team Foundation Server, without addressing employee motivation, commitment, or engagement.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server (TFS) in relation to compliance and application lifecycle management, without a clear focus on Lean principles or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-03-15T06:42:35",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the use of Test Cases in relation to requirements and their association with automated tests, which is relevant to test automation. However, the primary focus is on the overall Application Lifecycle Management (ALM) capabilities of Visual Studio and Team Foundation Server, rather than a dedicated exploration of test automation principles, frameworks, or best practices. The discussion lacks depth in terms of specific test automation tools or methodologies, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the functionalities and features of Team Foundation Server and its relevance to Application Lifecycle Management, with no clear focus on entrepreneurship, innovation, or the entrepreneurial process.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-15T06:42:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the functionalities of Visual Studio 2010 and Team Foundation Server (TFS) in the context of Application Lifecycle Management (ALM), focusing on traceability, requirements management, and the relationship between various artifacts in software development. While it touches on aspects of working software, such as requirements and testing, the primary focus is on tools and processes rather than the delivery of functional software itself. The discussion lacks depth in terms of best practices for ensuring software quality and does not provide concrete examples of successful delivery of working software.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on Application Lifecycle Management and compliance features of TFS, without specifically addressing Agile planning methodologies or tools.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-11T16:58:49",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses Team Foundation Server (TFS) and its role in Application Lifecycle Management (ALM), including aspects of traceability and builds. While it touches on builds, which are a component of Continuous Integration, the primary focus is on compliance and traceability rather than the principles and practices of CI itself. The discussion lacks depth in CI-specific practices and tools, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server for Application Lifecycle Management, without any focus on market share or strategies for increasing it.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of using Visual Studio and Team Foundation Server for compliance management, without a clear focus on Agile leadership roles or practices.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on the features and benefits of Visual Studio 2010 and Team Foundation Server in relation to compliance and project management, rather than sensemaking processes in complex environments.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) with a focus on Team Foundation Server and Visual Studio, without addressing Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management and compliance features of Visual Studio and TFS without focusing on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content focuses primarily on the functionalities and features of Visual Studio 2010 and Team Foundation Server in relation to compliance and traceability in software development. It does not present a clear, structured discussion on decision-making processes or methodologies.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) and the functionalities of Team Foundation Server and Visual Studio, rather than Lean Principles such as waste reduction and value maximization.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-03-15T06:42:16",
    "ai_confidence": 78.0,
    "ai_mentions": 85.0,
    "ai_alignment": 75.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content extensively discusses the role of Team Foundation Server (TFS) in managing software releases, including traceability, requirements, tasks, changesets, builds, and test cases, all of which are crucial for effective release management. It highlights how these elements contribute to compliance and audit requirements, aligning well with the core themes of release management. However, while it covers many aspects of release management, it does not delve deeply into specific strategies or practices for release planning and scheduling, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses tooling, artifacts, and processes in Application Lifecycle Management (ALM) rather than specifically focusing on the Product Owner role or responsibilities.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the traceability and functionality of Team Foundation Server (TFS) in managing project artifacts, without a specific focus on Cycle Time measurement or its implications.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-03-15T06:43:08",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses Team Foundation Server (TFS) and its role in Application Lifecycle Management (ALM), including aspects of build management and traceability. However, it does not focus specifically on Azure Pipelines or CI/CD practices within the Azure ecosystem. While there are mentions of builds and their relationship to work items, the primary focus is on TFS and its features rather than Azure Pipelines specifically. Therefore, the confidence score reflects a moderate alignment with the category, but it does not meet the criteria for a primary focus on Azure Pipelines.",
    "level": "Tertiary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server related to Application Lifecycle Management and compliance tracking, with no clear focus on deployment frequency or related optimization strategies.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily focuses on Application Lifecycle Management (ALM), specifically on traceability in Team Foundation Server (TFS) and does not discuss strategies or practices related to Change Management in organizations.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the roles of team members and the relationships between tasks, requirements, and artifacts in a collaborative environment with TFS but primarily focuses on compliance and traceability rather than direct techniques for improving team communication and collaboration.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on Application Lifecycle Management (ALM) using Team Foundation Server and Visual Studio, discussing traceability and compliance, but does not primarily address Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-03-15T06:42:33",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the use of Visual Studio 2010 and Team Foundation Server (TFS) for Application Lifecycle Management (ALM) and compliance, which touches on aspects of digital transformation, particularly in terms of enhancing operational efficiency and compliance through digital tools. However, it lacks a strong focus on broader strategic adoption of digital technologies or case studies of digital transformation initiatives. The discussion is more technical and operational rather than strategic, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses application lifecycle management and compliance rather than the development or utilization of a Minimum Viable Product.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) using Visual Studio and Team Foundation Server, focusing on compliance tracking, requirements management, and team roles, without a specific focus on AI integration or applications.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) practices, roles within teams, and compliance features of tools, rather than the configuration of systems or software.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the technical aspects and functionalities of Team Foundation Server and Visual Studio, discussing roles, traceability, and compliance, which are not core principles of product strategy.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses features and benefits of Visual Studio 2010 and Team Foundation Server, focusing on compliance and lifecycle management rather than aspects of technical leadership or agile best practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management and traceability in TFS without focusing on estimation techniques or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses various roles within a team as they interact with tools like Visual Studio and TFS, hinting at cross-functional collaboration. However, the primary focus is on tooling, compliance, and task management rather than the core concepts of cross-functional teams and their dynamics in Agile methodologies.",
    "level": "Tertiary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-03-15T06:42:02",
    "ai_confidence": 30,
    "non_ai_confidence": 30,
    "final_score": 30.0,
    "reasoning": "While the content discusses some aspects of testing, such as Test Cases and their association with Requirements and Bugs, the primary focus is on the traceability and compliance aspects of Team Foundation Server without a central theme of Test First Development or Test-Driven Development.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-03-15T06:42:18",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses Team Foundation Server (TFS) and Visual Studio 2010, which are tools that can be used within the Windows environment. However, it does not focus on the Windows operating system itself, such as installation, configuration, or troubleshooting. While there are mentions of Windows in the context of TFS, the discussion is more about application lifecycle management rather than Windows-specific topics. Therefore, the confidence score reflects a moderate alignment with the Windows category.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) features and compliance tracking in Team Foundation Server, without focusing on deployment strategies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the features and traceability within Team Foundation Server as a tool for compliance and application lifecycle management, without focusing on large-scale Agile principles or practices.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical details and functionalities of Visual Studio and Team Foundation Server, with no clear focus on team motivation, engagement, or dynamics.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Visual Studio and Team Foundation Server's features for Application Lifecycle Management, focusing on compliance and traceability in software development rather than remote working practices or related Agile methodologies.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the features and capabilities of Team Foundation Server for compliance and traceability, without a central discussion on principles or practices of Continuous Learning, growth mindset, or team improvement.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the functionalities of Visual Studio 2010 and Team Foundation Server for Application Lifecycle Management and compliance, without focusing on diagnosing or resolving technical issues.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) using Visual Studio and Team Foundation Server, focusing on traceability, compliance, and the relationships between different artifacts in development processes, rather than experimentation or hypothesis-driven approaches within Agile workflows.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and techniques without a central focus on the Scrum Master role or responsibilities.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses traceability and the importance of visibility in task management and compliance within Team Foundation Server and Visual Studio, which relates to transparency in Agile methodologies. However, the primary focus is on compliance and the functionalities of TFS rather than transparency itself.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the features and capabilities of Team Foundation Server and Visual Studio, focusing on traceability and compliance rather than teamwork or working agreements.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-15T06:42:14",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content extensively discusses the role of software developers in the context of Agile and DevOps practices, particularly through the lens of using Team Foundation Server (TFS) and Visual Studio for Application Lifecycle Management (ALM). It covers how developers interact with tasks, requirements, changesets, and builds, which are all crucial aspects of the software development process. The mention of specific roles such as programmers, testers, and business analysts indicates a clear focus on the developer's role within a collaborative environment. However, while the content is rich in detail, it primarily centres around TFS features rather than broader Agile or DevOps methodologies, which slightly limits its conceptual alignment with the category's core themes.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on the capabilities of Visual Studio 2010 and Team Foundation Server for application lifecycle management and compliance, with little to no discussion about coaching, mentoring, or team development.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-17T09:09:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of Application Lifecycle Management (ALM) and the integration of development practices, but it primarily focuses on tools specifically related to compliance and project management rather than core engineering practices like TDD, CI/CD, or clean code principles.",
    "level": "Tertiary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) features of Visual Studio 2010 and Team Foundation Server, focusing on traceability, compliance, and project management roles, without delving into technical debt definitions, implications, or management strategies.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses application lifecycle management and tools, but does not mention Sprint Review or its processes.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses technical features and functionalities of Visual Studio 2010 and Team Foundation Server related to Application Lifecycle Management, rather than the strategic aspects of product management such as customer needs, business objectives, or methodologies for managing products.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-16T00:44:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the functionality of Team Foundation Server for compliance and traceability, focusing on management practices rather than self-organisation principles.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-03-15T06:42:02",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content primarily discusses Team Foundation Server (TFS) and its features related to Application Lifecycle Management (ALM) with a focus on compliance and traceability, rather than specific Agile frameworks or their implementations.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-03-15T06:42:45",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses the technical aspects of using Team Foundation Server (TFS) and Visual Studio for Application Lifecycle Management (ALM), focusing on traceability and compliance rather than strategic alignment with Agile principles. While it touches on Agile concepts like requirements and tasks, it lacks a comprehensive discussion on Agile strategy, such as leadership roles, adaptability, or customer-centric approaches. The depth of discussion is significant in terms of technical details, but it does not sufficiently address the strategic context required for a higher confidence score in Agile Strategy.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-03-15T06:42:48",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses Team Foundation Server (TFS) and its Application Lifecycle Management (ALM) capabilities, which includes aspects of source control and traceability. However, it does not focus specifically on Azure Repos or its functionalities, best practices, or integration within modern software development. While there are mentions of source control and changesets, the discussion is more about TFS as a whole rather than Azure Repos specifically, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-16T00:44:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the traceability and audit features of Team Foundation Server (TFS) and Visual Studio 2010, lacking discussions or methods relating specifically to forecasting delivery timelines or Agile practices.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-16T00:44:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses compliance and traceability features of Team Foundation Server and Visual Studio, with a focus on application lifecycle management, rather than Lean Product Development principles like waste reduction, efficiency, or customer feedback.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-16T00:44:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the features and function of Visual Studio 2010 and Team Foundation Server related to traceability and compliance, without a focus on analyzing trends in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-16T00:44:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses application lifecycle management and compliance using Team Foundation Server without a clear focus on accountability principles within Agile teams.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-16T00:44:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and capabilities of Visual Studio 2010 and Team Foundation Server for application lifecycle management and compliance, with no clear focus on scaling Kanban principles or practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-16T00:44:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on Application Lifecycle Management, compliance tracking, traceability of requirements and tasks, and specific roles within team processes. It does not clearly address throughput as a measurement or optimization of work completion rates.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-16T00:44:31",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses Team Foundation Server and Application Lifecycle Management with a focus on compliance and traceability, rather than the principles or practices of Test Driven Development specifically.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T18:41:05",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the technical aspects of Visual Studio 2010 and Team Foundation Server, particularly around compliance and traceability in software development. While it touches on team roles and collaboration, it lacks a deep exploration of social technologies as defined in the category. The discussions on roles and tasks are more about process management than fostering collaboration or collective intelligence, which are core themes of social technologies.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T11:57:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of Visual Studio 2010 and Team Foundation Server, focusing on compliance and application lifecycle management rather than leadership practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:30:04",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the use of Team Foundation Server (TFS) and Visual Studio for Application Lifecycle Management, which relates to the concept of an Internal Developer Platform. However, the primary focus is on compliance and traceability rather than the broader aspects of IDPs.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:30:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to Application Lifecycle Management, without any mention of Artificial Intelligence or its integration within Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-15T06:42:02",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses various aspects of Application Lifecycle Management (ALM) using Team Foundation Server (TFS) and Visual Studio, touching on concepts like requirements, tasks, and testing. However, it does not explicitly mention Scrum roles, events, or principles, which are central to the Scrum framework. While there is some alignment with Agile principles, the focus is primarily on TFS functionalities rather than Scrum practices, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T16:31:37",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the traceability and compliance aspects of Team Foundation Server (TFS) and Visual Studio 2010, which are relevant to the Shift-Left Strategy. However, it primarily focuses on compliance and audit features rather than explicitly integrating testing, security, and compliance earlier in the development process. While there are mentions of testing and requirements, the overall emphasis is more on compliance tracking rather than a proactive Shift-Left approach.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-03-22T08:46:26",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to compliance and traceability, rather than discussing Continuous Improvement principles. While it touches on aspects of process management and team roles, it lacks a clear emphasis on empirical evidence, data-driven decision-making, or a culture of experimentation, which are core to Continuous Improvement.",
    "level": "Ignored"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-03-22T08:46:29",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on the features and functionalities of Visual Studio 2010 and Team Foundation Server, particularly in relation to compliance and traceability. While it touches on roles within teams, it does not explicitly discuss the alignment of strategy with execution or shared objectives that guide decision-making, which are central to the concept of Common Goals in Agile and DevOps. The discussion lacks depth in exploring how these tools contribute to fostering collaboration or enhancing accountability across teams.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-03-22T08:46:31",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses the features and functionalities of Visual Studio 2010 and Team Foundation Server in relation to compliance and traceability. While it touches on the roles of team members and the importance of managing tasks and requirements, it does not explicitly focus on the concept of competence as defined in Agile and DevOps methodologies. The discussion lacks depth in exploring continuous learning, skill development, or the impact of competence on team dynamics and quality outcomes.",
    "level": "Ignored"
  }
}
