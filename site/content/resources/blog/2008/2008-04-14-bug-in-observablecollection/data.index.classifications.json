{
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-16T18:27:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, which does not align with the principles of Application Lifecycle Management.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-16T18:27:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET, which is unrelated to flow efficiency or optimisation of work throughput.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-16T18:27:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection in .NET, with no relevance to enterprise agility or organisational adaptability.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-16T18:27:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection without addressing any sociotechnical aspects or organisational context.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T18:27:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET, which is unrelated to the principles or practices of the One Engineering System.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-16T18:27:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no focus on market adaptability or related methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-16T18:27:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a coding issue related to ObservableCollection and generic types, rather than installation or configuration processes.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T18:27:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in programming, with no focus on decision-making processes or related theories.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T18:27:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, which is not aligned with the Miscellaneous category's focus on broader Agile or DevOps discussions.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-16T18:27:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection and generic types without addressing organisational resilience or change management.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T18:27:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, without reference to complexity science or its principles.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-16T18:27:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a coding issue related to ObservableCollection without focusing on Agile or DevOps tools, methodologies, or frameworks.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-16T18:27:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection and generic types, with no clear focus on value delivery principles or practices.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-16T18:27:45",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET, with no focus on metrics, learning, or evidence-based decision-making.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T18:27:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to ObservableCollection in .NET, with no mention of Kanban principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T18:27:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to ObservableCollection in programming, with no relevance to organisational psychology.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-16T18:27:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no reference to Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-16T18:27:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no relevance to Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-16T18:27:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection and generic types, with no reference to Agile principles or product-centric development.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-16T18:27:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection and does not relate to news or reviews in Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-16T18:27:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection and does not relate to product delivery methodologies or practices.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T18:27:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection in .NET programming, with no relevance to BetaCodex principles or organisational design.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-16T18:27:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no clear connection to platform engineering principles or practices.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T18:27:58",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no mention of AI, automation, or Agile practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-15T07:34:22",
    "ai_confidence": 32.0,
    "ai_mentions": 10,
    "ai_alignment": 25,
    "ai_depth": 15,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses a specific coding issue related to the use of `ObservableCollection` with generic types. While it touches on code quality and the challenges of using generics, it lacks a broader discussion on complexity theory or best practices in software development. The focus is more on troubleshooting a specific problem rather than exploring the interplay between code quality and complexity in a comprehensive manner.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T18:28:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection and does not relate to events or presentations.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-16T18:28:03",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection and generic types, with no focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-16T18:28:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection in .NET, which is not relevant to business agility principles or practices.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T18:28:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in programming, with no clear connection to Systems Thinking principles or applications.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-16T18:28:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in programming, with no relevance to organisational agility or its principles.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T18:28:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, which is not relevant to Agile Product Management.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-16T18:28:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection and does not provide personal reflections or experiences.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-16T18:28:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no mention of Azure DevOps or its functionalities.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T18:28:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no relevance to Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-16T18:28:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no mention of DevOps principles, practices, or tools.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-16T18:28:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a specific coding issue related to ObservableCollection and generics, without focusing on broader engineering practices or methodologies that enhance agility in software development.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-16T18:28:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection and generic types, with no focus on human behaviour or process methodologies.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-16T18:28:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses a technical issue with ObservableCollection and does not focus on discovery or learning processes.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T18:28:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET, without reference to any products, books, or Agile/DevOps methodologies.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on a technical issue related to ObservableCollection in programming, which does not pertain to product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical problem related to coding and the use of ObservableCollection, without any relation to product validation or user engagement.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a coding issue with ObservableCollection in .NET and does not pertain to system configuration principles or practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is primarily focused on a technical issue with ObservableCollection in coding, which does not relate to the measurement or improvement of innovation capabilities.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection and generics in programming, with no discussion of cross-functional teams or Agile methodologies.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to ObservableCollection in .NET programming, which is unrelated to Azure Repos or source control.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses programming issues related to ObservableCollection and generic types, which is unrelated to portfolio management or strategic alignment.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in programming, which is not relevant to Scrum principles or product development.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on a specific technical issue related to the usage of ObservableCollection in .NET, rather than discussing principles or methodologies of Agile engineering practices.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue related to ObservableCollection, which does not align with the principles or practices of self-organisation.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on a technical issue related to coding with ObservableCollection and does not discuss decision-making processes or methodologies.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses technical issues related to ObservableCollection in .NET and does not address Agile values or principles.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to programming and does not address employee engagement or related themes.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on a technical issue related to ObservableCollection and generic types in programming, with no discussion on accountability, team dynamics, or ownership.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on a technical problem related to ObservableCollection and coding issues, not on mentoring or coaching themes.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses a technical problem related to ObservableCollection in programming, which is unrelated to the Definition of Done in Agile or Scrum.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue related to ObservableCollection in .NET, which is unrelated to Scaled Agile methodologies or frameworks.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on a technical problem with ObservableCollection in .NET and does not discuss trends in Agile, DevOps, or business agility.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses a programming issue with ObservableCollection and does not involve hypothesis testing, validation of assumptions, or experimentation within Agile workflows.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to ObservableCollection and generics in code, with no relation to forecasting in Agile or Scrum.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue with ObservableCollection in .NET and does not relate to empirical process control or Agile principles.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a specific issue with ObservableCollection in .NET and does not focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical issues related to programming and does not address psychological safety or related themes.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET programming, which is unrelated to collaboration tools.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-15T07:34:22",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content primarily discusses a technical issue related to the use of ObservableCollection in .NET, which is a specific programming problem rather than a broader discussion on Agile, DevOps, or modern engineering practices. While it does touch on software development concepts, it lacks direct references to Agile methodologies, DevOps principles, or collaborative practices among developers. The depth of the discussion is focused on a coding problem rather than the role of software developers in a team or project context.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-10T18:58:50",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses a specific issue related to the use of ObservableCollection in .NET, which is a software development topic. It provides code examples and explores a limitation in the implementation, aligning with best practices in coding and software design. However, the discussion lacks depth in terms of broader software development methodologies or practices, focusing instead on a specific coding problem.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on a programming issue regarding ObservableCollection and generic types in .NET, unrelated to Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to ObservableCollection in .NET, which is not relevant to product strategy.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical problem related to coding and does not address estimation or Agile/Scrum practices.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical issues related to ObservableCollection in .NET programming, with no relevance to Minimum Viable Product concepts.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to programming, specifically with ObservableCollection and generic types, which is not relevant to coaching.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue related to programming and data structures, which is irrelevant to Lean Startup principles.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical programming issue related to ObservableCollection and generic types, with no focus on technical leadership or agile best practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses technical issues related to programming and does not mention market share or any related topics.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses ObservableCollection and .NET programming issues, with no reference to Azure Pipelines or related CI/CD topics.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses a technical issue related to ObservableCollection and generic types in programming, with no relevance to Agile Planning principles or practices.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on a technical issue related to programming and does not discuss strategic goals or business agility.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on a technical issue related to ObservableCollection and does not discuss Continuous Delivery principles or practices.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET and is not related to Lead Time or its implications.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET programming, without focus on continuous learning principles or practices.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical issues with ObservableCollection in programming, without any mention of organisational change or related concepts.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to programming and does not address digital transformation or its strategic importance.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses a technical issue related to ObservableCollection and does not address hypothesis formulation, experimentation, or validated learning in product development.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a coding issue related to ObservableCollection without any mention or relevance to AI, Agile, or DevOps.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical issues related to the ObservableCollection in .NET programming, with no mention of Agile principles, methodologies, or strategic context.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily discussing a programming issue related to ObservableCollection and generic types, with no relevance to change management.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on a coding issue concerning ObservableCollection and generic types, which does not pertain to Continuous Integration practices or principles.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a programming issue related to ObservableCollection and generics, not related to deployment frequency or optimization of software deployment intervals.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical problem related to ObservableCollection and generics in programming, which does not align with Lean Product Development principles or topics.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues with ObservableCollection in .NET programming, with no reference to Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to ObservableCollection in programming, without any reference to leadership or evidence-based practices.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical issues related to ObservableCollection in .NET, not Agile frameworks.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical issues related to ObservableCollection in .NET and does not discuss Agile principles, frameworks, or transformation strategies.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on a specific technical issue regarding ObservableCollection in .NET, with no mention of Agile methodologies or planning tools.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses a technical issue with ObservableCollection in .NET without relating to version control practices or methodologies.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical problem related to a programming construct and does not focus on the concept of Increments in Agile or Scrum.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a programming issue with ObservableCollection and does not address software release practices or frequent releases.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on a technical issue related to ObservableCollection in programming and does not engage with team performance or Agile practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical issues related to ObservableCollection and generic types in programming, with no relevance to Product Backlog discussions.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses an issue with ObservableCollection in .NET programming, which is unrelated to Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical issues related to ObservableCollection and does not address the responsibilities or skills of a Product Owner.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues with ObservableCollection in .NET programming, which is not related to Sprint Review or Scrum processes.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on a technical issue with ObservableCollection in .NET, with no discussion of teamwork, communication, or collaboration.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection and does not address the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a programming issue with ObservableCollection and generics, without any relevance to Acceptance Test Driven Development.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue with ObservableCollection in .NET and does not address transparency in Agile processes.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-15T07:34:22",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses a technical issue related to the use of ObservableCollection with generics, which touches on software design principles. However, it primarily focuses on a specific problem and workaround rather than broader best practices or methodologies in software craftsmanship. The discussion lacks depth in exploring the implications of the issue on code quality or maintainability, which are key aspects of the Technical Mastery category.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a coding issue related to ObservableCollection and does not address remote working, Agile practices, or any related topics.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on a coding issue related to ObservableCollection in .NET, which has no relevance to Kanban or its scaling principles.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in programming, which is unrelated to customer retention strategies.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to the ObservableCollection in .NET, with no relation to agile methodologies or project management.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on a technical issue regarding ObservableCollection and generic types in .NET, with no relevant discussion on throughput, work completion rates, or related Agile or DevOps themes.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on programming issues related to ObservableCollection in .NET, which is unrelated to Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is discussing a technical issue related to ObservableCollection in .NET, with no mention or relevant connection to Cycle Time or associated metrics.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to ObservableCollection and coding problems, without reference to sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to ObservableCollection and programming, with no reference to customer satisfaction or customer experience.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about technical issues related to ObservableCollection in .NET, not customer feedback integration.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue with ObservableCollection and generics in programming, without any clear relevance to strategy in Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue related to programming and does not address topics of organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on a technical issue with the ObservableCollection and does not discuss technical debt, its implications, or management strategies.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to programming and does not mention Scrum Values or principles.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses an issue with ObservableCollection in .NET, which is not specific to the Windows operating system. It does not focus on Windows installation, configuration, troubleshooting, or related topics.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical issues with ObservableCollection and generic types in programming, with no relevance to Lean Principles.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-03-10T15:12:41",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses a specific issue with the ObservableCollection in .NET, detailing the problem encountered and providing a workaround. It directly addresses a technical issue, which aligns with the troubleshooting category. However, while it mentions the problem and a solution, the depth of discussion on systematic problem-solving techniques or tools is limited, which affects the overall confidence score.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to programming with ObservableCollection, which is not relevant to the themes of entrepreneurship.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection and generic types in programming, without addressing leadership or Agile principles.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses issues related to ObservableCollection and generic types in programming, which are not related to deployment strategies.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a programming issue related to ObservableCollection in .NET, with no focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about troubleshooting a programming issue with ObservableCollection in .NET and does not discuss Lean Thinking principles or practices.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses programming issues with ObservableCollection, which is not relevant to the Daily Scrum or its practices.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection and generics, which is not relevant to Behaviour Driven Development.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses technical coding issues related to ObservableCollection and generic types, with no relevance to working agreements or team collaboration.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue with ObservableCollection in .NET, rather than focusing on working software principles or best practices related to functional software delivery.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue with ObservableCollection and generic types, with no focus on product discovery methodologies or customer needs.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a coding issue related to ObservableCollection and does not mention Scrum roles, collaboration, or team dynamics.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses a technical issue related to ObservableCollection and generic types without any mention of team dynamics, motivation, or psychological aspects of teamwork.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical issues related to ObservableCollection and generic types, lacking focus on pragmatic problem-solving or Agile methodologies.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a programming issue related to ObservableCollection and generic types, with no clear focus on release management practices or topics.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-15T07:34:22",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses a technical issue related to the use of ObservableCollection in .NET, which is a specific coding problem rather than a broader discussion on engineering excellence. While it touches on coding practices, it lacks a focus on best practices, quality assurance, or continuous improvement in engineering processes. The depth of discussion is limited to a specific problem and workaround without addressing overarching principles of software craftsmanship.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about technical issues with coding and does not discuss revenue, employee productivity, or financial efficiency.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a coding issue related to ObservableCollection in .NET, with no focus on asynchronous development practices or principles.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue with ObservableCollection in programming, which is unrelated to Scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on a programming issue related to ObservableCollection and does not address backlog refinement or Agile practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a programming issue related to ObservableCollection, without any focus on improving operational efficiency, processes, or methodologies relevant to Agile, DevOps, or Lean frameworks.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to programming and does not address organisational culture.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue related to ObservableCollection and generics, with no mention of Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses technical issues with ObservableCollection and generics in .NET, which is not related to scaling agility.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is a technical discussion about programming and does not relate to Scrum Master responsibilities or practices.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily discussing an issue with an ObservableCollection in programming, which does not relate to automated testing principles or practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses a technical issue with ObservableCollection in .NET, focusing on programming rather than Agile methodologies or large-scale agility practices.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-16T18:38:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses an issue with ObservableCollection and generics without mentioning Test First Development, Agile methodologies, or related testing practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T18:52:15",
    "ai_confidence": 5.0,
    "ai_mentions": 10.0,
    "ai_alignment": 2.0,
    "ai_depth": 1.0,
    "non_ai_confidence": 0,
    "final_score": 4.0,
    "reasoning": "The content primarily focuses on a technical issue related to ObservableCollection in WPF, discussing coding problems and workarounds. It does not address any themes related to collaboration, decision-making, or value delivery, which are central to the category of Social Technologies. The mention of coding experience is too vague and does not connect to the principles of self-organisation or collective intelligence.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:15:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical issues related to ObservableCollection and generic types, with no focus on leadership practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:43:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection and generic types, with no mention of Internal Developer Platforms or related concepts.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:43:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses a technical issue related to ObservableCollection in .NET, with no mention of AI or its applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T12:00:23",
    "ai_confidence": 10.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 9.0,
    "reasoning": "The content primarily discusses a technical issue related to ObservableCollection in .NET, with no direct mentions of Scrum principles, roles, or practices. While it touches on software development, it does not align with the core themes of Scrum, such as team dynamics or iterative processes. The depth of discussion is focused on a specific coding problem rather than any Scrum-related topics.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T16:42:21",
    "ai_confidence": 5.0,
    "ai_mentions": 10.0,
    "ai_alignment": 2.0,
    "ai_depth": 1.0,
    "non_ai_confidence": 0,
    "final_score": 4.0,
    "reasoning": "The content primarily discusses a technical issue related to the ObservableCollection in .NET, with no mention of testing, security, or compliance processes. It does not align with the core themes of the Shift-Left Strategy, which focuses on integrating these critical processes earlier in the software development lifecycle. The discussion is limited to a specific coding problem and does not provide any depth or context related to Shift-Left practices.",
    "level": "Ignored"
  }
}
