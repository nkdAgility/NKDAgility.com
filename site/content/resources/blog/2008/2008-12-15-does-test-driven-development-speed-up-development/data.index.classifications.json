{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T10:48:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, without a clear focus on Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T10:48:10",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T10:48:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development, which is a specific methodology related to software development, rather than a miscellaneous topic.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T10:48:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and its impact on software development processes, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-07T15:47:53",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content primarily focuses on Test-Driven Development (TDD), discussing its benefits in reducing complexity, improving adaptability, and enhancing productivity in software development. It explicitly mentions TDD and its role in the development process, aligning well with the core themes of Technical Excellence. The depth of discussion is substantial, providing insights into how TDD supports flow and productivity, although it could benefit from more detailed exploration of related practices like CI/CD or modular architecture.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T10:48:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes, without a focus on decision-making processes or uncertainty.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T10:48:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and does not reference any specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-16T10:48:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes, without a clear focus on organisational resilience or change management.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-22T09:30:15",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses test-driven development (TDD) and its impact on software productivity, which aligns with the DevOps principle of flow efficiency over resource efficiency. However, it primarily focuses on TDD rather than the broader DevOps philosophy, making it a secondary mention rather than a primary focus. The depth of discussion on DevOps concepts is limited, as it does not address collaboration, automation, or shared accountability, which are core themes of DevOps.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T10:48:24",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without any mention of AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-16T10:48:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without a clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-16T10:48:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development processes, without addressing broader organisational agility or enterprise-level implications.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-03-22T09:30:29",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its impact on software productivity, which is not directly related to the Agile Product Operating Model. While TDD can be a part of agile practices, the focus here is on software development techniques rather than the broader principles and frameworks of APOM. There are no explicit mentions of product management, agile principles, or the transition from project to product ethos, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-15T07:25:40",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses test-driven development (TDD), which is a practical technique relevant to Agile methodologies. However, it lacks direct mentions of specific tools or frameworks, and the depth of discussion on TDD is limited. While it aligns conceptually with the category by addressing a technique that enhances software development practices, it does not provide extensive detail or practical application insights, resulting in a moderate confidence score.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T10:48:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without a clear focus on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-16T10:48:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, without a clear focus on platform engineering or internal developer platforms.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-16T10:48:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, with no focus on installation or configuration processes.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-15T07:25:11",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as reducing complexity and improving adaptability in software development. However, it does not explicitly address organisational agility as a primary focus. While it touches on concepts related to adaptability and flow, it lacks a comprehensive exploration of agile methodologies, leadership roles, or cultural shifts necessary for organisational agility. The discussion is more centred on TDD rather than broader organisational strategies, which limits its alignment with the category.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-03-22T09:30:34",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits for software productivity, but it does not explicitly mention Evidence-Based Management or its key topics. While it touches on concepts like reducing complexity and improving adaptability, it lacks a focus on empirical evidence or data-informed decision-making that characterises EBM. The discussion is primarily centred on TDD rather than the broader strategic approach of EBM.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-15T07:25:46",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses test-driven development (TDD) and its impact on complexity in software development, which aligns with the category's focus on code quality and complexity. It explicitly mentions how TDD decreases complexity and improves adaptability, which are key themes in the category. However, while it touches on these concepts, the depth of discussion is somewhat limited, primarily focusing on TDD without delving into broader complexity theory or architectural implications. Therefore, the confidence score reflects a strong but not exhaustive alignment with the category.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-03-15T07:25:26",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses a specific post on test-driven development (TDD), which is relevant to the software development industry. It mentions the benefits of TDD and its impact on productivity, aligning with the core themes of Agile and technology updates. However, it primarily focuses on summarising another author's work rather than providing a comprehensive review or analysis, which limits its depth. The direct mention of industry relevance and the call to action for software professionals adds to its credibility, but the lack of extensive detail on TDD's implications in Agile or DevOps practices reduces the overall confidence score.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-16T10:48:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, without a clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-15T07:25:44",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as reducing complexity and improving adaptability, which aligns with the principles of iterative development and incremental delivery. However, it lacks a direct focus on value delivery strategies or methodologies within Agile or DevOps frameworks. The discussion is more about TDD's impact on development processes rather than explicitly addressing customer value or satisfaction, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-03-15T07:25:29",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses how test-driven development (TDD) supports flow in software development, which aligns with the principles of Flow Efficiency. It mentions the reduction of rework and design flaws, which are relevant to optimising throughput. However, while flow is a key theme, the discussion is not deeply focused on specific techniques or metrics for flow efficiency, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T10:48:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without a focus on BetaCodex principles or organisational design.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-16T10:48:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development processes, without a focus on metrics, data analysis, or evidence-based decision-making.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T10:48:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its benefits, which is not directly related to the One Engineering System framework.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T10:48:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes, without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-16T10:48:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development processes without addressing the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-16T10:48:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its benefits, without personal reflections or experiences.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-15T07:25:37",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as reducing complexity and improving adaptability, which aligns with the themes of continuous learning and innovation in software development. However, it primarily focuses on TDD as a technical practice rather than exploring broader methodologies or processes that foster discovery and learning. The discussion lacks depth in terms of how TDD can be integrated into a culture of experimentation or how it contributes to team dynamics, which limits its overall alignment with the category.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-16T10:48:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without any specific mention of Azure DevOps.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-16T10:48:54",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, with no focus on transparency or accountability.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-16T10:48:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, without a clear focus on the application lifecycle management processes or methodologies.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T10:48:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without a focus on Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-16T10:48:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development efficiency, without a clear focus on human behaviour or team processes.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T10:48:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-03-15T07:25:21",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as improving adaptability and reducing rework, which aligns with the principles of Agile methodologies. However, it does not explicitly focus on broader market adaptability strategies or practices, making it a secondary topic rather than a primary focus. The depth of discussion on TDD is moderate, but it lacks comprehensive coverage of how these practices directly enhance an organisation's ability to respond to market shifts.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-15T07:25:06",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as reducing complexity and improving adaptability, which are relevant to product delivery. However, it primarily focuses on TDD as a practice rather than the broader methodologies and processes involved in delivering software products. While it touches on aspects that could relate to product delivery, it lacks a comprehensive exploration of the end-to-end delivery process, making it a secondary focus rather than a primary discussion.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development practices, rather than focusing on organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes, without a clear focus on release management.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on productivity in software development, without focusing on revenue per employee metrics.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on test-driven development and its impact on software productivity, rather than mentoring or the guiding roles in Agile environments.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on productivity, rather than the practice of frequent software releases.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impacts on productivity, without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its benefits, without focusing on experimentation or hypothesis-driven approaches within Agile workflows.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development efficiency, with no clear focus on strategies for increasing market share.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and its impact on productivity, without focusing on coaching principles or practices.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-10T15:08:36",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses test-driven development (TDD) in detail, highlighting its benefits such as reducing complexity, improving adaptability, and decreasing rework. These points align closely with the principles of clean code and software craftsmanship, which are core themes of the Technical Mastery category. The discussion is not merely a mention of TDD but provides insights into its impact on software development practices, indicating a strong alignment with the category's focus. However, while the content is rich in detail regarding TDD, it does not delve deeply into other aspects of software craftsmanship or engineering practices, which slightly limits its depth score.",
    "level": "Secondary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its effects on software development, without a focus on accountability or team dynamics in Agile methodologies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its benefits for software development, with no clear focus on scaling Agile methodologies or large-scale Agile practices.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses test-driven development rather than minimum viable products or their role in product development.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily revolves around test-driven development and does not discuss Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on test-driven development (TDD) and its impact on software development, rather than discussing Agile Project Management or its principles.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, without any mention or relevance to Azure Pipelines.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software production, with no clear focus on long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development in software engineering, with no significant focus on Scrum roles, teamwork dynamics, or Scrum-specific practices.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impacts on software development without emphasizing Agile strategy or methodologies.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its efficiency in software development, with no mention of the Daily Scrum or its related themes.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses test-driven development and its impact on productivity, without any reference to backlog refinement or related practices.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development in software engineering, with no clear focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, with no clear focus on Value Stream Mapping or related Lean principles.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses test-driven development and its impact on software productivity, which is not directly related to customer retention strategies.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses test-driven development but does not relate to remote working practices, challenges, or solutions.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its impact on software development processes, without a clear focus on Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, not directly related to Agile Planning methodologies or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, without a clear focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on test-driven development and its impact on software development, not on portfolio management or strategic alignment.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development without any focus on Agile planning tools.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on development processes, without a clear focus on the Increment in Agile or Scrum methodologies.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-07T15:47:49",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses test-driven development (TDD), which is a key practice in software craftsmanship and aligns well with the principles of quality assurance and coding standards. It explicitly mentions the benefits of TDD, such as reducing complexity and improving adaptability, which are central to engineering excellence. The depth of discussion is moderate, providing insights into how TDD impacts productivity and development processes, but it could benefit from more detailed exploration of best practices and metrics related to TDD.",
    "level": "Secondary"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its benefits, without focusing on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and its benefits, with no focus on estimation practices within Agile or Scrum.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-10T13:10:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses Test-Driven Development (TDD), which is a modern engineering practice relevant to software developers. It highlights the benefits of TDD in reducing complexity and improving productivity, aligning with the core themes of Agile methodologies. However, the discussion is somewhat general and lacks specific references to Agile or DevOps frameworks, which limits its depth and direct relevance to the category.",
    "level": "Secondary"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development in software development without any mention of AI or its integration in Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-03-15T07:25:13",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 22,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as reducing complexity and improving flow, which aligns with Lean principles of waste reduction and value maximisation. However, it primarily focuses on TDD rather than Lean principles directly, leading to a moderate confidence score. The mention of flow supports Lean concepts, but the overall depth of discussion on Lean itself is limited.",
    "level": "Tertiary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses test-driven development and software development concepts without any mention of the Windows operating system.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on test-driven development and its impact on software productivity rather than product strategy, roadmapping, or customer alignment.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses test-driven development (TDD) rather than BDD and does not address the principles or practices of Behaviour Driven Development.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-11T12:09:53",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content explicitly discusses test-driven development (TDD), which is a key practice within the Software Development category. It highlights the benefits of TDD, such as reducing complexity and improving adaptability, aligning well with the core themes of software engineering practices. The depth of discussion is substantial, providing insights into how TDD impacts productivity and software quality, making it a primary focus of the content.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses test-driven development (TDD) without a focus on Agile frameworks and does not explore Agile principles or frameworks like Scrum or Kanban.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on test-driven development, with no significant references to scaling Agile practices or coordination among multiple teams.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its benefits, which are not related to the responsibilities of a Product Owner.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on productivity, not specifically on Lead Time.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its effects on software development efficiency, rather than structured decision-making processes.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on test-driven development and its impact on software development, with no clear discussion on Scrum values.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes, but does not focus on the measurement or enhancement of innovation capabilities.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses test-driven development and its impact on software development processes, without any focus on product discovery methodologies or techniques.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the benefits of test-driven development rather than discussions about Cycle Time specifically.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development speed rather than addressing methodologies for validating product ideas or user feedback.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on test-driven development and its benefits, with no clear discussion on technical leadership, team dynamics, or agile methodologies.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its benefits to software productivity, with no focus on customer satisfaction.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-10T18:55:19",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses Test-Driven Development (TDD), which is a core topic within Engineering Practices. It explicitly mentions the benefits of TDD, such as reducing complexity and improving adaptability, aligning well with the principles of clean code and automation. The depth of discussion is substantial, providing insights into how TDD impacts productivity and software quality. However, while TDD is a significant focus, the content does not delve into other engineering practices, which slightly limits its overall alignment with the broader category.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses test-driven development and its impact on software productivity, with no mention of Sprint Reviews or related Scrum processes.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its impact on software development practices, without focusing on the Product Backlog or related Agile concepts.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on test-driven development and its benefits rather than discussing the Definition of Done.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses test-driven development and its impact on software productivity, but does not mention Azure Boards or related Agile project management practices.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-22T09:30:31",
    "ai_confidence": 25.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 10,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its benefits in reducing complexity and rework, which are relevant to software development practices but do not specifically address Continuous Delivery principles. While TDD can contribute to a Continuous Delivery pipeline by improving code quality, the focus here is on TDD itself rather than the broader Continuous Delivery practices, such as automation, rapid feedback, or deployment strategies.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development efficiency, rather than focusing on the Agile Philosophy or its foundational principles.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-15T07:25:33",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, which relate to the delivery of functional software. However, it does not explicitly focus on the broader category of working software or its characteristics within Agile and Scrum frameworks. The mention of TDD aligns with the concept of ensuring software quality and functionality, but the depth of discussion is limited to TDD without exploring other aspects of working software or customer feedback integration.",
    "level": "Secondary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development speed rather than focusing on test automation specifically.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly discusses test-driven development and its benefits, with no significant focus on transparency in Agile processes.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without reference to evidence-based leadership principles.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development in the context of software development, which is unrelated to organisational change.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on test-driven development and its benefits, with no significant discussion on psychological safety.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-03-11T18:14:21",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses test-driven development (TDD), which is a form of automated testing, but it does not delve deeply into the principles, practices, or methodologies of automated testing as a whole. While TDD is mentioned, the focus is more on its impact on development speed and productivity rather than on automated testing frameworks, tools, or best practices. Therefore, while there is some relevance, it does not meet the criteria for a primary focus on automated testing.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on the merits of test-driven development rather than analyzing trends in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-15T07:25:35",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses test-driven development (TDD) and its impact on reducing complexity and rework, which aligns with operational efficiency. However, it lacks a direct focus on broader operational practices or methodologies like Agile or Lean, and the discussion is somewhat general without delving deeply into specific operational strategies or metrics.",
    "level": "Tertiary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-03-15T07:25:09",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 24,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the impact of test-driven development (TDD) on productivity and flow, which are relevant to throughput. It mentions how TDD reduces complexity and rework, indirectly linking to the optimisation of work completion rates. However, it does not explicitly focus on throughput as a primary topic, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, with no direct focus on empirical process control.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, without any focus on Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, with no focus on the Definition of Ready or related concepts.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development (TDD) and its effects on software production, without a primary focus on sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is primarily focused on test-driven development within software development, not on product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses test-driven development and its effects on software development, without focusing on Lean Product Development principles or practices.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-03-11T10:44:20",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content explicitly discusses test-driven development (TDD) and its benefits, which aligns with the principles of Test First Development. However, it lacks a comprehensive exploration of the topic, focusing more on the advantages rather than the detailed processes or tools involved. The mention of TDD is significant, but the overall depth and breadth of discussion do not fully meet the criteria for a high confidence score.",
    "level": "Secondary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development rather than source control practices or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Test Driven Development (TDD) rather than Acceptance Test Driven Development (ATDD), which is a distinct methodology focusing on acceptance criteria and collaboration.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development without addressing leadership roles or practices in Agile contexts.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development productivity, without focusing on change management concepts.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes without addressing organisational culture.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and does not mention Azure Repos or any related functionalities.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its effects on software development, without a clear focus on themes related to continuous learning, growth mindset, or knowledge sharing within teams.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its benefits in software development, without a clear focus on digital transformation or strategic adoption of digital technologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-15T07:25:31",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses test-driven development (TDD) and its practical benefits in software development, aligning well with pragmatic thinking principles. It highlights how TDD decreases complexity and improves adaptability, which are key aspects of practical problem-solving in Agile contexts. The depth of discussion on TDD's impact on productivity and flow indicates a strong understanding of real-world applications, though it could benefit from more explicit connections to Agile or Scrum frameworks.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development in software engineering rather than Lean Startup principles or methodology.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on development velocity, without directly addressing technical debt concepts.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on test-driven development rather than working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its impact on software productivity, without a focus on team dynamics, collaboration, or agile team performance.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on test-driven development and its impact on software productivity, with no mention of collaboration tools or Agile team dynamics.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its benefits to software development, with no clear connection to forecasting within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-16T11:56:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, with no focus on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-03-15T07:25:24",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as reducing complexity and improving flow, which are relevant to Lean Thinking principles. However, it does not explicitly mention Lean principles or tools, nor does it delve deeply into waste identification or continuous improvement strategies. The focus is primarily on TDD rather than Lean Thinking itself, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes, rather than deployment strategies.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) rather than Scrum processes or product development specifically within a Scrum framework.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on test-driven development and its impact on software productivity, rather than troubleshooting techniques or issues.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on test-driven development and its benefits, not on the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without focusing on deployment frequency or Agile/DevOps practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, which does not align with team collaboration discussions.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, not specifically addressing strategic approaches within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity rather than Agile values and principles.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-03-11T15:13:15",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content explicitly discusses test-driven development (TDD) and its benefits, such as reducing complexity and improving adaptability. It aligns well with the core themes of TDD, particularly in terms of enhancing productivity and addressing design flaws. The depth of discussion is substantial, as it elaborates on how TDD supports flow in software development. However, it does not delve into specific practices or tools associated with TDD, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on test-driven development, which is not related to scaling Scrum practices or principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and its benefits, but does not focus on customer feedback loops or the integration of customer feedback into product development.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its benefits, which are not related to Scrum principles or practices.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and its impacts on software development processes, without focusing on system configuration.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development, without focusing on scaling agile practices or organizational agility.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development in software development, which is not central to the themes of innovation, risk-taking, or value-driven decision-making in entrepreneurship.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-16T11:56:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and its impact on software development, with no clear focus on Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T18:48:12",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its impact on software productivity, which is more focused on technical practices rather than the social frameworks and methodologies that promote collaboration and decision-making within organisations. While it touches on concepts like adaptability and reducing complexity, it does not explicitly address the core themes of social technologies, such as self-organisation, collective intelligence, or transparency. The discussion lacks depth in exploring how TDD relates to organisational culture or collaborative practices, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:04:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software development processes, with no clear focus on leadership practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:38:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and its impact on software productivity, without any mention of Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:38:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development in software development, with no mention of AI or its integration within Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-15T07:25:06",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its benefits in software development, without any explicit mention of Scrum principles, roles, or events. While TDD can align with Agile methodologies, the discussion does not focus on Scrum specifically, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T16:38:10",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses test-driven development (TDD), which is a practice that can align with the Shift-Left Strategy by integrating testing early in the development process. However, the primary focus is on TDD itself rather than explicitly addressing the broader Shift-Left Strategy. The mention of reducing rework and improving adaptability hints at some benefits associated with Shift-Left, but the discussion lacks depth on integrating security and compliance or on the overall strategy. Therefore, while there is some conceptual alignment, it does not meet the criteria for a strong focus on the Shift-Left Strategy.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-03-22T09:30:18",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses test-driven development (TDD) and its benefits, such as reducing complexity and rework, which aligns with the principles of Continuous Improvement. However, it does not explicitly mention Continuous Improvement as a concept or framework, nor does it delve deeply into strategies for fostering a culture of experimentation or learning. The focus is primarily on TDD rather than a broader discussion of Continuous Improvement practices.",
    "level": "Ignored"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-03-22T09:30:21",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses test-driven development (TDD) and its benefits for software productivity, without addressing the concept of Common Goals or their significance in Agile or DevOps frameworks. While it touches on themes of productivity and adaptability, it does not connect these to shared objectives or strategic alignment, which are central to the category of Common Goals.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-03-22T09:30:24",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 10,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses test-driven development (TDD) and its impact on software productivity, which indirectly relates to competence through the lens of skill development and quality outcomes. However, it does not explicitly focus on the broader themes of competence as defined in the category, such as continuous learning or fostering a culture of competence. The discussion is more centred on TDD's benefits rather than on the development of professional capabilities or the importance of competence in Agile or DevOps contexts.",
    "level": "Ignored"
  }
}
