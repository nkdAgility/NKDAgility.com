{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-03-15T04:07:51",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on team structures relevant to Agile methodologies. However, it lacks a direct focus on Agile Product Management principles such as the role of the Product Owner, backlog prioritisation, or stakeholder engagement. While it mentions team configurations and management, it does not delve into how these practices maximise product value or align with customer needs, which are core themes of Agile Product Management.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T14:38:55",
    "ai_confidence": 82.0,
    "ai_mentions": 90.0,
    "ai_alignment": 75.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content provides a detailed exploration of creating nested teams in Visual Studio ALM, which directly relates to practical tooling in Agile environments. It discusses specific configurations and methodologies for managing team structures, aligning well with the category's focus on practical techniques and tooling. The depth of the discussion is significant, offering insights into the configuration process and its implications for team management, thus demonstrating a strong alignment with the key topics outlined in the category.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-14T23:22:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams within Visual Studio ALM, focusing on team structures and configurations rather than platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-03-21T21:29:12",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on creating nested teams in Visual Studio ALM and does not discuss Evidence-Based Management principles or metrics. While it touches on agile processes, it lacks a direct connection to data-informed decision-making or empirical evidence, which are central to EBM.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-14T23:22:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on project management rather than the interplay between code quality and complexity.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-14T23:22:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical implementation details related to creating nested teams in Visual Studio ALM, without a clear emphasis on discovery or learning processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-14T23:22:16",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM without any mention of AI or automation technologies in Agile frameworks.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-14T23:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of teams in Visual Studio ALM and does not focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-03-10T12:36:50",
    "ai_confidence": 82.0,
    "ai_mentions": 18,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 76.0,
    "reasoning": "The content provides a detailed guide on creating and configuring nested teams in Visual Studio ALM, which directly relates to installation and configuration processes. It discusses specific steps for setting up team projects, configuring area paths, and managing team hierarchies, aligning well with the key topics of the category. The depth of discussion is substantial, offering actionable insights and troubleshooting tips, although it could benefit from more explicit mentions of installation procedures and system requirements.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-14T23:22:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-14T23:22:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a clear focus on market adaptability strategies or methodologies.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-15T04:07:57",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the technical aspects of configuring nested teams within Visual Studio ALM and TFS, with limited discussion on the sociotechnical interplay. While it mentions organisational structures and team configurations, it lacks a deeper exploration of how these configurations impact team dynamics, communication, or organisational culture. The discussion is more about technical implementation than the broader sociotechnical implications.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-14T23:22:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical implementations of team structures in Visual Studio ALM without addressing organisational resilience or change management.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-21T21:28:46",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 5.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on creating nested teams in Visual Studio ALM, which is more aligned with project management and agile methodologies rather than the core principles of DevOps. While it touches on team structures and configurations, it lacks discussions on collaboration, automation, or shared accountability that are central to DevOps. The mention of agile processes is secondary and does not delve into the DevOps philosophy.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-14T23:22:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with a focus on specific tools and configurations rather than Agile methodologies or frameworks.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-14T23:22:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical implementation of nested teams in Visual Studio ALM, with no focus on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-14T23:22:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with no reference to events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-14T23:22:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, with no clear focus on optimising work throughput or addressing flow efficiency principles.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-15T04:08:42",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on the technical aspects of configuring nested teams in Visual Studio ALM, with limited discussion on team dynamics or human factors. While it mentions team structures and roles, it lacks a deeper exploration of how these configurations impact collaboration, communication, or leadership within teams. The emphasis is on the technical setup rather than the interplay between people and processes.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-03-15T04:07:46",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the technical aspects of creating nested teams within Visual Studio ALM, which is more aligned with team-level practices rather than organisational agility. While it briefly touches on organisational structures and team configurations, it lacks a broader discussion on enterprise agility principles such as culture, leadership, or organisational-wide strategies. Therefore, it does not meet the criteria for a strong alignment with the category.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-14T23:22:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with no clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-14T23:22:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on team structures and project management rather than metrics or learning principles.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-03-07T14:38:51",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 50,
    "final_score": 65.0,
    "reasoning": "The content discusses the creation of nested teams and their management within a Kanban framework, particularly in relation to visualising work and managing flow. It mentions Kanban boards and the importance of area paths for visualising work, which aligns with Kanban principles. However, the primary focus is on team structure and configuration in Visual Studio ALM rather than a deep exploration of Kanban methodology itself, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-15T04:07:48",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, which relates to engineering practices. However, it lacks a strong focus on broader principles of technical excellence such as TDD, CI/CD, or modular architecture. While it provides detailed instructions and configurations, it does not deeply engage with the core themes of technical excellence, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-14T23:22:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-14T23:22:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical aspects of team structures and project management in Visual Studio ALM, without addressing psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-15T04:08:52",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on team structure and project management. However, it lacks a direct focus on broader product delivery methodologies, such as Agile practices or deployment strategies. While it mentions aspects of team organisation relevant to product delivery, it does not delve deeply into the end-to-end process of delivering software products or the integration of planning, development, testing, and deployment phases.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-14T23:22:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation of nested teams and hierarchical structures within Visual Studio ALM, which aligns more with traditional management practices rather than the principles of Beta Codex.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-14T23:22:49",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, focusing on team structures and configurations rather than the flow of value or Value Stream Management principles.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-14T23:22:50",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with no focus on reviews, analyses, or discussions of literature or tools relevant to Agile methodologies or DevOps practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-14T23:22:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating nested teams in Visual Studio ALM, without a clear focus on value delivery strategies or methodologies.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-10T14:41:34",
    "ai_confidence": 82.0,
    "ai_mentions": 90.0,
    "ai_alignment": 75.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the creation and management of nested teams within Azure DevOps, specifically focusing on Team Foundation Server (TFS) and Visual Studio Online. It provides detailed instructions on configuring team projects, area paths, and team hierarchies, which are core functionalities of Azure DevOps. The discussion aligns well with the key topics of Azure DevOps, particularly in terms of project management and team collaboration. The depth of the content is significant, offering practical insights and configurations, which further supports a high confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-14T23:22:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM, lacking personal reflections or experiences.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-14T23:22:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, focusing on configuration and management rather than exploring Systems Thinking principles or applications.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-03-21T21:29:01",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, which is more focused on tool configuration rather than the Agile Product Operating Model itself. While it touches on agile processes, it lacks a direct discussion of APOM principles, such as transitioning to a product ethos or evidence-based management. The depth of discussion is limited to practical implementation without exploring the broader implications of APOM.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-15T04:08:50",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on organisational structure and team management. However, it lacks a direct focus on the principles of agility, leadership roles, or cultural shifts necessary for organisational agility. While it mentions flexibility in managing work, it does not delve into broader strategies or frameworks that enhance organisational adaptability.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-14T23:23:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on a technical tutorial about creating nested teams in Visual Studio ALM, lacking industry news or reviews.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-10T18:31:49",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which relates to the management of software applications. It touches on aspects of team structure and configuration, which are relevant to the application lifecycle. However, it lacks a comprehensive exploration of the entire application lifecycle stages, best practices, or governance, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-14T23:23:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, with no clear focus on Daily Scrum practices or discussions.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-14T23:23:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, with no clear focus on the Definition of Done or its principles.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-15T04:08:22",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 45.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content primarily focuses on the technical aspects of configuring nested teams in Visual Studio ALM, which aligns with software craftsmanship and engineering practices. However, it lacks a broader discussion on best practices, principles of clean code, or methodologies that contribute to high-quality software development. While it provides detailed instructions and insights into team configuration, it does not delve deeply into the underlying principles of software architecture or quality improvement techniques.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-14T23:23:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical implementation of team structures in Visual Studio ALM, with no focus on understanding customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-21T21:29:09",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses creating nested teams in Visual Studio ALM, focusing on team organisation and reporting within an agile context. While it touches on aspects of team management that could relate to software delivery, it does not explicitly address Continuous Delivery principles, practices, or benefits. The discussion lacks depth in Continuous Delivery topics such as automation, rapid feedback, or error reduction strategies, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-14T23:23:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with no clear focus on long-term objectives or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-14T23:23:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, with no focus on Lead Time or its related metrics.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-14T23:23:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM without a focus on organisational culture.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-14T23:23:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, with no clear focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-03-15T04:08:32",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on team structures and project management. However, it primarily focuses on operational aspects of team management rather than strategic alignment, prioritisation, or value optimisation, which are core to portfolio management. While there are mentions of portfolio-level kanban boards and managing work at a higher level, the overall emphasis is on team configuration and management rather than on the broader strategic objectives of portfolio management.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-14T23:23:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses team structures and configurations in Visual Studio ALM, with minimal focus on the Product Backlog itself.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-03-15T04:08:47",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on team structures and configurations relevant to Agile methodologies. However, it primarily focuses on technical implementation rather than the principles and practices of Agile Planning itself. While there are mentions of team dynamics and project management, the depth of discussion on Agile Planning concepts such as iterative planning, user stories, or feedback loops is minimal.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-14T23:23:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, focusing on team structures and configurations rather than Value Stream Mapping principles or techniques.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-14T23:23:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, without any focus on customer feedback mechanisms or practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-15T04:08:10",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses creating nested teams in Visual Studio ALM, which relates to workflow management and team structure within Agile frameworks. It provides practical steps for configuring teams and area paths, which aligns with operational practices. However, the focus is more on specific implementation details rather than broader operational efficiency strategies, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-14T23:23:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM and does not focus on Scrum roles, collaboration, or team dynamics.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-14T23:23:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM, with no clear focus on Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-14T23:23:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical implementation of nested teams in Visual Studio ALM, with minimal focus on strategic alignment or Agile principles.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-14T23:23:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the configuration of teams and projects in Visual Studio ALM, with no focus on validating product ideas or user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-03-15T04:08:35",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on team structures relevant to Agile practices. However, it lacks explicit references to Agile principles, methodologies, or transformation strategies. While it mentions Kanban in a broader context, it does not delve into Agile transformation as a primary focus, making it only tangentially related to the category.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-14T23:23:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating nested teams in Visual Studio ALM, without focusing on mentoring or coaching aspects.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-14T23:23:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses team structures and project management in Visual Studio ALM, with no focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-14T23:23:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a clear focus on team performance, collaboration, or Agile methodologies.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-14T23:23:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of teams and project management in Visual Studio ALM, with no clear focus on the delivery of software increments or Agile principles.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-14T23:23:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, focusing on team structure and configuration rather than Acceptance Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-11T10:22:53",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content provides a detailed discussion on creating nested teams within Visual Studio ALM, which directly relates to software development practices, particularly in the context of Agile methodologies and team management. It covers specific configurations and processes that are essential for managing software projects effectively, aligning well with the Software Development category's focus on methodologies and best practices. The depth of the discussion is significant, offering practical insights and examples, which further supports a high confidence score.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-03-15T04:08:54",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 30,
    "final_score": 63.0,
    "reasoning": "The content discusses the creation of nested teams within Visual Studio ALM, which relates to agile project management practices, particularly in the context of team organisation and backlog management. However, it lacks explicit references to agile principles or frameworks like Scrum or Kanban, and the discussion is more focused on technical implementation rather than broader agile methodologies. While it touches on concepts relevant to agile, such as team structure and flexibility, it does not delve deeply into the core themes of agile project management.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-14T23:23:50",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-14T23:23:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses creating nested teams in Visual Studio ALM and does not focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-14T23:23:58",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses team structures and project management within Visual Studio ALM, with minimal focus on version control practices.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-14T23:23:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on team structures and project management rather than empirical process control principles.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-14T23:24:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical implementations and configurations related to team structures in Visual Studio ALM, without addressing Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-03-11T11:48:38",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses creating nested teams within Azure DevOps, which is related to Azure Boards. However, it primarily focuses on team structure and configuration rather than the broader functionalities and best practices of Azure Boards in Agile project management. While it touches on aspects of work item management and team collaboration, it lacks a comprehensive exploration of Azure Boards' features and best practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-03-15T04:08:13",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses creating nested teams in Visual Studio ALM, which is related to team organisation and management within a collaborative environment. However, it lacks a direct focus on specific collaboration tools or their features that enhance communication and coordination. While it touches on aspects of team dynamics and structure, it does not provide a comprehensive overview or best practices for using collaboration tools in Agile environments, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-14T23:24:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM, with no clear focus on organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-14T23:24:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, which is unrelated to Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-14T23:24:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, with no clear focus on frequent software releases or related practices.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-14T23:24:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating nested teams in Visual Studio ALM, without any focus on customer satisfaction or experience.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-03-15T04:08:03",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses creating nested teams within a project management tool, which touches on team structure and organisation. However, it lacks explicit references to Scrum principles, frameworks for scaling Scrum, or detailed discussions on maintaining Scrum roles and events at scale. The focus is more on technical implementation rather than the broader themes of scaling Scrum in large organisations.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-14T23:24:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementations related to team structures in Visual Studio ALM without reference to evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-14T23:24:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the technical aspects of creating nested teams in Visual Studio ALM without addressing psychological safety or its implications.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-03-15T04:08:45",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on creating nested teams within Visual Studio ALM, which is more about team-level configurations rather than scaling agile practices across an organisation. While it touches on organisational structures and team hierarchies, it lacks a comprehensive discussion on frameworks for scaling agility, leadership roles, or cross-functional collaboration. The depth of discussion on nested teams is significant, but it does not align closely with the core themes of scaling agility as defined in the category.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-14T23:24:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, which is more related to project management and tool usage rather than engineering excellence or software craftsmanship.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-14T23:24:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses team structures and configurations in Visual Studio ALM, with no focus on revenue metrics or employee productivity.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-14T23:24:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on project management and team structures without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-14T23:24:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a clear focus on systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-14T23:24:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with no clear focus on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-11T14:53:47",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses practical strategies for creating nested teams in Visual Studio ALM, which aligns with pragmatic thinking in Agile contexts. It provides a real-world application of team structuring and management, demonstrating adaptability and problem-solving in a complex environment. However, while it touches on Agile principles, the focus is more on technical implementation rather than broader strategic discussions or case studies, which limits its depth in the category.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-14T23:24:28",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, with no clear focus on backlog refinement practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-14T23:24:30",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a clear focus on innovation capabilities or Evidence-Based Management.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-14T23:24:31",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the configuration of teams in Visual Studio ALM and TFS, with no clear focus on Scrum principles, roles, or product development processes.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-03-15T04:07:54",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on team structures and configurations relevant to Agile practices. However, it lacks a direct focus on scaling Agile methodologies across multiple teams or enterprise-level strategies. While it mentions team hierarchy and collaboration, it does not delve into frameworks like SAFe or LeSS, nor does it address broader enterprise-level Agile transformation or challenges in scaling Agile. Therefore, the content is only tangentially related to the Scaled Agile category.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-14T23:24:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical aspects of creating nested teams in Visual Studio ALM, with no focus on employee engagement strategies or practices.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-14T23:24:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on team structures and project management rather than Lean principles or waste minimisation.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-14T23:24:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses team structures and project management in Visual Studio ALM, with no focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-14T23:24:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM, with no clear focus on entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-15T04:08:25",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, which is more focused on configuration and setup rather than the delivery of functional software that meets user needs. While it touches on team structures and project management, it lacks a direct emphasis on working software characteristics, quality assurance, or customer feedback mechanisms.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-03-15T04:08:17",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses creating nested teams in Visual Studio ALM, which touches on team structure and configuration within Agile frameworks. However, it lacks a direct focus on Agile Planning Tools as defined in the category. While it mentions aspects of team management and configuration that could relate to Agile planning, it does not delve into specific tools or methodologies that enhance planning and execution in Agile. The discussion is more about team hierarchy and setup rather than the planning tools themselves, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-14T23:24:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses team structures and configurations in Visual Studio ALM, with no clear focus on Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-14T23:24:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, with no focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-14T23:24:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM without addressing leadership roles or practices within Agile contexts.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-14T23:24:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation of nested teams in Visual Studio ALM without addressing sensemaking principles or decision-making processes.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-14T23:24:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, focusing on team structures and project management rather than Site Reliability Engineering principles.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-14T23:24:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM without focusing on hypothesis formulation, experimentation, or data-driven decision-making.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-14T23:24:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a focus on structured decision-making methodologies or evidence-based practices.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-14T23:24:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on team structures and project management rather than Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-14T23:25:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses team structures and configurations in Visual Studio ALM, without a clear focus on release management processes.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-14T23:25:01",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical implementation details related to team structures in Visual Studio ALM, with minimal focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-14T23:25:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, with no clear focus on Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-14T23:25:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses team structures and configurations in Visual Studio ALM and TFS, without a clear focus on Azure Pipelines or CI/CD practices.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-14T23:25:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, with no clear focus on deployment frequency or related practices.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-14T23:25:06",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM, with no clear focus on change management principles or practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-03-15T04:08:27",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses creating nested teams within Visual Studio ALM, which touches on team structures and configurations. However, it primarily focuses on technical implementation rather than enhancing team dynamics, communication, or collaboration. While there are mentions of team roles and structures, the depth of discussion on collaboration techniques or cultural aspects is limited, leading to a low confidence score in the context of Team Collaboration.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-14T23:25:09",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM and does not focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-14T23:25:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a clear focus on digital transformation strategies or the impact of digital technologies on business operations.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-14T23:25:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, with no clear focus on Minimum Viable Product concepts or related methodologies.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-14T23:25:16",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on project management and team structures without any mention of AI or its applications.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-03-11T16:43:43",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content primarily focuses on the configuration of teams within Visual Studio ALM, detailing the steps and considerations for setting up nested teams and area paths. It discusses specific configurations, the implications of those configurations, and provides practical guidance on managing team structures, which aligns well with the core themes of system configuration. The depth of discussion is substantial, covering various aspects of the configuration process, although it does touch on broader project management concepts, which slightly detracts from its focus on system configuration.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-14T23:25:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical implementation details related to team structures in Visual Studio ALM, rather than product strategy methodologies or frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-14T23:25:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of creating nested teams in Visual Studio ALM, rather than discussing principles or strategies of technical leadership.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-14T23:25:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, with no focus on estimation techniques or practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-14T23:25:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams within Visual Studio ALM, focusing on technical configurations rather than the principles or benefits of cross-functional teams in Agile.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-08T17:39:56",
    "ai_confidence": 5.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 0.0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses creating nested teams in Visual Studio ALM and does not mention Test First Development or its principles. There is no focus on success criteria, testing practices, or any related concepts that align with Test First Development.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-14T23:25:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM and Team Foundation Server, which are not specific to the Windows operating system.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-14T23:25:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses team structures and configurations in Visual Studio ALM, with no focus on deployment methodologies or practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-03-15T04:08:30",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses creating nested teams within an organisation and touches on team structures and configurations in Visual Studio ALM. While it mentions organisational goals and team hierarchies, it primarily focuses on team-level practices and configurations rather than large-scale Agile frameworks or enterprise-level strategies. The discussion lacks explicit references to scaling Agile methodologies or frameworks like SAFe or LeSS, which are central to the category of Large Scale Agility.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-14T23:25:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating nested teams in Visual Studio ALM, without a focus on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-14T23:25:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, which is not directly related to remote working practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-14T23:25:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without a clear focus on Continuous Learning principles or practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-14T23:25:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and configuration of nested teams in Visual Studio ALM, without focusing on diagnosing or resolving technical issues.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-14T23:25:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM without a focus on hypothesis-driven experimentation or Agile workflows.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-08T17:40:00",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on creating nested teams in Visual Studio ALM, which is a technical guide rather than a discussion on the role or responsibilities of a Scrum Master. While it touches on agile processes, it does not explicitly mention the Scrum Master role or its impact on team dynamics, coaching, or organisational change. The discussion lacks depth in relation to the key topics outlined for the Scrum Master category.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-14T23:25:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with little focus on transparency or its implications in Agile processes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-14T23:25:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, with no focus on working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-11T17:55:45",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses creating nested teams in Visual Studio ALM, which is relevant to software development practices. However, it primarily focuses on technical implementation details rather than the broader themes of Agile and DevOps methodologies. While it touches on team structures and configurations, it lacks in-depth exploration of Agile principles, DevOps integration, or best practices that enhance developer productivity and collaboration.",
    "level": "Tertiary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-14T23:25:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM, with no focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-14T23:25:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, which is more related to project management and tool usage rather than core engineering practices like clean code, TDD, or CI/CD.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-14T23:25:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, with no clear focus on technical debt management or its implications.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-14T23:25:48",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM, with no focus on Sprint Review processes or related topics.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-14T23:25:49",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating nested teams in Visual Studio ALM, rather than focusing on strategic aspects of product management.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-14T23:25:51",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, focusing on configuration and management rather than self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-03-15T04:08:06",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the creation of nested teams within Visual Studio ALM, touching on concepts related to team structures and project management. However, it primarily focuses on technical implementation details rather than exploring Agile frameworks in depth. While it mentions Kanban in the context of team management, it lacks a comprehensive discussion of Agile principles, values, or a comparative analysis of different Agile frameworks. Therefore, it does not align closely with the core themes of the Agile Frameworks category.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-14T23:25:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical aspects of creating nested teams in Visual Studio ALM without a clear focus on Agile strategy or principles.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-14T23:25:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating nested teams and configurations in TFS, which is not directly related to Azure Repos functionalities or source control management.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-14T23:25:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, without a focus on forecasting methodologies or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-14T23:25:58",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, focusing on team structures and project management rather than Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-14T23:25:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of creating nested teams in Visual Studio ALM, without focusing on trend analysis or its implications in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-14T23:26:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the technical aspects of creating nested teams in Visual Studio ALM without addressing accountability or team dynamics.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-03-15T04:08:01",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses creating nested teams and managing work within a hierarchical structure, which aligns with some principles of Kanban, such as visualising work and managing dependencies. However, it primarily focuses on the technical aspects of configuring teams in Visual Studio ALM rather than explicitly addressing the scaling of Kanban practices or providing in-depth discussions on Kanban principles in large organisations. The mention of Kanban is minimal and does not serve as a primary focus, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-14T23:26:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and management of nested teams in Visual Studio ALM, with no clear focus on throughput measurement or optimisation.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-14T23:26:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM and does not address Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T16:10:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating nested teams in Visual Studio ALM, without a focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T18:25:18",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the technical aspects of creating nested teams in Visual Studio ALM, with limited discussion on collaboration or decision-making frameworks. While it touches on team structures and reporting, it lacks a deeper exploration of social technologies' principles such as self-organisation, collective intelligence, or transparency. The discussion is more about configuration and technical implementation rather than the underlying social frameworks that drive effective collaboration and value delivery.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:11:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating nested teams in Visual Studio ALM and does not focus on the concept of Internal Developer Platforms or their benefits, components, or best practices.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:11:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the configuration of nested teams in Visual Studio ALM, with no mention of AI or its application in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-15T04:07:46",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content primarily discusses creating nested teams within Visual Studio ALM and TFS, focusing on team structures and configurations rather than Scrum principles or practices. While it touches on team dynamics and project management, it lacks explicit references to Scrum roles, events, or artifacts, leading to a low confidence score in alignment with the Scrum category.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T16:16:21",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses the creation and management of nested teams within Visual Studio ALM, focusing on team structures and configurations rather than integrating testing, security, or compliance early in the software development lifecycle. There are no direct mentions of the Shift-Left Strategy, and the discussion lacks alignment with its core themes, such as proactive quality assurance or early issue identification.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-03-21T21:28:50",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on creating nested teams in Visual Studio ALM, which is more about technical implementation than Continuous Improvement. While it touches on aspects of team organisation and agile processes, it lacks a strong emphasis on the principles of Continuous Improvement, such as empirical evidence, data-driven decision-making, or fostering a culture of experimentation. The discussion does not provide substantial detail on Continuous Improvement strategies or frameworks, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-03-21T21:28:53",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily focuses on the technical aspects of creating nested teams in Visual Studio ALM, with limited direct mention of Common Goals. While it touches on organisational initiatives and team structures, it lacks a thorough exploration of how these relate to shared objectives or strategic alignment within Agile or DevOps frameworks. The discussion is more about configuration and management rather than the foundational principles of Common Goals.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-03-21T21:28:56",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content primarily focuses on the technical aspects of creating nested teams in Visual Studio ALM, with little emphasis on the principles of competence, continuous learning, or skill development. While it discusses team structures and configurations, it does not delve into how these practices contribute to competence or professional growth within Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-03-21T21:28:59",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 20,
    "final_score": 13.0,
    "reasoning": "The content primarily focuses on creating nested teams in Visual Studio ALM, which is a specific tool rather than discussing the One Engineering System framework. While it touches on team structures and agile processes, it does not explicitly mention 1ES principles, integration of tools across teams, or best practices for implementing a unified engineering system. The discussion lacks depth in relation to the core themes of 1ES, making it only tangentially related.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-08T17:39:52",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on creating nested teams in Visual Studio ALM, discussing technical configurations and processes without addressing the intentional shaping of outcomes, autonomy, or adaptability in the context of Agentic Agility. While it touches on team structures, it does not explore the principles or mechanisms of Agentic Agility, nor does it differentiate between human and AI capabilities in this context.",
    "level": "Ignored"
  }
}
