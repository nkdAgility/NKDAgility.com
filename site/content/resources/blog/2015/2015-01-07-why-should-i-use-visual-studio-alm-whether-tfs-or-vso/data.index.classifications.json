{
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Visual Studio ALM and its comparison with other tools, without specific reference to the Daily Scrum or its principles.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and their functionalities, with no clear focus on the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-10T12:36:57",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of Application Lifecycle Management (ALM) tools, particularly Visual Studio ALM, and compares it with other tools like Git and Jenkins. It touches on various aspects of software development, such as requirements management, project management, and quality management, which are relevant to technical mastery. However, the primary focus is on tool comparison and organisational decision-making rather than deep technical principles or practices. While it does mention some key areas of software craftsmanship, the depth of discussion on best practices and methodologies is limited.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses tool comparison and aspects of Application Lifecycle Management (ALM) rather than focusing on understanding customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools and their functionalities, with only a limited reference to aspects of Continuous Delivery like build and release management. However, it does not focus on the key principles and practices of Continuous Delivery itself.",
    "level": "Quaternary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses considerations around changing tooling, including strategic intent and long-term functions of Application Lifecycle Management tools, which hints at alignment with strategic goals, but primarily focuses on comparisons and functionalities of specific tools.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the features and comparisons of various ALM tools, without a clear focus on Lead Time as a measurement from initiation to delivery.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses application lifecycle management tools and considerations for tool selection, but does not address organisational culture, its impact, or related themes.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the comparison of ALM tools and their functionalities, without focusing on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses ALM tools and their functionalities, rather than focusing on the strategic alignment and management of a portfolio of projects.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management tooling and comparisons between tools, with limited focus on specific backlog management practices or concepts.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) and mentions elements related to project management and agile planning tools, but it primarily focuses on the comparison of ALM tools rather than specific agile planning methodologies and practices.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on Application Lifecycle Management (ALM) tools and their comparison, without discussing Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-03-07T14:39:03",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content briefly mentions 'Feedback management' as part of Application Lifecycle Management (ALM) but does not delve into the mechanisms or practices of integrating customer feedback into product development. While it touches on the importance of understanding customer needs, it primarily focuses on tool comparisons and ALM functionalities rather than exploring customer feedback loops in detail.",
    "level": "Quaternary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses application lifecycle management (ALM) tools and their importance in improving operational efficiency within software development processes, particularly in relation to Visual Studio ALM, but it primarily focuses on comparisons with other tools rather than operational practices themselves.",
    "level": "Tertiary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools and considerations for transitioning between different toolsets. It does not focus on Scrum teams, their roles, collaboration, or any dynamics specific to the Scrum framework.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content focuses primarily on application lifecycle management (ALM) tools and their comparisons, with no substantial discussion of Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses considerations about tool selection and replacement within the context of Application Lifecycle Management (ALM). It touches on strategic aspects like understanding what is being replaced, what is gained, and the strategic intent of the organization, which are relevant to strategic decision-making in Agile environments. However, the content primarily focuses on tooling rather than deep strategic planning or execution, making strategy a secondary theme.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools and the comparison between Visual Studio ALM and other tools like Git and Jenkins, rather than focusing on methodologies or practices for validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the features and considerations of Application Lifecycle Management (ALM) tools, particularly Visual Studio ALM, rather than focusing on Agile transformation practices, methodologies, or principles.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the evaluation and comparison of ALM tools, without a focus on mentoring or coaching aspects relevant to Agile practices.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) and tool comparisons, with only a brief mention of automated testing within the larger context of quality management. Automated testing is not central to the main discussion.",
    "level": "Quaternary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses application lifecycle management (ALM) tools and considerations for tool comparison, without a focus on team performance, dynamics, or collaboration in an Agile context.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses tool comparisons and general Application Lifecycle Management (ALM) practices, without a focus on the delivery of software increments or Agile methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses Visual Studio ALM and its comparison with other tools, without a clear focus on Acceptance Test Driven Development or acceptance criteria.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-10T14:41:45",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 35,
    "ai_depth": 38,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses Application Lifecycle Management (ALM) tools, particularly Visual Studio ALM, and compares it with other tools like Git and Jenkins. It addresses key aspects of software development such as requirements management, project management, change management, and quality management, which are all integral to the software development lifecycle. The depth of discussion is significant, providing detailed insights into the functionalities and considerations when choosing ALM tools, thus aligning well with the core themes of software development practices.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses aspects of Application Lifecycle Management (ALM), which includes project management principles and tooling that could be used in an agile context; however, it primarily focuses on comparing ALM tools rather than specifically exploring agile methodologies and their principles.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the comparison and considerations of application lifecycle management tools, specifically Visual Studio ALM, without a focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools and processes, specifically focusing on Visual Studio ALM, Git, and Jenkins. It does not center around Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) and elements of source control, particularly in the context of comparing tools like Visual Studio ALM with Git and Jenkins. While source control is mentioned, the overall focus is more on ALM as a whole and not predominantly on modern source control practices.",
    "level": "Tertiary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the evaluation and comparison of ALM tools without a clear focus on empirical process control principles, transparency, inspection, or adaptation.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools, focusing on comparisons and considerations related to tooling, rather than addressing the Scrum Values in any direct manner.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of Application Lifecycle Management (ALM) that include work items and project management, which relate to Azure Boards, but it primarily focuses on a broader evaluation of ALM tools and comparisons with Visual Studio ALM.",
    "level": "Tertiary"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Visual Studio ALM and its features, mentioning how it supports project management, task management, requirements management, and other collaboration-related aspects. While it outlines various elements of ALM that can facilitate collaboration, the primary focus is on comparing tools rather than a direct discussion of collaboration tools specifically.",
    "level": "Tertiary"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the challenges and considerations involved in organizational tooling decisions which relate to changes in processes and toolsets during a reorganisation. However, it primarily focuses on application lifecycle management tools rather than the broader themes of organizational change.",
    "level": "Tertiary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly discusses Visual Studio ALM and its functionalities, with no clear focus on Lean Startup principles like MVP, Build-Measure-Learn feedback loops, or validated learning.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "Content discusses Application Lifecycle Management (ALM) which encompasses techniques related to software delivery and release management, although the primary focus is on comparing tooling rather than the practice of frequent releases itself.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 20,
    "non_ai_confidence": 10,
    "final_score": 19.0,
    "reasoning": "The content discusses tool comparisons and decision-making regarding Application Lifecycle Management, with a minor mention of 'feedback management' related to customer inputs. However, the main focus is on technical aspects and not primarily about customer satisfaction.",
    "level": "Quinary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management tooling, specifically the evaluation of Visual Studio ALM versus Git and Jenkins, and does not focus on Scaling Scrum practices, frameworks, or challenges.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on the comparison of Application Lifecycle Management tools rather than on evidence-based leadership practices or principles.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on Application Lifecycle Management (ALM) tools and their functionalities, with no mention or discussion of psychological safety within teams.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the comparison and evaluation of Application Lifecycle Management (ALM) tools, rather than focusing on scaling agile principles or practices at an organizational level.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-07T14:38:59",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of Application Lifecycle Management (ALM) tools and their role in software development, touching on aspects like requirements management, project management, and quality management. However, while it mentions some best practices and considerations for tool selection, it lacks a focused discussion on engineering excellence principles, such as coding standards or continuous integration practices. The depth of discussion on engineering processes is moderate, but it does not fully align with the core themes of engineering excellence.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses ALM tools and considerations for organizations without reference to revenue per employee or related metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-15T08:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on application lifecycle management tools and comparisons rather than asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "While the content discusses organizational tools and considerations for ALM, it focuses primarily on specific tools and their functionalities rather than on systems thinking or the dynamics within the organization as required by the Organisational Physics category.",
    "level": "Quaternary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the comparison and evaluation of Visual Studio ALM and other tooling options, focusing on features, migration challenges, and project management aspects rather than strategies for retaining customers or enhancing user engagement.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-11T10:22:57",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content discusses practical considerations for evaluating and transitioning between ALM tools, which aligns with pragmatic thinking in Agile and DevOps contexts. It addresses real-world decision-making processes, such as assessing what functionality is lost or gained when changing tools, and highlights the importance of understanding the broader implications of such changes. However, while it touches on these themes, the depth of discussion on specific pragmatic strategies or case studies is limited, leading to a high but not perfect confidence score.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses ALM tools and their features without focusing on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses tools related to Application Lifecycle Management and comparisons between them, without focusing on measuring or enhancing innovation capabilities or strategies to foster a culture of innovation.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses Visual Studio ALM and its functionalities, with little to no direct focus on Scrum principles or product development processes specific to Scrum.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and their comparison, with no clear focus on scaling Agile practices across multiple teams or at the enterprise level.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the technical aspects of Application Lifecycle Management (ALM) and tool comparisons, with no focus on employee engagement or related psychological and social aspects.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on evaluating ALM tools and their functionalities rather than discussing Lean principles, waste minimization, or efficiency improvements.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "While the content discusses various aspects of Application Lifecycle Management (ALM), including quality management and testing, it does not primarily focus on test automation. The discussion covers a broad range of ALM functionalities rather than specifically on automating the testing processes.",
    "level": "Quaternary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about Application Lifecycle Management (ALM) tools, comparing Visual Studio ALM with other tools, and does not discuss entrepreneurship principles, innovation, or risk-taking.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) tools, including aspects related to software functionality, build management, and quality management. However, it primarily focuses on tool evaluation rather than the direct delivery of working software.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses Agile planning tools as part of a broader discussion on Application Lifecycle Management, which includes managing requirements, projects, and tasks, but it is not the primary focus.",
    "level": "Tertiary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Visual Studio ALM and its components, including build management, which relates to Continuous Integration practices, but it primarily focuses on comparing ALM tools and their broader functionalities, rather than on CI as a central theme.",
    "level": "Tertiary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the features and considerations of Application Lifecycle Management (ALM) tools, specifically Visual Studio ALM, without a focus on market share or strategies related to increasing competitive advantage within a market segment.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on Application Lifecycle Management (ALM) tools and comparison among them, without addressing leadership roles or Agile practices.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on evaluating ALM tools and their functionalities, rather than interpreting complex situations or decision-making processes in an organizational context.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tooling and considerations for transitioning between different ALM systems, without focusing on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools and considerations for tool selection rather than hypothesis formulation or experimentation.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-03-11T11:48:41",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses decision-making in the context of evaluating ALM tools, specifically comparing Visual Studio ALM with alternatives like Git and Jenkins. It outlines key considerations for making informed choices, such as what functionalities are being replaced, what new features are gained, and what functionalities may be lost. However, while it touches on decision-making, the focus is more on tool comparison and personal experiences rather than structured, evidence-based methodologies. The depth of discussion on decision-making principles is limited, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and considerations for tool selection, without direct reference to Lean Principles, waste reduction, or value maximization.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-03-10T18:31:52",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses various aspects of Application Lifecycle Management (ALM), including release management as one of the key areas. While it does mention release management explicitly, the primary focus is on comparing tools and their functionalities rather than on the strategies and practices of managing software releases. The depth of discussion on release management is limited compared to other areas like requirements and project management, which detracts from its overall alignment with the category.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses tool selection for Application Lifecycle Management (ALM), focusing on comparisons between tools like Visual Studio ALM, Git, and Jenkins, without addressing the responsibilities or practices specific to the Product Owner role.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Application Lifecycle Management (ALM) tools and considerations for selecting tooling rather than focusing on Cycle Time metrics or related concepts.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content discusses Visual Studio ALM and its various features, but it primarily focuses on ALM as a whole without a specific emphasis on Azure Pipelines. While there are mentions of build and release management, they are not the central theme. The discussions related to Azure Pipelines are too brief and peripheral to classify this content under the Azure Pipelines category.",
    "level": "Quinary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on comparing ALM tools and discussing their functionalities, rather than specifically addressing deployment frequency or related Agile/DevOps practices.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses change in the context of replacing tools (Visual Studio ALM with Git and Jenkins) which touches on aspects of change management, such as understanding what is being replaced and what is lost, but it primarily focuses on tool comparison rather than broader change management strategies in organizations.",
    "level": "Tertiary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses Visual Studio ALM and its features, focusing on application lifecycle management and tool comparisons rather than team collaboration dynamics, communication, or Agile methodologies.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is primarily about Visual Studio ALM and related tools, without a focus on Behaviour Driven Development principles, practices, or collaboration aspects central to BDD.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the considerations and features of Application Lifecycle Management (ALM) tools, particularly Visual Studio ALM, in the context of organizational restructuring and tool replacement. While it touches on the implications of digital tools for operational efficiency and project management, it primarily centers around specific tools rather than broader digital transformation strategies or methodologies.",
    "level": "Tertiary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and considerations for transitioning between them, rather than focusing on Minimum Viable Products or related MVP concepts.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and comparisons, with no clear focus on AI applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and their comparison, not focusing on system configuration methodologies or practices.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the comparison of Application Lifecycle Management tools and does not focus on product strategy methodologies or frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the comparison and functionalities of Visual Studio ALM versus other tools, without a clear focus on technical leadership or guiding development teams.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses tool comparison and considerations for Application Lifecycle Management (ALM), with no clear focus on estimation practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the evaluation and comparison of various Application Lifecycle Management (ALM) tools, without a focus on cross-functional teams or Agile methodologies.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content focuses on discussing Application Lifecycle Management (ALM) tools and the process of evaluating and comparing tools like Visual Studio ALM, Git, and Jenkins. It does not primarily discuss Test First Development or its principles, practices, or benefits. Instead, it provides an overview of various elements related to ALM, making it not relevant to Test First Development.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "The content discusses Visual Studio ALM, which is tied to the Windows environment, but it focuses more on application lifecycle management and comparisons of toolsets rather than directly on Windows OS functionalities.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content discusses the tooling and considerations around Application Lifecycle Management (ALM) and software deployment but primarily focuses on comparison and functionality rather than specific deployment strategies.",
    "level": "Quaternary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) tools and their integration, which can be relevant to Agile practices in large organizations, but it mainly focuses on specific tool comparisons and does not delve deeply into large scale Agile frameworks or transformation strategies.",
    "level": "Tertiary"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on tool selection and technical details related to Application Lifecycle Management rather than strategies for enhancing team motivation or dynamics.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools and considerations for tool selection rather than addressing remote working practices, challenges, or strategies within Agile frameworks.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the considerations and comparisons of ALM tools rather than focusing on principles of Continuous Learning, growth mindset, or knowledge sharing within teams.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the differences between various ALM tools, their functionalities, and considerations for transitioning from one tool to another, rather than focusing on troubleshooting specific technical issues.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on the evaluation of ALM tools and their functionalities, rather than discussing experimentation or hypothesis-driven methodologies in Agile workflows.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on Application Lifecycle Management tooling and comparisons between specific tools, without any clear reference or discussion related to the Scrum Master role or responsibilities.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the evaluation and comparison of ALM tools rather than focusing on transparency within Agile processes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Visual Studio ALM and its comparison with other tools, without addressing working agreements, team communication or collaboration norms.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools and their implications for software development, touching on related methodologies and practices that are relevant to developers. However, it does not focus explicitly or primarily on Agile or DevOps principles, making it a major but secondary theme.",
    "level": "Tertiary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on comparing ALM tools and discussing their functionalities, without any emphasis on coaching principles or practices.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses various aspects of Application Lifecycle Management (ALM) and touches on automation, code management, and quality management, which are relevant to engineering practices. However, it is primarily focused on comparing tools and lacks deep engagement with core engineering practices principles.",
    "level": "Tertiary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the comparison of Application Lifecycle Management tools and does not focus on the concept of technical debt or its management.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on Visual Studio ALM and its comparison to other tools, with no discussion on Sprint Review or Scrum framework.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-10T12:36:54",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) tools and their functionalities, which are relevant to product management. However, it primarily focuses on technical comparisons and implementation details rather than strategic alignment of customer needs and business objectives. While it touches on aspects like requirements management and project management, it lacks a deep exploration of methodologies or frameworks that guide product managers in making informed decisions. Therefore, the confidence score reflects a moderate alignment with the category.",
    "level": "Quaternary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses tooling and decision-making around Application Lifecycle Management (ALM) without a central focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 20,
    "non_ai_confidence": 10,
    "final_score": 19.0,
    "reasoning": "While there are mentions of agile planning tools and some principles related to Agile concepts in the context of Application Lifecycle Management (ALM), the primary focus of the content is on comparing tooling options and discussing the functionalities of Visual Studio ALM versus Git and Jenkins, rather than a focused discussion on Agile frameworks themselves.",
    "level": "Quinary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the considerations and strategic implications of selecting application lifecycle management (ALM) tools, which touches on Agile planning and project management, key elements in an Agile strategy. However, the primary focus is on tool comparison rather than a broader discussion of Agile strategy itself.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Visual Studio ALM and its various capabilities, with limited direct focus on Azure Repos or relevant source control features specific to Azure Repos.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and their comparative benefits, with no clear focus on forecasting methods or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on Application Lifecycle Management tooling and the comparison of Visual Studio ALM with other tools like Git and Jenkins, rather than discussing Lean Product Development principles, waste reduction, or continuous improvement.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the comparison and evaluation of different Application Lifecycle Management tools rather than analyzing trends in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the evaluation and comparison of Application Lifecycle Management tools, rather than discussing accountability or team dynamics within Agile methodologies.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on comparing ALM tools and evaluating features rather than discussing Kanban principles or scaling practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools, their functionalities, and comparative analysis, without a specific focus on measuring or optimizing throughput in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-15T08:56:47",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM), tools evaluation, and the comparison between Visual Studio ALM, Git, and Jenkins. It does not focus on Test Driven Development or its principles, practices, or any specific TDD cycles.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily focuses on Application Lifecycle Management (ALM) tools and their functionalities, rather than discussing Agile Product Management methodologies or practices.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content extensively discusses the practical considerations and comparative analysis of various Application Lifecycle Management (ALM) tools, specifically focusing on Visual Studio ALM and its features, while addressing potential replacements like Git and Jenkins. It provides insights into different tools and areas of ALM, making it a practical exploration of tooling and methodologies.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) tools and specifically mentions Visual Studio ALM, which has aspects overlapping with the concept of Platform Engineering in terms of providing integrated platform solutions for development. However, the primary focus is on comparing various ALM tools, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses application lifecycle management (ALM) tools and their functionalities rather than Evidence-Based Management principles or practices. The focus is on comparing tool features and management rather than applying empirical evidence to enhance decision-making.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 29.0,
    "reasoning": "The content discusses tools for Application Lifecycle Management (ALM) with an emphasis on their capabilities and comparisons, but it lacks a central focus on code quality or software complexity principles. It primarily addresses project management and tool selection rather than the deeper aspects of code and complexity theory.",
    "level": "Quaternary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content primarily discusses the features and considerations of Application Lifecycle Management (ALM) tools, focusing on the evaluation of different tools and their capabilities. It emphasizes the importance of understanding what features are being replaced, gained, and lost, which touches on the learning process involved in tool selection and integration. However, the main focus is more on technical comparisons rather than the processes of discovery and learning in innovation and product development.",
    "level": "Tertiary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the advantages and considerations of using Visual Studio ALM and evaluating various tools for Application Lifecycle Management. It does not focus on AI or automation in the context of Agile methodologies.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on evaluating and comparing Application Lifecycle Management (ALM) tools, with no discussion of Lean principles, waste reduction, or continuous improvement methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the comparison of ALM tools and strategic considerations in choosing and evaluating them, rather than providing specific installation or configuration guidance.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the comparison of ALM tools, specifically Visual Studio ALM versus Git and Jenkins, without addressing transparency or accountability within Agile teams.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the evaluation of ALM tools and their adaptability to organizational needs, but it primarily focuses on comparisons of tools rather than direct strategies or methodologies for market adaptability.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of considering organizational workflow, tool support, and the integration of various Application Lifecycle Management (ALM) functions, which touches on the interplay between technology and organizational structures. However, it primarily focuses on specific tools and technical comparisons rather than deeply exploring sociotechnical principles.",
    "level": "Tertiary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "While the content primarily focuses on Application Lifecycle Management (ALM) tools and considerations for changing tooling, it touches on aspects of change management, particularly in the context of organizational reorganization and the strategic implications of tool replacement. However, the main emphasis is on ALM specifics rather than a comprehensive discussion on resilience or organizational change.",
    "level": "Tertiary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-10T14:41:38",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) and the comparison of tools like Visual Studio ALM, Git, and Jenkins. While it touches on aspects relevant to DevOps, such as build management and release management, the primary focus is on tool comparison and project management rather than the broader principles and practices of DevOps. The discussion lacks depth in DevOps-specific practices like Continuous Integration and Continuous Delivery, and does not address cultural shifts or collaboration between teams, which are key elements of the DevOps category.",
    "level": "Tertiary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Visual Studio ALM and its comparison to other tools, focusing on specific functionalities and decision-making related to ALM tools, rather than general or anecdotal discussions unrelated to established Agile or DevOps frameworks.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses decision-making processes related to choosing application lifecycle management tools, presenting considerations for making informed comparisons and evaluations. While it primarily focuses on tools and methodology, the theme of decision-making in uncertain contexts regarding tooling options and their implications is a significant aspect.",
    "level": "Tertiary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses Visual Studio ALM and its functionalities without focusing on specific events, presentations, or workshops related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the considerations and functionalities of Application Lifecycle Management tools, without a focus on optimizing throughput or addressing flow efficiency principles.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses considerations and strategic planning related to Application Lifecycle Management (ALM) tools, which involves aspects of project management, change management, and team collaboration. However, it primarily focuses on tool comparisons rather than a strong emphasis on human factors and team dynamics.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses organizational considerations in transitioning to different ALM tools, which relates to adapting practices at an enterprise level. However, the primary focus is on specific tools and their functionalities rather than a broader strategy for enterprise agility.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on Application Lifecycle Management (ALM) tools and considerations for software development, with no direct discussion on business agility principles or practices.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses considerations for replacing ALM tools and mentions areas like analytics management and feedback management, which relate to metrics and learning processes. However, the primary focus is on tool comparison and features rather than on learning from metrics or implementing a continuous improvement cycle.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses Application Lifecycle Management (ALM) tools and comparisons between Visual Studio ALM and other tools like Git and Jenkins, with no mention of Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the functionalities and comparisons of various Application Lifecycle Management tools, which relates to engineering practices and methodologies in software development. However, the focus on Visual Studio ALM and specific comparisons may detract from a broader discussion about technical excellence as it primarily serves as a means of evaluating tools rather than a focus on improving engineering practices.",
    "level": "Tertiary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and decision-making regarding their use, without focusing on complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on application lifecycle management tools and comparisons, with little to no emphasis on psychological principles or theories related to motivation, leadership, or team dynamics.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-11T17:55:48",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 35,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content extensively discusses Application Lifecycle Management (ALM) tools, particularly Visual Studio ALM, and their role in the product delivery process. It covers key aspects such as requirements management, project management, change management, and release management, which are all integral to delivering software products effectively. The depth of discussion on these topics indicates a strong alignment with the principles of product delivery, making it a primary focus rather than a secondary mention.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the evaluation and comparison of Application Lifecycle Management (ALM) tools, specifically Visual Studio ALM, without focusing on decentralised or human-centric organisational design principles related to Beta Codex.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tooling and considerations for choosing and replacing these tools, rather than focusing on value stream management principles or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-03-11T14:53:51",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content primarily discusses Visual Studio ALM as a product, comparing it with other tools like Git and Jenkins. It provides a detailed analysis of the functionalities of ALM tools, which aligns well with the category's focus on discussions about products relevant to Agile and DevOps. The depth of discussion is significant, covering various aspects of ALM, including requirements management, project management, and more, which supports the category's intent. However, while the content is rich in product analysis, it lacks direct references to specific literature or books, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "Content discusses Application Lifecycle Management (ALM) tools and their functionalities, but primarily focuses on tool comparison and decision-making rather than directly on value delivery strategies in Agile or DevOps.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-11T16:43:48",
    "ai_confidence": 72.0,
    "ai_mentions": 80.0,
    "ai_alignment": 65.0,
    "ai_depth": 75.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses Visual Studio ALM, which is closely related to Azure DevOps, particularly in the context of Application Lifecycle Management (ALM). It provides a detailed comparison of Visual Studio ALM with other tools like Git and Jenkins, highlighting the functionalities and features of Visual Studio ALM that align with Azure DevOps services. However, while it touches on relevant topics, it does not explicitly focus on Azure DevOps itself, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content predominantly discusses Visual Studio ALM and its comparison with other tools, rather than personal experiences with Agile methodologies. There's a minor reference to the author's experiences and perspectives, but it's not the central theme.",
    "level": "Quinary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools, their features, and considerations for replacing or integrating them, rather than exploring Systems Thinking principles or their applications in organizational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 29.0,
    "reasoning": "The content discusses Application Lifecycle Management (ALM) tools and practices extensively, but does not specifically address the integration and standardization principles of One Engineering System (1ES).",
    "level": "Quaternary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "Content discusses Application Lifecycle Management (ALM) tools and their features, but does not focus on Agile principles, value delivery, or product-centric approaches.",
    "level": "Quaternary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools, specifically Visual Studio ALM, and compares various features and functionalities of these tools. While there are aspects of project and change management mentioned, the content does not focus on principles, practices, or frameworks related to organisational agility as expressly defined in the category. Hence, it is not relevant enough.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-17T09:08:45",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses considerations and evaluations regarding the use of Visual Studio ALM versus other tools like Git and Jenkins, providing insights that can guide practitioners in decision-making processes. However, it primarily centers around a personal analysis of tooling rather than industry news or broader reviews.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-15T09:56:44",
    "ai_confidence": 95,
    "non_ai_confidence": 30,
    "final_score": 88.0,
    "reasoning": "The content primarily discusses the features, benefits, and considerations of using Visual Studio ALM within the context of Application Lifecycle Management. It extensively covers various aspects of ALM, including requirements management, project management, change management, and other critical components of the application lifecycle, making it a clear, central topic.",
    "level": "Primary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T16:10:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the comparison and evaluation of ALM tools, focusing on technical aspects rather than leadership practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-17T16:10:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the comparison and considerations of Application Lifecycle Management (ALM) tools, specifically Visual Studio ALM, Git, and Jenkins, rather than focusing on Scrum, Kanban, Lean, or Agile practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:11:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and their functionalities, rather than focusing on Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:11:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Application Lifecycle Management (ALM) tools and their functionalities, with no clear focus on Artificial Intelligence or its integration within Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T11:35:12",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 5.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses Application Lifecycle Management (ALM) tools, specifically Visual Studio ALM, and does not focus on Scrum principles, roles, events, or artifacts. While it touches on project management and agile planning, it lacks a direct connection to Scrum's framework and practices, leading to a low confidence score.",
    "level": "Quinary"
  }
}
