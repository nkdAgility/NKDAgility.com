post:
  title: Creating a managed service factory
  link: https://nkdagility.com/blog/creating-a-managed-service-factory/
  pubDate: Tue, 19 Jun 2007 20:28:07 +0000
  creator: MrHinsh
  guid:
    _: >-
      http://geekswithblogs.net/hinshelm/archive/2007/06/19/creating-a-managed-service-factory.aspx
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "I had a plan. I wanted to create a way of accessing services in multiple locations from any location. Each location could have one or more services which may be duplications or different. That is a really abstract way of thing about it, but I eventually came up with a solution.\n\nAfter using Reflector to view the Team Foundation Server source code, which gave ma many pointers for which I would like to thank the <a title=\"Team Foundation Server\" href=\"http://msdn2.microsoft.com/en-us/teamsystem/aa718934.aspx\" target=\"_blank\">TFS</a> Team At Microsoft, I came up with the following solution:\n\n<a href=\"http://blog.hinshelwood.com/files/2011/06/GWB-WindowsLiveWriter-Creatingaservicemanager_8C3D-image_5.png\"><img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/06/GWB-WindowsLiveWriter-Creatingaservicemanager_8C3D-image_thumb_4.png\" border=\"0\" alt=\"image\" width=\"595\" height=\"739\" /></a>\n\nThis allows you to host any number of services, regardless of wither they are remote or local within a \"Server\" construct and to access that server easily. Remote and local services can exist side by side in the same server, for example you could have an ActiveDirectoryClientService hosted in a ClientServer\n\nFrom the server level (IClientServer) you can request a service based on its type or on an interface that it implements. To achieve this the IClientService interface has a property called contracts that loops through all of the interfaces that the client service object implements and pulls out only those interfaces that have the ClientServiceContractAttribute added to them. Thus you need to make sure that all of your interfaces (e.g. ITeamServer) have that attribute regardless of wither it also has a ClientServiceContractAttribute.\n\nFrom the factory level you can again\_request either services by type or by implementation, but this request is cross server. If you have two servers added to the factory and they both implement different contracts, you can pull any one back you like, if both servers have the same implementation you can choose wither you bring back the first or a random implementation. The potential for a load balancing solution is there but not implemented.\n\nBelow is a diagram of my TFSEventHandlerServer that included's both local and remote services.\_For ease of development and because it is a common thing to do I created the WcfClientServiceBase class that provides a number of features that allow less code to be written in the individual service client classes.\n\n<a href=\"http://blog.hinshelwood.com/files/2011/06/GWB-WindowsLiveWriter-Creatingaservicemanager_8C3D-image_6.png\"><img style=\"border-width: 0px;\" src=\"http://blog.hinshelwood.com/files/2011/06/GWB-WindowsLiveWriter-Creatingaservicemanager_8C3D-image_thumb_5.png\" border=\"0\" alt=\"image\" width=\"691\" height=\"976\" /></a>\n\nIn this example you can call any of the ClientServices with the same code:\n\nGet the server with a call:\n<pre class=\"code\"><span style=\"color: #0000ff;\">Dim</span> Server <span style=\"color: #0000ff;\">As</span> Servers.TFSEventHandlerServer\nServer = Servers.ClientServerFactory.GetServer(<span style=\"color: #0000ff;\">Of</span> Servers.TFSEventHandlerServer)(<span style=\"color: #0000ff;\">New</span> System.Uri(<span style=\"color: #a31515;\"><a href=\"http://server:6873/\">http://server:6873</a></span>))</pre>\nAnd get client services with the Subscriptions being a local service and TeamServers is a remote one.\n<pre class=\"code\"><span style=\"color: #0000ff;\">Dim</span> Subscriptions <span style=\"color: #0000ff;\">As</span> Clients.SubscriptionsService\nSubscriptions = Server.GetService(<span style=\"color: #0000ff;\">Of</span> Clients.SubscriptionsService)()\n<span style=\"color: #0000ff;\">Dim</span> TeamServers <span style=\"color: #0000ff;\">As</span> Clients.TeamServersService\nTeamServers = Server.GetService(<span style=\"color: #0000ff;\">Of</span> Clients.TeamServersService)()</pre>\n&nbsp;\n\n&nbsp;\n\nAs I hope\_you can see this makes it easier to implement many features with an enterprise enviroment. All you have to know is what services are available where. There is also the possibility that a lookup service could be implemented that would allow the Factory to bring you services when you do not even know here they are!\n\nI hope this helps those trying to find a way to achieve the same goals without being too restrictive. You can download the code from my <a title=\"CodePlex\" href=\"http://www.codeplex.com\" target=\"_blank\">CodePlex</a> <a rel=\"tag\" href=\"http://www.codeplex.com/TFSEventHandler\" target=\"_blank\">TFS Event Handler</a> project.\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;"
  - ''
  post_id: '377'
  post_date: '2007-06-19 06:28:07'
  post_date_gmt: '2007-06-19 20:28:07'
  post_modified: '2007-06-19 06:28:07'
  post_modified_gmt: '2007-06-19 20:28:07'
  comment_status: open
  ping_status: open
  post_name: creating-a-managed-service-factory
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: dsq_thread_id
    meta_value: '323129228'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: robotsmeta
    meta_value: index,follow
  - meta_key: _flattr_post_language
    meta_value: ''
  - meta_key: _flattr_post_category
    meta_value: ''
  - meta_key: _flattr_post_hidden
    meta_value: ''
  - meta_key: _flattr_btn_disabled
    meta_value: ''
  - meta_key: _thumbnail_id
    meta_value: '4853'
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/HNECJZ
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474900188;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:381;}i:1;a:1:{s:2:"id";i:9229;}i:2;a:1:{s:2:"id";i:3487;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2007-06-19-creating-a-managed-service-factory.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1
  - meta_key: ekit_post_views_count
    meta_value: '267'
