post:
  title: Creating a custom Activity for Team Foundation Build
  link: >-
    https://nkdagility.com/blog/creating-a-custom-activity-for-team-foundation-build/
  pubDate: Mon, 22 Jul 2013 08:56:00 +0000
  creator: MrHinsh
  guid:
    _: http://nakedalmweb.wpengine.com/?p=9769
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - >-
    <p class="lead">You can be creating a custom activity for Team Foundation
    Build in a few simple steps. There are always advanced steps but this will
    get you started.</p>

    <p>It is fairly simple to create a custom activity for Team Foundation
    Server build services. The first thing to do is to create a Class
    library&nbsp; and add a reference to “System.Activities.CodeActivity.dll”
    you will be all set to start creating any build activities that you need.
    This class library can contain as many activities as you would like to
    create.</p>

    <p><img title="image" style="border-left-width: 0px; border-right-width:
    0px; background-image: none; border-bottom-width: 0px; padding-top: 0px;
    padding-left: 0px; margin: 0px; display: inline; padding-right: 0px;
    border-top-width: 0px" border="0" alt="image"
    src="https://nkdagility.com/files/2013/07/image20.png" width="800"
    height="500"/><br /><small>Figure: Creating the Activity</small></p>

    <p>In this example I am creating a custom activity called
    “NotForProductionActivity” so we need to create a class of the same name.
    This class should inherit from “CodeActivity” and override the execute
    method. ultimately you now have a custom activity for Team Build. There are
    a couple of extra bits like having an assembly attribute called
    “BuildActivity” that will allow you to specify for Team Foundation Build
    where this activity is allowed to run. You can use this to force the
    activity to only run on the agent if you are doing something in code that
    requires that context. As for the execute method; you can do whatever you
    can imagine in there.</p>

    <p><img title="image" style="border-left-width: 0px; border-right-width:
    0px; background-image: none; border-bottom-width: 0px; padding-top: 0px;
    padding-left: 0px; margin: 0px; display: inline; padding-right: 0px;
    border-top-width: 0px" border="0" alt="image"
    src="https://nkdagility.com/files/2013/07/image21.png" width="800"
    height="500"/><br /><small>Figure: Design your workflow</small></p>

    <p>Now that we have our custom attribute we need to be able to add it to a
    workflow. It is a little weird to do this and to avoid having to GAC and
    update your assembly on every build you can create an additional class
    library, I usually call it CustomXaml, to which we add ‘links’ to the xaml
    files that we want to customise. This will allow you to drag from the
    toolbar on the left to the Workflow design surface.</p>

    <p><img title="image" style="border-left-width: 0px; border-right-width:
    0px; background-image: none; border-bottom-width: 0px; padding-top: 0px;
    padding-left: 0px; margin: 0px; display: inline; padding-right: 0px;
    border-top-width: 0px" border="0" alt="image"
    src="https://nkdagility.com/files/2013/07/image22.png" width="800"
    height="500"/><br /><small>Figure:Configure your activity</small></p>

    <p>At the bottom of the Workflow design surface you will see an “Arguments”
    button that will pop up with a list of scoped “Arguments” that you can use
    anywhere in your workflow. You can add you own and map the name back to a
    property that you add to your custom activities. You may want to use the
    same argument for multiple activities or pass something in from the
    outside.</p>

    <p><img title="image" style="border-left-width: 0px; border-right-width:
    0px; background-image: none; border-bottom-width: 0px; padding-top: 0px;
    padding-left: 0px; display: inline; padding-right: 0px; border-top-width:
    0px" border="0" alt="image"
    src="https://nkdagility.com/files/2013/07/image23.png" width="800"
    height="500"/><br /><small>Figure: Passing in arguments</small></p>

    <p>Team Foundation Build allows you to present options to the person that is
    configuring the build or the person that is queuing the build for execution.
    This allows you to minimise the number of custom builds that you need and
    thus minimise your maintainance of them.&nbsp; To pass in arguments from the
    outside you need to add the argument that you created to the Metadata
    argument that already exists. This is the thing that tells the UI how to
    present options to the users.</p>

    <p><img title="image" style="border-left-width: 0px; border-right-width:
    0px; background-image: none; border-bottom-width: 0px; padding-top: 0px;
    padding-left: 0px; margin: 0px; display: inline; padding-right: 0px;
    border-top-width: 0px" border="0" alt="image"
    src="https://nkdagility.com/files/2013/07/image24.png" width="800"
    height="500"/><br /><small>Figure: Runtime setting of arguments</small></p>

    <p>If you set the visibility of the parameter to allow it to be shown on the
    Queue a Build form then it can be edited at queue time. Otherwise it can
    only be edited at build configuration time.</p>

    <h2>Conclusion</h2>

    <p>While there are many complex things that we could go into this is a
    simple example of how to organise your development environment to make it
    easy to build and test custom build activities for your build workflows.</p>
  - >-
    <p class="lead">You can be creating a custom activity for Team Foundation
    Build in a few simple steps. There are always advanced steps but this will
    get you started.</p>
  post_id: '9769'
  post_date: '2013-07-22 09:56:00'
  post_date_gmt: '2013-07-22 08:56:00'
  post_modified: '2013-07-22 09:56:00'
  post_modified_gmt: '2013-07-22 08:56:00'
  comment_status: open
  ping_status: open
  post_name: creating-a-custom-activity-for-team-foundation-build
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _yoast_wpseo_linkdex
    meta_value: '84'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: wp-to-buffer
    meta_value: a:1:{s:7:"publish";s:1:"1";}
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _yoast_wpseo_focuskw
    meta_value: custom activity
  - meta_key: _yoast_wpseo_title
    meta_value: Creating a custom Activity for Team Foundation Build
  - meta_key: _yoast_wpseo_metadesc
    meta_value: >-
      You can be creating a custom activity for Team Foundation Build in a few
      simple steps. There are always advanced steps but this will get you
      started.
  - meta_key: _syn_slave_post_states
    meta_value: a:0:{}
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: wp-to-buffer-log
    meta_value: >-
      O:8:"stdClass":5:{s:7:"updates";a:3:{i:0;O:8:"stdClass":18:{s:3:"_id";s:24:"51ecf3af0e2a18a50d00003f";s:9:"client_id";s:24:"50f71563f758fa8f40000001";s:10:"created_at";i:1374483375;s:3:"day";s:16:"Monday
      29th July";s:6:"due_at";i:1375138020;s:8:"due_time";s:7:"5:47
      pm";s:2:"id";s:24:"51ecf3af0e2a18a50d00003f";s:10:"profile_id";s:24:"507a4e20d9320dd125000018";s:15:"profile_service";s:7:"twitter";s:10:"shared_now";b:0;s:6:"status";s:6:"buffer";s:4:"text";s:92:"New
      Post: Creating a custom Activity for Team Foundation Build
      http://buff.ly/15ZyOCF #vsalm";s:14:"text_formatted";s:307:"New Post:
      Creating a custom Activity for Team Foundation Build <a class="url"
      href="http://buff.ly/15ZyOCF" rel="external nofollow"
      target="_blank">http://buff.ly/15ZyOCF</a> <a
      href="https://twitter.com/#!/search?q=%23vsalm" title="#vsalm"
      class="hashtag" rel="external nofollow"
      target="_blank">#vsalm</a>";s:8:"text_md5";s:32:"0a70152b7981af2a41dfe395d0961258";s:4:"type";s:4:"link";s:10:"updated_at";i:1374483375;s:7:"user_id";s:24:"507a4e20d9320dd125000017";s:3:"via";s:3:"api";}i:1;O:8:"stdClass":19:{s:3:"_id";s:24:"51ecf3af0e2a18a50d000040";s:9:"client_id";s:24:"50f71563f758fa8f40000001";s:10:"created_at";i:1374483375;s:3:"day";s:18:"Thursday
      25th July";s:6:"due_at";i:1374771960;s:8:"due_time";s:7:"6:06
      pm";s:2:"id";s:24:"51ecf3af0e2a18a50d000040";s:5:"media";O:8:"stdClass":5:{s:8:"original";s:75:"http://nkdagility.com/creating-a-custom-activity-for-team-foundation-build/";s:11:"description";s:149:"You
      can be creating a custom activity for Team Foundation Build in a few
      simple steps. There are always advanced steps but this will get you
      started.";s:5:"title";s:52:"Creating a custom Activity for Team Foundation
      Build";s:4:"link";s:75:"http://nkdagility.com/creating-a-custom-activity-for-team-foundation-build/";s:7:"preview";s:104:"http://i2.wp.com/nakedalmweb.wpengine.com/files/2012/02/metro-visualstudio-128-link.png?resize=128%2C128";}s:10:"profile_id";s:24:"5088ae7ed9320d615a00000a";s:15:"profile_service";s:8:"facebook";s:10:"shared_now";b:0;s:6:"status";s:6:"buffer";s:4:"text";s:92:"New
      Post: Creating a custom Activity for Team Foundation Build
      http://buff.ly/15ZyOCJ #vsalm";s:14:"text_formatted";s:307:"New Post:
      Creating a custom Activity for Team Foundation Build <a class="url"
      href="http://buff.ly/15ZyOCJ" rel="external nofollow"
      target="_blank">http://buff.ly/15ZyOCJ</a> <a
      href="https://twitter.com/#!/search?q=%23vsalm" title="#vsalm"
      class="hashtag" rel="external nofollow"
      target="_blank">#vsalm</a>";s:8:"text_md5";s:32:"0a70152b7981af2a41dfe395d0961258";s:4:"type";s:4:"link";s:10:"updated_at";i:1374483375;s:7:"user_id";s:24:"507a4e20d9320dd125000017";s:3:"via";s:3:"api";}i:2;O:8:"stdClass":19:{s:3:"_id";s:24:"51ecf3af0e2a18a50d000041";s:9:"client_id";s:24:"50f71563f758fa8f40000001";s:10:"created_at";i:1374483375;s:3:"day";s:19:"Thursday
      8th August";s:6:"due_at";i:1375972620;s:8:"due_time";s:7:"9:37
      am";s:2:"id";s:24:"51ecf3af0e2a18a50d000041";s:5:"media";O:8:"stdClass":5:{s:8:"original";s:75:"http://nkdagility.com/creating-a-custom-activity-for-team-foundation-build/";s:11:"description";s:149:"You
      can be creating a custom activity for Team Foundation Build in a few
      simple steps. There are always advanced steps but this will get you
      started.";s:5:"title";s:52:"Creating a custom Activity for Team Foundation
      Build";s:4:"link";s:75:"http://nkdagility.com/creating-a-custom-activity-for-team-foundation-build/";s:7:"preview";s:104:"http://i2.wp.com/nakedalmweb.wpengine.com/files/2012/02/metro-visualstudio-128-link.png?resize=128%2C128";}s:10:"profile_id";s:24:"5088ae96d9320d3a5a00000a";s:15:"profile_service";s:8:"linkedin";s:10:"shared_now";b:0;s:6:"status";s:6:"buffer";s:4:"text";s:92:"New
      Post: Creating a custom Activity for Team Foundation Build
      http://buff.ly/15ZyR1g #vsalm";s:14:"text_formatted";s:307:"New Post:
      Creating a custom Activity for Team Foundation Build <a class="url"
      href="http://buff.ly/15ZyR1g" rel="external nofollow"
      target="_blank">http://buff.ly/15ZyR1g</a> <a
      href="https://twitter.com/#!/search?q=%23vsalm" title="#vsalm"
      class="hashtag" rel="external nofollow"
      target="_blank">#vsalm</a>";s:8:"text_md5";s:32:"0a70152b7981af2a41dfe395d0961258";s:4:"type";s:4:"link";s:10:"updated_at";i:1374483375;s:7:"user_id";s:24:"507a4e20d9320dd125000017";s:3:"via";s:3:"api";}}s:17:"buffer_percentage";d:8.5;s:12:"buffer_count";i:17;s:7:"success";b:1;s:7:"message";s:48:"One
      more post in your Buffer. Keep it topped up!";}
  - meta_key: dsq_thread_id
    meta_value: '1519361517'
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1aBQoTC
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474670389;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:9359;}i:1;a:1:{s:2:"id";i:9468;}i:2;a:1:{s:2:"id";i:6202;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2013-07-22-creating-a-custom-activity-for-team-foundation-build.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '1995'
  comment:
  - comment_id: '1783'
    comment_author: Ralph Jansen
    comment_author_email: ralph.jansen@outlook.com
    comment_author_url: ''
    comment_author_IP: 80.254.148.83
    comment_date: '2013-08-08 05:52:00'
    comment_date_gmt: '2013-08-08 05:52:00'
    comment_content: >-
      Hi. I like your post. Do you also have a way to debug your custom
      activity? Because how I understand it you have to build your custom
      activites. The build controller is going offline and will go online again
      when al your agents are finished and then you can test your activity. But
      how to find the error in your custom activity. Thanks
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '992557402'
  - comment_id: '1784'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 68.185.1.174
    comment_date: '2013-08-08 05:55:00'
    comment_date_gmt: '2013-08-08 05:55:00'
    comment_content: >-
      No doubt its a pain. If you download the TFS Community Build Extensions
      you will see the Unit Test format that they are using. Unit Tests are the
      best way...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1783'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '992557402'
    - meta_key: dsq_post_id
      meta_value: '992558649'
  - comment_id: '1785'
    comment_author: Ralph Jansen
    comment_author_email: ralph.jansen@outlook.com
    comment_author_url: ''
    comment_author_IP: 80.254.148.83
    comment_date: '2013-08-08 06:39:00'
    comment_date_gmt: '2013-08-08 06:39:00'
    comment_content: >-
      Oke. Thanks. I will look into that. Do you have a blog post where all the
      extension are mentioned? I'm searching for extensions that are some what
      supported by Microsoft but are not (yet) in the TFS release. In that way
      your almost sure that I will work when there is an update for TFS.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1784'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '992558649'
    - meta_key: dsq_post_id
      meta_value: '992576528'
  - comment_id: '1792'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 207.109.68.2
    comment_date: '2013-08-08 16:23:00'
    comment_date_gmt: '2013-08-08 16:23:00'
    comment_content: >-
      Use: http://tfsbuildextensions.codeplex.com/



      They are not supported by MS but there are MS employees and ALM Rangers on
      the team... and me :)
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1785'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '992576528'
    - meta_key: dsq_post_id
      meta_value: '993295850'
  - comment_id: '2273'
    comment_author: Sprydon | Custom activity to tag sources in git from TFS
    comment_author_email: ''
    comment_author_url: >-
      http://sprydon.com/post/2014/05/28/Custom-activity-to-tag-sources-in-git-from-TFS
    comment_author_IP: 137.135.131.146
    comment_date: '2014-05-28 21:35:16'
    comment_date_gmt: '2014-05-28 20:35:16'
    comment_content: >-
      [&#8230;] step was to build a custom activity that I could add to a build
      template - Martin Hinshelwood has a great blog post that helped me to get
      started with the custom activity and again referring to the source of
      [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1401309316.087518;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1401309869.559474;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
