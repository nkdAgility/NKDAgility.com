post:
  title: Syncing many Dynamics AX instances to a single TFS 2010 Team Project
  link: >-
    https://nkdagility.com/blog/syncing-many-dynamics-ax-instances-to-a-single-tfs-2010-team-project/
  pubDate: Fri, 08 Oct 2010 16:20:46 +0000
  creator: MrHinsh
  guid:
    _: >-
      http://geekswithblogs.net/hinshelm/archive/2010/10/08/syncing-many-dynamics-ax-instances-to-a-single-tfs-2010.aspx
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - >-
    <p><img style="margin: 0px 5px 5px 0px;float: left" align="left"
    src="http://noshitsoft.com/App_Images/c51bf204-d93f-4485-9873-88fd0e8f4659.png"
    />I have been working with a customer who had been frustrated with the need
    to have new Team Project for every instance of AX that they use. In fact
    with 3 instances per customer and lots of customers it can very quickly get
    complicated and I wanted to see if there was a solution for them.    <br
    />    </p><hr />  <p>There is a White Paper for configuring AX 2009 to
    connect to TFS 2008 which will allow you to get all of the basics right. I
    suggest you follow that first.</p>  <p><a
    href="http://www.microsoft.com/downloads/en/details.aspx?FamilyId=EFC24EDC-522E-40AA-8F36-6367ED7AB92D&amp;displaylang=en">Microsoft
    Dynamics AX 2009 White Paper: Team Foundation Server Version Control
    Setup</a> </p>  <p>AX 2009 uses the Team Explorer 2008 API to connect to
    TFS. You can’t just get it to use the 2010 API, but there is a big push to
    make this sort of interaction version independent in future versions.
    However for now, you need to use Team Explorer 2008.</p>  <p>On your AX
    server you will need to install the following components:</p>  <ol>   <li><a
    href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=0ed12659-3d41-4420-bbb0-a46e51bfca86&amp;displaylang=en">Visual
    Studio Team System 2008 Team Explorer</a></li>    <li><a
    href="http://www.microsoft.com/downloads/en/details.aspx?FamilyId=FBEE1648-7106-44A7-9649-6D9F6D58056E&amp;displaylang=en">Microsoft
    Visual Studio 2008 Service Pack 1</a></li>    <li><a
    href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=cf13ea45-d17b-4edc-8e6c-6c5b208ec54d&amp;displaylang=en">Visual
    Studio Team System 2008 Service Pack 1 Forward Compatibility Update for Team
    Foundation Server 2010</a></li> </ol>  <p>Once you have these products
    installed you can quite happily store the source code for AX Dynamics in TFS
    2010 by linking between an AX instance and a Team Project.</p>  <p><img
    style="border-bottom: 0px;border-left: 0px;margin: 0px 20px;padding-left:
    0px;padding-right: 0px;border-top: 0px;border-right: 0px;padding-top: 0px"
    border="0" alt="image"
    src="http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-849aa7d71ae4_C9AF-image_f2d2963f-2cb0-4460-980d-41a30d46cc82.png"
    width="499" height="302" />    <br /><strong>Figure: Select the TFS server
    and the local workspace path that is bound to you TFS Team
    Project</strong></p>  <p><img style="border-bottom: 0px;border-left:
    0px;margin: 0px 20px;padding-left: 0px;padding-right: 0px;border-top:
    0px;border-right: 0px;padding-top: 0px" border="0" alt="image"
    src="http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-849aa7d71ae4_C9AF-image_ab615770-284e-426e-b2c0-72d9d451c435.png"
    width="499" height="300" />    <br /><strong>Figure: Set the Server name and
    the Team Project name</strong></p>  <p>This gets you started, but if you are
    a consultancy that has many clients and you have the usual Development,
    Testing and Production instances of AX for each client you can see how this
    could quickly become difficult to manage on TFS. If you had 10 clients this
    would leave you with 30 team projects all linked to different instances of
    TFS with separate work item queues.</p>  <p>The first things you would need
    to have done is have a good naming strategy for your projects as you CAN NOT
    rename a team project. You can see how this could very quickly get
    messy…</p>  <p>One option to mitigate the work item problem would be to have
    a single team project for the work items for all of your project. You can
    categorise them using the “Area” tree and only have AX store the source in
    the individual Team Projects</p>  <p><img style="border-bottom:
    0px;border-left: 0px;margin: 0px 20px;padding-left: 0px;padding-right:
    0px;border-top: 0px;border-right: 0px;padding-top: 0px" border="0"
    alt="image"
    src="http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-849aa7d71ae4_C9AF-image_d63e1b29-ffe5-42e1-be99-103c52e4cac9.png"
    width="289" height="261" />    <br /><strong>Figure: Using Area to
    categorise your work items in a single Team Project</strong></p>  <p> This
    works pretty well, but still leaves you with 30 odd Team Projects to manage
    including your single work item repository project.</p>  <h2>Solution: Have
    all your AX code under a single Team Project</h2>  <p>There are actually a
    few ways to configure this, including the way described in the white
    paper:</p>  <ol>   <li>One Team Project per AX instance (As per the white
    paper)</li>    <li>One Team Project per Customer</li>    <li>One Team
    Project.</li> </ol>  <p>Options #2 and #3 are setup in the same way, so I am
    only going to discuss #3 as it conforms to me previous guidance on <a
    href="http://blog.hinshelwood.com/hinshelm/archive/2010/03/09/when-should-i-use-areas-in-tfs-instead-of-team.aspx">when
    should I use Areas in TFS instead of Team Projects in Team Foundation Server
    2010</a>.</p>  <p><img style="border-bottom: 0px;border-left: 0px;margin:
    0px 20px;padding-left: 0px;padding-right: 0px;border-top: 0px;border-right:
    0px;padding-top: 0px" border="0" alt="image"
    src="http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-849aa7d71ae4_C9AF-image_7eb211d0-f457-4d26-b65c-d20e96172ffd.png"
    width="409" height="469" />    <br /><strong>Figure: Ideally map to sub
    folders</strong></p>  <p>Laying out your source in this way allows you to
    have a single Team Project to manage while keeping each of your
    Products/Customers separate. it also means that you can easily merge
    features from a Feature branch into Main and from there create new Release
    branches that go to the customer.</p>  <p><img style="border-bottom:
    0px;border-left: 0px;margin: 0px 20px;padding-left: 0px;padding-right:
    0px;border-top: 0px;border-right: 0px;padding-top: 0px" border="0"
    alt="image"
    src="http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-849aa7d71ae4_C9AF-image_c176ecc6-09c6-4583-b339-0be65eb68d4f.png"
    width="371" height="258" />    <br /><strong>Figure: Main Branch hierarchy
    should be replicated for each customer</strong></p>  <p>Tip: If you are only
    ever going to have one Feature branch that you continue to work in then you
    could call it “Current” instead of a feature name.</p>  <p>Lets go back to
    one of the setting windows for AX 2009.</p> <img style="border-bottom:
    0px;border-left: 0px;margin: 0px 20px;padding-left: 0px;padding-right:
    0px;border-top: 0px;border-right: 0px;padding-top: 0px" border="0"
    alt="image"
    src="http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-849aa7d71ae4_C9AF-image_a7b91fcf-fa16-460a-ba39-9e437d4b3147.png"
    width="499" height="302" />  <br /><strong>Figure: The Repository folder
    links to a TFS Mapped folder locally</strong>  <p>AX saves a copy of the
    customisations in a fixed structure to the path specified in the “Repository
    folder” textbox. This folder is mapped to TFS and it syncs with that
    mapping.</p>  <p><img style="border-bottom: 0px;border-left: 0px;margin: 0px
    20px;padding-left: 0px;padding-right: 0px;border-top: 0px;border-right:
    0px;padding-top: 0px" border="0" alt="SNAGHTML990c33"
    src="http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-849aa7d71ae4_C9AF-SNAGHTML990c33.png"
    width="724" height="563" />    <br /><strong>Figure: Cheating AX into
    mapping to a specific folder</strong></p>      <p>In this case if you change
    the “Repository folder” value to be “c:WorkspacesNorthwindProduct1Feature1”
    then AX will sync with the correct folder and you have no need to have
    separate team projects for each instance.</p>  <h2>Advantages</h2>  <p>In
    addition to those listed in <a
    href="http://blog.hinshelwood.com/hinshelm/archive/2010/03/09/when-should-i-use-areas-in-tfs-instead-of-team.aspx">when
    should I use Areas in TFS instead of Team Projects in Team Foundation Server
    2010</a>.</p>  <ul class="TickList">   <li><strong>Ease of branching and
    merging –</strong> Branching and merging can be confusing at the best of
    times, but without a consistent folder layout it can quickly become a
    confusing disaster</li> </ul>  <h2>Disadvantages</h2>  <p>In addition to
    those listed in <a
    href="http://blog.hinshelwood.com/hinshelm/archive/2010/03/09/when-should-i-use-areas-in-tfs-instead-of-team.aspx">when
    should I use Areas in TFS instead of Team Projects in Team Foundation Server
    2010</a>.</p>  <ul class="CrossList">   <li><strong>You need to configure
    Workspaces carefully – </strong>Although this is not difficult it does add a
    level of complexity that does not exist in option #1. </li> </ul> 
    <h2>Conclusion</h2>  <p>The advantages of this approach far out way the
    slight added complexity in setup and will allow a company to manage all of
    their source under one roof. They can also easily move work items from one
    project to another and make it easy for developers to identify where they
    are working and what effect it will have without them having to refer to
    documentation.</p>  <p>Ultimately keeping everything under a single format
    across the company regardless of team or topic allows everyone to understand
    the source and the impact of changes a little better. And that is never a
    bad thing…</p>  <div style="padding-bottom: 0px;margin: 0px;padding-left:
    0px;padding-right: 0px;float: none;padding-top: 0px"
    class="wlWriterEditableSmartContent">Technorati Tags: <a
    href="http://technorati.com/tags/TFS" rel="tag">TFS</a>,<a
    href="http://technorati.com/tags/AX" rel="tag">AX</a>,<a
    href="http://technorati.com/tags/AX2009" rel="tag">AX2009</a>,<a
    href="http://technorati.com/tags/TFS2010" rel="tag">TFS2010</a></div>
  - ''
  post_id: '23'
  post_date: '2010-10-08 16:20:46'
  post_date_gmt: '2010-10-08 16:20:46'
  post_modified: '2010-10-08 16:20:46'
  post_modified_gmt: '2010-10-08 16:20:46'
  comment_status: open
  ping_status: open
  post_name: syncing-many-dynamics-ax-instances-to-a-single-tfs-2010-team-project
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: dsq_thread_id
    meta_value: '312240071'
  - meta_key: _flattr_post_language
    meta_value: ''
  - meta_key: _flattr_post_category
    meta_value: ''
  - meta_key: _flattr_post_hidden
    meta_value: ''
  - meta_key: _flattr_btn_disabled
    meta_value: ''
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1aBL3eS
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1472870631;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:83;}i:1;a:1:{s:2:"id";i:10638;}i:2;a:1:{s:2:"id";i:108;}}}}
  - meta_key: _wpghs_github_path
    meta_value: >-
      _posts/2010-10-08-syncing-many-dynamics-ax-instances-to-a-single-tfs-2010-team-project.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '515'
