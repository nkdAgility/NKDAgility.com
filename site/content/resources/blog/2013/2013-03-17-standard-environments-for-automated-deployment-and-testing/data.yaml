post:
  title: Standard Environments for Automated Deployment and Testing
  link: >-
    https://nkdagility.com/blog/standard-environments-for-automated-deployment-and-testing/
  pubDate: Sun, 17 Mar 2013 06:23:45 +0000
  creator: MrHinsh
  guid:
    _: http://blog.hinshelwood.com/?p=9308
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - >-
    <p class="lead">Standard Environments in Visual Studio 2012 Team Foundation
    Server make it possible to have an automated deployment of your software to
    a development or QA environment. You can then have a bunch of automated
    tests run in those environments, collecting data all the while.</p>

    <p>In TFS 2010 this feature was called “Physical Environments” which is a
    little confusing as it just means non-Lab Management environment. It
    provided the ability to run tests, but you had to manually deploy which kind
    of sucked. What use is it unless I can do continuous delivery to it. So in
    Visual Studio 2012 Team Foundation Server the product team changed this to
    “Standard Environments” and allow you not only to monitor test execution,
    but also to do deployments. Better yet they also made it a snip to get
    existing servers up to speed…</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image16.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Standard Environments in
    Visual Studio 2012 Team Foundation Server</strong></p>

    <p>The Application Lifecycle Management (ALM) community is constantly
    telling everyone that you should deploy in the same way to production as you
    do to development and testing but what we really mean is to use the same
    deployment mechanism, not necessarily delivery engine. As we may have
    different delivery engines we need to impose some standards.</p>

    <p>We need to come up with some sort of standard interface for our Software
    Configuration Management (SCM) &amp; DevOps teams to consume so that they
    can always have our deployments do the same thing with the same scripts.
    This allows us to promote the same <strong>unit of work</strong> from
    development through testing and then to production. Fortunately this
    interface already exists for .NET shared packages and many developers
    already use it; Its called Nuget.</p>

    <p>Now while we call the searching of public packages and delivery of those
    components inside of Visual Studio Nuget it is really just something called
    “Nuget Package Manager for Visual Studio”. This package manager is just one
    implementation (granted the first) of Nuget and there are also a few others;
    Chocolatey and Octopus Deploy spring to mind as good other ones.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image17.png" width="704"
    height="235" border="0" /><br /><strong>Figure: Nuget explained</strong></p>

    <p>So now we have a consistent packaging mechanism we need to have a
    deployment pipeline to service development and testing environments. This is
    where the “Standard Environments” comes in. It would be awesome if we could
    use the additional features of “System Centre Virtual Machine Manager
    (SVCMM)” that would give us built in snapshots and templating, unfortunately
    many&nbsp; customers use VM Ware or other products that don’t yet work with
    Visual Studio 2012 Lab Management.</p>

    <p>In order to setup Standard Environments we need to do a couple of
    things:</p>

    <ol>

    <li><strong>DONE - <span style="text-decoration: line-through;">Create your
    Standard Environment</span></strong></li>

    <li><strong>DONE - <span style="text-decoration: line-through;">Deploy to
    your Standard Environment</span></strong></li>

    </ol>

    <h2 class="icon-task">Create your Standard Environment</h2>

    <p>A Standard Environment is just a group of computers that you have defined
    as part of an environment to be monitored. These servers can be Physical or
    Virtual and they will have the Lab agent deployed automatically and
    configured to collect results from your testing.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image18.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Create new environments in
    the Lab Centre</strong></p>

    <p>If you were not previously aware you can open Microsoft Tests Manager and
    click the “Test Centre” title and switch over the green “Lab Centre”. The
    lab centre is where you manage all of your settings controllers and
    environments. If you are using SCVMM then you can manage your virtual
    environments and library's. Remember that environments are there so that we
    can manage ‘more than one’ machine at once. While you can do that yourself,
    it is a lot easier if it is done for you.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image19.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Give your new environment
    some meta data</strong></p>

    <p>You do get to set a little bit of Meta data and you can set title and you
    can add tags. If you have multiple client scenarios you may want to tag your
    environments so that you can keep track of them. You may need to have at
    least one environment per configuration and probably multiple so that you
    can have multiple testers working at the same time.</p>

    <p>I find that al lot of organisations are resistant to creating an
    environment for each tester, but if you don’t then what one tester is doing
    can colour another. Remember if you are using the Intellitrace, Test Impact
    Analysis or Code Coverage data collectors then you MUST have only one tester
    in that environment. If you have limited resources for environments then you
    could use one environment to have all of your testers testing and another to
    verify the results.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image20.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Add each machine to your
    environment</strong></p>

    <p>I am not sure if there is a hard limit to the number of machines that you
    can have in any single environment but I know that in Lab Management 2010
    did have a soft limit of 5. This limit was based on performance issues and
    my understanding was it applied to SCVMM environment's. Some experimentation
    may be required if you have very large environments, but if this case I only
    have there machines.</p>

    <p>For each machine you need to tag with a role. This role can be used to
    specify scripts and to refer to the machines during a workflow.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    display: inline; padding-right: 0px; border-width: 0px;" title="image"
    alt="image" src="http://blog.hinshelwood.com/files/2013/03/image21.png"
    width="800" height="480" border="0" /><br /><strong>Figure: Add an
    administrator account</strong></p>

    <p>An account needs to be added that is in the Administrators group of each
    of the machines but can be different per environment. This account will be
    used to connect to and configure those machines including installing the
    agents and configuring the data collection.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image22.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Select the client for
    CodedUI test execution</strong></p>

    <p>If you are wanting to run Coded UI tests and especially if you want to
    run them across multiple clients to speed up your tests then you need to
    select the machines to run the UI testing from. This will then configure
    those machines agents to run in interactive mode and they will log
    themselves in to run the tests. You can use a different account to do the
    login, but here I am just using the same domainTfLab account that I am using
    to configure and access them.</p>

    <p><a href="http://blog.hinshelwood.com/files/2013/03/image151.png"><img
    style="background-image: none; padding-top: 0px; padding-left: 0px; margin:
    0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image[15]" alt="image[15]"
    src="http://blog.hinshelwood.com/files/2013/03/image15_thumb.png"
    width="800" height="480" border="0" /></a><br /><strong>Figure: Unable to
    verify that machines are accessible</strong></p>

    <p>If you are unable to verify the machines are access able then try the
    following:</p>

    <ul>

    <li><a
    title="http://blog.hinshelwood.com/windows-server-2012-core-issue-enable-file-and-printer-sharing-for-lab-management-standard-environments/"
    href="http://blog.hinshelwood.com/windows-server-2012-core-issue-enable-file-and-printer-sharing-for-lab-management-standard-environments/"
    target="_blank">Windows Server 2012 Core Issue: Enable File and Printer
    Sharing for Lab Management Standard Environments</a></li>

    </ul>

    <p>This should fix the machines so that you can move forward.</p>

    <p><a href="http://blog.hinshelwood.com/files/2013/03/image181.png"><img
    style="background-image: none; padding-top: 0px; padding-left: 0px; margin:
    0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image[18]" alt="image[18]"
    src="http://blog.hinshelwood.com/files/2013/03/image18_thumb.png"
    width="800" height="480" border="0" /></a><br /><strong>Figure: We can now
    verify the Standard Environment</strong></p>

    <p>As is usual with Team Foundation Server there are a bunch of verification
    checks that are performed before it ever tries to actually do the work. But
    once the checks are complete, which hopefully minimises any chance of
    errors.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    display: inline; padding-right: 0px; border-width: 0px;" title="image"
    alt="image" src="http://blog.hinshelwood.com/files/2013/03/image23.png"
    width="800" height="480" border="0" /><br /><strong>Figure:
    Auto-configuration of your machines</strong></p>

    <p>After the validation and you select finish Lab Manager will go off and
    configure all of your machines. This includes installing the lab agent and
    configuring it to talk to your Team Foundation Server and indeed setting up
    the interactive UI test runner.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image24.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Fully configured
    environments</strong></p>

    <p>This environment is now ready.</p>

    <h2 class="icon-task">Deploy to your Standard Environment</h2>

    <p>Now that I have somewhere for my application to go, I need an application
    to go there. As I have not got all of the way through this on my servers I
    will just show one way that you can use this new Standard Environment.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    display: inline; padding-right: 0px; border-width: 0px;" title="image"
    alt="image" src="http://blog.hinshelwood.com/files/2013/03/image25.png"
    width="800" height="480" border="0" /><br /><strong>Figure: Selecting the
    LabDefaultTemplate</strong></p>

    <p>If you have been creating custom build workflows you will know that that
    XAML file controls the options that are available here and the Lab XAML
    changes things up quite drastically. There is really only one option of
    consequence and that is the “Lab Process Settings”. I am not sure why this
    is a pop out wizard rather than a set of options to pick, but it is likely
    because so many of the options depend on each other.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image26.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Select an
    Environment</strong></p>

    <p>First we need to select the environment that we just created. Don’t get
    exited by the ‘snapshot’ option as this will only be available if your
    environment is hosted in a Lab Management integrated System Centre Virtual
    Machine Manager (SCVMM) host.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image27.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Select the build you want to
    call</strong></p>

    <p>We have bunch of options here. We can use a build or a drop folder; If we
    pick build we can also select wither to take the latest, a specific or to
    execute a new one first. I would note that if you select “Queue a new build”
    you will have to have a controller available that has more than one agent
    available.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image28.png" width="800"
    height="480" border="0" /><br /><strong>Figure: Select your deployment
    scripts</strong></p>

    <p>It really is that simple to do a deployment. You pick the role or tag and
    select a script to un on that machine. That script can come from source
    control and it can be a simple bat file or a PowerShell. This can take your
    Nuget package that is the output from your build and execute it on the
    server. Personally I would stick all of my installs in here to so that I
    don’t need to do any separate configuration. The ultimate goal is
    configuration as code and that also means for the dependant applications
    that need to be installed on our servers. You could make a bunch of
    Chocolatey calls in the PowerShell to get your server setup and configured
    then run any deployment actions that you need.</p>

    <p><img style="background-image: none; padding-top: 0px; padding-left: 0px;
    margin: 0px; display: inline; padding-right: 0px; border-width: 0px;"
    title="image" alt="image"
    src="http://blog.hinshelwood.com/files/2013/03/image29.png" width="800"
    height="480" border="0" /><br /><strong>Figure: My build fails, yours does
    not have to</strong></p>

    <p>I need to spend a bunch of time creating the PowerShell scripts that I
    need to do my deployments. But I think from this you can get the idea.</p>

    <h2>Conclusion</h2>

    <p>So, not only can I now deploy my code, but I can have this happen
    automatically and have my existing regression UI automation run as part of
    it. Now, I do not want to do that for every checking, or maybe I do, but I
    may want to run a nightly build and full regression. Or if I have thousands
    of automation then maybe I have a permanently&nbsp; rolling build that runs
    to the side of my core work and validates my full regression. I then only
    have to delve in when there is a failure.</p>

    <p>In combination with some other mechanism to deploy to our pre-production
    and production environments we now have the makings of a standard deployment
    pipeline that obfuses the complexity of individual application deployment
    from SCM and DevOps teams while leaving the developers with the capability
    and versatility to deploy how they like.</p>
  - >-
    <p class="lead">Standard Environments in Visual Studio 2012 Team Foundation
    Server make it possible to have an automated deployment of your software to
    a development or QA environment. You can then have a bunch of automated
    tests run in those environments, collecting data all the while. </p>
  post_id: '9308'
  post_date: '2013-03-16 23:23:45'
  post_date_gmt: '2013-03-17 06:23:45'
  post_modified: '2013-03-16 23:23:45'
  post_modified_gmt: '2013-03-17 06:23:45'
  comment_status: open
  ping_status: open
  post_name: standard-environments-for-automated-deployment-and-testing
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _yoast_wpseo_linkdex
    meta_value: '75'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: wp-to-buffer-log
    meta_value: >-
      O:8:"stdClass":5:{s:7:"updates";a:3:{i:0;O:8:"stdClass":16:{s:3:"_id";s:24:"5145649284046e4d6b000008";s:9:"client_id";s:24:"50f71563f758fa8f40000001";s:10:"created_at";i:1363502226;s:3:"day";s:8:"Tomorrow";s:6:"due_at";i:1363626420;s:8:"due_time";s:7:"5:07
      pm";s:2:"id";s:24:"5145649284046e4d6b000008";s:10:"profile_id";s:24:"507a4e20d9320dd125000018";s:15:"profile_service";s:7:"twitter";s:6:"status";s:6:"buffer";s:4:"text";s:101:"Updated
      Post: Standard Environments for Automated Deployment and Testing
      http://buff.ly/YzGTIO #vsalm";s:14:"text_formatted";s:315:"Updated Post:
      Standard Environments for Automated Deployment and Testing <a class="url"
      href="http://buff.ly/YzGTIO" rel="external nofollow"
      target="_blank">http://buff.ly/YzGTIO</a> <a
      href="https://twitter.com/#!/search?q=%23vsalm" title="#vsalm"
      class="hashtag" rel="external nofollow"
      target="_blank">#vsalm</a>";s:4:"type";s:4:"link";s:10:"updated_at";i:1363502226;s:7:"user_id";s:24:"507a4e20d9320dd125000017";s:3:"via";s:3:"api";}i:1;O:8:"stdClass":17:{s:3:"_id";s:24:"5145649284046e4d6b000009";s:9:"client_id";s:24:"50f71563f758fa8f40000001";s:10:"created_at";i:1363502226;s:3:"day";s:8:"Tomorrow";s:6:"due_at";i:1363651560;s:8:"due_time";s:7:"6:06
      pm";s:2:"id";s:24:"5145649284046e4d6b000009";s:5:"media";O:8:"stdClass":5:{s:8:"original";s:87:"http://blog.hinshelwood.com/standard-environments-for-automated-deployment-and-testing/";s:11:"description";s:210:"Standard
      Environments in Visual Studio 2012 Team Foundation Server make it possible
      to have an automated deployment of your software to a development or QA
      environment. You can then have a bunch of
      automated...";s:5:"title";s:78:"Standard Environments for Automated
      Deployment and Testing - Visual Studio
      ALM";s:4:"link";s:87:"http://blog.hinshelwood.com/standard-environments-for-automated-deployment-and-testing/";s:7:"preview";s:73:"http://blog.hinshelwood.com/files/2012/02/metro-visualstudio-128-link.png";}s:10:"profile_id";s:24:"5088ae7ed9320d615a00000a";s:15:"profile_service";s:8:"facebook";s:6:"status";s:6:"buffer";s:4:"text";s:101:"Updated
      Post: Standard Environments for Automated Deployment and Testing
      http://buff.ly/YzGTIO #vsalm";s:14:"text_formatted";s:315:"Updated Post:
      Standard Environments for Automated Deployment and Testing <a class="url"
      href="http://buff.ly/YzGTIO" rel="external nofollow"
      target="_blank">http://buff.ly/YzGTIO</a> <a
      href="https://twitter.com/#!/search?q=%23vsalm" title="#vsalm"
      class="hashtag" rel="external nofollow"
      target="_blank">#vsalm</a>";s:4:"type";s:4:"link";s:10:"updated_at";i:1363502226;s:7:"user_id";s:24:"507a4e20d9320dd125000017";s:3:"via";s:3:"api";}i:2;O:8:"stdClass":17:{s:3:"_id";s:24:"5145649284046e4d6b00000a";s:9:"client_id";s:24:"50f71563f758fa8f40000001";s:10:"created_at";i:1363502226;s:3:"day";s:18:"Tuesday
      19th March";s:6:"due_at";i:1363713300;s:8:"due_time";s:7:"5:15
      pm";s:2:"id";s:24:"5145649284046e4d6b00000a";s:5:"media";O:8:"stdClass":5:{s:8:"original";s:87:"http://blog.hinshelwood.com/standard-environments-for-automated-deployment-and-testing/";s:11:"description";s:210:"Standard
      Environments in Visual Studio 2012 Team Foundation Server make it possible
      to have an automated deployment of your software to a development or QA
      environment. You can then have a bunch of
      automated...";s:5:"title";s:78:"Standard Environments for Automated
      Deployment and Testing - Visual Studio
      ALM";s:4:"link";s:87:"http://blog.hinshelwood.com/standard-environments-for-automated-deployment-and-testing/";s:7:"preview";s:73:"http://blog.hinshelwood.com/files/2012/02/metro-visualstudio-128-link.png";}s:10:"profile_id";s:24:"5088ae96d9320d3a5a00000a";s:15:"profile_service";s:8:"linkedin";s:6:"status";s:6:"buffer";s:4:"text";s:101:"Updated
      Post: Standard Environments for Automated Deployment and Testing
      http://buff.ly/YzGTIO #vsalm";s:14:"text_formatted";s:315:"Updated Post:
      Standard Environments for Automated Deployment and Testing <a class="url"
      href="http://buff.ly/YzGTIO" rel="external nofollow"
      target="_blank">http://buff.ly/YzGTIO</a> <a
      href="https://twitter.com/#!/search?q=%23vsalm" title="#vsalm"
      class="hashtag" rel="external nofollow"
      target="_blank">#vsalm</a>";s:4:"type";s:4:"link";s:10:"updated_at";i:1363502226;s:7:"user_id";s:24:"507a4e20d9320dd125000017";s:3:"via";s:3:"api";}}s:17:"buffer_percentage";i:70;s:12:"buffer_count";i:7;s:7:"success";b:1;s:7:"message";s:48:"One
      more post in your Buffer. Keep it topped up!";}
  - meta_key: wp-to-buffer
    meta_value: a:1:{s:7:"publish";s:1:"0";}
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _yoast_wpseo_focuskw
    meta_value: standard environments
  - meta_key: _yoast_wpseo_title
    meta_value: Standard Environments for Automated Deployment and Testing
  - meta_key: _yoast_wpseo_metadesc
    meta_value: >-
      Standard Environments in Visual Studio 2012 Team Foundation Server make it
      possible to have an automated deployment of your software to a development
      or QA environment. You can then have a bunch of automated tests run in
      those environments, collecting data all the while.
  - meta_key: dsq_thread_id
    meta_value: '1143645835'
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:4:"9432";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1aBOBOm
  - meta_key: _thumbnail_id
    meta_value: '11141'
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474766796;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:10342;}i:1;a:1:{s:2:"id";i:9468;}i:2;a:1:{s:2:"id";i:9348;}}}}
  - meta_key: _wpghs_github_path
    meta_value: >-
      _posts/2013-03-16-standard-environments-for-automated-deployment-and-testing.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '2150'
  comment:
  - comment_id: '1577'
    comment_author: Visual Studio ALM Links &ndash; Week 12 / 2013
    comment_author_email: ''
    comment_author_url: >-
      http://www.codewrecks.com/blog/index.php/2013/03/23/visual-studio-alm-links-week-12-2013/
    comment_author_IP: 137.116.195.11
    comment_date: '2013-03-22 22:29:18'
    comment_date_gmt: '2013-03-23 05:29:18'
    comment_content: '[...] Standard environments for Automated Deployment and Testing [...]'
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
      meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1364071449.554247;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '1578'
    comment_author: Ralph Jansen
    comment_author_email: ''
    comment_author_url: http://www.facebook.com/ralph.jansen
    comment_author_IP: 217.149.140.3
    comment_date: '2013-05-10 18:39:00'
    comment_date_gmt: '2013-05-10 17:39:00'
    comment_content: >-
      I like your blog but I can't get it to work. Can you help me with this
      problem? http://stackoverflow.com/q/16487581/801005
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '892423398'
  - comment_id: '1579'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 184.78.139.42
    comment_date: '2013-05-10 19:58:00'
    comment_date_gmt: '2013-05-10 18:58:00'
    comment_content: I have added a comment :)
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1578'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '892423398'
    - meta_key: dsq_post_id
      meta_value: '892488277'
  - comment_id: '1580'
    comment_author: Ralph Jansen
    comment_author_email: ''
    comment_author_url: http://www.facebook.com/ralph.jansen
    comment_author_IP: 217.149.140.3
    comment_date: '2013-05-13 08:18:00'
    comment_date_gmt: '2013-05-13 07:18:00'
    comment_content: Thanks. I added the requested information
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1579'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '892488277'
    - meta_key: dsq_post_id
      meta_value: '895662578'
  - comment_id: '1581'
    comment_author: Connect a Test Controller to Team Foundation Service
    comment_author_email: ''
    comment_author_url: >-
      http://blog.nwcadence.com/connect-a-test-controller-to-team-foundation-service/
    comment_author_IP: 66.175.212.70
    comment_date: '2013-05-24 19:01:48'
    comment_date_gmt: '2013-05-24 18:01:48'
    comment_content: >-
      [...] can connect a Test Controller to Team Foundation Service? And if you
      can do that, can you create standard environments for automated deployment
      and testing against the [...]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1369418508.430946;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1369505952.565237;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '2130'
    comment_author: >-
      Execute Tests with Release Management for Visual Studio 2013 - naked ALM -
      Experts in ALM, TFS &amp; lean-agile with Scrum
    comment_author_email: ''
    comment_author_url: http://nkdagility.com/execute-tests-release-management-visual-studio-2013/
    comment_author_IP: 97.107.139.31
    comment_date: '2014-03-03 09:49:12'
    comment_date_gmt: '2014-03-03 09:49:12'
    comment_content: >-
      [&#8230;] If you have ever used Lab Management to do an automated build
      and release you will know that you can use the DefaultLabTemplate and
      select an environment that has been configured in Lab Management to do a
      deployment to. In TFS 2010 you had to be using Hyper-V before you could do
      automated deployment and one of the enhancements that was added to TFS
      2012 was the ability to use Standard Environments for automated deployment
      and testing. [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1393840152.346783;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1393916259.469925;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '13809'
    comment_author: vinayak
    comment_author_email: vinayak.viswanath@gmail.com
    comment_author_url: ''
    comment_author_IP: 97.65.175.253
    comment_date: '2016-01-23 10:42:00'
    comment_date_gmt: '2016-01-23 10:42:00'
    comment_content: >-
      Hi Martin, 


      Could you please help me for how to integrate the Selenium with TFS, Is
      MTM is needed , for this procedure..

      Please help on this 


      Thanks

      Vinayak.V
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2473377158'
  - comment_id: '13862'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 81.111.33.215
    comment_date: '2016-03-07 15:57:00'
    comment_date_gmt: '2016-03-07 15:57:00'
    comment_content: >-
      @vinayakviswanath:disqus Did you manage to get this working? If not please
      email me if you need more help...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13809'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2473377158'
    - meta_key: dsq_post_id
      meta_value: '2556150674'
