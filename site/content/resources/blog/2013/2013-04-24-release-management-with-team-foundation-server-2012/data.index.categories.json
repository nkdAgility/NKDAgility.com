{
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "Content discusses release management processes and automation, addressing complexities in delivering software but primarily focuses on specific tools and practices rather than explicitly on complexity thinking as a central theme.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "The content primarily focuses on release management concepts, tools, and processes related to Team Foundation Server, which are central to Application Lifecycle Management.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 28.0,
    "reasoning": "The content primarily focuses on release management and deployment strategies within Team Foundation Server 2012, with discussions on automation and the responsibilities of development teams, rather than systems thinking as a central concept.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of release management using Team Foundation Server 2012, focusing on processes, tools, and best practices rather than personal experiences or perspectives.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "While the content primarily focuses on release management and deployment processes within Team Foundation Server, it implies the importance of accountability in ensuring quality and consistency in software delivery, particularly through the responsibilities of development and operations teams. This theme of accountability, although secondary to the main topic, is significant enough to warrant consideration.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management and the use of Team Foundation Server 2012 for deployment strategies, with no significant discussion of a miscellaneous topic.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 27.0,
    "reasoning": "The content discusses release management, deployment strategies, and the use of development tools but does not primarily focus on code complexity or coding practices.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses release management, which is a part of the agile product management process, but the primary focus is on Team Foundation Server 2012 and specific deployment technologies, making it a secondary theme.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on release management strategies and practices that are integral to software delivery, which is a core aspect of value stream management, particularly in optimizing the flow of value from development to production.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 85,
    "non_ai_confidence": 30,
    "final_score": 68.0,
    "reasoning": "The content primarily discusses release management strategies, the roles of development and operations teams, and emphasizes the importance of systematic processes in software delivery.",
    "level": "Secondary"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily discusses release management strategies, deployment processes, and tools relevant to product delivery.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "The content discusses deployment strategies and tools related to release management, emphasizing the importance of proper configuration and automation in deploying applications, which indicates a major focus on installation and configuration processes.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 82,
    "non_ai_confidence": 0,
    "final_score": 57.0,
    "reasoning": "Content primarily discusses release management practices and tools within the context of Agile development, emphasizing the need for automation, quality delivery, and minimizing risks, which are essential aspects of enterprise agility.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 65.0,
    "reasoning": "The content primarily discusses optimizing the release management process in software development, focusing on efficiency, automation, and minimizing waste, which aligns closely with Lean principles.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management, build processes, and deployment strategies within Team Foundation Server 2012, with no central focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses release management strategies, which indirectly relate to how teams might need to adapt to market demands for efficient software delivery. However, it primarily focuses on deployment processes rather than explicitly addressing adaptability to market changes.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management strategies and tools in software development, without a clear focus on decision theory.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 44.0,
    "reasoning": "The content primarily discusses release management processes and tools, with a secondary focus on automation in deployment, which relates to agility but is not primarily about AI or automation's impact in the context of agility.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses release management and the interaction between software engineering teams, configuration management, and operations, highlighting the importance of collaboration and processes. However, the focus is primarily on specific tools and practices rather than a deeper exploration of the sociotechnical systems concept.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content extensively discusses release management strategies and practices using Team Foundation Server 2012, which is a core aspect of Azure DevOps.",
    "level": "Secondary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content extensively discusses release management strategies, tools like Team Foundation Server 2012, NuGet, and Octopus, along with practical automation techniques for deployment, making it a primary focus.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "Content provides a comprehensive overview of release management using Team Foundation Server 2012, detailing best practices, automation strategies, and key concepts, making technical excellence a central theme.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses release management practices and tools in Team Foundation Server 2012, focusing on deployment and process optimization rather than discovery and learning as a central theme.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses various aspects of release management, automation, and consistency in deployments, which implies a focus on improving processes and possibly learning outcomes associated with those processes. However, it does not exclusively focus on metrics or a learning-centric theme.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 95,
    "non_ai_confidence": 50,
    "final_score": 82.0,
    "reasoning": "Content primarily focuses on release management practices, tools, and strategies that are central to effective DevOps processes, emphasizing automation, deployment, CI/CD workflows, and collaboration between development and operations.",
    "level": "Primary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses strategies and tools for improving the release management process, emphasizing automation and efficiency in deployment to enhance flow efficiency.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content focuses extensively on release management, automation, and improving software delivery processes, which are integral parts of achieving organisational agility.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content focuses primarily on release management strategies and tools related to software development rather than on psychological aspects of organizations or human behavior within them.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management and tools related to Team Foundation Server 2012, and while it mentions the role of a professional development team, it does not discuss Scrum principles, roles, or events as a primary topic.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "While the content discusses tools and practices associated with release management, including references to Team Foundation Server and NuGet, it primarily focuses on workflows and strategies rather than being primarily about the products themselves.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses automation and strategies for release management aimed at delivering quality software efficiently.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses release management strategies and tools in Team Foundation Server 2012, with no clear focus on news or reviews.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content primarily discusses release management and deployment strategies within software development, emphasizing the importance of automating processes and improving team collaboration, which are key aspects of scaling agility.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content is primarily focused on release management strategies and practices, with no mention of events or presentations.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 52,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses release management and automation strategies that indirectly relate to resilience in software development processes. However, the primary focus is on technical aspects of managing software releases rather than a clear narrative on resilience and change.",
    "level": "Ignored"
  }
}
