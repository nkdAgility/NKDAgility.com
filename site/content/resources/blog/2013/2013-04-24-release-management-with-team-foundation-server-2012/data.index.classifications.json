{
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 40,
    "non_ai_confidence": 30,
    "final_score": 37.0,
    "reasoning": "The content discusses release management, automation, and deployment processes but does not primarily focus on Test First Development; it only mentions testing in the context of deployment and integration without emphasizing Test First principles.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "While the content discusses aspects related to teams and their responsibilities in release management, it primarily focuses on technical processes and tools rather than a deep exploration of organisational culture.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on release management strategies and tools in Team Foundation Server 2012, with only a passing mention of professional development teams and quality output, which does not establish a strong connection to agile leadership concepts.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses release management strategies and processes, touching upon how organizations can improve their efficiency and understanding in the context of deploying software, making it a major theme.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 70,
    "non_ai_confidence": 20,
    "final_score": 55.0,
    "reasoning": "The content discusses aspects of release management and deployment strategies, suggesting a practical process-oriented approach which aligns with evidence-based practices, but it primarily focuses on technical implementation rather than management methodology.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 45,
    "non_ai_confidence": 20,
    "final_score": 38.0,
    "reasoning": "The content primarily discusses release management and automated deployment processes in Team Foundation Server 2012, with only peripheral references to quality output and testing. Test Driven Development is not a central focus.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on release management and deployment processes using Team Foundation Server 2012, without discussing Scrum methodology or the role of a Scrum Master.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 14.0,
    "reasoning": "The content primarily focuses on release management using Team Foundation Server 2012, automation, and deployment strategies, with only minimal references to Scrum practices.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content makes references to professional development teams creating potentially shippable quality output and emphasizes the importance of delivery processes, which align with agile principles. However, the primary focus is on release management strategies and tools rather than an in-depth discussion of agile values and principles.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management processes and tools within Team Foundation Server 2012, focusing on deployment strategies and software quality rather than psychological safety.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 44.0,
    "reasoning": "The content discusses Team Foundation Server 2012 and its role in release management and build processes, which directly relates to source control and modern development practices, but the primary focus is on release management rather than source control itself.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 35,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily focuses on release management processes and tools in software development, with limited reference to customer retention principles that are not central to the main topic.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 14.0,
    "reasoning": "The content primarily discusses release management processes and tools without a significant focus on Scrum values. It briefly mentions the importance of a professional development team, but does not explore Scrum values as a central theme.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 65,
    "non_ai_confidence": 0,
    "final_score": 46.0,
    "reasoning": "The content primarily discusses release management within the context of Team Foundation Server 2012, including aspects of build and deployment processes, which are relevant but not exclusively focused on Azure Pipelines.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on release management within Team Foundation Server 2012, discussing deployment processes, build management, and tools like NuGet and Octopus. Asynchronous development is not a clear or central theme in this content.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "Content primarily focuses on release management processes and tools, with only a minor mention of customer value.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 84,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content focuses significantly on the responsibilities of a professional development team in creating potentially shippable quality output, which aligns well with the concept of Definition of Done in release management.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management tools and practices specific to Team Foundation Server 2012, without discussing the role or responsibilities of a Product Owner.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 28.0,
    "reasoning": "The content is primarily about release management and deployment using Team Foundation Server 2012. While it discusses professional development teams and their role in delivering quality outputs, entrepreneurship is not the primary focus.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses various strategies and technologies related to release management, which inherently involves decision-making processes for deploying software effectively. However, decision making is a secondary theme, as the primary focus is on tools and strategies rather than the decision-making process itself.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses strategies and practical approaches for effective release management, emphasizing the importance of automation and consistent processes in delivering quality software. The focus on improving operations and efficient deployment indicates a strong alignment with pragmatic thinking.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily discusses release management and deployment processes, emphasizing the importance of frequent and automated deployments in a development context.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on release management processes and tools in Team Foundation Server 2012 and does not discuss technical debt as a clear primary topic.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily discusses release management strategies and tools within Team Foundation Server 2012, focusing on deployment practices, automation, and the responsibilities of professional development teams.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses various aspects of release management, emphasizing the importance of empirical processes in ensuring quality control throughout delivery, which relates to empirical process control themes, but is primarily focused on release management.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management processes using Team Foundation Server 2012, deployment automation, and related technologies, without clear discussion on employee engagement.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 20,
    "non_ai_confidence": 10,
    "final_score": 17.0,
    "reasoning": "The content primarily discusses release management with Team Foundation Server, focusing on deployment processes and automation rather than Behaviour Driven Development principles.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses release management processes, automation, and strategies for improving the deployment workflow in large organizations, aligning closely with principles of large scale agility.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses release management with Team Foundation Server and automation processes without a central focus on Agile frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 78,
    "non_ai_confidence": 0,
    "final_score": 55.0,
    "reasoning": "The content discusses the responsibilities of professional development teams in delivering quality output and managing the release process. While it primarily focuses on release management practices and tools, accountability in quality output and delivery responsibilities is a significant theme throughout the article.",
    "level": "Secondary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content emphasizes improving efficiency and quality in release management processes, which aligns with Lean Thinking principles. However, it is primarily focused on tools and technologies rather than a deep exploration of Lean Thinking itself.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses the importance of professional development teams and their role in creating high-quality, shippable output through effective release management strategies, emphasizing automation and best practices in engineering.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses aspects of release management and deployment processes in a development context, which could relate to organisational physics principles but is primarily focused on procedures and tools rather than the core concepts of organisational physics.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "Content focuses extensively on release management using Team Foundation Server 2012, discussing deployment processes, automated builds, and the responsibilities of development teams, which are central to software development practices.",
    "level": "Secondary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 40,
    "non_ai_confidence": 10,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses release management and automation tools, with limited reference to Scrum practices or frameworks.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content discusses release management and tools in the context of Team Foundation Server 2012, but does not focus on Azure Repos or its primary functionalities.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management processes and tools within Team Foundation Server 2012, without a significant mention or discussion of Azure Boards.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses aspects of release management within the context of Agile practices, emphasizing automation, collaboration among teams, and the need for potentially shippable output, which aligns closely with Agile principles and strategies.",
    "level": "Secondary"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "While the content primarily discusses release management and deployment processes within Team Foundation Server, it emphasizes the configuration management context and mentions several configuration-related practices and tools. Therefore, it holds significant relevance to System Configuration as a secondary theme.",
    "level": "Secondary"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 14.0,
    "reasoning": "The content focuses mainly on release management processes using Team Foundation Server, with only occasional references to backlog-related concepts, but does not delve into product backlog specifics.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the collaboration between various teams like Engineering, Configuration Management, DevOps, and Operations in the context of release management.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 49.0,
    "reasoning": "The content extensively discusses release management, automation, and the strategic importance of consistent deployment processes, making it a major but secondary theme in the context of overall product strategy.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses release management strategies and practices that contribute to efficient product delivery, which aligns with lean principles, but it is primarily focused on specific tools and processes rather than the broader concept of lean product development.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management strategies and tools within Team Foundation Server 2012, with no clear discussion of value stream mapping as a central topic.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "The content primarily discusses release management and the processes involved in delivering working software using Team Foundation Server 2012, including the importance of creating potentially shippable quality output.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management and deployment processes in Team Foundation Server 2012, with no clear focus on product discovery as a primary topic.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "The content discusses automated testing in the context of deployment processes and emphasizes the need for automated builds and tests within a release management framework.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses release management in Team Foundation Server 2012, focusing on deployment strategies, build processes, and operational tools, with no mention of acceptance test driven development.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management strategies and tools in Team Foundation Server 2012, not mentoring.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content primarily discusses release management processes using Team Foundation Server 2012, which relates to site reliability practices, but focuses more on development operations and tools rather than core site reliability engineering principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content discusses release management extensively, focusing on processes and tools that facilitate frequent releases in software development.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on release management strategies and tools in Team Foundation Server 2012, without any discussion of Daily Scrum meetings or their concepts.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 52,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses modern release management practices and tools, indicating a secondary theme of innovation in software delivery processes, but it primarily focuses on operational strategies rather than a core discussion of the ability to innovate.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content discusses modern software delivery practices and emphasizes automation and professional development team responsibilities, which are central themes in digital transformation initiatives.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses release management and automation in software development, with a focus on tools like Team Foundation Server and processes related to deployment. Portfolio management is not mentioned as a theme and is not relevant to the content.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses strategies and processes for effective release management, emphasizing the role of professional development teams and the importance of automation in a technical leadership context.",
    "level": "Secondary"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 48,
    "non_ai_confidence": 0,
    "final_score": 34.0,
    "reasoning": "The content primarily focuses on release management processes and technologies rather than organizational change as a central topic.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the roles of individual teams in release management and the need for processes that allow teams to work autonomously while delivering quality output. However, the primary focus is on release management rather than self-organisation as a main theme.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content primarily focuses on release management strategies within the context of Continuous Delivery, including automation, build promotion, and deployment processes.",
    "level": "Secondary"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management using Team Foundation Server 2012 and related deployment strategies, with no clear or central discussion of BetaCodex.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management practices and tools within Team Foundation Server 2012, rather than analyzing trends.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses release management in detail but also touches on elements of continuous improvement and automation, which relate to ongoing learning and adaptation in software development.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 14.0,
    "reasoning": "The content focuses primarily on release management strategies and tools in Team Foundation Server 2012, with only a brief mention of issues and responsibilities related to deployment processes.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses release management using Team Foundation Server 2012 with minimal reference to Scrum principles or practices.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content focuses mainly on release management practices and tools within Team Foundation Server rather than explicitly discussing Agile Planning as a primary topic. Agile principles may be implied, but they are not the central theme.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management processes and tools in Team Foundation Server 2012, with no clear focus or mention of market share.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content is primarily focused on release management and deployment processes using Team Foundation Server 2012, with no substantial discussion on remote working or its practices.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content primarily focuses on release management, automation, and deployment processes within the context of Team Foundation Server, with a significant emphasis on the orchestration of automated tests during the deployment process.",
    "level": "Secondary"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is focused on release management strategies using Team Foundation Server 2012 and discusses various deployment techniques and automation tools rather than Kanban methods or principles.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "While the content primarily discusses release management and Team Foundation Server, it includes elements of coaching by emphasizing the role of professional development teams and the importance of collaboration and automation in software delivery.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses extensively on release management processes and tools rather than revenue per employee.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on release management using Team Foundation Server 2012, without any direct discussion or emphasis on backlog refinement.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 40,
    "non_ai_confidence": 10,
    "final_score": 31.0,
    "reasoning": "The content focuses primarily on release management processes and tools in relation to software development, with only a few mentions of leadership principles. It does not primarily discuss Evidence Based Leadership.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content heavily discusses release management strategies, deployment processes, and best practices for operational efficiency using Team Foundation Server 2012.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on release management practices using Team Foundation Server 2012, with only brief mentions of Agile concepts, thus it is not central to the topic.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses release management strategies and tools related to Team Foundation Server 2012, with a minor mention of processes commonly associated with Agile practices but does not focus on agile planning tools specifically.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of a professional development team in the context of release management, highlighting the need for potentially shippable quality outputs, which aligns with the principles of Minimum Viable Products.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "Content discusses aspects of release management and deployment processes which are relevant to change management, but primarily focuses on specific tools and workflows without an overarching theme of change management.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 49.0,
    "reasoning": "Content primarily focuses on release management strategies, which are critical aspects of agile practices, highlighting the importance of automation and collaboration in engineering teams, though it does not directly discuss agile transformation methodologies.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on release management practices and tools within Team Foundation Server 2012, with no significant discussion on customer feedback loops.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management processes and tools in Team Foundation Server 2012, with little to no discussion on transparency as a central theme.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily focuses on release management practices and tools specifically aimed at development teams using Team Foundation Server, discussing the responsibilities and processes integral to software development.",
    "level": "Secondary"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily discusses the release management process, focusing on improving delivery efficiency and quality, which directly relates to throughput in software development.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management using Team Foundation Server 2012, with a focus on deployment processes and automation, rather than on the concept of a Sprint Review.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses effective release management and deployment strategies, emphasizing the importance of creating quality output and improving processes, which aligns with strategic goals for software delivery and quality assurance.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on release management and deployment processes using Team Foundation Server, discussing automation, build promotion, and tools like Octopus and NuGet, which are central to deployment strategies.",
    "level": "Secondary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 40,
    "non_ai_confidence": 10,
    "final_score": 31.0,
    "reasoning": "While the content discusses aspects of release management and team responsibilities, it does not focus primarily on working agreements. Instead, it addresses deployment processes and tools.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management strategies using Team Foundation Server 2012 and does not centralize around the Lean Startup methodology.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 75,
    "non_ai_confidence": 50,
    "final_score": 68.0,
    "reasoning": "The content primarily discusses Team Foundation Server 2012, which is a Microsoft product related to Windows environments, emphasizing deployment and management practices within Windows-based development.",
    "level": "Secondary"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the professional development team’s responsibilities regarding output quality and readiness for deployment, but it is primarily focused on release management strategies and tools rather than explicitly defining the 'Definition of Ready' concept.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content focuses primarily on release management using Team Foundation Server 2012 and software deployment tools, with only a brief mention of the responsibilities of a professional development team.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the role of development teams in the context of release management and emphasizes their responsibilities; however, it focuses more on release management processes than Scrum team dynamics.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 55,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content discusses Team Foundation Server 2012 and mentions collaboration among teams but primarily focuses on release management processes rather than collaboration tools specifically.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses release management in software development, including deployment processes and automation, with an emphasis on efficiency and reducing the time from code commitment to production. Lead time is central to achieving these goals.",
    "level": "Secondary"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on release management and tools used in Team Foundation Server, with no clear emphasis on hypothesis-driven development.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "While the content primarily focuses on release management and tooling, it highlights the importance of team responsibilities and collaboration between engineering, operations, and configuration management teams. However, team collaboration is a secondary theme rather than the main topic.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily discusses release management, utilizing Team Foundation Server 2012, with a strong emphasis on the build and deployment processes that are essential to continuous integration practices.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving release management processes, emphasizing automation and professional development practices that contribute to agile scalability.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content discusses aspects of release management that directly pertain to the roles and responsibilities of professional development teams, emphasizing the quality and efficiency of team output as central themes.",
    "level": "Secondary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on release management and deployment processes in Team Foundation Server, with minimal mention of experimentation. Experimentation is not a clear, primary topic.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content discusses the overall release process, emphasizing the reduction of time from check-in to production, which aligns with the cycle time concept in software delivery.",
    "level": "Secondary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses release management practices aimed at improving efficiency and reducing waste, which aligns with Lean principles, but the primary focus is on specific tools and methodologies rather than Lean concepts themselves.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on release management and deployment practices within software engineering, emphasizing the role of Development Teams and automation in the engineering process.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "Content discusses release management processes and automation, addressing complexities in delivering software but primarily focuses on specific tools and practices rather than explicitly on complexity thinking as a central theme.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "The content primarily focuses on release management concepts, tools, and processes related to Team Foundation Server, which are central to Application Lifecycle Management.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 28.0,
    "reasoning": "The content primarily focuses on release management and deployment strategies within Team Foundation Server 2012, with discussions on automation and the responsibilities of development teams, rather than systems thinking as a central concept.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of release management using Team Foundation Server 2012, focusing on processes, tools, and best practices rather than personal experiences or perspectives.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "While the content primarily focuses on release management and deployment processes within Team Foundation Server, it implies the importance of accountability in ensuring quality and consistency in software delivery, particularly through the responsibilities of development and operations teams. This theme of accountability, although secondary to the main topic, is significant enough to warrant consideration.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on release management and the use of Team Foundation Server 2012 for deployment strategies, with no significant discussion of a miscellaneous topic.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 27.0,
    "reasoning": "The content discusses release management, deployment strategies, and the use of development tools but does not primarily focus on code complexity or coding practices.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses release management, which is a part of the agile product management process, but the primary focus is on Team Foundation Server 2012 and specific deployment technologies, making it a secondary theme.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on release management strategies and practices that are integral to software delivery, which is a core aspect of value stream management, particularly in optimizing the flow of value from development to production.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 85,
    "non_ai_confidence": 30,
    "final_score": 68.0,
    "reasoning": "The content primarily discusses release management strategies, the roles of development and operations teams, and emphasizes the importance of systematic processes in software delivery.",
    "level": "Secondary"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily discusses release management strategies, deployment processes, and tools relevant to product delivery.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "The content discusses deployment strategies and tools related to release management, emphasizing the importance of proper configuration and automation in deploying applications, which indicates a major focus on installation and configuration processes.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 82,
    "non_ai_confidence": 0,
    "final_score": 57.0,
    "reasoning": "Content primarily discusses release management practices and tools within the context of Agile development, emphasizing the need for automation, quality delivery, and minimizing risks, which are essential aspects of enterprise agility.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 65.0,
    "reasoning": "The content primarily discusses optimizing the release management process in software development, focusing on efficiency, automation, and minimizing waste, which aligns closely with Lean principles.",
    "level": "Secondary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses release management strategies, which indirectly relate to how teams might need to adapt to market demands for efficient software delivery. However, it primarily focuses on deployment processes rather than explicitly addressing adaptability to market changes.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses release management strategies and tools in software development, without a clear focus on decision theory.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 44.0,
    "reasoning": "The content primarily discusses release management processes and tools, with a secondary focus on automation in deployment, which relates to agility but is not primarily about AI or automation's impact in the context of agility.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses release management and the interaction between software engineering teams, configuration management, and operations, highlighting the importance of collaboration and processes. However, the focus is primarily on specific tools and practices rather than a deeper exploration of the sociotechnical systems concept.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content extensively discusses release management strategies, tools like Team Foundation Server 2012, NuGet, and Octopus, along with practical automation techniques for deployment, making it a primary focus.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses release management practices and tools in Team Foundation Server 2012, focusing on deployment and process optimization rather than discovery and learning as a central theme.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses various aspects of release management, automation, and consistency in deployments, which implies a focus on improving processes and possibly learning outcomes associated with those processes. However, it does not exclusively focus on metrics or a learning-centric theme.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses strategies and tools for improving the release management process, emphasizing automation and efficiency in deployment to enhance flow efficiency.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content focuses extensively on release management, automation, and improving software delivery processes, which are integral parts of achieving organisational agility.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content focuses primarily on release management strategies and tools related to software development rather than on psychological aspects of organizations or human behavior within them.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "While the content discusses tools and practices associated with release management, including references to Team Foundation Server and NuGet, it primarily focuses on workflows and strategies rather than being primarily about the products themselves.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses automation and strategies for release management aimed at delivering quality software efficiently.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses release management strategies and tools in Team Foundation Server 2012, with no clear focus on news or reviews.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content is primarily focused on release management strategies and practices, with no mention of events or presentations.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 52,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses release management and automation strategies that indirectly relate to resilience in software development processes. However, the primary focus is on technical aspects of managing software releases rather than a clear narrative on resilience and change.",
    "level": "Ignored"
  }
}
