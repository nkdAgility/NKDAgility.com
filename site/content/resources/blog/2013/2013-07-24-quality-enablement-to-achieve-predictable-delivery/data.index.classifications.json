{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which is relevant to Agile principles. It mentions the importance of acceptance criteria and the Definition of Done, which are key aspects of Agile product management. However, the primary focus is on quality assurance rather than directly addressing Agile methodologies or the role of the Product Owner, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-15T18:00:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability, with no clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable software delivery, which aligns with the principles of Evidence-Based Management. It highlights the need for empirical evidence in measuring quality and delivery predictability, touching on metrics like Definition of Done and Acceptance Criteria. However, while it mentions the need for data-driven decision-making, the primary focus is on quality assurance practices rather than a comprehensive exploration of EBM principles. The discussion lacks depth in terms of broader EBM concepts such as current value, unrealised value, and outcome management.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which relates to Lean principles of minimising waste and improving processes. However, it primarily focuses on software development practices rather than Lean methodologies specifically.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, rather than installation or configuration processes.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to Agile methodologies and practices that can enhance market adaptability. However, the primary focus is on quality assurance rather than directly addressing market adaptability strategies.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the interplay between quality enablement and predictable delivery, highlighting how organisational structures and practices impact software delivery outcomes. It addresses the importance of defining quality metrics, such as the Definition of Done and Acceptance Criteria, which are crucial for aligning technical practices with business goals. The discussion on team pressures and the need for clear communication reflects the social aspects of sociotechnical systems. However, while the content touches on these themes, it primarily focuses on technical practices without a deeper exploration of the broader sociotechnical interactions, which slightly limits its alignment with the category.",
    "level": "Secondary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses quality enablement in software delivery, which aligns with DevOps principles such as automation and shared accountability. However, it primarily focuses on quality management rather than the broader DevOps philosophy. While it mentions automation and the importance of defining quality metrics, it lacks a comprehensive exploration of DevOps culture, collaboration, and continuous improvement, which are central to the category.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T18:00:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and its impact on software delivery, referencing specific Agile concepts such as Definition of Done and Acceptance Criteria.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-15T18:00:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes, with a focus on Agile methodologies rather than decision-making processes in uncertain environments.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and how it impacts predictability, which relates to flow efficiency. However, the primary focus is on quality enablement rather than directly optimising work throughput.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to organisational practices and structures that support agility. However, it primarily focuses on software development processes rather than broader enterprise agility themes.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and its impact on predictability, which aligns with the principles of business agility. However, the primary focus is on quality enablement rather than broader business agility practices.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable software delivery, which aligns with the core themes of metrics and learning. It explicitly mentions the need for a 'Definition of Done' and 'Acceptance Criteria', which are metrics that can be used to measure quality. The discussion on how fluctuating quality affects delivery and customer satisfaction also ties into the importance of evidence-based decision-making. However, while the content touches on metrics, it does not delve deeply into techniques for collecting and analysing performance data or feedback loops, which slightly limits its depth in the category.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T18:00:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content primarily focuses on the importance of quality enablement in software delivery, discussing specific engineering practices such as Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment. These topics align closely with the principles of Technical Excellence, particularly in relation to ensuring code quality and reliability, as well as streamlining the deployment pipeline. The depth of discussion is substantial, providing detailed insights into how these practices can improve predictability and quality in software development. However, the content does not explicitly mention concepts like TDD or CI/CD, which slightly lowers the confidence score.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, but it primarily focuses on traditional management practices and does not engage deeply with complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T18:00:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery processes and quality assurance methodologies, with no clear focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the importance of quality enablement in achieving predictable software delivery, which is a core aspect of product delivery. It addresses methodologies such as Definition of Done and Acceptance Criteria, which are crucial for ensuring quality and predictability in the delivery process. The depth of discussion on how to improve quality and predictability through specific practices indicates a strong alignment with the category's themes. Overall, the content provides a comprehensive overview of the challenges and solutions related to product delivery, justifying a high confidence score.",
    "level": "Primary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T18:00:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and traditional software development practices, lacking a focus on decentralised, adaptive, or human-centric organisational design principles.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which relates to optimising processes and aligning with customer outcomes, but it primarily focuses on quality and delivery rather than the broader principles of Value Stream Management.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 36,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable delivery, which directly relates to value delivery principles. It highlights the need for clear definitions of quality, acceptance criteria, and automated processes, all of which are essential for iterative and continuous delivery of value. The depth of discussion on quality management and its impact on customer satisfaction aligns well with the core themes of value delivery, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-15T18:01:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability without specific reference to Azure DevOps services or tools.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-15T18:01:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery in software development, touching on interconnected factors like acceptance criteria and automated processes. However, it primarily focuses on linear problem-solving approaches and does not delve deeply into Systems Thinking principles or holistic analysis of organisational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which aligns with the principles of 1ES, but it primarily focuses on quality management rather than the integration and standardisation of engineering processes.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses quality enablement and predictable delivery, which are relevant to agile practices but does not explicitly mention the Agile Product Operating Model or its core principles. While it touches on aspects like acceptance criteria and definitions of done, which are important in agile methodologies, the primary focus is on quality assurance rather than the broader product-oriented mindset and operational frameworks of APOM.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to organisational agility through the need for adaptability and responsiveness in software development processes. However, the primary focus is on quality metrics rather than agility principles.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses quality enablement in the context of software delivery, which is relevant to Application Lifecycle Management (ALM). It mentions ALM assessments and touches on aspects like the Definition of Done and Acceptance Criteria, which are important in the development and deployment stages of the application lifecycle. However, while it aligns with some core themes of ALM, such as quality management and predictability in delivery, it lacks a comprehensive exploration of the entire lifecycle and governance practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and delivery predictability without a focus on the Daily Scrum event or its structure, roles, or practices.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 30,
    "final_score": 78.0,
    "reasoning": "The content discusses the Definition of Done (DoD) as a critical measure for quality in software development, explicitly stating its importance in achieving predictable delivery. It provides a clear definition of the DoD and its role in the development process, which aligns well with the core themes of the category. However, the overall focus is broader, addressing quality enablement and predictability in software delivery, which slightly dilutes the primary focus on the DoD itself. The depth of discussion on the DoD is moderate, with some detail provided, but it is part of a larger narrative about quality and delivery challenges.",
    "level": "Secondary"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "While the content primarily discusses quality enablement and predictable delivery, it touches on important aspects of technical practices such as Definition of Done, Acceptance Criteria, automated builds, and automated deployment. These topics are relevant to software craftsmanship and quality but are secondary to the main theme of project predictability.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on quality enablement and predictable software delivery, not on identifying customer needs or product feature definition.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable software delivery, which aligns closely with Continuous Delivery principles. It explicitly mentions key aspects such as the Definition of Done, Acceptance Criteria, and the role of automated builds and deployments, all of which are critical components of Continuous Delivery practices. The depth of discussion is substantial, providing detailed strategies for improving quality and predictability in software delivery, which are central themes in Continuous Delivery. Overall, the content is focused on enhancing delivery processes through quality measures, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of defining quality metrics and processes (like Definition of Done and Acceptance Criteria) which indirectly relates to setting strategic goals for improving predictability in software delivery. However, the primary focus is on operational tactics rather than long-term strategic objectives.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses quality in software delivery and its relation to predictability, which indirectly touches on the concept of lead time as it addresses the need for clear definitions and criteria that can help in making accurate predictions about delivery. However, lead time is not the primary focus of this content, which is more centered on quality and predictability rather than directly measuring lead time.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software delivery processes and quality assurance rather than on cultural aspects or the influence of organisational culture.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 30.0,
    "reasoning": "While the content discusses the importance of quality and acceptance criteria in relation to software delivery, it primarily focuses on the Definition of Done and the measurement of quality rather than explicitly defining the Definition of Ready. The category is not central to the content.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, focusing on practices such as definitions of done and acceptance criteria, which are related to operational management rather than the overarching management of a portfolio of projects.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of acceptance criteria and the Definition of Done, which are directly related to the Product Backlog. However, the primary focus is on quality enablement and predictability in software delivery rather than a comprehensive exploration of the Product Backlog itself. While it touches on backlog management, it does not delve deeply into techniques for backlog refinement or prioritisation, which are key topics in the category.",
    "level": "Secondary"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of factors like Definition of Done and Acceptance Criteria, which are relevant to Agile Planning but primarily focuses on quality and predictability rather than Agile methodologies per se.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on software delivery quality and agile methodologies rather than Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content mostly discusses quality enablement and predictable delivery, without a focus on mechanisms or processes for integrating customer feedback.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 87.0,
    "ai_mentions": 75.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in achieving predictable software delivery, which directly aligns with operational practices aimed at enhancing efficiency and delivery within Agile frameworks. It mentions specific techniques such as Definition of Done, Acceptance Criteria, and the role of automation in builds and deployments, all of which are key topics in operational practices. The depth of discussion is significant, providing actionable insights and strategies for improving quality and predictability in software delivery.",
    "level": "Primary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching on aspects like Definition of Done and Acceptance Criteria, which are relevant to Scrum practices. However, it lacks a direct focus on Scrum Team dynamics, roles, and collaboration, making it more of a general discussion on quality in software delivery rather than a specific exploration of Scrum Team effectiveness.",
    "level": "Secondary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement in software delivery, touching on concepts related to Agile practices such as Definition of Done and Acceptance Criteria, which are important in Agile frameworks. However, it primarily focuses on the technical aspects of quality in delivery rather than the broader Agile philosophy.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable delivery, which aligns with strategic approaches in Agile environments. It explicitly mentions concepts like Definition of Done and Acceptance Criteria, which are crucial for strategic alignment in Agile teams. The depth of discussion on how to improve predictability through quality measures indicates a strong focus on strategy, although it could benefit from a more explicit connection to broader strategic frameworks.",
    "level": "Secondary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and software delivery processes rather than directly addressing methodologies for validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses aspects of quality enablement and predictability in software delivery, which are relevant to Agile practices, especially regarding Definition of Done and acceptance criteria. However, the primary focus is on delivering quality rather than directly discussing broader Agile transformation strategies or methodologies.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the importance of quality in software delivery and processes related to Agile methodologies, but it does not focus on mentorship, coaching, or related themes essential for effective mentoring in Agile contexts.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality in software delivery and mentions automated builds and tests as part of the solution to improve predictability. However, while it touches on automated testing, it does not delve deeply into the principles or methodologies of automated testing itself, making it a secondary focus rather than a primary discussion.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable delivery, which directly relates to team performance in an Agile context. It mentions specific practices such as Definition of Done and Acceptance Criteria, which are crucial for enhancing team dynamics and productivity. The depth of discussion on how quality impacts team pressure and delivery timelines further supports its relevance to team performance. However, while it touches on Agile principles, it does not delve deeply into team collaboration or conflict resolution, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality in software delivery, which is closely related to the concept of Increment in Agile. It highlights the need for a Definition of Done and acceptance criteria, both of which are essential for ensuring that increments are potentially shippable and meet stakeholder expectations. However, while it touches on Agile principles, the primary focus is on quality enablement rather than the Increment itself, leading to a high but not perfect confidence score.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 30,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of acceptance criteria and its role in defining quality and predictability in software delivery, which aligns with ATDD principles. However, it primarily focuses on broader quality enablement and delivery predictability rather than a detailed exploration of ATDD as a collaborative development approach. The mention of acceptance criteria is significant but not the sole focus, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses quality enablement in software delivery, focusing on the importance of defining quality metrics such as Definition of Done and Acceptance Criteria. It aligns well with key topics in software development, particularly in relation to Agile practices and quality assurance. The depth of discussion is significant, providing actionable insights and methodologies for improving predictability in software delivery, which is central to effective software development practices.",
    "level": "Primary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "Content discusses the definition of done and acceptance criteria, which relates to Agile principles but primarily focuses on quality enablement and predictability in delivery, making Agile a secondary theme.",
    "level": "Tertiary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses concepts like Definition of Done and Acceptance Criteria, which are relevant to Scrum practices, but it primarily focuses on quality enablement and delivery predictability rather than the Scrum framework itself.",
    "level": "Tertiary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and software delivery predictability, primarily discussing concepts of the Iron Triangle, Definition of Done, acceptance criteria, and automated processes. It does not address modern source control or version control practices.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable delivery, which aligns with the principles of empirical process control by emphasising the need for measurable criteria (Definition of Done and Acceptance Criteria) to inform decision-making. It highlights the role of transparency in understanding what needs to be completed for delivery and the impact of quality on predictability, which are core themes of the category. However, while it touches on empirical process control concepts, it does not delve deeply into inspection and adaptation practices or provide case studies, which slightly limits its depth of discussion.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality assurance practices and the implications for software delivery rather than directly discussing the Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses quality enablement and delivery predictability but does not specifically address Azure Boards or its features related to Agile project management.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement, software delivery processes, and the Iron Triangle, with no clear focus on collaboration tools or enhancing team communication.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the need for quality enablement and predictability in software delivery, which touches on aspects of organisational change, particularly in the context of transforming practices within a development organisation. However, it primarily focuses on software development practices and quality control rather than broader organisational change strategies or frameworks.",
    "level": "Tertiary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery quality and management practices rather than Lean Startup methodologies or principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and its impact on predictability, including elements like automated builds and deployments which relate to frequent releases, but the primary focus is on establishing quality and predictability rather than frequent release practices themselves.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery which indirectly relates to customer satisfaction; however, customer satisfaction is not the primary focus of the content.",
    "level": "Tertiary"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality enablement and its impact on predictable delivery, which indirectly relates to evidence-based leadership through the emphasis on measurable quality and defined criteria. However, it lacks direct references to evidence-based practices or leadership principles, focusing more on technical aspects of software development and quality assurance. While it touches on the need for empirical evidence in predicting delivery, it does not delve deeply into leadership decision-making or organisational improvements based on data-driven approaches.",
    "level": "Secondary"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and software delivery without any direct reference to psychological safety or its principles.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 35,
    "ai_depth": 32,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the importance of quality enablement in software delivery, focusing on principles of software craftsmanship, such as the Definition of Done and Acceptance Criteria. It aligns well with the core themes of engineering excellence by addressing best practices in coding standards and quality assurance. The depth of discussion is significant, providing detailed strategies for improving predictability and quality in software development, which are central to the category.",
    "level": "Primary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and predictable delivery in software development, without discussion on revenue or productivity metrics related to employees.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability without addressing asynchronous development principles or collaboration strategies.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "Content discusses dependencies in software delivery quality and involves systems thinking regarding organisational processes. However, the primary focus is on software development practices rather than overarching organisational dynamics.",
    "level": "Tertiary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses quality in software delivery and its impact on customer satisfaction, which is a secondary theme related to customer retention, but the primary focus is on delivery processes and quality management, not specifically on strategies for retaining customers.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content discusses practical strategies for improving software delivery quality, which aligns closely with pragmatic thinking in Agile and DevOps contexts. It explicitly mentions the importance of defining quality through measures like Definition of Done and Acceptance Criteria, demonstrating a clear application of real-world problem-solving techniques. The depth of discussion is substantial, providing detailed methods to enhance predictability in delivery, which reflects a strong understanding of navigating complexity in project management.",
    "level": "Primary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of acceptance criteria and the definition of done, which are critical aspects of backlog refinement, but the primary focus is on quality control and predictable delivery rather than on the backlog refinement process itself.",
    "level": "Tertiary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of quality in software delivery and how it impacts predictability, which indirectly relates to the Ability to Innovate. However, it primarily focuses on quality assurance practices rather than directly addressing innovation capabilities or Evidence-Based Management principles. While it mentions the need for empirical evidence and measurement, it lacks a strong emphasis on fostering a culture of innovation or specific frameworks for measuring innovation capabilities.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and quality control rather than employee engagement or motivation-related topics.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement for predictable software delivery, focusing on definitions of done and acceptance criteria rather than Lean principles or waste reduction specific to Lean Thinking.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality in software delivery and mentions automated builds and automated tests as part of the solution to improve predictability. However, the primary focus is on quality enablement and delivery processes rather than a detailed exploration of test automation principles, frameworks, or best practices. While there are relevant mentions of automation, they are not the central theme of the discussion.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes rather than entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the importance of quality in software delivery, focusing on concepts such as Definition of Done and Acceptance Criteria, which are crucial for ensuring working software. It aligns well with the category by addressing the need for measurable quality standards and the impact of quality on predictability in delivery. The depth of discussion is significant, providing actionable insights and best practices, although it could benefit from more explicit examples of working software in practice.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses concepts related to backlog management, such as Definition of Done and Acceptance Criteria, which are key elements in Agile planning but primarily focuses on quality in software delivery.",
    "level": "Tertiary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching on aspects of Continuous Integration such as automated builds and automated deployment. However, the primary focus is on quality management and project delivery rather than CI principles. While it mentions CI-related practices, it does not delve deeply into CI as a standalone topic, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and predictable software delivery, which does not align with the market share category.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching upon aspects such as team pressure, acceptance criteria, and development processes. However, it primarily focuses on technical practices rather than leadership roles, making Agile Leadership a secondary theme.",
    "level": "Tertiary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "While the content discusses the importance of quality and predictability in software delivery, it primarily focuses on process improvements and implementation details rather than on interpreting complex situations or sensemaking in decision-making contexts.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses software delivery predictability and quality enablement, which are not directly related to Site Reliability Engineering principles. While there are mentions of automation and quality assurance practices that could tangentially connect to reliability, the main focus is on development processes rather than SRE practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictability in software delivery rather than hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses aspects of quality enablement and how specific methodologies (like Definition of Done and Acceptance Criteria) can affect the predictability of software delivery. While it touches upon decision-making elements within these practices, the primary focus is on improving quality and delivery processes rather than structured decision-making itself.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses aspects of quality enablement and predictability in software delivery, touching on principles such as defining quality and acceptance criteria, which align with Lean principles aimed at minimizing waste and maximizing value. However, the primary focus appears to be on quality management rather than Lean specifically, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses quality enablement in the context of predictable software delivery, which aligns closely with release management principles. It mentions key aspects such as the Definition of Done, Acceptance Criteria, and the importance of automated builds and deployments, all of which are crucial for effective release management. The discussion is detailed and provides actionable insights, indicating a strong focus on the release process. However, while it touches on release management, it also delves into broader quality assurance topics, which slightly dilutes its primary focus.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 50.0,
    "reasoning": "The content discusses the role of the Product Owner in defining acceptance criteria and collaborating with the Development Team, making it a major but secondary theme.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses quality in software delivery and the implications of quality on predictability, which relates to cycle time as it emphasizes the necessity of detailed definitions and criteria to improve delivery predictability, suggesting a secondary theme regarding cycle time metrics.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses quality enablement and its impact on software delivery, touching on concepts like automated builds and deployments, which are relevant to Azure Pipelines. However, it lacks a direct focus on Azure Pipelines specifically, and the discussion is more general about software quality and delivery processes rather than detailing Azure's CI/CD practices or pipeline configurations. Therefore, while there are relevant mentions, they are not the primary focus of the content.",
    "level": "Tertiary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality in software delivery and mentions automated deployment as a means to improve predictability and quality. While it does touch on aspects related to deployment frequency, such as the need for automated builds and deployments, the primary focus is on quality assurance rather than the optimisation of deployment intervals. The discussion on how quality impacts delivery schedules and the need for a clear definition of done aligns with the category, but it does not delve deeply into strategies specifically aimed at increasing deployment frequency or measuring it. Therefore, while there is relevant content, it is not the primary focus.",
    "level": "Secondary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses improving predictability in software delivery and establishing quality measures, but it does not clearly focus on Change Management principles or how to navigate organizational transformation in an Agile context.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "While the content primarily discusses quality enablement and predictable delivery in software development, it touches on the importance of collaboration between the Development Team, Product Owner, and the Business, which relates to team dynamics and communication. However, the focus is more on individual processes and criteria than on direct team collaboration techniques.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 60.0,
    "reasoning": "The content discusses the importance of acceptance criteria, which aligns with BDD principles. However, it focuses more on quality enablement and traditional delivery processes rather than being solely about BDD practices.",
    "level": "Tertiary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement in the context of predictable software delivery, which relates to the strategic use of digital technologies and methodologies in software development. However, the primary focus is on quality control processes and measurement rather than a broader strategic view of digital transformation as a whole.",
    "level": "Tertiary"
  },
  "Minimum Viable Product": {
    "category": "MVP",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and predictable software delivery, rather than Minimum Viable Product concepts.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses concepts related to software delivery processes, quality management, and Agile practices rather than focusing on system configuration or related technical setups.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 20,
    "non_ai_confidence": 10,
    "final_score": 20.0,
    "reasoning": "The content primarily focuses on quality enablement and delivery processes in software development, discussing technical measures and challenges rather than product strategy frameworks, vision formulation, or market analysis.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "Content discusses the importance of quality in software delivery and the role of Development Teams, which ties into technical leadership concepts like defining quality measures and acceptance criteria. However, the focus is more on quality enablement rather than direct technical leadership practices or agile methodologies.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses predictability in delivery and the importance of having clear definitions and acceptance criteria, which relates to estimation; however, the primary focus is on quality and the impact of pressure on development teams rather than estimation techniques or collaborative practices.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery without a central focus on cross-functional teams.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 30,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of defining quality and acceptance criteria, which aligns with Test First Development principles. However, it lacks a direct focus on Test First practices like TDD or ATDD, and while it mentions automated testing, it does not delve deeply into the specifics of Test First methodologies. The overall emphasis is more on quality enablement and predictability rather than a thorough exploration of Test First Development.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses quality enablement and software delivery processes, which are not specific to or primarily about the Windows operating system.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses aspects like automated builds and automated deployment, which are related to deployment strategies. However, it primarily focuses on quality enablement and predictability in software delivery rather than deployment methodologies.",
    "level": "Tertiary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality assurance practices, delivery processes, and team-level issues, without discussing Agile scaling frameworks, enterprise-level strategies, or cross-team collaboration, which are essential for the 'Large Scale Agility' category.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and factors affecting software delivery predictability without addressing team motivation directly.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content discusses quality enablement and predictable delivery in software development, focusing on development processes without any specific reference to remote working or Agile practices in a distributed environment.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality enablement and predictable delivery rather than discussing growth mindset, knowledge sharing, or practices related to continuous learning in Agile or DevOps environments.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality issues in software delivery and suggests techniques to improve predictability and reduce bugs, making troubleshooting a secondary theme.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the importance of quality in software delivery and does not focus on experimentation or hypothesis-driven methodologies.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable software delivery, touching on concepts like Definition of Done and Acceptance Criteria, which are relevant to Scrum practices. However, it does not explicitly focus on the role of the Scrum Master or their responsibilities, making it more of a secondary mention rather than a primary focus. The depth of discussion on Scrum-related practices is present, but the overall emphasis is on quality and delivery rather than the Scrum Master’s role in facilitating these processes.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of setting clear criteria and definitions for quality, which relates to transparency in work expectations and deliverables. However, the primary focus is on quality enablement and predictability rather than transparency itself.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, focusing on definitions of done and acceptance criteria, rather than working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on quality enablement in software delivery and the importance of defining quality measures, rather than the practice of coaching or supporting individuals and teams in their growth and development.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content discusses quality enablement in software delivery, focusing on the importance of defining quality through concepts like Definition of Done and Acceptance Criteria, which are closely aligned with Agile engineering practices. It also mentions automation in builds and deployments, which are key aspects of CI/CD. The depth of discussion is substantial, providing specific strategies to improve predictability and quality in software development, thus aligning well with the core themes of the category.",
    "level": "Primary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content mentions issues of software quality and delivery predictability, which can relate to technical debt in terms of how accumulated quality issues affect development processes. However, it predominantly focuses on quality management rather than explicitly discussing the management of technical debt itself.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality in software delivery, emphasizing definitions, criteria, and processes, which do not specifically pertain to Sprint Review discussions or the Scrum framework.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality in software delivery, which is a critical aspect of product management. It addresses the need for clear definitions and acceptance criteria, aligning with the strategic aspects of product management. However, the focus is more on technical implementation details rather than broader product management strategies, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and its relationship with software delivery predictability, focusing on traditional metrics and processes rather than self-organization principles or team autonomy.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement for predictable delivery in software development and touches upon practices such as 'Definition of Done' and 'Acceptance Criteria' which align with Agile principles. However, the primary focus is more on quality management and delivery predictability rather than a comprehensive exploration of Agile frameworks themselves.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses elements related to quality enablement and predictability in software delivery, which ties into Agile principles like Definition of Done and Acceptance Criteria, but it primarily focuses on technical practices rather than overarching Agile strategy.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and delivery predictability in software development, without discussing Azure Repos or its features directly.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable delivery, which directly relates to forecasting in Agile and Scrum. It highlights the need for empirical evidence to make accurate predictions about delivery timelines and addresses the impact of quality on predictability. The mention of 'Definition of Done' and 'Acceptance Criteria' aligns with forecasting methodologies, as these elements are crucial for establishing a baseline for future predictions. However, while the content touches on forecasting, it primarily focuses on quality management rather than providing in-depth techniques or practices specifically for forecasting, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and how to measure and maintain it. While it touches on aspects like predictability and definitions of done, it primarily focuses on improving quality rather than strictly adhering to Lean principles such as waste reduction and customer value. Lean concepts such as continuous improvement are indirectly related but not the central theme.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictability in software delivery, rather than identifying or analyzing trends in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of defining quality measures like Definition of Done and acceptance criteria, which relates to accountability in software delivery. However, it primarily focuses on quality assurance and delivery predictability rather than accountability as a central theme.",
    "level": "Tertiary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses quality in relation to predictable delivery and its impact on software development, which is related to throughput in terms of understanding and measuring work completion rates, though it primarily focuses on quality management and not throughput directly.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses quality enablement and the importance of definitions like Definition of Done and Acceptance Criteria, which are relevant to TDD principles. However, it does not explicitly mention TDD or the Red-Green-Refactor cycle, and the focus is more on general quality assurance and delivery predictability rather than the specific practices of TDD. The depth of discussion on related concepts like automated testing is present, but it lacks a direct focus on TDD itself.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T16:15:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily focuses on quality enablement and predictable software delivery, which are more technical aspects of software development rather than discussions on social technologies. While it touches on team dynamics and the importance of clear definitions and criteria, it lacks a strong emphasis on collaboration, decision-making, or the broader social frameworks that underpin social technologies. The depth of discussion on quality measures is significant, but it does not sufficiently align with the core themes of social technologies.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:17:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, with a focus on Agile practices and team dynamics, rather than the concept of Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:17:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without any mention of AI or its integration within Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 68.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 35,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses quality enablement in software delivery, touching on concepts relevant to Scrum, such as the Definition of Done and Acceptance Criteria, which are integral to the Scrum framework. However, it does not explicitly mention Scrum roles or events, and the focus is more on quality assurance rather than Scrum practices. The discussion aligns with Scrum principles of transparency and empirical process control but lacks depth in exploring the Scrum framework itself.",
    "level": "Secondary"
  },
  "Shift Left Strategy": {
    "category": "Shift Left Strategy",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which aligns with the Shift-Left Strategy by emphasising the importance of defining quality early in the development process. It mentions key concepts like Definition of Done and Acceptance Criteria, which are relevant to integrating quality measures earlier. However, the primary focus is on quality management rather than explicitly on the Shift-Left Strategy, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable software delivery, which aligns with the principles of Continuous Improvement. It highlights the need for empirical evidence, such as a Definition of Done and Acceptance Criteria, to enhance processes and reduce bugs. However, while it touches on Continuous Improvement concepts, the primary focus is on quality assurance rather than a broader discussion of Continuous Improvement practices. The depth of discussion on Continuous Improvement techniques and strategies is somewhat limited, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses quality enablement and its importance for predictable software delivery, which indirectly relates to the concept of Common Goals. However, it primarily focuses on quality assurance techniques and does not explicitly address shared objectives or alignment within Agile and DevOps frameworks. While it touches on the need for a Definition of Done and acceptance criteria, these are more tactical discussions rather than strategic alignment with overarching goals. Therefore, the confidence score reflects a moderate alignment with the category, but it lacks depth in discussing Common Goals specifically.",
    "level": "Secondary"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 35,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable software delivery, which directly relates to competence in Agile and DevOps. It highlights the need for clear definitions of quality, such as the Definition of Done and Acceptance Criteria, which are essential for maintaining trust and delivering quality outcomes. The depth of discussion on strategies to improve quality and the impact of competence on delivery timelines further supports its alignment with the category. However, while competence is a significant theme, the primary focus is on quality enablement rather than competence itself, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T15:55:08",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content primarily focuses on quality enablement and predictable software delivery, discussing strategies to improve development processes. While it touches on aspects of accountability and the need for clear definitions (like Definition of Done and Acceptance Criteria), it does not explicitly address the concept of Agentic Agility or the intentional shaping of outcomes through autonomy and adaptability. The discussion lacks depth in exploring the interplay between human and AI capabilities, which is central to the category.",
    "level": "Ignored"
  }
}
