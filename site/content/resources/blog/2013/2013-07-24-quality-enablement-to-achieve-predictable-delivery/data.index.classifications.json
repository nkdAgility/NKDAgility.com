{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-15T18:00:10",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of quality in software delivery, which is relevant to Agile practices, particularly in relation to the roles of the Product Owner and the Development Team. However, the primary focus is on quality enablement and traditional software development practices rather than Agile product management specifically.",
    "level": "Secondary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-15T18:00:11",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses practical techniques for improving software delivery quality, including the Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment, which are all relevant to Agile and DevOps practices.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-15T18:00:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability, with no clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-15T18:00:15",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses the importance of defining quality metrics and acceptance criteria to improve predictability in software delivery, aligning with the principles of Evidence-Based Management.",
    "level": "Secondary"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality in software delivery and its relationship to predictability, touching on aspects of code quality and development processes. However, it primarily focuses on project management and delivery rather than the complexities of code itself.",
    "level": "Tertiary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-15T18:00:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, focusing on project management aspects rather than discovery and learning methodologies.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automation in the context of software delivery and quality assurance, which aligns with Agile practices, but does not primarily focus on AI or its integration within Agile frameworks.",
    "level": "Tertiary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which relates to Lean principles of minimising waste and improving processes. However, it primarily focuses on software development practices rather than Lean methodologies specifically.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-15T18:00:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, rather than installation or configuration processes.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of clear definitions and criteria for quality in software delivery, which relates to accountability within teams. However, the primary focus is on quality enablement and predictability rather than transparency and accountability as central themes.",
    "level": "Tertiary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to Agile methodologies and practices that can enhance market adaptability. However, the primary focus is on quality assurance rather than directly addressing market adaptability strategies.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-15T18:00:31",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the interplay between organisational practices and software delivery quality, highlighting the impact of team dynamics and organisational structures on predictability in delivery. However, it primarily focuses on technical practices and quality measures, making the sociotechnical aspect a secondary theme.",
    "level": "Secondary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of quality enablement and predictability in software delivery, which relates to organisational resilience. However, the primary focus is on technical implementations rather than broader strategies for resilience and change.",
    "level": "Tertiary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-15T18:00:34",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable software delivery, touching on automation in builds and deployments, which are relevant to DevOps practices. However, the primary focus is on quality management rather than a comprehensive exploration of DevOps principles.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T18:00:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and its impact on software delivery, referencing specific Agile concepts such as Definition of Done and Acceptance Criteria.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-15T18:00:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes, with a focus on Agile methodologies rather than decision-making processes in uncertain environments.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-15T18:00:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of quality in software delivery and how it impacts predictability, which relates to flow efficiency. However, the primary focus is on quality enablement rather than directly optimising work throughput.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-15T18:00:46",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the interplay between quality enablement, team dynamics, and the processes involved in software delivery, highlighting the importance of clear definitions and acceptance criteria in Agile environments.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to organisational practices and structures that support agility. However, it primarily focuses on software development processes rather than broader enterprise agility themes.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of quality in software delivery and its impact on predictability, which aligns with the principles of business agility. However, the primary focus is on quality enablement rather than broader business agility practices.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-15T18:00:50",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of defining quality metrics, such as Definition of Done and Acceptance Criteria, to achieve predictable software delivery, which aligns with evidence-based decision-making and continuous improvement principles.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T18:00:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-15T18:00:53",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in software delivery, focusing on engineering practices such as Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment, which are all relevant to technical excellence.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, but it primarily focuses on traditional management practices and does not engage deeply with complexity science or its principles.",
    "level": "Quaternary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T18:00:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery processes and quality assurance methodologies, with no clear focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-15T18:00:57",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in achieving predictable software delivery, focusing on methodologies and practices that directly relate to product delivery, such as Definition of Done, Acceptance Criteria, and automated processes.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T18:00:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and traditional software development practices, lacking a focus on decentralised, adaptive, or human-centric organisational design principles.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which relates to optimising processes and aligning with customer outcomes, but it primarily focuses on quality and delivery rather than the broader principles of Value Stream Management.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-15T18:01:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-15T18:01:02",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses strategies for improving quality in software delivery, which directly aligns with value delivery principles, including the importance of definitions of done, acceptance criteria, and automated processes to enhance predictability and customer satisfaction.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-15T18:01:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability without specific reference to Azure DevOps services or tools.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-15T18:01:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the interconnectedness of quality, delivery, and team dynamics in software development, which aligns with Systems Thinking principles. However, it primarily focuses on quality enablement and delivery predictability rather than a comprehensive exploration of Systems Thinking itself.",
    "level": "Tertiary"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which aligns with the principles of 1ES, but it primarily focuses on quality management rather than the integration and standardisation of engineering processes.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which are relevant to Agile principles, but it primarily focuses on quality management rather than the broader Agile Product Operating Model.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to organisational agility through the need for adaptability and responsiveness in software development processes. However, the primary focus is on quality metrics rather than agility principles.",
    "level": "Tertiary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-15T18:01:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without focusing on news or reviews related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-15T18:01:13",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses quality enablement in the context of software delivery, focusing on aspects such as Definition of Done, Acceptance Criteria, and automated processes, which are integral to Application Lifecycle Management.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of quality in software delivery, including the Definition of Done and Acceptance Criteria, which are relevant to Scrum practices, but the primary focus is on quality enablement rather than Scrum itself.",
    "level": "Tertiary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and delivery predictability without a focus on the Daily Scrum event or its structure, roles, or practices.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 75.0,
    "reasoning": "The content discusses the Definition of Done (DoD) as a measure of quality and emphasizes its importance for predictable software delivery, making it a primary topic.",
    "level": "Secondary"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "While the content primarily discusses quality enablement and predictable delivery, it touches on important aspects of technical practices such as Definition of Done, Acceptance Criteria, automated builds, and automated deployment. These topics are relevant to software craftsmanship and quality but are secondary to the main theme of project predictability.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on quality enablement and predictable software delivery, not on identifying customer needs or product feature definition.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses the importance of quality in software delivery and highlights practices such as definition of done, acceptance criteria, automated builds, and automated deployment, which are central to Continuous Delivery principles.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of defining quality metrics and processes (like Definition of Done and Acceptance Criteria) which indirectly relates to setting strategic goals for improving predictability in software delivery. However, the primary focus is on operational tactics rather than long-term strategic objectives.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality in software delivery and its relation to predictability, which indirectly touches on the concept of lead time as it addresses the need for clear definitions and criteria that can help in making accurate predictions about delivery. However, lead time is not the primary focus of this content, which is more centered on quality and predictability rather than directly measuring lead time.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software delivery processes and quality assurance rather than on cultural aspects or the influence of organisational culture.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 29.0,
    "reasoning": "While the content discusses the importance of quality and acceptance criteria in relation to software delivery, it primarily focuses on the Definition of Done and the measurement of quality rather than explicitly defining the Definition of Ready. The category is not central to the content.",
    "level": "Quaternary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, focusing on practices such as definitions of done and acceptance criteria, which are related to operational management rather than the overarching management of a portfolio of projects.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 70,
    "non_ai_confidence": 20,
    "final_score": 65.0,
    "reasoning": "While the content primarily discusses quality enablement and predictable delivery, it touches on key aspects of the Product Backlog, specifically around acceptance criteria and definitions of done, which are crucial for backlog items. However, the overall focus is more on quality management rather than the Product Backlog itself.",
    "level": "Secondary"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of factors like Definition of Done and Acceptance Criteria, which are relevant to Agile Planning but primarily focuses on quality and predictability rather than Agile methodologies per se.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on software delivery quality and agile methodologies rather than Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content mostly discusses quality enablement and predictable delivery, without a focus on mechanisms or processes for integrating customer feedback.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 76.0,
    "reasoning": "The content discusses practical measures such as the Definition of Done, Acceptance Criteria, and Automated Builds and Deployments that are crucial for enhancing quality and predictability in software delivery, directly aligning with the key operational practices in Agile methodologies.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the roles and responsibilities related to quality in software delivery, specifically mentioning the Development Team and the importance of acceptance criteria and Definition of Done, which align with Scrum principles.",
    "level": "Tertiary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement in software delivery, touching on concepts related to Agile practices such as Definition of Done and Acceptance Criteria, which are important in Agile frameworks. However, it primarily focuses on the technical aspects of quality in delivery rather than the broader Agile philosophy.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the importance of quality enablement in achieving predictable delivery, focusing on aspects such as the Definition of Done, acceptance criteria, and automation, which are strategies for improving delivery processes. However, the primary focus is more on quality assurance and problem-solving rather than a central strategic theme.",
    "level": "Secondary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on quality enablement and software delivery processes rather than directly addressing methodologies for validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of quality enablement and predictability in software delivery, which are relevant to Agile practices, especially regarding Definition of Done and acceptance criteria. However, the primary focus is on delivering quality rather than directly discussing broader Agile transformation strategies or methodologies.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the importance of quality in software delivery and processes related to Agile methodologies, but it does not focus on mentorship, coaching, or related themes essential for effective mentoring in Agile contexts.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of automated builds, automated acceptance tests, and maintaining quality through automated processes, which are central to the principles of automated testing.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses quality enablement in software delivery, focusing on practices like Definition of Done and Acceptance Criteria, which are relevant to enhancing team performance in an Agile context. While it primarily addresses quality and delivery predictability, it connects well to team dynamics and methodologies.",
    "level": "Secondary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses quality enablement in software delivery, mentioning the Definition of Done and acceptance criteria, which are closely related to ensuring that increments of software are shippable and valuable. However, the primary focus is on quality and predictability rather than the concept of Increment itself.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 75.0,
    "reasoning": "The content extensively discusses the importance of acceptance criteria, collaboration between teams, and how defining a clear definition of done can lead to better quality assurance and predictability in software delivery, which are central tenets of ATDD.",
    "level": "Secondary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "Content primarily discusses quality enablement in software development processes, with specific mentions of definitions of done, acceptance criteria, and automated testing and deployment, all of which are critical practices in the software development lifecycle.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "Content focuses on quality enablement in software delivery, discussing the importance of Definition of Done and Acceptance Criteria, which are central to Agile practices.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "Content discusses the definition of done and acceptance criteria, which relates to Agile principles but primarily focuses on quality enablement and predictability in delivery, making Agile a secondary theme.",
    "level": "Tertiary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts like Definition of Done and Acceptance Criteria, which are relevant to Scrum practices, but it primarily focuses on quality enablement and delivery predictability rather than the Scrum framework itself.",
    "level": "Tertiary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and software delivery predictability, primarily discussing concepts of the Iron Triangle, Definition of Done, acceptance criteria, and automated processes. It does not address modern source control or version control practices.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of defining standards such as Definition of Done and Acceptance Criteria, which are key elements of empirical process control. It emphasizes the need for measurable quality to improve predictability and addresses the role of feedback and adaptation in software delivery, aligning it with empirical process principles. However, the primary focus seems to be on quality enablement and predictability rather than on empirical process control itself.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality assurance practices and the implications for software delivery rather than directly discussing the Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses quality enablement and delivery predictability but does not specifically address Azure Boards or its features related to Agile project management.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement, software delivery processes, and the Iron Triangle, with no clear focus on collaboration tools or enhancing team communication.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for quality enablement and predictability in software delivery, which touches on aspects of organisational change, particularly in the context of transforming practices within a development organisation. However, it primarily focuses on software development practices and quality control rather than broader organisational change strategies or frameworks.",
    "level": "Tertiary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery quality and management practices rather than Lean Startup methodologies or principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of quality in software delivery and its impact on predictability, including elements like automated builds and deployments which relate to frequent releases, but the primary focus is on establishing quality and predictability rather than frequent release practices themselves.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of quality in software delivery which indirectly relates to customer satisfaction; however, customer satisfaction is not the primary focus of the content.",
    "level": "Tertiary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, without a clear focus on scaling Scrum practices or frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-15T22:06:42",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of setting measurable standards (like Definition of Done and Acceptance Criteria) to achieve predictable software delivery, which implies using empirical evidence to improve leadership and decision-making processes. However, it mainly revolves around quality management and software delivery practices rather than explicitly focusing on leadership decisions or frameworks typically associated with evidence-based leadership.",
    "level": "Secondary"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and software delivery without any direct reference to psychological safety or its principles.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 36.0,
    "reasoning": "The content discusses quality enablement in the context of software delivery but primarily focuses on team-level practices and the definition of done, without delving into scaling agility at an organizational level or frameworks.",
    "level": "Quaternary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of quality in software delivery, including best practices like Definition of Done, Acceptance Criteria, and the role of automated builds and deployments, which all align closely with the principles of software craftsmanship and continuous improvement in engineering processes.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and predictable delivery in software development, without discussion on revenue or productivity metrics related to employees.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability without addressing asynchronous development principles or collaboration strategies.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "Content discusses dependencies in software delivery quality and involves systems thinking regarding organisational processes. However, the primary focus is on software development practices rather than overarching organisational dynamics.",
    "level": "Tertiary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality in software delivery and its impact on customer satisfaction, which is a secondary theme related to customer retention, but the primary focus is on delivery processes and quality management, not specifically on strategies for retaining customers.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses practical strategies for improving software delivery predictability through quality enablement, focusing on the importance of well-defined processes like the Definition of Done and Acceptance Criteria within an Agile context.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of acceptance criteria and the definition of done, which are critical aspects of backlog refinement, but the primary focus is on quality control and predictable delivery rather than on the backlog refinement process itself.",
    "level": "Tertiary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses aspects of quality enablement and metrics for achieving predictable delivery, which can relate to innovation in terms of quality improvement and process enhancement. However, it primarily focuses on quality measurement rather than a broader ability to innovate, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 70,
    "non_ai_confidence": 20,
    "final_score": 65.0,
    "reasoning": "The content discusses quality enablement in software delivery, emphasizing the importance of acceptance criteria and definitions of done, which are relevant to Scrum practices. However, it primarily focuses on quality control and delivery predictability rather than the Scrum framework itself or Scrum-specific roles and ceremonies.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality assurance practices and strategies to improve software delivery predictability, without clear reference to scaling Agile methodologies or coordinating multiple teams.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and quality control rather than employee engagement or motivation-related topics.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement for predictable software delivery, focusing on definitions of done and acceptance criteria rather than Lean principles or waste reduction specific to Lean Thinking.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses aspects of quality enablement in software delivery and mentions automated builds and automated tests as part of the process to improve quality and predictability. While testing automation is a significant part of the discussion, it is not the primary focus; the main emphasis is on the overall quality management and processes in software development.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes rather than entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses quality enablement, definitions of done, acceptance criteria, and automated processes, all of which align closely with the delivery and assurance of high-quality working software.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to backlog management, such as Definition of Done and Acceptance Criteria, which are key elements in Agile planning but primarily focuses on quality in software delivery.",
    "level": "Tertiary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the importance of automated builds and automated deployment as part of achieving quality and predictability in software delivery, which are key components of Continuous Integration practices. However, the primary focus is on broader quality management and delivery predictability rather than solely on CI.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and predictable software delivery, which does not align with the market share category.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching upon aspects such as team pressure, acceptance criteria, and development processes. However, it primarily focuses on technical practices rather than leadership roles, making Agile Leadership a secondary theme.",
    "level": "Tertiary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 36.0,
    "reasoning": "While the content discusses the importance of quality and predictability in software delivery, it primarily focuses on process improvements and implementation details rather than on interpreting complex situations or sensemaking in decision-making contexts.",
    "level": "Quaternary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses software delivery predictability and quality enablement, which are not directly related to Site Reliability Engineering principles. While there are mentions of automation and quality assurance practices that could tangentially connect to reliability, the main focus is on development processes rather than SRE practices.",
    "level": "Quaternary"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement and predictability in software delivery rather than hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of quality enablement and how specific methodologies (like Definition of Done and Acceptance Criteria) can affect the predictability of software delivery. While it touches upon decision-making elements within these practices, the primary focus is on improving quality and delivery processes rather than structured decision-making itself.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of quality enablement and predictability in software delivery, touching on principles such as defining quality and acceptance criteria, which align with Lean principles aimed at minimizing waste and maximizing value. However, the primary focus appears to be on quality management rather than Lean specifically, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the importance of quality in software delivery, emphasizing the need for a Definition of Done, acceptance criteria, automated builds, and automated deployment—components that are relevant to release management practices.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the role of the Product Owner in defining acceptance criteria and collaborating with the Development Team, making it a major but secondary theme.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality in software delivery and the implications of quality on predictability, which relates to cycle time as it emphasizes the necessity of detailed definitions and criteria to improve delivery predictability, suggesting a secondary theme regarding cycle time metrics.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses automated builds and automated deployments, which are relevant to Azure Pipelines. However, the primary focus is on quality enablement and predictability in software delivery, making Azure Pipelines a secondary theme.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of automated deployments as part of achieving predictable delivery, which relates to deployment frequency. However, the primary focus is on quality and predictability rather than the optimization of deployment intervals.",
    "level": "Secondary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 36.0,
    "reasoning": "The content discusses improving predictability in software delivery and establishing quality measures, but it does not clearly focus on Change Management principles or how to navigate organizational transformation in an Agile context.",
    "level": "Quaternary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "While the content primarily discusses quality enablement and predictable delivery in software development, it touches on the importance of collaboration between the Development Team, Product Owner, and the Business, which relates to team dynamics and communication. However, the focus is more on individual processes and criteria than on direct team collaboration techniques.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses the importance of acceptance criteria, which aligns with BDD principles. However, it focuses more on quality enablement and traditional delivery processes rather than being solely about BDD practices.",
    "level": "Tertiary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement in the context of predictable software delivery, which relates to the strategic use of digital technologies and methodologies in software development. However, the primary focus is on quality control processes and measurement rather than a broader strategic view of digital transformation as a whole.",
    "level": "Tertiary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and predictable software delivery, rather than Minimum Viable Product concepts.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content heavily discusses quality enablement in software delivery, Agile practices, and development teams, but does not mention or focus on AI applications.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses concepts related to software delivery processes, quality management, and Agile practices rather than focusing on system configuration or related technical setups.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 20,
    "non_ai_confidence": 10,
    "final_score": 19.0,
    "reasoning": "The content primarily focuses on quality enablement and delivery processes in software development, discussing technical measures and challenges rather than product strategy frameworks, vision formulation, or market analysis.",
    "level": "Quinary"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "Content discusses the importance of quality in software delivery and the role of Development Teams, which ties into technical leadership concepts like defining quality measures and acceptance criteria. However, the focus is more on quality enablement rather than direct technical leadership practices or agile methodologies.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses predictability in delivery and the importance of having clear definitions and acceptance criteria, which relates to estimation; however, the primary focus is on quality and the impact of pressure on development teams rather than estimation techniques or collaborative practices.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery without a central focus on cross-functional teams.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses quality assurance practices and mentions the importance of acceptance criteria and automated tests, which are related to Test First Development but are not the primary focus.",
    "level": "Tertiary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses quality enablement and software delivery processes, which are not specific to or primarily about the Windows operating system.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses aspects like automated builds and automated deployment, which are related to deployment strategies. However, it primarily focuses on quality enablement and predictability in software delivery rather than deployment methodologies.",
    "level": "Tertiary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily focuses on quality assurance practices, delivery processes, and team-level issues, without discussing Agile scaling frameworks, enterprise-level strategies, or cross-team collaboration, which are essential for the 'Large Scale Agility' category.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and factors affecting software delivery predictability without addressing team motivation directly.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses quality enablement and predictable delivery in software development, focusing on development processes without any specific reference to remote working or Agile practices in a distributed environment.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality enablement and predictable delivery rather than discussing growth mindset, knowledge sharing, or practices related to continuous learning in Agile or DevOps environments.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality issues in software delivery and suggests techniques to improve predictability and reduce bugs, making troubleshooting a secondary theme.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the importance of quality in software delivery and does not focus on experimentation or hypothesis-driven methodologies.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses quality in software delivery and does not focus specifically on the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of setting clear criteria and definitions for quality, which relates to transparency in work expectations and deliverables. However, the primary focus is on quality enablement and predictability rather than transparency itself.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, focusing on definitions of done and acceptance criteria, rather than working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content discusses improving software quality through Agile practices, such as Definition of Done and acceptance criteria, directly relating to the role of software developers in Agile environments.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on quality enablement in software delivery and the importance of defining quality measures, rather than the practice of coaching or supporting individuals and teams in their growth and development.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality in software delivery through principles such as Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment, which align closely with engineering practices and methodologies in Agile development.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content mentions issues of software quality and delivery predictability, which can relate to technical debt in terms of how accumulated quality issues affect development processes. However, it predominantly focuses on quality management rather than explicitly discussing the management of technical debt itself.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality in software delivery, emphasizing definitions, criteria, and processes, which do not specifically pertain to Sprint Review discussions or the Scrum framework.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "While the content primarily focuses on quality enablement and software delivery processes, it discusses the role of acceptance criteria and the Definition of Done in the context of product management, which aligns with balancing stakeholder interests and identifying customer needs.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement and its relationship with software delivery predictability, focusing on traditional metrics and processes rather than self-organization principles or team autonomy.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement for predictable delivery in software development and touches upon practices such as 'Definition of Done' and 'Acceptance Criteria' which align with Agile principles. However, the primary focus is more on quality management and delivery predictability rather than a comprehensive exploration of Agile frameworks themselves.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses elements related to quality enablement and predictability in software delivery, which ties into Agile principles like Definition of Done and Acceptance Criteria, but it primarily focuses on technical practices rather than overarching Agile strategy.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and delivery predictability in software development, without discussing Azure Repos or its features directly.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses how quality enablement affects the predictability of software delivery, focusing on the need for empirical evidence and defined measures for delivery timelines. It mentions concepts like Definition of Done and Acceptance Criteria, which relate to enhancing forecasting practices in Agile frameworks. However, the primary focus is more on quality issues than direct forecasting methodologies.",
    "level": "Secondary"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of quality in software delivery and how to measure and maintain it. While it touches on aspects like predictability and definitions of done, it primarily focuses on improving quality rather than strictly adhering to Lean principles such as waste reduction and customer value. Lean concepts such as continuous improvement are indirectly related but not the central theme.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictability in software delivery, rather than identifying or analyzing trends in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of defining quality measures like Definition of Done and acceptance criteria, which relates to accountability in software delivery. However, it primarily focuses on quality assurance and delivery predictability rather than accountability as a central theme.",
    "level": "Tertiary"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-15T22:06:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly focuses on quality enablement and delivery predictability in software development, without discussing Kanban principles, techniques for managing work at scale, or its application in large organizations.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality in relation to predictable delivery and its impact on software development, which is related to throughput in terms of understanding and measuring work completion rates, though it primarily focuses on quality management and not throughput directly.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T09:08:54",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses quality management and the importance of automated testing in the development process, which are relevant to TDD, but does not focus specifically on TDD principles or practices.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T16:15:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-17T16:15:50",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching on Agile concepts like Definition of Done and Acceptance Criteria, which are relevant to Scrum and Agile practices.",
    "level": "Tertiary"
  }
}
