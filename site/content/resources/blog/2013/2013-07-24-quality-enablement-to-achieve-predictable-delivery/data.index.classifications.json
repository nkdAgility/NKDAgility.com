{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-15T18:00:10",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of quality in software delivery, which is relevant to Agile practices, particularly in relation to the roles of the Product Owner and the Development Team. However, the primary focus is on quality enablement and traditional software development practices rather than Agile product management specifically.",
    "level": "Secondary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-15T18:00:11",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses practical techniques for improving software delivery quality, including the Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment, which are all relevant to Agile and DevOps practices.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-15T18:00:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability, with no clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-15T18:00:15",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses the importance of defining quality metrics and acceptance criteria to improve predictability in software delivery, aligning with the principles of Evidence-Based Management.",
    "level": "Secondary"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-15T18:00:16",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality in software delivery and its relationship to predictability, touching on aspects of code quality and development processes. However, it primarily focuses on project management and delivery rather than the complexities of code itself.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-15T18:00:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, focusing on project management aspects rather than discovery and learning methodologies.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-15T18:00:22",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automation in the context of software delivery and quality assurance, which aligns with Agile practices, but does not primarily focus on AI or its integration within Agile frameworks.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-15T18:00:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which relates to Lean principles of minimising waste and improving processes. However, it primarily focuses on software development practices rather than Lean methodologies specifically.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-15T18:00:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and predictability in software delivery, rather than installation or configuration processes.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-15T18:00:27",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of clear definitions and criteria for quality in software delivery, which relates to accountability within teams. However, the primary focus is on quality enablement and predictability rather than transparency and accountability as central themes.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-15T18:00:29",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to Agile methodologies and practices that can enhance market adaptability. However, the primary focus is on quality assurance rather than directly addressing market adaptability strategies.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-15T18:00:31",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the interplay between organisational practices and software delivery quality, highlighting the impact of team dynamics and organisational structures on predictability in delivery. However, it primarily focuses on technical practices and quality measures, making the sociotechnical aspect a secondary theme.",
    "level": "Secondary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-15T18:00:32",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of quality enablement and predictability in software delivery, which relates to organisational resilience. However, the primary focus is on technical implementations rather than broader strategies for resilience and change.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-15T18:00:34",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable software delivery, touching on automation in builds and deployments, which are relevant to DevOps practices. However, the primary focus is on quality management rather than a comprehensive exploration of DevOps principles.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T18:00:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and its impact on software delivery, referencing specific Agile concepts such as Definition of Done and Acceptance Criteria.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-15T18:00:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes, with a focus on Agile methodologies rather than decision-making processes in uncertain environments.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-15T18:00:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-15T18:00:44",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of quality in software delivery and how it impacts predictability, which relates to flow efficiency. However, the primary focus is on quality enablement rather than directly optimising work throughput.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-15T18:00:46",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the interplay between quality enablement, team dynamics, and the processes involved in software delivery, highlighting the importance of clear definitions and acceptance criteria in Agile environments.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-15T18:00:47",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to organisational practices and structures that support agility. However, it primarily focuses on software development processes rather than broader enterprise agility themes.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-15T18:00:49",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of quality in software delivery and its impact on predictability, which aligns with the principles of business agility. However, the primary focus is on quality enablement rather than broader business agility practices.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-15T18:00:50",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of defining quality metrics, such as Definition of Done and Acceptance Criteria, to achieve predictable software delivery, which aligns with evidence-based decision-making and continuous improvement principles.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T18:00:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-15T18:00:53",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in software delivery, focusing on engineering practices such as Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment, which are all relevant to technical excellence.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-15T18:00:54",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, but it primarily focuses on traditional management practices and does not engage deeply with complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T18:00:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery processes and quality assurance methodologies, with no clear focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-15T18:00:57",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in achieving predictable software delivery, focusing on methodologies and practices that directly relate to product delivery, such as Definition of Done, Acceptance Criteria, and automated processes.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T18:00:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and traditional software development practices, lacking a focus on decentralised, adaptive, or human-centric organisational design principles.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-15T18:00:59",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which relates to optimising processes and aligning with customer outcomes, but it primarily focuses on quality and delivery rather than the broader principles of Value Stream Management.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-15T18:01:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-15T18:01:02",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses strategies for improving quality in software delivery, which directly aligns with value delivery principles, including the importance of definitions of done, acceptance criteria, and automated processes to enhance predictability and customer satisfaction.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-15T18:01:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery predictability without specific reference to Azure DevOps services or tools.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-15T18:01:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-15T18:01:05",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the interconnectedness of quality, delivery, and team dynamics in software development, which aligns with Systems Thinking principles. However, it primarily focuses on quality enablement and delivery predictability rather than a comprehensive exploration of Systems Thinking itself.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-15T18:01:07",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which aligns with the principles of 1ES, but it primarily focuses on quality management rather than the integration and standardisation of engineering processes.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-15T18:01:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which are relevant to Agile principles, but it primarily focuses on quality management rather than the broader Agile Product Operating Model.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-15T18:01:10",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to organisational agility through the need for adaptability and responsiveness in software development processes. However, the primary focus is on quality metrics rather than agility principles.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-15T18:01:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without focusing on news or reviews related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-15T18:01:13",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses quality enablement in the context of software delivery, focusing on aspects such as Definition of Done, Acceptance Criteria, and automated processes, which are integral to Application Lifecycle Management.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-02-15T18:01:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of quality in software delivery, including the Definition of Done and Acceptance Criteria, which are relevant to Scrum practices, but the primary focus is on quality enablement rather than Scrum itself.",
    "level": "Ignored"
  }
}
