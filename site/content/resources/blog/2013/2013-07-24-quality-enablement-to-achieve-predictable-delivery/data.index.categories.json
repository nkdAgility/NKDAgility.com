{
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on quality enablement and its critical role in achieving predictable software delivery, discussing specific practices and measures to enhance quality in development processes.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to enterprise agility principles.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses Scrum concepts such as Definition of Done and Acceptance Criteria, which are central to the Scrum framework.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to scaling agility in development processes.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses the importance of quality enablement in software delivery, focusing on the roles of development teams, acceptance criteria, and the impact of organisational processes on predictability.",
    "level": "Secondary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is a key aspect of value stream management.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the importance of quality enablement and its role in achieving predictable delivery, aligning closely with Lean principles of minimising waste and maximising value.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on events or presentations.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on products or books.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching on aspects of complexity in software development processes, but it primarily focuses on quality management rather than complexity thinking itself.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses quality enablement and practices that align with software delivery processes, which are central to Azure DevOps methodologies.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which includes elements of learning and understanding processes. However, the primary focus is on quality management rather than discovery and learning as a central theme.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictable delivery in software development, with a focus on definitions of done, acceptance criteria, and automated processes, rather than Kanban principles or practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of quality enablement and predictability in software delivery, which relates to decision-making processes in project management. However, it primarily focuses on practical measures rather than theoretical aspects of decision theory.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses quality enablement, predictability in software delivery, and key aspects of Application Lifecycle Management such as Definition of Done and Acceptance Criteria.",
    "level": "Secondary"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the importance of quality in software delivery, focusing on definitions, acceptance criteria, and automated processes, which are central to understanding code quality and complexity.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software delivery and does not focus on news or reviews.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and practices that can improve software delivery predictability, which includes aspects of configuration like Definition of Done and automated builds. However, the primary focus is on quality management rather than installation or configuration processes.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the interplay between organisational practices and software delivery quality, highlighting how sociotechnical factors influence predictability in software development.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the importance of quality enablement and its direct impact on predictable software delivery, focusing on measures to improve flow efficiency in the development process.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictable software delivery, with no clear focus on miscellaneous topics.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily discusses practical techniques and tooling related to quality enablement, including Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment, all aimed at achieving predictable software delivery.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content heavily discusses the importance of quality enablement in achieving predictable software delivery, focusing on measures like Definition of Done and Acceptance Criteria to enhance delivery outcomes.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to enhancing organisational agility.",
    "level": "Secondary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses automated builds and deployments as part of improving software delivery quality, indicating a significant focus on automation within agile practices.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and predictable delivery, which are important for adapting to market demands, but the primary focus is on software development processes rather than market adaptability itself.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on personal experiences or themes.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the need for quality enablement and predictability in software delivery, which relates to resilience in managing delivery pressures and changes in quality standards. However, the primary focus is on quality assurance processes rather than resilience and change as a central theme.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of organisational practices on software delivery quality, highlighting how pressure on developers can affect their performance and the overall quality of work, which aligns with themes in organisational psychology.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on establishing quality metrics and processes to achieve predictable software delivery, emphasising the importance of measurable criteria and assessments.",
    "level": "Secondary"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on quality enablement and predictable delivery in software development, discussing practices such as automated builds and deployments, which are central to DevOps principles.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of defining quality standards and acceptance criteria to ensure predictable software delivery, which aligns with the principles of transparency and accountability in the development process.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to Agile practices, including the importance of Definition of Done and Acceptance Criteria.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the relationship between quality enablement and predictable delivery, highlighting systemic issues within organisations that affect software delivery quality.",
    "level": "Secondary"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content heavily discusses the importance of quality enablement in achieving predictable software delivery, outlining specific practices and criteria that directly impact the delivery process.",
    "level": "Secondary"
  }
}
