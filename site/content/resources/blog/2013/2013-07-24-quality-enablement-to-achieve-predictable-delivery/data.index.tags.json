{
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which involves decision-making processes related to quality metrics and delivery criteria. However, it primarily focuses on practical aspects of software development rather than theoretical frameworks of decision theory.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on the processes and practices necessary for achieving predictable software delivery, emphasising the roles of quality measures, acceptance criteria, and team dynamics.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses quality enablement in the context of software delivery, focusing on Agile concepts like Definition of Done and Acceptance Criteria, which are central to Agile frameworks.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching on aspects like Definition of Done and Acceptance Criteria, which are relevant to Scrum values, but the primary focus is on quality and delivery rather than Scrum values themselves.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses aspects of software delivery and quality management, which are relevant to Azure Boards, but it primarily focuses on quality enablement and does not centralise Azure Boards as a topic.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and its impact on predictable software delivery, rather than analysing trends in the industry or market.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictability in software delivery, with a focus on definitions and criteria for quality rather than experimentation.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which aligns closely with lean principles of minimising waste and enhancing value delivery.",
    "level": "Secondary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on quality enablement and its critical role in achieving predictable software delivery, discussing specific practices and measures to enhance quality in engineering processes.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and its impact on predictable software delivery, with a focus on development processes and practices rather than value stream mapping.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and predictable delivery, which are important for adapting to market demands, but the primary focus is on software development processes rather than market adaptability itself.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching on aspects of self-organisation in teams, but it primarily focuses on quality metrics and processes rather than self-organisation as a central theme.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to Agile planning principles, including the importance of Definition of Done and Acceptance Criteria.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of establishing quality measures and criteria to enable predictable software delivery, which directly relates to decision making in project management and development processes.",
    "level": "Secondary"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictable delivery in software development, with a focus on definitions of done, acceptance criteria, and automated processes. Scaling Kanban is not a central theme.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the importance of quality in software delivery, with a significant focus on automated builds and tests as essential components of achieving predictable delivery.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to Agile practices. It discusses key Agile concepts such as Definition of Done and Acceptance Criteria, indicating a strong alignment with Agile Transformation.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictable software delivery, with no clear focus on miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses quality enablement and its impact on predictable delivery, which aligns with principles of Scaled Agile methodologies, particularly in relation to defining quality measures like Definition of Done and Acceptance Criteria.",
    "level": "Secondary"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the relationship between quality enablement and predictable delivery, emphasising the need for clear definitions and criteria to improve delivery timelines.",
    "level": "Secondary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of defining quality measures such as Definition of Done and Acceptance Criteria, which are essential components of working agreements in software development.",
    "level": "Secondary"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which aligns with BetaCodex principles, but it primarily focuses on quality management rather than the BetaCodex framework itself.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on the impact of quality enablement on software delivery, discussing how team dynamics and practices affect performance and predictability.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of quality in software delivery, linking it to Agile principles such as Definition of Done and Acceptance Criteria, which are central to Agile methodologies.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictable software delivery, with no clear focus on revenue per employee.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the importance of quality enablement as a strategic goal for achieving predictable software delivery, discussing specific measures to improve quality and predictability.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the relationship between quality enablement and predictable delivery within an organisation, discussing how organisational structures and practices impact software delivery quality.",
    "level": "Secondary"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is a key aspect of technical leadership in software development.",
    "level": "Secondary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving quality in software delivery, which aligns with Lean principles of minimising waste and enhancing value through defined processes and criteria.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses automated builds and deployments, which are relevant to Azure Pipelines, but the primary focus is on quality enablement and predictability in software delivery.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of quality enablement in software delivery, focusing on the roles of the Development Team and the significance of acceptance criteria and Definition of Done, which are central to Scrum practices.",
    "level": "Secondary"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on quality enablement and predictable delivery in software development, discussing practices such as automated builds and deployments, which are central to DevOps principles.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on employee engagement.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses quality enablement, predictability in software delivery, and key aspects of Application Lifecycle Management such as Definition of Done and Acceptance Criteria.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses the importance of defining quality measures and acceptance criteria to achieve predictable software delivery, which aligns closely with the principles of empirical process control.",
    "level": "Secondary"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of quality in software delivery, which indirectly relates to the predictability of release schedules, but it primarily focuses on quality enablement rather than frequent releases themselves.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses issues related to unpredictable quality in software delivery and suggests solutions, making troubleshooting a major but secondary theme.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of defining acceptance criteria and the Definition of Done, which are central to backlog refinement processes.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on the importance of quality enablement and empirical evidence in achieving predictable software delivery, aligning closely with the principles of Evidence Based Management.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on remote working.",
    "level": "Ignored"
  },
  "Continuos Integration": {
    "category": "Continuos Integration",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in software delivery, with a significant focus on automated builds and deployments, which are key aspects of Continuous Integration.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the importance of quality enablement and its impact on predictable software delivery, which is central to Agile planning and practices.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on personal experiences or themes.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content discusses the importance of automated builds and tests as part of ensuring quality in software delivery, making automated testing a primary focus.",
    "level": "Secondary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to Scrum practices, but it is primarily focused on quality management rather than scaling Scrum itself.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the importance of quality enablement in achieving predictable software delivery, discussing practical measures such as Definition of Done and Acceptance Criteria to improve predictability and quality.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 85,
    "non_ai_confidence": 30,
    "final_score": 68.0,
    "reasoning": "Content primarily discusses the importance of acceptance criteria and definition of done in achieving predictable software delivery, which are key components of Acceptance Test Driven Development.",
    "level": "Secondary"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the need for quality enablement and structured processes within an organisation to achieve predictable software delivery, highlighting the impact of organisational practices on quality and delivery outcomes.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses quality enablement in the context of software delivery, with a strong focus on Scrum concepts such as Definition of Done and Acceptance Criteria, which are central to Scrum practices.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content discusses the importance of acceptance criteria and collaboration between the Development Team and Product Owner, indicating a strong focus on the Product Owner's role in ensuring quality and predictability in software delivery.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is a key aspect of product strategy.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the importance of quality enablement and its direct impact on predictable software delivery, focusing on measures like Definition of Done and Acceptance Criteria to enhance flow efficiency.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the importance of defining quality measures, such as Definition of Done and Acceptance Criteria, to ensure predictable software delivery, which aligns closely with the theme of transparency in processes.",
    "level": "Secondary"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is a key aspect of change management in organisational processes.",
    "level": "Secondary"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content heavily discusses quality enablement in software delivery, focusing on the roles of development teams, acceptance criteria, and definitions of done, which are central to software development practices.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on quality enablement and its critical role in achieving predictable software delivery, discussing specific practices and measures that directly relate to working software.",
    "level": "Secondary"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on software delivery, touching on aspects of system configuration such as Definition of Done and automated builds, but these are secondary themes rather than the primary focus.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on quality enablement and software delivery processes, with only a minor mention of concepts that could relate to Lean Startup principles.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on software delivery, touching on organisational practices and pressures that affect team performance, indicating a significant but secondary theme related to organisational culture.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses quality enablement and predictable delivery in software development, which are key aspects of digital transformation. However, it primarily focuses on quality assurance processes rather than broader digital transformation strategies.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and its impact on software delivery, with no clear focus on Sprint Review processes or outcomes.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on quality enablement in software delivery, discussing practices like Definition of Done, Acceptance Criteria, and Automated Builds, which are central to Azure DevOps methodologies.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on software delivery quality and development processes rather than entrepreneurship as a central theme.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality in software delivery and the implications of lacking clear definitions and criteria, which can lead to technical debt. However, it primarily focuses on quality enablement and predictability rather than technical debt itself.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery predictability, with no clear focus on Daily Scrum practices or discussions.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in software delivery, with a significant focus on automated builds and deployments, which are key aspects of Continuous Integration.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality in software delivery and its impact on customer satisfaction, but it primarily focuses on quality enablement and predictability rather than customer satisfaction itself.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is a key aspect of large scale agility.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and predictability in software delivery, which includes elements of coaching teams on best practices, but the primary focus is on quality metrics and processes rather than coaching itself.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and delivery predictability in software development, touching on aspects of automated builds and deployments, which are relevant to modern source control practices, but the primary focus is on quality management rather than source control itself.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictable software delivery, with a focus on processes and measures rather than continuous learning.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on quality enablement in software delivery, discussing key Scrum concepts such as Definition of Done and Acceptance Criteria, which are central to Scrum practices.",
    "level": "Secondary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the need for quality enablement and predictability in software delivery, which implies a change in approach to improve resilience against fluctuating quality. However, the primary focus is on quality measures rather than resilience and change itself.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the importance of quality enablement in achieving predictable software delivery, focusing on Agile principles such as Definition of Done and Acceptance Criteria, which are central to Agile strategy.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "The content discusses quality enablement and the importance of automated tests, which are key aspects of Test Driven Development, but it primarily focuses on broader quality management and delivery predictability.",
    "level": "Secondary"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is a key aspect of Agile Leadership principles.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and predictable software delivery, with no clear focus on market share.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to the concept of a Minimum Viable Product (MVP) in terms of defining quality and acceptance criteria for deliverables.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to enhancing organisational agility.",
    "level": "Secondary"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the relationship between quality enablement and predictable software delivery, focusing on how improving quality can enhance throughput in delivery processes.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content heavily discusses the importance of quality enablement in achieving predictable software delivery, focusing on measures like Definition of Done and Acceptance Criteria to enhance delivery outcomes.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on improving quality in software delivery, which is essential for scaling agility in organisations.",
    "level": "Secondary"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content heavily discusses quality enablement in software delivery, focusing on development processes, acceptance criteria, and the importance of quality in the software development lifecycle.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of automated deployment as a strategy to improve software delivery predictability and quality.",
    "level": "Secondary"
  },
  "Sprint Planning Workshop": {
    "category": "Sprint Planning Workshop",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses quality enablement and its impact on software delivery, with only a brief mention of backlog items and acceptance criteria, which are related but not central to sprint planning.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the importance of defining quality measures and accountability in software delivery processes, emphasising the need for clear definitions and criteria to ensure predictable outcomes.",
    "level": "Secondary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of collaboration between the Development Team, Product Owner, and the Business in defining acceptance criteria, which is a significant aspect of team collaboration, but the primary focus is on quality enablement and predictable delivery.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with only a brief mention of backlog management, which is not central to portfolio management.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the importance of having clear definitions and criteria, such as Definition of Done and Acceptance Criteria, which are essential components of the Definition of Ready in Agile methodologies.",
    "level": "Secondary"
  },
  "Agility": {
    "category": "Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to agile methodologies.",
    "level": "Secondary"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the importance of acceptance criteria and definition of done in relation to product backlogs, highlighting their role in achieving predictable delivery.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which indirectly relates to innovation in software development processes. However, the primary focus is on quality management rather than innovation itself.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on improving quality in software delivery processes, emphasising the need for clear definitions and criteria to enhance predictability and reduce pressure on development teams.",
    "level": "Secondary"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses quality enablement and its impact on predictable delivery, touching on Scrum concepts like Definition of Done and Acceptance Criteria, making it a major theme.",
    "level": "Secondary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and its impact on software delivery, touching on the roles of Development Teams and Product Owners, which are relevant to cross-functional collaboration, but the primary focus is on quality and predictability rather than the dynamics of cross-functional teams.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The content primarily focuses on quality enablement and software delivery processes, with only a brief mention of the pressure on developers, which does not constitute a central theme of team motivation.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on quality enablement and predictable delivery in software development, with only brief mentions of pressure on developers and the implications of fluctuating quality, which are not central themes.",
    "level": "Ignored"
  },
  "CI/CD": {
    "category": "CI/CD",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on quality enablement and its impact on predictable software delivery, discussing key CI/CD practices such as automated builds and deployments, which are central to achieving quality in the delivery process.",
    "level": "Secondary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on improving quality in software delivery, which aligns with Lean Thinking principles of minimising waste and enhancing value through defined processes.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the systemic issues affecting software delivery quality and predictability, emphasising the need for a structured approach to quality enablement within the organisation.",
    "level": "Secondary"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and predictable software delivery, with a focus on development processes and metrics, rather than customer feedback loops.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on quality enablement and its critical role in achieving predictable software delivery, discussing specific practices and measures to enhance quality in development processes.",
    "level": "Secondary"
  },
  "Scrum Product Management": {
    "category": "Scrum Product Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses quality enablement in software delivery, focusing on Scrum concepts like Definition of Done and Acceptance Criteria, which are central to Scrum Product Management.",
    "level": "Secondary"
  },
  "Featured": {
    "category": "Featured",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on quality enablement as a means to achieve predictable software delivery, discussing key concepts and strategies in detail.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the need for quality enablement in software delivery, focusing on how to measure and improve predictability through defined quality standards and practices.",
    "level": "Secondary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the relationship between quality enablement and predictable delivery, emphasising the need for clear definitions and criteria to improve lead time in software delivery.",
    "level": "Secondary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 65.0,
    "reasoning": "The content primarily discusses the importance of quality in software delivery, with a strong emphasis on the Definition of Done, Acceptance Criteria, and the role of automated tests, which are central to Test First Development practices.",
    "level": "Secondary"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of collaboration between Development Teams, Product Owners, and the Business in defining acceptance criteria, which is a significant aspect of collaboration tools, but the primary focus is on quality enablement and predictable delivery.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses quality enablement, definitions of done, acceptance criteria, and automated processes, all of which are central to effective engineering practices.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on achieving predictable software delivery through quality enablement, discussing key practices such as Definition of Done, Acceptance Criteria, Automated Builds, and Automated Deployment, all of which are central to Continuous Delivery.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on Azure Repos.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses quality enablement and practices necessary for predictable software delivery, focusing on operational aspects like Definition of Done, Acceptance Criteria, and automated processes.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery processes, with no clear focus on Windows as a topic.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the importance of quality enablement and empirical evidence in achieving predictable software delivery, which aligns closely with evidence-based leadership principles.",
    "level": "Secondary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality in software delivery and its impact on customer satisfaction, indicating a secondary theme of customer retention, but the primary focus is on quality enablement and predictability in delivery.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable software delivery, which aligns with principles of Site Reliability Engineering, but the primary focus is on quality management rather than SRE practices.",
    "level": "Secondary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to achieving business agility.",
    "level": "Secondary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on quality enablement in software delivery, discussing Scrum concepts such as Definition of Done and Acceptance Criteria, which are central to the Scrum framework.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, touching on aspects of complexity in software development processes, but it primarily focuses on quality management rather than complexity thinking itself.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software delivery predictability, with no clear focus on mentoring.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on improving software delivery predictability through quality enablement, which is central to enterprise agility principles.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of automated deployment as a means to improve predictability in software delivery, making it a significant but secondary theme.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on quality enablement in software delivery, discussing specific practices and measures that enhance technical quality and predictability in development processes.",
    "level": "Secondary"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 92,
    "non_ai_confidence": 30,
    "final_score": 73.0,
    "reasoning": "Content heavily discusses the importance of a Definition of Done (DoD) as a measure of quality in software development, making it a central theme.",
    "level": "Secondary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and the importance of acceptance criteria and definitions of done, which are relevant to Behaviour Driven Development, but the primary focus is on quality and predictability in software delivery rather than BDD itself.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and its impact on predictable delivery, which relates to product discovery, but the primary focus is on quality assurance and development processes.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and predictability in software delivery, with a focus on definitions of done, acceptance criteria, and automated processes, rather than hypothesis driven development.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and predictable delivery in software development, with no clear focus on asynchronous development.",
    "level": "Ignored"
  }
}
