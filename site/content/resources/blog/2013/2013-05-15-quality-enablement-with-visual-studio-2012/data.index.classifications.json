{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-03-15T05:11:20",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 30,
    "final_score": 41.0,
    "reasoning": "The content discusses quality enablement and continuous delivery, which are relevant to Agile principles. However, it lacks a direct focus on Agile Product Management topics such as the role of the Product Owner, backlog prioritisation, and stakeholder engagement. While it touches on the importance of continuous feedback and iterative processes, it does not delve deeply into Agile methodologies or practices specific to product management.",
    "level": "Tertiary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T15:06:11",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses practical techniques for quality enablement in software development, particularly through the use of Visual Studio 2012. It covers methodologies such as continuous testing, acceptance test planning, and the importance of automation in the development lifecycle. The article also highlights specific tools and practices that enhance Agile and DevOps processes, aligning well with the key topics of the category. The depth of discussion is significant, providing detailed insights into how these techniques can be implemented to improve software quality and delivery outcomes.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality enablement and continuous delivery practices, which are relevant to platform engineering, but the primary focus is on quality management and tools rather than the design and construction of internal platforms.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-15T18:44:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-15T05:11:29",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of quality in software development, focusing on continuous testing and delivery, which aligns with the principles of software code quality. It mentions practices like acceptance testing and the need for actionable requirements, which are relevant to managing complexity in codebases. However, while it touches on these themes, the discussion is more about quality enablement and less about the theoretical aspects of complexity theory or specific coding practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-15T05:11:40",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the importance of quality enablement in software development, emphasising continuous testing and feedback loops, which aligns with the core themes of discovery and learning. However, while it touches on these concepts, the primary focus is on quality assurance practices and tools rather than a broader exploration of methodologies that foster innovation and learning. The depth of discussion on continuous improvement and user feedback is present but not exhaustive, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-15T18:44:57",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without a clear focus on AI or automation within Agile frameworks.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-03-15T05:11:34",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 50,
    "final_score": 43.0,
    "reasoning": "The content discusses quality enablement and continuous delivery, which are related to Lean principles, particularly in terms of reducing waste and improving processes. However, it primarily focuses on software development practices and tools rather than explicitly addressing Lean methodologies or principles. While there are mentions of reducing cycle time and improving quality, the discussion lacks a direct focus on Lean concepts such as value stream mapping or the Seven Wastes, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-15T18:44:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices rather than specific installation or configuration procedures.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-15T18:45:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices without a clear focus on transparency and accountability within Agile teams.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of quality enablement and continuous delivery in software development, which relates to market adaptability through the need for organisations to respond quickly to changing consumer expectations and demands. However, the primary focus is on quality practices rather than explicitly on market adaptability strategies.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-15T05:11:26",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the need for continuous improvement in practices and tools. However, it primarily focuses on technical aspects and tools (like Visual Studio 2012) without a strong emphasis on the interplay between social and technical systems within organisations. While there are mentions of user expectations and the need for collaboration, the discussion lacks depth in exploring organisational culture, team dynamics, or the broader sociotechnical interactions that are central to the category.",
    "level": "Tertiary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the need for continuous quality and adaptability in software development, which aligns with themes of organisational resilience and change management, but it primarily focuses on technical implementations rather than the broader organisational strategies.",
    "level": "Tertiary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-07T15:06:09",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses the principles of continuous delivery and quality enablement, which are core to DevOps practices. It highlights the need for continuous testing, automation, and collaboration between development and operations teams, aligning well with DevOps principles. The depth of discussion on tools and practices, such as automated testing and deployment, further supports its relevance to the DevOps category.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T18:45:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development, specifically using Visual Studio 2012, and includes references to Agile concepts but does not focus on Agile, Scrum, DevOps, or Lean frameworks.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-15T18:45:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on decision-making processes or theories related to uncertainty.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-15T18:45:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not reference any specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and quality enablement, which are related to flow efficiency, but the primary focus is on quality rather than optimising throughput directly.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of continuous quality and delivery in software development, touching on team dynamics, stakeholder engagement, and the need for effective communication and feedback loops, which are relevant to the interplay between people and processes.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-03-15T05:11:31",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the importance of quality enablement in software development, emphasising continuous delivery and responsiveness to user needs, which aligns with the principles of enterprise agility. However, it primarily focuses on quality practices and tools rather than broader organisational agility frameworks or cultural aspects, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-03-10T12:48:22",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of quality enablement in software development, which indirectly relates to business agility by emphasising the need for continuous delivery and responsiveness to consumer expectations. However, it primarily focuses on quality practices and tools rather than explicitly addressing the principles and strategies of business agility. While there are mentions of agile concepts, they are not the primary focus, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-03-10T14:50:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses quality enablement and continuous delivery, which are related to metrics and learning, but it primarily focuses on quality practices and tools rather than explicitly addressing metrics, data analysis, or feedback mechanisms. While there are mentions of measuring value and cycle times, the overall emphasis is on quality improvement rather than a structured exploration of metrics and learning principles.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T18:45:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and continuous delivery practices without a clear focus on Kanban principles or methodologies.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-10T18:39:17",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in software development, focusing on continuous testing, delivery, and the integration of tools like Visual Studio 2012 to enhance quality. It aligns well with key topics such as Continuous Integration and Continuous Delivery (CI/CD), Test-Driven Development (TDD), and the need for actionable requirements, which are all central to the concept of Technical Excellence. The depth of discussion is significant, providing detailed insights into practices that improve software quality and delivery processes.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-15T18:45:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T18:45:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and quality enablement, with no clear focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-11T10:29:38",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in the software delivery process, emphasising continuous testing, feedback loops, and the need for agile methodologies. It aligns well with key topics such as continuous integration, deployment strategies, and the role of cross-functional teams. The depth of discussion on actionable requirements and metrics for measuring delivery performance further supports its strong relevance to the Product Delivery category.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T18:45:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and the use of Visual Studio 2012, with no clear focus on the principles or practices of BetaCodex or decentralised organisational design.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses continuous delivery and quality enablement, which are related to optimising value delivery in software development. However, it primarily focuses on quality practices and tools rather than explicitly addressing Value Stream Management principles.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the use of Visual Studio 2012 as a tool for quality enablement in software development, which aligns with the category's focus on tools and software that facilitate Agile practices and DevOps integration.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-11T11:54:48",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in the context of delivering value to customers through modern application lifecycles. It highlights continuous delivery practices, the need for iterative development, and the alignment of product development with customer feedback, all of which are core themes of value delivery. The depth of discussion is significant, covering various aspects such as continuous testing, acceptance criteria, and the impact of quality on customer satisfaction, which reinforces its relevance to the category.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-11T14:59:50",
    "ai_confidence": 75.0,
    "ai_mentions": 60.0,
    "ai_alignment": 80.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses quality enablement in the context of software development, specifically mentioning Microsoft tools like Visual Studio and Team Foundation Server, which are part of the Azure DevOps suite. It aligns well with Azure DevOps principles, particularly in continuous integration and delivery, and highlights the importance of quality in modern application lifecycles. However, it does not focus exclusively on Azure DevOps, as it also covers broader concepts of quality and agile practices, which slightly reduces the confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-15T18:45:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of quality enablement and software development practices without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-15T18:45:43",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on continuous delivery and testing practices, rather than exploring Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses quality enablement and continuous delivery practices, which are relevant to the principles of the One Engineering System, but it primarily focuses on quality management and tools rather than the integration and standardisation of engineering processes across teams.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses continuous value delivery and quality enablement, which are relevant to Agile principles, but the primary focus is on quality practices and tools rather than a comprehensive exploration of the Agile Product Operating Model.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-11T16:49:57",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of quality enablement and continuous delivery in software development, which aligns with the principles of organisational agility. It highlights the need for organisations to adapt to changing consumer expectations and to implement practices that allow for rapid feedback and iterative improvements. However, while it touches on agile concepts, the primary focus is on quality and tools rather than a comprehensive exploration of organisational agility strategies and cultural shifts.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-15T18:45:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on practices and tools rather than providing news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-11T18:01:41",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 30,
    "final_score": 81.0,
    "reasoning": "The content extensively discusses the concept of quality enablement within the context of the application lifecycle, highlighting the importance of continuous quality, testing practices, and the need for tools that support application lifecycle management. It aligns well with the core themes of ALM, including the stages of the application lifecycle, best practices for governance, and the integration of Agile principles. The depth of discussion is significant, providing detailed insights into practices and tools necessary for effective ALM.",
    "level": "Primary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and does not focus on the Daily Scrum or its related concepts.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content focuses on quality enablement and continuous testing practices rather than directly discussing the Definition of Done in Agile or Scrum contexts. It does touch on acceptance criteria but does not primarily explore the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-15T05:10:41",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in software development, focusing on continuous testing, delivery, and the need for modern tools and practices to enhance software quality. It aligns well with the principles of clean code, testing, and agile practices, which are core to the Technical Mastery category. The depth of discussion is significant, covering various aspects of quality enablement, including actionable requirements, acceptance testing, and the role of tools like Visual Studio 2012. However, while it touches on technical practices, it also includes broader business implications, which slightly detracts from its primary focus on technical mastery.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses continuous quality practices and software development tools but does not focus on identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-15T05:10:20",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the principles of Continuous Delivery, particularly in the context of quality enablement and the need for continuous testing and deployment. It highlights the importance of automation, continuous feedback, and the necessity of maintaining a production-ready state, which are core themes of Continuous Delivery. The depth of discussion is significant, covering various aspects such as acceptance testing, automated deployments, and the role of tools in achieving continuous quality. Overall, the content aligns well with the Continuous Delivery category, making it a primary focus.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-03-15T05:11:38",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses quality enablement and continuous delivery in software development, which are operational tactics rather than long-term strategic goals. While it touches on the importance of quality as a competitive differentiator, it lacks a clear focus on defining or articulating long-term objectives that align with agile principles. The discussion is more about immediate practices and tools rather than strategic alignment or frameworks for setting strategic objectives.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses aspects of continuous delivery and the need to deliver frequently, which relates to the concept of Lead Time, but it is predominantly focused on quality enablement rather than Lead Time specifically.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly discusses software quality enablement, tools, and practices within application development, without a central focus on organisational culture.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily focuses on quality enablement and software delivery practices, with only a fleeting mention of requirements without a clear, central discussion on the Definition of Ready.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices, which are not directly related to the management of a portfolio of projects.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-03-15T05:10:16",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 29.0,
    "reasoning": "The content mentions the importance of actionable requirements and stakeholder engagement, which could relate to the Product Backlog, but the primary focus is on quality practices and continuous delivery rather than outdated or specific backlog management techniques.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of continuous delivery, engagement with stakeholders, and responsiveness to changing requirements, aligning with Agile values, but mainly focuses on quality enablement and tools rather than strictly on Agile Planning methodologies.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development, with no mention or focus on Value Stream Mapping principles, techniques, or tools related to Lean practices.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the integration of customer feedback into the development process, particularly in the context of quality enablement and iterative development cycles. However, the primary focus is on quality and delivery practices rather than specific mechanisms for feedback collection and analysis.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-15T05:10:35",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses quality enablement in the context of software development, focusing on continuous testing, delivery, and improvement practices that align with Agile and DevOps methodologies. It provides detailed strategies for enhancing operational efficiency, such as continuous acceptance testing, automation, and the importance of actionable requirements. The depth of discussion on these operational practices, along with the explicit mentions of techniques and tools, supports a high confidence score in the alignment with the category.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement in software development and continuous delivery practices, without a focus on Scrum Team dynamics, roles, or collaboration.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-03-15T05:10:27",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of continuous delivery and quality enablement, which aligns with Agile principles of iterative development and customer feedback. However, it primarily focuses on technical aspects and tools rather than the broader Agile philosophy or mindset. While Agile concepts are mentioned, they are not the primary focus, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement within the context of modern application lifecycles, touching on aspects like continuous delivery and the importance of quality in delivering value, which relates to strategic approaches in Agile environments.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses methodologies for improving software quality and user satisfaction through continuous feedback and iterative testing, which aligns with product validation practices.",
    "level": "Tertiary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses practices such as continuous delivery, feedback loops, and responsive development, which are aligned with Agile methodologies, but it primarily focuses on quality enablement rather than solely on Agile transformation.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software development practices related to Visual Studio 2012, with no clear focus on mentoring processes, techniques, or topics relevant to agile mentoring.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-03-15T05:10:39",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 76.0,
    "reasoning": "The content extensively discusses the importance of continuous testing and quality enablement in software development, particularly in relation to automated testing practices. It highlights the need for continuous acceptance testing, the role of automated tests in maintaining quality, and the integration of automated testing within the software delivery lifecycle. The depth of discussion includes specific methodologies and practices that align closely with the principles of automated testing, such as Test Driven Development (TDD) and the necessity of automating tests to ensure efficiency and reliability. Overall, the content is highly relevant to the category, focusing on how automated testing contributes to software quality and delivery processes.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on tools and practices for continuous delivery and quality management, rather than on team performance or collaboration within agile teams.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "While the content discusses quality enablement and principles related to software delivery, it mainly focuses on quality practices rather than the concept of increments specifically within Agile or Scrum frameworks.",
    "level": "Tertiary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-03-15T05:10:25",
    "ai_confidence": 85.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 40,
    "non_ai_confidence": 40,
    "final_score": 80.0,
    "reasoning": "The content discusses acceptance testing as a continuous activity and highlights the importance of defining acceptance criteria, which aligns well with ATDD principles. It provides detailed insights into acceptance test planning and continuous acceptance testing, demonstrating a strong focus on the collaborative nature of ATDD. However, while it touches on ATDD concepts, the primary focus is on quality enablement and continuous delivery, which slightly dilutes its alignment with the ATDD category.",
    "level": "Secondary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-15T05:10:33",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content extensively discusses quality enablement in the context of software development, focusing on continuous delivery, testing practices, and the importance of quality in modern applications. It aligns closely with key topics such as Continuous Integration and Continuous Deployment (CI/CD), Test-Driven Development (TDD), and the Software Development Life Cycle (SDLC). The depth of discussion is significant, providing detailed insights into methodologies and practices that enhance software quality, making it a strong fit for the Software Development category.",
    "level": "Primary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-03-15T05:10:22",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of continuous delivery and quality enablement, which aligns with agile principles of iterative development and responsiveness to change. However, it lacks explicit references to agile methodologies like Scrum or Kanban, and does not delve deeply into agile roles or ceremonies. The focus is more on quality practices and tools rather than on agile project management frameworks.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content mentions continuous value delivery and feedback mechanisms, which align with Agile principles, but it primarily discusses quality enablement and tools for software development rather than focusing explicitly on Agile values and principles.",
    "level": "Tertiary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in the context of software development and tools, rather than focusing on Scrum principles, roles, and practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content discusses quality enablement and application lifecycle management, not primarily about modern source control practices.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses concepts related to continuous quality, feedback loops, and the importance of adapting to consumer needs, which aligns with empirical process control principles. However, it does not primarily focus on empirical process control, as it covers broader topics related to quality enablement and software development practices.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and does not focus on the Scrum Values or their significance within the Scrum framework.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and practices in software development, with no clear focus on Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement, testing practices, and application lifecycle management rather than collaboration tools and their impact on Agile teams.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software quality enablement and application lifecycle management, which does not directly address organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement and software development practices, rather than focusing on Lean Startup principles, MVPs, or the iterative learning processes central to Lean Startup methodology.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-03-15T05:10:29",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the importance of continuous delivery and frequent releases in the context of modern software development. It highlights the need for continuous quality and the necessity of delivering updates more frequently to meet user expectations. The discussion on practices such as continuous acceptance testing, automated deployments, and the role of tools in facilitating these processes aligns well with the principles of Frequent Releases. The depth of the content provides a comprehensive view of how to implement these practices effectively, making it a strong fit for the category.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses how quality enablement influences customer satisfaction and emphasizes the importance of continuous quality and feedback cycles. However, the primary focus is on quality assurance practices and software development frameworks rather than directly exploring principles and practices solely focused on customer satisfaction.",
    "level": "Tertiary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and continuous delivery in software development, with no clear focus on scaling Scrum practices or frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses largely on quality enablement and continuous software development practices, with no clear reference to evidence-based leadership principles or data-driven decision-making.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices, with no clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on quality enablement in software development, tools, and processes rather than discussing frameworks or strategies related to scaling agility across an organization.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-10T12:48:18",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 0,
    "final_score": 83.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in software development, emphasising continuous testing, delivery, and the need for high-quality applications. It aligns closely with the principles of software craftsmanship, continuous integration, and the role of automation in enhancing development efficiency. The depth of discussion on practices such as acceptance testing, automated testing, and the impact of quality on business agility further supports its strong alignment with the category of Engineering Excellence.",
    "level": "Primary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and software development practices without addressing revenue per employee or relevant financial efficiency metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and continuous delivery practices in software development, with no clear focus on asynchronous development principles or collaboration across time zones.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about quality enablement and software development practices, rather than systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses quality enablement and continuous value delivery, which are important for enhancing user experience and meeting customer expectations, thus contributing to customer retention. However, the primary focus is on software quality practices and delivery methodologies rather than specific retention strategies.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-15T05:10:52",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses practical strategies for quality enablement in software development, emphasising continuous testing and delivery, which aligns well with Agile and DevOps principles. It provides real-world applications and examples of how to navigate complexities in modern software development, demonstrating a strong focus on pragmatic problem-solving techniques.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on quality enablement and tools for software development rather than backlog refinement or Agile practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-03-15T05:11:35",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of quality enablement in software development, which indirectly relates to the ability to innovate by emphasising continuous improvement and responsiveness to user feedback. However, it lacks a direct focus on frameworks or metrics for measuring innovation capabilities, and does not explicitly mention Evidence-Based Management principles. The discussion is more centred on quality practices rather than innovation strategies.",
    "level": "Secondary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content discusses quality enablement in software development with a focus on continuous delivery and improvement, but it does not specifically address Scrum principles, roles, or practices. The content is more aligned with general software quality management rather than Scrum product development.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development without focusing on scaling Agile practices, frameworks, or enterprise-level initiatives.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and the tools required for continuous delivery, with a focus on technical processes rather than employee engagement and motivation.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content touches on concepts of continuous improvement and quality enablement, which align with Lean Thinking principles, but the primary focus is on software development practices rather than solely on Lean principles.",
    "level": "Tertiary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-03-15T05:11:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of continuous testing and quality enablement in software development, highlighting the need for automated testing to maintain quality throughout the application lifecycle. It mentions practices such as acceptance test planning, continuous acceptance testing, and the necessity of automating tests to keep up with rapid development cycles. However, while it touches on test automation, the primary focus is on broader quality enablement and continuous delivery concepts, which slightly dilutes its alignment with the specific category of Test Automation.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on software quality enablement and practices specific to software development, rather than discussing entrepreneurial principles, innovation, risk-taking, or value-driven decision-making in business.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-15T05:10:49",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the concept of quality enablement in software development, emphasising the importance of delivering high-quality, functional software that meets user expectations. It aligns well with the core themes of working software, such as continuous delivery, customer feedback, and iterative development. The depth of discussion is significant, covering best practices, tools, and methodologies that contribute to achieving working software, making it a primary focus of the content.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses quality enablement and the Microsoft solution, without a clear focus on Agile planning tools.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-15T05:10:54",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of continuous quality and delivery in software development, which aligns with CI principles. It mentions the need for continuous testing and automated processes, which are key aspects of CI. However, it lacks explicit references to CI tools or detailed practices specific to CI, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and the importance of quality in application lifecycle management, without a focus on market share or competitive strategies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery practices without focusing on Agile leadership roles, strategies, or principles.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on tools and practices rather than the interpretation of complex situations or decision-making processes.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices, with no substantial focus on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content mainly discusses quality enablement, continuous testing, and delivery in modern software development rather than focusing on hypothesis formulation, experimentation, or validated learning in product development.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content primarily discusses quality enablement and software development practices rather than structured decision-making. However, it briefly touches on actionable requirements and stakeholder feedback, which align with decision-making principles, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content extensively discusses continuous delivery and quality enablement in the software development process, which aligns with Lean principles of maximizing value and minimizing waste. However, the focus on tools specific to Microsoft and practices not strictly aligned with Lean philosophy makes it a secondary theme.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-03-15T05:10:58",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the importance of continuous delivery, quality enablement, and the need for frequent software releases, which are core aspects of Release Management. It highlights practices such as continuous testing, user acceptance testing, and the necessity of agile methodologies to meet modern application demands. The depth of discussion on tools and strategies for improving release cycles further supports its strong alignment with the category.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content addresses the importance of defining actionable requirements and engaging with stakeholders to gather feedback, which are relevant to the Product Owner's responsibilities. However, the primary focus is more on quality enablement and continuous delivery rather than directly on the Product Owner role.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-03-15T05:11:03",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of cycle time in relation to software delivery and quality enablement, particularly highlighting how traditional QA practices can increase cycle time. It also mentions the importance of reducing cycle time to improve delivery speed and efficiency. However, while cycle time is a recurring theme, it is not the primary focus of the content, which is more centred on quality enablement and continuous delivery practices.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses quality enablement in software development but does not specifically focus on Azure Pipelines or related CI/CD practices within Azure DevOps. It mentions tools like Visual Studio 2012 and general software quality principles without a clear emphasis on Azure Pipelines.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-03-15T05:11:01",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent releases, which are central to the concept of deployment frequency. It highlights the need for modern applications to be updated frequently and the impact of deployment frequency on quality and user satisfaction. The discussion includes strategies for achieving higher deployment frequency, such as continuous testing and automation, which aligns well with the category's core themes. However, while the content is rich in detail regarding quality enablement, it does not focus exclusively on deployment frequency, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the need for changes in software quality practices and delivery processes, which relates to change management within Agile frameworks, but it primarily focuses on quality enablement rather than change management as a clear, central topic.",
    "level": "Tertiary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development practices without a clear focus on team collaboration or dynamics.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-03-15T05:10:56",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses quality enablement and continuous delivery practices, which are relevant to BDD principles, particularly in the context of defining actionable requirements and acceptance criteria. However, it lacks a focused discussion on BDD itself, such as specific frameworks or the collaborative aspects between stakeholders that are central to BDD. The mention of acceptance criteria aligns with BDD, but the overall emphasis is more on quality practices rather than BDD methodologies.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-03-15T05:11:05",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of quality enablement in software development, which indirectly relates to digital transformation by highlighting the need for modern practices and tools to meet evolving consumer expectations. However, it lacks a direct focus on strategic adoption of digital technologies for business transformation, making it more of a secondary mention rather than a primary discussion.",
    "level": "Secondary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in modern application development, focusing on continuous quality assurance and delivery processes, rather than the concept of Minimum Viable Product (MVP).",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on practices, tools, and processes, without any specific emphasis on AI integration within Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on quality enablement in software development and continuous delivery practices, rather than on the technical aspects of configuring systems.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development through technical practices and tools, lacking explicit focus on strategic planning, market analysis, or customer alignment typically associated with product strategy.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in software development with a focus on tools and processes, rather than technical leadership or guiding development teams.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement, software delivery practices, and continuous improvement, with no focus on estimation techniques or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on quality enablement and continuous delivery practices in software development, with no significant discussion on cross-functional teams.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses the importance of continuous testing and quality enablement, including elements of acceptance testing as part of the software development lifecycle. However, it does not primarily focus on Test First Development or the principles of TDD.",
    "level": "Tertiary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement with Visual Studio 2012 and mentions systems that may operate on Windows, yet the primary focus is not specifically on the Windows operating system itself. Windows is a significant part of the discussion, but it is not the central theme.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous delivery practices and the necessity for automated deployments, but it primarily focuses on quality enablement and general software lifecycle management.",
    "level": "Tertiary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality enablement in software development and does not discuss large scale agility principles, frameworks, or enterprise-level transformation strategies. It emphasizes continuous delivery and quality improvement rather than the scaling of Agile methodologies across an organization.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on technical practices and tools, with no clear relevance to team motivation or dynamics.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses quality enablement in software development with Visual Studio 2012, but does not focus on remote working practices or Agile methodologies. Themes about general software quality and delivery do not align with the specified category.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "While the content discusses quality enablement and continuous improvement practices in software development, it does not primarily focus on continuous learning principles such as growth mindsets or effective knowledge sharing. It elaborates on quality practices and tools rather than on team learning or improvement methodologies directly.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on quality enablement in software development rather than on identifying or resolving specific technical issues. It discusses methodologies for improving software quality and delivery cycles, but does not emphasize troubleshooting techniques or the systematic resolution of software or hardware failures.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and continuous delivery in software development without a focus on experimentation or hypothesis-driven methodologies.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and tools like Visual Studio 2012, without a clear focus on the Scrum Master role or responsibilities.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and practices in software development, not focusing on transparency within Agile processes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on quality enablement in software development, discussing methodologies, tools, and practices, but does not center around working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-15T05:10:46",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses quality enablement in software development, touching on Agile principles and continuous delivery practices. However, while it mentions the role of developers and tools like Visual Studio, it lacks a focused discussion on specific Agile or DevOps methodologies, which diminishes its alignment with the category.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes, quality enablement, and tools related to Visual Studio 2012, rather than coaching techniques or practices.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-15T05:11:18",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in software development, aligning closely with key topics in Engineering Practices such as Continuous Integration, Continuous Delivery, and Test-Driven Development. It emphasises the need for continuous testing and quality assurance throughout the software lifecycle, which is a core principle of Agile methodologies. The depth of discussion is significant, covering various aspects of quality enablement, including actionable requirements, acceptance testing, and automation, thus providing a comprehensive view of modern engineering practices.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on quality enablement, continuous delivery, and application lifecycle management without directly addressing the concept of technical debt or its management.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is mainly focused on quality enablement, application lifecycle, and software development practices, with no clear discussion on the Sprint Review process in Scrum.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-15T05:10:16",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses quality enablement and continuous delivery in software development, which touches on aspects of product management, such as understanding customer needs and delivering value. However, it primarily focuses on technical implementation details and tools rather than the strategic alignment of product management principles. While there are mentions of stakeholder engagement and actionable requirements, the overall emphasis is on quality assurance and technical processes rather than the broader strategic frameworks and methodologies that define product management.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses quality enablement in software development, focusing on principles of continuous testing and delivery, rather than self-organisation or team autonomy.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses concepts related to continuous delivery and quality enablement, which align with Agile principles, but it primarily focuses on software tools and practices rather than explicitly exploring Agile frameworks themselves.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-03-15T05:11:11",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the importance of continuous value delivery and the need for adaptability in software development, which aligns with Agile principles. It mentions the necessity of frequent iterations and responsiveness to user feedback, key aspects of Agile strategy. However, the primary focus is on quality enablement and technical practices rather than a comprehensive discussion of Agile strategy itself, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement in software development, discussing practices and tools without directly addressing Azure Repos or its specific functionalities.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement strategies and practices within software development, focusing on continuous quality and delivery, rather than methods or practices specifically related to forecasting in Agile and Scrum.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-03-15T05:11:24",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content discusses quality enablement and continuous delivery in software development, which aligns with some Lean principles such as minimising waste and maximising value delivery. However, it primarily focuses on quality assurance and tools rather than explicitly addressing Lean Product Development principles, waste elimination, or customer feedback integration. The discussion lacks depth in Lean-specific methodologies and does not provide concrete examples or case studies related to Lean practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the concept of quality enablement within software development, discussing tools and practices rather than analyzing trends in Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices rather than accountability within Agile teams.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and continuous delivery in software development rather than scaling Kanban principles or practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and cycle time, which are aspects related to throughput, but is primarily focused on quality enablement and best practices rather than throughput as the central theme.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses Test Driven Development (TDD) as part of a broader discussion on quality enablement and continuous delivery practices, making TDD a major but secondary theme within the overall focus on software quality.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T16:17:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development and the use of Visual Studio 2012, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-15T05:10:16",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses quality enablement and continuous delivery in software development, which touches on Agile principles and practices. However, it lacks a direct focus on specific frameworks like Scrum or Kanban, and does not delve deeply into collaboration or team dynamics as outlined in the Social Technologies category. The mention of Agile concepts is present but not central, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:19:23",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses quality enablement and continuous delivery practices, which are relevant to Internal Developer Platforms, but the primary focus is on quality management and tools rather than the IDP concept itself.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:19:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-15T05:10:16",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on quality enablement in software development and does not explicitly discuss Scrum principles, roles, events, or artifacts. While it touches on concepts like continuous delivery and iterative processes, which are related to Agile methodologies, it lacks a direct connection to Scrum's specific framework and practices.",
    "level": "Ignored"
  }
}
