{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses continuous delivery and the importance of stakeholder engagement, which are relevant to Agile Product Management, but the primary focus is on quality enablement and software development practices rather than Agile methodologies specifically.",
    "level": "Tertiary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T15:06:11",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses practical techniques for quality enablement in software development, particularly through the use of Visual Studio 2012. It covers methodologies such as continuous testing, acceptance test planning, and the importance of automation in the development lifecycle. The article also highlights specific tools and practices that enhance Agile and DevOps processes, aligning well with the key topics of the category. The depth of discussion is significant, providing detailed insights into how these techniques can be implemented to improve software quality and delivery outcomes.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses quality enablement and continuous delivery practices, which are relevant to platform engineering, but the primary focus is on quality management and tools rather than the design and construction of internal platforms.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-15T18:44:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses quality enablement in software development, touching on aspects of code quality, testing practices, and the need for continuous delivery, which are relevant to the interplay between code and complexity. However, the primary focus is on quality enablement rather than a deep exploration of code complexity itself.",
    "level": "Tertiary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of continuous quality and feedback loops in software development, which aligns with the themes of learning and adaptation. However, the primary focus is on quality enablement and tools rather than on discovery and learning methodologies.",
    "level": "Tertiary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-15T18:44:57",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery processes without a clear focus on AI or automation within Agile frameworks.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous improvement and quality enablement, which are related to Lean principles, but the primary focus is on software development practices rather than Lean methodologies specifically.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-15T18:44:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices rather than specific installation or configuration procedures.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-15T18:45:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices without a clear focus on transparency and accountability within Agile teams.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of quality enablement and continuous delivery in software development, which relates to market adaptability through the need for organisations to respond quickly to changing consumer expectations and demands. However, the primary focus is on quality practices rather than explicitly on market adaptability strategies.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the interplay between technology (Visual Studio 2012 and quality enablement practices) and organisational structures (team dynamics, roles, and processes) in software delivery, making it a major but secondary theme.",
    "level": "Tertiary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the need for continuous quality and adaptability in software development, which aligns with themes of organisational resilience and change management, but it primarily focuses on technical implementations rather than the broader organisational strategies.",
    "level": "Tertiary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-07T15:06:09",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses the principles of continuous delivery and quality enablement, which are core to DevOps practices. It highlights the need for continuous testing, automation, and collaboration between development and operations teams, aligning well with DevOps principles. The depth of discussion on tools and practices, such as automated testing and deployment, further supports its relevance to the DevOps category.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T18:45:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development, specifically using Visual Studio 2012, and includes references to Agile concepts but does not focus on Agile, Scrum, DevOps, or Lean frameworks.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-15T18:45:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on decision-making processes or theories related to uncertainty.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-15T18:45:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not reference any specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and quality enablement, which are related to flow efficiency, but the primary focus is on quality rather than optimising throughput directly.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of continuous quality and delivery in software development, touching on team dynamics, stakeholder engagement, and the need for effective communication and feedback loops, which are relevant to the interplay between people and processes.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of continuous delivery and quality enablement in software development, which aligns with agile principles. However, it primarily focuses on quality practices and tools rather than broader organisational agility or frameworks.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-03-10T12:48:22",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of quality enablement in software development, which indirectly relates to business agility by emphasising the need for continuous delivery and responsiveness to consumer expectations. However, it primarily focuses on quality practices and tools rather than explicitly addressing the principles and strategies of business agility. While there are mentions of agile concepts, they are not the primary focus, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-03-10T14:50:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses quality enablement and continuous delivery, which are related to metrics and learning, but it primarily focuses on quality practices and tools rather than explicitly addressing metrics, data analysis, or feedback mechanisms. While there are mentions of measuring value and cycle times, the overall emphasis is on quality improvement rather than a structured exploration of metrics and learning principles.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T18:45:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and continuous delivery practices without a clear focus on Kanban principles or methodologies.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-15T18:45:27",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses practices and methodologies related to quality enablement in software development, including continuous testing, automated deployment, and the importance of actionable requirements, which align closely with the principles of Technical Excellence.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-15T18:45:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T18:45:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and quality enablement, with no clear focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-15T18:45:33",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses methodologies and practices related to quality enablement in software delivery, including continuous testing, iterative development, and the importance of quality in the product delivery lifecycle.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T18:45:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and the use of Visual Studio 2012, with no clear focus on the principles or practices of BetaCodex or decentralised organisational design.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses continuous delivery and quality enablement, which are related to optimising value delivery in software development. However, it primarily focuses on quality practices and tools rather than explicitly addressing Value Stream Management principles.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the use of Visual Studio 2012 as a tool for quality enablement in software development, which aligns with the category's focus on tools and software that facilitate Agile practices and DevOps integration.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-15T18:45:39",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses continuous quality enablement and its role in delivering value to customers through modern application lifecycles, iterative development, and feedback mechanisms, aligning closely with the principles of value delivery.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-15T18:45:41",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses quality enablement in the context of software development, specifically mentioning Microsoft tools like Visual Studio 2012 and Team Foundation Server, which are part of the Azure DevOps suite. It focuses on continuous delivery and quality practices that align with Azure DevOps methodologies.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-15T18:45:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of quality enablement and software development practices without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-15T18:45:43",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on continuous delivery and testing practices, rather than exploring Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses quality enablement and continuous delivery practices, which are relevant to the principles of the One Engineering System, but it primarily focuses on quality management and tools rather than the integration and standardisation of engineering processes across teams.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses continuous value delivery and quality enablement, which are relevant to Agile principles, but the primary focus is on quality practices and tools rather than a comprehensive exploration of the Agile Product Operating Model.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-15T18:45:48",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the need for continuous quality enablement in software development, which aligns with agile principles of adaptability and responsiveness to customer feedback. It emphasises the importance of iterative processes, continuous delivery, and the integration of user feedback, all of which are central to organisational agility.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-15T18:45:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on practices and tools rather than providing news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-15T18:45:51",
    "ai_confidence": 90,
    "non_ai_confidence": 30,
    "final_score": 84.0,
    "reasoning": "The content primarily discusses quality enablement within the context of the application lifecycle, including continuous delivery, testing practices, and the importance of tools like Visual Studio 2012 in managing software quality throughout the lifecycle stages.",
    "level": "Primary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and does not focus on the Daily Scrum or its related concepts.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content focuses on quality enablement and continuous testing practices rather than directly discussing the Definition of Done in Agile or Scrum contexts. It does touch on acceptance criteria but does not primarily explore the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the principles and practices necessary for achieving high-quality software development through continuous testing, quality enablement, and the use of tools like Visual Studio 2012. It directly touches on best practices in software quality, testing strategies, automation, and the impact of engineering practices on software delivery.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses continuous quality practices and software development tools but does not focus on identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content extensively discusses the principles of quality enablement as it relates to continuous delivery, emphasizing continuous testing, feedback cycles, and the need for automation in delivering high-quality software rapidly.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of quality enablement and continuous delivery in the context of modern business applications, suggesting a focus on strategic objectives related to maintaining competitive advantage through quality. However, it primarily focuses on operational practices and the application lifecycle rather than explicitly defining long-term strategic goals.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses aspects of continuous delivery and the need to deliver frequently, which relates to the concept of Lead Time, but it is predominantly focused on quality enablement rather than Lead Time specifically.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly discusses software quality enablement, tools, and practices within application development, without a central focus on organisational culture.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily focuses on quality enablement and software delivery practices, with only a fleeting mention of requirements without a clear, central discussion on the Definition of Ready.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices, which are not directly related to the management of a portfolio of projects.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 29.0,
    "reasoning": "The content mentions the importance of actionable requirements and stakeholder engagement, which could relate to the Product Backlog, but the primary focus is on quality practices and continuous delivery rather than outdated or specific backlog management techniques.",
    "level": "Quaternary"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of continuous delivery, engagement with stakeholders, and responsiveness to changing requirements, aligning with Agile values, but mainly focuses on quality enablement and tools rather than strictly on Agile Planning methodologies.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development, with no mention or focus on Value Stream Mapping principles, techniques, or tools related to Lean practices.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the integration of customer feedback into the development process, particularly in the context of quality enablement and iterative development cycles. However, the primary focus is on quality and delivery practices rather than specific mechanisms for feedback collection and analysis.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses methods to enhance quality and efficiency in software development through continuous testing, automation, and feedback loops, aligning well with key topics in Operational Practices.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement in software development and continuous delivery practices, without a focus on Scrum Team dynamics, roles, or collaboration.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses continuous delivery, the importance of feedback, and the adaptation of practices to meet modern application development needs, aligning it with principles of Agile philosophy. However, it primarily focuses on quality enablement and technical practices associated with software development tools, making Agile a significant but secondary theme.",
    "level": "Secondary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses quality enablement within the context of modern application lifecycles, touching on aspects like continuous delivery and the importance of quality in delivering value, which relates to strategic approaches in Agile environments.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses methodologies for improving software quality and user satisfaction through continuous feedback and iterative testing, which aligns with product validation practices.",
    "level": "Tertiary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses practices such as continuous delivery, feedback loops, and responsive development, which are aligned with Agile methodologies, but it primarily focuses on quality enablement rather than solely on Agile transformation.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and software development practices related to Visual Studio 2012, with no clear focus on mentoring processes, techniques, or topics relevant to agile mentoring.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses quality enablement in software development and emphasizes the need for continuous testing practices, including continuous acceptance testing and the importance of automating tests to maintain quality in a rapid delivery environment.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on tools and practices for continuous delivery and quality management, rather than on team performance or collaboration within agile teams.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "While the content discusses quality enablement and principles related to software delivery, it mainly focuses on quality practices rather than the concept of increments specifically within Agile or Scrum frameworks.",
    "level": "Tertiary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 80,
    "non_ai_confidence": 40,
    "final_score": 76.0,
    "reasoning": "The content discusses acceptance criteria, acceptance test planning, and the importance of continuous acceptance testing in the context of quality enablement in modern software development, aligning it closely with ATDD principles.",
    "level": "Secondary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 88.0,
    "reasoning": "Content primarily discusses techniques and practices crucial for software development, focusing on quality enablement, continuous delivery, and the importance of agile methodologies, aligning well with the themes outlined in the Software Development category.",
    "level": "Primary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "Content discusses agile principles and continuous delivery, emphasizing iterative development and responsiveness to stakeholder feedback, which aligns with Agile Project Management.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content mentions continuous value delivery and feedback mechanisms, which align with Agile principles, but it primarily discusses quality enablement and tools for software development rather than focusing explicitly on Agile values and principles.",
    "level": "Tertiary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in the context of software development and tools, rather than focusing on Scrum principles, roles, and practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content discusses quality enablement and application lifecycle management, not primarily about modern source control practices.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses concepts related to continuous quality, feedback loops, and the importance of adapting to consumer needs, which aligns with empirical process control principles. However, it does not primarily focus on empirical process control, as it covers broader topics related to quality enablement and software development practices.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and does not focus on the Scrum Values or their significance within the Scrum framework.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and practices in software development, with no clear focus on Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement, testing practices, and application lifecycle management rather than collaboration tools and their impact on Agile teams.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software quality enablement and application lifecycle management, which does not directly address organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality enablement and software development practices, rather than focusing on Lean Startup principles, MVPs, or the iterative learning processes central to Lean Startup methodology.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content discusses the necessity of frequent releases in modern software development, emphasizing continuous delivery and continuous improvement to enhance quality and user satisfaction.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses how quality enablement influences customer satisfaction and emphasizes the importance of continuous quality and feedback cycles. However, the primary focus is on quality assurance practices and software development frameworks rather than directly exploring principles and practices solely focused on customer satisfaction.",
    "level": "Tertiary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and continuous delivery in software development, with no clear focus on scaling Scrum practices or frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses largely on quality enablement and continuous software development practices, with no clear reference to evidence-based leadership principles or data-driven decision-making.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices, with no clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-15T19:42:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on quality enablement in software development, tools, and processes rather than discussing frameworks or strategies related to scaling agility across an organization.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-10T12:48:18",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 0,
    "final_score": 83.0,
    "reasoning": "The content extensively discusses the importance of quality enablement in software development, emphasising continuous testing, delivery, and the need for high-quality applications. It aligns closely with the principles of software craftsmanship, continuous integration, and the role of automation in enhancing development efficiency. The depth of discussion on practices such as acceptance testing, automated testing, and the impact of quality on business agility further supports its strong alignment with the category of Engineering Excellence.",
    "level": "Primary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement and software development practices without addressing revenue per employee or relevant financial efficiency metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and continuous delivery practices in software development, with no clear focus on asynchronous development principles or collaboration across time zones.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about quality enablement and software development practices, rather than systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses quality enablement and continuous value delivery, which are important for enhancing user experience and meeting customer expectations, thus contributing to customer retention. However, the primary focus is on software quality practices and delivery methodologies rather than specific retention strategies.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses practical strategies for ensuring continuous quality in software development, specifically within modern application lifecycles. It emphasizes continuous testing, user engagement, actionable requirements, and real-world applications of Agile principles. The focus on adapting processes and the integration of tools to enhance delivery aligns well with pragmatic thinking.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on quality enablement and tools for software development rather than backlog refinement or Agile practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of quality enablement in the application lifecycle and highlights the need for continuous delivery and feedback for improving software quality. While it emphasizes aspects related to innovation in software development processes and tools, the primary focus remains on quality, which is a secondary theme to the overarching concept of innovation.",
    "level": "Tertiary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content discusses quality enablement in software development with a focus on continuous delivery and improvement, but it does not specifically address Scrum principles, roles, or practices. The content is more aligned with general software quality management rather than Scrum product development.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development without focusing on scaling Agile practices, frameworks, or enterprise-level initiatives.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development and the tools required for continuous delivery, with a focus on technical processes rather than employee engagement and motivation.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content touches on concepts of continuous improvement and quality enablement, which align with Lean Thinking principles, but the primary focus is on software development practices rather than solely on Lean principles.",
    "level": "Tertiary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content discusses quality enablement and the necessity of continuous testing and automation within software development, particularly emphasizing the roles of automated testing in modern application lifecycles and agile practices.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on software quality enablement and practices specific to software development, rather than discussing entrepreneurial principles, innovation, risk-taking, or value-driven decision-making in business.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 88.0,
    "reasoning": "The content extensively discusses the importance of delivering high-quality, functional software and practices involved in achieving continuous quality and value delivery in modern software development. It emphasizes actionable requirements, user feedback, and the iterative nature of software development, aligning closely with the principles of working software.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses quality enablement and the Microsoft solution, without a clear focus on Agile planning tools.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content extensively discusses practices, tools, and strategies related to continuous delivery and quality enablement, which are key components of Continuous Integration. It emphasizes the importance of continuous testing and automated processes that align closely with CI principles.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and the importance of quality in application lifecycle management, without a focus on market share or competitive strategies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement and software delivery practices without focusing on Agile leadership roles, strategies, or principles.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on tools and practices rather than the interpretation of complex situations or decision-making processes.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices, with no substantial focus on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content mainly discusses quality enablement, continuous testing, and delivery in modern software development rather than focusing on hypothesis formulation, experimentation, or validated learning in product development.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content primarily discusses quality enablement and software development practices rather than structured decision-making. However, it briefly touches on actionable requirements and stakeholder feedback, which align with decision-making principles, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content extensively discusses continuous delivery and quality enablement in the software development process, which aligns with Lean principles of maximizing value and minimizing waste. However, the focus on tools specific to Microsoft and practices not strictly aligned with Lean philosophy makes it a secondary theme.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content discusses continuous delivery, continuous quality, and practices that directly relate to ensuring timely and reliable software releases, which aligns closely with key topics of Release Management.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content addresses the importance of defining actionable requirements and engaging with stakeholders to gather feedback, which are relevant to the Product Owner's responsibilities. However, the primary focus is more on quality enablement and continuous delivery rather than directly on the Product Owner role.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content discusses the measurement and implications of Cycle Time in relation to software delivery and continuous quality practices, making Cycle Time a primary theme throughout the article.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses quality enablement in software development but does not specifically focus on Azure Pipelines or related CI/CD practices within Azure DevOps. It mentions tools like Visual Studio 2012 and general software quality principles without a clear emphasis on Azure Pipelines.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of delivering software more frequently and the practices needed to achieve continuous delivery, aligning closely with the themes of deployment frequency in Agile and DevOps.",
    "level": "Secondary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the need for changes in software quality practices and delivery processes, which relates to change management within Agile frameworks, but it primarily focuses on quality enablement rather than change management as a clear, central topic.",
    "level": "Tertiary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development practices without a clear focus on team collaboration or dynamics.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content discusses the importance of actionable requirements, effective user stories, and acceptance criteria, which are central to Behaviour Driven Development. It emphasizes continuous testing and collaboration among stakeholders, which aligns with BDD principles.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality enablement in modern applications and how strategic practices and tools, particularly Microsoft's solutions, can enhance operational efficiency and deliver continuous value, which are key aspects of digital transformation.",
    "level": "Secondary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in modern application development, focusing on continuous quality assurance and delivery processes, rather than the concept of Minimum Viable Product (MVP).",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on practices, tools, and processes, without any specific emphasis on AI integration within Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on quality enablement in software development and continuous delivery practices, rather than on the technical aspects of configuring systems.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development through technical practices and tools, lacking explicit focus on strategic planning, market analysis, or customer alignment typically associated with product strategy.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the importance of quality enablement in software development with a focus on tools and processes, rather than technical leadership or guiding development teams.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality enablement, software delivery practices, and continuous improvement, with no focus on estimation techniques or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on quality enablement and continuous delivery practices in software development, with no significant discussion on cross-functional teams.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses the importance of continuous testing and quality enablement, including elements of acceptance testing as part of the software development lifecycle. However, it does not primarily focus on Test First Development or the principles of TDD.",
    "level": "Tertiary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "The content discusses quality enablement with Visual Studio 2012 and mentions systems that may operate on Windows, yet the primary focus is not specifically on the Windows operating system itself. Windows is a significant part of the discussion, but it is not the central theme.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous delivery practices and the necessity for automated deployments, but it primarily focuses on quality enablement and general software lifecycle management.",
    "level": "Tertiary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality enablement in software development and does not discuss large scale agility principles, frameworks, or enterprise-level transformation strategies. It emphasizes continuous delivery and quality improvement rather than the scaling of Agile methodologies across an organization.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality enablement in software development, focusing on technical practices and tools, with no clear relevance to team motivation or dynamics.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses quality enablement in software development with Visual Studio 2012, but does not focus on remote working practices or Agile methodologies. Themes about general software quality and delivery do not align with the specified category.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "While the content discusses quality enablement and continuous improvement practices in software development, it does not primarily focus on continuous learning principles such as growth mindsets or effective knowledge sharing. It elaborates on quality practices and tools rather than on team learning or improvement methodologies directly.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on quality enablement in software development rather than on identifying or resolving specific technical issues. It discusses methodologies for improving software quality and delivery cycles, but does not emphasize troubleshooting techniques or the systematic resolution of software or hardware failures.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and continuous delivery in software development without a focus on experimentation or hypothesis-driven methodologies.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and tools like Visual Studio 2012, without a clear focus on the Scrum Master role or responsibilities.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and practices in software development, not focusing on transparency within Agile processes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on quality enablement in software development, discussing methodologies, tools, and practices, but does not center around working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses quality enablement in the context of software development, emphasizing the importance of continuous testing, Agile methodologies, and modern engineering practices such as TDD and CI/CD. It highlights how software developers can adapt to modern application lifecycles and improve collaboration and delivery, making it a primary topic.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-15T19:42:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes, quality enablement, and tools related to Visual Studio 2012, rather than coaching techniques or practices.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 90,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content primarily discusses principles aligned with Engineering Practices, especially focusing on quality enablement, continuous integration, testing, and agile methodologies. It emphasizes practices like continuous delivery, acceptance testing, and the use of tools for automation, which are all central to high-quality software engineering.",
    "level": "Primary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on quality enablement, continuous delivery, and application lifecycle management without directly addressing the concept of technical debt or its management.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is mainly focused on quality enablement, application lifecycle, and software development practices, with no clear discussion on the Sprint Review process in Scrum.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-10T14:49:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses quality enablement and continuous delivery in software development, which touches on aspects of product management, such as understanding customer needs and delivering value. However, it primarily focuses on technical implementation details and tools rather than the strategic alignment of product management principles. While there are mentions of stakeholder engagement and actionable requirements, the overall emphasis is on quality assurance and technical processes rather than the broader strategic frameworks and methodologies that define product management.",
    "level": "Quaternary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses quality enablement in software development, focusing on principles of continuous testing and delivery, rather than self-organisation or team autonomy.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses concepts related to continuous delivery and quality enablement, which align with Agile principles, but it primarily focuses on software tools and practices rather than explicitly exploring Agile frameworks themselves.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses several Agile-related themes such as continuous value delivery, adaptability in software development, and the need for frequent iterations, aligning closely with the principles of Agile Strategy.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement in software development, discussing practices and tools without directly addressing Azure Repos or its specific functionalities.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement strategies and practices within software development, focusing on continuous quality and delivery, rather than methods or practices specifically related to forecasting in Agile and Scrum.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses continuous quality, testing practices, and agile principles which align with Lean Product Development concepts, but it primarily focuses on software quality and tools rather than Lean principles themselves.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the concept of quality enablement within software development, discussing tools and practices rather than analyzing trends in Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement and software development practices rather than accountability within Agile teams.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-15T19:42:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on quality enablement and continuous delivery in software development rather than scaling Kanban principles or practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and cycle time, which are aspects related to throughput, but is primarily focused on quality enablement and best practices rather than throughput as the central theme.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T09:08:57",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses Test Driven Development (TDD) as part of a broader discussion on quality enablement and continuous delivery practices, making TDD a major but secondary theme within the overall focus on software quality.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T16:17:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development and the use of Visual Studio 2012, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-17T16:17:39",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and quality enablement practices that align with Agile methodologies, but it primarily focuses on software quality and tools rather than the frameworks of Scrum, Kanban, Lean, or Agile as central themes.",
    "level": "Tertiary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:19:23",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses quality enablement and continuous delivery practices, which are relevant to Internal Developer Platforms, but the primary focus is on quality management and tools rather than the IDP concept itself.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:19:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality enablement in software development and does not focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T11:40:54",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on quality enablement in software development and does not explicitly discuss Scrum principles, roles, events, or artifacts. While it touches on concepts like continuous delivery and iterative processes, which are related to Agile methodologies, it lacks a direct connection to Scrum's specific framework and practices.",
    "level": "Quinary"
  }
}
