{
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content addresses modern software development practices and the need to adapt to consumer expectations, touching on topics that relate to the concept of market adaptability, but it primarily focuses on quality enablement and continuous delivery, making it a secondary theme.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 75,
    "non_ai_confidence": 30,
    "final_score": 62.0,
    "reasoning": "The content discusses testing practices and their role in quality enablement but primarily focuses on the broader topic of continuous quality and delivery rather than solely on Test First Development.",
    "level": "Secondary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices, quality enablement, and tools, without a clear focus on organisational culture.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses practices related to agile development processes and continuous delivery, emphasizing the need for frequent iterations and responsiveness to user feedback, indicating a significant but secondary theme around agile principles.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 35,
    "non_ai_confidence": 0,
    "final_score": 24.0,
    "reasoning": "While the content discusses quality enablement in software development, it primarily focuses on practices, tools, and methodologies related to continuous delivery and quality assurance, rather than sensemaking as a clear primary topic.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 52.0,
    "reasoning": "The content discusses quality enablement and continuous delivery processes, which relate to performance improvement in software management, but the focus is more on practical quality practices rather than directly on Evidence Based Management principles.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 75,
    "non_ai_confidence": 30,
    "final_score": 62.0,
    "reasoning": "The content discusses Continuous Quality practices, automation, and mentions Test Driven Development (TDD) as part of a broader strategy for delivering high-quality software. While TDD is an important part of the development process, the primary focus is on overall quality enablement and continuous delivery rather than TDD itself.",
    "level": "Secondary"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on testing practices, tools, and methodologies, without a central focus on Scrum or the role of a Scrum Master.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and the use of Visual Studio 2012, with no clear focus on Scaling Scrum or its principles.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 70,
    "non_ai_confidence": 20,
    "final_score": 55.0,
    "reasoning": "The content discusses concepts related to continuous delivery and iterative feedback, which are aligned with agile methodologies. However, it primarily focuses on quality enablement and operational aspects of software development rather than the core agile values and principles.",
    "level": "Secondary"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in the context of software development and does not address psychological safety as a central theme.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 88,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content extensively discusses Microsoft Team Foundation Server and its role in quality enablement within the application lifecycle, focusing on tools and practices central to Azure DevOps.",
    "level": "Secondary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 45,
    "non_ai_confidence": 30,
    "final_score": 40.0,
    "reasoning": "While the content discusses quality enablement and the use of tools like Visual Studio 2012 and Microsoft Team Foundation Server, it primarily focuses on quality management and development practices rather than modern source control techniques specifically.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and its impacts on customer satisfaction, suggesting the importance of delivering high-quality software to meet modern consumer expectations, which aligns with customer retention but acts as a secondary theme.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on quality enablement in software development, tools, and processes rather than Scrum values. Scrum values such as commitment, courage, focus, openness, and respect are not the main subject here.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and application lifecycle management, with Microsoft tools being mentioned in passing. Azure Pipelines is not a central topic.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software development and the importance of continuous delivery and feedback cycles, rather than focusing on asynchronous development specifically.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content discusses how quality enablement and modern application development practices impact consumer satisfaction and expectations.",
    "level": "Secondary"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses requirements and acceptance criteria, which are related to the concept of 'Definition of Done', but the primary focus is on quality enablement and continuous delivery practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of actionable requirements and stakeholder engagement, which are relevant to the role of a Product Owner, but the primary focus is on quality enablement and software development practices rather than on the Product Owner role itself.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on quality enablement in software development and application lifecycle management, with minimal relevance to entrepreneurship.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and continuous delivery which involves making decisions about requirements, testing processes, and tools to achieve quality in software development, but it is primarily focused on quality enablement rather than decision making itself.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 82,
    "non_ai_confidence": 10,
    "final_score": 60.0,
    "reasoning": "The content primarily focuses on practical approaches to quality enablement in software development, discussing actionable strategies, tools, and methodologies that enhance the application lifecycle and improve user satisfaction.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on the need for continuous quality and frequent delivery cycles in software development, discussing practices and tools that support a rapid deployment frequency.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 25,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content primarily focuses on quality enablement and modern application lifecycle management, with only minor mentions of issues that could suggest technical debt, such as rework and unmet user expectations.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses quality enablement in software development, emphasizing the technical aspects of using Visual Studio 2012 and continuous testing practices.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses continuous delivery and iterative processes relevant to software development, which aligns with empirical process control in agile methodologies, but focuses primarily on quality enablement.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 48,
    "non_ai_confidence": 10,
    "final_score": 37.0,
    "reasoning": "The content discusses the expectations of employees as consumers and the impact of quality in software delivery on employee satisfaction, but it primarily focuses on software development practices and quality enablement, making employee engagement a secondary theme.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 86,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content extensively discusses quality enablement, continuous testing, and the importance of actionable requirements, which are central to Behaviour Driven Development practices.",
    "level": "Secondary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content extensively discusses practices and principles related to continuous delivery and iterative feedback in software development, which are fundamental aspects of large scale agility.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 57,
    "non_ai_confidence": 10,
    "final_score": 43.0,
    "reasoning": "The content discusses practices related to continuous delivery and quality enablement, which are aligned with Agile principles, but the primary focus is on quality and tools rather than Agile frameworks specifically.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 35,
    "non_ai_confidence": 0,
    "final_score": 24.0,
    "reasoning": "While the content discusses quality enablement and its relation to software development processes, accountability is not a central focus. The emphasis is on improving quality and continuous delivery rather than on accountability mechanisms or frameworks.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 95,
    "non_ai_confidence": 30,
    "final_score": 76.0,
    "reasoning": "The content extensively discusses various aspects of application lifecycle management, including continuous delivery, quality enablement, testing practices, and the importance of modern tools and practices to support software development. The focus on quality throughout the lifecycle, the integration of systems for various roles, and the reference to Microsoft's ALM tools further establish its primary relevance to Application Lifecycle Management.",
    "level": "Secondary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses practices relevant to software development efficiency and quality, touching on aspects of lean principles such as continuous quality, actionable requirements, and feedback cycles, but it primarily focuses on quality enablement and specific tools rather than lean thinking itself.",
    "level": "Ignored"
  },
  "Scrum Product Management": {
    "category": "Scrum Product Management",
    "ai_confidence": 35,
    "non_ai_confidence": 20,
    "final_score": 30.0,
    "reasoning": "The content focuses primarily on quality enablement in software development and application lifecycle management rather than on Scrum practices or product management methodologies.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "The content primarily discusses quality enablement in software engineering, highlighting best practices, continuous delivery, and modern application lifecycle management, all of which directly pertain to engineering excellence.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on software quality enablement and application lifecycle management rather than organisational physics.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content extensively discusses concepts such as quality enablement, continuous delivery, testing strategies, and development processes within the context of software development using Visual Studio 2012.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily discusses the importance of quality enablement in the context of modern application lifecycles, emphasizing continuous delivery and responsiveness to user needs, which are key principles of enterprise agility.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "The content is primarily focused on quality enablement in software development, discussing practices, tools, and methodologies that ensure high-quality outcomes, clearly aligning with the theme of Technical Excellence.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on quality enablement in software development and continuous delivery processes, with no clear or primary discussion related to decision theory.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 45,
    "non_ai_confidence": 20,
    "final_score": 38.0,
    "reasoning": "The content discusses various aspects of software quality and development practices, including aspects of agile methodologies, but Scrum is not a central or primary focus.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and application lifecycle management, and does not focus on Azure Repos specifically.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 28.0,
    "reasoning": "The content discusses quality enablement in software development with a focus on Microsoft tools, including Visual Studio 2012 and Team Foundation Server, but does not specifically center on Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily discusses the importance of continuous quality delivery and agile practices in modern software development, emphasizing the need for frequent iterations and adaptability in response to consumer demands.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 45.0,
    "reasoning": "The content explores the complexities involved in quality enablement and modern application delivery, discussing the need for tailored tools and processes to manage these complexities, which make it a major theme.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the necessity of automated deployment and the provisioning of virtual labs which are aspects of system configuration. However, these topics are not the primary focus but rather secondary themes within a broader discussion on quality enablement in software development.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 55,
    "non_ai_confidence": 20,
    "final_score": 44.0,
    "reasoning": "The content addresses the importance of actionable requirements and managing the backlog in relation to continuous quality and delivery, indicating that while it's not primarily about the product backlog, it is a significant theme throughout.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on quality enablement in software development and doesn't discuss cross functional teams as a primary topic.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses quality enablement and continuous delivery, which are aspects of product strategy, but primarily focuses on quality practices and the tools supporting them rather than overarching product strategy concepts.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 70,
    "non_ai_confidence": 30,
    "final_score": 58.0,
    "reasoning": "The content discusses quality enablement and continuous delivery which align with lean principles, but the primary focus is on tools and practices related to Visual Studio 2012 rather than explicitly on lean product development.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software development and associated tools, with no significant focus on value stream mapping as a central topic.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content primarily focuses on quality enablement in software development, discussing continuous delivery, testing practices, and the tools needed to ensure high-quality software. It emphasizes modern requirements of software development and the importance of software that meets user expectations.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement within software development and the use of Visual Studio 2012, rather than focusing on product discovery as a central theme.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content extensively covers the concept of continuous testing and the essential role of automation in testing to ensure quality in software development, indicating a strong focus on test automation practices.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 85,
    "non_ai_confidence": 40,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses quality enablement in the context of software development, with a significant focus on acceptance testing as a continuous activity. It emphasizes the importance of acceptance criteria and continuous acceptance testing, which aligns closely with Acceptance Test Driven Development principles.",
    "level": "Secondary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development using Visual Studio 2012 and does not focus on mentoring or teaching relationships.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content discusses quality assurance, continuous delivery, and tools for software development, but does not primarily focus on site reliability engineering or SRE practices.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content discusses the necessity and practices of delivering software more frequently, emphasizing the need for continuous delivery and the modern application lifecycle, making frequent releases a central theme.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on quality enablement in software development and does not address Daily Scrum practices or principles.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content discusses the necessity for continuous quality and rapid iteration in software development, which aligns with innovative practices in modern business applications.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses how quality enablement and modern application lifecycles are vital for companies to effectively deliver high-quality software in a rapidly changing digital landscape, emphasizing continuous delivery and adaptation to consumer expectations.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on quality enablement in software development and the application lifecycle, not on portfolio management.",
    "level": "Ignored"
  },
  "Sprint Planning Workshop": {
    "category": "Sprint Planning Workshop",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on tools, techniques, and processes that support modern application lifecycles, without any clear reference to sprint planning or workshops.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses quality enablement and modern application lifecycles, touching on leadership principles like continuous improvement and stakeholder engagement, but it mainly focuses on practical methods and tools rather than providing strong technical leadership themes.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The content primarily focuses on quality enablement in software development rather than organisational change as a clear primary topic.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software development using Visual Studio 2012, focusing on processes and tools for continuous quality and delivery, without directly addressing self-organization.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content discusses the need for continuous delivery and adaptability in software development, emphasizing the importance of agility in meeting modern consumer demands.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "The content extensively discusses continuous delivery practices, emphasizing the need for continuous testing, quality enablement, and modern application lifecycles which are central to achieving continuous delivery.",
    "level": "Secondary"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality enablement in software development using Visual Studio, without any significant discussion or relevance to BetaCodex concepts.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on continuous quality practices and tools rather than analyzing trends.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content focuses significantly on improving the quality and efficiency of software delivery processes, including concepts related to continuous testing and delivery, which align with flow efficiency principles.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The primary focus of the content is on quality enablement and continuous delivery in software development rather than continuous learning as a clear, primary topic.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 25,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content primarily discusses quality enablement in software development, including best practices and tools to enhance application lifecycle management. Troubleshooting is only tangentially mentioned within the broader context of quality assurance and testing, rather than being the central focus.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement and continuous delivery in software development, with no substantial focus on Scrum principles or practices.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 60,
    "non_ai_confidence": 20,
    "final_score": 48.0,
    "reasoning": "While the content discusses rapid delivery cycles and mentions continuous improvement, it is primarily focused on 'quality enablement' in software development rather than Agile Planning as a central theme.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on quality enablement in software development, discussing practices, tools, and methodologies related to software quality, rather than market share.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "Content primarily focuses on software quality enablement and development practices, with only a brief mention of technology access disparities between home and office, which does not make remote working a central theme.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content extensively discusses continuous testing practices, the need for automation in testing, and specific methodologies like Test Driven Development (TDD), making automated testing a central theme.",
    "level": "Secondary"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on practices, tools, and methodologies, but does not mention Kanban or its scaling specifically.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content discusses quality enablement and software development processes, but does not clearly focus on coaching as a primary topic.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content predominantly focuses on quality enablement and software delivery practices, without addressing the concept of revenue per employee.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 62,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content addresses actionable requirements and backlog management as part of quality enablement, indicating it is a significant theme, but not the main focus.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 25,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content focuses primarily on software quality enablement and practices, not on leadership principles or evidence-based decision making.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses the importance of continuous quality, testing practices, and delivery processes in modern software development, making operational practices the primary focus.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 65,
    "non_ai_confidence": 10,
    "final_score": 48.0,
    "reasoning": "The content discusses practices related to continuous delivery and feedback loops, which align with principles of Agile methodologies, but it primarily focuses on quality enablement and the use of Visual Studio 2012 rather than being centered on Scaled Agile specifically.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 48,
    "non_ai_confidence": 30,
    "final_score": 43.0,
    "reasoning": "The content primarily discusses quality enablement and continuous delivery in software development, with limited emphasis on agile planning tools specifically.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and the use of Visual Studio 2012, rather than focusing on the concept of MVP (Minimum Viable Product). MVP is not a central theme and is not explicitly mentioned.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "The content discusses the necessity of changing practices and tools to meet modern quality demands in software delivery, making change management a significant theme.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content discusses critical aspects of agile practices, such as continuous delivery, feedback loops, and iterative processes, indicating a strong focus on agile transformation.",
    "level": "Secondary"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content discusses integrating customer feedback into the software development process to improve requirements and quality, indicating a strong focus on customer feedback loops.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 14.0,
    "reasoning": "The content focuses primarily on quality enablement in the modern application lifecycle and software practices, with only a very brief mention of user feedback and engagement, which does not establish transparency as a central theme.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses software development practices, particularly focusing on quality enablement, continuous delivery, and the use of Visual Studio 2012 in the development lifecycle, directly relating to the work and challenges faced by software developers.",
    "level": "Secondary"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 65,
    "non_ai_confidence": 0,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of continuous delivery and effective software delivery cycles, which relates to throughput, but the primary focus is on quality enablement and not directly on throughput itself.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on quality enablement and modern application lifecycles, with no mention or focus on Sprint Reviews or related Scrum practices.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality enablement in software development and specifically focuses on Visual Studio 2012 as a tool for achieving this. There are no clear miscellaneous themes present.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "While the content primarily discusses quality enablement and software delivery practices, it touches on strategic goals such as continuous value delivery and meeting modern consumer expectations. However, these strategic goals are part of a broader discussion rather than the central theme.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of continuous delivery and automation but primarily focuses on quality enablement and continuous value delivery, with deployment strategies as a secondary theme.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software development and practices for continuous delivery, rather than focusing on working agreements.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily emphasizes the importance of continuous value delivery in software development, along with practices and tools to achieve that goal.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement and application lifecycle management using Visual Studio 2012, without a clear focus on Lean Startup methodologies or principles.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 85,
    "non_ai_confidence": 50,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses quality enablement in software development using Visual Studio 2012, which is a Microsoft product closely associated with Windows development.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on the processes and practices necessary for quality enablement in software development, highlighting the importance of roles, feedback loops, and collaboration within teams.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software quality enablement and practices surrounding modern application lifecycles, without focusing on personal topics.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 75,
    "non_ai_confidence": 10,
    "final_score": 56.0,
    "reasoning": "The content discusses the role of actionable requirements and acceptance criteria, which are critical for the 'Definition of Ready' concept in software development, making it a major secondary theme.",
    "level": "Secondary"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software development, focusing on processes, tools, and methodologies rather than team motivation.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses quality enablement in software development, continuous delivery, and related tools, without focusing on Scrum teams or their specific roles and practices.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "While the content primarily discusses quality enablement in software development, it briefly touches on tools that facilitate collaboration within teams in the context of Application Lifecycle Management (ALM) using Microsoft solutions.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 55,
    "non_ai_confidence": 20,
    "final_score": 44.0,
    "reasoning": "The content discusses systems of engagement and systems of record as part of the quality enablement strategy, highlighting how different systems interact within the context of software development and delivery. However, the primary focus remains on quality enablement rather than on systems thinking itself.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 40,
    "non_ai_confidence": 10,
    "final_score": 31.0,
    "reasoning": "While there are references to cycle time and delivery speed, these are not the primary focus of the content, which is centered around quality enablement in software development.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content focuses primarily on quality enablement in the software development lifecycle, discussing tools and processes for continuous quality and value delivery, with no mention of hypothesis driven development as a central theme.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 45.0,
    "reasoning": "While the content primarily focuses on quality enablement in software development, it includes aspects of collaboration among stakeholders and requires team interactions for successful implementation of continuous quality processes.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content primarily discusses quality enablement in the context of modern software development practices, emphasizing continuous testing, automation, and delivery, which are key aspects of Continuous Integration.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses continuous delivery and quality enablement, which are related to agility in software development, but the primary focus is on quality rather than scaling agility itself.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content primarily discusses quality enablement and software development practices, with only a secondary focus on team dynamics related to delivery cycles and collaboration.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses quality enablement in software development using Visual Studio 2012, focusing on continuous delivery and quality practices, rather than on experimentation itself.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content extensively discusses the implications of cycle time in software delivery and emphasizes the need for continuous improvement in delivery processes, making it a major theme.",
    "level": "Secondary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the need for continuous quality enablement and adaptability in software development processes, which implies themes of resilience and change, though it mainly focuses on quality practices rather than change management itself.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 55,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content discusses continuous delivery and quality enablement, which are related to lean principles, particularly in the context of reducing cycle time and improving efficiency in software development. However, lean principles are not the primary focus of the content.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 95,
    "non_ai_confidence": 10,
    "final_score": 70.0,
    "reasoning": "The content is primarily focused on practices for achieving quality in software development, discussing continuous testing, delivery, and the integration of development tools to enhance engineering practices.",
    "level": "Secondary"
  }
}
