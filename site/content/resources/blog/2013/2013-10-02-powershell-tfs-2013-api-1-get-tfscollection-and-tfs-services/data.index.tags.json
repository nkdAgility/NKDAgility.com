{
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on technical implementation rather than decision-making processes or theories.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses TFS API interactions, including aspects related to project management and team settings, which are relevant to processes in a development environment.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with only brief mentions of concepts related to Agile frameworks, such as Work Item Tracking and Project Management.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without any mention of Scrum values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses TFS API and includes references to Work Item Tracking and Project Process Configuration, which are relevant to Azure Boards, but the primary focus is on PowerShell scripting and TFS API interactions.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without discussing trends or analysis.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, detailing various functions and scenarios, indicating a focus on experimentation with the API.",
    "level": "Secondary"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions, rather than discussing lean product development principles or practices.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, which involves engineering practices and technical implementation. However, it is more about specific coding techniques rather than a broader discussion on engineering excellence.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on technical implementations and functions rather than Value Stream Mapping.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without discussing market adaptability.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing self-organisation as a central theme.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with only brief mentions of project management and team settings, which are not central themes.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing decision-making processes.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing various functions and assemblies related to TFS, without any clear discussion on Scaling Kanban.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on assembly imports and functions for connecting to TFS services, rather than test automation.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with only brief mentions of concepts related to Agile practices such as Work Item Tracking and Team Settings Configuration.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies related to TFS, rather than discussing miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no clear discussion or emphasis on Scaled Agile principles or practices.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing various functions and assemblies without any mention of cycle time or related concepts.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on technical implementations and code examples, with no mention of working agreements.",
    "level": "Ignored"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no clear discussion or relevance to BetaCodex concepts.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing team performance or related themes.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no clear discussion of Agile values or principles.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on technical implementation details rather than any financial metrics or concepts related to revenue per employee.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing strategic goals.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and scripting rather than discussing organisational physics concepts.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and code examples without discussing technical leadership concepts.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no clear discussion or emphasis on Lean Principles.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the TFS 2013 API and PowerShell scripting, with no clear focus on Azure Pipelines.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion of Scrum roles, events, or team dynamics.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is a key aspect of DevOps practices related to continuous integration and deployment.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions, with no mention of employee engagement.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is central to managing application lifecycle processes such as work item tracking, version control, and project management.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing empirical process control concepts.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies rather than discussing frequent releases.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing how to set up and connect to various TFS services. Troubleshooting is not a central theme.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content briefly mentions the configuration and layout of Backlogs and Boards, which is relevant to backlog refinement, but the primary focus is on using PowerShell with the TFS API.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing evidence-based management principles.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion on remote working themes.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses TFS (Team Foundation Server) and its API, which includes aspects of project management and work item tracking, but the primary focus is on using PowerShell to interact with the TFS API rather than on agile planning tools themselves.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion of personal experiences or themes.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on assembly imports and functions for connecting to TFS services. Automated testing is not a central theme.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no clear discussion or emphasis on Scrum practices or scaling Scrum methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on practical applications of PowerShell with the TFS 2013 API, demonstrating a pragmatic approach to solving real-world problems through scripting and API interaction.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on assembly imports and functions for connecting to TFS services. Acceptance Test Driven Development is not a central theme.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing organisational change.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion of Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion on Product Owner responsibilities or related themes.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions rather than discussing product strategy.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without discussing flow efficiency as a central theme.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without discussing transparency as a central theme.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 27.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations rather than discussing change management processes or strategies.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and code examples relevant to software development.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing various functions and services related to working with TFS, which is central to the topic.",
    "level": "Secondary"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content primarily discusses how to configure and interact with the TFS 2013 API using PowerShell, including importing assemblies and connecting to various TFS services, which are central to system configuration.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without any mention of Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and code examples, with no mention of organisational culture.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is more about technical implementation than a broader discussion on digital transformation.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no mention of Sprint Reviews or related Scrum events.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is a key component of Azure DevOps services.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and code examples, with no clear discussion of entrepreneurship.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing various functions and assemblies without discussing technical debt as a central theme.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no mention or discussion of Daily Scrum practices or principles.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing how to connect to TFS services and manage work items, rather than discussing Continuous Integration practices.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without addressing customer satisfaction as a central theme.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without a clear emphasis on large scale agility concepts.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and code examples, with no clear emphasis on coaching or mentoring.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is directly related to source control functionalities, including version control and work item tracking.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses using PowerShell with the TFS API, indicating a process of learning and building a library of scripts, but the primary focus is on technical implementation rather than continuous learning as a central theme.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with only brief mentions of concepts related to project management and work item tracking, which are not central to Scrum Product Development.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing resilience or change as a central theme.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion on Agile strategies or methodologies.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on assembly imports and functions for connecting to TFS services, without any mention of Test Driven Development.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and scripting rather than discussing Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on technical implementation rather than market share or related topics.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no clear emphasis on MVP concepts.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and code examples, without a clear emphasis on organisational agility.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing how to connect to TFS services and manage work items, rather than discussing throughput as a central theme.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses using PowerShell to interact with the TFS API, which can enhance value delivery through automation and integration, but the primary focus is on technical implementation rather than value delivery itself.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing scaling agility or related concepts.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies relevant to software development practices.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing how to connect to TFS collections and services, rather than discussing deployment strategies.",
    "level": "Ignored"
  },
  "Sprint Planning Workshop": {
    "category": "Sprint Planning Workshop",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no mention of sprint planning or related workshop activities.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing accountability as a central theme.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations rather than discussing team collaboration directly.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions related to TFS, rather than discussing portfolio management.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on technical implementation rather than the concept of 'Definition of Ready'.",
    "level": "Ignored"
  },
  "Agility": {
    "category": "Agility",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with only brief mentions of concepts related to Agile practices such as Work Item Tracking and Team Settings Configuration.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses TFS API interactions, including aspects related to project management and configuration, which are relevant to backlog management, but the primary focus is on PowerShell scripting rather than the product backlog itself.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses using PowerShell to interact with the TFS API, showcasing a method to enhance functionality and streamline processes, which indicates a degree of innovation. However, the primary focus is on technical implementation rather than innovation itself.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses building a library of PowerShell statements for TFS API, which implies an ongoing effort to improve and enhance functionality, but the primary focus is on technical implementation rather than continuous improvement itself.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion of Scrum roles, practices, or principles.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing cross-functional teams.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and code examples, with no clear discussion on team motivation.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no mention or discussion of psychological safety.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without any mention of Lean Thinking principles.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without discussing systems thinking concepts.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content mentions seeking feedback on PowerShell scenarios, indicating a secondary theme of customer feedback, but the primary focus is on using the TFS 2013 API with PowerShell.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies, which demonstrates a high level of technical knowledge and expertise.",
    "level": "Secondary"
  },
  "Scrum Product Management": {
    "category": "Scrum Product Management",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with only brief mentions of project management and work item tracking, which are not central themes.",
    "level": "Ignored"
  },
  "Featured": {
    "category": "Featured",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing various functions and assemblies related to TFS.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies rather than exploring the concept of sensemaking.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on assembly imports and functions for connecting to TFS services. Lead time is not a central topic.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on assembly imports and functions for connecting to TFS services, with no mention of test-first development principles.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses using PowerShell to interact with the TFS 2013 API, which is related to collaboration tools, but the primary focus is on scripting and API usage rather than collaboration itself.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing various functions and practices for effective software engineering and project management.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies. Continuous Delivery is not a central theme.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is closely related to Azure Repos functionalities, particularly in version control and work item tracking.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses using PowerShell to interact with the TFS API, which involves operational practices related to managing TFS collections and services. However, the primary focus is on coding and API usage rather than operational practices themselves.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is relevant to Windows environments, particularly in the context of Microsoft technologies.",
    "level": "Secondary"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without any mention of leadership principles or evidence-based practices.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical aspects and functions without any mention of customer retention strategies or themes.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, which is related to software development and project management rather than site reliability engineering.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions without discussing business agility concepts.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, with no significant discussion of Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without discussing complexity thinking as a central theme.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and code examples, with no clear emphasis on mentoring.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations rather than discussing enterprise agility concepts.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing various functions and assemblies without discussing deployment frequency.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions, assemblies, and technical implementations, demonstrating a high level of technical expertise.",
    "level": "Secondary"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing assembly imports and functions, without discussing the concept of 'Definition of Done' or related criteria.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses using PowerShell to interact with the TFS 2013 API, focusing on technical implementation details rather than Behaviour Driven Development principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing technical implementations and functions rather than discussing product discovery.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing specific functions and assemblies without discussing hypothesis-driven development.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on using PowerShell to interact with the TFS 2013 API, detailing assembly imports and functions for connecting to TFS services. Asynchronous development is not a central theme.",
    "level": "Ignored"
  }
}
