{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T01:19:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses build processes and issues related to software development, without a clear focus on Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T15:39:04",
    "ai_confidence": 78.0,
    "ai_mentions": 70.0,
    "ai_alignment": 80.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content provides a detailed discussion on the importance of maintaining build integrity within a development environment, specifically using tools like Visual Studio and Team Foundation Server (TFS). It explores practical techniques for managing builds, identifying failures, and enforcing quality standards, which aligns well with the category's focus on practical application of tools and methodologies in Agile and DevOps practices. The depth of discussion is significant, covering various aspects of build management and the implications of broken builds, thus demonstrating a strong alignment with the key topics outlined in the category.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses build processes and their importance in software development, which relates to platform engineering principles, but it primarily focuses on specific build issues rather than a comprehensive discussion on platform engineering.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-16T01:19:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, lacking a focus on evidence-based management principles.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-10T13:06:11",
    "ai_confidence": 72.0,
    "ai_mentions": 60.0,
    "ai_alignment": 80.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the implications of broken builds, which directly relates to code quality principles. It addresses the need for standards, testing, and ownership of builds, aligning well with the themes of software development best practices and the management of complexity in codebases. However, while it touches on these topics, it does not delve deeply into complexity theory or its application, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-15T07:09:20",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses the technical aspects of build failures and management rather than focusing on discovery and learning processes. While it touches on the importance of understanding the value of builds and mentions ownership, it lacks a deeper exploration of methodologies that foster innovation or continuous learning. The discussion is more about troubleshooting and project management than about fostering a culture of experimentation or learning from failures.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T01:19:36",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses build processes and issues in software development without any mention of AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-03-15T07:08:53",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses build processes and quality assurance in software development, which touches on aspects of efficiency and quality control. However, it does not explicitly mention Lean principles or methodologies, nor does it focus on waste reduction or value stream mapping. The discussion is more centred around build management rather than Lean practices, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-03-10T15:04:16",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the installation and configuration of the 'Build Notifications' application within Visual Studio 2010, providing specific steps on how to access and configure it. It also touches on the importance of maintaining build quality and the implications of broken builds, which aligns with the category's focus on configuration best practices. However, the primary focus is more on the consequences of broken builds and team dynamics rather than a detailed guide on installation and configuration processes, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-03-15T07:08:47",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the importance of accountability in the context of broken builds, highlighting the need for developers to take ownership of their contributions. It mentions the consequences of failing to maintain builds and the need for clear communication about who is responsible for issues. However, while it touches on accountability, it lacks a broader discussion on transparency and does not delve deeply into the principles of openness or trust within the team. The focus is more on technical aspects of build management rather than fostering an environment of transparency.",
    "level": "Secondary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-16T01:19:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without a clear focus on market adaptability strategies or methodologies.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-15T07:09:13",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses technical aspects of build processes and troubleshooting without a significant focus on the interplay between technology and organisational structures. While it touches on team ownership of builds, it lacks a broader exploration of sociotechnical interactions or organisational culture, which are central to the Sociotechnical Systems category.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-16T01:19:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses build processes and technical implementations without addressing organisational resilience or change management.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-07T15:38:56",
    "ai_confidence": 78.0,
    "ai_mentions": 85.0,
    "ai_alignment": 75.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of maintaining a successful build process, which is a key aspect of DevOps practices. It highlights the need for collaboration among developers to ensure builds pass and identifies issues that can lead to build failures. The mention of tools like 'Build Notifications' and the reference to TFS (Team Foundation Server) indicate a focus on automation and continuous integration, aligning well with DevOps principles. However, while the content is relevant, it does not delve deeply into broader DevOps cultural shifts or metrics, which slightly limits its depth.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T01:19:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and practices related to software development, which aligns with Agile and DevOps principles.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T01:19:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and technical implementations related to software development, without a focus on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T01:19:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and issues in software development, with no reference to events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining builds and the implications of broken builds, which relates to flow efficiency in terms of optimising work throughput and identifying bottlenecks in the development process.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of team ownership of builds and the implications of broken builds on team dynamics, which aligns with the category's focus on human behaviour and structured methodologies.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-16T01:19:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, lacking a focus on organisational agility or broader implications for enterprise-level adaptability.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-16T01:19:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, with no clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the implications of broken builds, which relates to metrics in Agile and DevOps practices. However, it primarily focuses on the operational aspects of build management rather than a comprehensive exploration of metrics and learning.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T01:19:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-10T18:51:54",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of maintaining a passing build, which aligns with principles of Continuous Integration and quality assurance in software development. It mentions the need for developers to write tests and highlights the consequences of broken builds, which touches on technical excellence. However, the discussion lacks depth in exploring methodologies like TDD or CI/CD practices in detail, and it primarily focuses on the operational aspects of build management rather than broader engineering practices.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T01:20:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, without reference to complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T01:20:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical aspects of build processes and software development, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining builds and the implications of broken builds, which relates to quality assurance and deployment practices in product delivery.",
    "level": "Tertiary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T01:20:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, with no clear focus on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T01:20:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, rather than focusing on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T01:20:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without focusing on specific products or literature.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-15T07:09:04",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the importance of maintaining a passing build and the implications of broken builds, which relates to value delivery in terms of quality assurance and customer satisfaction. However, it primarily focuses on technical aspects of build management rather than broader strategies or methodologies for delivering value to customers. While it touches on the concept of ownership and quality gates, it lacks a comprehensive exploration of value delivery principles.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-11T10:41:14",
    "ai_confidence": 78.0,
    "ai_mentions": 85.0,
    "ai_alignment": 75.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of maintaining builds, troubleshooting build failures, and the use of build notifications, which are all relevant to Azure DevOps. It mentions tools and practices associated with Azure DevOps, such as Team Foundation Server (TFS) and build definitions. However, while it provides practical insights into build management, it lacks a comprehensive overview of Azure DevOps services and methodologies, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-16T01:20:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of build processes and troubleshooting, lacking personal reflections or experiences.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T01:20:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, lacking a focus on Systems Thinking principles or holistic analysis of organisational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T01:20:12",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses build processes and issues related to broken builds, without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-16T01:20:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without a clear focus on Agile principles or the Agile Product Operating Model.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-16T01:20:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, without a clear focus on organisational agility principles or practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of build processes and notifications in a development environment, which relates to DevOps practices. However, it primarily focuses on practical issues rather than providing industry news or reviews.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-11T12:06:44",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of maintaining builds and the implications of broken builds, which relates to the maintenance and governance aspects of Application Lifecycle Management. However, it lacks a comprehensive exploration of the entire application lifecycle and does not delve deeply into methodologies or tools specific to ALM. The focus is primarily on build management rather than the broader scope of application lifecycle management.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses broken builds and related issues but does not mention the Daily Scrum or its relevance to team alignment or adaptability.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and issues related to broken builds, not the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-11T15:10:39",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of maintaining a passing build, which aligns with best practices in software development and quality assurance. It addresses the implications of broken builds, the need for proper testing, and the ownership of builds, all of which are relevant to technical mastery. However, while it touches on these topics, the depth of discussion is somewhat limited to practical examples rather than a broader exploration of methodologies or principles.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build management and technical issues related to version control and continuous integration, which do not align with product discovery methodologies.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-15T07:08:12",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the importance of maintaining a passing build and the implications of broken builds, which aligns with Continuous Delivery principles. However, it primarily focuses on the operational aspects of build management rather than the broader methodologies and practices of Continuous Delivery. While it touches on automation and quality assurance, it lacks a comprehensive exploration of Continuous Delivery strategies, metrics, or case studies.",
    "level": "Tertiary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on the technical aspects of build management and the implications of broken builds, rather than discussing long-term strategic objectives or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to broken builds and their management, without addressing Lead Time as a metric or its implications.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical aspects of build processes and issues related to software development, without addressing any cultural elements or themes related to organisational culture.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on issues related to broken builds and quality control in development, rather than the criteria for backlog item readiness which defines the Definition of Ready.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build management in software development without focusing on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the management of build processes and related issues, which are not directly related to product backlog discussions.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly discusses build processes and issues related to builds in software development, failing to focus on Agile Planning methodologies, principles, or practices.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build processes and issues in software development, which is unrelated to Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on build processes and issues within a software project, without discussing customer feedback mechanisms.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-11T18:12:10",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of maintaining a successful build process, which is a key aspect of operational practices in software development. It highlights the need for developers to ensure their code builds correctly, which aligns with the principles of continuous improvement and quality assurance. However, while it touches on relevant topics, the discussion lacks depth in operational strategies and metrics, focusing more on specific instances rather than broader operational practices.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses build management and technical issues related to software development rather than Scrum team dynamics or roles.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical aspects and processes related to build management, with no clear discussion on Agile values, principles, or philosophy.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on technical aspects of build management and troubleshooting rather than strategic approaches within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build processes and troubleshooting within a software development context, but it does not focus on validating product ideas through user engagement or methodologies specific to product validation.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses build processes and the implications of broken builds, which does not relate to Agile transformation strategies, methodologies, or cultural shifts.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build issues, troubleshooting, and technical details related to software development, not mentoring or coaching in Agile.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-03-15T07:09:00",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the importance of maintaining builds and the implications of broken builds, which indirectly relates to automated testing. However, it lacks explicit discussions on automated testing methodologies, types of tests, or tools. The focus is more on build management rather than the principles and practices of automated testing itself.",
    "level": "Tertiary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-15T07:08:44",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 50.0,
    "ai_depth": 75.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the importance of maintaining a successful build process, which is crucial for team collaboration and performance. It highlights the need for developers to take ownership of builds, which aligns with fostering accountability within teams. However, while it touches on team dynamics and the impact of build failures, it lacks a broader discussion on methodologies or practices specifically aimed at enhancing team performance in an Agile context.",
    "level": "Tertiary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues, with limited focus on delivering software increments or discussions related to Agile and Scrum.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and management rather than Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-11T17:01:13",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content provides a detailed discussion on the importance of maintaining build integrity in software development, addressing issues related to broken builds, and the implications for developers. It aligns closely with key topics in software development, such as version control, code quality assurance, and CI/CD practices. The depth of the discussion is significant, covering both the reasons for build failures and practical steps to manage them, thus demonstrating a strong focus on software engineering practices.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build management and troubleshooting, with no clear focus on agile methodologies or principles.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses build processes and management in development, with no clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses issues related to builds and version control but does not engage with Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-03-15T07:08:08",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the importance of maintaining a passing build in a version control context, highlighting issues related to broken builds, developer responsibilities, and the use of build notifications. It aligns well with modern source control practices, particularly in relation to continuous integration and the ownership of builds. However, while it provides substantial detail on the topic, it does not delve deeply into specific version control methodologies or branching strategies, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of maintaining a successful build process and mentions the necessity for understanding the value of builds, which aligns with empirical process control principles like transparency and adaptation. However, it primarily focuses on technical aspects of build systems rather than on broader Agile principles or practices.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of managing builds and does not focus on Scrum values or principles.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and fails related to Team Foundation Server (TFS), not Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting within development environments, with no clear focus on collaboration tools or their impact on Agile team dynamics.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, with no clear focus on organisational change principles or methodologies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and issues in software development, without any focus on Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-03-15T07:09:15",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses build processes and the importance of maintaining a passing build, which is tangentially related to frequent releases. However, it does not explicitly address the principles of frequent releases, continuous delivery, or deployment strategies. The focus is more on troubleshooting and maintaining build quality rather than on the broader context of release frequency and its impact on user satisfaction or agile practices.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and technical implementation details without addressing customer satisfaction directly.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses build processes and issues related to software development, rather than Scaling Scrum practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses technical aspects of build processes and developer responsibilities but does not focus on evidence-based decision-making or leadership practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on build processes and technical issues related to code, with no mention of psychological safety in team dynamics or support culture.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of handling broken builds in software development, focusing on individual developer practices rather than strategies for scaling agile principles across an organization.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-10T13:06:07",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content discusses the importance of maintaining a passing build, which directly relates to software craftsmanship and quality assurance. It highlights best practices for build management, the significance of testing, and the need for developers to take ownership of their code, aligning well with the principles of engineering excellence. The depth of discussion is substantial, covering various aspects of build failures and their implications on quality, thus providing a comprehensive view on the topic.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and quality control in software development, not related to revenue metrics or employee productivity.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on build processes and troubleshooting rather than asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-03-15T07:08:05",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses technical aspects of software builds and related notifications, with limited reference to organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and software development practices without focusing on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-15T07:08:33",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses practical problem-solving strategies related to build failures in a software development context, which aligns well with the themes of Pragmatic Thinking. It addresses real-world applications of DevOps principles, such as the importance of maintaining build quality and ownership, and provides specific examples of issues that can arise in a development environment. The depth of discussion is substantial, covering various aspects of build management and the implications of broken builds, which further supports its alignment with the category.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses builds, their management, and troubleshooting, which are not related to backlog refinement.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and failure identification within software development, lacking a focus on creating or measuring innovative practices or frameworks.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to software builds and quality maintenance, with no clear focus on Scrum principles or practices related to product development.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without reference to scaled Agile methodologies or frameworks.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical processes related to build systems and issues in software development, not focusing on employee motivation, commitment, or engagement.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-03-15T07:08:40",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses build processes and the importance of maintaining quality in software development, which can relate to Lean principles of minimising waste and enhancing efficiency. However, it does not explicitly mention Lean Thinking concepts or tools, nor does it focus on waste identification or continuous improvement in a Lean context. The discussion is more centred on build management rather than Lean methodologies.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-03-15T07:08:51",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses build processes and the implications of broken builds, which are related to testing practices. However, it lacks a direct focus on test automation principles, frameworks, or specific tools. The discussion is more about build management and developer responsibilities rather than the automation of testing itself, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on build processes and maintenance in software development rather than discussions related to entrepreneurship principles or innovation.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-15T07:08:29",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of maintaining a working build and the implications of broken builds, which aligns with the concept of delivering functional software. It touches on best practices for ensuring quality and the need for developers to understand the value of a working build. However, while it provides some insights into the topic, it lacks a comprehensive exploration of working software principles and does not explicitly mention Agile or Scrum frameworks.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build failures and build management in a development context, which is not directly related to Agile planning tools.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-15T07:08:26",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance of maintaining a successful build process, which is a core aspect of Continuous Integration (CI). It explicitly mentions the consequences of broken builds, the need for developers to ensure their code passes builds, and the role of build notifications. The discussion aligns well with CI principles, such as maintaining code quality and early problem identification. The depth of the discussion is substantial, covering various aspects of build management and the implications of build failures, although it could benefit from more detailed exploration of CI tools and practices.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build processes and development quality but does not relate to market share or strategies to increase it.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of software builds and related troubleshooting, with no clear focus on leadership roles or practices within an Agile context.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of managing software builds and troubleshooting failures rather than exploring principles of sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-03-15T07:08:42",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses build processes and the importance of maintaining a passing build, which is tangentially related to reliability in software development. However, it lacks explicit references to Site Reliability Engineering principles, such as SLOs, SLIs, or incident response practices. The focus is more on build management rather than the broader scope of SRE, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on build processes and issues in software development rather than hypothesis formulation and experimentation.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-03-15T07:09:18",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the implications of broken builds, which indirectly relates to decision-making in a software development context. However, it lacks a structured approach to decision-making methodologies and does not provide empirical evidence or frameworks for evaluating options. The focus is more on operational issues rather than on the principles of evidence-based decision-making.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses build failures and quality checks, which are related to Lean principles of waste reduction and maintaining quality. However, the primary focus is on software build processes and troubleshooting rather than a direct discussion of Lean methodology.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-03-15T07:08:21",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of maintaining builds and the implications of broken builds, which relates to release management. However, it primarily focuses on the technical aspects of build processes rather than broader release management strategies, such as planning and scheduling. While it touches on some relevant themes, it lacks depth in discussing release management as a whole.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build management and developer practices, not the responsibilities or strategies specific to the Product Owner role.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes, failures, and notifications rather than the measurement or implications of Cycle Time.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-03-15T07:08:24",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses various aspects of build processes, including the importance of passing builds, identifying build failures, and managing build notifications. It provides practical insights into how to interact with builds in the context of Azure DevOps, specifically mentioning build definitions and the implications of broken builds. However, while it touches on CI/CD principles, it lacks a comprehensive exploration of Azure Pipelines as a whole, which slightly limits its depth and alignment with the category.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses issues related to build failures and quality checks, which can impact deployment frequency, but the primary focus is not on the optimisation of deployment intervals specifically.",
    "level": "Tertiary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of build processes in software development, with no clear focus on change management principles or practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses team ownership of builds and the importance of collaboration in ensuring successful project outcomes, making it a major secondary theme despite focusing primarily on technical aspects of build management.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on the topic of software builds, their management, and developer responsibilities rather than discussing Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, which is not central to digital transformation themes.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to development environments, not the development or utilization of a Minimum Viable Product.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses build processes and software development practices without any clear reference to AI applications or discussions related to Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-03-15T07:08:37",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the implications of broken builds and the importance of maintaining build integrity, which relates to system configuration. However, it primarily focuses on the development process and team dynamics rather than the technical aspects of configuring systems. While there are mentions of tools like Visual Studio and TFS, the depth of discussion on configuration management and optimisation strategies is limited.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and troubleshooting in a technical context, rather than focusing on product strategy or methodologies for product development.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-03-15T07:09:07",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the responsibilities of developers in ensuring builds pass, which touches on aspects of technical leadership. However, it lacks a direct focus on agile methodologies, servant leadership, or mentoring, which are core to the category. The discussion is more about technical processes than leadership strategies.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development without addressing estimation techniques or concepts.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on issues related to build processes and project management rather than discussing cross-functional teams or Agile methodologies.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-03-15T07:08:58",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses build failures and the importance of maintaining a passing build, which indirectly relates to testing practices. However, it does not explicitly focus on Test First Development or the principles of writing tests before code. The discussion is more about build management and developer accountability rather than the core themes of TDD or embedding quality through testing prior to implementation.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-03-15T07:08:14",
    "ai_confidence": 78.0,
    "ai_mentions": 90.0,
    "ai_alignment": 70.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 50,
    "final_score": 75.0,
    "reasoning": "The content primarily discusses the management of builds within a Windows environment, specifically referencing the 'Build Notifications' application installed with Visual Studio 2010 on Windows 7. It addresses installation and usage of Windows-specific applications, which aligns well with the category's focus on Windows. The discussion includes troubleshooting build failures, which is relevant to the Windows operating system's functionality. However, while the content is heavily focused on Windows, it also touches on general build management concepts that could apply to other environments, slightly reducing the overall alignment score.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on build failures and troubleshooting rather than deployment methodologies or strategies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to broken builds and code quality, lacking focus on scaling Agile methodologies or enterprise-level practices.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical aspects of builds and debugging rather than on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to build management and specific tools, rather than addressing remote work practices in an Agile context.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the implications of broken builds and the responsibilities of developers, emphasizing the need for ownership and quality in coding practices, which can relate to learning from failures and self-improvement. However, it mainly centers on technical details and troubleshooting rather than continuous learning as a primary theme.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-03-15T07:08:35",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content primarily focuses on identifying and resolving issues related to broken builds in a software development context. It discusses the importance of passing builds, potential causes of build failures, and methods for diagnosing these issues, which aligns well with the troubleshooting category. The depth of discussion is substantial, providing specific examples and solutions, thus justifying a high confidence score.",
    "level": "Secondary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the issues related to build failures and development practices, without a focus on hypothesis-driven experimentation or testing in Agile workflows.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on build processes and technical details related to builds and version control, rather than discussing the role, responsibilities, or practices of a Scrum Master.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 54.0,
    "reasoning": "The content discusses the visibility of build processes and emphasizes the importance of team ownership and accountability related to build failures. However, the primary focus is on operational details rather than on broader themes of transparency in Agile methodologies.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on build processes, troubleshooting, and team responsibilities regarding code quality, without discussing working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-15T07:08:17",
    "ai_confidence": 78.0,
    "ai_mentions": 85.0,
    "ai_alignment": 75.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the importance of maintaining build quality, which is crucial for software developers. It addresses the implications of broken builds, the need for proper testing, and the responsibilities of developers in ensuring builds pass. While it does not explicitly mention Agile or DevOps methodologies, it aligns with modern engineering practices by emphasising the significance of build processes and developer accountability. The depth of discussion is moderate, providing practical insights but lacking extensive exploration of Agile or DevOps frameworks.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on issues related to software builds, notifications, and technical procedures rather than on coaching practices or principles.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-15T07:08:31",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of maintaining a passing build, which aligns with the principles of Continuous Integration and Continuous Delivery (CI/CD). It highlights the need for developers to write tests and maintain code quality, which relates to Clean Code and Test-Driven Development (TDD). However, the discussion is more focused on the operational aspects of build management rather than the underlying engineering practices themselves, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and management without directly addressing the concept of technical debt or its implications.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on broken builds and general build management in software development, not on Sprint Reviews or related Scrum practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of build management and troubleshooting in software development, with no clear focus on product management principles or strategies.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-03-15T07:09:22",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the importance of ownership in maintaining builds, which touches on self-organisation principles. However, it primarily focuses on technical aspects of build management rather than exploring self-organisation in teams or Agile practices. The mention of ownership is brief and lacks depth in discussing how to foster a self-organising culture.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and management within a development context, with no focus on Agile frameworks or principles.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on troubleshooting build issues in software development, without discussing Agile methodologies or strategic alignment.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-03-15T07:08:49",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses build processes and notifications, which are relevant to Azure Repos, but it primarily focuses on general build management rather than specific Azure Repos functionalities. While it mentions Team Foundation Server (TFS) and build definitions, it lacks detailed exploration of Azure Repos features like branching strategies, pull requests, or repository management. Therefore, while there is some relevance, the primary focus is not strictly on Azure Repos.",
    "level": "Secondary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of managing build failures and does not focus on forecasting methods or practices within Agile or Scrum.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development rather than Lean Product Development principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the practicalities and implications of build failures in a development environment, without exploring broader trends or patterns within Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-03-15T07:08:19",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the importance of ownership in relation to broken builds, highlighting that the responsibility for maintaining builds lies with the team members who last broke them. It touches on the distinction between blame and accountability, particularly in the context of team dynamics. However, while it mentions accountability, the primary focus is more on the technical aspects of build management rather than a comprehensive exploration of accountability as a principle in Agile practices.",
    "level": "Tertiary"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about build management and troubleshooting in a software development context, with no clear focus on Kanban principles or their application in scaling environments.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-03-15T07:08:55",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses build failures and their implications, which indirectly relates to throughput by highlighting the importance of maintaining a functional build for efficient workflow. However, it lacks a direct focus on measuring or optimising throughput, and the discussion is more centred on build management rather than the flow of work items in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build failures and quality in the context of software projects, but does not focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-15T07:08:05",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the implications of broken builds, which indirectly relates to team dynamics and collaboration. However, it lacks explicit references to Scrum, Kanban, Lean, or Agile methodologies, and does not delve deeply into the principles of these frameworks. The focus is more on technical aspects of build management rather than on social technologies or collaborative frameworks.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:00:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of build processes and troubleshooting, with no clear focus on leadership practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:32:57",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses build processes and their importance in software development, which relates to the concept of an Internal Developer Platform, but it primarily focuses on specific build issues rather than the broader framework or architecture of an IDP.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:32:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues in software development, with no mention of AI or its applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-15T07:08:05",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses build processes and issues related to software development, without any explicit mention of Scrum roles, events, or principles. While it touches on team dynamics and quality assurance, it does not align with the core themes of Scrum or provide in-depth discussion on Scrum practices.",
    "level": "Ignored"
  }
}
