{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T01:19:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses build processes and issues related to software development, without a clear focus on Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-16T01:19:29",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses practical techniques related to build management, including the use of specific tools like Visual Studio and TFS, as well as methodologies for maintaining build quality and ownership.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses build processes and their importance in software development, which relates to platform engineering principles, but it primarily focuses on specific build issues rather than a comprehensive discussion on platform engineering.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-16T01:19:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, lacking a focus on evidence-based management principles.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-16T01:19:33",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance of maintaining build quality in software development, addressing issues related to code quality, testing, and the implications of broken builds, which aligns well with the themes of code quality and complexity.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the implications of broken builds, which relates to learning from failures and improving processes. However, the primary focus is on technical details and project management rather than a broader exploration of discovery and learning methodologies.",
    "level": "Tertiary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T01:19:36",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses build processes and issues in software development without any mention of AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining build quality and ownership, which aligns with Lean principles of continuous improvement and value creation, but it primarily focuses on build processes rather than Lean methodologies.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-16T01:19:39",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the installation and configuration of the Build Notifications application and the process of managing builds within Visual Studio, which aligns with the category's focus on installation and configuration procedures.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of accountability in relation to broken builds and the ownership of builds, which aligns with the theme of accountability. However, it primarily focuses on technical aspects of build management rather than a broader discussion on transparency and accountability principles.",
    "level": "Tertiary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-16T01:19:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without a clear focus on market adaptability strategies or methodologies.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of build ownership and team dynamics in maintaining build quality, which relates to sociotechnical interactions. However, the primary focus is on technical aspects of build processes rather than a comprehensive exploration of sociotechnical systems.",
    "level": "Tertiary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-16T01:19:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses build processes and technical implementations without addressing organisational resilience or change management.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-16T01:19:45",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses build processes, the importance of passing builds, and the implications of broken builds, which are central to DevOps practices.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T01:19:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and practices related to software development, which aligns with Agile and DevOps principles.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T01:19:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and technical implementations related to software development, without a focus on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T01:19:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and issues in software development, with no reference to events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining builds and the implications of broken builds, which relates to flow efficiency in terms of optimising work throughput and identifying bottlenecks in the development process.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of team ownership of builds and the implications of broken builds on team dynamics, which aligns with the category's focus on human behaviour and structured methodologies.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-16T01:19:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, lacking a focus on organisational agility or broader implications for enterprise-level adaptability.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-16T01:19:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, with no clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the implications of broken builds, which relates to metrics in Agile and DevOps practices. However, it primarily focuses on the operational aspects of build management rather than a comprehensive exploration of metrics and learning.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T01:19:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-16T01:20:00",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of maintaining a passing build, the implications of broken builds, and the practices surrounding build management, which align closely with technical excellence in software development.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T01:20:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, without reference to complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T01:20:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical aspects of build processes and software development, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining builds and the implications of broken builds, which relates to quality assurance and deployment practices in product delivery.",
    "level": "Tertiary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T01:20:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, with no clear focus on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T01:20:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, rather than focusing on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T01:20:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without focusing on specific products or literature.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining build quality and the implications of broken builds, which relates to value delivery in terms of ensuring quality and reliability in software development. However, the primary focus is on technical details and troubleshooting rather than broader value delivery strategies.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-16T01:20:09",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses build processes and management within the context of Azure DevOps, specifically referencing build notifications and the importance of maintaining build quality, which aligns with Azure DevOps functionalities.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-16T01:20:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of build processes and troubleshooting, lacking personal reflections or experiences.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T01:20:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, lacking a focus on Systems Thinking principles or holistic analysis of organisational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T01:20:12",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses build processes and issues related to broken builds, without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-16T01:20:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without a clear focus on Agile principles or the Agile Product Operating Model.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-16T01:20:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, without a clear focus on organisational agility principles or practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of build processes and notifications in a development environment, which relates to DevOps practices. However, it primarily focuses on practical issues rather than providing industry news or reviews.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-16T01:20:17",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of maintaining build integrity within the software development lifecycle, addressing issues related to build failures, and the implications for application quality and governance.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-02-16T01:20:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses build processes and issues related to software development, without a clear focus on Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses broken builds and related issues but does not mention the Daily Scrum or its relevance to team alignment or adaptability.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and issues related to broken builds, not the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of maintaining a successful build process, technical implications of broken builds, and practices for improving build management, which align well with technical mastery principles.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build management and technical issues related to version control and continuous integration, which do not align with product discovery methodologies.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of maintaining passing builds, identifying build failures, and the value of automated build processes, all of which are key aspects of Continuous Delivery.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on the technical aspects of build management and the implications of broken builds, rather than discussing long-term strategic objectives or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to broken builds and their management, without addressing Lead Time as a metric or its implications.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical aspects of build processes and issues related to software development, without addressing any cultural elements or themes related to organisational culture.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on issues related to broken builds and quality control in development, rather than the criteria for backlog item readiness which defines the Definition of Ready.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build management in software development without focusing on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the management of build processes and related issues, which are not directly related to product backlog discussions.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content predominantly discusses build processes and issues related to builds in software development, failing to focus on Agile Planning methodologies, principles, or practices.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build processes and issues in software development, which is unrelated to Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on build processes and issues within a software project, without discussing customer feedback mechanisms.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the implications of broken builds in software development, emphasizing the need for accountability, troubleshooting, and practices like gated check-ins to improve build reliability and maintain operational quality.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses build management and technical issues related to software development rather than Scrum team dynamics or roles.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical aspects and processes related to build management, with no clear discussion on Agile values, principles, or philosophy.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on technical aspects of build management and troubleshooting rather than strategic approaches within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build processes and troubleshooting within a software development context, but it does not focus on validating product ideas through user engagement or methodologies specific to product validation.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses build processes and the implications of broken builds, which does not relate to Agile transformation strategies, methodologies, or cultural shifts.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build issues, troubleshooting, and technical details related to software development, not mentoring or coaching in Agile.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 60,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses the importance of builds being passed and mentions testing indirectly in the context of continuous integration practices, but it primarily focuses on build management and responsibilities, which is secondary to the main theme of automated testing.",
    "level": "Tertiary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of maintaining builds within a team and how this affects overall developer responsibility and accountability. However, it is primarily focused on builds and technical aspects rather than broader team performance strategies.",
    "level": "Tertiary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues, with limited focus on delivering software increments or discussions related to Agile and Scrum.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and management rather than Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of builds in software development, identifying build failures, and using build notifications, which are directly related to software development practices.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build management and troubleshooting, with no clear focus on agile methodologies or principles.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses build processes and management in development, with no clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses issues related to builds and version control but does not engage with Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-16T01:51:35",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the implications of broken builds in the context of source control and emphasizes the importance of maintaining a passing build for effective collaboration and code management.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of maintaining a successful build process and mentions the necessity for understanding the value of builds, which aligns with empirical process control principles like transparency and adaptation. However, it primarily focuses on technical aspects of build systems rather than on broader Agile principles or practices.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of managing builds and does not focus on Scrum values or principles.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and fails related to Team Foundation Server (TFS), not Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting within development environments, with no clear focus on collaboration tools or their impact on Agile team dynamics.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, with no clear focus on organisational change principles or methodologies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and issues in software development, without any focus on Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses build processes, quality assurance, and the importance of maintaining passing builds, which are key components relevant to frequent releases. However, it primarily focuses on identifying and addressing build issues rather than effectively discussing release frequency or continuous delivery practices.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and technical implementation details without addressing customer satisfaction directly.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses build processes and issues related to software development, rather than Scaling Scrum practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses technical aspects of build processes and developer responsibilities but does not focus on evidence-based decision-making or leadership practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on build processes and technical issues related to code, with no mention of psychological safety in team dynamics or support culture.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of handling broken builds in software development, focusing on individual developer practices rather than strategies for scaling agile principles across an organization.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of successful builds in software development and addresses practices such as maintaining code quality, enforcing standards, and the significance of testing, which aligns closely with the principles of Engineering Excellence.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and quality control in software development, not related to revenue metrics or employee productivity.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on build processes and troubleshooting rather than asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses technical aspects of software builds and related notifications, with limited reference to organisational dynamics or systems thinking.",
    "level": "Quaternary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and software development practices without focusing on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content provides practical insights into the importance of maintaining build quality, troubleshooting build failures, and instilling responsibility within a development team, which aligns well with pragmatic problem-solving in Agile and DevOps contexts.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses builds, their management, and troubleshooting, which are not related to backlog refinement.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses build processes and failure identification within software development, lacking a focus on creating or measuring innovative practices or frameworks.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to software builds and quality maintenance, with no clear focus on Scrum principles or practices related to product development.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development, without reference to scaled Agile methodologies or frameworks.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical processes related to build systems and issues in software development, not focusing on employee motivation, commitment, or engagement.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining quality and efficiency in builds, which indirectly relates to Lean principles of minimizing waste and enhancing workflow efficiency. However, it primarily focuses on build processes and software development practices rather than directly addressing Lean Thinking principles.",
    "level": "Tertiary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of builds and mentions the role of tests in the context of maintaining build quality, which aligns with test automation principles, but the main focus is on build management rather than specifically on test automation practices or tools.",
    "level": "Tertiary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on build processes and maintenance in software development rather than discussions related to entrepreneurship principles or innovation.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of ensuring builds pass and the implications of broken builds in the context of software development, which aligns with the principles of delivering functional and high-quality software.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build failures and build management in a development context, which is not directly related to Agile planning tools.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance, challenges, and management of builds in a Continuous Integration context, emphasizing build failures, ownership, and quality standards.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build processes and development quality but does not relate to market share or strategies to increase it.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of software builds and related troubleshooting, with no clear focus on leadership roles or practices within an Agile context.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of managing software builds and troubleshooting failures rather than exploring principles of sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses builds and the importance of maintaining them, which relates to reliability in software systems. However, it focuses more on the build process rather than broader Site Reliability Engineering principles.",
    "level": "Tertiary"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on build processes and issues in software development rather than hypothesis formulation and experimentation.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses issues related to the management of software builds and identifies the importance of quality control and accountability in development processes. While it involves some decision-making aspects, such as ownership of build failures and the implementation of practices like Gated Check-in, the overall primary focus is more on the technical aspects of build management rather than structured decision-making methodologies or evidence-based decision processes.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses build failures and quality checks, which are related to Lean principles of waste reduction and maintaining quality. However, the primary focus is on software build processes and troubleshooting rather than a direct discussion of Lean methodology.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses build failures, the importance of builds passing, and strategies around maintaining build integrity, which are related to release management practices. However, the focus is more on build processes rather than comprehensive release management.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build management and developer practices, not the responsibilities or strategies specific to the Product Owner role.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes, failures, and notifications rather than the measurement or implications of Cycle Time.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses builds in the context of Azure DevOps, addressing build failures, management, and importance, which aligns closely with Azure Pipelines.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses issues related to build failures and quality checks, which can impact deployment frequency, but the primary focus is not on the optimisation of deployment intervals specifically.",
    "level": "Tertiary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of build processes in software development, with no clear focus on change management principles or practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses team ownership of builds and the importance of collaboration in ensuring successful project outcomes, making it a major secondary theme despite focusing primarily on technical aspects of build management.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses primarily on the topic of software builds, their management, and developer responsibilities rather than discussing Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and troubleshooting in software development, which is not central to digital transformation themes.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to development environments, not the development or utilization of a Minimum Viable Product.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses build processes and software development practices without any clear reference to AI applications or discussions related to Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the configuration and management of build processes in a software development environment, including how to monitor, set up, and troubleshoot builds, which aligns well with system configuration principles.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and troubleshooting in a technical context, rather than focusing on product strategy or methodologies for product development.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content primarily discusses the importance of maintaining builds and the ownership of build failures, showcasing aspects of technical leadership and team accountability, but lacks a clear focus on broader topics of technical leadership within agile frameworks.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development without addressing estimation techniques or concepts.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on issues related to build processes and project management rather than discussing cross-functional teams or Agile methodologies.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of maintaining passing builds and infers the need for writing tests to ensure code quality, which relates to Test First Development principles. However, it does not primarily focus on TDD or writing tests before code, so Test First Development is a major but secondary theme.",
    "level": "Tertiary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 50,
    "final_score": 77.0,
    "reasoning": "The content primarily discusses the build notification application for Visual Studio 2010 running on Windows, detailing its usage and the context of managing builds within a Windows environment.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on build failures and troubleshooting rather than deployment methodologies or strategies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to broken builds and code quality, lacking focus on scaling Agile methodologies or enterprise-level practices.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical aspects of builds and debugging rather than on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to build management and specific tools, rather than addressing remote work practices in an Agile context.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the implications of broken builds and the responsibilities of developers, emphasizing the need for ownership and quality in coding practices, which can relate to learning from failures and self-improvement. However, it mainly centers on technical details and troubleshooting rather than continuous learning as a primary theme.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily focuses on identifying and resolving issues with broken builds in a software development context, detailing processes, tools, and best practices for troubleshooting build failures.",
    "level": "Secondary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the issues related to build failures and development practices, without a focus on hypothesis-driven experimentation or testing in Agile workflows.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on build processes and technical details related to builds and version control, rather than discussing the role, responsibilities, or practices of a Scrum Master.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 54.0,
    "reasoning": "The content discusses the visibility of build processes and emphasizes the importance of team ownership and accountability related to build failures. However, the primary focus is on operational details rather than on broader themes of transparency in Agile methodologies.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on build processes, troubleshooting, and team responsibilities regarding code quality, without discussing working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the processes associated with build management, highlights the importance of maintaining build quality, and addresses issues and strategies that software developers encounter in their workflows, particularly relating to DevOps practices.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on issues related to software builds, notifications, and technical procedures rather than on coaching practices or principles.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of maintaining a working build in software development, emphasizing practices like testing, build ownership, and quality gates, all of which are key aspects of engineering practices relevant to Agile development.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses build processes and management without directly addressing the concept of technical debt or its implications.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on broken builds and general build management in software development, not on Sprint Reviews or related Scrum practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of build management and troubleshooting in software development, with no clear focus on product management principles or strategies.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses issues related to build management and ownership, hinting at concepts of team accountability and the importance of developers taking responsibility for their code. However, it primarily focuses on technical troubleshooting and build processes rather than self-organisation principles directly.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and management within a development context, with no focus on Agile frameworks or principles.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on troubleshooting build issues in software development, without discussing Agile methodologies or strategic alignment.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content primarily discusses build processes and notifications in the context of software development, with some reference to Team Foundation Server (TFS) and build management. However, it lacks a direct focus on Azure Repos or its specific functionalities.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of managing build failures and does not focus on forecasting methods or practices within Agile or Scrum.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses build processes and issues related to software development rather than Lean Product Development principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the practicalities and implications of build failures in a development environment, without exploring broader trends or patterns within Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of ownership regarding broken builds, emphasizing that accountability lies with the developers who last broke the build. It contrasts understanding accountability with assigning blame, fostering an environment that values team responsibility.",
    "level": "Secondary"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about build management and troubleshooting in a software development context, with no clear focus on Kanban principles or their application in scaling environments.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T09:09:19",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the implications of broken builds and the importance of maintaining build quality, which affects the throughput of the development process. However, it primarily focuses on build management rather than directly measuring or optimizing throughput.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-16T01:51:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses build failures and quality in the context of software projects, but does not focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-18T12:00:13",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining build quality and ownership within a team, which relates to collaboration and team dynamics, but it primarily focuses on technical aspects of build management rather than the frameworks of Scrum, Kanban, Lean, or Agile practices.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:00:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of build processes and troubleshooting, with no clear focus on leadership practices.",
    "level": "Ignored"
  }
}
