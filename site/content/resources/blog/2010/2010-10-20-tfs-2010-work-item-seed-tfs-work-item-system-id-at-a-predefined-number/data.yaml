post:
  title: 'TFS 2010 Work Item Seed: TFS Work Item system.id at a predefined number'
  link: >-
    https://nkdagility.com/blog/tfs-2010-work-item-seed-tfs-work-item-system-id-at-a-predefined-number/
  pubDate: Wed, 20 Oct 2010 23:17:43 +0000
  creator: MrHinsh
  guid:
    _: >-
      http://geekswithblogs.net/hinshelm/archive/2010/10/20/tfs-2010-work-item-seed-tfs-work-item-system.id-at.aspx
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p>This week my customer had a requirement to have all new work items created to have an ID greater than 40,000. They have another system that stores tickets and they don’t want any conflict. </p>  <p>There have been a number of ways to achieve this through a database change, but it is not supported by Microsoft. This means that if you make the change and mess it up you are on your own. </p>  <ul>   <li><a href=\"http://social.msdn.microsoft.com/Forums/en-US/tfsprocess/thread/d84b451c-6963-4099-ad1a-11a9527a62b9\">Start TFS Work Item system.id at a predefined number</a> </li>    <li><a href=\"http://social.msdn.microsoft.com/Forums/en/tfssetup/thread/21ebaf41-2e4f-43eb-87f6-5d301a4b6bff\">Set TFS 2010 Work Item ID Seed</a> </li> </ul>  <p>In order to provide a supported way of doing this you need to use the API, and that is an interesting problem. We are going to have to use the API to create a specific number of work items, but we don’t really want those work items hanging around. </p>  <p>We could: </p>  <ol>   <li>Create new Team Project </li>    <li>Add 40,000 work items </li>    <li>Delete the Team Project </li> </ol>  <p>But there should be a neater way and to that end, lets connect to a Team Project that we can use to create the work items in.</p>  <pre>Dim projectPicker As New TeamProjectPicker(TeamProjectPickerMode.SingleProject, False)\nprojectPicker.ShowDialog()\n\nIf Not projectPicker.SelectedTeamProjectCollection Is Nothing Then\n\n    projectPicker.SelectedTeamProjectCollection.EnsureAuthenticated()\n\n    _Store = projectPicker.SelectedTeamProjectCollection.GetService(Of WorkItemStore)()\n    _ProjectInfo = projectPicker.SelectedProjects(0)\n\nEnd If</pre>\n\n<p>We can use the TeamProjectPicker class that the product team kindly provided to show the built in dialog to select a Team Project Collection and a a Team Project. </p>\n\n<p><img style=\"border-right-width: 0px;margin: 0px 20px;padding-left: 0px;padding-right: 0px;border-top-width: 0px;border-bottom-width: 0px;border-left-width: 0px;padding-top: 0px\" border=\"0\" alt=\"SNAGHTML11ab84c\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-Start-creating-work-items-at-40000_119CF-SNAGHTML11ab84c.png\" width=\"639\" height=\"398\" /> \n\n  <br /><strong>Figure: Getting the user to select a Team Project could not be easyer</strong></p>\n\n<p>This dialog has some different modes depending on what you are trying to achieve. You can set it to select either a Team Project Collection, one Team Project or many Team Projects.</p>\n\n<pre>Public Enum TeamProjectPickerMode\n    ' Fields\n    MultiProject = 2\n    NoProject = 0\n    SingleProject = 1\nEnd Enum</pre>\n\n<p>Now that we have access to a WorkItemStore and know what Team Project to use to create the work items, we can start creating work items.</p>\n\n<pre>Dim wi As WorkItem = project.WorkItemTypes(0).NewWorkItem\nwi.Title = String.Format(\"Seedgen {0} : Created by Hinshlabs TFS Work Item Seed Generator\", i)\nwi.Description = String.Format(\"As a TFS Admin I want to have all new work items start at a number {0} larger than the current number\", _WorkItemCount)\nwi.Save()</pre>\n\n<p>This may fail as all I am doing is picking the first work item type that is available. A better solution would be to select the first work item type in the “Requirement” category, or to give the user a list to select whatever he wants. This is just a throw away, one time bit if code, so as long as it works…</p>\n\n<p>Just in case any of these work items are left at the end I have added a default Title and Description.</p>\n\n<p>Once we have created this work item, we need to immediately delete it. Now, this is something that can’t be done using the UI, but can be done in code.</p>\n\n<pre>Dim WioError As IEnumerable(Of WorkItemOperationError)\nDim ids As Integer() = {Convert.ToInt32(wi.Id)}\nWioError = _Store.DestroyWorkItems(ids)</pre>\n\n<p>A tiny bit of code that solves a big problem. In versions before TFS 2010 this could only be done using the Power Tool, but the product team have seen the light and added it into the core product. Remember that Deleting a Work Item CAN’T be undone and once it is gone, it is gone.</p>\n\n<p>I have wrapped all of this into a ViewModel that can be used in an MVVM WPF application.</p>\n\n<pre>Imports Microsoft.TeamFoundation.Client\nImports Microsoft.TeamFoundation.WorkItemTracking.Client\nImports Microsoft.TeamFoundation.Server\nImports GalaSoft.MvvmLight.Command\nImports GalaSoft.MvvmLight.Threading\nImports System.Windows.Threading\nImports System.Threading\n\n''' &lt;summary&gt;\n''' Seeding View Model using the MVVM Light framework\n''' &lt;/summary&gt;\n''' &lt;remarks&gt;&lt;/remarks&gt;\nPublic Class WorkItemSeedViewModel\n    Inherits GalaSoft.MvvmLight.ViewModelBase\n\n    Private _SelectServerCommand As RelayCommand\n    Private _SeedWorkItemIdCommand As RelayCommand\n    Private _Store As WorkItemStore\n    Private _ProjectInfo As ProjectInfo\n    Private _WorkItemCount As Integer = 0\n    Private _IsProcessing As Boolean = False\n    Private _LastWorkItemId As Integer = 0\n    Private _CurrentlyProcessingItem As Integer = 0\n\n    Public ReadOnly Property SelectTeamProjectCommand As RelayCommand\n        Get\n            Return _SelectServerCommand\n        End Get\n    End Property\n\n    Public ReadOnly Property SeedWorkItemIdCommand As RelayCommand\n        Get\n            Return _SeedWorkItemIdCommand\n        End Get\n    End Property\n\n    Public Property IsProcessing As Boolean\n        Get\n            Return _IsProcessing\n        End Get\n        Set(ByVal value As Boolean)\n            If Not value.Equals(_IsProcessing) Then\n                Dim oldValue As Integer = _IsProcessing\n                _IsProcessing = value\n                MyBase.VerifyPropertyName(\"IsProcessing\")\n                MyBase.RaisePropertyChanged(Of Boolean)(\"IsProcessing\", oldValue, value, True)\n            End If\n        End Set\n    End Property\n\n    Public Property WorkItemCount As Integer\n        Get\n            Return _WorkItemCount\n        End Get\n        Set(ByVal value As Integer)\n            If Not value.Equals(_WorkItemCount) Then\n                Dim oldValue As Integer = _WorkItemCount\n                _WorkItemCount = value\n                MyBase.VerifyPropertyName(\"WorkItemCount\")\n                MyBase.RaisePropertyChanged(Of Integer)(\"WorkItemCount\", oldValue, value, True)\n            End If\n        End Set\n    End Property\n\n    Public Property LastWorkItemId As Integer\n        Get\n            Return _LastWorkItemId\n        End Get\n        Set(ByVal value As Integer)\n            If Not value.Equals(_LastWorkItemId) Then\n                Dim oldValue As Integer = _LastWorkItemId\n                _LastWorkItemId = value\n                MyBase.VerifyPropertyName(\"LastWorkItemId\")\n                MyBase.RaisePropertyChanged(Of Integer)(\"LastWorkItemId\", oldValue, value, True)\n            End If\n        End Set\n    End Property\n\n    Public Property CurrentlyProcessingItem As Integer\n        Get\n            Return _CurrentlyProcessingItem\n        End Get\n        Set(ByVal value As Integer)\n            If Not value.Equals(_CurrentlyProcessingItem) Then\n                Dim oldValue As Integer = _CurrentlyProcessingItem\n                _CurrentlyProcessingItem = value\n                MyBase.VerifyPropertyName(\"CurrentlyProcessingItem\")\n                MyBase.RaisePropertyChanged(Of Integer)(\"CurrentlyProcessingItem\", oldValue, value, True)\n            End If\n        End Set\n    End Property\n\n    Public Sub New()\n        ' Create and wire up the Commands that I will be using\n        _SelectServerCommand = New GalaSoft.MvvmLight.Command.RelayCommand(AddressOf OnSelectServerCommandExecute)\n        _SeedWorkItemIdCommand = New GalaSoft.MvvmLight.Command.RelayCommand(AddressOf OnSeedWorkItemIdCommandExecute, Function() Not _ProjectInfo Is Nothing And Not IsProcessing)\n    End Sub\n\n    ''' &lt;summary&gt;\n    ''' Calls the TFS 2010 API Dialog for selecting a Single Team Project and saves the WorkItemStore and ProjectInfo instances\n    ''' &lt;/summary&gt;\n    ''' &lt;remarks&gt;Called by the Command object&lt;/remarks&gt;\n    Private Sub OnSelectServerCommandExecute()\n        Dim projectPicker As New TeamProjectPicker(TeamProjectPickerMode.SingleProject, False)\n        projectPicker.ShowDialog()\n\n        If Not projectPicker.SelectedTeamProjectCollection Is Nothing Then\n\n            projectPicker.SelectedTeamProjectCollection.EnsureAuthenticated()\n\n            _Store = projectPicker.SelectedTeamProjectCollection.GetService(Of WorkItemStore)()\n            _ProjectInfo = projectPicker.SelectedProjects(0)\n\n        End If\n\n        _SeedWorkItemIdCommand.RaiseCanExecuteChanged()\n\n    End Sub\n\n    ''' &lt;summary&gt;\n    ''' Starts the Work Item generating method on a thread\n    ''' &lt;/summary&gt;\n    ''' &lt;remarks&gt;&lt;/remarks&gt;\n    Private Sub OnSeedWorkItemIdCommandExecute()\n        Dim thread As New System.Threading.Thread(New ParameterizedThreadStart(Sub() ProcessWorkItems(_WorkItemCount)))\n        thread.Start()\n    End Sub\n\n    ''' &lt;summary&gt;\n    ''' Generates and then deletes each work item for the count specified by the value of Count\n    ''' &lt;/summary&gt;\n    ''' &lt;param name=\"count\"&gt;&lt;/param&gt;\n    ''' &lt;remarks&gt;&lt;/remarks&gt;\n    Private Sub ProcessWorkItems(ByVal count As Integer)\n        ' These calls martial the action code back onto the UI thread\n        DispatcherHelper.CheckBeginInvokeOnUI(New Action(Sub() IsProcessing = True))\n\n        Dim project As Project = _Store.Projects(_ProjectInfo.Name)\n\n        For i As Integer = 0 To count - 1\n            DispatcherHelper.CheckBeginInvokeOnUI(New Action(Sub() CurrentlyProcessingItem = i))\n\n            Dim wi As WorkItem = project.WorkItemTypes(0).NewWorkItem\n\n            wi.Title = String.Format(\"Seedgen {0} : Created by Hinshlabs TFS Work Item Seed Generator\", i)\n            wi.Description = String.Format(\"As a TFS Admin I want to have all new work items start at a number {0} larger than the current number\", _WorkItemCount)\n            wi.Save()\n\n            DispatcherHelper.CheckBeginInvokeOnUI(New Action(Sub() LastWorkItemId = wi.Id))\n\n\n            Dim WioError As IEnumerable(Of WorkItemOperationError)\n\n            Dim ids As Integer() = {Convert.ToInt32(wi.Id)}\n\n            WioError = _Store.DestroyWorkItems(ids)\n            If WioError.Count &gt; 0 Then\n                ' Currently eats and failures to delete. Not good, but easy to fix\n                'MessageBox.Show(String.Format(\"Failed to delete Work Item {0}\", wi.Id))\n                Exit For\n            Else\n                DispatcherHelper.CheckBeginInvokeOnUI(New Action(Sub() WorkItemCount = WorkItemCount - 1))\n\n            End If\n        Next\n        DispatcherHelper.CheckBeginInvokeOnUI(New Action(Sub() IsProcessing = False))\n    End Sub\n\n\nEnd Class</pre>\n\n<p>I have tried to comment at least some of this, but again this is proof-of-concept code with no warranty and could do with lots of improving.</p>\n\n<p>This is a supported method of incrementing the Work Item ID to any number you like. It will take a while to get to 40,000 but I have added a “Time taken” calculation and it looks like you can increment the top ID by around 600 every minute.</p>\n\n<p><img style=\"border-bottom: 0px;border-left: 0px;margin: 0px 20px;padding-left: 0px;padding-right: 0px;border-top: 0px;border-right: 0px;padding-top: 0px\" border=\"0\" alt=\"SNAGHTML14175c1\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-Start-creating-work-items-at-40000_119CF-SNAGHTML14175c1.png\" width=\"525\" height=\"350\" />\n\n  <br /><strong>Figure: As you can see, I am an artist</strong></p>\n\n<p>I have been running this with a local TFS running on my Windows 7 laptop with SQL Express so actual times may not be as advertised.</p>\n\n<p>How stable is this? Well, to be honest, not very. I threw this together quickly, but with all my debugging, killing and general mashing it only left 1 erroneous work item that will need to be deleted manually.</p>\n\n<p><img style=\"border-bottom: 0px;border-left: 0px;margin: 0px 20px;padding-left: 0px;padding-right: 0px;border-top: 0px;border-right: 0px;padding-top: 0px\" border=\"0\" alt=\"image\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-Start-creating-work-items-at-40000_119CF-image_7b9cada9-035c-4f00-936f-1a4c3177aceb.png\" width=\"624\" height=\"92\" />\n\n  <br /><strong>Figure: One lonely work item that did not get destroyed</strong></p>\n\n<p>To delete this errant work item you can:</p>\n\n<ul>\n  <li><a href=\"http://devmatter.blogspot.com/2009/04/deleting-work-items-in-tfs-ui.html\">Deleting Work Items in TFS – a UI</a></li>\n\n  <li><a href=\"http://blogs.microsoft.co.il/blogs/shair/archive/2010/02/19/tfs-api-part-21-delete-work-item-using-workitemstore-demo-application.aspx\">TFS API Part 21: Delete Work Item using WorkItemStore</a></li>\n</ul>\n\n<h2>Conclusion</h2>\n\n<p>You can get your work item ID from 0 to 40000 in around 40 minutes with this app which solves the immediate problem.</p>\n\n<p><a title=\"TFS Work item Seed Generator Download\" href=\"http://hinshlabs.codeplex.com/releases/view/54305\"><img style=\"border-bottom: 0px;border-left: 0px;margin: 0px 20px;padding-left: 0px;padding-right: 0px;border-top: 0px;border-right: 0px;padding-top: 0px\" border=\"0\" alt=\"image\" src=\"http://blog.hinshelwood.com/files/2011/05/GWB-Windows-Live-Writer-Start-creating-work-items-at-40000_119CF-image_50806a78-aef8-4f4c-b5bf-bd118d7ae33b.png\" width=\"371\" height=\"365\" /></a></p>\n\n<p>\_</p>\n\n\n\n<div style=\"padding-bottom: 0px;margin: 0px;padding-left: 0px;padding-right: 0px;float: none;padding-top: 0px\" class=\"wlWriterEditableSmartContent\">Technorati Tags: <a href=\"http://technorati.com/tags/TFS\" rel=\"tag\">TFS</a>,<a href=\"http://technorati.com/tags/TFS+2010\" rel=\"tag\">TFS 2010</a>,<a href=\"http://technorati.com/tags/API\" rel=\"tag\">API</a></div>"
  - ''
  post_id: '21'
  post_date: '2010-10-20 23:17:43'
  post_date_gmt: '2010-10-20 23:17:43'
  post_modified: '2010-10-20 23:17:43'
  post_modified_gmt: '2010-10-20 23:17:43'
  comment_status: open
  ping_status: open
  post_name: tfs-2010-work-item-seed-tfs-work-item-system-id-at-a-predefined-number
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: dsq_thread_id
    meta_value: '311222555'
  - meta_key: _flattr_post_language
    meta_value: ''
  - meta_key: _flattr_post_category
    meta_value: ''
  - meta_key: _flattr_post_hidden
    meta_value: ''
  - meta_key: _flattr_btn_disabled
    meta_value: ''
  - meta_key: _thumbnail_id
    meta_value: '7080'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1dLyLiW
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474677023;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:10378;}i:1;a:1:{s:2:"id";i:9443;}i:2;a:1:{s:2:"id";i:8700;}}}}
  - meta_key: _wpghs_github_path
    meta_value: >-
      _posts/2010-10-20-tfs-2010-work-item-seed-tfs-work-item-system-id-at-a-predefined-number.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '620'
  comment:
  - comment_id: '955'
    comment_author: Allen Feinberg
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-10-21 10:30:25'
    comment_date_gmt: '2010-10-21 10:30:25'
    comment_content: >-
      Martin,<br />           I appreciate your code and your nifty little
      UI....but I think you've over engineered the solution. [When all you've
      got is a hammer everything is a nail]<br /><br />Why not just Write a
      batch script and use the TFS Power tools TFPT command and have a seed file
      (that has a row for each number as the title---a copy and <br /><br
      />paste from excel (with 40,000 rows of course) into a text file) and use
      the following command in a batch file.<br /><br />Usage: tfpt workitem
      [workitemid1 workitemid2 ... | @ | @filename]<br /><br />Then have a line
      for TFSDeleteProject.<br /><br />In my opinion this solution is easier to
      maintain....anyone can just update the batch file....and it's a zeroe line
      of code solution so a TFS sys admin can do it.<br /><br />At least that's
      how we've done it dozens of times when we've been setting up TFS
      migrations.<br /><br />I will say that you do have a nice timer in your
      UI....but honestly watching a command line flash through the create
      workitems is just more impressive...in my opinion.<br /><br />Anyone
      thanks for posting the code and your UI. I might have to see about adding
      to it.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969305'
  - comment_id: '956'
    comment_author: Martin Hinshelwood
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-10-21 13:29:26'
    comment_date_gmt: '2010-10-21 13:29:26'
    comment_content: >-
      Stiiting in a hotel room board with two hours to spair :)<br /><br />Your
      solution would not have made half as good a blog post...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969306'
  - comment_id: '957'
    comment_author: Human pheromone cologne
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2010-10-22 01:08:29'
    comment_date_gmt: '2010-10-22 01:08:29'
    comment_content: >-
      A small piece of code that solves a big problem. In previous versions of
      TFS 2010, this could be done using the tool of power, but the product team
      have come and added to the product. Remember that deleting a work item can
      not be canceled and once gone, gone.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209969310'
