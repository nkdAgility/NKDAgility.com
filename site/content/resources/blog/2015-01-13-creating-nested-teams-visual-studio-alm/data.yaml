post:
  title: Creating nested teams in Visual Studio ALM
  link: https://nkdagility.com/blog/creating-nested-teams-visual-studio-alm/
  pubDate: Tue, 13 Jan 2015 14:15:00 +0000
  creator: MrHinsh
  guid:
    _: http://nakedalmweb.wpengine.com/?p=11068
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p class=\"lead\">I just got a question on <a href=\"http://nkdagility.com/team-foundation-server-2012-teams-without-areas/\">Teams without areas using Team Field in TFS</a> and I decided that it warranted a bigger answer. The question was around creating nested teams and how to achieve it. Now, this applies to both Visual Studio Online and Team Foundation Server if you are using area path, and only TFS if you are using Team Field.</p>\r\n<p>With TFS 2012 the product team introduced the concept of Team. Team is kina like a glorified security group, so it has members which are your team. However we often have some sort of hierarchical, or nested, team structure within our organisation. So let's paint a hypothetical.</p>\r\n<p>I have a company, Awesomecorp, that is currently working on two major products. They have Omniworks, which is a custom source control solution. And they have Multiplex, which is a document management solution. Each product has a vice president of development and they each have their own development teams working to deliver software.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image001\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0011.png\" alt=\"clip_image001\" width=\"800\" height=\"286\" border=\"0\" /></p>\r\n<p>They often have organisation level initiatives and goals that span the entire organisation and do kanban at the executive and portfolio level. Because they did some investigation and understood the issues around multiple team projects they ended up with <a href=\"http://nkdagility.com/one-team-project/\">one team project to rule them all</a> called \"Awesomecorp\". They still want to have some way to represent their nested team and product structure so that and want to have a way to segment each of their teams and reporting.</p>\r\n<p>Lets take the out-of-the-box Area Path approach to the problem… I will augment with notes where the solution differs for Team Field.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image002\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0021.png\" alt=\"clip_image002\" width=\"579\" height=\"286\" border=\"0\" /></p>\r\n<p>If we were starting from scratch your first job is to create a new team project for Awesomecorp. They will be having only one team project as they are a small-ish company with only two products and five teams. If you had products with many tens of teams then you may want to use the isolation of a Team Project for each. In this case you should create a Team Project Collection for each product, each with a single Team Project. This will give you independent backup and restore, as well as the ability to sell a product and the collection goes with it.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image003\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0031.png\" alt=\"clip_image003\" width=\"779\" height=\"286\" border=\"0\" /></p>\r\n<p>Your new virgin team project is bereft of all configuration. Head to the Admin, the cog in the top right, to get started.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image004\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0041.png\" alt=\"clip_image004\" width=\"800\" height=\"206\" border=\"0\" /></p>\r\n<p>When you create a team project you always get a single team that is configured as the default. The default team is kina hidden from lists as you select only the team project to select it by default. While this confuses some users it is way less confusing for others who are not interested in teams.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image005\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0051.png\" alt=\"clip_image005\" width=\"800\" height=\"271\" border=\"0\" /></p>\r\n<p>Head on over to the Area tab and create your hierarchy for your nested teams. If you want to have a team at a level then you should create a node for that level. Here we have only three levels of teams as per our diagram. Things to note here is that for this team, remember that we are on the default team, there is two key configurations.</p>\r\n<p>There is a column of check boxes at the start of the area path. If you check a box then you are saying that, for this team, this is the content that is shown in your teams scope. In this case the scope for the default team, which will become the Portfolio team, is everything.</p>\r\n<p>The second key option here is the \"sub-areas are included\" option. If you experiment with it you will find that if you say \"sub-areas are excluded\" then only items that have the exact matching area path will be included. If you say, assigned a PBI to Team 1, it will not be shown if you exclude sub-areas. However, here, we want to include everything for our portfolio kanban boards to flow.</p>\r\n<div class=\"bs-callout bs-callout-info \">\r\n<p>If you have your Team Project configured for Team Field you will not be able to \"include sub-areas\" as the list of teams is flat. You can however configure a Team to 'own' multiple values from the team dropdown allowing you to simulate hierarchy and maintain nested teams there.</p>\r\n</div>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image006\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0061.png\" alt=\"clip_image006\" width=\"585\" height=\"286\" border=\"0\" /></p>\r\n<p>We now need our teams. Here I am creating a Team for each level that I want to manage independently. Make sure that you uncheck the \"create an area path with the same name as the team\" as I have already created all the Area Paths that we need.</p>\r\n<p>Once you have all of the teams created we need to look at mapping each of the teams to the respective bit of the hierarchy that they care about. This will give us our virtual nested teams so that we can get the views that we are looking for.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image007\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0071.png\" alt=\"clip_image007\" width=\"800\" height=\"186\" border=\"0\" /></p>\r\n<p>This, to be honest is the hard part to understand. The concept of relating this flat team list to the hierarchy that is the Area Path can be a little confusing.</p>\r\n<p>It gets worse conceptually in that a single team can actually own two nodes! Let's say that we had Team 5 doing work on both Omniworks and Multiplex. We could have two \"Team 5\" nodes, one under each of the parent node and the team could \"own\" them both. That team would see a combined backlog and boards that contained all of the items within that scope. And yes, while you have to have a single 'default' you can set \"sub-areas are included\" differently. It can get a little strange… simple is better.</p>\r\n<div class=\"bs-callout bs-callout-info \">\r\n<p>If you have Team Field configured the Multiplex team must own \"Multiplex\", \"Team 4\", and \"Team 5, values in order to simulate the \"sub-areas are included\" functionality you get with Area Path… this gets old quick if you have a complicated structure.</p>\r\n</div>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image008\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0081.png\" alt=\"clip_image008\" width=\"800\" height=\"258\" border=\"0\" /></p>\r\n<p>The goal now is to configure each of the teams with the area paths that they own. To do that you need to first select the team that you want to configure.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image009\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0091.png\" alt=\"clip_image009\" width=\"800\" height=\"247\" border=\"0\" /></p>\r\n<p>Once selected you will get thrown out to the Overview tab for the Team configuration and at the top of the screen you will see \"[team project] > [team]\" displayed to signify we are not looking at the teams configuration.</p>\r\n<p>Head over to the \"Area\" or \"Team Field\" tabs to do the configuration.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image010\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image0101.png\" alt=\"clip_image010\" width=\"800\" height=\"275\" border=\"0\" /></p>\r\n<p>On the Area tab you should check the box beside the level that you want that team to own. In this case we are owning the \"Omniworks\" level. Then go and do this for each of the teams in turn… and we are done… Area Path now controls out nested team structure and what our dashboards show.</p>\r\n<p><a href=\"http://nkdagility.com/wp-content/uploads/2015/01/clip_image0111.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image011\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image011_thumb.png\" alt=\"clip_image011\" width=\"585\" height=\"286\" border=\"0\" /></a></p>\r\n<p>Above I am selected on the root team which I have named \"Awesomecorp Portfolio Team\" and that will show the entire body of work for Awesomecorp. This will be the case for all of the boards as well, so you will see all the work underway in a sprint. At the Portfolio level we are probably only concerned with Features and generally how the PBI's ar3e getting on to achieve them.</p>\r\n<div class=\"bs-callout bs-callout-info \">\r\n<p>You can have additional levels above Feature, and I have seen Epic, or Goal, Or Imitative. Portfolios concern is above the backlog.</p>\r\n</div>\r\n<p><a href=\"http://nkdagility.com/wp-content/uploads/2015/01/clip_image0121.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image012\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image012_thumb.png\" alt=\"clip_image012\" width=\"585\" height=\"286\" border=\"0\" /></a></p>\r\n<p>On the \"Omniworks Product Owner\" backlog you will see everything from the Omniworks product but none of the Multiplex product work. This lets the owner of the Omniworks backlog focus on prioritising only what they care about. They can view Features that are assigned to them, however in this case none of the features have been assigned to the product, however if I use the \"View\" option to \"look-up\" at features the tool will bring in the features that we care about.</p>\r\n<p><a href=\"http://nkdagility.com/wp-content/uploads/2015/01/clip_image0131.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image013\" src=\"https://nkdagility.com/wp-content/uploads/2015/01/clip_image013_thumb.png\" alt=\"clip_image013\" width=\"585\" height=\"286\" border=\"0\" /></a></p>\r\n<p>If we select \"Omniworks Team 1\" we get only the work that has been assigned to that team. With custom boards as well as Sprint Planning and all the other trimmings of managing a team.</p>\r\n<h3>Conclusion</h3>\r\n<p>This format gives us a huge amount of flexibility to create and manage work within any agile process as well as supporting non-agile processes as well. If you know your way around the configuration there are many ways to organise and visualise the work that you are doing and still work predominantly within the bounds of the tools.</p>\r\n<p>This is an fantastically flexible system and I encourage you to play around and figure out what the best configuration for you is.</p>"
  - >-
    <p class="lead">I just got a question on <a
    href="http://nkdagility.com/team-foundation-server-2012-teams-without-areas/">Teams
    without areas using Team Field in TFS</a> and I decided that it warranted a
    bigger answer. The question was around creating nested teams and how to
    achieve it. Now, this applies to both Visual Studio Online and Team
    Foundation Server if you are using area path, and only TFS if you are using
    Team Field.</p>
  post_id: '11068'
  post_date: '2015-01-13 14:15:00'
  post_date_gmt: '2015-01-13 14:15:00'
  post_modified: '2015-01-22 11:28:56'
  post_modified_gmt: '2015-01-22 11:28:56'
  comment_status: open
  ping_status: open
  post_name: creating-nested-teams-visual-studio-alm
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _thumbnail_id
    meta_value: '11141'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1FmAX18
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _yoast_wpseo_focuskw
    meta_value: nested teams
  - meta_key: _yoast_wpseo_linkdex
    meta_value: '72'
  - meta_key: _syn_slave_post_states
    meta_value: a:0:{}
  - meta_key: _pagelines_gallery_slider
    meta_value: 'off'
  - meta_key: _pagelines_quote
    meta_value: ''
  - meta_key: _pagelines_link
    meta_value: ''
  - meta_key: _pagelines_video_m4v
    meta_value: ''
  - meta_key: _pagelines_video_ogv
    meta_value: ''
  - meta_key: _pagelines_video_poster
    meta_value: ''
  - meta_key: _pagelines_video_embed
    meta_value: ''
  - meta_key: _pagelines_audio_mp3
    meta_value: ''
  - meta_key: _pagelines_audio_ogg
    meta_value: ''
  - meta_key: dsq_thread_id
    meta_value: '3417227967'
  - meta_key: pl-settings
    meta_value: a:2:{s:4:"live";a:0:{}s:5:"draft";a:0:{}}
  - meta_key: _pl_karma
    meta_value: '1'
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474888232;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:6160;}i:1;a:1:{s:2:"id";i:9188;}i:2;a:1:{s:2:"id";i:64;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2015-01-13-creating-nested-teams-visual-studio-alm.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '1186'
  comment:
  - comment_id: '11702'
    comment_author: Arthur
    comment_author_email: arthurlipovetsky@gmail.com
    comment_author_url: ''
    comment_author_IP: 67.167.103.78
    comment_date: '2015-04-07 00:00:00'
    comment_date_gmt: '2015-04-06 23:00:00'
    comment_content: >-
      What are the advantages of using "nested" Area paths (parent/child
      relationships) to achieve this as opposed to simply selecting multiple
      Area paths for a given team?  I realize the list looks cleaner that way,
      but are there any functional differences?  Put another way, would my
      backlog look and work the same way if I checked the boxes next to the Team
      1 and Team 2 area paths if they were siblings of Multiplex as it would if
      they were children of Multiplex?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1949851785'
  - comment_id: '11743'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 82.12.112.139
    comment_date: '2015-04-13 16:48:00'
    comment_date_gmt: '2015-04-13 15:48:00'
    comment_content: >-
      It would work differently. If you are using the hierarchy you can use the
      "include child" or "exclude child" to automagically bring in sub teams to
      a parent team backlog... or not... If you are using a flat list you would
      need to go configure a bunch of teams for each change.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '11702'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1949851785'
    - meta_key: dsq_post_id
      meta_value: '1965127819'
  - comment_id: '11920'
    comment_author: Gary Tunnicliff
    comment_author_email: g.tunnicliff@gmail.com
    comment_author_url: ''
    comment_author_IP: 86.128.90.159
    comment_date: '2015-05-02 15:30:00'
    comment_date_gmt: '2015-05-02 14:30:00'
    comment_content: >-
      Hi Martin 

      Are the sprints different for each team? How hard is the reporting for
      each team and the roll up for say 2 levels? Tagging and querying still
      seem to have a prominent part to play
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1999402222'
  - comment_id: '11931'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 85.255.234.191
    comment_date: '2015-05-05 09:00:00'
    comment_date_gmt: '2015-05-05 08:00:00'
    comment_content: >-
      They are not. Same sprint for each team. They each get their own sprint
      backlog by area/team field so there is no seeping. I often roll up two
      levels, however you need to accept that you can roll up story points for
      teams that don't plan together, or really burndowns.


      I use this in combination with other reporting, Reporting Services on
      premises and PowerBI on VSO.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '11920'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1999402222'
    - meta_key: dsq_post_id
      meta_value: '2004963359'
  - comment_id: '12854'
    comment_author: Grant Abernethy
    comment_author_email: grant.abernethy@gmail.com
    comment_author_url: ''
    comment_author_IP: 38.122.113.146
    comment_date: '2015-08-03 20:22:00'
    comment_date_gmt: '2015-08-03 19:22:00'
    comment_content: >-
      Hi Martin,



      I've gone down the path of using nested teams where each of the product
      managers on my team have their own work area, then under each of those are
      the actual product areas that each PM owns. There are 4 higher level
      Directors that have several PMs reporting up under each of them. I was
      going to nest the team hierarchy under each director according to org
      structure. 



      The reason I'm doing this would be to allow each of the director level PMs
      to see the health of their reports by product area as well as activity.
      I'm achieving this by pinning charts of work item types to each of the
      directors' home pages. 



      Lastly, the CTO will have his own team under which all other hierarchy
      exists, this then gives the CTO line of sight to the entire team's health
      per release. We still operate on three releases a year due to customer
      need (we can't yet develop and release parts of the code without causing
      disruption), but we are slowly moving toward being more Agile within those
      three development cycles. Therefore, I see value in allowing the CTO to
      see how the current release is progressing.



      I'm sharing all of this because I have some questions:



      1. Does the above explanation seem like the best way to accommodate our
      team structure?

      2. Will I be able to support requests for metrics at each stage (PM,
      Director level PM, and CTO) ongoing, or am I getting myself into a world
      of hurt?

      2. Our teams are pretty fluid, so PMs either gain new product areas, give
      up others, or swap between PMs. I think that this can be supported as long
      as the recipient of a new product area has that work area built as a child
      under their node/team first, before deleting it from the previous PM. Then
      I can use the mapping feature when I delete the work area from the
      previous PM. Am I thinking about this process correctly?



      Thanks for all the information contained in your blog posts!
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2172418092'
  - comment_id: '12857'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 62.92.230.142
    comment_date: '2015-08-04 08:14:00'
    comment_date_gmt: '2015-08-04 07:14:00'
    comment_content: >-
      1) It does, however I would take it slowly as I have not setup that deep a
      hierarchy before and you may run into niggles. Remember to make the
      PM/Director/CTO an admin on his own team so that he can edit things.


      2) If that is your hierarchy in your area path then you will have very
      good control over reporting levels. Most of the reporting services reports
      are already sliced by area, and this would allow you to mix and match any
      level. 


      3) This is where you are likely to run into trouble. TFS, like agile,
      assumes long running teams of at least a single Sprint. I think the
      capacity planning and other aspects will break down fairly quickly...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12854'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2172418092'
    - meta_key: dsq_post_id
      meta_value: '2173257651'
  - comment_id: '12861'
    comment_author: Grant Abernethy
    comment_author_email: grant.abernethy@gmail.com
    comment_author_url: ''
    comment_author_IP: 38.122.113.146
    comment_date: '2015-08-04 19:11:00'
    comment_date_gmt: '2015-08-04 18:11:00'
    comment_content: >-
      Thanks Martin. I agree that the planning tools may break down, but I'm
      pushing for some more concrete product alignments, and as it stands now,
      we (as PMs) are usually locked into a set of product areas for at least a
      year, so we'll be getting better about less fluidity.



      Again, thanks for your responses.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '12857'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2173257651'
    - meta_key: dsq_post_id
      meta_value: '2174153001'
  - comment_id: '13824'
    comment_author: Dusan Divljak
    comment_author_email: dusan.divljak@gmail.com
    comment_author_url: ''
    comment_author_IP: 91.233.24.6
    comment_date: '2016-02-04 16:56:00'
    comment_date_gmt: '2016-02-04 16:56:00'
    comment_content: >-
      Hi Martin,

      is there any posibilty to display hierarchy of teams in "Browse Server"
      window?


      Kind regards.


      DD
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2495972215'
  - comment_id: '13825'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 201.166.156.130
    comment_date: '2016-02-04 17:38:00'
    comment_date_gmt: '2016-02-04 17:38:00'
    comment_content: >-
      There is not. Since the hierarchy of the teams is virtual TFS really knows
      nothing about what you want. You can make it look like a hierarchy by
      naming the teams "ProductA-TeamA"... not pretty but will get the job
      done...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13824'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2495972215'
    - meta_key: dsq_post_id
      meta_value: '2496046113'
  - comment_id: '13826'
    comment_author: Dusan Divljak
    comment_author_email: dusan.divljak@gmail.com
    comment_author_url: ''
    comment_author_IP: 178.221.157.236
    comment_date: '2016-02-04 19:44:00'
    comment_date_gmt: '2016-02-04 19:44:00'
    comment_content: Tnx
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13825'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2496046113'
    - meta_key: dsq_post_id
      meta_value: '2496265220'
  - comment_id: '14078'
    comment_author: Johnny Boldt
    comment_author_email: johnny.boldt@gmail.com
    comment_author_url: ''
    comment_author_IP: 65.110.165.179
    comment_date: '2016-07-05 19:04:00'
    comment_date_gmt: '2016-07-05 18:04:00'
    comment_content: >-
      It does not get the job done if the combined teams are more than 64
      characters. We need team hierarchy, and this is a show stopper for us
    comment_approved: '1'
    comment_type: comment
    comment_parent: '13825'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2496046113'
    - meta_key: dsq_post_id
      meta_value: '2766780538'
  - comment_id: '14079'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 185.69.144.250
    comment_date: '2016-07-05 19:08:00'
    comment_date_gmt: '2016-07-05 18:08:00'
    comment_content: That sounds like you have bigger problems than nested teams in TFS.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14078'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2766780538'
    - meta_key: dsq_post_id
      meta_value: '2766787853'
  - comment_id: '14080'
    comment_author: Johnny Boldt
    comment_author_email: johnny.boldt@gmail.com
    comment_author_url: ''
    comment_author_IP: 65.110.165.179
    comment_date: '2016-07-05 19:12:00'
    comment_date_gmt: '2016-07-05 18:12:00'
    comment_content: >-
      We are a IS team with over 100 people. We have enough groups that
      concatenating from the top to bottom groups exceeds 64 characters.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14079'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2766787853'
    - meta_key: dsq_post_id
      meta_value: '2766795062'
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1468997929.876097;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14081'
    comment_author: Johnny Boldt
    comment_author_email: johnny.boldt@gmail.com
    comment_author_url: ''
    comment_author_IP: 65.110.165.179
    comment_date: '2016-07-05 19:13:00'
    comment_date_gmt: '2016-07-05 18:13:00'
    comment_content: >-
      We are a IS team with over 100 people. We have enough groups that
      concatenating from the top to the bottom groups exceeds 64 characters.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14079'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2766787853'
    - meta_key: dsq_post_id
      meta_value: '2766796344'
  - comment_id: '14085'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 85.255.236.34
    comment_date: '2016-07-10 19:54:00'
    comment_date_gmt: '2016-07-10 18:54:00'
    comment_content: >-
      Again, it sounds like you have bigger problems. Can you email me on
      info@nkdagility.com with more info?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14081'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2766796344'
    - meta_key: dsq_post_id
      meta_value: '2775781501'
  - comment_id: '14486'
    comment_author: Mig Riv
    comment_author_email: m2r@yahoo.com
    comment_author_url: ''
    comment_author_IP: 130.76.24.15
    comment_date: '2018-01-18 00:09:00'
    comment_date_gmt: '2018-01-18 00:09:00'
    comment_content: >-
      Just came across this awesome post, but I'm confused. I have our project
      configured to use Teams. Portfolio, Teams, sub-Teams. In your annotations,
      you say "own" but don't define what/how to do that. You also don't mention
      how iteration path affects the views. In my case, I can see top down from
      the Portfolio to the lowest team, but I can't see the Epics/Features that
      are not explicitly assigned to me, i.e. I can see down, but not up past
      the backlog. I want to enable the subteams to see the epics of the main
      team. Advice is appreciated!!
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '3713320152'
  - comment_id: '14487'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nkdagility.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 81.108.5.47
    comment_date: '2018-01-18 07:44:00'
    comment_date_gmt: '2018-01-18 07:44:00'
    comment_content: >-
      You cant enable them to just see up. Sub teams see from their level down,
      and they can always switch to the parent to get the big picture.


      However, if they turn  on "show parents" in the backlog they will see
      parents even if they are from another team. This allows them to get
      context, and they should also be able to see siblings. The shevron on the
      left should be hollow to undeclared that it is assigned to another team.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14486'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '3713320152'
    - meta_key: dsq_post_id
      meta_value: '3713718070'
  - comment_id: '15305'
    comment_author: >-
      The Great Migration: Implementation 0: Setting up the Environments &#8211;
      Dark Matter Diary
    comment_author_email: ''
    comment_author_url: >-
      https://stuarthough.wordpress.com/2018/05/21/the-great-migration-implementation-0-setting-up-the-environments/
    comment_author_IP: 192.0.91.81
    comment_date: '2018-05-21 12:46:10'
    comment_date_gmt: '2018-05-21 11:46:10'
    comment_content: '[&#8230;] A great write up is available over at Naked Agility [&#8230;]'
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1526903170.087465;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1568123669.730463;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
