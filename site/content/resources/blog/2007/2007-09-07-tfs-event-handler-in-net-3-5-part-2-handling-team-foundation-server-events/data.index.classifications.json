{
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-15T07:39:03",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily focuses on creating a Team Foundation Server Event Handler in .NET, which is more about technical implementation than the broader scope of Application Lifecycle Management. While it touches on aspects of event handling that could relate to application maintenance and integration, it lacks a comprehensive discussion on the stages of the application lifecycle, governance, or best practices in ALM. The content does not explicitly mention ALM principles or frameworks, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-16T20:36:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, focusing on technical details rather than flow efficiency principles or optimisation of work throughput.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-16T20:36:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler in .NET, without discussing enterprise agility principles or organisational context.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-16T20:36:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation details of a TFS Event Handler without addressing the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T20:36:06",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, focusing on technical details and code rather than the principles or practices of the One Engineering System framework.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-16T20:36:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler, with no clear discussion on market adaptability strategies or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-03-10T13:20:03",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content provides a detailed guide on creating a Team Foundation Server Event Handler, including specific code snippets and configuration steps necessary for installation and setup. It discusses the creation of a project, the implementation of service contracts, and the configuration of service behaviors, which are all relevant to the installation and configuration category. However, while it does touch on installation aspects, the primary focus is on coding and event handling rather than a comprehensive installation guide, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T20:36:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation of a Team Foundation Server Event Handler in .NET, with no focus on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T20:36:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, which is technical and specific to TFS, rather than being a general discussion on Agile methodologies or related concepts.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-16T20:36:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical implementations of a Team Foundation Server Event Handler without addressing organisational resilience or change management.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T20:36:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, focusing on technical details and code rather than complexity science or its principles.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-10T15:16:05",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content provides a detailed exploration of creating a Team Foundation Server (TFS) Event Handler using .NET 3.5, which directly relates to practical tooling in a DevOps context. It discusses specific methodologies for implementing TFS event handling, including code examples and configuration details, which align well with the category's focus on practical techniques and tooling. The depth of discussion is significant, covering various aspects of service configuration, event subscription, and implementation details, thus demonstrating a strong alignment with the key topics outlined in the category.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-16T20:36:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler, without discussing value delivery strategies or methodologies.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-16T20:36:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on creating a Team Foundation Server Event Handler in .NET, with no clear discussion on metrics, learning, or evidence-based decision-making.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T20:36:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Team Foundation Server event handling and .NET programming, with no mention of Kanban principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T20:36:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation of a Team Foundation Server Event Handler, with no focus on psychological principles or organisational behaviour.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-16T20:36:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-16T20:36:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler in .NET, with no discussion of Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-16T20:36:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, focusing on technical details rather than Agile principles or product-centric development.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-16T20:36:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical implementation details of a TFS Event Handler in .NET, lacking discussions on industry news, updates, or reviews.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-16T20:36:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on creating a Team Foundation Server Event Handler in .NET, which is more about implementation details rather than the methodologies and practices of product delivery.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T20:36:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, focusing on technical details and code rather than principles of decentralised, adaptive, and human-centric organisational design.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-03-15T07:39:08",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on creating a Team Foundation Server Event Handler, which is more about specific implementation details rather than discussing the broader principles of Platform Engineering. While it touches on aspects of automation and integration with TFS, it lacks a comprehensive exploration of Internal Developer Platforms (IDPs) or enhancing developer productivity as defined in the category. The discussion is technical and specific, which does not align closely with the core themes of Platform Engineering.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T20:36:49",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, with no clear focus on AI or automation within Agile frameworks.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-10T19:02:03",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on implementing a TFS Event Handler in .NET, discussing specific code implementations and configurations. While it touches on aspects of code quality and scalability, it lacks a broader discussion on complexity theory or its application in software development processes. The depth of technical detail is significant, but the primary focus remains on practical coding rather than the interplay between code quality and complexity.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T20:36:53",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler, with no reference to events, presentations, or discussions related to Agile, DevOps, or software engineering events.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-16T20:36:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical implementation of a Team Foundation Server Event Handler, with no focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-16T20:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler, with no clear discussion on business agility principles or practices.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T20:36:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler in .NET, without discussing Systems Thinking principles or applications.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-16T20:37:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a Team Foundation Server Event Handler in .NET, with no clear discussion on organisational agility principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T20:37:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical implementation details related to Team Foundation Server and .NET, with no focus on Agile principles or product management practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-16T20:37:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details of a Team Foundation Server Event Handler, lacking personal reflections or experiences related to Agile, Scrum, or DevOps.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-11T10:49:59",
    "ai_confidence": 62.0,
    "ai_mentions": 80.0,
    "ai_alignment": 50.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses Team Foundation Server (TFS), which is a predecessor to Azure DevOps. While it does touch on event handling and integration aspects relevant to TFS, it lacks a direct focus on Azure DevOps services and methodologies. The discussion is technical and detailed, but it does not explicitly cover Azure DevOps features or best practices, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T20:37:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, focusing on technical details and code rather than Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-15T07:38:55",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on creating a Team Foundation Server Event Handler in .NET, which is more aligned with software development and integration rather than the broader principles of DevOps. While it touches on aspects of automation and integration, it lacks a comprehensive discussion on DevOps practices, cultural shifts, or metrics that define the category. The mention of TFS and WCF indicates some relevance to DevOps tools, but the overall focus is not on enhancing collaboration or continuous delivery, which are core to DevOps.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-11T12:15:06",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content primarily focuses on implementing a TFS Event Handler in .NET, which involves technical details about service contracts, event handling, and configuration. While it does touch on aspects of modular architecture and service behaviours, it lacks a broader discussion on engineering practices or methodologies that enhance agility in software development. The technical details are present, but the content does not deeply engage with the principles of Technical Excellence as defined in the category.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-16T20:37:12",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical implementation details of a TFS Event Handler in .NET, with no focus on human behaviour or process methodologies.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-16T20:37:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical implementation details of a TFS Event Handler without a focus on learning or discovery processes.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T20:37:15",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, with no focus on products or literature related to Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details of Team Foundation Server Event Handling, which does not align with the strategic aspects of product management.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses handling events in Team Foundation Server with .NET 3.5, which does not relate to the validation of product ideas through user engagement.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-03-15T07:38:55",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on creating a Team Foundation Server Event Handler, which involves some aspects of system configuration, such as defining service contracts and configuring endpoints. However, it lacks a comprehensive discussion on broader system configuration practices, best practices, or optimisation strategies. The technical details provided are more about implementation than configuration management, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the technical implementation of a Team Foundation Server event handler without focusing on innovation capabilities or evidence-based management principles.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is focused on creating a Team Foundation Server Event Handler in .NET, detailing technical aspects of handling events and implementing services, rather than discussing cross-functional teams or their relevance in Agile methodologies.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on creating a Team Foundation Server (TFS) Event Handler in .NET without specific discussions on Azure Repos functionalities or best practices.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses developing a Team Foundation Server Event Handler in .NET, which focuses on technical implementation and integration rather than on managing a portfolio of projects or aligning strategy with execution.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses Team Foundation Server event handling and .NET coding practices, with no clear connection to Scrum principles or product development.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creation and implementation of a Team Foundation Server Event Handler, which does not explicitly focus on core Agile engineering practices such as clean code, TDD, or CI/CD.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical implementation of a TFS Event Handler in .NET, with no discussion on self-organisation principles, Agile methodologies, or related themes.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the technical implementation of handling events in Team Foundation Server using .NET, with no focus on decision-making processes or evidence-based methodologies.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily focuses on Team Foundation Server event handling and .NET implementation details, with no discussion on Agile values or principles.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation of Team Foundation Server events without any reference to employee engagement strategies or practices.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of Team Foundation Server event handling and WCF, with no clear connection to accountability principles or theme.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation details for handling events in Team Foundation Server and does not address mentoring or coaching aspects.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses Team Foundation Server event handling and related programming topics, with no mention or focus on the Definition of Done.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on handling Team Foundation Server (TFS) events in .NET, with no discussion on Agile methodologies, scaling practices, or coordination among Agile teams.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses implementing a TFS Event Handler in .NET, focusing on technical code and service configuration, rather than analyzing trends in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on handling Team Foundation Server events with technical details and implementation examples, rather than on hypothesis-driven experimentation in Agile contexts.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about creating and handling Team Foundation Server Event Handlers, with no direct discussion on forecasting methods or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses technical implementation details for a Team Foundation Server Event Handler in .NET and does not pertain to empirical process control principles or Agile methodologies.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating a Team Foundation Server Event Handler in .NET 3.5, focusing on event handling and service implementation, with no mention of TDD principles or practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Team Foundation Server event handling and technical implementation details, without any relation to psychological safety.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server event handler and related technical details, not collaboration tools for Agile teams.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-15T07:39:19",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily focuses on implementing a Team Foundation Server Event Handler in .NET, which is a technical topic relevant to software developers. However, it lacks explicit discussions on Agile methodologies, DevOps principles, or modern engineering practices. While it does touch on aspects of software development, such as service contracts and event handling, it does not delve deeply into the collaborative or productivity-enhancing aspects of Agile or DevOps, which are central to the category's definition.",
    "level": "Tertiary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-15T07:38:58",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content provides a detailed exploration of creating a Team Foundation Server (TFS) Event Handler using .NET 3.5, which directly relates to software development practices. It discusses specific coding techniques, service contracts, and implementation details, aligning well with best practices in software design and development methodologies. The depth of discussion is significant, covering various aspects of the development process, including service configuration, event handling, and code examples, which are essential for understanding the software development lifecycle in this context.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the development of a Team Foundation Server Event Handler in .NET and does not focus on the principles or practices of Site Reliability Engineering.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation of TFS events and the .NET framework, without addressing product strategy or related methodologies.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on creating a TFS event handler and does not discuss estimation techniques or practices.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the implementation of TFS Event Handlers in .NET and does not address MVP concepts, principles, or practices.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical aspects of handling events in Team Foundation Server, with no discussion of coaching, growth, development, or related themes.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical implementation of a Team Foundation Server Event Handler using .NET, with no relevance to Lean Startup principles such as MVP, Build-Measure-Learn feedback loops, or validated learning.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on technical implementation of a Team Foundation Server Event Handler in .NET 3.5, lacking discussion on leadership or agile methodologies.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical aspects of handling Team Foundation Server events, with no discussion of market share strategies or competitive advantage.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on TFS event handling using .NET and does not directly discuss Azure Pipelines or related CI/CD practices.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on handling Team Foundation Server events and coding practices, with no clear alignment to Agile Planning principles or practices.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details and specific coding practices related to TFS event handling, without addressing strategic goals or alignment with business agility.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the creation and management of a Team Foundation Server (TFS) event handler in .NET, which is not directly related to Continuous Delivery principles, practices, or methodologies.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses implementation details of a Team Foundation Server Event Handler without mentioning Lead Time or its measurement, importance, or related strategies.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of creating a TFS event handler in .NET, without focus on growth mindset, knowledge sharing, or continuous improvement principles.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Team Foundation Server event handling and technical implementation details, with no focus on organisational change strategies or frameworks.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-03-15T07:38:55",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "Content primarily discusses technical implementation details for handling Team Foundation Server (TFS) events in .NET without a clear focus on broader themes of digital transformation, such as business agility or operational efficiency.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details of a Team Foundation Server event handler in .NET, without reference to hypothesis formulation, experimentation, or the principles of validated learning.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily focuses on creating a Team Foundation Server Event Handler in .NET 3.5, without discussing AI applications in Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of creating a Team Foundation Server Event Handler in .NET 3.5 with no clear connection to Agile Strategy or methodologies.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical details and coding related to handling events in Team Foundation Server, without discussing any change management principles, strategies, or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating a Team Foundation Server Event Handler and specific implementation details related to TFS events, which does not align with the principles and practices of Continuous Integration.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on developing a Team Foundation Server Event Handler in .NET, with technical details and code related to TFS event handling, without discussing deployment frequency or related Agile/DevOps practices.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Team Foundation Server (TFS) event handling in .NET, focusing on technical implementation without reference to Lean principles or practices.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation of Team Foundation Server events and related code, rather than discussing Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementations in .NET for handling Team Foundation Server events, with no reference to evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating and handling events in Team Foundation Server (TFS) with a focus on technical implementation in .NET, without reference to Agile frameworks or principles.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical implementation of a Team Foundation Server event handler in .NET, with no relevant discussion about Agile transformation principles, methodologies, or practices.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on creating a Team Foundation Server Event Handler in .NET, discussing specifics about event handling and implementation details, without any direct relevance to Agile Planning Tools or methodologies.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-03-15T07:39:16",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses the implementation of a Team Foundation Server (TFS) event handler in .NET, which is related to source control but focuses more on specific technical implementation details rather than broader best practices or methodologies in modern source control. While TFS is a version control system, the discussion lacks depth in terms of version control strategies, collaboration workflows, or integration with DevOps practices, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation and handling of Team Foundation Server events in .NET, with no clear focus on the Agile Increment concept or its significance.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating and implementing a Team Foundation Server Event Handler, which is not focused on the practice of Frequent Releases.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content focuses on technical implementation details of a Team Foundation Server Event Handler and does not discuss team performance, collaboration, or agile methodologies.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on implementing a Team Foundation Server Event Handler, with no clear discussion on the Product Backlog or Agile backlog management practices.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on developing an event handler for Team Foundation Server (TFS) using .NET, and does not discuss Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical implementation details related to Team Foundation Server and event handling, with no discussion on Product Owner responsibilities or related themes.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses handling events in Team Foundation Server (TFS) and does not relate to the Sprint Review process or topics within the Scrum framework.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on creating and configuring a TFS Event Handler in .NET, with no clear discussions on team dynamics or collaboration techniques within Agile or DevOps frameworks.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses handling events in Team Foundation Server using .NET 3.5 and does not address the Definition of Ready or related concepts.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on handling Team Foundation Server events using .NET, without any mention of Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation of TFS event handling rather than transparency within Agile processes.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-11T17:07:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content primarily focuses on implementing a TFS Event Handler in .NET 3.5, which involves technical details about service contracts, event handling, and configuration. While it does touch on aspects of software craftsmanship, such as code structure and service design, it lacks a broader discussion on best practices or principles of clean code. The depth of technical detail is significant, but the focus is more on implementation rather than overarching engineering practices, which slightly limits its alignment with the 'Technical Mastery' category.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily focuses on creating a Team Foundation Server Event Handler in .NET and does not discuss remote working practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses technical implementation details related to Team Foundation Server events processing in .NET, which does not relate to Scaling Kanban principles or practices.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on handling Team Foundation Server events and implementation details of a .NET service, which does not relate to customer retention strategies or user engagement methodologies.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET 3.5 and does not pertain to Agile Project Management principles, methodologies, or practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on creating and configuring a TFS Event Handler in .NET, with no clear discussion on throughput measurement or optimization in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Team Foundation Server (TFS) event handling in .NET and is unrelated to Value Stream Mapping.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on creating a Team Foundation Server Event Handler and handling events, with no discussions or relevance to Cycle Time.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical implementation details of a TFS event handler in .NET 3.5, with no discussion related to interpreting complexity, decision-making processes, or the application of sensemaking in organizational contexts.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses technical implementation of a Team Foundation Server Event Handler, with no mention of customer satisfaction or related themes.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on creating an event handler for Team Foundation Server, without discussing customer feedback or its integration into product development.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-16T21:53:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical implementation details of handling TFS events and does not discuss strategic alignment or optimization in Agile, Scrum, or DevOps contexts.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on creating a Team Foundation Server Event Handler in .NET, with no clear discussion on systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating a Team Foundation Server Event Handler in .NET, focusing on implementation details and technical specifics rather than technical debt or its management.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation and specific functionalities related to Team Foundation Server, not Scrum values.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-03-15T07:39:01",
    "ai_confidence": 72.0,
    "ai_mentions": 80.0,
    "ai_alignment": 65.0,
    "ai_depth": 75.0,
    "non_ai_confidence": 50,
    "final_score": 70.0,
    "reasoning": "The content primarily discusses the implementation of a Team Foundation Server (TFS) event handler using .NET 3.5, which is closely related to the Windows environment, particularly through the use of Windows Communication Foundation (WCF). There are multiple direct mentions of Windows Communication Foundation and its integration with TFS, indicating a strong focus on Windows-related technologies. The content aligns well with the category's themes, particularly in terms of configuration and troubleshooting within a Windows context. However, it lacks a broader discussion on Windows operating system features or general user management, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on handling Team Foundation Server events using .NET, with no discussion of Lean principles, waste reduction, or value maximization.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-03-15T07:39:06",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 55.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses handling events in Team Foundation Server (TFS) and mentions troubleshooting aspects, such as issues with Windows Communication Foundation (WCF) and the need to parse XML for event types. However, the primary focus is on implementation rather than systematic problem-solving or methodologies for diagnosing issues. While there are elements of troubleshooting, they are not the main emphasis of the content.",
    "level": "Tertiary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a Team Foundation Server Event Handler in .NET 3.5, discussing technical implementation details rather than entrepreneurial principles or practices.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on technical implementation details for handling Team Foundation Server events and does not address Agile leadership concepts or practices.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating and handling Team Foundation Server events, without discussing deployment methodologies or strategies.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Team Foundation Server event handling and .NET implementation, with no clear focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is primarily focused on using Team Foundation Server and related coding practices, with no clear discussion of Lean Thinking principles or waste minimization.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the implementation of a Team Foundation Server Event Handler and does not focus on the Daily Scrum or its related principles.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on creating a Team Foundation Server Event Handler in .NET 3.5, which is unrelated to Behaviour Driven Development principles and practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Team Foundation Server (TFS) events and technical implementation details, with no focus on working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on implementing a Team Foundation Server Event Handler, not on the delivery or characteristics of working software as defined in Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical implementation details of a Team Foundation Server event handler, without discussing customer needs or product features.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses Team Foundation Server (TFS) events and technical implementation details related to handling those events in .NET. It does not address Scrum roles, team dynamics, collaboration techniques, or any aspects pertinent to a Scrum Team.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical implementation details of Team Foundation Server event handling, with no focus on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-15T07:39:13",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content primarily focuses on the technical implementation of a Team Foundation Server Event Handler in .NET, which includes practical coding examples and configurations. While it does touch on real-world applications of TFS and WCF, it lacks a broader discussion on Agile, Scrum, or DevOps principles. The content is more technical and implementation-focused rather than discussing pragmatic thinking strategies or problem-solving techniques in complex environments.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on handling Team Foundation Server events and implementing a TFS event handler, which does not directly discuss release management strategies or practices.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-15T07:38:55",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on implementing a specific technical solution related to Team Foundation Server (TFS) event handling in .NET. While it touches on aspects of software craftsmanship, such as code structure and service implementation, it lacks a broader discussion on engineering excellence principles, best practices, or continuous improvement processes. The depth of discussion is technical but does not delve into quality assurance, coding standards, or metrics for assessing engineering performance, which are key topics in the Engineering Excellence category.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Team Foundation Server event handling and technical implementation, with no mention or relevance to Revenue per Employee.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the implementation of a Team Foundation Server Event Handler in .NET 3.5, detailing technical aspects and code for processing events rather than discussing asynchronous development principles, practices, or collaboration strategies.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical details of implementing a Team Foundation Server Event Handler in .NET, without any focus on Scrum principles, practices, or scaling methodologies.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on handling TFS events using .NET, with no relevant discussion on backlog refinement practices in Agile or Scrum.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation of TFS Event Handling without focusing on operational efficiency or methodologies such as Agile, DevOps, or Lean.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical implementation details of handling events in Team Foundation Server using .NET, without any discussion on organisational culture.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Team Foundation Server (TFS) event handling and programming in .NET, which is unrelated to Scrum principles or practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on creating a Team Foundation Server Event Handler and discusses technical implementation details rather than scaling agile practices within an organization.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical details of handling events in Team Foundation Server (TFS) and does not discuss the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on creating a Team Foundation Server Event Handler in .NET, discussing TFS events and service contracts, without a clear focus on automated testing principles, practices, or methodologies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical implementation details for handling events in Team Foundation Server, without any discussion related to scaling Agile methodologies, frameworks, or enterprise-level practices.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-16T21:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content focuses on creating a Team Foundation Server Event Handler in .NET and does not discuss Test First Development or related principles such as Test-Driven Development (TDD).",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T18:55:37",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on technical aspects of creating a TFS Event Handler in .NET 3.5, with no explicit discussion of social technologies, collaboration, or decision-making frameworks. While it mentions handling events, it does not address the underlying social frameworks or methodologies that promote collaboration or value delivery within organisations.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:26:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation details related to Team Foundation Server and .NET, with no focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:47:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, focusing on specific coding practices and technical details rather than the broader concept of Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:47:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a Team Foundation Server Event Handler in .NET, with no focus on Artificial Intelligence or its integration within Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-15T07:38:55",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on Team Foundation Server (TFS) event handling in .NET, with no direct mentions of Scrum principles, roles, events, or artifacts. While it discusses project management aspects related to TFS, it does not align with the core themes of Scrum, such as iterative progress, team dynamics, or continuous improvement. The discussion lacks depth in Scrum-related topics, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T16:46:17",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on creating a Team Foundation Server Event Handler in .NET, detailing technical implementation aspects without discussing the Shift-Left Strategy or its principles. There are no direct mentions of integrating testing, security, or compliance early in the development process, nor does it provide insights into the benefits or methodologies associated with the Shift-Left approach.",
    "level": "Ignored"
  }
}
