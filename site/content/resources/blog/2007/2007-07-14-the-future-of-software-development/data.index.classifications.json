{
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content discusses aspects of software development and the need for efficient processes, which loosely aligns with Application Lifecycle Management. However, it primarily focuses on the concept of software factories and team structures rather than the comprehensive management of the application lifecycle stages, governance, or specific ALM tools. The discussion lacks depth in key ALM topics such as deployment, maintenance, and retirement, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the need to shorten development lifecycles and improve delivery speed through software factories and web services, which aligns with flow efficiency principles. However, it primarily focuses on the structure of development teams rather than directly addressing flow efficiency techniques or metrics.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the need for rapid adaptation in software development and introduces concepts like software factories and web services, which align with the principles of enterprise agility. However, it primarily focuses on team-level practices and specific methodologies rather than broader organisational agility. The discussion lacks depth in terms of organisational structures or leadership roles that drive enterprise agility, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses the future of software development with a focus on software factories and team structures, which touches on the interplay between technology and organisational roles. However, it primarily emphasises technical solutions and methodologies without deeply exploring the sociotechnical interactions or the impact of organisational culture on technology adoption. While there are mentions of team dynamics and roles, the discussion lacks sufficient depth and explicit references to sociotechnical principles, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software factories and web services, with no clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 67.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the need for organisations to adapt to rapid market changes, particularly through the use of software factories and web services. It highlights the importance of having distinct teams that can respond quickly to business needs, which aligns with the principles of Agile methodologies. However, while it touches on relevant concepts, it lacks a deeper exploration of Agile, DevOps, or Lean methodologies, which limits its overall depth of discussion.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the future of software development, software factories, and team roles, without focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T21:43:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures, with no clear focus on decision-making processes or the principles of Decision Theory.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T21:43:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and methodologies, including specific roles and teams, which are directly related to established frameworks and principles.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses the need for faster development cycles and the use of software factories and web services to enhance client satisfaction, which aligns with value delivery principles. However, it lacks explicit references to Agile methodologies or structured value delivery practices, and the depth of discussion on value management is limited.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a focus on metrics, data utilisation, or learning mechanisms.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T21:43:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T21:43:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development methodologies and team structures without addressing psychological principles or theories related to motivation, engagement, or team dynamics.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-16T21:43:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, without a clear focus on Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 25.0,
    "reasoning": "The content discusses software development practices and methodologies but does not explicitly mention Evidence-Based Management or its key topics. While it touches on concepts like reducing time to market and improving client satisfaction, it lacks a focus on empirical evidence and data-informed decision-making, which are central to EBM. The discussion is more about practical software development strategies rather than evidence-based practices.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses software development practices and the concept of software factories, which aligns with agile principles of efficiency and responsiveness. However, it lacks direct mentions of the Agile Product Operating Model and does not delve into its specific principles or frameworks. The focus is more on traditional software development methodologies rather than a product-oriented mindset, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the future of software development with a focus on methodologies like software factories and web services, which are relevant to product delivery. It mentions the roles of different teams in the product delivery process, such as the factory team and product team, and highlights the importance of reducing time to market and improving client satisfaction. However, while it touches on key aspects of product delivery, it lacks detailed exploration of specific methodologies like Agile or CI/CD practices, which limits its depth of discussion.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T21:43:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of software factories, which aligns with the principles of Platform Engineering, particularly in enhancing developer productivity and optimising the application lifecycle. However, it primarily focuses on broader software development practices rather than specifically on Internal Developer Platforms (IDPs).",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the need for organisations to adapt quickly to changing market demands and the importance of reducing development lifecycles, which aligns with the principles of business agility. However, it primarily focuses on software development methodologies and practices rather than a broader exploration of business agility principles. The mention of software factories and web services indicates a secondary focus on agility rather than a comprehensive discussion of the category's key topics.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures, without a clear focus on Systems Thinking principles or holistic analysis of interconnected components.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the need for organisations to adapt quickly to changing market demands and the importance of reducing development lifecycles, which aligns with the principles of organisational agility. However, it primarily focuses on software development methodologies and team structures rather than broader organisational strategies or cultural shifts. The mention of factory teams and product teams indicates an understanding of agile practices, but the depth of discussion on agility principles is limited, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and the concept of software factories, without a clear focus on Agile principles or product management practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content includes personal reflections on experiences in various companies and insights into the challenges faced in software development, but it primarily focuses on technical aspects and methodologies rather than personal anecdotes.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-16T21:43:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses general software development practices and methodologies without specific reference to Azure DevOps or its functionalities.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and team structures, without a clear focus on Value Stream Management principles or techniques.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses software development practices and the concept of software factories, which can relate to DevOps principles such as collaboration and efficiency. However, it lacks explicit references to DevOps as a philosophy or its core themes like automation, shared accountability, or continuous improvement. The focus is more on development methodologies rather than the integration of development and operations, which is central to DevOps.",
    "level": "Tertiary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of software factories and their role in improving development lifecycles, which aligns with technical practices aimed at enhancing efficiency and adaptability in software development. However, it primarily focuses on the organisational structure and roles rather than specific engineering methodologies or practices.",
    "level": "Tertiary"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses software development methodologies and team structures, which are tangentially related to product management. However, it lacks a direct focus on strategic alignment of customer needs and business objectives, which are core to product management. While it touches on the roles of teams and the importance of feedback, it does not delve deeply into product management frameworks or decision-making processes that drive product success.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on validating product ideas through user engagement or testing with real users.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, software factories, and team structures, rather than system configuration.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the need for innovative practices in software development, particularly through the concept of software factories and web services. It highlights the importance of adapting to changing business needs and the role of different teams in fostering innovation. However, while it touches on innovation, it lacks a structured framework or empirical data analysis, which are key aspects of the Ability to Innovate category. The discussion is more focused on practical implementation rather than on measuring or enhancing innovation capabilities.",
    "level": "Secondary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses two distinct teams (Factory Development Team and Product Development Team) and their collaborative roles in delivering solutions, which aligns with the principles of cross-functional teams, but does not focus specifically on cross-functional teams as the primary topic.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on general software development processes and methodologies without reference to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on software development practices and teams, not on portfolio management or alignment with strategic objectives.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of software factories and their role in enhancing development efficiency, which aligns somewhat with engineering practices, but does not focus on Agile principles or more traditional engineering methodologies like clean code, TDD, or CI/CD.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and the roles of different teams rather than focusing on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, software factories, and team structures rather than focused methodologies or frameworks for structured decision-making.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development models, teams, and methods without a clear focus on Agile values and principles.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and methodologies, which do not align with the themes of employee engagement.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on accountability, ownership, or the distinction between accountability and blame in Agile teams.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team roles, with no clear focus on mentoring or coaching in Agile contexts.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content is primarily about the future of software development and does not mention Definition of Done or its principles.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the future of software development and mentions concepts like software factories and web services, which are relevant to trends in Agile and DevOps. However, it primarily focuses on personal experiences and opinions rather than a structured analysis of trends. The discussion lacks depth in exploring specific trends or their implications for teams and organisations, resulting in a low confidence score for the 'Trend Analysis' category.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and teams without a clear focus on experimentation or hypothesis-driven approaches.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development strategies and team structures without focusing on forecasting methods or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software factories, web services, and development teams, without a clear focus on empirical process control or Agile principles.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content discusses the future of software development, focusing on software factories and team roles, without mentioning TDD principles, practices, or the TDD cycle.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, teams, and methodologies, with no direct relation to psychological safety.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, including software factories and team roles, without a focus on collaboration tools or their impact on Agile teams.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the future of software development, focusing on methodologies like Software Factories and the roles within development teams. It aligns well with key topics such as the Software Development Life Cycle, team dynamics, and the importance of adapting to business needs. The depth of discussion is significant, providing insights into team structures and the rationale behind using software factories and web services, which are crucial for modern software development practices.",
    "level": "Primary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and methodologies, focusing on software factories and development teams, without addressing Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of software factories and web services in the context of product development and time-to-market strategies. While it touches on key aspects of product strategy, such as team roles and improving client satisfaction, these topics are secondary to the focus on technical implementation and development processes.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development practices and team structures, but does not focus on estimation techniques or Agile methodologies.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "category": "MVP",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and teams rather than focusing on Minimum Viable Products, their development, or market validation.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software development methodologies and team structures rather than coaching practices or facilitation of growth and development.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development methodologies and roles rather than Lean Startup principles, MVPs, or iterative learning.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the future of software development and introduces concepts like software factories and team roles, but it lacks a direct focus on technical leadership principles. While it touches on team dynamics and the importance of effective communication, it does not delve into mentoring, agile methodologies, or servant leadership, which are core to the category. The discussion is more about development processes than about guiding teams or fostering collaboration in an agile context.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on software development practices and team roles, without discussing market share strategies or competitive advantage.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses general concepts of software development and software factories without specific mention or focus on Azure Pipelines or related practices.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and methodologies, such as software factories and product development teams, without a clear focus on Agile Planning principles.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the future of software development and the need for adaptability in response to market demands, which aligns with the concept of strategic goals. However, it primarily focuses on operational tactics, such as software factories and team roles, rather than explicitly defining long-term strategic objectives. While there are mentions of improving business agility and competitive advantage, these are not the primary focus of the discussion.",
    "level": "Tertiary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses software factories and web services, which are related to improving efficiency in software development. However, it does not explicitly mention Continuous Delivery or its principles. While it touches on themes like reducing time to market and improving client satisfaction, it lacks a focused discussion on Continuous Delivery practices, automation, or rapid feedback mechanisms. The depth of discussion on related topics is present, but it does not sufficiently align with the core themes of Continuous Delivery.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the need to shorten development lifecycles and improve time to market, which relates to Lead Time. However, it lacks explicit definitions or detailed discussions on Lead Time as a metric. The focus is more on software factories and team structures rather than a comprehensive exploration of Lead Time itself.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and methodologies, focusing on software factories and team structures without emphasizing principles of continuous learning or a growth mindset.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development methodologies and team structures without focusing on organisational change strategies or frameworks.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the future of software development with a focus on software factories and web services, which are relevant to digital transformation. However, it lacks explicit mentions of digital transformation as a strategic initiative. The discussion aligns with the themes of enhancing business agility and operational efficiency, but it does not delve deeply into change management practices or organisational culture. Overall, while the content is relevant, it does not fully meet the criteria for a primary focus on digital transformation.",
    "level": "Secondary"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software factories and team roles in software development, lacking focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the need for adaptability in software development and mentions the importance of reducing time to market, which aligns with Agile principles. However, it primarily focuses on technical practices and the structure of development teams rather than explicitly addressing Agile strategy or methodologies. The discussion lacks depth in terms of Agile principles and does not provide a comprehensive view of Agile strategy implementation.",
    "level": "Secondary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and teams rather than change management principles or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software factories and the structure of development teams rather than Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, without a central focus on deployment frequency or its optimisation.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content focuses on software factories and team structures for software development rather than Lean principles such as waste reduction and maximising learning.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses the need for adaptability in software development and the goal of delivering effective solutions quickly, but it primarily focuses on software factories and development teams rather than the core principles of Agile Philosophy.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without focusing on evidence-based leadership principles or evidence-driven decision-making.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and the concept of software factories, without a clear focus on Agile frameworks or methodologies.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and methodologies, focusing on software factories and their teams without directly addressing Agile principles or transformation strategies.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development, methodologies, and team structures, but does not focus on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development methodologies, team structures, and general practices without mentioning modern source control or version management.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software factories and general development practices without a clear focus on the concept of Increment in Agile or Scrum.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the need for shorter development lifecycles and the use of software factories to improve efficiency, which aligns with the principles of frequent releases. However, it lacks explicit discussions on continuous delivery or deployment practices, and the focus is more on development methodologies rather than the release process itself.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the roles of different teams (Factory Development Team and Product Development Team) and their responsibilities, which touches on team dynamics and collaboration. However, it lacks a direct focus on Agile methodologies, specific strategies for enhancing team performance, or metrics for measuring effectiveness. The discussion is more about software development processes than about team performance in an Agile context.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies, software factories, and team roles without a focus on the concept of the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development methodologies and teams without focusing on Azure Boards or Agile project management specifically.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on software development methodologies, team structures, and roles, but does not directly address the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on general software development trends and methodologies, with no specific discussion of Sprint Review or related Scrum practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the roles of different teams (Factory Development Team, Product Development Team, Developer Evangelist) and their interactions, which touches on team dynamics and collaboration. However, it primarily focuses on software development methodologies and the structure of teams rather than explicitly enhancing team collaboration or communication within Agile or DevOps frameworks. The discussion lacks depth in exploring techniques for improving collaboration or fostering a culture of trust, which are key themes in the category.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content focuses on the future of software development and factory models rather than specifically discussing the criteria or importance of Definition of Ready in Agile practices.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content focuses on software factories and general software development lifecycles without mentioning acceptance test driven development or acceptance criteria.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software development practices, software factories, and team roles, without a clear discussion on transparency in Agile processes.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the concept of software factories and web services, which aligns with technical practices in software development. However, it primarily focuses on the organisational structure and roles rather than delving deeply into best practices, principles of clean code, or methodologies that contribute to software craftsmanship. While it touches on the importance of testing and stability, the overall discussion lacks the depth and explicit focus required for a higher confidence score in the 'Technical Mastery' category.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on software development methodologies and team structures rather than remote working practices or challenges specific to Agile frameworks.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on customer retention strategies or techniques for maintaining user engagement.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the need to shorten development lifecycles and improve delivery efficiency through software factories and web services, which aligns with the concept of throughput. However, it lacks explicit mentions of throughput as a metric and does not delve deeply into measurement techniques or strategies for optimisation, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and teams, with no focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the future of software development and methods for improving development efficiency through software factories and teams, but does not specifically focus on Cycle Time as a measurement or critical metric.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content discusses software development practices and team structures but does not primarily focus on sensemaking, complexity interpretation, or decision-making processes in organizations.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of reducing development lifecycles and increasing client happiness, which aligns with customer satisfaction principles. However, it primarily focuses on software development methodologies and team structures rather than directly addressing customer satisfaction metrics or strategies. The mention of client happiness is brief and lacks depth, making it a secondary theme rather than a primary focus.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the roles of teams in software development and mentions the importance of feedback from the product team to the factory team, which aligns with the concept of feedback loops. However, the primary focus is on software factories and development processes rather than on customer feedback integration, resulting in a low confidence score for the category.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the future of software development with a focus on optimising delivery processes through the concept of software factories and web services. It aligns with strategic themes such as the need for rapid adaptation to market demands and the importance of team roles in delivering effective solutions. However, while it touches on strategic concepts, it lacks a deeper exploration of Agile, Scrum, or DevOps frameworks, which limits its overall alignment with the Strategy category.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses software development processes and team structures, which touches on organisational dynamics. However, it primarily focuses on practical methodologies and team roles rather than a systems thinking approach to organisational behaviour. While there are mentions of team interactions and the need for adaptability, the discussion lacks a comprehensive exploration of systems thinking principles or the broader implications of organisational structure and culture.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses future trends in software development, including concepts like software factories and product development teams, without a clear focus on technical debt management or its implications.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development frameworks, methodologies, and team structures, with no clear focus on the Scrum values.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies, teams and processes, without a central focus on the Windows operating system.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software factories and development models, with no clear focus on Lean principles such as waste reduction or value maximisation.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and team structures without focusing on troubleshooting technical issues.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses software development practices and methodologies, focusing on the roles of different teams in a development process. While it touches on aspects of innovation and efficiency, it does not explicitly address entrepreneurship principles such as risk-taking, value creation, or the entrepreneurial mindset. The primary focus is on technical processes rather than the entrepreneurial journey or strategies for business growth.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without focusing on leadership roles, Agile principles, or the impact of leadership on team dynamics.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to software development methodologies and the concept of software factories, rather than focusing on deployment strategies or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on software development methodologies and team structures rather than discussions on test automation or related practices.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses software development practices and the concept of software factories, which may imply efficiency and value creation. However, it lacks direct references to Lean principles such as waste minimisation, continuous improvement, or specific Lean tools. The discussion is more focused on software development methodologies rather than Lean Thinking itself.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and team structures rather than the Daily Scrum event or its principles.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on software factories and team dynamics in software development, without any clear discussion of Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development methodologies and roles rather than working agreements, teamwork norms, or communication protocols.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 55.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 55.0,
    "reasoning": "The content discusses the future of software development, focusing on concepts like software factories and web services, which are relevant to delivering effective business solutions. However, it lacks direct mentions of working software as defined in Agile and Scrum frameworks. While it touches on the importance of reducing development lifecycles and improving client satisfaction, it does not provide detailed best practices or metrics for assessing software quality, which are key aspects of the 'Working Software' category.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures rather than focusing on identifying customer needs and defining product features.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the future of software development, emphasizing software factories and team structures without specifically addressing Scrum roles or dynamics.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies, team structures, and technical roles without focusing on team motivation or practices that enhance engagement and performance in an agile context.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses practical approaches to software development, particularly through the concepts of software factories and web services, which align with pragmatic thinking in Agile and DevOps contexts. It highlights the need for adaptability and real-world application of development strategies, reflecting on personal experiences in various companies. However, while it touches on relevant themes, the discussion lacks depth in specific Agile or Scrum methodologies and does not provide detailed case studies or evidence-based practices, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content discusses software development processes broadly without focusing on release planning, scheduling, or other essential aspects of release management.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the future of software development with a focus on software factories and web services, which are relevant to engineering practices. However, it lacks explicit mentions of engineering excellence principles, best practices, or quality assurance. The discussion is more about organisational structure and development models rather than a deep dive into engineering craftsmanship or continuous improvement processes.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and methodologies without focusing on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software factories, team roles, and traditional development practices, without a focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses broader software development methodologies and team structures, without any focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the concept of software factories and their role in improving development efficiency, which aligns with operational practices. However, it lacks specific techniques or metrics for measuring operational efficiency, and the discussion is more focused on the future of software development rather than practical applications within Agile, DevOps, or Lean frameworks.",
    "level": "Secondary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses software development methodologies and team roles without a clear focus on organisational culture or its impact on agility and transformation.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and the concept of software factories, with no direct reference to Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 12.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software development methodologies and team structures without any direct reference to the role or responsibilities of a Scrum Master. While it touches on concepts of team dynamics and efficiency, it does not align with the core themes of the Scrum Master category, such as coaching, facilitating, or promoting agile principles. The discussion is more focused on software factories and development teams rather than the Scrum framework.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes, teams, and methodologies without a clear focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software factories and web services in the context of software development. It does not focus on the principles of scaling Agile methodologies across an organization, nor does it address frameworks, transformation strategies, or collaboration aspects relevant to large-scale agility.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 20,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software factories and web services, focusing on development efficiency and team roles rather than the principles of Test First Development. There are no explicit mentions of success criteria, testing practices, or the importance of defining tests before implementation, which are central to the Test First Development category.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses software development methodologies and the roles within development teams, focusing on technical aspects rather than the social frameworks that promote collaboration and decision-making. While there are mentions of team dynamics, the emphasis is on technical processes and efficiency rather than on social technologies or their impact on organisational culture.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:29:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on leadership practices or principles.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of software factories, which aligns with the principles of an Internal Developer Platform, but it primarily focuses on broader software development practices and team structures.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:51:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content discusses software development practices and team structures but does not explicitly mention Scrum or its core components such as roles, events, or artifacts. While it touches on concepts like team dynamics and the need for collaboration, it primarily focuses on software factories and web services, which are not aligned with Scrum principles. The discussion lacks depth regarding Scrum-specific practices, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the need for faster development cycles and the role of software factories and teams in achieving this, which aligns with the Shift-Left Strategy's goal of integrating processes earlier. However, it lacks explicit mentions of testing, security, or compliance integration, and does not delve deeply into the principles or methodologies of the Shift-Left approach.",
    "level": "Ignored"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses software development practices and the roles of different teams but does not explicitly mention Common Goals or their significance in Agile and DevOps. While it touches on the need for collaboration and efficiency, it lacks a clear focus on aligning strategy with execution or shared objectives that guide decision-making. The discussion is more about methodologies and team structures rather than the foundational principles of Common Goals.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the roles of different teams in software development, particularly the factory and product teams, which implies a level of competence required for effective delivery. However, it lacks explicit discussions on continuous learning, skill development, or strategies for fostering a culture of competence. The focus is more on processes and structures rather than on the development of individual capabilities or the importance of competence in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the future of software development and the need for efficiency through software factories and web services. While it touches on themes of improving processes and adapting to business needs, it lacks a direct focus on Continuous Improvement principles. The mention of adapting teams and processes hints at improvement, but it does not delve into systematic practices or frameworks associated with Continuous Improvement, such as empirical evidence or a culture of experimentation.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T15:56:59",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content discusses software development practices and the need for adaptability in teams, which loosely aligns with the concept of Agentic Agility. However, it lacks explicit discussions on intentional shaping of outcomes, accountability, or the interplay between human and AI capabilities. The focus is primarily on operational efficiency rather than the transformative capacity of individuals or systems.",
    "level": "Ignored"
  }
}
