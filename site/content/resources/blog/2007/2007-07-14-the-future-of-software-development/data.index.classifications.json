{
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-16T21:43:03",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses aspects of software development lifecycles and the roles within teams that contribute to application delivery, but it primarily focuses on the concept of software factories and web services rather than a comprehensive view of Application Lifecycle Management.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-16T21:43:05",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need to shorten development lifecycles and improve delivery speed through software factories and web services, which aligns with flow efficiency principles. However, it primarily focuses on the structure of development teams rather than directly addressing flow efficiency techniques or metrics.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-16T21:43:07",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for adaptability in software development and the importance of reducing time to market, which aligns with themes of enterprise agility. However, it primarily focuses on software factories and team structures rather than broader organisational agility.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-16T21:43:08",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the interplay between software development teams and organisational structures, particularly in the context of factory teams and product teams. However, the primary focus is on technical solutions rather than a deep exploration of sociotechnical interactions.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T21:43:10",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software factories and web services, with no clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-16T21:43:12",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for software factories and web services to shorten development lifecycles and adapt to changing business needs, indicating a secondary theme of market adaptability.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-16T21:43:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the future of software development, software factories, and team roles, without focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T21:43:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures, with no clear focus on decision-making processes or the principles of Decision Theory.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T21:43:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and methodologies, including specific roles and teams, which are directly related to established frameworks and principles.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-16T21:43:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for adaptability in software development and the importance of building software factories to respond to changing business needs, which aligns with themes of resilience and change. However, the primary focus is on technical implementations rather than organisational resilience strategies.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T21:43:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-16T21:43:22",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses the concept of software factories and web services as practical techniques to improve software development processes, focusing on team roles and methodologies that enhance delivery outcomes.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-16T21:43:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for faster development cycles and the role of teams in delivering effective business solutions, which aligns with value delivery principles, but it primarily focuses on software factories and team structures rather than specific value delivery methodologies.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-16T21:43:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a focus on metrics, data utilisation, or learning mechanisms.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T21:43:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T21:43:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development methodologies and team structures without addressing psychological principles or theories related to motivation, engagement, or team dynamics.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-16T21:43:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, without a clear focus on Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-16T21:43:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a focus on evidence-based management principles or empirical data.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-16T21:43:32",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the need for a product-centric approach and the roles of different teams in software development, which aligns with Agile principles, but it primarily focuses on software factories and web services rather than the Agile Product Operating Model itself.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-16T21:43:34",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses personal experiences and opinions on software development practices rather than providing news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-16T21:43:35",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses methodologies and practices related to software development and delivery, including the roles of factory and product teams, the importance of reducing development lifecycles, and the integration of web services, which are all relevant to product delivery.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T21:43:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-16T21:43:39",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the concept of software factories, which aligns with the principles of Platform Engineering, particularly in enhancing developer productivity and optimising the application lifecycle. However, it primarily focuses on broader software development practices rather than specifically on Internal Developer Platforms (IDPs).",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-02-16T21:43:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and the concept of software factories, with no clear focus on Scrum principles, roles, events, or practices.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T21:43:41",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-16T21:43:43",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses software factories and their role in improving development processes, which relates to code quality and complexity management. However, the primary focus is on organisational structure and development methodologies rather than a deep exploration of code quality principles or complexity theory.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T21:43:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-16T21:43:45",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-16T21:43:47",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for organisations to adapt quickly to changing business environments and the importance of reducing development lifecycles, which aligns with the principles of business agility. However, the primary focus is on software development methodologies rather than a comprehensive exploration of business agility itself.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T21:43:48",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures, without a clear focus on Systems Thinking principles or holistic analysis of interconnected components.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-16T21:43:50",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for organisations to adapt quickly to changing business demands and the importance of reducing development lifecycles, which aligns with the principles of organisational agility. However, the primary focus is on software development methodologies rather than a broader exploration of organisational agility strategies.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T21:43:51",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses software development methodologies and the concept of software factories, without a clear focus on Agile principles or product management practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-16T21:43:52",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content includes personal reflections on experiences in various companies and insights into the challenges faced in software development, but it primarily focuses on technical aspects and methodologies rather than personal anecdotes.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-16T21:43:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses general software development practices and methodologies without specific reference to Azure DevOps or its functionalities.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T21:43:55",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development practices and team structures, without a clear focus on Value Stream Management principles or techniques.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-16T21:43:56",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for collaboration between distinct teams (factory and product development) and the importance of efficient workflows, which are relevant to DevOps principles. However, it primarily focuses on software factories and web services rather than core DevOps practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-16T21:43:58",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the concept of software factories and their role in improving development lifecycles, which aligns with technical practices aimed at enhancing efficiency and adaptability in software development. However, it primarily focuses on the organisational structure and roles rather than specific engineering methodologies or practices.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-16T21:44:00",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the roles and dynamics of different teams (Factory Development Team, Product Development Team, Developer Evangelist) in the context of software development processes, highlighting the importance of collaboration and communication between these roles.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-16T21:44:01",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for adaptation in software development and the importance of research and development within teams, indicating a secondary theme of learning and discovery, but primarily focuses on software factories and team structures.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T21:44:02",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development practices and team structures, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  }
}
