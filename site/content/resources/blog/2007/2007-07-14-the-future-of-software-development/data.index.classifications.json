{
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses aspects of software development lifecycles and the roles within teams that contribute to application delivery, but it primarily focuses on the concept of software factories and web services rather than a comprehensive view of Application Lifecycle Management.",
    "level": "Tertiary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need to shorten development lifecycles and improve delivery speed through software factories and web services, which aligns with flow efficiency principles. However, it primarily focuses on the structure of development teams rather than directly addressing flow efficiency techniques or metrics.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for adaptability in software development and the importance of reducing time to market, which aligns with themes of enterprise agility. However, it primarily focuses on software factories and team structures rather than broader organisational agility.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the interplay between software development teams and organisational structures, particularly in the context of factory teams and product teams. However, the primary focus is on technical solutions rather than a deep exploration of sociotechnical interactions.",
    "level": "Tertiary"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T21:43:10",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software factories and web services, with no clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for software factories and web services to shorten development lifecycles and adapt to changing business needs, indicating a secondary theme of market adaptability.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-16T21:43:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the future of software development, software factories, and team roles, without focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T21:43:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures, with no clear focus on decision-making processes or the principles of Decision Theory.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T21:43:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and methodologies, including specific roles and teams, which are directly related to established frameworks and principles.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for adaptability in software development and the importance of building software factories to respond to changing business needs, which aligns with themes of resilience and change. However, the primary focus is on technical implementations rather than organisational resilience strategies.",
    "level": "Tertiary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T21:43:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-16T21:43:22",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses the concept of software factories and web services as practical techniques to improve software development processes, focusing on team roles and methodologies that enhance delivery outcomes.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for faster development cycles and the role of teams in delivering effective business solutions, which aligns with value delivery principles, but it primarily focuses on software factories and team structures rather than specific value delivery methodologies.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-16T21:43:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a focus on metrics, data utilisation, or learning mechanisms.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T21:43:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T21:43:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development methodologies and team structures without addressing psychological principles or theories related to motivation, engagement, or team dynamics.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-16T21:43:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, without a clear focus on Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-16T21:43:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a focus on evidence-based management principles or empirical data.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the need for a product-centric approach and the roles of different teams in software development, which aligns with Agile principles, but it primarily focuses on software factories and web services rather than the Agile Product Operating Model itself.",
    "level": "Tertiary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-16T21:43:34",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses personal experiences and opinions on software development practices rather than providing news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-16T21:43:35",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses methodologies and practices related to software development and delivery, including the roles of factory and product teams, the importance of reducing development lifecycles, and the integration of web services, which are all relevant to product delivery.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T21:43:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the concept of software factories, which aligns with the principles of Platform Engineering, particularly in enhancing developer productivity and optimising the application lifecycle. However, it primarily focuses on broader software development practices rather than specifically on Internal Developer Platforms (IDPs).",
    "level": "Tertiary"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-02-16T21:43:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and the concept of software factories, with no clear focus on Scrum principles, roles, events, or practices.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T21:43:41",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses software factories and their role in improving development processes, which relates to code quality and complexity management. However, the primary focus is on organisational structure and development methodologies rather than a deep exploration of code quality principles or complexity theory.",
    "level": "Tertiary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T21:43:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-16T21:43:45",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for organisations to adapt quickly to changing business environments and the importance of reducing development lifecycles, which aligns with the principles of business agility. However, the primary focus is on software development methodologies rather than a comprehensive exploration of business agility itself.",
    "level": "Tertiary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T21:43:48",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures, without a clear focus on Systems Thinking principles or holistic analysis of interconnected components.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for organisations to adapt quickly to changing business demands and the importance of reducing development lifecycles, which aligns with the principles of organisational agility. However, the primary focus is on software development methodologies rather than a broader exploration of organisational agility strategies.",
    "level": "Tertiary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T21:43:51",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses software development methodologies and the concept of software factories, without a clear focus on Agile principles or product management practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content includes personal reflections on experiences in various companies and insights into the challenges faced in software development, but it primarily focuses on technical aspects and methodologies rather than personal anecdotes.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-16T21:43:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses general software development practices and methodologies without specific reference to Azure DevOps or its functionalities.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T21:43:55",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development practices and team structures, without a clear focus on Value Stream Management principles or techniques.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for collaboration between distinct teams (factory and product development) and the importance of efficient workflows, which are relevant to DevOps principles. However, it primarily focuses on software factories and web services rather than core DevOps practices.",
    "level": "Tertiary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the concept of software factories and their role in improving development lifecycles, which aligns with technical practices aimed at enhancing efficiency and adaptability in software development. However, it primarily focuses on the organisational structure and roles rather than specific engineering methodologies or practices.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-16T21:44:00",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the roles and dynamics of different teams (Factory Development Team, Product Development Team, Developer Evangelist) in the context of software development processes, highlighting the importance of collaboration and communication between these roles.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for adaptation in software development and the importance of research and development within teams, indicating a secondary theme of learning and discovery, but primarily focuses on software factories and team structures.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T21:44:02",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software development practices and team structures, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "While the content discusses aspects of software development that touch on product management principles, particularly regarding team dynamics and delivering business solutions, it does not focus primarily on product management strategies or methodologies. Instead, it emphasizes technical aspects and personal experiences in software development.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on validating product ideas through user engagement or testing with real users.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development practices, software factories, and team structures, rather than system configuration.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses concepts related to software factories and web services which aim to deliver solutions quickly and improve client happiness, indicating some focus on innovation. However, the primary emphasis is more on software development practices rather than a structured discussion on the measurement or enhancement of innovation capabilities.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses two distinct teams (Factory Development Team and Product Development Team) and their collaborative roles in delivering solutions, which aligns with the principles of cross-functional teams, but does not focus specifically on cross-functional teams as the primary topic.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on general software development processes and methodologies without reference to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on software development practices and teams, not on portfolio management or alignment with strategic objectives.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses software development methodologies, specifically structured systems analysis and the concept of software factories, without a clear focus on Scrum practices or product development in a Scrum environment.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the concept of software factories and their role in enhancing development efficiency, which aligns somewhat with engineering practices, but does not focus on Agile principles or more traditional engineering methodologies like clean code, TDD, or CI/CD.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and the roles of different teams rather than focusing on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, software factories, and team structures rather than focused methodologies or frameworks for structured decision-making.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development models, teams, and methods without a clear focus on Agile values and principles.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and methodologies, which do not align with the themes of employee engagement.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on accountability, ownership, or the distinction between accountability and blame in Agile teams.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team roles, with no clear focus on mentoring or coaching in Agile contexts.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content is primarily about the future of software development and does not mention Definition of Done or its principles.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software factories and product development teams, but does not focus on scaling Agile practices or coordination among multiple teams.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the need for new development methodologies in response to changing business requirements and the shift toward software factories and web services, which suggests an awareness of emerging trends.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and teams without a clear focus on experimentation or hypothesis-driven approaches.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development strategies and team structures without focusing on forecasting methods or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software factories, web services, and development teams, without a clear focus on empirical process control or Agile principles.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content discusses the future of software development, focusing on software factories and team roles, without mentioning TDD principles, practices, or the TDD cycle.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, teams, and methodologies, with no direct relation to psychological safety.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, including software factories and team roles, without a focus on collaboration tools or their impact on Agile teams.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses concepts and roles within software development teams, including factory teams and product development teams, which can relate to Agile and modern practices. However, it focuses more on general software development strategies rather than specific Agile or DevOps methodologies.",
    "level": "Tertiary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the future of software development, focusing on methodologies like software factories, the roles of development teams, and the importance of delivering effective business solutions. It aligns well with key topics in software development, such as development lifecycles and team structures.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and methodologies, focusing on software factories and development teams, without addressing Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of software factories and web services in the context of product development and time-to-market strategies. While it touches on key aspects of product strategy, such as team roles and improving client satisfaction, these topics are secondary to the focus on technical implementation and development processes.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development practices and team structures, but does not focus on estimation techniques or Agile methodologies.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and teams rather than focusing on Minimum Viable Products, their development, or market validation.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software development methodologies and team structures rather than coaching practices or facilitation of growth and development.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development methodologies and roles rather than Lean Startup principles, MVPs, or iterative learning.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for distinct teams and their roles in the software development process, touching on aspects of collaboration and technical deployment strategies but does not primarily focus on technical leadership principles in an agile context.",
    "level": "Tertiary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on software development practices and team roles, without discussing market share strategies or competitive advantage.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses general concepts of software development and software factories without specific mention or focus on Azure Pipelines or related practices.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and methodologies, such as software factories and product development teams, without a clear focus on Agile Planning principles.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for improved business solutions through software factories and web services, which relates to enhancing business agility and potentially aligns with strategic objectives, but it primarily focuses on development processes rather than explicitly articulating long-term strategic goals.",
    "level": "Tertiary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the future of software development and concepts like software factories and teams, but does not directly address Continuous Delivery principles, practices, or methodologies.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "While the content discusses the need to reduce development lifecycles and improve delivery speed, it primarily focuses on software factories and team roles rather than lead time as a central topic.",
    "level": "Tertiary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and methodologies, focusing on software factories and team structures without emphasizing principles of continuous learning or a growth mindset.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development methodologies and team structures without focusing on organisational change strategies or frameworks.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the need for modernizing software development practices through concepts like software factories and web services, which relate to enhancing business agility and operational efficiency, but it does not primarily focus on broader digital transformation strategies or frameworks.",
    "level": "Tertiary"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software factories and team roles in software development, lacking focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content heavily discusses software development methodologies, specifically software factories and team roles, without a focus on AI applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "While the content primarily discusses software factories and development team structures, it indirectly touches upon themes of adaptability, rapid delivery, and the importance of feedback loops, which are relevant to Agile principles. However, the focus is not exclusively on Agile strategies, resulting in it being a major but secondary theme.",
    "level": "Tertiary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software development methodologies and teams rather than change management principles or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software factories and the structure of development teams rather than Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and the concept of software factories, without a central focus on deployment frequency or its optimisation.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content focuses on software factories and team structures for software development rather than Lean principles such as waste reduction and maximising learning.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 36.0,
    "reasoning": "The content discusses the need for adaptability in software development and the goal of delivering effective solutions quickly, but it primarily focuses on software factories and development teams rather than the core principles of Agile Philosophy.",
    "level": "Quaternary"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without focusing on evidence-based leadership principles or evidence-driven decision-making.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development practices and the concept of software factories, without a clear focus on Agile frameworks or methodologies.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and methodologies, focusing on software factories and their teams without directly addressing Agile principles or transformation strategies.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development, methodologies, and team structures, but does not focus on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development methodologies, team structures, and general practices without mentioning modern source control or version management.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software factories and general development practices without a clear focus on the concept of Increment in Agile or Scrum.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content touches on reducing development lifecycles and improving delivery efficiency through software factories, which aligns with the principles of frequent releases as a means to enhance user satisfaction. However, it primarily discusses broader concepts of software development without a focused emphasis on frequent release practices.",
    "level": "Tertiary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content describes two distinct teams (Factory Development Team and Product Development Team) and their roles, which relates to team dynamics and collaboration, but it does not primarily focus on strategies or methodologies for enhancing team performance in an Agile context.",
    "level": "Tertiary"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software development methodologies, software factories, and team roles without a focus on the concept of the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development methodologies and teams without focusing on Azure Boards or Agile project management specifically.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on software development methodologies, team structures, and roles, but does not directly address the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on general software development trends and methodologies, with no specific discussion of Sprint Review or related Scrum practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the roles of different teams (Factory Development Team and Product Development Team) and mentions the need for effective communication and feedback loops between them, indicating a secondary theme of team collaboration.",
    "level": "Tertiary"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content focuses on the future of software development and factory models rather than specifically discussing the criteria or importance of Definition of Ready in Agile practices.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content focuses on software factories and general software development lifecycles without mentioning acceptance test driven development or acceptance criteria.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software development practices, software factories, and team roles, without a clear discussion on transparency in Agile processes.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the concept of 'Software Factories' and their role in software development, which relates to software architecture and engineering practices, but it also focuses heavily on workflow and efficiency strategies that are not strictly technical mastery.",
    "level": "Tertiary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on software development methodologies and team structures rather than remote working practices or challenges specific to Agile frameworks.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-17T08:18:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, team structures, and the use of software factories, without a clear focus on Kanban principles or scaling Kanban methodologies.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on customer retention strategies or techniques for maintaining user engagement.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content predominantly discusses software factories and development teams without a clear focus on Agile principles or methodologies such as Scrum or Kanban. It highlights traditional concerns in software development and does not primarily address Agile Project Management concepts.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content revolves around software development practices and concepts that can indirectly relate to throughput, such as reducing time to market and improving efficiencies through software factories. However, it primarily focuses on the structure of development teams and methodologies rather than directly addressing throughput measurement or optimization.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development practices and teams, with no focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the future of software development and methods for improving development efficiency through software factories and teams, but does not specifically focus on Cycle Time as a measurement or critical metric.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content discusses software development practices and team structures but does not primarily focus on sensemaking, complexity interpretation, or decision-making processes in organizations.",
    "level": "Quaternary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of software factories and web services in improving the speed of software delivery and client happiness, indicating a connection to customer satisfaction. However, it primarily focuses on development methodologies rather than explicitly providing a thorough exploration of customer satisfaction principles or practices.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the role of a developer evangelist in communicating feedback between product and factory teams, indicating some relevance to customer feedback loops, but the focus is primarily on development methodologies and teams rather than explicitly on feedback integration processes.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses approaches for improving software development efficiency, including the use of software factories and web services, which directly align with strategic discussions in Agile and DevOps contexts. While the focus isn't strictly on Agile or Scrum frameworks, it does touch upon optimizing delivery processes and enhancing team performance, making it a significant theme.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses organizational structures and roles in software development teams, which relates to interactions and dynamics within organizations, but it primarily focuses on software development practices rather than a comprehensive systems thinking framework.",
    "level": "Tertiary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses future trends in software development, including concepts like software factories and product development teams, without a clear focus on technical debt management or its implications.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development frameworks, methodologies, and team structures, with no clear focus on the Scrum values.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies, teams and processes, without a central focus on the Windows operating system.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software factories and development models, with no clear focus on Lean principles such as waste reduction or value maximisation.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and team structures without focusing on troubleshooting technical issues.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses software development practices and the importance of innovation and efficiency in delivering business solutions, which relates to entrepreneurial processes, but the primary focus is on software development methodologies rather than entrepreneurship itself.",
    "level": "Tertiary"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without focusing on leadership roles, Agile principles, or the impact of leadership on team dynamics.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to software development methodologies and the concept of software factories, rather than focusing on deployment strategies or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on software development methodologies and team structures rather than discussions on test automation or related practices.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "Although the content discusses software development processes and teams, it primarily focuses on improvement and efficiency in development lifecycles, which aligns with Lean principles of enhanced efficiency and value delivery, but is not exclusively about Lean Thinking.",
    "level": "Tertiary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and team structures rather than the Daily Scrum event or its principles.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on software factories and team dynamics in software development, without any clear discussion of Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software development methodologies and roles rather than working agreements, teamwork norms, or communication protocols.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the delivery of software solutions and methods to enhance software development processes, such as software factories and the roles within development teams, but it is more focused on the future of software development rather than specifically on working software itself.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures rather than focusing on identifying customer needs and defining product features.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the future of software development, emphasizing software factories and team structures without specifically addressing Scrum roles or dynamics.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software development methodologies, team structures, and technical roles without focusing on team motivation or practices that enhance engagement and performance in an agile context.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses practical approaches to software development, including the use of software factories and web services, demonstrating experience-based problem-solving techniques applicable within Agile frameworks.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses software development processes broadly without focusing on release planning, scheduling, or other essential aspects of release management.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-17T09:13:37",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses software factories and their role in improving software development processes, which aligns with some aspects of engineering excellence, but it primarily focuses on development methodologies rather than adhering strictly to established principles of software craftsmanship.",
    "level": "Tertiary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development processes and methodologies without focusing on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software factories, team roles, and traditional development practices, without a focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software factories and product development teams, without focusing on Scrum principles or scaling Scrum practices.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses broader software development methodologies and team structures, without any focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the concept of software factories and their role in shortening development lifecycles, which aligns with the operational efficiency theme. However, it also includes broader reflections on traditional methodologies, which dilutes the focus on operational practices.",
    "level": "Secondary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses software development methodologies and team roles without a clear focus on organisational culture or its impact on agility and transformation.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and the concept of software factories, with no direct reference to Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, teams, and methodologies without a clear focus on scaling agility or related frameworks and principles.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development methodologies and team roles related to factory models and web services, without a clear focus on the Scrum Master role or responsibilities.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development processes, teams, and methodologies without a clear focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software factories and web services in the context of software development. It does not focus on the principles of scaling Agile methodologies across an organization, nor does it address frameworks, transformation strategies, or collaboration aspects relevant to large-scale agility.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T08:18:27",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content focuses on software factories and web services rather than Test First Development principles or practices directly.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-18T12:29:27",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the roles and dynamics of development teams, which aligns with themes of collaboration and team dynamics, but it primarily focuses on software factories and web services rather than specific methodologies like Scrum, Kanban, Lean, or Agile.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:29:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on leadership practices or principles.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:51:18",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the concept of software factories, which aligns with the principles of an Internal Developer Platform, but it primarily focuses on broader software development practices and team structures.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:51:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development methodologies and team structures without a clear focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  }
}
