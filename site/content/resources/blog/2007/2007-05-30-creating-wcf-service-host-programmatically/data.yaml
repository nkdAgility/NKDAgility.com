post:
  title: Creating WCF Service Host Programmatically
  link: https://nkdagility.com/blog/creating-wcf-service-host-programmatically/
  pubDate: Wed, 30 May 2007 00:23:24 +0000
  creator: MrHinsh
  guid:
    _: >-
      http://geekswithblogs.net/hinshelm/archive/2007/05/30/creating-wcf-service-host-programmatically.aspx
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p>If you want to create a <a title=\"Windows Communication Foundation\" href=\"http://wcf.netfx3.com\" target=\"_blank\">Windows Communication Foundation</a> Service Host on the fly then you will need to first create a base address. I would recommend using the DNS host entry instead of the My.Computer.Name as I had many problems on the corporate network with [computername] not working with our proxy settings.\_ </p>  <p>\_</p>  <pre class=\"brush: vb; ruler: true;\">Dim baseAddresses() As Uri = {New Uri(String.Format(\"http://{0}:{1}/TFSEventHandler/Queuer\", System.Net.Dns.GetHostEntry(System.Net.Dns.GetHostName).HostName, Port))}</pre>\n\n<p>\_</p>\n\n<p>Then you need to create the service host itself.</p>\n\n<pre class=\"brush: vb; ruler: true;\">Dim sh As New System.ServiceModel.ServiceHost(GetType(Services.QueuerService), baseAddresses)</pre>\n\n<p>\_</p>\n\n<p>Then set the service meta and debug behaviors so that you can both enable the MEX and remote exception handling.</p>\n\n<pre class=\"brush: vb; ruler: true;\">' Set service meta behavior \nDim smb As ServiceMetadataBehavior = sh.Description.Behaviors.Find(Of ServiceMetadataBehavior)() \nIf smb Is Nothing Then \n  smb = New ServiceMetadataBehavior() \n  smb.HttpGetEnabled = True \n  sh.Description.Behaviors.Add(smb) \nElse \n  smb.HttpGetEnabled = True \nEnd If \n' Set Service Debug Behavior \nDim sdb As ServiceDebugBehavior = sh.Description.Behaviors.Find(Of ServiceDebugBehavior)() \nIf sdb Is Nothing Then \n  sdb = New ServiceDebugBehavior() \n  sdb.IncludeExceptionDetailInFaults = True \n  sh.Description.Behaviors.Add(sdb) \nElse \n  sdb.IncludeExceptionDetailInFaults = True \nEnd If</pre>\n\n<p>\_</p>\n\n<p>Then comes the easy bit, adding the Endpoints. I have chosen to use a Secure wsHttpBinding as I am using Active Directory authentication and I want another level of security. Here I am creating a number of static end points, but also an endpoint for each of the Team Foundation Server SOAP Events, which uses the same code to handle each one, but you can determine the incoming URL for the event type.</p>\n\n<pre class=\"brush: vb; ruler: true;\">sh.Description.Endpoints.Clear() \nFor Each EventType As Events.EventTypes In [Enum].GetValues(GetType(Events.EventTypes)) \n    sh.AddServiceEndpoint(GetType(Services.Contracts.INotification), GetSecureWSHttpBinding, \"Notification/\" &amp; EventType.ToString) \nNext \nsh.AddServiceEndpoint(GetType(Services.Contracts.ISubscriptions), GetSecureWSDualHttpBinding, \"Subscriptions\") \nsh.AddServiceEndpoint(GetType(Services.Contracts.ITeamServers), GetSecureWSDualHttpBinding, \"TeamServers\") \nsh.AddServiceEndpoint(GetType(Description.IMetadataExchange), GetSecureWSHttpBinding, \"mex\")</pre>\n\n<p>\_</p>\n\n<p>You will need to create the binding programmatically as well (see the GetSecureDualWSHttpBinding method referenced above) and you may need to set some specialist options. I needed to increase the size of some of the payloads to implement my service. I have chosen to use the same method to create the service on both the client and the server so I have included the ClientBaseAddress property to get around the problem on Windows of a \"http://+:80 error if you have IIS installed.</p>\n\n<pre class=\"brush: vb; ruler: true;\">Dim Binding As New WSDualHttpBinding(WSDualHttpSecurityMode.Message) \nBinding.MaxReceivedMessageSize = 655360 \nBinding.ReaderQuotas.MaxStringContentLength = 655360 \nBinding.ReaderQuotas.MaxArrayLength = 655360 \nBinding.Security.Message.ClientCredentialType = MessageCredentialType.Windows \nBinding.Security.Message.NegotiateServiceCredential = True \nBinding.ClientBaseAddress = New System.Uri(\"http://\" &amp; System.Net.Dns.GetHostEntry(System.Net.Dns.GetHostName).HostName &amp; \":660\") \nBinding.BypassProxyOnLocal = True </pre>\n\n<p>\_</p>\n\n<p>Using this in conjunction with the custom proxy creation will allow you to build versatile integrated services on the .NET platform.</p>\n\n<p>You can find all of the code listed above @ <a href=\"http://www.codeplex.com/TFSEventHandler\">http://www.codeplex.com/TFSEventHandler</a></p>"
  - ''
  post_id: '393'
  post_date: '2007-05-30 00:23:24'
  post_date_gmt: '2007-05-30 00:23:24'
  post_modified: '2007-05-30 00:23:24'
  post_modified_gmt: '2007-05-30 00:23:24'
  comment_status: open
  ping_status: open
  post_name: creating-wcf-service-host-programmatically
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: dsq_thread_id
    meta_value: '311466306'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: robotsmeta
    meta_value: index,follow
  - meta_key: _flattr_post_language
    meta_value: ''
  - meta_key: _flattr_post_category
    meta_value: ''
  - meta_key: _flattr_post_hidden
    meta_value: ''
  - meta_key: _flattr_btn_disabled
    meta_value: ''
  - meta_key: _thumbnail_id
    meta_value: '7080'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1aBHRQC
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474900099;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:3469;}i:1;a:1:{s:2:"id";i:68;}i:2;a:1:{s:2:"id";i:377;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2007-05-30-creating-wcf-service-host-programmatically.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1
  - meta_key: ekit_post_views_count
    meta_value: '844'
  comment:
  - comment_id: '93'
    comment_author: Christopher Steen
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2007-05-30 10:23:36'
    comment_date_gmt: '2007-05-30 10:23:36'
    comment_content: >-
      RESTful Web Services [Via: Jon Udell ] SCSFContrib is Alive! [Via: bsimser
      ] Expression Studio on MSDN...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209972572'
  - comment_id: '94'
    comment_author: Mr Eyes
    comment_author_email: ''
    comment_author_url: ''
    comment_author_IP: ''
    comment_date: '2008-08-08 21:49:42'
    comment_date_gmt: '2008-08-08 21:49:42'
    comment_content: The font on this site is too small to read.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '209972614'
