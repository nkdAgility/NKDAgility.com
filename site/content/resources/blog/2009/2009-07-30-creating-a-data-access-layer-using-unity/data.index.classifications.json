{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-16T02:13:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to data access layers and dependency injection, with no relevance to Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T15:43:04",
    "ai_confidence": 78.0,
    "ai_mentions": 85.0,
    "ai_alignment": 75.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content provides a detailed exploration of using Unity as a dependency injection and mapping framework, which directly aligns with practical techniques and tooling in software development. It discusses specific implementations, configurations, and best practices for using Unity, demonstrating a clear application of a tool within a practical context. The depth of discussion includes code examples and explanations of design patterns, which enhances its relevance to the category. However, while it is focused on a specific tool, it lacks broader discussions on Agile or DevOps methodologies, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-16T02:13:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity, which is not directly related to platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-16T02:13:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples, without any reference to Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-11T17:02:41",
    "ai_confidence": 32.0,
    "ai_mentions": 10,
    "ai_alignment": 25,
    "ai_depth": 15,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily focuses on implementing a data access layer using Unity, which involves some aspects of code quality and design patterns. However, it lacks a thorough exploration of complexity theory or its implications on software architecture. While there are mentions of maintainability and design principles, the discussion does not deeply engage with the interplay between code quality and complexity, leading to a lower confidence score.",
    "level": "Quaternary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-16T02:13:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical implementation details related to creating a data access layer using Unity, without discussing discovery or learning processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-16T02:13:58",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on dependency injection and configuration, without any mention of AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-16T02:13:59",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and programming concepts without reference to Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-03-11T15:12:00",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content provides a detailed guide on creating a data access layer using Unity, which includes specific steps for configuring the Unity container and managing dependencies. It discusses the setup of configuration files and the use of assembly attributes, which are relevant to installation and configuration processes. However, while it does touch on these topics, the primary focus is more on implementation details rather than a structured guide for installation or configuration, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-16T02:14:03",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples without addressing transparency or accountability principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-16T02:14:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples without addressing market adaptability strategies or methodologies.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-16T02:14:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a data access layer using Unity, without addressing the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-16T02:14:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical implementations of a data access layer using Unity, with no focus on organisational resilience or change management.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-16T02:14:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity, which is not related to DevOps principles, practices, or tools.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-16T02:14:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, which is a technical topic related to software development and does not align with the Miscellaneous category.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-16T02:14:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating a data access layer using Unity, with no focus on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-16T02:14:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical implementation details of a data access layer using Unity, with no reference to events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-16T02:14:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code rather than flow efficiency principles or optimisation of work throughput.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-16T02:14:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical implementation details of a data access layer using Unity, with no focus on human behaviour or structured methodologies in technology and product development.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-16T02:14:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples without addressing enterprise agility or organisational adaptability.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-16T02:14:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples without addressing business agility principles or practices.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-16T02:14:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples without addressing metrics, learning, or evidence-based decision-making.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-16T02:14:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation of a data access layer using Unity, with no mention of Kanban principles, practices, or related topics.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-10T13:08:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content primarily focuses on implementing a data access layer using Unity, which involves technical practices such as dependency injection and factory patterns. While it does touch on some aspects of modular architecture and configuration management, it lacks a comprehensive discussion on broader engineering methodologies like TDD or CI/CD. The depth of technical detail is moderate, but it does not fully explore the implications of technical excellence in software development processes.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-16T02:14:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples without reference to complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-16T02:14:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating a data access layer using Unity, with no focus on psychological principles or theories relevant to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-16T02:14:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity, which is more about software architecture and implementation rather than the methodologies and practices involved in product delivery.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-16T02:14:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code rather than principles of decentralised organisational design or human-centric approaches.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-16T02:14:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, which is unrelated to Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-16T02:14:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical implementation details of a data access layer using Unity, without any focus on Agile methodologies, DevOps practices, or relevant literature.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-16T02:14:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating a data access layer using Unity, without a focus on value delivery strategies or methodologies.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-16T02:14:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, with no mention of Azure DevOps services or practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-16T02:14:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a data access layer using Unity, with no personal reflections or experiences related to Agile, Scrum, DevOps, or business agility.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-16T02:14:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code examples without addressing Systems Thinking principles or applications.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-16T02:14:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on dependency injection and factory patterns, which are not related to the One Engineering System framework.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-16T02:14:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical practices rather than Agile principles or product-centric development.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-16T02:14:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementation details of a data access layer using Unity, with no discussion of organisational agility principles or practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-16T02:14:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily focuses on technical implementation details of creating a data access layer using Unity, which does not align with industry news, updates, or reviews related to Agile, DevOps, or technology.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-16T02:14:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity, discussing implementation details and code examples, rather than the management of the application lifecycle.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is primarily focused on creating a data access layer using the Unity framework and does not discuss the Daily Scrum or any related Scrum events.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "The content is focused on technical details related to creating a data access layer using Unity and does not discuss the Definition of Done or related concepts in Agile/Scrum.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-10T15:06:20",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content provides a detailed exploration of creating a data access layer using Unity, which aligns closely with best practices in software design and architecture. It discusses the use of interfaces, dependency injection, and the Singleton pattern, all of which are key principles of clean code and software craftsmanship. The depth of discussion is significant, covering implementation details, configuration, and the rationale behind design choices, which supports a high confidence score in the 'Technical Mastery' category.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation details related to the Unity framework and data access layers, with no relevant content about identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the creation of a data access layer using Unity and does not relate to Continuous Delivery principles, practices, or automation. It focuses on dependency injection and factory patterns instead.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical implementation details of a data access layer using Dependency Injection and does not address strategic goals or long-term business objectives.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses creating a data access layer using Unity and does not mention Lead Time or its related concepts.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical details about creating a Data Access layer using Unity, with no mention of organisational culture or related themes.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical aspects of creating a data access layer using Unity and does not engage with the concept of Definition of Ready or any related criteria for backlog item readiness.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation of a data access layer using Unity, with no relation to portfolio management or its key topics.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the creation of a data access layer using Unity, with no focus on Product Backlog or related Agile practices.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the implementation of a data access layer using Unity, which is unrelated to Agile Planning methodologies and practices.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the creation of a data access layer using Unity, which is unrelated to Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the creation of a data access layer using Unity, focusing on programming techniques and dependency injection rather than customer feedback mechanisms.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-11T18:13:36",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily focuses on the technical implementation of a data access layer using Unity, which does not directly address operational practices aimed at enhancing efficiency or delivery within Agile, DevOps, or Lean frameworks. While there are elements of design patterns and configuration management, these do not align with the core themes of operational efficiency or continuous improvement strategies outlined in the category definition.",
    "level": "Quinary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details regarding a Data Access layer, which does not relate to Scrum Team dynamics or roles.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical details related to creating a data access layer using the Unity framework, with no clear discussion of Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses implementation details of a data access layer and dependency injection with Unity, which is unrelated to strategy formulation or Agile principles.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses technical implementation details regarding Unity and creating a Data Access layer, with no focus on product validation or methodologies for user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses technical aspects of creating a data access layer using Unity, focusing on programming practices rather than Agile transformation strategies or methodologies.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details related to creating a data access layer using a specific framework, which is not related to mentoring in Agile environments.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the implementation of a data access layer using Unity and focuses on dependency injection and configuration rather than automated testing principles or practices.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on creating a data access layer using Unity, discussing technical implementations, interfaces, and configuration without any reference to team dynamics, collaboration, or Agile methodologies.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical implementation details of a Data Access layer, without discussing software delivery increments or Agile methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating a data access layer using Unity, focusing on dependency injection and factory patterns, without any mention of acceptance testing or related principles.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-11T10:42:43",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 40.0,
    "ai_depth": 32.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content provides a detailed discussion on creating a data access layer using Unity, which is a software development practice. It explicitly mentions concepts such as dependency injection, interfaces, and factory patterns, aligning well with software design principles. The depth of the discussion includes code examples and explanations of the implementation, demonstrating a strong focus on software engineering practices.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content focuses on implementing a data access layer using Unity and discusses technical aspects of programming and dependency injection, which are not related to Agile Project Management principles or practices.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is focused on technical details of implementing a data access layer using Unity, with no reference to Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on creating a data access layer using Unity, which is unrelated to Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating a data access layer using Unity and is focused on dependency injection and software design patterns, without a clear emphasis on version control practices or methodologies.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical details related to implementing a data access layer using Unity, without discussing empirical process control or Agile methodologies.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation of a data access layer using Unity, which is unrelated to Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses creating a data access layer using Unity and does not address Azure Boards or Agile project management topics.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on creating a data access layer using Unity, discussing technical implementation details rather than collaboration tools or Agile methodologies.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to software development and dependency injection, which do not relate to organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation of a data access layer using Unity, without reference to Lean Startup principles, MVPs, or iterative learning.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses implementing a data access layer using Unity, focusing on interfaces and dependency injection, without any relevant discussion on frequent software releases, continuous delivery, or related topics.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details related to creating a data access layer using Unity and does not discuss customer satisfaction principles or practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on creating a data access layer using Unity and is centered around technical implementation rather than discussing any aspects of scaling Scrum or related frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating a data access layer using Unity, without any reference to leadership principles or evidence-based practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical implementation details related to Unity and data access layers, with no discussion on psychological safety.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses implementing a data access layer using Unity in .NET, which is focused on technical implementation rather than scaling agile practices or related organizational strategies.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-07T15:42:58",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on implementing a data access layer using Unity, which involves technical details about coding practices and design patterns. However, it lacks explicit discussions on broader engineering excellence principles such as quality assurance, coding standards, or continuous improvement processes. While it touches on some aspects of software craftsmanship, the depth of discussion is more about specific implementation rather than promoting high standards in software development practices.",
    "level": "Quaternary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is primarily focused on technical implementation of a data access layer using Unity and does not discuss revenue per employee or any related financial metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating a data access layer using the Unity framework, with no focus on asynchronous development or its principles.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses technical implementation of a data access layer using Unity and does not engage with systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical implementation details regarding creating a data access layer using Unity, with no focus on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-11T12:08:22",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on technical implementation details of a data access layer using Unity, which lacks a direct discussion on pragmatic thinking principles. While it touches on practical problem-solving through the use of dependency injection and factory patterns, it does not explicitly address Agile, Scrum, or DevOps frameworks. The discussion is more about coding practices than about navigating complexity or applying experience-based strategies in project management contexts.",
    "level": "Quaternary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses entirely on creating a data access layer using Unity, with no relevance to backlog refinement or Agile practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical implementation details for creating a data access layer using Unity, without discussing innovation, evidence-based management, or capacity-building for sustainable value delivery.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the implementation of a data access layer using Unity and dependency injection, with no mention of Scrum principles, practices, or product development.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details of a Data Access layer using Unity, without any reference to Agile methodologies or scaling Agile practices.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation details related to data access and dependency injection without addressing any aspects of employee engagement.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on programming, specifically the implementation of a data access layer using Unity, with no clear discussion or reference to Lean Thinking principles.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily describes creating a data access layer using Unity, focusing on dependency injection and implementation details without discussing test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details related to software development and does not discuss entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the implementation of a data access layer using Unity, focusing on dependency injection and configurations rather than the broader themes of working software delivery or Agile development principles.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the implementation of a Data Access layer using Unity and discusses dependency injection and factory patterns, which do not relate to Agile Planning Tools.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity and discusses implementation details, generic interfaces, and configuration without any direct relation to Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on software development and implementation details regarding a data access layer using Unity, with no discussion related to market share, competitive strategies, or customer engagement.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on technical implementation details of using Unity for data access, with no discussion of leadership roles or Agile principles.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical implementations related to data access layers using Unity, without discussing sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the creation of a data access layer using Unity, focusing on dependency injection and factory patterns, which are not directly related to Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity, without discussing hypothesis formulation, experimentation, or the principles of hypothesis driven development.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content is primarily focused on coding and implementation details related to creating a Data Access layer using Unity and does not discuss structured decision-making or evidence-based methodologies.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses implementation details of a data access layer using Unity and does not address any principles of Lean thinking, waste reduction, or value maximization.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity and does not discuss any aspects of release management or software release processes.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details of creating a data access layer using Unity, which is unrelated to the role of a Product Owner.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on creating a data access layer using Unity and does not discuss Cycle Time or its related concepts.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses data access layers, dependency injection, and Unity framework implementation without any reference to Azure Pipelines or related CI/CD practices.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses creating a data access layer using Unity with no relevant discussions about deployment frequency, Agile, or DevOps practices.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on creating a data access layer using Unity, discussing programming strategies and implementation details, which are unrelated to Change Management.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses technical implementation details of creating a data access layer using Unity, focused on coding and architecture, with no mention of team collaboration or Agile principles.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the implementation of a data access layer using Unity, focusing on dependency injection and factory patterns, which does not relate to Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on technical implementation details related to Unity for data access layers, without discussing the strategic use of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on creating a data access layer using Unity, which does not align with discussions about Minimum Viable Products, product development, or market validation.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses creating a data access layer using Unity without any focus on AI applications, Agile methodologies, or DevOps practices.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-03-10T18:53:32",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the configuration of a Unity container and the setup of a data access layer, which aligns with system configuration principles. However, the focus is more on implementation details and coding practices rather than broader system configuration methodologies. While it touches on configuration management through the use of XML configuration files and assembly visibility, it lacks a comprehensive exploration of best practices or optimisation strategies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details regarding creating a data access layer using Unity, which does not relate to product strategy discussions.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating a data access layer using Unity, with no clear focus on leadership, team dynamics, or agile practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-16T02:51:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses creating a data access layer and does not relate to estimation techniques or Agile practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation of a data access layer and does not engage with the concept of cross-functional teams in Agile methodologies.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses implementing a data access layer using Unity, focusing on dependency injection and configuration, without a clear focus on Test First Development or writing tests before code.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses creating a data access layer using Unity and does not focus on Windows operating system topics such as its installation, configuration, troubleshooting, or updates.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses creating a data access layer and implementing dependency injection, which does not relate to deployment strategies for software.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details related to a data access layer and dependency injection using Unity, without any mention or discussion of scaling Agile methodologies or large scale agility principles.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation details about creating a data access layer using Unity, without any reference to team dynamics or motivational strategies.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical details related to data access layers and dependency injection using Unity, with no relevance to remote working or Agile practices.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details of creating a data access layer using Unity, without addressing principles or practices of continuous learning, growth mindset, or Agile methodologies.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on creating a data access layer using Unity, detailing setup and implementation rather than diagnosing and resolving technical issues.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses implementation details and not experimentation or hypothesis-driven approaches relevant to Agile workflows.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details about creating a data access layer using Unity, without any reference to the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses dependency injection and implementation details of a data access layer without addressing transparency or related principles in Agile processes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical implementation details of a data access layer using Unity, with no discussion of working agreements, teamwork, or collaboration principles.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily focuses on creating a data access layer and using dependency injection with Unity, without discussing Agile or DevOps methodologies relevant to software developers.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation of a data access layer using Unity, focusing on coding and configuration rather than coaching or team development.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-17T09:09:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the implementation of a data access layer using the Unity framework, which touches upon clean code principles and could imply methodologies relevant to Agile practices. However, the primary focus is more on implementation details rather than significant discussions on Agile engineering practices or methodologies.",
    "level": "Tertiary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on coding patterns and configurations rather than on the concepts and implications of technical debt.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical implementation details regarding a data access layer in software development, with no mention or relevance to Sprint Review discussions in Scrum.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical implementation details related to creating a data access layer using Unity, which is not relevant to product management.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on technical implementation details in software development, specifically around Unity for dependency injection and data access layer creation, which does not align with the principles of self-organisation, autonomy, and team dynamics.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the implementation of a data access layer using Unity, which is unrelated to Agile frameworks or their principles.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of creating a data access layer using Unity and does not address Agile methodologies or strategic considerations.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily centers around creating a Data Access layer using Unity, discussing dependency injection and related programming practices, without any mention or discussion of Azure Repos functionalities or related topics.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on creating a data access layer using Unity and does not discuss forecasting methods or practices relevant to Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on creating a data access layer using Unity and does not discuss Lean Product Development principles, waste reduction, or continuous improvement.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical implementation details of a data access layer using Unity, with no discussion on Agile methodologies, DevOps practices, or business agility trends.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical implementation details of a data access layer using Unity and does not address team dynamics, ownership, or accountability in an Agile context.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on creating a data access layer using Unity and does not discuss Scaling Kanban or related practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the implementation of a data access layer using Unity, which is primarily focused on technical setup and dependency injection, rather than the measurement or optimization of work completion rates in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-16T02:51:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses creating a data access layer with Unity and doesn't focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-18T12:02:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on technical details and code rather than on social technologies or methodologies like Scrum, Kanban, Lean, or Agile.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T12:02:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical implementation details related to creating a data access layer using Unity, with no focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:35:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, focusing on dependency injection and factory patterns, which are not central to the concept of Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:35:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implementation of a data access layer using Unity, with no mention of AI, Agile methodologies, or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T11:53:40",
    "ai_confidence": 5.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 5.0,
    "non_ai_confidence": 0,
    "final_score": 4.0,
    "reasoning": "The content primarily focuses on creating a data access layer using Unity, discussing technical implementation details without any reference to Scrum principles, roles, events, or practices. There are no mentions of Scrum or Agile methodologies, and the discussion lacks any alignment with the core themes of Scrum, such as team dynamics or iterative progress.",
    "level": "Ignored"
  }
}
