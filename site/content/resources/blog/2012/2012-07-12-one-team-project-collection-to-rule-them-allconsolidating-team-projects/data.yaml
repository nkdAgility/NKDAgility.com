post:
  title: One Team Project Collection to rule them all - Consolidating Team Projects
  link: >-
    https://nkdagility.com/blog/one-team-project-collection-to-rule-them-allconsolidating-team-projects/
  pubDate: Thu, 12 Jul 2012 00:20:29 +0000
  creator: MrHinsh
  guid:
    _: http://blog.hinshelwood.com/?p=6109
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p>Following on from last weeks successful <a href=\"http://blog.hinshelwood.com/upgrading-tfs-2010-to-tfs-2012-with-vss-migration-and-process-template-consolidation/\">Upgrading TFS 2010 to TFS 2012 with VSS Migration and Process Template consolidation</a> I finished off the last of the 20-30 Team Project Process Template migration/upgrades to a customised form on the Visual Studio Scrum 2.0. We only added a couple of fields, but we also defined a process and strategy for use of the Template within the organisation.</p>\r\n<div class=\"related-information\">\r\n<p>If you are looking for why you might want one team project:</p>\r\n<ul>\r\n<li><a title=\"One Team Project\" href=\"http://blog.hinshelwood.com/one-team-project/\" target=\"_blank\">One Team Project</a></li>\r\n<li><a href=\"http://blog.hinshelwood.com/project-of-projects-with-team-foundation-server-2010/\">Project of Projects with team Foundation Server 2010</a></li>\r\n<li><a href=\"http://blog.hinshelwood.com/when-should-i-use-areas-in-tfs-instead-of-team-projects-in-team-foundation-server-2010/\">When should I use Areas in TFS instead of Team Projects in Team Foundation Server 2010</a></li>\r\n</ul>\r\n</div>\r\n<div class=\"series-listing\">\r\n<p>This post is part of a series of posts that document a Upgrade of TFS 2010 to TFS 2012 with a VSS Migration, Process Template consolidation, Team Project consolidation and a FogBugz migration:</p>\r\n<ol>\r\n<li><strong>Part 1: </strong><a href=\"http://blog.hinshelwood.com/upgrading-tfs-2010-to-tfs-2012-with-vss-migration-and-process-template-consolidation/\" target=\"_blank\"><strong>Upgrading TFS 2010 to TFS 2012 with VSS Migration and Process Template consolidation</strong></a>\r\n</li>\r\n<li><strong>Part 2: One Team Project Collection to rule them all–Consolidating Team Projects</strong>\r\n<ul>\r\n<li><a href=\"http://blog.hinshelwood.com/tfs-integration-platform-issue-access-denied-to-program-files/\" target=\"_blank\">TFS Integration Tools – Issue: Access denied to Program Files</a></li>\r\n<li><a href=\"http://blog.hinshelwood.com/tfs-integration-tools-issue-error-occurred-during-the-code-review-of-change-group/\" target=\"_blank\">TFS Integration Tools – Issue: Error occurred during the code review of change group</a></li>\r\n<li><a href=\"http://blog.nwcadence.com/tfs-integration-tools-issue-unable-to-find-a-unique-local-path/\" target=\"_blank\">TFS Integration Tools – Issue: “unable to find a unique local path”</a></li>\r\n<li><a href=\"http://blog.nwcadence.com/tfs-2012-issue-get-workspace-already-exists-connecting-with-vs-2008-or-vs-2010/\" target=\"_blank\">TFS 2012 Issue: Get Workspace already exists connecting with VS 2008 or VS 2010</a></li>\r\n</ul>\r\n</li>\r\n<li><strong><a href=\"http://blog.hinshelwood.com/migrating-data-from-fogbugz-to-tfs-2012-using-the-tfs-integration-platform/\">Part 3: Migrating data from FogBugz to TFS 2012 using the TFS Integration Platform</a></strong>\r\n</li>\r\n</ol>\r\n</div>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb.png\" alt=\"image\" width=\"640\" height=\"360\" border=\"0\" /></a><br /><strong>Figure: Consolidate to a single Team Project Collection</strong></p>\r\n<p>As pert of the process of getting everything onto a single Process Template, namely the Visual Studio Scrum 2.0, we identified that the customer should also move to a single Team Project Collection and more than that, into a single Team Project.</p>\r\n<p>Why you might ask?</p>\r\n<p>As <a href=\"http://blog.hinshelwood.com/project-of-projects-with-team-foundation-server-2010/\" target=\"_blank\">I have often mentioned before</a> there are a number of reasons that you would want to be on a single Team Project Collection and there are also reasons why you do not. You should have separate Team Project Collections when:</p>\r\n<ul>\r\n<li>There is not nor will there ever be a relationship between source or work items between Collections</li>\r\n<li>You want to&nbsp; move source from one location to another</li>\r\n<li>You have more than 300 Team Projects</li>\r\n</ul>\r\n<p>In this case the things that we do want to do are:</p>\r\n<ul>\r\n<li>Link Work Items from one project to another</li>\r\n<li>Move work items from one project to another</li>\r\n</ul>\r\n<p>There is only one tool for this job and that is the <a href=\"http://tfsintegration.codeplex.com/\" target=\"_blank\">TFS Integration Platform</a>. While the TFS Integration Platform provides lost of migration options I am interested only in the TFS 2012 –> TFS 2012 variety which greatly simplifies the configuration. In addition to that I am migrating from a Visual Studio Scrum 2.0 Process Template to… well… a Visual Studio Scrum 2.0 Template. I just have 20-30 Team Projects to migrate. The key here is to get the mappings correct.</p>\r\n<h3 class=\"icon-task\">Installing TFS Integration Platform with Visual Studio Team Explorer 2012</h3>\r\n<p>As soon as I downloaded the TFS Integration platform I ran into a bug where the registry key is not found and the Wix installer does not look for the right Key for the RC. The key it is looking for is only present if a developer edition of Visual Studio is installed.</p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/screenie99.jpg\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"screenie99\" src=\"http://blog.hinshelwood.com/files/2012/07/screenie99_thumb.jpg\" alt=\"screenie99\" width=\"600\" height=\"480\" border=\"0\" /></a><br /><strong>Figure: </strong><a href=\"http://blogs.msdn.com/b/willy-peter_schaub/archive/2012/07/04/tfs-integration-tools-issue-this-tool-requires-the-tfs-client-object-model.aspx\" target=\"_blank\"><strong>TFS Integration Tools – Issue: “This tool requires the TFS client object model”</strong></a></p>\r\n<p>Luckily <a href=\"http://blogs.msdn.com/b/willy-peter_schaub/archive/2011/04/19/introducing-the-visual-studio-alm-rangers-jahangeer-mohammed.aspx\" target=\"_blank\">Jahangeer Mohammed</a> road to the rescue within 4 hours of me reporting the issue with the root cause and Willy posted the solution the very next day. That's ALM Ranger efficiency… customer was very impressed (although <a href=\"http://blog.nenoloje.com/\" target=\"_blank\">Neno</a> would have a fit over the offending registry key)</p>\r\n<h3 class=\"icon-task\">Running the TFS Integration Platform for the first time on TFS 2012</h3>\r\n<p>The first time you run the TFS Integration Platform on any computer you will get a message asking you to add the account that it is running under to a particular group. You can either add it manually or click “Yes” to get it to do it itself…quickly followed by cursing as you need to be in Administrator mode. Restart… Yes… all is good with the world.</p>\r\n<p>I will get into the configuration in just a minute, but first lets solve the very first error message you will run into.</p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image1.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb1.png\" alt=\"image\" width=\"640\" height=\"385\" border=\"0\" /></a><br /><strong>Figure: TFS WIT bypass-rule submission is enabled</strong></p>\r\n<p>You may not be using an account that is in the “Team Foundation Server Service Accounts” group or the equivalent Collection group. No wait… you can’t just go an add it. This is a special group that does not allow you to populate it through the UI. You can however view it and all of the accounts that you use for your Build Agents, Build Controllers and other bits and bobs will all be in this list already. So how to add your TFS Integration Platform account?</p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image2.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb2.png\" alt=\"image\" width=\"600\" height=\"480\" border=\"0\" /></a><br /><strong>Figure: Updating the TFS Security group</strong></p>\r\n<p>You use our old friend the command line. There is an application called TfsSecurity that will allow you to add an account directly to that group.</p>\r\n<pre class=\"brush: ps; ruler: true;\">tfssecurity /g+ \"Team Foundation Service Accounts\" n:domainusername ALLOW /server:http://myserver:8080/tfs\r\n</pre>\r\n<p>Now you have that sorted you are ready to rock…</p>\r\n<h3 class=\"icon-task\">Migrating Source Control using the TFS Integration Platform</h3>\r\n<p>As we are trying to fold 30 Team Projects across 4 Team Project Collections into a single Team Project on a single Team Project Collection we need to be very specific with the mappings. We are also really lucky that there are no relationships between Work items and Version Control which simplifies the process as we can do them separately.</p>\r\n<p>There are a ridicules number of options here and the <a href=\"http://blogs.msdn.com/b/willy-peter_schaub/archive/2011/06/06/toc-tfs-integration-tools-blog-posts-and-reference-sites.aspx\" target=\"_blank\">rangers have many, many documented</a> options that will allow you to do whatever you want. There is however something interesting that you can do and that we wanted to try... You can move individual branches to new locations while maintaining the relationships. This works really well on codebases that do not have a lot of complex branches or deletes. If you have many deletes outside of the scope, or you have a lot of sub branches of code branches into your solution from outside of the scope of a team project you can run into a few problems.</p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image3.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb3.png\" alt=\"image\" width=\"640\" height=\"406\" border=\"0\" /></a><br /><strong>Figure: Complicated mappings will not always work</strong></p>\r\n<p>You can skip to the end to see all of the problems and solutions, but if you are doing these complicated mappings you may have issues getting a distinct mapping due to how the TFS Integration Platform creates mappings, but the solution is to ditch the mappings and the root of $/TeamProjectA/ to the single sub folder of&nbsp; $TeamProjectB/TeamProjectA/ so that everything is just mapped at that level. This solved all of those problems and you can always do the rearranging later.</p>\r\n<p>Regardless of this problem we needed to map all of our existing Team Projects to a new folder underneath a single existing Team Project on our new Collection. We are mapping each Team Project individually as that is how the TFS Integration Platform is setup so we need to create a Migration Configuration for each Team Project.</p>\r\n<p>We actually tried the complex rearrange mapping on all of the projects and called a “destroy” on the migrated source for all of the ones that failed and redid them at the root.</p>\r\n<pre class=\"brush: ps; ruler: true;\">tf destroy $/somefolder/somesubfolder/ /collection:http://mytfsserver:8080/tfs/tfs01\r\n</pre>\r\n<p><strong>Figure: Destroying Migrated data to start again</strong></p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image4.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb4.png\" alt=\"image\" width=\"640\" height=\"360\" border=\"0\" /></a><br /><strong>Figure: A successful mapping</strong></p>\r\n<p>Make sure that you check the source after you bring it across for consistency as even if the Platform tells you all is well, it could well be lying and we did find a couple of glitches (again detailed below).</p>\r\n<p>Effectively you just go through each of your source Team Projects, mapping them to the destination Team Project and keep going until you are done. The time it will take will depend on the amount of source code and the number of changes, but the source code will be fairly fast.</p>\r\n<p>There is a neat trick that works pretty well if you don’t have any differences, except for the target folder, for your source to bring everything across from a Collection.</p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image5.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb5.png\" alt=\"image\" width=\"640\" height=\"361\" border=\"0\" /></a><br /><strong>Figure: Just because your pick a Team Project does not mean that is the root</strong></p>\r\n<p>In this case I want to bring everything across from all of the Team Projects in the Collection to a folder under the new Team Project. Now, you need to initially select a Team Project as the source but I then changed it to “$/” to just bring everything across to its new home of “$/NewTeamProejct/Department/” and have it create folders of the same name as the old Team Projects as plain folders.</p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image6.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb6.png\" alt=\"image\" width=\"640\" height=\"361\" border=\"0\" /></a><br /><strong>Figure: Runs through like a dream</strong></p>\r\n<p>I had initially worried that it work choke at the Team Project boundary, but I have checked that everything is coming across properly and for a change it is operating exactly as you would expect given the settings.</p>\r\n<p>So, apart from the 7 team projects that I have a block on to see if a fix comes through from the Product Team I have successfully consolidated the Source from</p>\r\n<h3 class=\"icon-task\">Migrating Work Items using the TFS Integration Platform</h3>\r\n<p><img style=\"background-image: none; float: right; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"simples\" src=\"http://blog.hinshelwood.com/files/2012/07/simples.png\" alt=\"simples\" width=\"123\" height=\"85\" align=\"right\" border=\"0\" />Because we have already completed the <a href=\"http://blog.hinshelwood.com/upgrading-tfs-2010-to-tfs-2012-with-vss-migration-and-process-template-consolidation/\" target=\"_blank\">Process Template consolidation</a> we only have one Process Template mapping to work about… or do we. If you used <a href=\"http://blog.hinshelwood.com/process-template-upgrade-7-overwrite-retaining-history-with-limited-migration/\" target=\"_blank\">method #7</a> for migrating&nbsp; your process template you will be left with extra fields that are not part of the core template. Make sure that the destination Team Project has the same work item type definitions as the source Team Project and you will have no problems <img class=\"wlEmoticon wlEmoticon-smile\" style=\"border-style: none;\" src=\"http://blog.hinshelwood.com/files/2012/07/wlEmoticon-smile1.png\" alt=\"Smile\" /></p>\r\n<p>In your configuration file, because we have the same work item types on each end, you can just map all of the Left Work Item Types to all of the Right Work Item Types…</p>\r\n<pre class=\"brush: ps; ruler: true;\">&nbsp;</pre>\r\n<p><strong>Figure: Work Item Mappings</strong></p>\r\n<p>On top of that they only real issue is that you need to enable <a href=\"http://blogs.msdn.com/b/willy-peter_schaub/archive/2009/11/10/tfs-integration-platform-what-is-the-enablebypassruledatasubmission-in-the-configuration-file-question-answer-7.aspx\" target=\"_blank\">WIT Bypass rules submission</a> which tells the TFS Integration Platform to use the Woeb Services directly and not the API’s. Why, you might ask…. well we need to be able to write historical states that do not actually exist in the workflow so that we can maintain the history.</p>\r\n<pre class=\"brush: xml; ruler: true; highlight: [8];\">  \r\n    \r\n    <!--<CustomSetting SettingKey=\"DisableAreaPathAutoCreation\" SettingValue=\"\" />-->\r\n    <!--<CustomSetting SettingKey=\"DisableIterationPathAutoCreation\" SettingValue=\"\" />-->\r\n  \r\n   \r\n\r\n</pre>\r\n<p><strong>Figure: Enabling the WIT Bypass rules submission</strong></p>\r\n<p>Enabling this will allow us to seamlessly do the migration of Work Item data. If we did have links between Source Control and Work Items we can handle that by either migrating both Source and Work Items in the same session or we can add the relationships later.</p>\r\n<p>A final configuration would include some mapping or transformation of the Area Path so that we can find our merged work items later. The TFS Integration Platform will create any Area Paths that don’t already exist.</p>\r\n<pre class=\"brush: xml; ruler: true; highlight: [16,27,40,45,48,49,50,51];\">< ?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n\r\n  \r\n    \r\n  \r\n  \r\n  \r\n    \r\n      \r\n        \r\n          \r\n          \r\n          \r\n        \r\n        \r\n          \r\n        \r\n        \r\n      \r\n      \r\n        \r\n          \r\n          \r\n          \r\n        \r\n        \r\n          \r\n        \r\n        \r\n      \r\n    \r\n    \r\n      \r\n        \r\n        \r\n          \r\n            \r\n              \r\n              \r\n                \r\n              \r\n              \r\n                \r\n                  \r\n                    \r\n                  \r\n                  \r\n                    \r\n                      \r\n                      \r\n                    \r\n                  \r\n                \r\n              \r\n              \r\n            \r\n          \r\n          \r\n        \r\n        \r\n          \r\n            \r\n            \r\n          \r\n        \r\n      \r\n    \r\n    \r\n      \r\n      \r\n    \r\n    \r\n    \r\n    \r\n      \r\n    \r\n    \r\n      \r\n      \r\n    \r\n  \r\n\r\n</pre>\r\n<p><strong>Figure: Configuration for Merging Team Projects</strong></p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image7.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb7.png\" alt=\"image\" width=\"640\" height=\"360\" border=\"0\" /></a><br /><strong>Figure: Save your configuration ready to rumble</strong></p>\r\n<p>Once you have migrated your work items you will see some invalid data, but this is due to the Process Template consolidation that we have already completed. All you have to do is fix the visible data before you save and all is well…</p>\r\n<p><a href=\"http://blog.hinshelwood.com/files/2012/07/image8.png\"><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"image\" src=\"http://blog.hinshelwood.com/files/2012/07/image_thumb8.png\" alt=\"image\" width=\"640\" height=\"281\" border=\"0\" /></a><br /><strong>Figure: Some work items will be invalid</strong></p>\r\n<p>And that finishes of migrating your data…</p>\r\n<h3 class=\"label-conclusion\">Troubleshooting</h3>\r\n<p>There are a couple of errors and exceptions that while outside the norm were a common occurrence for our migration:</p>\r\n<ul>\r\n<li><a href=\"http://blog.nwcadence.com/tfs-integration-tools-issue-unable-to-find-a-unique-local-path/\" target=\"_blank\">TFS Integration Tools – Issue: “unable to find a unique local path”</a></li>\r\n<li><a href=\"http://blog.hinshelwood.com/tfs-integration-platform-issue-access-denied-to-program-files/\" target=\"_blank\">TFS Integration Tools - Issue: Access denied to Program Files</a></li>\r\n<li><a href=\"http://blog.hinshelwood.com/tfs-integration-tools-issue-error-occurred-during-the-code-review-of-change-group/\" target=\"_blank\">TFS Integration Tools – Issue: Error occurred during the code review of change group</a></li>\r\n<li><a href=\"http://blogs.msdn.com/b/willy-peter_schaub/archive/2012/07/04/tfs-integration-tools-issue-this-tool-requires-the-tfs-client-object-model.aspx\" target=\"_blank\">TFS Integration Tools – Issue: “This tool requires the TFS client object model”</a></li>\r\n<li><a href=\"http://blog.nwcadence.com/tfs-2012-issue-get-workspace-already-exists-connecting-with-vs-2008-or-vs-2010/\" target=\"_blank\">TFS 2012 Issue: Get Workspace already exists connecting with VS 2008 or VS 2010</a></li>\r\n</ul>\r\n<h3 class=\"icon-reference\">References</h3>\r\n<p>There were a number of references that I used as part of this engagement.</p>\r\n<ul>\r\n<li>BLOG: <a href=\"http://blogs.msdn.com/b/willy-peter_schaub/archive/2009/11/10/tfs-integration-platform-what-is-the-enablebypassruledatasubmission-in-the-configuration-file-question-answer-7.aspx\" target=\"_blank\">TFS Integration Platform – What is the EnableBypassRuleDataSubmission in the Configuration File? Question &amp; Answer 7</a></li>\r\n<li>MSDN: <a href=\"http://msdn.microsoft.com/en-us/library/bb386005.aspx\" target=\"_blank\">Destroy Command (Team Foundation Version Control)</a></li>\r\n<li>BLOG: <a href=\"http://blog.hinshelwood.com/upgrading-tfs-2010-to-tfs-2012-with-vss-migration-and-process-template-consolidation/\">Upgrading TFS 2010 to TFS 2012 with VSS Migration and Process Template consolidation</a></li>\r\n<li>CODEPLEX: <a href=\"http://tfsintegration.codeplex.com/\">http://tfsintegration.codeplex.com/</a></li>\r\n</ul>\r\n<h3 class=\"label-conclusion\">Conclusion</h3>\r\n<p>While it is difficult to migrate data or move data around in Team Foundation Server it is not insurmountable and mist issues can be solved if you can accept the trade-offs.</p>\r\n<ul>\r\n<li>Are you interested in consolidating to fewer Team Projects?</li>\r\n<li>Did you mistakenly create multiple Team Project Collections?</li>\r\n</ul>\r\n<p>If so then give us a call and we can help you fix it…</p>"
  - ''
  post_id: '6109'
  post_date: '2012-07-11 17:20:29'
  post_date_gmt: '2012-07-12 00:20:29'
  post_modified: '2014-05-16 13:32:33'
  post_modified_gmt: '2014-05-16 12:32:33'
  comment_status: open
  ping_status: open
  post_name: one-team-project-collection-to-rule-them-allconsolidating-team-projects
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: dsq_thread_id
    meta_value: '759685421'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1aBMNor
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _thumbnail_id
    meta_value: '11141'
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474891026;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:5702;}i:1;a:1:{s:2:"id";i:6202;}i:2;a:1:{s:2:"id";i:7149;}}}}
  - meta_key: _wpghs_github_path
    meta_value: >-
      _posts/2012-07-11-one-team-project-collection-to-rule-them-allconsolidating-team-projects.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '2114'
  comment:
  - comment_id: '1258'
    comment_author: Brian Baker
    comment_author_email: brian@holisticdeveloper.com
    comment_author_url: ''
    comment_author_IP: 66.192.178.58
    comment_date: '2012-07-12 16:37:00'
    comment_date_gmt: '2012-07-12 23:37:00'
    comment_content: >-
      Martin, could you elaborate on why this team decided to migrate from
      multiple team projects to a single team project?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '586156019'
  - comment_id: '1259'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 23.25.132.133
    comment_date: '2012-07-12 18:00:00'
    comment_date_gmt: '2012-07-13 01:00:00'
    comment_content: >-
      There are two main reasons:


      Logistics



      You can't "move" work items between team project collections and you cant
      even relate work items across that boundary. If you are ever going to need
      to have that then you can't use multiple collections. There is also no
      "moving" of work items between Team Projects within the same TPC, so
      having a single TP is also preferable.



      There are very few occurrences when I would recommend more than one Team
      Project, let alone more than one Collection.


      Reporting

      It is almost impossible to report consistently across team project
      collection as there are no distinct ID's that cross the TPC boundry. The
      Cube and Data Warehouse use unique [[TPC Guid]+[id]] values under the
      covers, but it can be a pain to create many of the reports that long
      running teams and organisations need.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1258'
    comment_user_id: '0'
  - comment_id: '1260'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 23.25.132.133
    comment_date: '2012-07-12 18:00:00'
    comment_date_gmt: '2012-07-13 01:00:00'
    comment_content: >-
      There are two main reasons:


      Logistics



      You can't "move" work items between team project collections and you cant
      even relate work items across that boundary. If you are ever going to need
      to have that then you can't use multiple collections. There is also no
      "moving" of work items between Team Projects within the same TPC, so
      having a single TP is also preferable.



      There are very few occurrences when I would recommend more than one Team
      Project, let alone more than one Collection.


      Reporting

      It is almost impossible to report consistently across team project
      collection as there are no distinct ID's that cross the TPC boundry. The
      Cube and Data Warehouse use unique [[TPC Guid]+[id]] values under the
      covers, but it can be a pain to create many of the reports that long
      running teams and organisations need.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1258'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '586156019'
    - meta_key: dsq_post_id
      meta_value: '586221595'
  - comment_id: '1261'
    comment_author: Brian Baker
    comment_author_email: brian@holisticdeveloper.com
    comment_author_url: ''
    comment_author_IP: 67.170.83.186
    comment_date: '2012-07-13 04:33:00'
    comment_date_gmt: '2012-07-13 11:33:00'
    comment_content: >-
      The single TPC makes perfect sense. Wondering about the single Team
      Project though... and how usable it will be with the new agile features
      (product backlog and scrum board). We have multiple products on different
      release cycles, but some projects require doing work in several products
      as part of a single release. We also have two teams working on parallel
      releases of the same product. So it would be nice to have a little more
      flexibility in defining what the "product backlog" is for a given team...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1260'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '586221595'
    - meta_key: dsq_post_id
      meta_value: '586787785'
  - comment_id: '1262'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 50.135.56.181
    comment_date: '2012-07-14 09:41:00'
    comment_date_gmt: '2012-07-14 16:41:00'
    comment_content: >-
      Actually it is eminently usable as we are splitting up the work by team
      and not by project or product. As organisation move towards agile they
      discover that the only way of managing the work that needs to be done and
      remove the loss of time that context switching exhibits is to follow these
      rules at a minimum:


      1) A team works from one and only one ordered list of work

      2) An ordered list of work can have more than one team working from it



      We can still represent backlogs for Products or Projects, or even
      Customers based on the data in fields. This gives us the working rigour
      for our teams and a marketing flexibility of representation.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1261'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '586787785'
    - meta_key: dsq_post_id
      meta_value: '587855871'
  - comment_id: '1263'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 50.135.56.181
    comment_date: '2012-07-14 21:01:00'
    comment_date_gmt: '2012-07-15 04:01:00'
    comment_content: >-
      I tried to address your question a little more fully with a post
      http://blog.hinshelwood.com/one-team-project/
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1261'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '586787785'
    - meta_key: dsq_post_id
      meta_value: '588286676'
  - comment_id: '1264'
    comment_author: >-
      Visual Studio ALM with Team Foundation Server, Visual Studio &amp; Scrum |
      Migrating data from FogBugz to TFS 2012 using the TFS Integration Platform
    comment_author_email: ''
    comment_author_url: >-
      http://blog.hinshelwood.com/migrating-data-from-fogbugz-to-tfs-2012-using-the-tfs-integration-platform/
    comment_author_IP: 184.168.230.128
    comment_date: '2012-07-16 17:56:40'
    comment_date_gmt: '2012-07-17 00:56:40'
    comment_content: >-
      [...] Part 2: One Team Project Collection to rule them all–Consolidating
      Team Projects [...]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:13:"1342486600.76";s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:13:"1342486796.51";s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '1265'
    comment_author: cromwellryan
    comment_author_email: cromwellryan@hotmail.com
    comment_author_url: ''
    comment_author_IP: 71.64.159.110
    comment_date: '2012-07-17 20:30:00'
    comment_date_gmt: '2012-07-18 03:30:00'
    comment_content: >-
      Teams in TFS 2012 make a single TP much more viable a choice.  I would
      rarely have recommended a single TP in the past.  I'm much more likely to
      do so in 2012.  



      The dilemma that remains is the inability for teams to modify their
      process in isolation.  Every team must follow and use the same process
      &amp; process customizations.  For example, if you are scoring PBIs across
      a few categories (strategic, regulatory, new business, retention, cost
      reduction, etc) as a means of ordering the backlog, every team must accept
      the same categories.  



      This often leads to least common denominator or everyone is a little
      pissed off syndrome.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1261'
    comment_user_id: '0'
  - comment_id: '1266'
    comment_author: cromwellryan
    comment_author_email: cromwellryan@hotmail.com
    comment_author_url: ''
    comment_author_IP: 71.64.159.110
    comment_date: '2012-07-17 20:30:00'
    comment_date_gmt: '2012-07-18 03:30:00'
    comment_content: >-
      Teams in TFS 2012 make a single TP much more viable a choice.  I would
      rarely have recommended a single TP in the past.  I'm much more likely to
      do so in 2012.  



      The dilemma that remains is the inability for teams to modify their
      process in isolation.  Every team must follow and use the same process
      &amp; process customizations.  For example, if you are scoring PBIs across
      a few categories (strategic, regulatory, new business, retention, cost
      reduction, etc) as a means of ordering the backlog, every team must accept
      the same categories.  



      This often leads to least common denominator or everyone is a little
      pissed off syndrome.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1261'
    comment_user_id: '0'
  - comment_id: '1267'
    comment_author: cromwellryan
    comment_author_email: cromwellryan@hotmail.com
    comment_author_url: ''
    comment_author_IP: 71.64.159.110
    comment_date: '2012-07-17 20:30:00'
    comment_date_gmt: '2012-07-18 03:30:00'
    comment_content: >-
      Teams in TFS 2012 make a single TP much more viable a choice.  I would
      rarely have recommended a single TP in the past.  I'm much more likely to
      do so in 2012.  



      The dilemma that remains is the inability for teams to modify their
      process in isolation.  Every team must follow and use the same process
      &amp; process customizations.  For example, if you are scoring PBIs across
      a few categories (strategic, regulatory, new business, retention, cost
      reduction, etc) as a means of ordering the backlog, every team must accept
      the same categories.  



      This often leads to least common denominator or everyone is a little
      pissed off syndrome.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1261'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '586787785'
    - meta_key: dsq_post_id
      meta_value: '590744592'
  - comment_id: '1268'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 50.135.56.181
    comment_date: '2012-07-18 07:54:00'
    comment_date_gmt: '2012-07-18 14:54:00'
    comment_content: >-
      Thanks for commenting Ryan :)


      You can accommodate many options for teams in a single process template
      while still being able to retain the ability to report across them. If you
      have teams doing very different things then I would also recommend more
      than one team project, or a consolidation and agreement on a minimum
      process ;)


      http://blog.hinshelwood.com/one-team-project/
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1267'
    comment_user_id: '0'
  - comment_id: '1269'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 50.135.56.181
    comment_date: '2012-07-18 07:54:00'
    comment_date_gmt: '2012-07-18 14:54:00'
    comment_content: >-
      Thanks for commenting Ryan :)


      You can accommodate many options for teams in a single process template
      while still being able to retain the ability to report across them. If you
      have teams doing very different things then I would also recommend more
      than one team project, or a consolidation and agreement on a minimum
      process ;)


      http://blog.hinshelwood.com/one-team-project/
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1267'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '590744592'
    - meta_key: dsq_post_id
      meta_value: '591066676'
  - comment_id: '1270'
    comment_author: Brian Baker
    comment_author_email: brian@holisticdeveloper.com
    comment_author_url: ''
    comment_author_IP: 66.192.178.58
    comment_date: '2012-07-30 12:12:00'
    comment_date_gmt: '2012-07-30 19:12:00'
    comment_content: >-
      Thanks Martin, the new post is very helpful. It will take me a little time
      to digest it and think over what our strategy should be...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1263'
    comment_user_id: '0'
  - comment_id: '1271'
    comment_author: Brian Baker
    comment_author_email: brian@holisticdeveloper.com
    comment_author_url: ''
    comment_author_IP: 66.192.178.58
    comment_date: '2012-07-30 12:12:00'
    comment_date_gmt: '2012-07-30 19:12:00'
    comment_content: >-
      Thanks Martin, the new post is very helpful. It will take me a little time
      to digest it and think over what our strategy should be...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1263'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '588286676'
    - meta_key: dsq_post_id
      meta_value: '603317492'
  - comment_id: '1272'
    comment_author: Malin Engström
    comment_author_email: malinsofia@gmail.com
    comment_author_url: ''
    comment_author_IP: 129.178.88.84
    comment_date: '2012-08-23 07:40:00'
    comment_date_gmt: '2012-08-23 14:40:00'
    comment_content: >-
      Hi Martin
       
      I have been thinking about migrating our 5 team projects into one for some
      time now. I have tried to find information how to do this for TFS 2010 –
      is this new functionality in the 2012 release?
       
      My other question is, from your experience, at what level should branches
      be implemented to be the most effective? Both for the Configuration
      Manager and the developers?
       
      I can see that it can be done in 2 ways.
       
      Alternative 1:

      $/
         /App1
            /Features
            /Main
            /Releases
         /App2
            /Features
            /Main
            /Releases
       
      This alternative adds administrations to create branches for all
      applications, especially when having a complex branching strategy. But I
      guess that it is easier for my team to get hold on.
       
       
      Alternative 2:

      $/
         /Features
         /Main
             /App1
             /App2
         /Releases
       
      With this alternative you only need to create a branch once for all
      applications. But on the other hand you branch all applications even
      though no changes will be made, or at least it looks that way in the tool.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '626731167'
  - comment_id: '1273'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://blog.hinshelwood.com/
    comment_author_IP: 131.107.174.20
    comment_date: '2012-08-23 07:49:00'
    comment_date_gmt: '2012-08-23 14:49:00'
    comment_content: >-
      There is nothing new in 2012 for this except that the new "Team" features
      make it more relevant. I am using the TFS Integration Tools to fold all of
      the Team Projects into a single Team Project.


      Alternative 1 make a lot more sense, although I am saying that blind, in
      all circumstances that I have so far encountered.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1272'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '626731167'
    - meta_key: dsq_post_id
      meta_value: '626738833'
  - comment_id: '1274'
    comment_author: >-
      Upgrading TFS 2010 to TFS 2012 with VSS Migration and Process Template
      consolidation - Visual Studio ALM from Martin Hinshelwood
    comment_author_email: ''
    comment_author_url: >-
      http://blog.hinshelwood.com/upgrading-tfs-2010-to-tfs-2012-with-vss-migration-and-process-template-consolidation/
    comment_author_IP: 96.126.104.162
    comment_date: '2012-09-19 22:54:50'
    comment_date_gmt: '2012-09-20 05:54:50'
    comment_content: >-
      [...] Part 2: One Team Project Collection to rule them all–Consolidating
      Team Projects [...]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:12:"1348120490.9";s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";s:13:"1348120672.45";s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '1275'
    comment_author: Anirban Mukherjee
    comment_author_email: anirbanm@msn.com
    comment_author_url: http://www.facebook.com/anirban.mukherjee.520
    comment_author_IP: 24.189.204.59
    comment_date: '2013-05-02 18:23:00'
    comment_date_gmt: '2013-05-02 17:23:00'
    comment_content: >-
      Martin, I have been following your posts on TFS 2012/ALM capabilities
      recently, keep up the great work! They are very practical and addresses a
      lot of scenarios I am facing while implementing TFS 2012 in a large
      financial services company, which has several (8-9) business units each
      having 6-7 active in-house software projects (didn't mean Team Projects).
      I am leaning towards a Single Collection model wherein each BU will have
      their own Team Project. Within each Team Project, there will be several
      Teams working on respective software projects (targeted to a specific
      Product/Application). I suppose each Team can be assigned to an Area and
      apply security attributes at that level to isolate access of artifacts
      (WI, Code, Queries) between the Teams. Not sure if this is making sense?

      Moreover, the aspect that I am a bit clueless is - How do I achieve the
      ability to restore a single Team Project within a Collection without
      having to restore (overwriting changes they've made) the other Team
      Projects in the Collection? I understand TFS Integration Tool can help,
      but it comes with it's set of limitations.

      I don't want to deprive the other Team Projects of the changes they have
      made since the last SQL DB backup of the Collection?
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '882457326'
  - comment_id: '1773'
    comment_author: Brian Baker
    comment_author_email: brian@holisticdeveloper.com
    comment_author_url: ''
    comment_author_IP: 76.230.77.148
    comment_date: '2012-08-23 16:04:00'
    comment_date_gmt: '2012-08-23 16:04:00'
    comment_content: >-
      If App1 and App2 are related, e.g. part of the same suite or they ship
      together, then I would choose alternative 2. If you haven't yet read it, I
      would suggest taking a look at the ALM Ranger guide on branching: 

      http://vsarbranchingguide.codeplex.com/.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '1272'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '626731167'
    - meta_key: dsq_post_id
      meta_value: '626798728'
  - comment_id: '2768'
    comment_author: >-
      Merge Team Projects into one in TFS - naked ALM - Experts in ALM, TFS
      &amp; lean-agile with Scrum
    comment_author_email: ''
    comment_author_url: http://nkdagility.com/merge-many-team-projects-one-tfs/
    comment_author_IP: 97.107.139.31
    comment_date: '2014-07-30 15:10:08'
    comment_date_gmt: '2014-07-30 14:10:08'
    comment_content: >-
      [&#8230;] Or the second, or even the third. But if you persevere you can
      do many migrations quickly. I have migrated 20-30 small projects into one
      in only a few days, however I was luckily with the low complexity and
      small [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1406729408.391224;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1407599433.77148;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
