{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in software development, focusing on technical aspects and tools rather than Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in the application lifecycle, without a clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 20,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on automated testing within software development, discussing its importance and various types of tests. While it touches on quality assurance and efficiency, it does not explicitly address Evidence-Based Management principles or metrics. The discussion lacks a clear connection to data-informed decision-making or the specific key topics outlined in the EBM category.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-14T17:01:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content discusses automated testing and its integration with tools like Visual Studio and Team Foundation Server, which touches on configuration aspects. However, the primary focus is on the importance and types of automated testing rather than detailed installation or configuration procedures. While there are mentions of integration and some configuration, the depth and direct focus on installation and configuration processes are limited.",
    "level": "Tertiary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-14T17:01:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on its implementation and benefits rather than strategies for market adaptability.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-14T17:01:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on automated testing tools and practices without addressing the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses automated testing, which is a crucial aspect of the DevOps philosophy, particularly in terms of automation and continuous delivery. It highlights the importance of integrating automated testing into the development lifecycle to enhance software quality and streamline processes, aligning well with DevOps principles. However, while it touches on relevant themes, it does not deeply explore the broader cultural and collaborative aspects of DevOps, which slightly limits its overall alignment.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-14T17:01:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing practices and tools, which are directly related to software development methodologies.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-14T17:01:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementations and tools rather than decision-making processes in uncertain environments.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses automated testing within the context of a modern application lifecycle, highlighting its importance in maintaining quality and reducing cycle time. While it does touch on aspects of flow efficiency, such as the need to optimise testing processes to enhance throughput, the primary focus is on automated testing techniques rather than a comprehensive exploration of flow efficiency principles. The discussion includes mentions of cycle time and the impact of testing on delivery speed, which aligns with flow efficiency concepts, but lacks depth in exploring broader strategies for optimising work in progress or eliminating bottlenecks in the value stream.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-14T17:01:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing broader organisational agility or adaptability.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on automated testing in software development rather than discussing principles or practices of business agility.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools, with minimal focus on metrics or learning principles.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-14T17:01:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses automated testing, a key engineering practice that enhances software quality and delivery speed. It directly addresses the importance of automated testing in modern application lifecycles, aligning well with the principles of Technical Excellence. The depth of discussion includes various types of tests (unit, integration, UI), their integration with tools like Visual Studio and Team Foundation Server, and the implications of technical debt, showcasing a thorough understanding of the topic. Overall, the content is highly relevant and detailed, justifying a high confidence score.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-14T17:01:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without reference to complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-14T17:01:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing methodologies and tools, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content extensively discusses the role of automated testing within the software delivery lifecycle, highlighting its importance in ensuring quality and efficiency in product delivery. It aligns well with key topics such as the integration of testing in the development process, the impact of automation on delivery speed, and the necessity of maintaining quality standards. The depth of discussion on various testing methodologies and their implications for product delivery further supports a high confidence score.",
    "level": "Primary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-14T17:01:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not align with the core principles of Value Stream Management.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of automated testing in delivering high-quality software efficiently, which aligns with the principles of iterative development and continuous delivery. It highlights how automation reduces the effort required to produce tested software, thus enhancing customer value. However, while it touches on value delivery, the focus is more on technical implementation details and specific tools rather than broader strategies or methodologies within Agile or DevOps frameworks.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses automated testing within the context of a modern application lifecycle, with specific references to integration with Visual Studio and Team Foundation Server, which are part of Azure DevOps. However, the primary focus is on automated testing practices rather than Azure DevOps itself. While there are mentions of Azure DevOps tools, the overall discussion does not deeply explore Azure DevOps functionalities or best practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-14T17:01:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-14T17:01:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and techniques rather than Systems Thinking principles or organisational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-03-22T08:05:32",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on automated testing within the software development lifecycle, discussing its importance and various types of tests. While it touches on aspects of agile methodologies, such as iterative delivery and quality assurance, it does not explicitly address the Agile Product Operating Model or its core principles. The discussion lacks depth in relation to product management practices and does not explore the transition from project to product ethos, which are central to the APOM framework.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-14T17:01:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and techniques rather than organisational agility or adaptability.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 30,
    "final_score": 78.0,
    "reasoning": "The content discusses automated testing within the context of a modern application lifecycle, highlighting its importance in delivering quality software efficiently. It touches on various testing types and their integration into the development process, which aligns with the application lifecycle stages. However, while it mentions aspects of application lifecycle management, it primarily focuses on automated testing rather than providing a comprehensive view of the entire lifecycle or governance practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Daily Scrum or related topics.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration in the software development lifecycle, without a clear focus on the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the importance of automated testing within the software development lifecycle, highlighting best practices, the role of testing in ensuring code quality, and the integration of testing tools. It aligns closely with the principles of software craftsmanship and engineering excellence, providing detailed insights into various testing methodologies and their impact on software quality. The depth of discussion on technical debt and the necessity of maintaining automated tests further reinforces its relevance to the category.",
    "level": "Primary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementation and tools rather than customer needs or product feature definition.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses automated testing extensively, which is a crucial aspect of Continuous Delivery. It highlights the importance of automation in maintaining software quality and reducing cycle times, aligning with the principles of Continuous Delivery. However, it does not explicitly mention Continuous Delivery as a concept or its broader implications, which limits its direct relevance. The depth of discussion on automated testing is substantial, but the lack of explicit focus on Continuous Delivery as a primary topic affects the overall confidence score.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-14T17:02:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing long-term objectives or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration in the software development lifecycle, without a clear focus on Lead Time as defined.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-14T17:02:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools without addressing organisational culture or its impact on Agile methodologies.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not align with the principles of portfolio management.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-14T17:02:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Agile Planning principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Value Stream Mapping or related Lean principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on customer feedback integration or feedback loops.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content extensively discusses the role of automated testing in enhancing operational efficiency within the software development lifecycle. It directly addresses the need for automation to reduce manual testing efforts, improve delivery speed, and maintain quality, which aligns well with the core themes of operational practices. The depth of discussion includes various types of automated tests, integration with tools, and the implications of technical debt, providing a comprehensive view of how automation can streamline processes and improve overall performance.",
    "level": "Primary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration in software development, with no clear focus on Scrum Team dynamics or roles.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-14T17:02:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools without addressing Agile principles or values.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-14T17:02:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools within software development, without a clear focus on strategic approaches in Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on testing methodologies rather than validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-14T17:02:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in software development, which is not directly related to Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-14T17:02:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools, with no focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 38,
    "ai_depth": 36,
    "non_ai_confidence": 20,
    "final_score": 92.0,
    "reasoning": "The content extensively discusses automated testing, highlighting its importance in modern application lifecycles, the types of automated tests, and the integration of testing tools. It provides detailed insights into unit and UI testing, as well as the challenges and solutions associated with maintaining automated tests. The discussion aligns closely with the core themes of the category, demonstrating a strong focus on automated testing principles and practices.",
    "level": "Primary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in software development, focusing on tools and methodologies rather than team dynamics or performance.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 42.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses automated testing in the context of delivering quality software, which is relevant to the Increment concept in Agile. However, it primarily focuses on testing practices rather than the broader implications of delivering a potentially shippable product increment. While it mentions the importance of delivering value and maintaining quality, it lacks a comprehensive exploration of the Increment's role within Agile frameworks, which limits its alignment with the category.",
    "level": "Tertiary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in a modern application lifecycle without a clear focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 38,
    "ai_depth": 36,
    "non_ai_confidence": 20,
    "final_score": 92.0,
    "reasoning": "The content extensively discusses automated testing within the context of the software development lifecycle, highlighting its importance for delivering quality software efficiently. It covers various types of automated tests, their integration into development tools, and the necessity of maintaining a robust testing infrastructure. The depth of discussion on unit testing, UI testing, and the implications of automated testing practices aligns closely with key topics in software development, particularly in relation to CI/CD and quality assurance. The explicit focus on methodologies and practices for improving software quality through automation further solidifies its relevance to the category.",
    "level": "Primary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools, with no clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in software development, with no clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development rather than version control practices.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-14T17:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on empirical process control principles or Agile methodologies.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and its integration in software development, with no clear focus on Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-14T17:02:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with only brief mentions of Team Foundation Server, which is not central to the topic of Azure Boards.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on collaboration tools or their impact on Agile team dynamics.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-14T17:03:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing practices and tools, which are not directly related to organisational change processes.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-14T17:03:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, which is not directly related to Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses automated testing within the context of a modern application lifecycle, which indirectly supports the concept of frequent releases by emphasising the need for quality assurance and rapid delivery. However, it does not explicitly focus on frequent releases as a primary topic, nor does it delve deeply into the principles of Continuous Delivery or Continuous Deployment. The discussion is more centred on testing practices rather than the release process itself.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementation and methodologies rather than customer satisfaction or experience.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on psychological safety or related themes.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses automated testing within the context of modern application lifecycles, highlighting its critical role in ensuring software quality and efficiency. It directly addresses best practices in testing methodologies, the importance of automation, and the management of technical debt, all of which align closely with the principles of engineering excellence. The depth of discussion is significant, providing detailed insights into various types of automated tests and their integration into development processes, thus reinforcing the focus on high standards in software craftsmanship.",
    "level": "Primary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-14T17:03:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-14T17:03:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical aspects rather than organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses automated testing within the context of modern application lifecycles, highlighting practical problem-solving strategies and the importance of automation in Agile environments. It addresses real-world applications of testing principles, emphasising the need for adaptability and efficiency. However, while it touches on relevant themes, the discussion lacks depth in terms of specific Agile or Scrum methodologies and does not provide extensive case studies or evidence-based practices, which limits its alignment with the category.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-14T17:03:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools in software development, without a clear focus on innovation capabilities or Evidence-Based Management.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-14T17:03:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing processes and tools, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-14T17:03:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on its importance and integration within modern application lifecycles, rather than Lean principles or waste minimisation.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 20,
    "final_score": 92.0,
    "reasoning": "The content extensively discusses the importance and implementation of automated testing within modern application lifecycles, aligning closely with the principles and practices of test automation. It covers various types of automated tests, integration with development tools, and the necessity of maintaining a robust testing infrastructure, which are all key topics in the Test Automation category. The depth of discussion is significant, providing detailed insights into unit testing, UI testing, and the integration of automated tests into CI/CD workflows, thus justifying a high confidence score.",
    "level": "Primary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-14T17:03:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not align with the principles and practices of entrepreneurship.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the role of automated testing in delivering high-quality, functional software, which is a core aspect of working software. It highlights the importance of automated testing in maintaining quality and reducing cycle time, aligning well with the category's focus on delivering value to customers. The depth of discussion on various testing methodologies and their integration into the software development lifecycle further supports its relevance to the category.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses automated testing within the context of a modern application lifecycle, which is a crucial aspect of Continuous Integration. It highlights the importance of automated testing for maintaining code quality and reducing cycle time, aligning with CI principles. However, while it touches on integration with tools like Visual Studio and Team Foundation Server, it lacks a comprehensive exploration of CI practices, tools, and the broader implications of CI on team collaboration and productivity. Therefore, while it is relevant, it does not fully meet the criteria for a primary focus on Continuous Integration.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-14T17:03:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-14T17:03:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools in software development, with no clear focus on Agile leadership or related themes.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-14T17:03:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementations and tools rather than on sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not directly relate to Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without focusing on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on its importance, types, and integration, rather than structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-14T17:03:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and practices rather than Lean principles such as waste reduction and value maximisation.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration in the software development lifecycle, without a clear focus on release management processes.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration in software development, with no clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content discusses automated testing and its role in maintaining an acceptable cycle time, but it does not delve deeply into the concept of cycle time itself. While it mentions the importance of keeping cycle time at an acceptable level, the primary focus is on automated testing rather than a comprehensive exploration of cycle time as a metric. The discussion lacks detailed strategies for measuring or reducing cycle time, which diminishes its alignment with the category.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses automated testing within the context of a modern application lifecycle, mentioning integration with Visual Studio and Team Foundation Server, which are related to Azure DevOps. However, it does not explicitly focus on Azure Pipelines or CI/CD practices, making it a secondary topic rather than a primary focus. The depth of discussion on Azure Pipelines specifically is minimal, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-14T17:03:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools, with no clear focus on deployment frequency or its optimisation.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on change management principles or practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and techniques rather than team collaboration or dynamics.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses automated testing within the context of modern application lifecycles, which indirectly relates to digital transformation by highlighting the importance of automation in enhancing software delivery and quality. However, it lacks a direct focus on broader digital transformation strategies, organisational culture, or the integration of digital technologies across business processes. The discussion is primarily technical and does not delve into the strategic implications of digital transformation.",
    "level": "Tertiary"
  },
  "Minimum Viable Product": {
    "category": "MVP",
    "calculated_at": "2025-02-14T17:04:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Minimum Viable Product concepts or related strategies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-14T17:04:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development rather than system configuration processes or methodologies.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing techniques and tools, which are technical implementation details rather than product strategy.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on technical leadership principles or practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-14T17:04:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and its integration in software development, with no focus on estimation techniques or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": 30,
    "final_score": 62.0,
    "reasoning": "The content discusses automated testing extensively, which is a component of Test First Development, but it does not explicitly focus on the principles of defining success criteria before implementation or the specific practices of Test-Driven Development (TDD) or Acceptance Test-Driven Development (ATDD). While it mentions the importance of automated testing in the development lifecycle and touches on unit and UI testing, it lacks a thorough exploration of how these practices align with Test First Development principles. Therefore, while there is a significant connection, it does not fully meet the criteria for a primary focus on Test First Development.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 50,
    "final_score": 62.0,
    "reasoning": "The content discusses automated testing within the context of software development, with specific references to integration with Visual Studio and Team Foundation Server, both of which are Windows-based tools. However, the primary focus is on automated testing methodologies rather than Windows operating system specifics. While there are mentions of Windows in relation to UI testing tools, the overall discussion does not centre on Windows as an operating system, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-14T17:04:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and their integration within the software development lifecycle, without a focus on deployment strategies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-14T17:04:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing large scale Agile principles or practices.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and technical implementation details without addressing team dynamics or motivation.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on remote working practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-14T17:04:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on continuous learning principles or practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-14T17:04:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration within the software development lifecycle, rather than focusing on troubleshooting specific technical issues.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-14T17:04:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration into the software development lifecycle, without a clear focus on hypothesis-driven experimentation or validating assumptions.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 5.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 20,
    "final_score": 5.0,
    "reasoning": "The content primarily focuses on automated testing within the software development lifecycle, with no direct discussion of the Scrum Master role or its responsibilities. While it touches on aspects of team dynamics and quality assurance, it does not align with the core themes of the Scrum Master category, such as coaching, facilitating, or promoting agile principles. The mention of Ken Schwaber is the only indirect reference to Scrum, but it does not substantively engage with the role of a Scrum Master.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-14T17:04:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration in software development, with no clear focus on transparency or related themes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no focus on working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-14T17:04:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 10,
    "final_score": 92.0,
    "reasoning": "The content extensively discusses automated testing, a key aspect of engineering practices, particularly in the context of Agile development. It highlights the importance of automation in maintaining quality and efficiency in software delivery, aligning well with the principles of clean code and CI/CD. The depth of discussion on various types of tests (unit, integration, UI) and their integration into development workflows demonstrates a strong focus on engineering methodologies. The content is rich in detail, providing practical insights and tools, which further supports its classification under Engineering Practices.",
    "level": "Primary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 75.0,
    "ai_mentions": 60.0,
    "ai_alignment": 80.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 20,
    "final_score": 75.0,
    "reasoning": "The content discusses the importance of automated testing in relation to managing technical debt, particularly highlighting how neglecting technical debt can hinder the effectiveness of testing infrastructure. It explicitly mentions the need to address technical debt to improve software quality and development velocity. The discussion aligns well with the core themes of technical debt, such as the trade-offs between short-term gains and long-term maintainability. However, while it provides substantial detail on automated testing, the focus on technical debt is somewhat secondary to the broader topic of testing methodologies.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-14T17:04:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Sprint Review or related Scrum events.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools, with no clear focus on product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-14T17:04:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in the context of software development, without a clear focus on Agile frameworks or their principles.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-14T17:04:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools without a clear focus on Agile strategy or methodologies.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 45.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 35.0,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its integration with Team Foundation Server (TFS), which is related to Azure Repos. However, the primary focus is on automated testing rather than Azure Repos itself. While there are mentions of TFS and its connection to testing, the overall discussion does not delve deeply into Azure Repos functionalities, best practices, or source control management, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-14T17:04:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on forecasting methodologies or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on testing methodologies and tools rather than Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-14T17:04:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a focus on identifying patterns or shifts in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-14T17:04:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on accountability or team dynamics.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses automated testing and its role in maintaining cycle time and quality, which indirectly relates to throughput. However, it lacks a direct focus on measuring or optimising throughput as defined in Agile and DevOps contexts. The discussion is more centred on testing practices rather than the flow of work or completion rates.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses automated testing extensively, including unit tests, integration tests, and UI testing, but it does not explicitly mention Test Driven Development (TDD) or the Red-Green-Refactor cycle. While it touches on the importance of unit testing, which is a component of TDD, the primary focus is on automated testing in general rather than the specific principles and practices of TDD. Therefore, the confidence score reflects a moderate alignment with the TDD category.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 3.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on automated testing within software development, discussing its importance, types, and integration with tools. While it touches on aspects of team dynamics and quality assurance, it lacks a direct focus on collaboration, decision-making, or value delivery as defined in the Social Technologies category. The discussion is more technical and does not delve into the social frameworks or methodologies that promote collaboration or collective intelligence.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T11:49:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and technical implementation details, with no clear focus on leadership practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in the software development lifecycle, without a clear focus on Internal Developer Platforms or their role in streamlining development processes.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:22:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 50,
    "final_score": 25.0,
    "reasoning": "The content primarily focuses on automated testing within a modern application lifecycle, which is not directly related to Scrum principles or practices. While it briefly touches on the importance of delivering working software and mentions team dynamics in the context of development teams, it lacks explicit discussions on Scrum roles, events, or artifacts. The depth of discussion on automated testing is significant, but it does not align closely with the core themes of Scrum, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses automated testing extensively, which is a key component of the Shift-Left Strategy. It highlights the importance of integrating testing early in the software development lifecycle to ensure quality and reduce cycle time. However, while it aligns with the principles of the Shift-Left Strategy, it does not explicitly mention the broader context of security and compliance integration, nor does it provide detailed case studies or metrics for measuring impact, which limits its depth of discussion on the topic.",
    "level": "Secondary"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses automated testing and its role in enhancing software quality and development processes, which aligns with the principles of Continuous Improvement. However, it primarily focuses on the technical aspects of testing rather than a broader discussion on Continuous Improvement practices, making it a secondary topic rather than a primary focus.",
    "level": "Ignored"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on automated testing within the software development lifecycle, discussing its importance and various types of tests. While it touches on the need for quality and efficiency, it does not explicitly address the concept of Common Goals or how they relate to Agile and DevOps frameworks. The discussion lacks depth in connecting individual contributions to overarching strategic objectives, which is essential for the Common Goals category.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses automated testing and its importance in the software development lifecycle, which indirectly relates to competence through the emphasis on quality and the need for continuous improvement in testing practices. However, it lacks a direct focus on the broader themes of competence, such as continuous learning and skill development, and does not delve deeply into strategies for fostering a culture of competence. The primary focus is on technical aspects of automated testing rather than on the professional development of individuals or teams.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T15:55:26",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on automated testing within software development, discussing its importance and various tools. It does not explicitly address Agentic Agility or its principles, nor does it explore the intentional shaping of outcomes through autonomy and adaptability. While there are elements of agility in the context of software development, they do not align with the specific themes of Agentic Agility, such as the distinction between human and AI capabilities or the role of intent and accountability.",
    "level": "Ignored"
  }
}
