{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-14T17:00:55",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses automated testing in software development, focusing on technical aspects and tools rather than Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T15:14:37",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses automated testing within the context of a modern application lifecycle, highlighting specific tools and methodologies such as unit testing, UI testing, and integration with Visual Studio and Team Foundation Server. It provides practical insights into the implementation of these techniques, making it highly relevant to the category of Practical Techniques and Tooling. The depth of discussion on various testing types and their integration into development processes further supports a high confidence score.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-14T17:00:57",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in the application lifecycle, without a clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-14T17:00:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated testing and its importance in maintaining code quality, which relates to the complexities of software development. However, the primary focus is on testing practices rather than a deep exploration of code quality principles or complexity theory.",
    "level": "Tertiary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-14T17:01:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on automated testing techniques and tools, with little emphasis on discovery or learning processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses automated testing, which is a form of automation relevant to Agile practices, but it does not explicitly address AI or its integration within Agile frameworks.",
    "level": "Tertiary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-14T17:01:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the integration of automated testing with Visual Studio and Team Foundation Server, which relates to configuration aspects. However, the primary focus is on the importance and types of automated testing rather than detailed installation or configuration procedures.",
    "level": "Tertiary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-14T17:01:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-14T17:01:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on its implementation and benefits rather than strategies for market adaptability.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-14T17:01:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on automated testing tools and practices without addressing the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-14T17:01:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementations rather than organisational resilience or change management.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-07T15:14:33",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses automated testing, which is a crucial aspect of DevOps practices, particularly in the context of Continuous Integration and Continuous Delivery. However, while it touches on the importance of automation and integration within the software development lifecycle, it lacks a broader discussion on the cultural shifts, collaboration, and specific DevOps tools that are essential for a comprehensive understanding of the DevOps category. The focus is primarily on testing rather than the holistic integration of development and operations.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-14T17:01:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing practices and tools, which are directly related to software development methodologies.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-14T17:01:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementations and tools rather than decision-making processes in uncertain environments.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-14T17:01:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in maintaining cycle time and quality, which relates to flow efficiency as it impacts throughput. However, the primary focus is on automated testing rather than flow efficiency principles.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-14T17:01:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing tools and methodologies without a clear focus on human behaviour or team dynamics.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-14T17:01:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing broader organisational agility or adaptability.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-14T17:01:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on automated testing in software development rather than discussing principles or practices of business agility.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-14T17:01:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing practices and tools, with minimal focus on metrics or learning principles.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-14T17:01:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-10T12:52:44",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses automated testing, a key engineering practice that enhances software quality and delivery speed. It directly addresses the importance of automated testing in modern application lifecycles, aligning well with the principles of Technical Excellence. The depth of discussion includes various types of tests (unit, integration, UI), their integration with tools like Visual Studio and Team Foundation Server, and the implications of technical debt, showcasing a thorough understanding of the topic. Overall, the content is highly relevant and detailed, justifying a high confidence score.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-14T17:01:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without reference to complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-14T17:01:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing methodologies and tools, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-10T14:52:55",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content extensively discusses the role of automated testing within the software delivery lifecycle, highlighting its importance in ensuring quality and efficiency in product delivery. It aligns well with key topics such as the integration of testing in the development process, the impact of automation on delivery speed, and the necessity of maintaining quality standards. The depth of discussion on various testing methodologies and their implications for product delivery further supports a high confidence score.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-14T17:01:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-14T17:01:37",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not align with the core principles of Value Stream Management.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-14T17:01:39",
    "ai_confidence": 70,
    "non_ai_confidence": 20,
    "final_score": 65.0,
    "reasoning": "The content discusses various tools and solutions for automated testing, which aligns with the category's focus on products relevant to Agile and DevOps practices. However, the primary focus is on the concept of automated testing rather than specific product reviews or analyses.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its importance in delivering quality software iteratively, which aligns with value delivery principles, but it primarily focuses on technical implementation details.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-14T17:01:42",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses automated testing within the context of a modern application lifecycle, with a significant focus on integration with Visual Studio and Team Foundation Server, which are part of Azure DevOps services.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-14T17:01:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-14T17:01:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and techniques rather than Systems Thinking principles or organisational dynamics.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-14T17:01:46",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-14T17:01:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, without a clear focus on Agile principles or the Agile Product Operating Model.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-14T17:01:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and techniques rather than organisational agility or adaptability.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-14T17:01:49",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses automated testing techniques and tools without focusing on industry news, updates, or reviews related to Agile, DevOps, or technology trends.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-14T17:01:51",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 75.0,
    "reasoning": "The content primarily discusses the role of automated testing within the context of the application lifecycle, highlighting its importance in ensuring quality and efficiency throughout the development and deployment stages.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-14T17:01:54",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Daily Scrum or related topics.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-14T17:01:59",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and its integration in the software development lifecycle, without a clear focus on the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-14T17:02:00",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of automated testing within the software development lifecycle, focusing on best practices, techniques for improving code quality, and the integration of testing tools, which aligns well with the principles of software craftsmanship.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-14T17:02:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementation and tools rather than customer needs or product feature definition.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing, which is a significant aspect of Continuous Delivery, but it primarily focuses on the testing methodologies and tools rather than the broader principles and practices of Continuous Delivery itself.",
    "level": "Tertiary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-14T17:02:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing long-term objectives or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-14T17:02:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its integration in the software development lifecycle, without a clear focus on Lead Time as defined.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-14T17:02:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools without addressing organisational culture or its impact on Agile methodologies.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-14T17:02:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-14T17:02:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not align with the principles of portfolio management.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-14T17:02:15",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-14T17:02:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Agile Planning principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-14T17:02:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Value Stream Mapping or related Lean principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-14T17:02:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on customer feedback integration or feedback loops.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-14T17:02:20",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the role of automated testing in enhancing operational efficiency within the software development lifecycle, aligning well with operational practices in Agile and DevOps methodologies.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-14T17:02:23",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and its integration in software development, with no clear focus on Scrum Team dynamics or roles.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-14T17:02:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools without addressing Agile principles or values.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-14T17:02:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools within software development, without a clear focus on strategic approaches in Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-14T17:02:26",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on testing methodologies rather than validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-14T17:02:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in software development, which is not directly related to Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-14T17:02:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools, with no focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-14T17:02:35",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses the importance, types, and integration of automated testing within modern application lifecycles, making it a central theme.",
    "level": "Primary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-14T17:02:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses automated testing in software development, focusing on tools and methodologies rather than team dynamics or performance.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of automated testing in delivering quality software iteratively, which aligns with the concept of Increment in Agile. However, the primary focus is on testing practices rather than the Increment itself.",
    "level": "Tertiary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-14T17:02:39",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses automated testing in a modern application lifecycle without a clear focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-14T17:02:42",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses automated testing within the context of the software development lifecycle, addressing methodologies, practices, and tools relevant to software engineering.",
    "level": "Primary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-14T17:02:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses automated testing in software development, focusing on its importance and integration within the application lifecycle, rather than agile project management principles or methodologies.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-14T17:02:48",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing practices and tools, with no clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-14T17:02:52",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses automated testing in software development, with no clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-14T17:02:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development rather than version control practices.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-14T17:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on empirical process control principles or Agile methodologies.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-14T17:02:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses automated testing and its integration in software development, with no clear focus on Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-14T17:02:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with only brief mentions of Team Foundation Server, which is not central to the topic of Azure Boards.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-14T17:02:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on collaboration tools or their impact on Agile team dynamics.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-14T17:03:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing practices and tools, which are not directly related to organisational change processes.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-14T17:03:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, which is not directly related to Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing, which is a crucial aspect of enabling frequent releases, but it primarily focuses on testing methodologies rather than the release process itself.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-14T17:03:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementation and methodologies rather than customer satisfaction or experience.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-14T17:03:06",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development without any clear focus on scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-14T17:03:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development without a focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-14T17:03:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on psychological safety or related themes.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-14T17:03:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on scaling agile practices or organisational agility.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-10T12:52:36",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses automated testing within the context of modern application lifecycles, highlighting its critical role in ensuring software quality and efficiency. It directly addresses best practices in testing methodologies, the importance of automation, and the management of technical debt, all of which align closely with the principles of engineering excellence. The depth of discussion is significant, providing detailed insights into various types of automated tests and their integration into development processes, thus reinforcing the focus on high standards in software craftsmanship.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-14T17:03:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-14T17:03:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-14T17:03:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical aspects rather than organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-14T17:03:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on customer retention strategies or methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-14T17:03:21",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses practical problem-solving strategies related to automated testing within a modern application lifecycle, highlighting the importance of automation in Agile environments. However, it primarily focuses on the tools and techniques rather than broader Agile or Scrum principles.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-14T17:03:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-14T17:03:24",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing practices and tools in software development, without a clear focus on innovation capabilities or Evidence-Based Management.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-14T17:03:25",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses automated testing in software development without a clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-14T17:03:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without reference to scaling Agile practices or frameworks.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-14T17:03:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing processes and tools, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-14T17:03:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on its importance and integration within modern application lifecycles, rather than Lean principles or waste minimisation.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-14T17:03:30",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses the importance, integration, and various types of automated testing within modern application lifecycles, aligning closely with the principles and practices of test automation.",
    "level": "Primary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-14T17:03:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not align with the principles and practices of entrepreneurship.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-14T17:03:34",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the role of automated testing in delivering high-quality, functional software, which aligns closely with the principles of working software in Agile and Scrum frameworks.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-14T17:03:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing extensively, which is a significant aspect of Continuous Integration, but it primarily focuses on the testing process rather than the broader principles and practices of CI.",
    "level": "Tertiary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-14T17:03:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-14T17:03:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools in software development, with no clear focus on Agile leadership or related themes.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-14T17:03:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on technical implementations and tools rather than on sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-14T17:03:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, which does not directly relate to Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-14T17:03:48",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development without focusing on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-14T17:03:49",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on its importance, types, and integration, rather than structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-14T17:03:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and practices rather than Lean principles such as waste reduction and value maximisation.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-14T17:03:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its integration in the software development lifecycle, without a clear focus on release management processes.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-14T17:03:54",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its integration in software development, with no clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of automated testing in maintaining an acceptable cycle time, making it a significant but secondary theme within a broader discussion on automated testing practices.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its integration with Team Foundation Server, which is relevant to Azure Pipelines, but the primary focus is on automated testing practices rather than Azure Pipelines specifically.",
    "level": "Tertiary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-14T17:03:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools, with no clear focus on deployment frequency or its optimisation.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-14T17:03:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on change management principles or practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-14T17:04:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on tools and techniques rather than team collaboration or dynamics.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-14T17:04:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing within the context of modern application lifecycles, which relates to the strategic adoption of digital technologies to enhance software development processes. However, it primarily focuses on testing methodologies rather than broader digital transformation strategies.",
    "level": "Tertiary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-14T17:04:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Minimum Viable Product concepts or related strategies.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-14T17:04:06",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on AI applications or integration within Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-14T17:04:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development rather than system configuration processes or methodologies.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-14T17:04:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses automated testing techniques and tools, which are technical implementation details rather than product strategy.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-14T17:04:09",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on technical leadership principles or practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-14T17:04:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and its integration in software development, with no focus on estimation techniques or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-14T17:04:12",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses automated testing in software development without a focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses automated testing extensively, including unit tests and integration tests, which are relevant to Test First Development. However, it primarily focuses on the broader topic of automated testing in the application lifecycle rather than specifically on the principles and practices of Test First Development.",
    "level": "Tertiary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "The content discusses automated testing and mentions integration with Visual Studio and Team Foundation Server, which are Windows-related tools, but the primary focus is on automated testing concepts rather than Windows-specific topics.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-14T17:04:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and their integration within the software development lifecycle, without a focus on deployment strategies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-14T17:04:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without addressing large scale Agile principles or practices.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-14T17:04:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses automated testing and technical implementation details without addressing team dynamics or motivation.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-14T17:04:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on remote working practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-14T17:04:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on continuous learning principles or practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-14T17:04:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration within the software development lifecycle, rather than focusing on troubleshooting specific technical issues.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-14T17:04:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration into the software development lifecycle, without a clear focus on hypothesis-driven experimentation or validating assumptions.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-14T17:04:27",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-14T17:04:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its integration in software development, with no clear focus on transparency or related themes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-14T17:04:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no focus on working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-14T17:04:31",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses automated testing within the context of modern application lifecycles, which is a key aspect of software development practices. It addresses the role of developers in implementing automated testing strategies, aligning with Agile and DevOps methodologies.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-14T17:04:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-14T17:04:34",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses automated testing, which is a key aspect of engineering practices, particularly in relation to CI/CD and TDD. It emphasises the importance of automation in maintaining code quality and reducing technical debt, aligning closely with Agile methodologies.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-14T17:04:35",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content discusses the importance of addressing technical debt in the context of automated testing, highlighting the need to manage and reduce technical debt to ensure quality software delivery.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-14T17:04:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Sprint Review or related Scrum events.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-14T17:04:39",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing techniques and tools, with no clear focus on product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-14T17:04:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-14T17:04:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in the context of software development, without a clear focus on Agile frameworks or their principles.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-14T17:04:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing practices and tools without a clear focus on Agile strategy or methodologies.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its integration with Team Foundation Server, which is related to Azure Repos, but the primary focus is on automated testing rather than Azure Repos functionalities.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-14T17:04:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on forecasting methodologies or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-14T17:04:47",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in software development, focusing on testing methodologies and tools rather than Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-14T17:04:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a focus on identifying patterns or shifts in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-14T17:04:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on accountability or team dynamics.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-14T17:04:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development, with no clear focus on Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in maintaining cycle time and delivering quality software, which relates to throughput as it touches on optimising the flow of work. However, the primary focus is on automated testing rather than throughput itself.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T09:09:01",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated testing extensively, including unit tests, but does not focus specifically on the TDD methodology or the Red-Green-Refactor cycle, making TDD a secondary theme.",
    "level": "Tertiary"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-18T11:49:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing in software development, which is not directly related to Scrum, Kanban, Lean, or Agile practices.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T11:49:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and technical implementation details, with no clear focus on leadership practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:22:04",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing in the software development lifecycle, without a clear focus on Internal Developer Platforms or their role in streamlining development processes.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:22:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing in software development without a clear focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T11:43:05",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 50,
    "final_score": 28.0,
    "reasoning": "The content primarily focuses on automated testing within a modern application lifecycle, which is not directly related to Scrum principles or practices. While it briefly touches on the importance of delivering working software and mentions team dynamics in the context of development teams, it lacks explicit discussions on Scrum roles, events, or artifacts. The depth of discussion on automated testing is significant, but it does not align closely with the core themes of Scrum, leading to a low confidence score.",
    "level": "Quaternary"
  }
}
