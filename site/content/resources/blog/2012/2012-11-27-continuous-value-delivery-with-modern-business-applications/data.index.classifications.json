{
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses continuous value delivery and issues related to software development cycles, without specific focus on Daily Scrum practices or related topics.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the culture and practices of software delivery, focusing on continuous value delivery without directly addressing the principles of the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, highlighting the importance of addressing technical challenges to improve delivery frequency and quality. It mentions specific practices related to software craftsmanship, such as minimising production impact and managing technical debt. However, while it touches on Agile practices and the Scrum framework, the primary focus is on organisational culture and delivery cadence rather than deep technical principles or methodologies, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and the challenges associated with software deployment, not focusing on identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 82.0,
    "ai_mentions": 18.0,
    "ai_alignment": 36.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content explicitly discusses Continuous Delivery, particularly in the context of Microsoft and Visual Studio's practices. It highlights the shift from traditional long release cycles to more frequent updates, which aligns with the principles of Continuous Delivery. The mention of specific challenges and solutions related to deployment and the cultural shift required for Continuous Delivery further supports its relevance. However, while the content is rich in examples and implications of Continuous Delivery, it does not delve deeply into the technical aspects or tools that support these practices, which slightly lowers the depth score.",
    "level": "Primary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the transition to continuous delivery and the need for organizations to adapt to changing market demands, which aligns with long-term objectives and business agility. However, the primary focus is on operational practices and deployment challenges rather than explicitly defining or articulating strategic goals.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 50.0,
    "reasoning": "The content discusses the need for faster delivery of software updates and highlights the shift toward continuous delivery, which relates to the concept of Lead Time. However, the primary focus is on changing development practices rather than directly measuring or optimizing Lead Time itself.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the culture of organizations in relation to software delivery but primarily focuses on the technical aspects and practices of continuous delivery and updates. Culture is mentioned as a blocker but is not the main focus.",
    "level": "Tertiary"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous value delivery and software development practices, with no clear focus on Definition of Ready criteria.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software delivery processes and Scrum practices, but does not focus on the management of a portfolio of projects or strategic alignment.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the shift towards continuous delivery and challenges associated with it, without focusing specifically on the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses Agile principles such as frequent delivery and minimizing risk, particularly in the context of Scrum and continuous delivery. However, the primary focus is on Microsoft and operational changes rather than directly on Agile Planning methodologies.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses software development practices and continuous delivery, focusing on Scrum and Microsoft Visual Studio, without a clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses continuous delivery in software development and associated challenges, but does not focus on customer feedback mechanisms or practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, highlighting the need for frequent updates and addressing operational challenges associated with this practice. It mentions the Scrum Framework and the importance of delivering working software regularly, which aligns with operational efficiency. However, while it touches on relevant topics, the discussion lacks depth in specific operational practices and metrics, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of delivering software frequently, which aligns with Scrum principles, particularly the emphasis on delivering working software in short iterations. However, it primarily focuses on the broader context of software development and continuous delivery rather than the specific dynamics, roles, and collaboration within a Scrum Team. While Scrum is mentioned, it is not the primary focus of the discussion, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent updates, which align with Agile principles of value delivery and responsiveness to change, but it primarily focuses on specific practices and tools rather than the broader Agile philosophy.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, particularly within the context of Microsoft and Visual Studio. It mentions the Scrum Framework's emphasis on delivering working software frequently, which aligns with strategic approaches in Agile. However, the primary focus is on the operational aspects of delivery rather than a comprehensive discussion of strategic alignment or planning. The depth of discussion on strategic concepts is limited, focusing more on practical implementation than on strategic formulation or leadership roles.",
    "level": "Secondary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about continuous delivery in software development and addresses cultural issues and deployment challenges, rather than focusing on user testing, market fit, or validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the need for continuous delivery and mentions the Scrum Framework, which aligns with Agile principles. However, it primarily focuses on the challenges and practices of software delivery rather than a comprehensive discussion on Agile transformation strategies or methodologies. The mention of Scrum is brief and does not delve into the broader aspects of Agile transformation, such as change management or leadership roles.",
    "level": "Secondary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses continuous delivery, software development practices, and the challenges surrounding them, but does not address mentoring or coaching aspects relevant to Agile professionals.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses continuous delivery and software development practices but does not focus on automated testing principles or methodologies related to testing.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of continuous delivery and the challenges associated with it, which indirectly relates to team performance in an Agile context. However, it primarily focuses on software delivery practices rather than specific strategies or methodologies for enhancing team dynamics or collaboration. While it mentions Scrum principles, the discussion lacks depth in exploring team performance metrics, leadership roles, or conflict resolution strategies.",
    "level": "Tertiary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of delivering software increments frequently, aligning with Agile principles, particularly Scrum. It highlights the shift from traditional long release cycles to more frequent updates, which is a core aspect of the Increment concept. The mention of continuous delivery and the need for working software at least every 30 days directly relates to the Increment's significance in delivering value. However, while the content is rich in examples and context, it does not delve deeply into best practices or specific techniques for measuring value, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on software delivery processes and continuous value delivery rather than on Acceptance Test Driven Development principles, acceptance criteria, or collaboration in ATDD.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the shift towards continuous delivery in software development, specifically referencing the Scrum framework and the importance of delivering working software frequently. It aligns well with key topics in the Software Development category, such as CI/CD practices and Agile methodologies. The depth of discussion is significant, providing insights into the challenges and solutions associated with modern software delivery practices.",
    "level": "Primary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent feature updates, which aligns with Agile principles of responsiveness and value delivery. However, it primarily focuses on specific practices and experiences with software development rather than a comprehensive discussion of Agile values and principles.",
    "level": "Tertiary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and mentions the Scrum Framework's principle of delivering working deployable software at least every 30 days. However, it primarily focuses on the challenges and practices related to software delivery, which may not align closely enough with the core principles of Scrum for higher confidence classification.",
    "level": "Tertiary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content mentions continuous delivery and tools like Team Foundation Server, implying an interest in modern practices of source control, but the primary focus is on broader software delivery and organizational mindset rather than specific version control practices.",
    "level": "Tertiary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses concepts related to Agile practices such as continuous value delivery and Scrum, but it primarily focuses on the challenges and practices in software development, with empirical process control being a secondary theme.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software delivery practices and the transition to continuous delivery, without focusing on the Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and the Scrum framework without a clear focus on Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery in software development and the cultural challenges within organizations, without discussing collaboration tools or their impact on Agile teams.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content discusses continuous delivery and challenges in software development, but primarily focuses on technical aspects and practices rather than organisational change strategies or frameworks.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and the software development lifecycle, specifically within the context of Microsoft and Scrum, without focusing on Lean Startup principles such as MVP or the Build-Measure-Learn loop.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the need for frequent software updates and the shift from traditional long release cycles to more agile practices, aligning closely with the principles of Continuous Delivery. It provides detailed examples of Microsoft's transition to a three-month release cadence and addresses the challenges and solutions associated with frequent releases, demonstrating a strong understanding of the topic.",
    "level": "Primary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "While the content primarily discusses continuous delivery and software development practices, it touches upon delivering updates more frequently to ensure consumer happiness, which is a significant aspect of customer satisfaction.",
    "level": "Tertiary"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and continuous delivery rather than evidence-based leadership principles and decision-making.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software delivery practices and the hurdles faced in traditional software development methodologies without any focus on psychological safety.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of continuous delivery and the need to improve software development practices, which aligns with the principles of engineering excellence. It mentions the Scrum framework and the necessity of delivering working software frequently, indicating a focus on best practices. However, while it touches on relevant topics, the depth of discussion on specific engineering practices and metrics is limited, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on software delivery practices and agile methodologies rather than on revenue generation or employee productivity metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery and software development practices without addressing asynchronous collaboration principles or strategies.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses organizational culture and the need for change in software delivery practices, indicating some awareness of organizational dynamics. However, it mainly focuses on software development practices and specific examples related to Scrum, which are secondary to the broader theme of organizational systems thinking.",
    "level": "Tertiary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent updates in software development, which can enhance customer satisfaction and engagement. However, the main focus is on software delivery practices rather than specific strategies for customer retention.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content discusses practical problem-solving strategies in the context of continuous delivery and Agile practices, particularly highlighting the importance of adapting to new software delivery cadences. It provides real-world examples from Microsoft and addresses common organisational challenges, demonstrating a strong alignment with the core themes of pragmatic thinking. The depth of discussion is substantial, as it explores specific issues and solutions related to deployment and software updates, making it a primary focus of the content.",
    "level": "Primary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and the cultural shift required in software development rather than the specific practices, techniques, or roles involved in backlog refinement.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the cultural challenges organizations face in adopting new practices, indicating a secondary theme of innovation in software delivery rather than a focused discussion on measuring or improving innovation capabilities.",
    "level": "Tertiary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software delivery practices, the Scrum framework, and technical processes rather than focusing on employee engagement or motivation.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and frequent software updates, which relates to Lean principles of minimizing waste and enhancing efficiency. However, it primarily focuses on software development processes, making Lean a secondary theme.",
    "level": "Tertiary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the cultural shift required for continuous delivery and software deployment practices, without focusing on test automation principles or tools.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content discusses software development practices and continuous delivery, which indirectly relates to entrepreneurship in terms of innovation and risk management. However, it primarily focuses on technical implementation rather than the entrepreneurial process or mindset.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of continuous delivery and the need for frequent updates in software development, aligning well with the principles of working software. It explicitly mentions the Scrum framework and the necessity of delivering working software at least every 30 days. The depth of discussion includes challenges and solutions related to deployment and software quality, which are key aspects of delivering functional software. Overall, the content is focused on practical aspects of working software, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 40,
    "non_ai_confidence": 10,
    "final_score": 40.0,
    "reasoning": "While the content discusses the importance of continuous delivery in Agile methodologies, it primarily focuses on the broader context of software development and the challenges of delivery rather than specific Agile planning tools or techniques.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the challenges associated with it, which aligns with the principles of Continuous Integration. However, it primarily focuses on the broader context of software delivery and organisational culture rather than delving deeply into CI practices, tools, or specific methodologies. The mention of Team Foundation Server and Visual Studio's move to continuous delivery indicates a connection to CI, but the overall discussion lacks depth in CI-specific practices and tools.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and the development process, rather than focusing on strategies to increase market share or competitive advantage.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, referencing Agile principles such as the Scrum Framework and the importance of rapid delivery cycles. While it primarily focuses on technical practices and organizational culture surrounding software delivery, it touches on leadership's role in addressing underlying issues and changing organizational behavior to embrace these Agile practices.",
    "level": "Tertiary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on continuous delivery and software development practices rather than on interpreting complexity or decision-making processes in organizational contexts.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and continuous delivery rather than specific Site Reliability Engineering principles.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the need for continuous delivery and improvements in software development practices, with a focus on organizational culture and resilience to change rather than on forming or testing hypotheses related to product features or user behaviors.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the challenges and methodologies involved in software delivery and agile practices, which includes decision-making aspects. However, it primarily focuses on continuous delivery and software development culture rather than structured decision-making processes.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of continuous delivery and iterative improvement, which align with Lean principles, but mainly focuses on software development practices rather than solely on Lean principles.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content discusses the need for frequent software releases and the shift towards continuous delivery, which aligns well with the core themes of Release Management. It mentions specific practices like addressing deployment challenges and the importance of delivering working software regularly, which are central to effective release management. However, while it touches on these topics, it does not delve deeply into structured release planning or risk management, which slightly lowers the depth score.",
    "level": "Primary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and continuous delivery rather than the specific responsibilities and techniques relevant to the Product Owner role.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of delivering software more frequently and mentions the concept of continuous delivery and its implications on the workflow, but it primarily focuses on broader topics related to software development culture and practices without a direct and focused discussion on Cycle Time itself.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses general software delivery practices and the importance of continuous delivery, but it does not specifically mention Azure Pipelines or its functionalities. The focus is on organization challenges and software development processes in general, without a clear emphasis on Azure Pipelines.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the need for frequent software releases, criticising long release cycles and advocating for a shift towards continuous delivery. It references the Scrum Framework's emphasis on delivering working software at least every 30 days, which aligns directly with the core themes of deployment frequency. The author provides examples from Microsoft’s practices, illustrating successful deployment frequency improvements and the challenges faced. The depth of discussion is substantial, covering both the cultural and technical aspects of achieving higher deployment frequency, thus justifying a high confidence score.",
    "level": "Primary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the cultural shift necessary for organizations to adopt continuous value delivery in software development, touching on resistance to change, which aligns with change management themes, although it primarily focuses on software practices.",
    "level": "Tertiary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "While the content primarily discusses continuous delivery practices and the challenges associated with software deployments, it does touch on aspects of team dynamics in delivering software more frequently and mentions team practices in relation to Scrum. However, the focus is on processes and problems rather than on collaboration techniques or team dynamics specifically.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses continuous delivery and the challenges in software deployment, with no clear focus on Behaviour Driven Development or its principles.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "Content discusses the shift towards continuous delivery in software development, which relates to digital transformation in terms of enhancing operational efficiency and adapting organizational culture. However, it primarily focuses on software engineering practices rather than broader strategic implications of digital transformation.",
    "level": "Tertiary"
  },
  "Minimum Viable Product": {
    "category": "MVP",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses continuous delivery and deployment practices rather than Minimum Viable Products or their role in product development and market validation.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, Scrum Framework, and the culture of software delivery, which are not directly related to system configuration.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and the need for frequent updates in product development, which relates to product strategy but primarily focuses on technical delivery practices and cultural changes rather than strategic planning or methodologies.",
    "level": "Tertiary"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous value delivery and mentions the Scrum framework, which relates to agile methodologies. However, it mainly focuses on the challenges and changes in software release cycles rather than directly on technical leadership practices or strategies for guiding teams.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses continuous delivery and software development practices, without a clear focus on estimation techniques or practices in Agile or Scrum.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery in software development and specific practices related to Microsoft products, with no focus on cross-functional teams or their role in Agile methodologies.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 10,
    "final_score": 25.0,
    "reasoning": "The content discusses continuous delivery and the need for frequent updates in software development, which indirectly relates to the principles of Test First Development. However, it does not explicitly mention Test First practices, success criteria, or the role of testing in guiding design and implementation. The focus is more on delivery cadence and organisational culture rather than the specifics of Test First Development, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "The content discusses the release cycle of Visual Studio and mentions Windows Phone updates, indicating a significant but not primary focus on Windows as part of a larger discussion on software development practices.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the challenges associated with deploying software frequently, which aligns with deployment strategies. However, it primarily focuses on the cultural and organisational aspects of software development rather than specific methodologies or practices of deployment. While it mentions issues like minimal production impact and updating components, it lacks detailed exploration of specific deployment strategies such as Blue-Green Deployments or Canary Releases.",
    "level": "Secondary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and Agile practices in the context of software development, specifically in relation to Microsoft's Visual Studio, which could indicate a larger organizational approach to agility. However, it primarily focuses on specific practices rather than explicitly addressing large scale agility principles.",
    "level": "Tertiary"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software development practices and the technical aspects of continuous delivery rather than team motivation or engagement strategies.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses continuous delivery in software development, particularly in the context of Visual Studio and Team Foundation Server, with no focus on remote working practices, Agile frameworks, or collaboration tools for remote teams.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the transformation towards continuous delivery and the associated challenges, which aligns with the principles of continuous learning. However, the primary focus is on software delivery practices rather than explicitly on continuous learning strategies or team dynamics.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses problems related to software deployment and continuous delivery, which involves troubleshooting issues in the software development lifecycle. However, the primary focus is on the culture and practices of software delivery rather than explicitly diagnosing and resolving technical issues.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses software delivery practices and organizational culture, without focusing on hypothesis-driven experimentation or the systematic testing of ideas.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content briefly mentions the Scrum Framework and its emphasis on delivering working software every 30 days, which aligns with the Scrum Master's role in promoting agile practices. However, the primary focus is on continuous delivery and software development practices rather than the specific responsibilities or influence of a Scrum Master. The discussion lacks depth regarding the Scrum Master's role, techniques, and impact on team dynamics, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery and the evolution of software development practices rather than discussing transparency in Agile processes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery practices and challenges in software development, with only a brief mention of Scrum frameworks but not primarily about working agreements or team norms.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery and software development practices, with no clear emphasis on coaching or related themes.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of continuous delivery and the cultural shift required for frequent software updates, which aligns with Agile principles. It mentions specific practices like addressing deployment challenges and the need for smaller, less risky releases. However, while it touches on relevant topics, it lacks a detailed exploration of clean code, TDD, or CI/CD methodologies, which are core to the category.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 20,
    "final_score": 68.0,
    "reasoning": "The content discusses the need for organisations to address underlying problems in their software development processes, which can be interpreted as a reference to technical debt. However, the primary focus is on the shift towards continuous delivery and the cultural changes required, rather than a detailed exploration of technical debt itself. While there are mentions of technical debt, they are not the main focus, and the discussion lacks depth in terms of strategies for managing or measuring it.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content discusses continuous delivery and software development practices but does not focus on Sprint Reviews or their details.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the importance of continuous delivery in software development, which aligns with product management principles, particularly in Agile and Scrum frameworks. However, it primarily focuses on technical implementation details and the challenges of deployment rather than the strategic aspects of product management. While it touches on customer needs and the necessity for frequent updates, it lacks depth in discussing methodologies or frameworks that guide product managers. Therefore, while there is some relevance, it does not fully meet the criteria for a strong alignment with the Product Management category.",
    "level": "Secondary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses the need for frequent software delivery and the cultural shifts required to achieve this, which aligns with self-organisation principles. However, it primarily focuses on the challenges and practices of continuous delivery rather than explicitly addressing self-organisation or its principles in detail. The mention of Scrum is brief and does not delve into self-organising teams or their dynamics, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of frequent delivery in software development, which relates to Agile principles, specifically mentioning the Scrum Framework. However, the primary focus is on Microsoft and continuous delivery practices rather than a comprehensive exploration of Agile frameworks.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of continuous value delivery and the shift towards more frequent software updates, which aligns with Agile principles. It mentions the Scrum Framework and the need for organisations to adapt their culture to support Agile methodologies. However, while it touches on Agile concepts, the primary focus is on software delivery practices rather than a comprehensive Agile strategy, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses general software development practices and continuous delivery without focusing on Azure Repos specifically.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the culture of software delivery and continuous delivery practices rather than specific forecasting methods or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the need for frequent delivery of software and the cultural shifts required to achieve this, which aligns with Lean principles of minimising waste and maximising value. However, it primarily focuses on the Scrum framework and continuous delivery rather than explicitly addressing Lean Product Development concepts. The depth of discussion on Lean-specific techniques and tools is limited, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, particularly in relation to Microsoft’s practices with Visual Studio. It highlights emerging trends in software delivery frequency and the cultural changes required within organisations. However, while it touches on these trends, it lacks a structured analysis of their implications for Agile or DevOps methodologies, and does not provide in-depth insights or case studies that would strengthen its alignment with the Trend Analysis category.",
    "level": "Secondary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on software delivery practices and the shift towards continuous delivery, with only indirect references to Agile methodologies without a clear discussion of accountability.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the need for more frequent software delivery and the challenges associated with continuous delivery, which aligns with the concept of throughput. However, while it touches on the importance of delivering value efficiently, it lacks detailed techniques for measuring throughput or specific strategies for optimisation. The primary focus is on cultural shifts and organisational challenges rather than a thorough exploration of throughput metrics or improvement strategies.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and software release cycles rather than TDD principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of continuous delivery and the Scrum framework, which aligns with Agile principles. However, it primarily focuses on the technical aspects of software delivery rather than the broader scope of Agile Product Management, such as stakeholder engagement or product vision alignment.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and the challenges associated with deployment processes, which can relate to platform engineering, but the primary focus is on software delivery practices and Scrum rather than internal developer platforms or enhancing developer productivity specifically.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses continuous value delivery and the need for frequent updates in software development, which aligns with the concept of improving time to market. However, it primarily focuses on the practices of software development and Scrum rather than explicitly addressing Evidence-Based Management principles or metrics. The discussion lacks depth in empirical decision-making and does not provide a strong connection to the key topics outlined in the EBM category.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and the reduction of operational inefficiencies, which aligns with Lean principles. However, it primarily focuses on software development methodologies like Scrum and does not directly address broader Lean strategies.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the culture and philosophy of software development and delivery rather than specific installation and configuration processes.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the need for organisations to adapt their software development practices to meet consumer demands for more frequent updates. It mentions Agile principles, particularly the Scrum Framework, and highlights the importance of addressing underlying issues to enhance responsiveness. However, while it touches on relevant themes, the discussion lacks a comprehensive exploration of broader market adaptability strategies and methodologies, which limits its depth and alignment with the category.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the interplay between organizational culture, software delivery practices, and the challenges of adopting continuous delivery methods, which encompasses sociotechnical elements. However, the primary focus is on technical practices rather than a thorough exploration of sociotechnical systems.",
    "level": "Tertiary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses continuous value delivery and the need for frequent software updates, which aligns with DevOps principles. However, it primarily focuses on the practices of specific tools and frameworks (like Visual Studio and Scrum) rather than the broader DevOps philosophy. While it touches on automation and reducing deployment risks, it lacks a comprehensive exploration of shared accountability and cultural shifts necessary for effective DevOps implementation.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses continuous delivery in the context of the Scrum framework and software development practices, making it more relevant to Agile methodologies rather than being a purely miscellaneous discussion.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, specifically continuous delivery and the Scrum framework, without a clear focus on decision-making processes or the principles of decision theory.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of continuous delivery and the need to optimise software release cycles, which aligns well with the principles of Flow Efficiency. It mentions the challenges of traditional release cycles and how addressing these can lead to improved throughput and reduced bottlenecks. The discussion on Microsoft’s shift to a more frequent delivery model and the associated problems to solve further supports the alignment with Flow Efficiency concepts. However, while the content is rich in examples and implications, it does not delve deeply into specific metrics or visual management tools, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the need for organizations to adapt their software development practices for faster feature delivery, which touches on themes of adaptability and responsiveness central to enterprise agility, but it primarily focuses on software development practices rather than a holistic view of organizational agility.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the need for frequent software delivery and the cultural shifts required to achieve this, which aligns with the principles of business agility. However, it primarily focuses on software development practices and the Scrum framework rather than a broader exploration of business agility principles, strategies, or leadership roles. The depth of discussion on business agility concepts is limited, focusing more on specific practices rather than a comprehensive view of organisational agility.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent updates in software development, which relates to metrics and learning through the need for data-driven decision-making and continuous improvement. However, the focus is more on practices and cultural shifts rather than specific metrics or learning methodologies.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum and continuous delivery principles, without a clear focus on Kanban methodology or its specific practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of continuous delivery and the challenges associated with it, which aligns with the principles of Technical Excellence. However, while it touches on relevant practices, such as the Scrum Framework and deployment strategies, the focus is more on organisational culture and the need for change rather than a deep dive into specific engineering methodologies or practices. Therefore, while it is relevant, it does not fully meet the criteria for a primary focus on Technical Excellence.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "While the content primarily discusses continuous delivery and software development practices, it touches on underlying complexities and challenges related to frequent updates and deployment in large applications, which aligns with themes of complexity thinking in systems management.",
    "level": "Tertiary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development practices and methodologies, specifically continuous delivery and Scrum, without a focus on psychological principles or their impact on organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 82.0,
    "ai_mentions": 16,
    "ai_alignment": 34,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of continuous delivery and the shift from traditional long release cycles to more frequent updates, which aligns well with product delivery methodologies. It explicitly mentions Scrum and the need for working software to be delivered regularly, demonstrating a strong focus on the integration of development and deployment phases. The depth of discussion on deployment challenges and the benefits of frequent updates further supports its relevance to the category.",
    "level": "Primary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on software development and continuous delivery practices without discussing the principles of decentralised, adaptive, and human-centric organisational design associated with BetaCodex.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and the importance of delivering value to consumers quickly, which relates to optimizing efficiency and flow of value in software development processes. However, it primarily focuses on software release practices rather than explicitly on Value Stream Management principles.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of continuous delivery and iterative development, particularly in the context of Microsoft’s Visual Studio and Team Foundation Server. It highlights the shift from traditional long release cycles to more frequent updates, aligning well with the principles of Agile and Scrum. The author provides specific examples of how these practices enhance customer satisfaction and address common deployment challenges, demonstrating a strong alignment with the core themes of value delivery. The depth of discussion is substantial, covering both the benefits and the challenges of implementing continuous delivery, which further supports the high confidence score.",
    "level": "Primary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses continuous delivery and mentions Team Foundation Server, which is part of Azure DevOps, but it primarily focuses on general software development challenges and practices without providing detailed insights into Azure DevOps functionalities.",
    "level": "Tertiary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and the operational aspects of Visual Studio and Team Foundation Server, without providing personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content discusses continuous value delivery in software development, mentioning Scrum and some systemic issues in traditional software release cycles, but it lacks a comprehensive exploration of Systems Thinking principles, techniques, or frameworks.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery practices and the Scrum framework rather than integrating and standardizing engineering processes as defined by the One Engineering System.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses continuous delivery and the shift from traditional software release cycles, which aligns with some principles of the Agile Product Operating Model. However, it primarily focuses on software development practices and the challenges of continuous delivery rather than explicitly addressing the broader aspects of the Agile Product Operating Model, such as product management principles or organisational structure. The mention of Scrum is relevant but does not constitute a primary focus on the APOM framework.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the cultural changes required within organisations to adapt to this new normal. It highlights the need for organisations to overcome traditional practices that inhibit agility, aligning with the principles of organisational agility. However, while it touches on these themes, the focus is primarily on software delivery rather than a broader exploration of organisational agility strategies and frameworks.",
    "level": "Secondary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, which aligns with the application lifecycle management principles of deployment and maintenance. It mentions the need for frequent updates and addresses challenges in deployment, which are key aspects of ALM. However, while it touches on relevant topics, it primarily focuses on the cultural shift in software delivery rather than providing a comprehensive overview of the entire application lifecycle, resulting in a moderately high confidence score.",
    "level": "Secondary"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses continuous value delivery in software development, touching on organisational culture and the need for frequent updates. However, it primarily focuses on technical practices and the challenges of software delivery rather than explicitly addressing social technologies or collaboration frameworks. While there are mentions of Scrum and the need for cultural change, the depth of discussion on social technologies and their impact on collaboration and decision-making is limited.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T11:49:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and technical challenges rather than leadership strategies or practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:21:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the challenges and practices of software delivery and Scrum methodologies, without a clear focus on Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:21:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and continuous delivery, with no clear focus on the application of AI in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 50,
    "final_score": 68.0,
    "reasoning": "The content discusses the importance of delivering working software frequently, which aligns with Scrum principles. It mentions the Scrum Framework's emphasis on creating deployable software at least every 30 days, indicating a direct mention of Scrum. However, the overall focus is more on continuous delivery and organisational culture rather than a detailed exploration of Scrum roles, events, or artifacts, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the need for frequent software delivery and the challenges associated with it, which aligns with the Shift-Left Strategy's emphasis on early integration of processes. However, it primarily focuses on continuous delivery and organisational culture rather than explicitly addressing testing, security, or compliance integration early in the development lifecycle. The mention of Scrum and deployment challenges provides some relevant context, but the overall discussion lacks a direct focus on the core principles of the Shift-Left Strategy.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, highlighting the need for frequent updates and the cultural changes required to support this. It mentions the Scrum Framework and addresses the challenges of traditional software release cycles, which aligns with Continuous Improvement principles. However, while it touches on relevant themes, it lacks a comprehensive exploration of Continuous Improvement strategies and tools, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of continuous delivery and the cultural shift required in organisations to achieve this, which indirectly relates to the concept of Common Goals. However, it primarily focuses on the challenges and practices of software delivery rather than explicitly addressing shared objectives or alignment within teams. The mention of Scrum and the need for frequent updates hints at the importance of aligning strategy with execution, but it lacks a thorough exploration of how these practices connect to overarching organisational goals.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the necessity for continuous delivery and the cultural shifts required within organisations to improve software development practices. It highlights the importance of addressing underlying issues to enhance competence in delivering quality software. However, while it touches on competence indirectly, it does not delve deeply into strategies for fostering a culture of competence or continuous learning, which limits its overall alignment with the category.",
    "level": "Secondary"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T15:55:23",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content discusses continuous value delivery and the need for organisations to adapt their software development practices, which aligns with the concept of agility. However, it lacks a direct focus on Agentic Agility, particularly in terms of intentional shaping of outcomes and the distinction between human and AI capabilities. The discussion is more about general Agile practices rather than the specific principles of Agentic Agility.",
    "level": "Ignored"
  }
}
