{
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses continuous value delivery and issues related to software development cycles, without specific focus on Daily Scrum practices or related topics.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the culture and practices of software delivery, focusing on continuous value delivery without directly addressing the principles of the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-10T14:52:12",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, highlighting the importance of addressing technical challenges to improve delivery frequency and quality. It mentions specific practices related to software craftsmanship, such as minimising production impact and managing technical debt. However, while it touches on Agile practices and the Scrum framework, the primary focus is on organisational culture and delivery cadence rather than deep technical principles or methodologies, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and the challenges associated with software deployment, not focusing on identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-10T12:51:32",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 76.0,
    "reasoning": "The content discusses Continuous Delivery in detail, particularly in the context of Microsoft's approach with Visual Studio and Team Foundation Server. It explicitly mentions the shift to Continuous Delivery, the challenges associated with it, and the benefits of delivering software more frequently. The discussion aligns well with the principles of Continuous Delivery, including the importance of minimising production impact and managing deployment risks. The depth of the content is substantial, providing examples and insights into real-world applications of Continuous Delivery, which supports a high confidence score.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the transition to continuous delivery and the need for organizations to adapt to changing market demands, which aligns with long-term objectives and business agility. However, the primary focus is on operational practices and deployment challenges rather than explicitly defining or articulating strategic goals.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the need for faster delivery of software updates and highlights the shift toward continuous delivery, which relates to the concept of Lead Time. However, the primary focus is on changing development practices rather than directly measuring or optimizing Lead Time itself.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the culture of organizations in relation to software delivery but primarily focuses on the technical aspects and practices of continuous delivery and updates. Culture is mentioned as a blocker but is not the main focus.",
    "level": "Tertiary"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses continuous value delivery and software development practices, with no clear focus on Definition of Ready criteria.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software delivery processes and Scrum practices, but does not focus on the management of a portfolio of projects or strategic alignment.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the shift towards continuous delivery and challenges associated with it, without focusing specifically on the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Agile principles such as frequent delivery and minimizing risk, particularly in the context of Scrum and continuous delivery. However, the primary focus is on Microsoft and operational changes rather than directly on Agile Planning methodologies.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses software development practices and continuous delivery, focusing on Scrum and Microsoft Visual Studio, without a clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-14T16:29:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses continuous delivery in software development and associated challenges, but does not focus on customer feedback mechanisms or practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-07T15:13:14",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, highlighting the need for frequent updates and addressing operational challenges associated with this practice. It mentions the Scrum Framework and the importance of delivering working software regularly, which aligns with operational efficiency. However, while it touches on relevant topics, the discussion lacks depth in specific operational practices and metrics, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the Scrum Framework's emphasis on delivering working software frequently, which relates to the dynamics of a Scrum Team, but primarily focuses on software delivery practices and challenges rather than the internal roles and collaboration within a Scrum Team.",
    "level": "Tertiary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent updates, which align with Agile principles of value delivery and responsiveness to change, but it primarily focuses on specific practices and tools rather than the broader Agile philosophy.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses aspects of delivering software in a modern, continuous manner and highlights the challenges of deployment and delivery frequency, which relates to strategic planning and execution within Agile frameworks, primarily emphasizing Scrum principles. However, the discussion leans more towards implementation specifics rather than a clear, strategic overview.",
    "level": "Secondary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about continuous delivery in software development and addresses cultural issues and deployment challenges, rather than focusing on user testing, market fit, or validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses continuous delivery and frequent updates in software development, referencing Scrum practices. While it addresses agile methodologies, the primary focus seems to be on the evolution of software delivery rather than a comprehensive exploration of Agile transformation.",
    "level": "Secondary"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses continuous delivery, software development practices, and the challenges surrounding them, but does not address mentoring or coaching aspects relevant to Agile professionals.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses continuous delivery and software development practices but does not focus on automated testing principles or methodologies related to testing.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous delivery and its challenges, which are relevant to team performance and collaboration within agile teams, but it primarily focuses on software development practices rather than the specific dynamics of team performance.",
    "level": "Tertiary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of delivering working software frequently, aligns with Scrum practices, and emphasizes the concept of delivering potentially shippable software increments within specific timeframes.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on software delivery processes and continuous value delivery rather than on Acceptance Test Driven Development principles, acceptance criteria, or collaboration in ATDD.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses continuous delivery in software development, referencing practices such as Scrum and deployment challenges, making it a primary topic.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of continuous delivery and aligns it with Scrum's principles of iteratively delivering working software, showcasing how Agile project management principles can enhance software development processes.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent feature updates, which aligns with Agile principles of responsiveness and value delivery. However, it primarily focuses on specific practices and experiences with software development rather than a comprehensive discussion of Agile values and principles.",
    "level": "Tertiary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous delivery and mentions the Scrum Framework's principle of delivering working deployable software at least every 30 days. However, it primarily focuses on the challenges and practices related to software delivery, which may not align closely enough with the core principles of Scrum for higher confidence classification.",
    "level": "Tertiary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content mentions continuous delivery and tools like Team Foundation Server, implying an interest in modern practices of source control, but the primary focus is on broader software delivery and organizational mindset rather than specific version control practices.",
    "level": "Tertiary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to Agile practices such as continuous value delivery and Scrum, but it primarily focuses on the challenges and practices in software development, with empirical process control being a secondary theme.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses software delivery practices and the transition to continuous delivery, without focusing on the Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and the Scrum framework without a clear focus on Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery in software development and the cultural challenges within organizations, without discussing collaboration tools or their impact on Agile teams.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content discusses continuous delivery and challenges in software development, but primarily focuses on technical aspects and practices rather than organisational change strategies or frameworks.",
    "level": "Quaternary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and the software development lifecycle, specifically within the context of Microsoft and Scrum, without focusing on Lean Startup principles such as MVP or the Build-Measure-Learn loop.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance and practice of delivering software updates and improvements more frequently, emphasizing continuous delivery principles and referencing Microsoft's approach to regular updates.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "While the content primarily discusses continuous delivery and software development practices, it touches upon delivering updates more frequently to ensure consumer happiness, which is a significant aspect of customer satisfaction.",
    "level": "Tertiary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the importance of continuous delivery in software development and mentions Scrum briefly, but it does not focus on scaling Scrum or the challenges and methods associated with it in large organizations.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and continuous delivery rather than evidence-based leadership principles and decision-making.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software delivery practices and the hurdles faced in traditional software development methodologies without any focus on psychological safety.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses elements of continuous delivery and the importance of delivering software more frequently, which aligns with agile principles. However, the primary focus is on practices related to software development rather than specifically on scaling agility across an organization.",
    "level": "Tertiary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-07T15:13:11",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of continuous delivery and the need to improve software development practices, which aligns with the principles of engineering excellence. It mentions the Scrum framework and the necessity of delivering working software frequently, indicating a focus on best practices. However, while it touches on relevant topics, the depth of discussion on specific engineering practices and metrics is limited, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on software delivery practices and agile methodologies rather than on revenue generation or employee productivity metrics.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery and software development practices without addressing asynchronous collaboration principles or strategies.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses organizational culture and the need for change in software delivery practices, indicating some awareness of organizational dynamics. However, it mainly focuses on software development practices and specific examples related to Scrum, which are secondary to the broader theme of organizational systems thinking.",
    "level": "Tertiary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent updates in software development, which can enhance customer satisfaction and engagement. However, the main focus is on software delivery practices rather than specific strategies for customer retention.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses practical problem-solving techniques related to continuous value delivery in software development, particularly within Agile frameworks, and emphasizes real-world applications and the need for adaptability in organizational practices.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and the cultural shift required in software development rather than the specific practices, techniques, or roles involved in backlog refinement.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the cultural challenges organizations face in adopting new practices, indicating a secondary theme of innovation in software delivery rather than a focused discussion on measuring or improving innovation capabilities.",
    "level": "Tertiary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of delivering working software frequently, which aligns with Scrum principles, but it focuses more on continuous delivery in a broader context rather than specifically on Scrum practices.",
    "level": "Tertiary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and improvement within the software development lifecycle, referencing Scrum principles and practices, but does not primarily focus on scaling Agile methodologies across multiple teams or at an enterprise level.",
    "level": "Tertiary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software delivery practices, the Scrum framework, and technical processes rather than focusing on employee engagement or motivation.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and frequent software updates, which relates to Lean principles of minimizing waste and enhancing efficiency. However, it primarily focuses on software development processes, making Lean a secondary theme.",
    "level": "Tertiary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the cultural shift required for continuous delivery and software deployment practices, without focusing on test automation principles or tools.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 36.0,
    "reasoning": "The content discusses software development practices and continuous delivery, which indirectly relates to entrepreneurship in terms of innovation and risk management. However, it primarily focuses on technical implementation rather than the entrepreneurial process or mindset.",
    "level": "Quaternary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the need for continuous delivery and the advantages of delivering working software more frequently, aligning well with the themes of working software delivery in Agile. It includes references to Scrum principles and illustrates the practical implications of delivering functional software regularly.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 40,
    "non_ai_confidence": 10,
    "final_score": 37.0,
    "reasoning": "While the content discusses the importance of continuous delivery in Agile methodologies, it primarily focuses on the broader context of software development and the challenges of delivery rather than specific Agile planning tools or techniques.",
    "level": "Quaternary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the concept of continuous delivery, which is closely related to Continuous Integration, but primarily focuses on broader topics related to software delivery cycles and organizational culture rather than the specific practices or tools of CI.",
    "level": "Tertiary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and the development process, rather than focusing on strategies to increase market share or competitive advantage.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, referencing Agile principles such as the Scrum Framework and the importance of rapid delivery cycles. While it primarily focuses on technical practices and organizational culture surrounding software delivery, it touches on leadership's role in addressing underlying issues and changing organizational behavior to embrace these Agile practices.",
    "level": "Tertiary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on continuous delivery and software development practices rather than on interpreting complexity or decision-making processes in organizational contexts.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and continuous delivery rather than specific Site Reliability Engineering principles.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the need for continuous delivery and improvements in software development practices, with a focus on organizational culture and resilience to change rather than on forming or testing hypotheses related to product features or user behaviors.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the challenges and methodologies involved in software delivery and agile practices, which includes decision-making aspects. However, it primarily focuses on continuous delivery and software development culture rather than structured decision-making processes.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of continuous delivery and iterative improvement, which align with Lean principles, but mainly focuses on software development practices rather than solely on Lean principles.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses concepts related to continuous delivery and the cadence of software releases, which are relevant to release management, but it primarily emphasizes broader themes connected to cultural change and agile practices, making release management a secondary theme.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and continuous delivery rather than the specific responsibilities and techniques relevant to the Product Owner role.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of delivering software more frequently and mentions the concept of continuous delivery and its implications on the workflow, but it primarily focuses on broader topics related to software development culture and practices without a direct and focused discussion on Cycle Time itself.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses general software delivery practices and the importance of continuous delivery, but it does not specifically mention Azure Pipelines or its functionalities. The focus is on organization challenges and software development processes in general, without a clear emphasis on Azure Pipelines.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the need for frequent software delivery and the transition to continuous delivery practices, highlighting the significance of deployment frequency in improving product iterations and user satisfaction.",
    "level": "Secondary"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the cultural shift necessary for organizations to adopt continuous value delivery in software development, touching on resistance to change, which aligns with change management themes, although it primarily focuses on software practices.",
    "level": "Tertiary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "While the content primarily discusses continuous delivery practices and the challenges associated with software deployments, it does touch on aspects of team dynamics in delivering software more frequently and mentions team practices in relation to Scrum. However, the focus is on processes and problems rather than on collaboration techniques or team dynamics specifically.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content heavily discusses continuous delivery and the challenges in software deployment, with no clear focus on Behaviour Driven Development or its principles.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 60,
    "non_ai_confidence": 0,
    "final_score": 54.0,
    "reasoning": "Content discusses the shift towards continuous delivery in software development, which relates to digital transformation in terms of enhancing operational efficiency and adapting organizational culture. However, it primarily focuses on software engineering practices rather than broader strategic implications of digital transformation.",
    "level": "Tertiary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses continuous delivery and deployment practices rather than Minimum Viable Products or their role in product development and market validation.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content heavily discusses software development practices and continuous delivery, without any mention or focus on AI.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, Scrum Framework, and the culture of software delivery, which are not directly related to system configuration.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and the need for frequent updates in product development, which relates to product strategy but primarily focuses on technical delivery practices and cultural changes rather than strategic planning or methodologies.",
    "level": "Tertiary"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous value delivery and mentions the Scrum framework, which relates to agile methodologies. However, it mainly focuses on the challenges and changes in software release cycles rather than directly on technical leadership practices or strategies for guiding teams.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses continuous delivery and software development practices, without a clear focus on estimation techniques or practices in Agile or Scrum.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery in software development and specific practices related to Microsoft products, with no focus on cross-functional teams or their role in Agile methodologies.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses continuous delivery and the challenges associated with it, rather than focusing on Test First Development or the principles of writing tests before code.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 50,
    "final_score": 50.0,
    "reasoning": "The content discusses the release cycle of Visual Studio and mentions Windows Phone updates, indicating a significant but not primary focus on Windows as part of a larger discussion on software development practices.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses continuous delivery and the challenges of deploying software with minimal impact, which aligns well with deployment strategies. It also mentions specific issues related to deployment frequency and risk management in releases.",
    "level": "Secondary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and Agile practices in the context of software development, specifically in relation to Microsoft's Visual Studio, which could indicate a larger organizational approach to agility. However, it primarily focuses on specific practices rather than explicitly addressing large scale agility principles.",
    "level": "Tertiary"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on software development practices and the technical aspects of continuous delivery rather than team motivation or engagement strategies.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses continuous delivery in software development, particularly in the context of Visual Studio and Team Foundation Server, with no focus on remote working practices, Agile frameworks, or collaboration tools for remote teams.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the transformation towards continuous delivery and the associated challenges, which aligns with the principles of continuous learning. However, the primary focus is on software delivery practices rather than explicitly on continuous learning strategies or team dynamics.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses problems related to software deployment and continuous delivery, which involves troubleshooting issues in the software development lifecycle. However, the primary focus is on the culture and practices of software delivery rather than explicitly diagnosing and resolving technical issues.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses software delivery practices and organizational culture, without focusing on hypothesis-driven experimentation or the systematic testing of ideas.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content references the Scrum framework and mentions the importance of delivering working software frequently, which ties into the responsibilities of a Scrum Master. However, the primary focus is more on software delivery practices rather than the specific role and responsibilities of a Scrum Master.",
    "level": "Tertiary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery and the evolution of software development practices rather than discussing transparency in Agile processes.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on continuous delivery practices and challenges in software development, with only a brief mention of Scrum frameworks but not primarily about working agreements or team norms.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-10T18:41:13",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, specifically referencing the Scrum framework and its principles. It highlights the importance of frequent software updates and addresses challenges faced by developers in implementing these practices. The mention of tools like Visual Studio and Team Foundation Server further aligns with the category, as it focuses on how developers can leverage these technologies within Agile and DevOps contexts. However, while the content is relevant, it does not delve deeply into best practices or strategies for collaboration among developers, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on continuous delivery and software development practices, with no clear emphasis on coaching or related themes.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 75,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content primarily discusses the shift towards continuous delivery in software development, referencing Agile principles such as the importance of delivering software frequently and addressing challenges related to deployment. However, while it relates closely to engineering practices, it also covers broader themes of organizational culture and attitudes towards software delivery.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the implications of outdated software delivery practices and references 'technical debt' in the context of how it affects software quality and delivery frequency, though this is not the primary focus.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses continuous delivery and software development practices but does not focus on Sprint Reviews or their details.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-10T14:52:09",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the importance of continuous delivery in software development, which aligns with product management principles, particularly in Agile and Scrum frameworks. However, it primarily focuses on technical implementation details and the challenges of deployment rather than the strategic aspects of product management. While it touches on customer needs and the necessity for frequent updates, it lacks depth in discussing methodologies or frameworks that guide product managers. Therefore, while there is some relevance, it does not fully meet the criteria for a strong alignment with the Product Management category.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the principles of continuous delivery and Agile practices, particularly in the context of software development and Scrum, but it is primarily focused on organizational change and delivery cadence rather than self-organisation of teams.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent delivery in software development, which relates to Agile principles, specifically mentioning the Scrum Framework. However, the primary focus is on Microsoft and continuous delivery practices rather than a comprehensive exploration of Agile frameworks.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content primarily discusses the importance of continuous value delivery in the context of software development, which aligns with Agile principles. It emphasizes the need for organizations to adopt Agile methodologies, particularly the Scrum framework, for more frequent delivery and improvement of software products.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses general software development practices and continuous delivery without focusing on Azure Repos specifically.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the culture of software delivery and continuous delivery practices rather than specific forecasting methods or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and minimizing disruption in software development, which aligns with Lean principles of efficiency and waste reduction, but it is primarily focused on Scrum and specific software practices.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the shift towards continuous delivery in software development, particularly within the context of Microsoft products, which aligns with the examination of trends in Agile and DevOps practices. However, it also contains a significant focus on the specifics of Visual Studio rather than a broader trend analysis.",
    "level": "Secondary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on software delivery practices and the shift towards continuous delivery, with only indirect references to Agile methodologies without a clear discussion of accountability.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses continuous delivery and Scrum practices, with no clear focus on scaling Kanban specifically.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the importance of delivering software frequently and the challenges of maintaining a continuous delivery model, which relates to throughput. Although it is primarily focused on the general shift in software development practices and specific examples from Microsoft, throughput as a concept appears as a significant aspect of the discussion.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-14T16:29:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses continuous delivery and software release cycles rather than TDD principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses continuous delivery practices and mentions Scrum in relation to delivering working software regularly, indicating a focus on Agile methodologies, though it does not explicitly center on Agile Product Management as a primary theme.",
    "level": "Secondary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses continuous delivery practices and the importance of addressing deployment challenges, which aligns with the application of Agile and DevOps methodologies. However, it primarily focuses on cultural issues and perceptions rather than specific practices or tools.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and the challenges associated with deployment processes, which can relate to platform engineering, but the primary focus is on software delivery practices and Scrum rather than internal developer platforms or enhancing developer productivity specifically.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 40,
    "non_ai_confidence": 0,
    "final_score": 36.0,
    "reasoning": "The content discusses software delivery practices and the implications of continuous delivery but does not focus on empirical evidence or decision-making processes related to Evidence-Based Management.",
    "level": "Quaternary"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the complexities involved in software delivery and the implications of continuous delivery on code quality and technical debt, making this a major but secondary theme in the context of broader software development practices.",
    "level": "Tertiary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous delivery and the cultural shifts required for frequent software updates, touching on the importance of learning from operational challenges and improving processes, although it primarily focuses on practical aspects of software delivery rather than dedicated methodologies for discovery and learning.",
    "level": "Tertiary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses continuous delivery and traditional software development practices, without clear reference to AI or automation technologies in Agile methodologies.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and the reduction of operational inefficiencies, which aligns with Lean principles. However, it primarily focuses on software development methodologies like Scrum and does not directly address broader Lean strategies.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the culture and philosophy of software development and delivery rather than specific installation and configuration processes.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on continuous delivery and challenges in the software development lifecycle, with only peripheral references to Agile practices, rather than a direct discussion on transparency and accountability.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the transition to continuous delivery and Agile practices within software development, emphasizing the need for organizations to adapt quickly to market demands through methodologies like Scrum. It highlights the importance of delivering software updates more frequently and addresses the challenges organizations face in changing their culture to support these practices.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the interplay between organizational culture, software delivery practices, and the challenges of adopting continuous delivery methods, which encompasses sociotechnical elements. However, the primary focus is on technical practices rather than a thorough exploration of sociotechnical systems.",
    "level": "Tertiary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the need for organisations to adapt their software delivery practices to keep pace with consumer demands, which aligns with fostering a culture of adaptability and continuous improvement. However, it primarily focuses on software development practices rather than broader organisational resilience strategies.",
    "level": "Secondary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-10T12:51:28",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the need for continuous delivery and the cultural shifts required for software development, which aligns with DevOps principles. It mentions the importance of frequent updates and addresses deployment challenges, indicating a conceptual alignment with DevOps practices. However, the focus on Scrum and traditional software development practices detracts from a primary focus on DevOps, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses continuous delivery in the context of the Scrum framework and software development practices, making it more relevant to Agile methodologies rather than being a purely miscellaneous discussion.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices, specifically continuous delivery and the Scrum framework, without a clear focus on decision-making processes or the principles of decision theory.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content briefly mentions involvement in Visual Studio launch events, but the majority focuses on software development practices and issues, lacking a primary focus on specific events or presentations.",
    "level": "Tertiary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses continuous delivery and the importance of optimizing software deployment processes, which relate to flow efficiency principles. However, it primarily focuses on the challenges and changes in the software development lifecycle rather than on specific techniques or metrics directly tied to flow efficiency.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses cultural factors within organizations that hinder software delivery processes and highlights the importance of addressing these human elements for effective continuous delivery. However, the focus is largely on software practices rather than primarily on team dynamics or explicit methodologies involving people.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the shift towards continuous delivery and the need for organizations to adapt their software development practices for faster feature delivery, which touches on themes of adaptability and responsiveness central to enterprise agility, but it primarily focuses on software development practices rather than a holistic view of organizational agility.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content focuses on continuous delivery practices in software development, which closely aligns with the principles of business agility such as innovation, adaptability, and responding to market demands. It discusses the need for organizations to transition from traditional long-release cycles to a more agile approach that delivers value frequently, highlighting the cultural shifts required within organizations and the role of technology in facilitating this change.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of continuous delivery and frequent updates in software development, which relates to metrics and learning through the need for data-driven decision-making and continuous improvement. However, the focus is more on practices and cultural shifts rather than specific metrics or learning methodologies.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum and continuous delivery principles, without a clear focus on Kanban methodology or its specific practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of continuous delivery in software development, outlines how Microsoft has adopted this practice, and highlights the technical challenges and solutions related to frequent software updates, thereby aligning well with the topic of technical excellence.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "While the content primarily discusses continuous delivery and software development practices, it touches on underlying complexities and challenges related to frequent updates and deployment in large applications, which aligns with themes of complexity thinking in systems management.",
    "level": "Tertiary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development practices and methodologies, specifically continuous delivery and Scrum, without a focus on psychological principles or their impact on organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "Content discusses methodologies for delivering software products, specifically emphasizing continuous delivery and the importance of frequent updates, which aligns well with product delivery practices.",
    "level": "Secondary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on software development and continuous delivery practices without discussing the principles of decentralised, adaptive, and human-centric organisational design associated with BetaCodex.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses continuous delivery and the importance of delivering value to consumers quickly, which relates to optimizing efficiency and flow of value in software development processes. However, it primarily focuses on software release practices rather than explicitly on Value Stream Management principles.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses technology products related to Agile practices, particularly around Visual Studio and its updates, but it is more focused on broader software delivery processes rather than specific product reviews or literature analysis.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses continuous delivery and how organizations can adapt their software delivery methodologies to ensure more frequent value delivery to customers. It aligns closely with Agile principles and practices, particularly in relation to delivering value through iterative updates and improvements.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses continuous delivery and mentions Team Foundation Server, which is part of Azure DevOps, but it primarily focuses on general software development challenges and practices without providing detailed insights into Azure DevOps functionalities.",
    "level": "Tertiary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and the operational aspects of Visual Studio and Team Foundation Server, without providing personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content discusses continuous value delivery in software development, mentioning Scrum and some systemic issues in traditional software release cycles, but it lacks a comprehensive exploration of Systems Thinking principles, techniques, or frameworks.",
    "level": "Quaternary"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses continuous delivery practices and the Scrum framework rather than integrating and standardizing engineering processes as defined by the One Engineering System.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T09:09:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the necessity for continuous value delivery and updates in software development, referencing Agile principles and practices like Scrum, indicating a strong connection to the Agile Product Operating Model but is primarily focused on software delivery processes.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the principles of continuous delivery and agile methodologies, highlighting how organisations like Microsoft are adopting these practices to enhance responsiveness and adaptability in software development. It emphasizes the cultural shifts necessary for embracing faster release cycles, which aligns well with the category of Organisational Agility.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses recent developments in software delivery practices, particularly focusing on Microsoft's shift towards continuous delivery and updates in Visual Studio, which aligns well with industry news related to Agile and DevOps.",
    "level": "Secondary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-14T17:35:34",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses continuous delivery, deployment strategies, and the importance of frequent updates in the context of software applications, aligning with key themes of Application Lifecycle Management. However, the primary focus is on the cultural and organizational challenges rather than systematic ALM practices.",
    "level": "Secondary"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-10T18:41:10",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of continuous delivery and the Scrum Framework, highlighting the need for frequent software updates and addressing cultural barriers within organisations. While it mentions Scrum and its principles, the focus is more on the challenges of software delivery rather than a deep exploration of Scrum or Agile methodologies. The discussion aligns with the core themes of Social Technologies but lacks comprehensive detail on the frameworks themselves.",
    "level": "Secondary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-18T11:49:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software delivery practices and technical challenges rather than leadership strategies or practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:21:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the challenges and practices of software delivery and Scrum methodologies, without a clear focus on Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:21:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and continuous delivery, with no clear focus on the application of AI in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T11:42:33",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 50,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of delivering working software frequently, which aligns with Scrum principles. It mentions the Scrum Framework's emphasis on creating deployable software at least every 30 days, indicating a direct mention of Scrum. However, the overall focus is more on continuous delivery and organisational culture rather than a detailed exploration of Scrum roles, events, or artifacts, leading to a moderate confidence score.",
    "level": "Secondary"
  }
}
