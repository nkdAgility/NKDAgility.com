{
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the technical challenges and advantages of using Git over other version control systems, focusing on uncommitted changes and workflow differences.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and the transition from StarTeam to Git, without a clear focus on enterprise agility.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not mention Scrum or its principles.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on scaling agility as a central theme.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting workflow differences and challenges, which relates to processes but is primarily focused on technical aspects of Git.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Value Stream Management.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, rather than focusing on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with only a brief mention of being onsite in Athens. Events and presentations are not central to the topic.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses issues related to version control systems, specifically Git, and does not focus on products or books.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the complexities involved in transitioning from a server-based version control system to a distributed version control system, highlighting the paradigm shift and workflow differences, but it primarily focuses on practical issues with Git rather than a deep exploration of complexity thinking.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "Content discusses the transition from StarTeam to Git, touching on version control systems and workflows, which are relevant to Azure DevOps but not the primary focus.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting the learning curve and differences in workflows, which aligns with the theme of discovery and learning, but it is primarily focused on technical issues related to Git and Visual Studio.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Kanban methodology or practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the differences between server-based and distributed version control systems, rather than focusing on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from one version control system to another, touching on aspects of workflow management, which is relevant to application lifecycle management, but it primarily focuses on Git and version control issues.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the challenges and differences in workflows between server-based and distributed version control systems, specifically focusing on Git's handling of uncommitted changes.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses technical issues related to Git and version control systems, rather than providing news or reviews.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses issues related to syncing changes in Git and the transition from a server-based version control system to Git, which involves aspects of installation and configuration, but the primary focus is on workflow challenges rather than installation or configuration specifics.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting workflow differences and the implications of using Distributed Version Control Systems (DVCS) versus Server Version Control Systems (SVCS), which relates to sociotechnical systems.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the challenges of syncing changes in Git and the impact of uncommitted changes on workflow, indicating a secondary theme related to flow efficiency in version control systems.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to Git and version control systems, with no clear focus on miscellaneous topics.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses practical techniques for managing uncommitted changes in Git, particularly in the context of transitioning from a server-based version control system to Git, highlighting specific tooling and workflows.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control to distributed version control, highlighting the benefits of Git in preventing data loss, which relates to value delivery in terms of improved workflow and code management.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git workflows, with no clear focus on organisational agility.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on AI or automation in agility.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from StarTeam to Git, highlighting workflow differences and challenges, which relates to market adaptability in terms of adapting to new systems and processes.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to Git and version control systems, with no clear focus on personal experiences or themes.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting the challenges and changes involved, but the primary focus is on technical issues related to Git and Visual Studio.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and workflows, with no clear focus on organisational psychology.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of transitioning from StarTeam to Git, rather than focusing on metrics or learning.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the challenges and workflows associated with using Git in a DevOps context, particularly in relation to version control systems.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the challenges and differences between server-based and distributed version control systems, specifically focusing on Git's handling of uncommitted changes. Transparency and accountability are not central themes in this discussion.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git, with no clear focus on Agile Product Management.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting the differences in workflows and the implications of these changes, which aligns with systems thinking as it considers the broader context and interactions between systems.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the challenges of transitioning from one version control system to another, which is relevant to product delivery, but the primary focus is on Git and its functionalities rather than the delivery aspect itself.",
    "level": "Ignored"
  }
}
