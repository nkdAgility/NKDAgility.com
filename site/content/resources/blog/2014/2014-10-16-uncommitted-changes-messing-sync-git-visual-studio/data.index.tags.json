{
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the differences between server-based and distributed version control systems, rather than focusing on decision-making processes or theories.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting workflow differences and challenges, which relates to processes involved in software development. However, it primarily focuses on technical aspects of Git rather than people or organisational processes.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from StarTeam and TFVC, without any mention of Agile frameworks.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Scrum values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Azure Boards.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on trend analysis.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of transitioning from StarTeam to Git, rather than focusing on experimentation.",
    "level": "Ignored"
  },
  "Kanban Process": {
    "category": "Kanban Process",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on the Kanban process.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git, with no clear focus on Lean Product Development principles.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control systems to distributed version control systems, highlighting the benefits and challenges, which aligns with engineering practices but is not the primary focus.",
    "level": "Ignored"
  },
  "Homepage": {
    "category": "Homepage",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on a homepage or related topics.",
    "level": "Ignored"
  },
  "Agile Community": {
    "category": "Agile Community",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from other systems, rather than focusing on Agile methodologies or community aspects.",
    "level": "Ignored"
  },
  "Value Prioritisation": {
    "category": "Value Prioritisation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on value prioritisation.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Value Stream Mapping.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from StarTeam to Git, highlighting workflow differences and challenges, which relates to market adaptability in terms of adapting to new systems and processes.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on self-organisation.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile Planning.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the decision-making process involved in handling uncommitted changes in Git, but it primarily focuses on the technical aspects of version control systems rather than decision making as a central theme.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Scaling Kanban.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and the challenges of migrating from a server-based system to a distributed one. Test automation is not a central theme.",
    "level": "Ignored"
  },
  "Organisational Transformational Mastery": {
    "category": "Organisational Transformational Mastery",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting the challenges and workflow changes involved, which relates to organisational transformation in the context of software development.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with only a brief mention of moving from one system to another, which does not centralise around Agile Transformation.",
    "level": "Ignored"
  },
  "Technical Strategy": {
    "category": "Technical Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from one version control system to another and highlights the differences in workflows, which relates to technical strategy, but the primary focus is on specific Git functionalities and user experiences.",
    "level": "Ignored"
  },
  "Agile Evolution": {
    "category": "Agile Evolution",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with only a brief mention of the transition from one system to another, which does not centralise around Agile principles.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, rather than focusing on miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Scaled Agile principles or practices.",
    "level": "Ignored"
  },
  "Agile Certification": {
    "category": "Agile Certification",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Agile methodologies or certification.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, without a clear focus on cycle time.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on working agreements.",
    "level": "Ignored"
  },
  "Agile Coaching": {
    "category": "Agile Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from StarTeam and TFVC, rather than focusing on Agile coaching principles or practices.",
    "level": "Ignored"
  },
  "Agile Pilot": {
    "category": "Agile Pilot",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, rather than focusing on Agile methodologies or practices.",
    "level": "Ignored"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on BetaCodex.",
    "level": "Ignored"
  },
  "Agile Mentoring Program": {
    "category": "Agile Mentoring Program",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from StarTeam and TFVC, without any mention of Agile methodologies or mentoring.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on team performance.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Kanban Coaching": {
    "category": "Kanban Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Kanban coaching.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of revenue or employee metrics.",
    "level": "Ignored"
  },
  "Agile Methodology": {
    "category": "Agile Methodology",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, rather than focusing on Agile methodologies.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on strategic goals.",
    "level": "Ignored"
  },
  "Nonlinear Dynamics": {
    "category": "Nonlinear Dynamics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than nonlinear dynamics.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on organisational physics.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on technical leadership.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git, with no clear focus on Agile Product Management.",
    "level": "Ignored"
  },
  "Agile Forecasting": {
    "category": "Agile Forecasting",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile forecasting.",
    "level": "Ignored"
  },
  "Agile Resource Management": {
    "category": "Agile Resource Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile resource management.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Lean Principles.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Azure Pipelines.",
    "level": "Ignored"
  },
  "Agile Predictability": {
    "category": "Agile Predictability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile methodologies or predictability.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Scrum roles, events, or practices.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the challenges and workflows associated with using Git in a DevOps context, particularly in relation to version control systems.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and Git, with no focus on employee engagement.",
    "level": "Ignored"
  },
  "Kanban Theory": {
    "category": "Kanban Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and the transition from StarTeam to Git, rather than Kanban Theory.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "Content discusses the transition from one version control system to another, highlighting workflow differences and challenges, which are relevant to application lifecycle management but not the primary focus.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on empirical process control.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the transition from server-based to distributed version control systems, with no focus on frequent releases.",
    "level": "Ignored"
  },
  "Release Planning": {
    "category": "Release Planning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and workflows, with no clear focus on release planning.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily addresses issues related to uncommitted changes in Git and how they affect syncing with a remote repository, making troubleshooting the central theme.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of backlog refinement.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on evidence-based management principles.",
    "level": "Ignored"
  },
  "Adaptive Leadership": {
    "category": "Adaptive Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on adaptive leadership principles or practices.",
    "level": "Ignored"
  },
  "Agile Apocalypse": {
    "category": "Agile Apocalypse",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile methodologies or concepts.",
    "level": "Ignored"
  },
  "Systemic Thinking": {
    "category": "Systemic Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting the differences in workflows and the implications of these changes, which aligns with systemic thinking. However, the primary focus is on Git and version control mechanics rather than a broader systemic perspective.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than focusing on remote working.",
    "level": "Ignored"
  },
  "Continuos Integration": {
    "category": "Continuos Integration",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content discusses issues related to version control and workflows in Git, but it does not primarily focus on Continuous Integration practices.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not focus on Agile planning tools.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to Git and version control systems, with no clear focus on personal experiences or themes.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and the challenges of uncommitted changes, rather than focusing on automated testing.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not mention Scrum or scaling practices.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the practical implications and workflows of using Git compared to other version control systems, highlighting the importance of managing uncommitted changes effectively.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Acceptance Test Driven Development.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses the transition from StarTeam to Git, highlighting the challenges and workflow differences, indicating a significant focus on organisational change in the context of version control systems.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not mention Scrum or its practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and Git, with no mention of product ownership or related responsibilities.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from StarTeam and TFVC, rather than Agile Project Management.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on product strategy.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the challenges of syncing changes in Git and the impact of uncommitted changes on workflow, indicating a secondary theme related to flow efficiency in version control systems.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the challenges and differences between server-based and distributed version control systems, specifically focusing on Git's handling of uncommitted changes. Transparency is not a central theme.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses the transition from one version control system to another, highlighting workflow differences and challenges, which are central to change management in software development.",
    "level": "Secondary"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses issues related to Git, version control systems, and workflows relevant to software development.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the challenges and workflows associated with using Git, particularly in the context of uncommitted changes and version control systems.",
    "level": "Secondary"
  },
  "Agile Estimation": {
    "category": "Agile Estimation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on Agile estimation.",
    "level": "Ignored"
  },
  "Agile Books": {
    "category": "Agile Books",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Agile methodologies or literature.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting workflow differences and issues related to uncommitted changes, which are relevant to system configuration but not the primary focus.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not address Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and workflows, with no clear focus on organisational culture.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses the transition from StarTeam to Git, highlighting the challenges and benefits of moving to a Distributed Version Control System, which aligns with digital transformation themes.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Sprint Review or related Scrum events.",
    "level": "Ignored"
  },
  "Predictability in Kanban": {
    "category": "Predictability in Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not address predictability in Kanban.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "Content discusses the transition from StarTeam to Git, touching on version control systems and workflows, which are relevant to Azure DevOps, but the primary focus is on Git and its functionalities rather than Azure DevOps specifically.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and Git, with no clear focus on entrepreneurship.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on technical debt.",
    "level": "Ignored"
  },
  "Lean Agile": {
    "category": "Lean Agile",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, rather than Lean Agile principles or practices.",
    "level": "Ignored"
  },
  "Kanban Flow": {
    "category": "Kanban Flow",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Kanban Flow.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Daily Scrum practices or events.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses issues related to syncing changes in Git, which is relevant to continuous integration practices, but the primary focus is on the transition from one version control system to another rather than CI itself.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical challenges and differences between version control systems, specifically focusing on Git and its workflow, rather than customer satisfaction.",
    "level": "Ignored"
  },
  "Agile Tools": {
    "category": "Agile Tools",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its comparison to StarTeam and TFVC, rather than focusing on Agile tools.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, rather than focusing on large scale agility principles.",
    "level": "Ignored"
  },
  "Agile Digital Tools": {
    "category": "Agile Digital Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses version control systems and workflows, which are relevant to Agile digital tools, but the primary focus is on Git and its functionalities rather than Agile methodologies or tools specifically.",
    "level": "Ignored"
  },
  "Agile Software Development": {
    "category": "Agile Software Development",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from other systems, rather than focusing on Agile methodologies or practices.",
    "level": "Ignored"
  },
  "Software Increment": {
    "category": "Software Increment",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control to Git, highlighting the importance of managing uncommitted changes, which relates to software increment practices, but the primary focus is on version control workflows rather than software increments themselves.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from other systems, rather than focusing on coaching or mentoring.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily discusses the challenges and advantages of using Git as a modern source control system, particularly in the context of transitioning from a server-based version control system.",
    "level": "Secondary"
  },
  "Site Reliability": {
    "category": "Site Reliability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on site reliability as a central theme.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the challenges and differences between server-based and distributed version control systems, with a focus on Git's handling of uncommitted changes. Continuous learning is not a central theme.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not focus on Scrum or product development methodologies.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting the challenges and changes in workflow, which aligns with the theme of resilience and change, but it is not the primary focus.",
    "level": "Ignored"
  },
  "Strategic": {
    "category": "Strategic",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses technical issues related to Git and version control systems, with only a brief mention of the strategic implications of moving from one system to another.",
    "level": "Ignored"
  },
  "Sprint Review Workshops": {
    "category": "Sprint Review Workshops",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Sprint Review Workshops.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile strategies.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Value Stream Management as a clear topic.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on Test Driven Development.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Ownership": {
    "category": "Agile Product Ownership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from other systems, rather than Agile Product Ownership.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on market share.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to Git and version control systems, with no clear focus on MVP concepts.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git, with no clear focus on organisational agility.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, rather than focusing on throughput.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control to distributed version control, highlighting the benefits of Git in preventing data loss, which relates to value delivery in terms of improved workflow and code management.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on scaling agility as a central theme.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily discusses issues related to Git, version control systems, and workflows in software development.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows rather than deployment strategies.",
    "level": "Ignored"
  },
  "Sprint Planning Workshop": {
    "category": "Sprint Planning Workshop",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of sprint planning or related activities.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on accountability.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and workflows, with no clear focus on team collaboration.",
    "level": "Ignored"
  },
  "Agile Product Discovery": {
    "category": "Agile Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than Agile Product Discovery.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than portfolio management.",
    "level": "Ignored"
  },
  "Agile AI": {
    "category": "Agile AI",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile methodologies or AI.",
    "level": "Ignored"
  },
  "Complexity Science": {
    "category": "Complexity Science",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on complexity science as a central theme.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, with no mention of the Definition of Ready.",
    "level": "Ignored"
  },
  "Leadership Training": {
    "category": "Leadership Training",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of leadership training.",
    "level": "Ignored"
  },
  "Kanban Training": {
    "category": "Kanban Training",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Kanban training.",
    "level": "Ignored"
  },
  "Agility": {
    "category": "Agility",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the challenges of transitioning from a server-based version control system to a distributed version control system, with a focus on Git's workflow and conflict resolution, rather than agility as a central theme.",
    "level": "Ignored"
  },
  "Agile Leader": {
    "category": "Agile Leader",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from StarTeam and TFVC, without any focus on Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Continuos Delivery": {
    "category": "Continuos Delivery",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with a focus on uncommitted changes and workflows, rather than continuous delivery practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on product backlog management.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with only a brief mention of the benefits of moving to a Distributed Version Control System (DVCS) over a Server Version Control System (SVCS).",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control to distributed version control, highlighting improvements in workflow and conflict resolution, but it primarily focuses on the technical challenges rather than continuous improvement as a central theme.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not focus on Scrum roles or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and Git workflows, with no clear focus on cross functional teams.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and workflows, with no focus on team motivation.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and Git workflows, with no mention of psychological safety.",
    "level": "Ignored"
  },
  "CI/CD": {
    "category": "CI/CD",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses issues related to version control and workflows in Git, which are relevant to CI/CD practices, but the primary focus is on the challenges of transitioning from one version control system to another rather than CI/CD itself.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Lean Thinking principles.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting the differences in workflows and the implications of these changes, which aligns with systems thinking as it considers the broader context and interactions between systems.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems and the transition from StarTeam to Git, with no clear focus on customer feedback loops.",
    "level": "Ignored"
  },
  "Evidence Based Improvement": {
    "category": "Evidence Based Improvement",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the challenges and differences between server-based and distributed version control systems, specifically focusing on Git and its workflow, rather than evidence-based improvement practices.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the technical challenges and advantages of using Git over other version control systems, focusing on workflows and conflict resolution.",
    "level": "Secondary"
  },
  "Scrum Product Management": {
    "category": "Scrum Product Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git, with no mention of Scrum or product management.",
    "level": "Ignored"
  },
  "Featured": {
    "category": "Featured",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the transition from StarTeam to Git, rather than focusing on a featured topic.",
    "level": "Ignored"
  },
  "Adaptive Strategy": {
    "category": "Adaptive Strategy",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, rather than focusing on adaptive strategies.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control systems to distributed version control systems, highlighting the differences in workflows and the implications for user understanding, which relates to sensemaking in the context of adapting to new systems.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, with no clear focus on lead time.",
    "level": "Ignored"
  },
  "Agile Scaling": {
    "category": "Agile Scaling",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile Scaling principles or practices.",
    "level": "Ignored"
  },
  "Agile Mentoring": {
    "category": "Agile Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile mentoring.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of syncing changes in Git compared to other systems, without any mention of test-first development practices.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with only a brief mention of collaboration aspects in the context of Git and server-based systems.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the challenges and practices involved in transitioning from a server-based version control system to Git, focusing on workflows and best practices in version control.",
    "level": "Secondary"
  },
  "Lean UX": {
    "category": "Lean UX",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than Lean UX principles or practices.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its handling of uncommitted changes, rather than focusing on continuous delivery practices.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses Git and version control systems, which are relevant to Azure Repos, but the primary focus is on the challenges of using Git rather than Azure Repos specifically.",
    "level": "Ignored"
  },
  "Agile Problem Solving": {
    "category": "Agile Problem Solving",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and Git, rather than focusing on Agile problem-solving methodologies.",
    "level": "Ignored"
  },
  "Agile Certifications": {
    "category": "Agile Certifications",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Agile certifications.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the operational challenges and practices involved in transitioning from a server-based version control system to Git, focusing on workflows and conflict resolution.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Windows as a primary topic.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than focusing on evidence-based leadership principles.",
    "level": "Ignored"
  },
  "Test Strategy": {
    "category": "Test Strategy",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on test strategy.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on customer retention.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and the challenges of migrating from StarTeam to Git. Site Reliability Engineering is not a central theme.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting learning experiences and workflow changes, but the primary focus is on technical issues related to Git rather than discovery and learning itself.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses technical challenges and workflows related to version control systems, with only a minor mention of the benefits of moving to a distributed system, which does not align closely with the concept of Business Agility.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the complexities involved in transitioning from a server-based version control system to a distributed version control system, highlighting the paradigm shift and workflow differences, but it primarily focuses on practical issues with Git rather than complexity thinking as a central theme.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on mentoring or guidance.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git, with no clear focus on enterprise agility.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, without focusing on deployment frequency.",
    "level": "Ignored"
  },
  "Agile Software Engineering": {
    "category": "Agile Software Engineering",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not focus on Agile methodologies or practices.",
    "level": "Ignored"
  },
  "Agile Product Validation": {
    "category": "Agile Product Validation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile product validation.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the challenges and workflows associated with using Git, particularly in the context of transitioning from a server-based version control system to a distributed one, highlighting technical concepts and practices.",
    "level": "Secondary"
  },
  "Data Driven Decisions": {
    "category": "Data Driven Decisions",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on data-driven decision-making.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of a 'Definition of Done' or related concepts.",
    "level": "Ignored"
  },
  "Agile Portfolio Management": {
    "category": "Agile Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than Agile Portfolio Management.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Behaviour Driven Development.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on product discovery.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, without any mention of hypothesis-driven development.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the challenges of synchronising changes in Git, which relates to asynchronous development, but the primary focus is on the transition from server-based to distributed version control systems.",
    "level": "Ignored"
  }
}
