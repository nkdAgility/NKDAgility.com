{
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from StarTeam and TFVC, without any mention of Agile frameworks.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Scrum values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Azure Boards.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on trend analysis.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of transitioning from StarTeam to Git, rather than focusing on experimentation.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and Git, with no clear focus on Lean Product Development principles.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control systems to distributed version control systems, highlighting the benefits and challenges, which aligns with engineering practices but is not the primary focus.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Value Stream Mapping.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on self-organisation.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile Planning.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the decision-making process involved in handling uncommitted changes in Git, but it primarily focuses on the technical aspects of version control systems rather than decision making as a central theme.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Scaling Kanban.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and the challenges of migrating from a server-based system to a distributed one. Test automation is not a central theme.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with only a brief mention of moving from one system to another, which does not centralise around Agile Transformation.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Scaled Agile principles or practices.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, without a clear focus on cycle time.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on working agreements.",
    "level": "Ignored"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on BetaCodex.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on team performance.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of revenue or employee metrics.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on strategic goals.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on organisational physics.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on technical leadership.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Lean Principles.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Azure Pipelines.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Scrum roles, events, or practices.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and Git, with no focus on employee engagement.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on empirical process control.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the transition from server-based to distributed version control systems, with no focus on frequent releases.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily addresses issues related to uncommitted changes in Git and how they affect syncing with a remote repository, making troubleshooting the central theme.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of backlog refinement.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on evidence-based management principles.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than focusing on remote working.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not focus on Agile planning tools.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and the challenges of uncommitted changes, rather than focusing on automated testing.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not mention Scrum or scaling practices.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the practical implications and workflows of using Git compared to other version control systems, highlighting the importance of managing uncommitted changes effectively.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Acceptance Test Driven Development.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses the transition from StarTeam to Git, highlighting the challenges and workflow differences, indicating a significant focus on organisational change in the context of version control systems.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and Git, with no mention of product ownership or related responsibilities.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on product strategy.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the challenges and differences between server-based and distributed version control systems, specifically focusing on Git's handling of uncommitted changes. Transparency is not a central theme.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses the transition from one version control system to another, highlighting workflow differences and challenges, which are central to change management in software development.",
    "level": "Secondary"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses issues related to Git, version control systems, and workflows relevant to software development.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the challenges and workflows associated with using Git, particularly in the context of uncommitted changes and version control systems.",
    "level": "Secondary"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition from one version control system to another, highlighting workflow differences and issues related to uncommitted changes, which are relevant to system configuration but not the primary focus.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not address Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and workflows, with no clear focus on organisational culture.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses the transition from StarTeam to Git, highlighting the challenges and benefits of moving to a Distributed Version Control System, which aligns with digital transformation themes.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Sprint Review or related Scrum events.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and Git, with no clear focus on entrepreneurship.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on technical debt.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of Daily Scrum practices or events.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses issues related to syncing changes in Git, which is relevant to continuous integration practices, but the primary focus is on the transition from one version control system to another rather than CI itself.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical challenges and differences between version control systems, specifically focusing on Git and its workflow, rather than customer satisfaction.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, rather than focusing on large scale agility principles.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its differences from other systems, rather than focusing on coaching or mentoring.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily discusses the challenges and advantages of using Git as a modern source control system, particularly in the context of transitioning from a server-based version control system.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the challenges and differences between server-based and distributed version control systems, with a focus on Git's handling of uncommitted changes. Continuous learning is not a central theme.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not focus on Scrum or product development methodologies.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Agile strategies.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on Test Driven Development.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on market share.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to Git and version control systems, with no clear focus on MVP concepts.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, rather than focusing on throughput.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on scaling agility as a central theme.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily discusses issues related to Git, version control systems, and workflows in software development.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows rather than deployment strategies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on accountability.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses issues related to version control systems and workflows, with no clear focus on team collaboration.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than portfolio management.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, with no mention of the Definition of Ready.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on product backlog management.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with only a brief mention of the benefits of moving to a Distributed Version Control System (DVCS) over a Server Version Control System (SVCS).",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and does not focus on Scrum roles or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and Git workflows, with no clear focus on cross functional teams.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical issues related to version control systems and workflows, with no focus on team motivation.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems and Git workflows, with no mention of psychological safety.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on Lean Thinking principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems and the transition from StarTeam to Git, with no clear focus on customer feedback loops.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from server-based version control systems to distributed version control systems, highlighting the differences in workflows and the implications for user understanding, which relates to sensemaking in the context of adapting to new systems.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, with no clear focus on lead time.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of syncing changes in Git compared to other systems, without any mention of test-first development practices.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with only a brief mention of collaboration aspects in the context of Git and server-based systems.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the challenges and practices involved in transitioning from a server-based version control system to Git, focusing on workflows and best practices in version control.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its handling of uncommitted changes, rather than focusing on continuous delivery practices.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses Git and version control systems, which are relevant to Azure Repos, but the primary focus is on the challenges of using Git rather than Azure Repos specifically.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the operational challenges and practices involved in transitioning from a server-based version control system to Git, focusing on workflows and conflict resolution.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no clear focus on Windows as a primary topic.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, rather than focusing on evidence-based leadership principles.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to version control systems and workflows, with no clear focus on customer retention.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git, and the challenges of migrating from StarTeam to Git. Site Reliability Engineering is not a central theme.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the transition from StarTeam to Git, and does not focus on mentoring or guidance.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to uncommitted changes in Git and the differences between server-based and distributed version control systems, without focusing on deployment frequency.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the challenges and workflows associated with using Git, particularly in the context of transitioning from a server-based version control system to a distributed one, highlighting technical concepts and practices.",
    "level": "Secondary"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses issues related to Git and version control systems, with no mention of a 'Definition of Done' or related concepts.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically Git and its workflow, without any mention of Behaviour Driven Development.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, rather than focusing on product discovery.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses issues related to version control systems, specifically the challenges of using Git compared to other systems, without any mention of hypothesis-driven development.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the challenges of synchronising changes in Git, which relates to asynchronous development, but the primary focus is on the transition from server-based to distributed version control systems.",
    "level": "Ignored"
  }
}
