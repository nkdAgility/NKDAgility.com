{
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of configuring Jenkins to work with TFS, focusing on installation and setup rather than decision-making processes or theories.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition of teams to TFS and the implications for their workflow, indicating a focus on team dynamics and processes, but it primarily centres on technical configuration.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on configuring Jenkins with TFS, with only a brief mention of TFS's capabilities related to backlog and test management, which are aspects of Agile frameworks.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical aspects of source code management and build processes, with no clear emphasis on Scrum values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, which is related to Azure DevOps, but the primary focus is on Jenkins configuration rather than Azure Boards specifically.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the transition from Jenkins to TFS and mentions aspects of test impact analysis and quality trends, but the primary focus is on the configuration process rather than a comprehensive trend analysis.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing the steps and considerations involved in the migration process, rather than discussing experimentation as a central theme.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on configuring Jenkins with TFS, with only a brief mention of the benefits of using TFS for builds and associated work items, which does not make Lean Product Development a central theme.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the technical process of configuring Jenkins with TFS, highlighting best practices and considerations for effective software engineering.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on source code management and build processes, without any clear emphasis on value stream mapping.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing market adaptability as a central theme.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing self-organisation.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition to TFS and its integration with Jenkins, touching on aspects of project management and build processes, which are relevant to Agile Planning, but the primary focus is on technical configuration rather than Agile methodologies.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the process of moving source code to TFS and the implications of this decision, but the primary focus is on the technical steps involved rather than on decision-making itself.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on the technical aspects of source code management and build processes, without a clear emphasis on Scaling Kanban.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the integration of Jenkins with TFS for build automation, including aspects of test impact analysis and the association of tests with builds, which are central to test automation.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of teams to TFS and highlights the importance of integrating source code management and build processes, which are relevant to Agile practices, but the primary focus is on technical configuration rather than a comprehensive Agile transformation strategy.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing specific steps and considerations, rather than discussing miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, which is relevant to Agile practices, but the primary focus is on technical configuration rather than Scaled Agile methodologies.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing installation and setup processes rather than cycle time metrics or analysis.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations, rather than discussing working agreements.",
    "level": "Ignored"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on the technical steps and processes involved, rather than on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition of teams to TFS and highlights features that enhance team collaboration and performance, but the primary focus is on technical configuration rather than team dynamics.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing Agile values or principles.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of configuring Jenkins to work with TFS, with no mention of revenue or employee metrics.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition to TFS and the implications of using Jenkins versus TF Build, indicating a strategic move towards a more scalable enterprise solution, but the primary focus is on technical configuration rather than strategic goals.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical steps and tools rather than organisational physics concepts.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of configuring Jenkins to work with TFS, with no clear emphasis on leadership or management aspects.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical steps and tools rather than lean principles.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content primarily discusses the integration of Jenkins with TFS, which is related to Azure DevOps and its build capabilities, making Azure Pipelines a significant theme.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, which is relevant to team collaboration and project management, but it is primarily focused on technical setup rather than Scrum team dynamics.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to integrate with TFS, which is a key aspect of DevOps practices related to continuous integration and deployment.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on technical aspects of configuring Jenkins with TFS, with no clear discussion on employee engagement.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on integrating Jenkins with TFS for build management, which is a key aspect of application lifecycle management.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical steps and tools rather than empirical process control principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing the steps and considerations involved in the migration process, rather than discussing frequent releases.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the process of configuring Jenkins to work with TFS, including potential issues encountered during the setup, which indicates a troubleshooting aspect. However, the primary focus is on the configuration process rather than troubleshooting itself.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content mentions TFS being used for Backlog and Test management, indicating a connection to backlog refinement, but the primary focus is on configuring Jenkins with TFS.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition to TFS and its benefits, including associated work items and test impact analysis, which are relevant to evidence-based management practices, but the primary focus is on technical configuration rather than management principles.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical details and processes rather than remote working as a central theme.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, which includes aspects of backlog and test management, indicating a secondary theme related to Agile planning tools.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on technical instructions for configuring Jenkins with TFS, with no significant personal themes or discussions.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses Jenkins and TFS integration, with a significant focus on build processes and mentions of test management and test impact analysis, indicating that automated testing is a major theme but not the primary focus.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical steps and tools rather than Scrum practices or scaling methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the practical steps and considerations for configuring Jenkins to work with TFS, highlighting a pragmatic approach to solving integration challenges.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on source code management and build processes, without a clear emphasis on Acceptance Test Driven Development.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition of teams from SVN to TFS, which implies a change in organisational processes and tools, but the primary focus is on technical configuration rather than the broader implications of organisational change.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on technical details and processes rather than Scrum principles or practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical steps and tools rather than the role or responsibilities of a Product Owner.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily focuses on the technical process of configuring Jenkins with TFS, with only a brief mention of the broader implications of moving to TFS and the benefits of using TF Build.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the process of moving source code to TFS and highlights the benefits of using TF Build, which directly relates to improving flow efficiency in software development.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of source code management and the implications of using TFS, touching on aspects of visibility and associated work items, but it is primarily focused on the technical process of configuring Jenkins with TFS.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the transition from SVN to TFS, highlighting the need for minimal disruption and the importance of managing change effectively during the migration process.",
    "level": "Secondary"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS, detailing steps and considerations relevant to software development practices.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS, detailing the steps to move source code and set up builds, which are essential aspects of working software development.",
    "level": "Secondary"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to integrate with TFS 2013, detailing the steps and considerations involved in the system configuration process.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical steps and tools rather than Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on technical aspects of configuring Jenkins with TFS, with no significant discussion on organisational culture.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from SVN to TFS and the integration of Jenkins with TFS, which relates to digital transformation in terms of improving development processes, but it primarily focuses on technical configuration rather than broader digital transformation strategies.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations, without discussing Sprint Reviews or related themes.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to integrate with TFS, which is a key component of Azure DevOps, and discusses the benefits of using TFS for source control and builds.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on technical aspects of configuring Jenkins with TFS, with no clear discussion or emphasis on entrepreneurship.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from SVN to TFS and highlights the limitations of Jenkins compared to TF Build, indicating a recognition of potential technical debt in the current setup.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical details and processes rather than Scrum practices or events.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to integrate with TFS for build processes, which is a key aspect of Continuous Integration.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes without addressing customer satisfaction as a clear topic.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition to TFS and its integration with Jenkins, which relates to large scale agility in terms of managing source code and builds, but the primary focus is on technical configuration rather than agility principles.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing coaching or mentoring.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS for source code management, detailing the process of moving source code and builds to TFS, which is a modern source control system.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations, rather than discussing continuous learning as a central theme.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on configuring Jenkins with TFS and does not discuss Scrum principles, roles, or events in a significant manner.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the transition from SVN to TFS, highlighting the need for minimal disruption and the eventual goal of a scalable solution, indicating a theme of change. However, the primary focus is on technical configuration rather than resilience or change as a central topic.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of source code management to TFS, which is relevant to Agile practices, but the primary focus is on technical configuration rather than Agile strategy itself.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of test management and unit tests in relation to TFS and Jenkins, but the primary focus is on configuring Jenkins with TFS rather than on Test Driven Development itself.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on technical steps and processes rather than market share or related metrics.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the process of moving source code to TFS and configuring Jenkins, which is related to the MVP concept of establishing a minimal viable product, but it is primarily focused on technical implementation rather than the MVP concept itself.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of source code management from SVN to TFS, which touches on aspects of organisational agility, but the primary focus is on technical configuration rather than agility itself.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses the process of configuring Jenkins to work with TFS, which is closely related to build throughput and efficiency in software development.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the process of configuring Jenkins to work with TFS, highlighting the benefits and implications of this integration for value delivery in software development.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of source code management to TFS and highlights the importance of integrating builds and test management, which are relevant to scaling agility, but the primary focus is on the technical setup rather than agility practices.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS, detailing the steps and considerations involved in the software development process.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS for build processes, which is a key aspect of deployment strategies.",
    "level": "Secondary"
  },
  "Sprint Planning Workshop": {
    "category": "Sprint Planning Workshop",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, with no significant discussion on sprint planning or related workshop activities.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of source code management and the implications of using TFS, which includes aspects of accountability in terms of ownership and management of builds and work items.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content discusses the transition of teams to TFS and highlights the importance of collaboration features in TFS, indicating a strong focus on team collaboration aspects.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical process of configuring Jenkins to work with TFS, focusing on source code management and build processes, rather than portfolio management.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the process of configuring Jenkins to work with TFS, with no clear focus on the Definition of Ready.",
    "level": "Ignored"
  },
  "Agility": {
    "category": "Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from SVN to TFS and highlights the importance of integrating builds and source management, which are key aspects of agile practices, but the primary focus is on technical configuration rather than agility itself.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content mentions TFS being used for Backlog and Test management, indicating a secondary theme related to product backlog management.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing innovation.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition from SVN to TFS and highlights the benefits of using TF Build over Jenkins, indicating a focus on improving processes, but the primary topic is about configuring Jenkins with TFS.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, with no significant discussion of Scrum roles, events, or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, which involves collaboration among different teams, but the primary focus is on technical configuration rather than the dynamics of cross-functional teams.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes without discussing team motivation.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of configuring Jenkins to work with TFS, with no clear focus on psychological safety.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical steps and tools rather than Lean Thinking principles.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, touching on aspects of system management and workflow, but the primary focus is on technical configuration rather than a comprehensive exploration of systems thinking.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations, with no significant discussion on customer feedback or feedback loops.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the technical process of configuring Jenkins to work with TFS, detailing installation and configuration steps, which demonstrates technical expertise.",
    "level": "Secondary"
  },
  "Scrum Product Management": {
    "category": "Scrum Product Management",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily focuses on configuring Jenkins with TFS and does not discuss Scrum or product management principles in a significant way.",
    "level": "Ignored"
  },
  "Featured": {
    "category": "Featured",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS 2013, detailing the process and considerations involved.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations rather than engaging in sensemaking or interpretation of information.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the process of configuring Jenkins to work with TFS, focusing on technical steps and tools rather than lead time or related metrics.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS and mentions test management and test impact analysis, indicating a focus on testing within the development process, but it is primarily about configuring Jenkins and TFS.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on integrating Jenkins with TFS, which is essential for team collaboration in software development.",
    "level": "Secondary"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on configuring Jenkins with TFS, detailing the engineering practices involved in source code management and build processes.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to integrate with TFS for build processes, which is a key aspect of continuous delivery.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the process of configuring Jenkins to work with TFS, which is closely related to Azure Repos as TFS is part of the Azure DevOps suite. The focus on source code management and builds indicates a strong relevance to Azure Repos.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the operational aspects of configuring Jenkins to work with TFS, detailing the steps and considerations involved in the process.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses configuring Jenkins to work with TFS 2013, which is a Microsoft product, indicating a significant focus on TFS and its integration with Jenkins, but it does not primarily focus on Windows itself.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing leadership principles or evidence-based practices.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations, without discussing customer retention as a clear topic.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on configuring Jenkins with TFS, which is more about build management and source control rather than site reliability engineering.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of source code management from SVN to TFS, which relates to improving team workflows and efficiency, a key aspect of business agility. However, the primary focus is on technical configuration rather than broader business agility concepts.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical aspects of build management and source code migration, with no significant mention of Scrum principles or practices.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes without a central theme of complexity thinking.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations, without any clear emphasis on mentoring or guidance.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition of source code management to TFS and highlights the importance of integrating builds and work item associations, which are relevant to enterprise agility, but the primary focus is on technical configuration rather than agility principles.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the process of moving source code to TFS and mentions Jenkins builds, indicating a focus on deployment processes, but it is not the primary topic.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the technical process of configuring Jenkins to work with TFS, detailing installation and configuration steps, which demonstrates a high level of technical knowledge and expertise.",
    "level": "Secondary"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on technical steps and processes rather than defining completion criteria for tasks or projects.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses configuring Jenkins to work with TFS, focusing on technical setup and integration rather than Behaviour Driven Development principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations rather than exploring product discovery concepts.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations without discussing hypothesis-driven development.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, which involves asynchronous build processes, but the primary focus is on the configuration and migration aspects rather than asynchronous development itself.",
    "level": "Ignored"
  }
}
