{
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the technical process of configuring Jenkins to work with TFS, detailing installation and configuration steps, which demonstrates technical expertise.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition of source code management to TFS and highlights the importance of integrating builds and work items, which are relevant to enterprise agility, but the primary focus is on technical configuration rather than agility principles.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition to TFS and the implications for build management, which relates to scaling agility in terms of integrating tools and processes, but it is primarily focused on the technical setup rather than agility itself.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition of teams to TFS and the implications for their workflow, indicating a focus on team dynamics and processes, but it primarily centres on technical configuration.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, highlighting aspects of build management and source control, which are relevant to value stream management, but the primary focus is on technical configuration rather than a comprehensive exploration of value stream management principles.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition to TFS and the implications for build management, which aligns with Lean principles of minimising waste and improving efficiency, but it is primarily focused on technical configuration rather than Lean methodologies.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing technical details and processes rather than events or presentations.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical process of configuring Jenkins to work with TFS, with no focus on products or books.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes without a central theme of complexity thinking.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than exploring concepts of discovery or learning.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of configuring Jenkins to work with TFS, focusing on installation and setup rather than decision-making processes or theories.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on integrating Jenkins with TFS for build management, which is a key aspect of application lifecycle management.",
    "level": "Secondary"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS, detailing the steps and considerations involved in managing source code and builds, which are central to code management and complexity.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and considerations rather than providing news or reviews.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS, detailing installation steps and configuration processes, making it central to the topic.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the integration of Jenkins with TFS, touching on team dynamics and management directives, but primarily focuses on technical configuration rather than sociotechnical systems as a central theme.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the process of moving source code to TFS and highlights the benefits of using TF Build, which directly relates to improving flow efficiency in software development.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS 2013, detailing specific steps and considerations related to this integration, rather than discussing miscellaneous topics.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on configuring Jenkins to work with TFS, detailing practical steps and tools involved in the process.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily focuses on the process of configuring Jenkins to work with TFS, which is essential for delivering value through improved build and source management.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the transition of source code management and build processes, which relates to organisational agility, but the primary focus is on technical configuration rather than agility itself.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, discussing source code management and build processes, without a clear emphasis on AI or automation in the context of agility.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes rather than discussing market adaptability.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of configuring Jenkins with TFS, with no clear focus on personal experiences or themes.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the transition from SVN to TFS, highlighting the need for minimal disruption and the eventual goal of a scalable solution, indicating a theme of change. However, the primary focus is on technical configuration rather than resilience or change as a central topic.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of configuring Jenkins with TFS, with no clear focus on organisational psychology.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition to TFS and highlights some metrics related to build processes and test impact analysis, but the primary focus is on configuring Jenkins and TFS rather than on metrics and learning itself.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the transition of source code management and the implications of using TFS, including the loss of associated change sets and work items, which touches on accountability in the context of build management.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The content primarily focuses on configuring Jenkins with TFS and does not centralise on Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on configuring Jenkins to work with TFS, detailing technical steps and processes without a clear emphasis on systems thinking principles.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the process of configuring Jenkins to work with TFS, which is a critical aspect of product delivery in software development.",
    "level": "Secondary"
  }
}
