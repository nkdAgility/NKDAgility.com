post:
  title: Create log entries in Release Management
  link: https://nkdagility.com/blog/create-log-entries-release-management/
  pubDate: Fri, 12 Dec 2014 17:13:00 +0000
  creator: MrHinsh
  guid:
    _: http://nakedalmweb.wpengine.com/?p=10975
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p class=\"lead\">I have been working through my demos for NDC London next week. And I found it almost impossible to create log entries in Release Management where I wanted.</p>\r\n<p>While in London for NDC 2014 I was in the same building as the filming of Mission Impossible 5. I worked on a TV show for my work experience at school and ended up with an <a href=\"http://www.imdb.com/name/nm4402255/\">IMDB profile</a> and what always struck me was how much time was spent getting one a few minutes or even seconds of footage. If you ever get a chance to even be in the audience for a 30 minute comedy show, be warned… you will be there for at least 6 hours to get only 25 minutes of air time.</p>\r\n<p>Sometimes the same thing happens for demos. My demo for NDC was an end to end presentation of Visual Studio ALM with VSO. For that I needed to have a full release pipeline for my application and as I just downloaded Fabirkam Fibre I had to <a href=\"http://nkdagility.com/create-release-management-pipeline-professional-developers/\">create that release pipeline</a> from scratch. While I was building this out I ran into a few issues and one that was kind of annoying was an inability to get a log to output so I could review what happened during the deployment.</p>\r\n<p>If you have a deployment script it is really easy to fail it out. All you need to do is have an error occur, or deliberately call a \"Write-Error\" command. Simples. But what about having a log of the good things that happened?</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image001\" src=\"https://nkdagility.com/wp-content/uploads/2014/12/clip_image0011.png\" alt=\"clip_image001\" width=\"804\" height=\"261\" border=\"0\" /></p>\r\n<p>If everything goes swimmingly then you get an empty space where the log should be. So how do I get an output. Well if I was creating a build script I could just have \"Write-Host\" and the build system would capture and log all the output.</p>\r\n<pre class=\"lang:default decode:true \">#### Update Web.config\r\n$config = Get-Content $destinationPathweb.config\r\n$config = $config -replace \"__connectionString__\", $connectionString\r\nSet-Content $destinationPathweb.config $config\r\nWrite-Host \"Updated web.config\"</pre>\r\n<p>\_Well lets try \"Write-Host\"…</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image002\" src=\"https://nkdagility.com/wp-content/uploads/2014/12/clip_image0021.png\" alt=\"clip_image002\" width=\"804\" height=\"496\" border=\"0\" /></p>\r\n<p>Well, that’s not good. Looks like the Release Management team forgot to pipe the output that is intended for the \"host\" to the file. While \"host\" in the normal context is normally the \"command prompt\", a script should not just fail because you are running it differently. You should always make sure that you pipe the output to the correct location for your context.</p>\r\n<p>A command that prompts the user failed because the host program or the command type does not support user interaction. Try a host program that supports user interaction, such as the Windows PowerShell Console or Windows PowerShell ISE, and remove prompt-related commands from command types that do not support user interaction, such as Windows PowerShell workflows.</p>\r\n<pre class=\"lang:default decode:true \">+At C:WindowsDtlDownloadsFabrikamFiber.WebDeploySimpleDeploy.ps1:31 char:1\r\n+ Write-Host \"destinationPath: $destinationPath\"\r\n+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nCategoryInfo :NotImplemented: (:) [Write-Host], HostException\r\nFullyQualifiedErrorId :HostFunctionNotImplemented,Microsoft.PowerShell.Commands.WriteHostCommand\r\nMoo.. That’s just a nasty error that should never happen. SO lets try a simple \"Write-Output\" shall we.\r\nWrite-Output \"applicationAnalyticsKey: $applicationAnalyticsKey\"</pre>\r\n<p>\_<img style=\"background-image: none; padding-top: 0px; padding-left: 0px; margin: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image003\" src=\"https://nkdagility.com/wp-content/uploads/2014/12/clip_image0031.png\" alt=\"clip_image003\" width=\"804\" height=\"496\" border=\"0\" /></p>\r\n<p>Dam… \"Write-Output\" just disappears into the ether. It really should end up in the output but… well… it does not.. And \"Write-Verbose\" also end up nowhere, but that is a little more expected. At this point I am at a loss and ping the product team. Really, if I write something to the output and I would see it if running from the command line I want to see it in the log file. However for RM you need to explicitly declare output by using the \"-verbose\" command to tell PowerShell to actually write the verbose statements.</p>\r\n<pre class=\"lang:default decode:true \">Write-Verbose \"applicationAnalyticsKey: $applicationAnalyticsKey\" -verbose</pre>\r\n<p>\_<img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-width: 0px;\" title=\"clip_image004\" src=\"https://nkdagility.com/wp-content/uploads/2014/12/clip_image0041.png\" alt=\"clip_image004\" width=\"804\" height=\"496\" border=\"0\" /></p>\r\n<p>Well… now I get some output and a lovely log to view for later. While I may not ever look, when I do need something it will be there. Success logs are just as important as failure ones…</p>"
  - >-
    <p class="lead">I have been working through my demos for NDC London next
    week. And I found it almost impossible to create log entries in Release
    Management where I wanted.  </p>
  post_id: '10975'
  post_date: '2014-12-12 17:13:00'
  post_date_gmt: '2014-12-12 17:13:00'
  post_modified: '2015-04-02 13:36:42'
  post_modified_gmt: '2015-04-02 12:36:42'
  comment_status: open
  ping_status: open
  post_name: create-log-entries-release-management
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _wpcf_belongs_speaking-engagements_id
    meta_value: '10365'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _thumbnail_id
    meta_value: '11141'
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1w9Pn0l
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _syn_slave_post_states
    meta_value: a:0:{}
  - meta_key: _yoast_wpseo_linkdex
    meta_value: '72'
  - meta_key: dsq_thread_id
    meta_value: '3302495582'
  - meta_key: _pl_karma
    meta_value: '1'
  - meta_key: _pagelines_gallery_slider
    meta_value: 'off'
  - meta_key: _pagelines_quote
    meta_value: ''
  - meta_key: _pagelines_link
    meta_value: ''
  - meta_key: _pagelines_video_m4v
    meta_value: ''
  - meta_key: _pagelines_video_ogv
    meta_value: ''
  - meta_key: _pagelines_video_poster
    meta_value: ''
  - meta_key: _pagelines_video_embed
    meta_value: ''
  - meta_key: _pagelines_audio_mp3
    meta_value: ''
  - meta_key: _pagelines_audio_ogg
    meta_value: ''
  - meta_key: _wpcf_belongs_consulting-engagemen_id
    meta_value: '0'
  - meta_key: _wpcf_belongs_expertise_id
    meta_value: '0'
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:1:{s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474653538;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:10811;}i:1;a:1:{s:2:"id";i:10980;}i:2;a:1:{s:2:"id";i:10970;}}}}
  - meta_key: _wpghs_github_path
    meta_value: _posts/2014-12-12-create-log-entries-release-management.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: ekit_post_views_count
    meta_value: '897'
