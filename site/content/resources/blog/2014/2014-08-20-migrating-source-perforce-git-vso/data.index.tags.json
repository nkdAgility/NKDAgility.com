{
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on decision theory concepts.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the migration process and the roles of teams involved, but the primary focus is on technical aspects of migrating from Perforce to Git.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear discussion of Agile frameworks or methodologies.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Scrum values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses migrating to Git on VSO and mentions Azure Boards in the context of team project management, but the primary focus is on the migration process and Git features.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, discussing specific steps and challenges involved in the migration rather than analysing trends in the industry.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the process of migrating source control from Perforce to Git, detailing technical steps and considerations rather than discussing experimentation as a central theme.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on lean product development principles.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the technical process of migrating from Perforce to Git, discussing best practices, challenges, and the benefits of adopting modern version control systems, which aligns with engineering excellence.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical steps and considerations rather than value stream mapping.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git and highlights the benefits of cloud infrastructure, indicating a shift in market practices and adaptability to new technologies, but it is primarily focused on technical migration steps.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on self-organisation principles.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear emphasis on Agile planning principles or practices.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the process of migrating from Perforce to Git, which involves making decisions about repository structure, dependencies, and build processes. However, the primary focus is on the technical steps rather than the decision-making process itself.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git on VSO, focusing on technical details and challenges rather than Kanban scaling.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git, with a focus on version control practices and repository management, rather than test automation.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git, which involves changes in workflows and practices that align with Agile principles, but the primary focus is on technical migration steps rather than Agile transformation itself.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with specific details about tools and methodologies, rather than discussing miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git and discusses technical aspects of version control systems, rather than addressing Scaled Agile principles or practices.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical steps and considerations rather than cycle time metrics or improvements.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical process of migrating from Perforce to Git, with no clear focus on working agreements.",
    "level": "Ignored"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git, discussing technical details and processes rather than the BetaCodex framework or its principles.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no significant discussion on team performance or dynamics.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear discussion of Agile values or principles.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no mention of revenue or employee metrics.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration to Git and VSO, highlighting benefits and strategic considerations for organisations, but it primarily focuses on the technical process rather than overarching strategic goals.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with no clear discussion or emphasis on organisational physics.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process from Perforce to Git, highlighting the need for strategic planning and understanding of workflows, which are aspects of technical leadership, but the primary focus is on the technical details of the migration itself.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, discussing specific tools, workflows, and challenges rather than Lean Principles.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the migration process to Git on VSO, which is closely related to Azure DevOps and its CI/CD capabilities, indicating a strong focus on Azure Pipelines.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content mentions teams and team structure in the context of a project but primarily focuses on the technical aspects of migrating source control.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git on VSO, with no clear focus on employee engagement.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on the migration process from Perforce to Git, discussing aspects of version control, build processes, and team project management within VSO, which are all integral to application lifecycle management.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical steps and considerations rather than empirical process control principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the migration process from Perforce to Git and the associated challenges, rather than discussing frequent releases.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses various challenges and caveats encountered during the migration process from Perforce to Git, including repository size, handling binaries, and build issues, indicating that troubleshooting is a significant theme.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than backlog refinement.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on evidence-based management principles.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses cloud infrastructure and tools that facilitate remote work, but the primary focus is on migrating source control systems rather than remote working itself.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of project management and team organisation within the context of migrating to Git and VSO, indicating a secondary theme related to agile planning.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of migrating source control from Perforce to Git, with no clear focus on personal experiences or themes.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git, with a focus on repository management and build processes, rather than automated testing.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git and does not discuss Scrum or its scaling.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the practical steps and considerations involved in migrating from Perforce to Git, emphasising the need for a thoughtful approach to version control and build processes.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than Acceptance Test Driven Development.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily discusses the migration from Perforce to Git, which involves significant changes in workflows and practices within the organisation. It highlights the need for a shift in version control philosophy and the restructuring of teams and processes, indicating a clear focus on organisational change.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of project management and team organisation in the context of a Git migration, indicating a secondary theme related to product ownership.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration from Perforce to Git and the implications for product development and team structure, indicating a strategic approach to product management, but it is primarily focused on technical migration details.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git, highlighting the benefits of Git's workflow, including local commits, merging, and the importance of repository size and performance, which are central to flow efficiency.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git and mentions data privacy concerns related to the Patriot Act, indicating a secondary theme of transparency in data handling and cloud services.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on the process of migrating from Perforce to Git, discussing the implications of this change on workflows, team structures, and project management, which are central themes in change management.",
    "level": "Secondary"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 95,
    "non_ai_confidence": 10,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on the technical process of migrating source control from Perforce to Git, detailing steps, challenges, and best practices relevant to software development.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on the process of migrating source control from Perforce to Git, detailing practical steps and considerations for implementing Git in a software development environment.",
    "level": "Secondary"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on the process of migrating source control from Perforce to Git on VSO, detailing steps and considerations that are essential for configuring the system effectively.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git on VSO, with no clear focus on Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with only brief mentions of organisational practices and preferences regarding cloud usage.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the migration from Perforce to Git and the associated benefits of moving to a cloud-based infrastructure, which aligns closely with digital transformation themes.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git, with no mention of a Sprint Review or related activities.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses a migration process for source control systems and touches on the operational aspects of a progressive company, indicating a secondary theme of entrepreneurship in the context of technology and business operations.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the challenges and considerations involved in migrating from Perforce to Git, including repository size and the need to streamline dependencies, which are related to managing technical debt. However, the primary focus is on the migration process itself rather than explicitly addressing technical debt as a central theme.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git and does not focus on Daily Scrum practices or discussions.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on the process of migrating to Git and includes detailed steps for setting up a CI build, which is a central theme throughout the migration discussion.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, discussing workflows, tools, and processes rather than customer satisfaction.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration to Git and the implications of adopting a new version control system, which relates to agility in managing large codebases and teams, but it primarily focuses on the technical aspects of migration rather than large scale agility practices.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on coaching or mentoring.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content primarily focuses on the migration process from Perforce to Git, detailing the advantages of Git as a modern source control system and providing a step-by-step guide for implementation.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, discussing specific steps and considerations involved in the migration rather than continuous learning as a central theme.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git and does not discuss Scrum practices, roles, or events.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the migration from Perforce to Git, highlighting the need for adaptation and change in workflows, which aligns with the theme of resilience and change. However, the primary focus is on technical migration steps rather than a broader exploration of resilience and change.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git and VSO, touching on aspects of team organisation and project management, which are relevant to Agile practices, but the primary focus is on technical migration details rather than Agile strategy itself.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on version control systems and related workflows, without any mention of Test Driven Development.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating from Perforce to Git on VSO, with no clear focus on market share or related metrics.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git on VSO, with a focus on technical details and challenges rather than on the concept of a Minimum Viable Product (MVP).",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git and VSO, which implies a shift in organisational practices and workflows, but the primary focus is on technical details rather than organisational agility itself.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git, which includes aspects of repository management and performance considerations, but it is primarily focused on the migration steps rather than throughput as a central theme.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on the migration process from Perforce to Git, detailing the benefits and improvements in workflow, which aligns closely with value delivery in software development.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git, highlighting the benefits of Git's workflow and the need for a more agile approach to source control, but it primarily focuses on the technical aspects of migration rather than agility itself.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "Content primarily focuses on the process of migrating source control from Perforce to Git, detailing technical steps, challenges, and best practices related to software development and version control.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on the process of migrating from Perforce to Git, detailing steps and considerations for deployment in a cloud environment, which aligns closely with deployment strategies.",
    "level": "Secondary"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on accountability as a central theme.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of team collaboration in the context of migrating to Git, particularly mentioning the involvement of different teams and the collaborative nature of Git workflows, but the primary focus is on the technical migration process.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git on VSO, with no clear focus on portfolio management.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the process of migrating from Perforce to Git, with no clear focus on the Definition of Ready.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the migration process and considerations for moving to Git, which includes aspects of team organisation and backlog management, but it is primarily focused on technical migration details.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration from Perforce to Git, highlighting the innovative aspects of adopting a new version control system and the benefits of cloud infrastructure, but it primarily focuses on the technical process of migration rather than innovation itself.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Scrum roles, practices, or methodologies.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration process involving multiple teams (Development Team and Business Team) and highlights the need for collaboration and dependency management, indicating a secondary theme of cross-functional teamwork.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear discussion on team motivation.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on psychological safety.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with a focus on practical steps and challenges involved in the migration. Lean Thinking is not a central theme.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on achieving a more efficient and robust version control system. It details technical strategies and best practices for managing source code, improving build processes, and enhancing overall software development practices, which are central themes of technical excellence.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git on VSO, including detailed steps and considerations for the migration. It does not primarily discuss or engage with the concept of sensemaking in a clear or central manner.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical process and considerations involved in migrating source control from Perforce to Git on VSO, including steps, challenges, and benefits. It does not discuss or focus on 'Lead Time' or related concepts as a primary topic.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git on VSO, focusing on technical steps and considerations for migration, rather than Test First Development or related methodologies.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git within a Visual Studio Online environment, discussing tools, scripts, and strategies for effective source control management. Collaboration tools are not a central theme of the discussion.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on engineering practices such as version control systems, repository management, and build processes. It details practical steps and considerations for engineering teams during migration, emphasizing the importance of engineering methodologies in managing and structuring source control to improve workflow and efficiency.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses the process and considerations involved in migrating source control from Perforce to Git on VSO, which includes continuous integration and deployment practices such as creating CI builds and setting up build servers. These are key components of Continuous Delivery.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git within the context of Visual Studio Online (VSO), which is now known as Azure Repos. It details the steps involved in setting up and managing repositories in VSO, making the Azure Repos service a central theme of the content.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git on VSO, focusing on operational practices such as repository management, build processes, and dependency management. It includes detailed steps and considerations for operational efficiency and effective team collaboration in a software development environment.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git within the context of Visual Studio Online (VSO), focusing on technical processes and strategies for effective version control migration. There is no significant mention or focus on Windows as a primary topic.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on technical aspects of migrating source control from Perforce to Git within a VSO environment, including detailed steps and considerations for the migration process. It does not discuss or focus on leadership strategies, decision-making processes, or the implementation of evidence-based practices in leadership roles.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git on VSO, discussing the steps, challenges, and benefits of such a migration. It does not address strategies, practices, or theories directly related to retaining customers.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the migration of source control systems from Perforce to Git within a Visual Studio Online environment, discussing technical aspects of version control systems, migration strategies, and DevOps practices. While there are mentions of build servers and cloud infrastructure, which are tangentially related to Site Reliability Engineering, these are not the central themes of the content. The primary focus is on version control and migration, not on the reliability or scalability aspects typically associated with Site Reliability Engineering.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git within a Visual Studio Online environment, focusing on technical steps and considerations rather than on Scrum methodologies or practices.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git on VSO, including detailed steps and considerations for the migration. It does not discuss or engage with complexity thinking as a primary or significant theme.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git on VSO, including detailed steps and considerations for the migration. Mentoring or guidance in a broader, educational sense is not a central theme of the content.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on technical aspects of migrating source control from Perforce to Git within a Visual Studio Online environment. It discusses tools, processes, and challenges related to source control migration and does not delve into broader themes of enterprise agility such as organizational change, agile methodologies, or business agility.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the process and considerations involved in migrating source control from Perforce to Git on VSO, focusing on technical steps and challenges. Deployment frequency is not a central theme or directly addressed in the content.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "The content primarily focuses on the detailed technical process and considerations involved in migrating source control from Perforce to Git on VSO, demonstrating a high level of technical expertise and mastery in handling complex version control systems and migration strategies.",
    "level": "Secondary"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the process of migrating source control from Perforce to Git on VSO, discussing technical steps and considerations. The 'Definition of Done' is not a central theme or a major secondary theme in the content.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects and processes involved in migrating source control from Perforce to Git on VSO, including discussions on repository management, build processes, and cloud integration. There is no mention or focus on Behaviour Driven Development or related practices.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git within a Visual Studio Online environment, discussing tools, strategies, and challenges associated with the migration. It does not focus on or significantly discuss product discovery or related processes.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git on VSO, discussing practical steps, challenges, and benefits related to version control systems and cloud integration. It does not discuss or involve hypothesis-driven development methodologies or principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the process of migrating source control from Perforce to Git, discussing technical steps and considerations. It does not primarily discuss or focus on asynchronous development methods or principles.",
    "level": "Ignored"
  }
}
