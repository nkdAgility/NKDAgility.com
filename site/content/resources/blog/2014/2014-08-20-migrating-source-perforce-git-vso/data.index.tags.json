{
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on decision theory concepts.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the migration process and the roles of teams involved, but the primary focus is on technical aspects of migrating from Perforce to Git.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear discussion of Agile frameworks or methodologies.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Scrum values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses migrating to Git on VSO and mentions Azure Boards in the context of team project management, but the primary focus is on the migration process and Git features.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, discussing specific steps and challenges involved in the migration rather than analysing trends in the industry.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the process of migrating source control from Perforce to Git, detailing technical steps and considerations rather than discussing experimentation as a central theme.",
    "level": "Ignored"
  },
  "Kanban Process": {
    "category": "Kanban Process",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than the Kanban process.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on lean product development principles.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the technical process of migrating from Perforce to Git, discussing best practices, challenges, and the benefits of adopting modern version control systems, which aligns with engineering excellence.",
    "level": "Secondary"
  },
  "Homepage": {
    "category": "Homepage",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git on VSO, with no focus on homepage-related topics.",
    "level": "Ignored"
  },
  "Agile Community": {
    "category": "Agile Community",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear discussion of Agile principles, practices, or community aspects.",
    "level": "Ignored"
  },
  "Value Prioritisation": {
    "category": "Value Prioritisation",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the benefits and considerations of migrating to Git and VSO, which implies a prioritisation of value in terms of improved workflows and efficiency, but it is primarily focused on the technical aspects of migration.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical steps and considerations rather than value stream mapping.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git and highlights the benefits of cloud infrastructure, indicating a shift in market practices and adaptability to new technologies, but it is primarily focused on technical migration steps.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on self-organisation principles.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear emphasis on Agile planning principles or practices.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the process of migrating from Perforce to Git, which involves making decisions about repository structure, dependencies, and build processes. However, the primary focus is on the technical steps rather than the decision-making process itself.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git on VSO, focusing on technical details and challenges rather than Kanban scaling.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git, with a focus on version control practices and repository management, rather than test automation.",
    "level": "Ignored"
  },
  "Organisational Transformational Mastery": {
    "category": "Organisational Transformational Mastery",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git and the associated organisational changes, but the primary focus is on technical details rather than broader organisational transformation strategies.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git, which involves changes in workflows and practices that align with Agile principles, but the primary focus is on technical migration steps rather than Agile transformation itself.",
    "level": "Ignored"
  },
  "Technical Strategy": {
    "category": "Technical Strategy",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content primarily focuses on the strategic approach to migrating from Perforce to Git, detailing the necessary steps, considerations, and benefits of adopting a new version control system.",
    "level": "Secondary"
  },
  "Agile Evolution": {
    "category": "Agile Evolution",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git, highlighting the differences in workflows and the benefits of adopting Git, which aligns with Agile principles. However, the primary focus is on the technical migration process rather than Agile methodologies themselves.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with specific details about tools and methodologies, rather than discussing miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git and discusses technical aspects of version control systems, rather than addressing Scaled Agile principles or practices.",
    "level": "Ignored"
  },
  "Agile Certification": {
    "category": "Agile Certification",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Agile certification or related themes.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical steps and considerations rather than cycle time metrics or improvements.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical process of migrating from Perforce to Git, with no clear focus on working agreements.",
    "level": "Ignored"
  },
  "Agile Coaching": {
    "category": "Agile Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, with no clear emphasis on Agile coaching principles or practices.",
    "level": "Ignored"
  },
  "Agile Pilot": {
    "category": "Agile Pilot",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git on VSO, with no clear emphasis on Agile methodologies or practices.",
    "level": "Ignored"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git, discussing technical details and processes rather than the BetaCodex framework or its principles.",
    "level": "Ignored"
  },
  "Agile Mentoring Program": {
    "category": "Agile Mentoring Program",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear discussion or emphasis on Agile mentoring or related themes.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no significant discussion on team performance or dynamics.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear discussion of Agile values or principles.",
    "level": "Ignored"
  },
  "Kanban Coaching": {
    "category": "Kanban Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git, focusing on technical details and processes rather than Kanban coaching or methodologies.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no mention of revenue or employee metrics.",
    "level": "Ignored"
  },
  "Agile Methodology": {
    "category": "Agile Methodology",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no significant discussion of Agile principles or practices.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration to Git and VSO, highlighting benefits and strategic considerations for organisations, but it primarily focuses on the technical process rather than overarching strategic goals.",
    "level": "Ignored"
  },
  "Nonlinear Dynamics": {
    "category": "Nonlinear Dynamics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git, focusing on practical steps and considerations rather than nonlinear dynamics.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with no clear discussion or emphasis on organisational physics.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process from Perforce to Git, highlighting the need for strategic planning and understanding of workflows, which are aspects of technical leadership, but the primary focus is on the technical details of the migration itself.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with no clear emphasis on Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Agile Forecasting": {
    "category": "Agile Forecasting",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than Agile forecasting principles.",
    "level": "Ignored"
  },
  "Agile Resource Management": {
    "category": "Agile Resource Management",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of team organisation and project management in the context of migrating to Git, which aligns with Agile principles, but the primary focus is on the technical migration process rather than resource management.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, discussing specific tools, workflows, and challenges rather than Lean Principles.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the migration process to Git on VSO, which is closely related to Azure DevOps and its CI/CD capabilities, indicating a strong focus on Azure Pipelines.",
    "level": "Secondary"
  },
  "Agile Predictability": {
    "category": "Agile Predictability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, with no clear discussion on Agile predictability as a central theme.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content mentions teams and team structure in the context of a project but primarily focuses on the technical aspects of migrating source control.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 92,
    "non_ai_confidence": 30,
    "final_score": 73.0,
    "reasoning": "Content primarily focuses on the migration process from Perforce to Git within a DevOps context, discussing version control, CI builds, and cloud infrastructure, which are central themes in DevOps.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git on VSO, with no clear focus on employee engagement.",
    "level": "Ignored"
  },
  "Kanban Theory": {
    "category": "Kanban Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git, focusing on technical steps and considerations rather than Kanban principles or practices.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on the migration process from Perforce to Git, discussing aspects of version control, build processes, and team project management within VSO, which are all integral to application lifecycle management.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical steps and considerations rather than empirical process control principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the migration process from Perforce to Git and the associated challenges, rather than discussing frequent releases.",
    "level": "Ignored"
  },
  "Release Planning": {
    "category": "Release Planning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, with detailed steps and considerations, rather than discussing release planning as a central theme.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses various challenges and caveats encountered during the migration process from Perforce to Git, including repository size, handling binaries, and build issues, indicating that troubleshooting is a significant theme.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than backlog refinement.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on evidence-based management principles.",
    "level": "Ignored"
  },
  "Adaptive Leadership": {
    "category": "Adaptive Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear discussion or emphasis on adaptive leadership principles.",
    "level": "Ignored"
  },
  "Agile Apocalypse": {
    "category": "Agile Apocalypse",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Agile methodologies or principles.",
    "level": "Ignored"
  },
  "Systemic Thinking": {
    "category": "Systemic Thinking",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses the migration process from Perforce to Git, highlighting the need for a systematic approach to managing dependencies and workflows, which aligns with systemic thinking principles.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses cloud infrastructure and tools that facilitate remote work, but the primary focus is on migrating source control systems rather than remote working itself.",
    "level": "Ignored"
  },
  "Continuos Integration": {
    "category": "Continuos Integration",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on the process of migrating to Git and includes detailed steps for setting up a CI build, which is a central theme in the migration discussion.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of project management and team organisation within the context of migrating to Git and VSO, indicating a secondary theme related to agile planning.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical aspects of migrating source control from Perforce to Git, with no clear focus on personal experiences or themes.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git, with a focus on repository management and build processes, rather than automated testing.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git and does not discuss Scrum or its scaling.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily focuses on the practical steps and considerations involved in migrating from Perforce to Git, emphasising the need for a thoughtful approach to version control and build processes.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than Acceptance Test Driven Development.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily discusses the migration from Perforce to Git, which involves significant changes in workflows and practices within the organisation. It highlights the need for a shift in version control philosophy and the restructuring of teams and processes, indicating a clear focus on organisational change.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git on VSO, with no clear focus on Scrum practices, roles, or events.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of project management and team organisation in the context of a Git migration, indicating a secondary theme related to product ownership.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses aspects of project management related to migrating to Git and VSO, including team structures and backlog management, but the primary focus is on the technical migration process rather than Agile methodologies.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration from Perforce to Git and the implications for product development and team structure, indicating a strategic approach to product management, but it is primarily focused on technical migration details.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git, highlighting the benefits of Git's workflow, including local commits, merging, and the importance of repository size and performance, which are central to flow efficiency.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git and mentions data privacy concerns related to the Patriot Act, indicating a secondary theme of transparency in data handling and cloud services.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 66.0,
    "reasoning": "Content primarily focuses on the process of migrating from Perforce to Git, discussing the implications of this change on workflows, team structures, and project management, which are central themes in change management.",
    "level": "Secondary"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 95,
    "non_ai_confidence": 10,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on the technical process of migrating source control from Perforce to Git, detailing steps, challenges, and best practices relevant to software development.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on the process of migrating source control from Perforce to Git, detailing practical steps and considerations for implementing Git in a software development environment.",
    "level": "Secondary"
  },
  "Agile Estimation": {
    "category": "Agile Estimation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than Agile estimation practices.",
    "level": "Ignored"
  },
  "Agile Books": {
    "category": "Agile Books",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Agile methodologies or principles.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on the process of migrating source control from Perforce to Git on VSO, detailing steps and considerations that are essential for configuring the system effectively.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git on VSO, with no clear focus on Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with only brief mentions of organisational practices and preferences regarding cloud usage.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the migration from Perforce to Git and the associated benefits of moving to a cloud-based infrastructure, which aligns closely with digital transformation themes.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git, with no mention of a Sprint Review or related activities.",
    "level": "Ignored"
  },
  "Predictability in Kanban": {
    "category": "Predictability in Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than predictability in Kanban.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily focuses on migrating source control from Perforce to Git within the context of Visual Studio Online (VSO), discussing various aspects of Azure DevOps practices and tools throughout the migration process.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses a migration process for source control systems and touches on the operational aspects of a progressive company, indicating a secondary theme of entrepreneurship in the context of technology and business operations.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the challenges and considerations involved in migrating from Perforce to Git, including repository size and the need to streamline dependencies, which are related to managing technical debt. However, the primary focus is on the migration process itself rather than explicitly addressing technical debt as a central theme.",
    "level": "Ignored"
  },
  "Lean Agile": {
    "category": "Lean Agile",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration to Git and the implications of adopting a new version control system, which aligns with Lean Agile principles, but the primary focus is on technical migration steps rather than Lean Agile methodologies.",
    "level": "Ignored"
  },
  "Kanban Flow": {
    "category": "Kanban Flow",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git on VSO, focusing on version control systems and their workflows, rather than Kanban flow specifically.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git and does not focus on Daily Scrum practices or discussions.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on the process of migrating to Git and includes detailed steps for setting up a CI build, which is a central theme throughout the migration discussion.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating from Perforce to Git, discussing workflows, tools, and processes rather than customer satisfaction.",
    "level": "Ignored"
  },
  "Agile Tools": {
    "category": "Agile Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration from Perforce to Git, which involves Agile practices and tools, but the primary focus is on the technical aspects of migration rather than Agile methodologies or tools themselves.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration to Git and the implications of adopting a new version control system, which relates to agility in managing large codebases and teams, but it primarily focuses on the technical aspects of migration rather than large scale agility practices.",
    "level": "Ignored"
  },
  "Agile Digital Tools": {
    "category": "Agile Digital Tools",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily focuses on migrating to Git and using VSO for project management, which are key aspects of Agile digital tools.",
    "level": "Secondary"
  },
  "Agile Software Development": {
    "category": "Agile Software Development",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the migration process to Git, which is relevant to Agile practices, but the primary focus is on technical migration details rather than Agile methodologies or principles.",
    "level": "Ignored"
  },
  "Software Increment": {
    "category": "Software Increment",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on the process of migrating source control from Perforce to Git, detailing steps and considerations that align with software development practices, which are integral to software increments.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on coaching or mentoring.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content primarily focuses on the migration process from Perforce to Git, detailing the advantages of Git as a modern source control system and providing a step-by-step guide for implementation.",
    "level": "Secondary"
  },
  "Site Reliability": {
    "category": "Site Reliability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration of source control systems and the implications for build processes, which are relevant to site reliability, but the primary focus is on the migration process itself rather than site reliability practices.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating from Perforce to Git, discussing specific steps and considerations involved in the migration rather than continuous learning as a central theme.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git and does not discuss Scrum practices, roles, or events.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the migration from Perforce to Git, highlighting the need for adaptation and change in workflows, which aligns with the theme of resilience and change. However, the primary focus is on technical migration steps rather than a broader exploration of resilience and change.",
    "level": "Ignored"
  },
  "Strategic": {
    "category": "Strategic",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the strategic considerations and benefits of migrating from Perforce to Git on VSO, including the implications for workflow, repository management, and cloud integration.",
    "level": "Secondary"
  },
  "Sprint Review Workshops": {
    "category": "Sprint Review Workshops",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git and does not focus on Sprint Review Workshops or related themes.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git and VSO, touching on aspects of team organisation and project management, which are relevant to Agile practices, but the primary focus is on technical migration details rather than Agile strategy itself.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the migration process from Perforce to Git, touching on aspects of workflow and team organisation, which are relevant to value stream management, but the primary focus is on technical migration details rather than value stream management itself.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on version control systems and related workflows, without any mention of Test Driven Development.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Ownership": {
    "category": "Agile Product Ownership",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with no clear discussion on Agile product ownership principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating from Perforce to Git on VSO, with no clear focus on market share or related metrics.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git on VSO, with a focus on technical details and challenges rather than on the concept of a Minimum Viable Product (MVP).",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git and VSO, which implies a shift in organisational practices and workflows, but the primary focus is on technical details rather than organisational agility itself.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration process to Git, which includes aspects of repository management and performance considerations, but it is primarily focused on the migration steps rather than throughput as a central theme.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on the migration process from Perforce to Git, detailing the benefits and improvements in workflow, which aligns closely with value delivery in software development.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the migration from Perforce to Git, highlighting the benefits of Git's workflow and the need for a more agile approach to source control, but it primarily focuses on the technical aspects of migration rather than agility itself.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 95,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "Content primarily focuses on the process of migrating source control from Perforce to Git, detailing technical steps, challenges, and best practices related to software development and version control.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily focuses on the process of migrating from Perforce to Git, detailing steps and considerations for deployment in a cloud environment, which aligns closely with deployment strategies.",
    "level": "Secondary"
  },
  "Sprint Planning Workshop": {
    "category": "Sprint Planning Workshop",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git on VSO, with no clear focus on sprint planning or related activities.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear emphasis on accountability as a central theme.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses aspects of team collaboration in the context of migrating to Git, particularly mentioning the involvement of different teams and the collaborative nature of Git workflows, but the primary focus is on the technical migration process.",
    "level": "Ignored"
  },
  "Agile Product Discovery": {
    "category": "Agile Product Discovery",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with no clear emphasis on Agile Product Discovery principles or practices.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git on VSO, with no clear focus on portfolio management.",
    "level": "Ignored"
  },
  "Agile AI": {
    "category": "Agile AI",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git on VSO, focusing on technical details and challenges rather than Agile AI principles or practices.",
    "level": "Ignored"
  },
  "Complexity Science": {
    "category": "Complexity Science",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git, focusing on practical steps and considerations rather than exploring themes related to complexity science.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the process of migrating from Perforce to Git, with no clear focus on the Definition of Ready.",
    "level": "Ignored"
  },
  "Leadership Training": {
    "category": "Leadership Training",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating source control from Perforce to Git on VSO, with no clear focus on leadership training.",
    "level": "Ignored"
  },
  "Kanban Training": {
    "category": "Kanban Training",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git on VSO, focusing on technical details and challenges rather than Kanban training or principles.",
    "level": "Ignored"
  },
  "Agility": {
    "category": "Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 44.0,
    "reasoning": "The content discusses the migration from Perforce to Git, highlighting the benefits of Git's workflow, which aligns with agile principles, but the primary focus is on the technical migration process rather than agility itself.",
    "level": "Ignored"
  },
  "Agile Leader": {
    "category": "Agile Leader",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical process of migrating source control from Perforce to Git, with no clear discussion on Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Continuos Delivery": {
    "category": "Continuos Delivery",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content primarily discusses the migration process to Git and the setup of CI builds, which are central to continuous delivery practices.",
    "level": "Secondary"
  }
}
