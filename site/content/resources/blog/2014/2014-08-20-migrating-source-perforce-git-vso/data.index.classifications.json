{
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-15T09:05:56",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the technical aspects of migrating source control from Perforce to Git, with no clear focus on Agile principles or product management practices.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-15T09:05:58",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses the practical techniques and tooling involved in migrating from Perforce to Git, including specific steps, tools, and methodologies relevant to Agile and DevOps practices.",
    "level": "Secondary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-15T09:06:00",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the migration of source control systems and the implications for developer workflows, which relates to enhancing developer productivity and optimising application management. However, it primarily focuses on the migration process rather than the broader principles of platform engineering.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-15T09:06:01",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no focus on evidence-based management principles or practices.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-15T09:06:03",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the migration of source control systems and touches on aspects of code quality and complexity, particularly in relation to managing repository size and dependencies. However, the primary focus is on the migration process rather than a deep exploration of code quality principles or complexity theory.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-15T09:06:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on the technical process of migrating from Perforce to Git, with little emphasis on learning methodologies or discovery processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-15T09:06:06",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git and does not address AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-15T09:06:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-15T09:06:09",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily focuses on the step-by-step process of migrating source code from Perforce to Git on VSO, detailing installation and configuration steps, best practices, and troubleshooting tips relevant to the migration process.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-15T09:06:10",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of migrating from Perforce to Git, with no clear focus on transparency or accountability principles within Agile teams.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-15T09:06:11",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the migration from Perforce to Git and the implications of adopting a new version control system, which can enhance an organisation's adaptability to market changes. However, the primary focus is on technical migration steps rather than broader strategies for market adaptability.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-15T09:06:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the technical aspects of migrating source control from Perforce to Git, with limited discussion on the organisational context or the interplay between social and technical systems.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-15T09:06:18",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the technical aspects of migrating source control from Perforce to Git, without a clear focus on organisational resilience or change management strategies.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-15T09:06:19",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 75.0,
    "reasoning": "The content primarily discusses the migration of source control systems and the implications of using Git, which are central to DevOps practices. It covers aspects of Continuous Integration (CI), automation in builds, and the cultural shift required for adopting new tools, aligning well with DevOps principles.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-15T09:06:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating from Perforce to Git, including specific tools and methodologies, which directly relates to Agile and DevOps practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-15T09:06:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no focus on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-15T09:06:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no reference to events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-15T09:06:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git, focusing on technical details and challenges rather than optimising work throughput or flow efficiency.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-15T09:06:28",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the migration process from Perforce to Git, touching on team dynamics and collaboration, particularly in the context of working with a client and their teams. However, the primary focus is on technical migration steps rather than a deep exploration of human factors or process methodologies.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-15T09:06:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, without addressing broader organisational agility or cultural implications.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-15T09:06:31",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the migration from Perforce to Git and the implications of this change on workflows and team structures, which relates to organisational adaptability and efficiency. However, the primary focus is on technical migration processes rather than broader principles of business agility.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-15T09:06:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical process of migrating from Perforce to Git, focusing on practical steps and challenges rather than metrics, learning, or evidence-based decision-making.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-15T09:06:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git, focusing on version control systems and related workflows, without any mention of Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-15T09:06:36",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the technical process of migrating from Perforce to Git, including best practices for repository management, CI/CD setup, and the benefits of adopting Git's node-based version control system, which aligns well with the principles of technical excellence.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-15T09:06:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, focusing on practical steps and tools rather than complexity science or its principles.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-15T09:06:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of migrating source control systems and does not address psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-15T09:06:40",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the migration process from Perforce to Git, which touches on aspects of product delivery such as planning, development, and deployment. However, the primary focus is on the technical details of migration rather than the broader methodologies and practices of product delivery.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-15T09:06:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on BetaCodex principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-15T09:06:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-15T09:06:45",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical process of migrating from Perforce to Git, with no focus on specific products or literature related to Agile or DevOps methodologies.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-15T09:06:47",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 27.0,
    "reasoning": "The content primarily discusses the technical aspects of migrating from Perforce to Git, with a focus on implementation details rather than strategies for delivering value to customers or enhancing business agility.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-15T09:06:48",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git within the context of Azure DevOps (VSO), detailing specific steps and considerations related to Azure DevOps services and CI/CD practices.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-15T09:06:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of migrating source control from Perforce to Git, with minimal personal reflection or insights.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-15T09:06:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, focusing on specific steps and challenges rather than exploring Systems Thinking principles or applications.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-15T09:06:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git and the associated technical details, rather than focusing on the principles or implementation of the One Engineering System framework.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-15T09:06:54",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of migrating source control from Perforce to Git, with no clear focus on Agile principles or product-centric development.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-15T09:06:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the technical aspects of migrating from Perforce to Git, with little emphasis on organisational agility principles or practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-15T09:06:56",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the migration from Perforce to Git, which includes insights into tools and practices relevant to DevOps. However, it primarily focuses on a technical process rather than providing a broad review or news update.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-15T09:06:58",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses aspects of migrating source control systems and the implications for application management, but it primarily focuses on the technical details of migration rather than the broader application lifecycle management practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-02-15T09:06:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git and does not focus on Scrum principles, roles, events, or practices.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content is focused on migrating source control from Perforce to Git and does not mention or discuss the Daily Scrum or relevant Scrum topics at all.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the process of migrating source code from Perforce to Git, with a focus on technical aspects and challenges involved in version control, rather than discussing the Definition of Done.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the technical details and best practices involved in migrating source control from Perforce to Git, including repository management, the benefits of using Git, and specific strategies for improving code quality and build processes. It strongly emphasizes technical methodologies relevant to software engineering excellence.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical implementation details related to migrating source control systems, rather than on methodologies or practices for identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses migration from Perforce to Git and touches on build automation, CI/CD practices in the context of source control, which are relevant to Continuous Delivery principles, but the primary focus is more on the migration process itself rather than on Continuous Delivery as a central theme.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating from Perforce to Git, without focusing on long-term strategic objectives or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on the migration process from Perforce to Git and does not discuss Lead Time or its relevance to customer delivery.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of migrating source control from Perforce to Git, with no substantial focus on organisational culture or its influence on agility and transformation.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of migrating source control systems and does not address the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical aspects of migrating source control from Perforce to Git and does not focus on portfolio management practices or methodologies.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content focuses on migrating source control from Perforce to Git and does not discuss the Product Backlog or related Agile concepts.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the technical details and processes involved in migrating source control from Perforce to Git, with little to no discussion on Agile Planning methodologies or practices.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the technical process of migrating source control from Perforce to Git, focusing on version control and build processes rather than Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical migration processes from Perforce to Git, with no focus on customer feedback mechanisms or practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the operational practices involved in migrating source control systems, particularly emphasizing techniques related to enhancing operational efficiency and process optimization in software development using Git and VSO.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the migration of source control systems and related technical details, with no focus on Scrum Team dynamics, roles, or collaboration practices.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the technical aspects of migrating source control systems and offers practical steps for implementation, without addressing Agile principles, values, or the broader implications of Agile as a mindset.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the technical aspects of migrating from Perforce to Git, with specific instructions and considerations rather than on strategy development or alignment within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no clear focus on validating product ideas or user feedback.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical migration of source control systems and does not focus on Agile transformation principles, methodologies, or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical migration processes and tools related to version control without mentioning mentoring or coaching aspects.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses source control migration from Perforce to Git and associated workflows, with no clear focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses technical details about migrating source control systems rather than focusing on team performance, collaboration, or Agile practices.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the migration process from Perforce to Git and aspects of version control without focusing on the Agile Increment concept or its significance in delivering software increments.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content focuses on migrating from Perforce to Git and discusses repository management, build processes, and source control strategies, without any mention or discussion of Acceptance Test Driven Development or acceptance criteria.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git, covering aspects of version control systems, Git's features, repository management, and CI/CD practices, making it a substantial discussion on software development practices.",
    "level": "Primary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the process of migrating source control from Perforce to Git, without a clear focus on Agile Project Management principles, methodologies, or practices.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical aspects of migrating source control from Perforce to Git, without focusing on Agile values or principles.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git and the technical details associated with version control, which does not focus on Scrum principles, roles, practices, or the Scrum Framework.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the process of migrating from Perforce to Git, covering various aspects of version control practices such as repository management, commit processes, dependency handling, and the advantages of using Git. It details methodologies and tools relevant to modern source control, making it a central theme.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses migrating source control from Perforce to Git, focusing on practical steps and considerations involved in this process, rather than principles of empirical process control or Agile methodologies.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the technical aspects of migrating source code from Perforce to Git on VSO without reference to Scrum Values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses migrating from Perforce to Git within Visual Studio Online (VSO) and does not focus on Azure Boards or its functionality in Agile project management.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses migrating from Perforce to Git and specifics of version control systems, rather than focusing on collaboration tools or practices related to Agile teams.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical aspects of migrating source control from Perforce to Git, lacking a clear focus on organisational change strategies or frameworks.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with no relevance to Lean Startup principles, MVPs, or iterative learning processes.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git and the technical details involved, rather than focusing on frequent software releases or continuous delivery principles.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the technical details of migrating source control from Perforce to Git, without a focus on customer satisfaction or related strategies.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses migrating source control from Perforce to Git and the technical steps involved, without any reference to Scrum principles or practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on technical aspects of migrating from Perforce to Git, without discussing evidence-based leadership principles or data-driven decision making.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of migrating source control systems and does not mention psychological safety or its relevance to team dynamics or workplace culture.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses migrating from Perforce to Git and managing source control within a development environment, without focusing on scaling agile practices across an organization.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the technical process of migrating from Perforce to Git and various best practices related to version control and build processes, which are relevant to engineering practices. However, while it touches on some engineering excellence themes, it primarily focuses on migration specifics and cloud service benefits rather than a comprehensive discussion on engineering excellence as a whole.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical aspects of migrating source control from Perforce to Git and does not discuss revenue metrics, productivity analysis, or financial efficiency.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses migrating source control from Perforce to Git and technical steps involved, with no clear focus on asynchronous development practices or principles.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-15T10:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical aspects of migrating source control systems and does not discuss systems thinking or organizational dynamics.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical migration from Perforce to Git and does not focus on customer retention strategies or topics.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily focuses on practical problem-solving strategies related to migrating source control systems, emphasizing real-world applications of Git principles, and outlining specific steps and considerations, which align well with the concept of Pragmatic Thinking.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git and does not focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical details and processes for migrating source control systems rather than focusing on the measurement or enhancement of an organization's ability to innovate.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily focuses on migrating source control from Perforce to Git, discussing technical issues and procedures rather than Scrum principles, roles, or product development practices.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on migrating source control from Perforce to Git and discusses technical steps and tools involved in the migration process without reference to scaling Agile practices or enterprise-level coordination among teams.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical processes related to migrating source control systems without addressing employee engagement or related human aspects.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control from Perforce to Git, with focus on tools and workflows rather than Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on migrating source control from Perforce to Git and discusses specific practices and strategies related to version control and build processes, without any emphasis on test automation.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical aspects of migrating source control systems rather than focusing on entrepreneurial principles, innovation, or the entrepreneurial process.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the migration of source code from Perforce to Git, which involves operational software aspects and practices related to software development and version control. While it's not solely focused on working software, it addresses processes that support software functionality.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses migration strategies and technical details of moving from Perforce to Git and does not focus on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content discusses creating a CI build as a crucial step after migrating code to Git, and emphasizes the importance of maintaining build integrity and efficiency, which aligns closely with CI principles.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical aspects of migrating source control systems from Perforce to Git, without any focus on market share strategies, competitive positioning, or related themes.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical aspects of migrating source control systems and does not address Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source code from Perforce to Git, focusing on implementation details and specific tools rather than interpreting complexity or decision-making strategies in organizational contexts.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses migrating source control from Perforce to Git, with a focus on version control practices rather than reliability engineering principles.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on the technical process of migrating from Perforce to Git without discussing hypothesis formulation, experimentation, or data-driven decisions relevant to product development.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical process of migrating from Perforce to Git on VSO, focusing on practical steps, tools, and considerations rather than structured, evidence-based decision-making methodologies.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on migrating source control systems and outlines steps and considerations related to Git and VSO, which does not align with Lean Principles about waste reduction and value maximization.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses primarily on the technical aspects of migrating source code from Perforce to Git and setting up source control, with little emphasis on release management strategies or practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical process of migrating source control systems, with no focus on the role, responsibilities, or practices of a Product Owner in Agile or Scrum.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the migration process from Perforce to Git, focusing on version control principles and tools. There are no clear discussions or in-depth analysis regarding Cycle Time, its measurement, or its implications in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses migration to Git within Azure DevOps (formerly VSO), and includes mention of creating a CI build, which relates to Azure Pipelines. However, the primary focus of the content is on the Git migration process rather than on Azure Pipelines itself.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the migration process from Perforce to Git and the implications of using Git, rather than focusing on deployment frequency or strategies to optimize deployment intervals.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily focuses on the technical aspects of migrating source control from Perforce to Git, without discussing change management strategies, stakeholder engagement, or cultural adaptability.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses aspects of managing teams and their work environments during the migration to Git, indicating some focus on team dynamics but primarily revolves around technical details of source control migration.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses migrating source control from Perforce to Git and the associated technical challenges, rather than Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the migration from traditional source control to Git as part of adopting modern cloud and DevOps practices. It relates to strategic adoption of digital tools to improve operational efficiency and workflow, which aligns with themes of digital transformation. However, it focuses more on technical migration processes than broader strategic implications.",
    "level": "Secondary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily about migrating source control systems, specifically from Perforce to Git on VSO, and does not discuss MVP concepts or methodologies.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content focuses on the migration of source control systems and practical Git usage, with no discussion of AI or its applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of migrating source control systems, including setup, configuration, and management of repositories, which aligns with system configuration processes, although the main focus is on migration strategies.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical implementation details of migrating source control systems rather than focusing on product strategy methodologies or frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on technical aspects of migrating from Perforce to Git and does not discuss technical leadership, team dynamics, or agile practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical details of migrating code from Perforce to Git and does not address estimation practices in Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the technical aspects of migrating source control systems and does not focus on cross-functional teams or their role within Agile methodologies.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses migrating source control from Perforce to Git and related practices, without any focus on Test First Development or writing tests prior to code implementation.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses migrating from Perforce to Git in the context of Visual Studio Online, with a focus on Git workflows and cloud infrastructure, rather than Windows operating system topics.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on migrating source control from Perforce to Git, discussing tools and processes related to version control rather than deployment strategies. The methodology of deploying software into production is not addressed.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical details related to migrating source control from Perforce to Git, without engaging in Agile principles or scaling practices relevant to large organizations.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical migration processes and challenges related to source control systems without focusing on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the technical aspects of migrating source control systems and does not focus on remote working practices, collaboration challenges, or Agile methodologies.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical details and processes of migrating source control from Perforce to Git, with minimal focus on principles or practices related to Continuous Learning, team improvement, or a growth mindset.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content primarily discusses the process of migrating source code from Perforce to Git, with extensive details on identifying and addressing common issues encountered during this migration, such as repository size concerns and build errors. However, it also includes broader discussions about workflows and conceptual explanations about source control systems, making troubleshooting a secondary but significant theme.",
    "level": "Secondary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating from Perforce to Git, focusing on practical steps and challenges without mentioning hypothesis-driven experimentation or its integration in Agile workflows.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content discusses technical aspects of migrating source control from Perforce to Git, without any focus on Scrum Master roles or Scrum practices.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical aspects of migrating source control rather than discussions on transparency in Agile processes or team dynamics.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily focuses on technical aspects of migrating source control systems rather than discussing working agreements or teamwork norms.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the process and considerations for migrating source control from Perforce to Git, which relates to modern software development practices, including version control and CI/CD principles in the context of software development teams.",
    "level": "Secondary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on technical migration processes related to source control and does not address coaching techniques, team dynamics, or development facilitation.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses aspects of version control and migration from Perforce to Git, including some best practices related to source control management, repository management, and automation of builds. However, it is more focused on migration specifics than on general Agile engineering practices.",
    "level": "Secondary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git, including repository management and build processes, rather than discussing the management or implications of technical debt.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects and processes of migrating source code from Perforce to Git, which is unrelated to Sprint Review discussions.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the technical aspects of migrating source control from Perforce to Git, including implementation details and specific workflows, rather than focusing on product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical aspects of migrating from Perforce to Git on VSO, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses migrating source control from Perforce to Git, focusing on technical aspects of version control rather than Agile frameworks or methodologies.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical practices related to migrating source control systems from Perforce to Git, with no significant discussions on Agile methodologies or strategy.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the migration of source control from Perforce to Git within the Visual Studio Online (VSO) context, including practical steps on creating Git repositories in VSO, which ties directly to Azure Repos functionalities and best practices.",
    "level": "Secondary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the technical aspects of migrating source control from Perforce to Git and does not focus on forecasting methodologies, techniques, or practices relevant to Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily focuses on the technical aspects of migrating source control from Perforce to Git and the tools involved, rather than discussing Lean principles or product development methodologies.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the technical steps and challenges involved in migrating from Perforce to Git on Azure DevOps, rather than analyzing trends in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the technical process of migrating source code from Perforce to Git, without focusing on team dynamics, ownership, or the principles of accountability in Agile.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses migrating from Perforce to Git and focuses on version control practices rather than Kanban principles or scaling systems in large organizations.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the technical aspects of migrating from Perforce to Git, detailing procedures and challenges without discussing the measurement or optimization of work completion rates.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-15T10:22:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on migrating source control from Perforce to Git and discusses version control workflows, not on Test Driven Development principles or practices.",
    "level": "Ignored"
  }
}
