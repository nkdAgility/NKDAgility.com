post:
  title: Professional Scrum teams build software that works
  link: https://nkdagility.com/blog/professional-scrum-teams-build-software-works/
  pubDate: Thu, 03 Dec 2020 14:20:00 +0000
  creator: MrHinsh
  guid:
    _: https://nakedalmstage.wpengine.com/?p=22774
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - >-
    <!-- wp:paragraph -->

    <p>I am always surprised at the number of teams that release undone work to
    production. I understand that one may need a few sprints, or many if you
    inherited something nasty, to pay back that debt, but if it's more then you
    are not a <a
    href="/blog/scrum-tapas-importance-professionalism/">Professional Scrum
    Team</a>. The sheer amount of software that I have that is buggy, slow, or
    just not finished makes me think that there are few professional <a
    href="/the-2020-scrum-guide/#scrum-team">Scrum Teams</a> out there!</p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-tl-dr">TL;DR;</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>Every organisation has the right to hold their <a
    href="/the-2020-scrum-guide/#developers">Developers </a>accountable for the
    quality, but never quantity, of the software that they build. Every <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/"></a><a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developer</a>
    should pursue engineering excellence through DevOps practices, automation,
    and rigorous attention to detail for every release. Working software builds
    trust with your users and promotes your brand, faulty software encourages
    distrust and hurts your reputation. Defective software and technical debt
    are the causes of the current death grip that organisations have to
    traditional Taylorism based management techniques.</p>

    <!-- /wp:paragraph -->


    <!-- wp:quote -->

    <blockquote class="wp-block-quote"><p>Ultimately if your organisation will
    not let you build software any way you please its because of the shit that
    you have been trying to get away with delivering in the past. You have work
    to do to build trust again.</p></blockquote>

    <!-- /wp:quote -->


    <!-- wp:paragraph -->

    <p>Treat your team to a <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/">Professional
    Scrum Developer</a> class to get them up to speed.</p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-scrum-teams-build-quality-software-that-works">Scrum teams build
    quality software that works</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>Working software is software that is free from fault or defect.
    Developers are primarily accountable for the quality and delivering a usable
    increment. While they are also responsible for value delivery, the
    accountability for that lies with the <a
    href="/the-2020-scrum-guide/#product-owner">Product Owner</a>. That means
    that if there is a choice between delivering value that lacks quality or
    providing less value that is of higher quality, <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/"></a><a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    should always choose quality.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>Since "rules are for the guidance of wise people, and the obedience of
    fools" I am going to caveat that statement for those that like to latch onto
    absolutes. Since any software that you build is an organisational asset, and
    all assets are attributed to the value of your company then that software
    must exist on a balance sheet somewhere. If you as the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    decide to cut quality to make a delivery do you immediately speak to the CFO
    so that they can accurately reflect that loss of value on the companies
    balance sheet? Because if you don't, then knowing or not there is a danger
    that your organisation is committing fraud by inaccurately reflecting the
    value of your software! Ultimately the decision to cut quality should only
    be taken with the full consent and understanding of your executive
    leadership team.</p>

    <!-- /wp:paragraph -->


    <!-- wp:quote -->

    <blockquote class="wp-block-quote"><p>The decision to cut quality is not one
    that the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>,
    the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#product-owner">Product
    Owner</a>, or IT management are able to take, it is reserved for executive
    leadership alone.</p></blockquote>

    <!-- /wp:quote -->


    <!-- wp:heading -->

    <h2 id="h-quality-software-is-not-about-expectations">Quality software is
    not about expectations!</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>Working software is software that is free from fault or defect, but it
    does not necessarily meet the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#product-owner">Product
    Owner's</a> or stakeholders expectations.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>It is just not possible for everyone's expectations to be understood let
    alone met, and thus it is unrealistic to expect the <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/"></a><a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    to deliver on them. At the end of every <a
    href="/the-2020-scrum-guide/#the-sprint">Sprint</a> we have a <a
    href="/the-2020-scrum-guide/#sprint-review">Sprint Review</a> where we
    invite stakeholders, and the <a
    href="/the-2020-scrum-guide/#scrum-team">Scrum Team</a>, to pause and
    reflect on the <a href="/the-2020-scrum-guide/#product-backlog">Product
    Backlog</a> based on that which was delivered. There you can explore the
    difference between expectation and delivery and then update the <a
    href="/the-2020-scrum-guide/#product-backlog">Product Backlog</a> to reflect
    that difference. The <a
    href="https://nkdagility.com/the-2020-scrum-guide/#scrum-team">Scrum
    Team</a> should continuously be investigating the difference between what
    they delivered and stakeholders expectations so that they can close that gap
    as much as possible, so while they are responsible for meeting expectations,
    they can't be held accountable.</p>

    <!-- /wp:paragraph -->


    <!-- wp:quote -->

    <blockquote class="wp-block-quote"><p>The Development Team consists of
    professional <a
    href="https://nkdagility.com/training/audiences/developers/">Developers</a>&nbsp;that
    are the people in the&nbsp;<a
    href="https://nkdagility.com/training/audiences/teams/">Scrum
    Team</a>&nbsp;that are committed to creating any aspect of a usable
    Increment each Sprint. The specific skills needed by the&nbsp;<a
    href="https://nkdagility.com/training/audiences/developers/">Developers</a>&nbsp;are
    often broad and will vary with the domain of work.</p><cite>-<a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">The 2020
    Scrum Guide</a></cite></blockquote>

    <!-- /wp:quote -->


    <!-- wp:paragraph -->

    <p><a href="/the-2020-scrum-guide/">The Scrum Guide</a> very deliberately
    does not tell you how to build working software. It only states that its
    delivery is the accountability and accountability, and responsibility of the
    <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/"></a><a
    href="https://nkdagility.com/training/audiences/developers/">Developers</a>
    If you don't have working software, then you are not yet doing Scrum,
    although you might be working towards it.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>So, to define working software we have to look at what working software
    is not:</p>

    <!-- /wp:paragraph -->


    <!-- wp:list {"ordered":true} -->

    <ol><li><strong>Known errors or exceptions</strong> - if you find a bug then
    fix it. If it's too big, then raise it with the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#product-owner">Product
    Owner</a>, and get it on the <a
    href="/the-2020-scrum-guide/#product-backlog">Product Backlog</a>. To much
    time is spent managing rather than fixing bugs. Just fix
    them.</li><li>Manual Tests - if you have manual tests then you are already
    working towards software that does not work, or that you struggle to
    deliver. It is unsustainable to have any manual testing, so get
    automating.</li><li>Manual pipelines - in 2017 no-one should be building
    production code on their local computer, never mind shipping it to
    production from there. Even if all your build does is package up some files,
    and push them to an FTP location. Automate your build process... If you have
    a person that has to do something more than approving between code and
    production, then you should look to automate that process away. Humans make
    mistakes, and humans miss stuff. At least with an automated process if not
    continuous delivery, you get consistency, and you can increase the
    complexity over time for consistency. Make sure that you automate both your
    build and release pipelines.</li><li>No Source Control â€“ Yes, I still meat
    organisation with no Source Control, or no control over it. I wrote Getting
    started with modern source control and DevOps for just that reason. If you
    don't even have source control, whatever you are developing, then you need
    to get help and quick. The business risks that are exposed by not having it
    are just too big.</li><li>Lack of feature flags â€“ It is a fundamental
    fallacy of the rejected backlog item, and your engineering team is going to
    have to figure out how to release at the end of every sprint (or every
    commit) regardless of the quality of the PBIâ€™s being worked on. Hide
    features that are not completed behind feature flags so that they are not
    visible to end-users, but your code can still be shipped.</li></ol>

    <!-- /wp:list -->


    <!-- wp:paragraph -->

    <p>The other name for the things that make it difficult to get to working
    software; Technical Debt. All of the things listed above are forms of
    Technical Debt, but the biggest form is just poor quality code. Code that is
    not tested or would not meet even a cursory code review by another software
    engineer.</p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-what-happens-if-developers-are-not-accountable-for-quality">What
    happens if Developers are not accountable for Quality?</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>If the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    are not held accountable for quality why do you believe that you have it?
    Quality is one of those hidden measures in software that can be there or
    not, and you would not know unless you were using that product in anger. If
    you put pressure to deliver on a <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/"></a><a
    href="https://nkdagility.com/training/audiences/developers/">Developers</a>,
    they will consistently and increasingly cut quality to meet whatever
    ridiculous deadline you give them.</p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-use-scrum-to-inspect-and-adapt-empirically">Use Scrum to Inspect
    and Adapt empirically</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>Every organisation needs to focus on delivering quality working software
    that is of use to its customers. The entire <a
    href="/the-2020-scrum-guide/#scrum-team">Scrum Team</a> is accountable and
    then works together over many iterations, experimenting and continuously
    improving, to deliver the best possible outcome in the circumstances. So
    instead of being an amateur team, be a team of Professionals that deliver
    working software because that is what your organisation and your customers
    deserve. If you are having a hard time delivering then discuss your options
    anytime, but especially at your Sprint Retrospective, and figure out what
    actionable improvement you can make that will help you pay back some of your
    technical debt and move forward. Once such step could be making sure that
    your <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/"></a><a
    href="https://nkdagility.com/training/audiences/developers/">Developers</a>
    at least understand this with a <a
    href="https://nkdagility.com/training/courses/professional-scrum-developer-training/">Professional
    Scrum Developer</a> course.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>Use empiricism to Inspect and Adapt with Scrum.</p>

    <!-- /wp:paragraph -->
  - ''
  post_id: '22774'
  post_date: '2020-12-03 14:20:00'
  post_date_gmt: '2020-12-03 14:20:00'
  post_modified: '2020-12-04 12:51:38'
  post_modified_gmt: '2020-12-04 12:51:38'
  comment_status: open
  ping_status: open
  post_name: professional-scrum-teams-build-software-works
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _wpcom_is_markdown
    meta_value: '1'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _wpcf_belongs_expertise_id
    meta_value: '11121'
  - meta_key: _thumbnail_id
    meta_value: '22775'
  - meta_key: pl_magazine_format
    meta_value: ''
  - meta_key: _yoast_wpseo_primary_category
    meta_value: '631'
  - meta_key: _yoast_wpseo_primary_marketing-category
    meta_value: '612'
  - meta_key: _yoast_wpseo_content_score
    meta_value: '30'
  - meta_key: _yoast_wpseo_focuskeywords
    meta_value: '[]'
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: dsq_thread_id
    meta_value: '6337441760'
  - meta_key: _wpbitly
    meta_value: http://nkdagility.net/2HepWlA
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 5.0.1
  - meta_key: _wpv_contains_gutenberg_views
    meta_value: ''
  - meta_key: kamy_acc_user_role
    meta_value: a:0:{}
  - meta_key: kamy_acc_group_child
    meta_value: '[]'
  - meta_key: kamy_acc_group_default_filed
    meta_value: '[]'
  - meta_key: _yoast_wpseo_keywordsynonyms
    meta_value: '[""]'
  - meta_key: _wp_page_template
    meta_value: default
  - meta_key: ekit_post_views_count
    meta_value: '3511'
  - meta_key: _toolset_associations_audience-post
    meta_value: >-
      {!{https://nakedalmstage.wpengine.com/?post_type=audience&#038;p=44703}!}
      +
      {!{https://nakedalmstage.wpengine.com/blog/audience-post/audiences-posts-44703-22774/}!},
      {!{https://nakedalmstage.wpengine.com/?post_type=audience&#038;p=44705}!}
      +
      {!{https://nakedalmstage.wpengine.com/blog/audience-post/audiences-posts-44705-22774/}!}
  comment:
  - comment_id: '14399'
    comment_author: David V. Corbin
    comment_author_email: david.corbin@dynconcepts.com
    comment_author_url: ''
    comment_author_IP: 65.35.100.58
    comment_date: '2017-12-08 20:39:00'
    comment_date_gmt: '2017-12-08 20:39:00'
    comment_content: >-
      Key to this topic is really determining what "Free from fault or defect"
      really means for a given situation. Lets look at performance - something
      that rarely has a set of specifications defined.


      What about a "slow web page"?  What is meant by "Slow" (I am sure someone
      would not be happing if a shipping cart displayed "please wait" for 24
      hours!)


      What about a low level function in a real-time application? Is an
      implementation that takes 1uS "defective" when there is an implementation
      that can take 800nS?  [this is from a real case, were that difference
      caused a failure in the field!]


      Establishing these boundaries and having them communicated is a key
      component. Perfection can never be achieved - appropriate quality must be
      the practical goal.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '3653220554'
  - comment_id: '14400'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nkdagility.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 185.69.144.52
    comment_date: '2017-12-08 21:01:00'
    comment_date_gmt: '2017-12-08 21:01:00'
    comment_content: >-
      Ohhh, how about a post on Defenition of Done... Yes, deciding what is on
      your defentioion of done is hard, and it should always be increasing...
      That's where speed exists..
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14399'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '3653220554'
    - meta_key: dsq_post_id
      meta_value: '3653255014'
  - comment_id: '14401'
    comment_author: David V. Corbin
    comment_author_email: david.corbin@dynconcepts.com
    comment_author_url: ''
    comment_author_IP: 65.35.100.58
    comment_date: '2017-12-08 21:06:00'
    comment_date_gmt: '2017-12-08 21:06:00'
    comment_content: >-
      "Definition of Done" is the top level. Typically I see things like "test
      pass", etc. All of these are good things.


      From a pragmatic (i.e. empirical, experienced based) perspective I find
      that having a distinct "Definition of Quality" which can be highly
      technical as a distinct artifact (with different ones appropriate under
      different conditions) has value.


      When this implementation is used, the DoD contains "Software has met the
      requirements of the (Appropriate) Definition of Quality.


      In effect, just a refactoring from a single artifact.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14400'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '3653255014'
    - meta_key: dsq_post_id
      meta_value: '3653263347'
  - comment_id: '14402'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nkdagility.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 81.108.5.47
    comment_date: '2017-12-09 13:41:00'
    comment_date_gmt: '2017-12-09 13:41:00'
    comment_content: >-
      I disagree only in that the DoD is your Definition of Quality and should
      mirror Releasable.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14401'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '3653263347'
    - meta_key: dsq_post_id
      meta_value: '3654112845'
  - comment_id: '14403'
    comment_author: David V. Corbin
    comment_author_email: david.corbin@dynconcepts.com
    comment_author_url: ''
    comment_author_IP: 65.35.100.58
    comment_date: '2017-12-09 13:58:00'
    comment_date_gmt: '2017-12-09 13:58:00'
    comment_content: >-
      I have some further information at:
      http://www.dynconcepts.com/quality-software-know-want/


      I agree about the "mirror" part, but have repeatedly found that if the top
      level DoD artifact gets too deep then it is less consumable by the
      necessary people. Additionally, by encapsulating and referencing it is
      possible (and I believe a good thing) to have a consistent (top level) DoD
      with the details as appropriate.


      I can just imagine something along the lines of "For method with a
      cyclomatic complexity exceeding X, the number of statements within a
      partition should not exceed Y" [probably with a chart of X, Y values and a
      third column with impact/risk analysis." being *directly* in the DoD.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14402'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '3654112845'
    - meta_key: dsq_post_id
      meta_value: '3654128545'
  - comment_id: '14412'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nkdagility.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 81.108.5.47
    comment_date: '2017-12-10 13:15:00'
    comment_date_gmt: '2017-12-10 13:15:00'
    comment_content: |-
      Whats wrong with:
      - Must meet acceptance criteria
      - Must meet organisational Coding Guidelines [link]
      - Must meet organisational UI guidelines [link]
      - All acceptance Tests pass
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14403'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '3654128545'
    - meta_key: dsq_post_id
      meta_value: '3655485206'
  - comment_id: '14426'
    comment_author: Dew Drop - December 11, 2017 (#2621) - Morning Dew
    comment_author_email: ''
    comment_author_url: https://www.alvinashcraft.com/2017/12/11/dew-drop-december-11-2017-2621/
    comment_author_IP: 168.62.48.19
    comment_date: '2017-12-11 12:32:28'
    comment_date_gmt: '2017-12-11 12:32:28'
    comment_content: >-
      [&#8230;] Professional Scrum teams build software that works and You are
      doing it wrong if you are not using test first and A better way than
      staggered iterations for delivery (Martin Hinshelwood) [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1512995548.967553;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1513079828.509937;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14427'
    comment_author: David V. Corbin
    comment_author_email: david.corbin@dynconcepts.com
    comment_author_url: ''
    comment_author_IP: 65.35.100.58
    comment_date: '2017-12-11 16:25:00'
    comment_date_gmt: '2017-12-11 16:25:00'
    comment_content: >-
      Absolutely nothing. In fact the "[link]" approach is exactly what I was
      trying to communicates - as opposed to having all of the details directly
      in one document.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14412'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '3655485206'
    - meta_key: dsq_post_id
      meta_value: '3657188780'
  - comment_id: '14432'
    comment_author: The fallacy of the rejected backlog item
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/the-fallacy-of-the-rejected-backlog-item/
    comment_author_IP: 104.199.122.113
    comment_date: '2017-12-13 11:59:59'
    comment_date_gmt: '2017-12-13 11:59:59'
    comment_content: >-
      [&#8230;] Just to be clear, this is not about Done. I expect every team to
      produce work that meets whatever definition of done that they have agreed
      with the Product Owner. If the Development Team calls Done when they are
      not then that is a wholly separate problemâ€¦ because Professional Scrum
      Teams build software that works. [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1513166399.282628;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1513166904.894001;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14454'
    comment_author: Release planning and predictable delivery
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/release-planning-and-predictable-delivery/
    comment_author_IP: 104.197.208.225
    comment_date: '2017-12-29 14:03:20'
    comment_date_gmt: '2017-12-29 14:03:20'
    comment_content: >-
      [&#8230;] You can call the activity that results from dropping out of the
      while loop of working software to be a Scrumble; You need to stop piling
      more features on top of the features that donâ€™t work and fix things so
      that you can make new things. Ultimately professional teams build software
      that works. [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1514556200.557859;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1514557038.15483;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14458'
    comment_author: Page Not Found | Martin Hinshelwood - naked Agility Ltd
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/?p=38238
    comment_author_IP: 104.197.208.225
    comment_date: '2018-01-04 12:35:59'
    comment_date_gmt: '2018-01-04 12:35:59'
    comment_content: '[&#8230;] Professional Scrum teams build software that works [&#8230;]'
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1515069359.719077;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1515144677.619866;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14460'
    comment_author: >-
      Getting started with a Definition of Done (DoD). | Martin Hinshelwood -
      naked Agility Ltd
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/getting-started-definition-done-dod/
    comment_author_IP: 104.197.208.225
    comment_date: '2018-01-04 13:04:19'
    comment_date_gmt: '2018-01-04 13:04:19'
    comment_content: >-
      [&#8230;] software at least every 30 days then by its very definition, you
      are not yet doing Scrum. Since Professional Scrum Teams build software
      that works, stop, create a working increment of software that meets your
      definition of done (DoD), and then [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1515071060.000934;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1515080621.292236;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14475'
    comment_author: Getting Started with a Definition of Done (DoD) | Online Sales Guide Tips
    comment_author_email: ''
    comment_author_url: >-
      https://www.onlinesalesguidetip.com/getting-started-with-a-definition-of-done-dod/
    comment_author_IP: 67.205.67.15
    comment_date: '2018-01-13 08:42:46'
    comment_date_gmt: '2018-01-13 08:42:46'
    comment_content: >-
      [&#8230;] software at least every 30 days then by its very definition, you
      are not yet doing Scrum. Since Professional Scrum Teams build software
      that works, stop, create a working increment of software that meets your
      definition of done (DoD), and then [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1515832966.205482;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1516901949.807449;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14570'
    comment_author: >-
      Work can flow across the Sprint boundary | Martin Hinshelwood - naked
      Agility Ltd
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/work-can-flow-across-sprint-boundary/
    comment_author_IP: 104.197.208.225
    comment_date: '2018-03-21 08:20:36'
    comment_date_gmt: '2018-03-21 08:20:36'
    comment_content: >-
      [&#8230;] to flow across the Sprint boundary. If you have a Professional
      Scrum Team that is adept at creating Done increments of working software
      then introducing flow can improve the value delivered by increasing the
      throughput of the [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1521620436.124215;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1521634786.175626;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
