{
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 20,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses Scrum practices and the importance of quality in software development, with a focus on accountability and automation. While there are elements related to continuous improvement and efficiency, the main emphasis is on Scrum roles and responsibilities rather than Lean principles specifically.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-13T22:10:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the accountability of Developers in delivering quality software and the importance of Scrum practices, rather than focusing on mentoring techniques or the development of skills and behaviours necessary for effective practice in Agile.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses Scrum practices and the importance of quality in software development, with only a minor focus on accountability and organisational expectations, which are not central to strategic goals.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-13T22:10:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum practices and software quality, with no focus on revenue per employee metrics or related financial efficiency discussions.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and accountability rather than change management strategies or practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the importance of quality in software delivery and accountability of developers, rather than focusing on the criteria for backlog item readiness.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and accountability within Scrum teams, which relates to Agile principles. However, it primarily focuses on Scrum roles and practices rather than a deep exploration of Agile values and principles.",
    "level": "Tertiary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-13T22:10:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content discusses the importance of delivering quality software and the accountability of developers, which indirectly relates to customer satisfaction and retention. However, the primary focus is on Scrum practices and software quality rather than explicit strategies for customer retention.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 92.0,
    "ai_mentions": 85.0,
    "ai_alignment": 95.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 20,
    "final_score": 92.0,
    "reasoning": "The content extensively discusses the concept of working software, emphasising its importance in Scrum and Agile methodologies. It directly addresses the characteristics of working software, the accountability of developers for quality, and the implications of technical debt. The depth of discussion includes practical advice on automation, quality assurance, and the role of Scrum teams in delivering functional software. Overall, the content aligns closely with the key topics of the 'Working Software' category, providing a comprehensive exploration of the subject.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong match for the 'Working Software' category. It thoroughly explores what working software means within Scrum and Agile, highlights developers’ responsibilities, and covers essential aspects like quality, automation, and technical debt. The practical insights and focus on delivering functional software make it highly relevant to this category."
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and accountability rather than methodologies for identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 40.0,
    "ai_depth": 32.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content discusses the importance of quality in software development and the accountability of developers, which aligns with the principles of empirical process control. It emphasises the need for inspection and adaptation through Scrum practices, particularly in the context of delivering working software. However, while it touches on empirical concepts, the primary focus is more on quality assurance and developer accountability rather than a comprehensive exploration of empirical process control itself.",
    "level": "Primary",
    "reasoning_summary": "This content relates to empirical process control by highlighting the value of inspection and adaptation within Scrum, but its main emphasis is on quality assurance and developer responsibility. While it references empirical principles, it doesn’t fully explore the broader concept, making it only partially suited to the category."
  },
  "System Configuration": {
    "resourceId": "vCeqzJIgF1F",
    "category": "System Configuration",
    "calculated_at": "2025-05-13T21:57:13",
    "ai_confidence": 22.336,
    "ai_mentions": 0.5,
    "ai_alignment": 2.9,
    "ai_depth": 3.2,
    "ai_intent": 2.7,
    "ai_audience": 8.0,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content primarily focuses on the tenets of Professional Scrum, software quality, team accountability, and continuous improvement in software delivery practices. There are tangential references to automation (build/release pipelines, automated testing) and source control, which are adjacent to system configuration, but these are framed as part of general engineering excellence, DevOps practices, or product development workflows. Discussions about configuration management tools, system integration, or maintenance best practices are not present or deeply explored. The intent is to improve product quality through better teamwork and Scrum adherence, not specifically to address system configuration setup or practices. Mentions of automation and pipelines briefly touch the topic, but not with required depth or focus.",
    "reasoning_summary": "This content centers on software quality, Scrum practices, and accountability, only superficially mentioning topics adjacent to system configuration. While automation and pipelines are referenced, the main focus isn’t configuration, leading to a low confidence for this category.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on quality and accountability rather than Cycle Time.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses Scrum roles, practices, and the importance of quality in software development, which are more aligned with software development methodologies rather than organisational change strategies. While there are mentions of accountability and the role of leadership, these are not the central themes of the content.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses Scrum practices and the importance of quality in software development, with only a minor focus on continuous improvement and accountability, which are related to innovation but not central to the topic.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Scrum principles and the importance of quality in software development, with only a brief mention of automation and pipelines, which are not central to the main topic.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and the importance of quality in software delivery, but does not focus on backlog refinement practices or techniques.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses accountability and quality within Scrum teams, which relates to self-organisation, but it primarily focuses on the responsibilities of developers and the role of leadership in decision-making rather than on self-organisation principles or practices.",
    "level": "Tertiary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the importance of quality in software development, emphasising accountability for quality among developers and the need for automation and continuous improvement. It aligns well with the principles of software craftsmanship and best practices in coding standards, as well as CI/CD practices. The depth of discussion on technical debt and the call for rigorous attention to detail further supports its strong alignment with the category of Engineering Excellence.",
    "level": "Primary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of Developers within a Scrum Team, which relates to the values of Commitment and Respect. However, the primary focus is on technical practices and the implications of quality rather than a direct exploration of Scrum Values.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses Scrum teams and their roles in delivering quality software, which implies a focus on collaboration and diverse skill sets. However, it primarily centres on accountability and quality rather than explicitly exploring the concept of cross-functional teams.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of Scrum teams, which relates to strategic alignment and continuous improvement practices. However, the primary focus is on Scrum roles and practices rather than a clear strategic framework or approach.",
    "level": "Tertiary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses Scrum practices and the importance of quality in software delivery, which are related to Agile principles, but it primarily focuses on specific Scrum roles and responsibilities rather than the broader Agile philosophy.",
    "level": "Tertiary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the responsibilities of Scrum teams, particularly focusing on the quality of software delivered and the accountability of developers. It highlights the importance of collaboration within the Scrum framework, emphasising the need for continuous improvement and the role of Scrum ceremonies like Sprint Reviews and Retrospectives in enhancing team dynamics. The depth of discussion on quality, accountability, and the need for professional development aligns well with the core themes of team performance in an Agile context.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the category, as it delves into key aspects of Scrum team dynamics, such as shared responsibility, software quality, and ongoing improvement. By exploring how Scrum ceremonies foster collaboration and accountability, it clearly addresses the essential elements of team performance within Agile environments."
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 50.0,
    "reasoning": "The content discusses accountability and quality in software development within the context of Scrum, touching on the importance of leadership decisions regarding quality and the implications of those decisions. However, it primarily focuses on Scrum practices rather than a comprehensive exploration of evidence-based leadership principles.",
    "level": "Tertiary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-13T22:11:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and development practices rather than Lean Startup principles such as MVP, Build-Measure-Learn feedback loop, or validated learning.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software development and mentions the need to automate testing processes, but it primarily focuses on Scrum practices and team accountability rather than delving deeply into automated testing methodologies or tools.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-13T22:11:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and the importance of quality in software development, but does not focus on deployment methodologies or strategies.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the importance of quality in software development, emphasising accountability for quality among developers and the role of DevOps practices. It aligns well with the principles of clean code, technical debt management, and the integration of Agile practices. The depth of discussion is significant, providing detailed insights into the implications of poor quality and the necessity for automation and continuous improvement in software delivery.",
    "level": "Primary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the importance of quality in software development and Scrum roles, but does not focus on working agreements or team norms.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the quality of software and the responsibilities of Scrum roles, without a clear focus on the Daily Scrum event or its specific practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-13T22:11:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum practices and the importance of quality in software development, with no direct reference to market share or strategies for increasing it.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "While the content discusses quality and accountability in software development, it primarily focuses on Scrum practices and roles rather than Lean principles such as waste reduction and value maximisation.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality in software development and the accountability of developers, which indirectly relates to decision-making processes within Scrum teams. It mentions the need for executive leadership to be involved in decisions about quality, aligning with the category's focus on structured decision-making. However, the primary focus is on Scrum practices rather than a detailed exploration of decision-making methodologies, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the accountability of the Product Owner in relation to quality and value delivery, making it a significant theme, but it primarily focuses on the responsibilities of Developers and Scrum teams.",
    "level": "Tertiary"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-13T22:11:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the roles and responsibilities within Scrum teams, emphasising the importance of collaboration and accountability among team members. However, it primarily focuses on quality and technical debt rather than directly addressing team dynamics or collaboration techniques.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-13T22:11:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on quality and accountability rather than Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses the accountability of developers and the importance of quality in software delivery, with a focus on Scrum practices. While it touches on team dynamics and the need for collaboration, it does not centralise on strategies or practices that enhance team motivation or engagement.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of developers within Scrum teams, which aligns with Agile principles. However, it primarily focuses on technical practices and Scrum roles rather than a broader strategic perspective on Agile methodologies. While it touches on aspects of organisational accountability and the need for leadership involvement, it lacks a comprehensive discussion on integrating Agile practices into strategic planning or long-term organisational vision.",
    "level": "Secondary"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-13T22:11:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, with no mention of Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Throughput",
    "calculated_at": "2025-05-13T21:57:18",
    "ai_confidence": 11.475,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.7,
    "ai_intent": 1.5,
    "ai_audience": 5.8,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content does not mention 'throughput' directly or indirectly and does not discuss throughput metrics, calculation, trends, or visualisation. Instead, it is focused entirely on software quality, developer accountability, defect prevention, and continuous improvement in Scrum teams. No part of the article refers to measuring or analyzing team delivery rates over time. The intent is to promote professionalism and quality, not to analyze or interpret delivery throughput. The audience alignment is moderate, as Scrum practitioners may often care about throughput, but nothing in the discussion provides relevant throughput-related signal.",
    "reasoning_summary": "This article centers on software quality and professional practices in Scrum teams, with no explicit or implicit focus on throughput as a metric. It does not fit the Throughput category.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of developers, which aligns with some aspects of release management. However, it primarily focuses on Scrum practices and team dynamics rather than the broader strategies and practices of release management. While it touches on automation and technical debt, it lacks a comprehensive exploration of release planning, scheduling, and coordination with stakeholders, which are critical elements of release management.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the accountability of developers and the role of leadership in ensuring quality software delivery, which touches on aspects of organisational culture. However, the primary focus is on Scrum practices and technical aspects rather than a deep exploration of cultural influences.",
    "level": "Tertiary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-13T22:12:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and technical processes rather than employee engagement strategies or practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-13T22:12:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality assurance and accountability in software development rather than estimation techniques or practices.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the roles and responsibilities of Scrum Team members, particularly focusing on Developers and the Product Owner. It highlights the importance of quality in software delivery, which is a key aspect of Scrum dynamics. The text also touches on team accountability, collaboration, and continuous improvement practices, aligning well with the core themes of the Scrum Team category. The depth of discussion is significant, providing insights into the implications of quality and accountability within the Scrum framework.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the Scrum Team category, as it delves into the specific duties of Developers and the Product Owner, emphasising quality, accountability, and teamwork. It also explores how these elements drive continuous improvement, all of which are central to effective Scrum practices. The detailed discussion clearly aligns with the core principles and dynamics of Scrum Teams."
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-13T22:12:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and accountability rather than psychological safety.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Sprint Review",
    "calculated_at": "2025-05-13T21:57:11",
    "ai_confidence": 26.71,
    "ai_mentions": 1.9,
    "ai_alignment": 2.6,
    "ai_depth": 2.7,
    "ai_intent": 1.8,
    "ai_audience": 9.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The article heavily emphasizes professional Scrum practices, engineering excellence, and team accountability for quality software. Sprint Review is mentioned explicitly in a key paragraph, referencing its purpose of comparing delivered work against stakeholder expectations and updating the Product Backlog. However, most of the content is centered around software quality, technical debt, DevOps, and the broader philosophy of Scrum, not a detailed or in-depth exploration of the Sprint Review event. Discussion connecting Sprint Review to expectations, backlog adaptation, and stakeholder involvement aligns partially with category criteria, but it is only a small segment within much broader Agile and Scrum team themes. Audience fit is strong, and the small Sprint Review section is accurate, but overall relevance to the Sprint Review category is low.",
    "reasoning_summary": "While the article briefly and accurately mentions Sprint Review in context, it overwhelmingly focuses on software quality and professional Scrum practices. Thus, Sprint Review alignment is surface-level and confidence for this classification is accordingly low.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-13T22:12:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and development practices rather than entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Definition of Done",
    "calculated_at": "2025-05-13T21:57:10",
    "ai_confidence": 51.42,
    "ai_mentions": 1.2,
    "ai_alignment": 5.7,
    "ai_depth": 5.3,
    "ai_intent": 5.8,
    "ai_audience": 7.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 51.0,
    "reasoning": "The content focuses on Professional Scrum Teams' responsibility for building high-quality, working software, emphasizing accountability, technical debt, DevOps, automation, and continuous improvement. While these are closely related to DoD principles (especially quality criteria and completeness of increments), the Definition of Done is never directly mentioned. The discussion aligns conceptually—especially around what constitutes 'working software' and criteria for 'done'—but treats them as general quality/accountability practices rather than the formal DoD artefact. The discussion reaches some depth regarding technical standards and team accountability, discusses stakeholder and developer roles, and references Scrum events but doesn't explicitly detail or exemplify DoD creation, content, best practices, or evolution. The intent is broadly in line (informing practitioners about what quality should look like per Scrum values), but it's not structured as a DoD-specific resource. The audience (Scrum practitioners, teams, organizations) is appropriate, and most content is relevant, with little off-topic material. No penalties are needed as the content is neither outdated nor critical of DoD. No evidence for full exclusion, but the fit is partial, placing it across the midpoint threshold.",
    "reasoning_summary": "While the content aligns with Definition of Done concepts—emphasizing quality, completeness, and accountability—it lacks direct references and detailed discussion of DoD itself. It supports practitioner understanding of what 'done' means but isn't a focused DoD resource, earning a moderate confidence score.",
    "level": "Tertiary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and team accountability rather than portfolio management practices.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 78.0,
    "ai_mentions": 85.0,
    "ai_alignment": 75.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses Scrum practices and the importance of quality in software development, which aligns with Agile principles. It mentions accountability, continuous improvement, and the role of the Scrum Team, indicating a strong focus on Agile methodologies. However, while it touches on Agile transformation concepts, it lacks a broader discussion on change management strategies or leadership roles in driving Agile transformations, which slightly limits its depth in the context of the category.",
    "level": "Secondary",
    "reasoning_summary": "This content is a good fit for the Agile category, as it centres on Scrum practices, team accountability, and continuous improvement—core Agile principles. While it references Agile transformation, it doesn’t delve deeply into change management or leadership aspects, so its focus remains on practical Agile methods rather than broader transformation strategies."
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Scrum practices and the importance of quality in software development, without a clear focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of quality in software development and mentions automation, but it does not explicitly focus on Test First Development principles. While it touches on accountability and the need for quality, it lacks a clear emphasis on defining success criteria before implementation or detailed practices related to Test-Driven Development (TDD) or Acceptance Test-Driven Development (ATDD). The discussion is more about Scrum practices and general quality assurance rather than the specific Test First Development approach.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-13T22:12:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and development practices rather than the strategic adoption of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses Scrum roles, responsibilities, and the importance of quality in software development, with only brief mentions of decision-making processes and accountability. It does not focus on the principles of sensemaking or frameworks for understanding complexity.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software development and mentions the need for continuous improvement and accountability within Scrum teams, which aligns with the principles of Continuous Learning. However, the primary focus is on Scrum roles and practices rather than a dedicated exploration of Continuous Learning principles.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses issues related to software quality, technical debt, and the importance of accountability in delivering working software, which are relevant to troubleshooting. However, the primary focus is on Scrum practices and team dynamics rather than direct troubleshooting methodologies or techniques.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-13T22:12:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses accountability and quality in software development within a Scrum framework, touching on the role of leadership in decision-making regarding quality. However, the primary focus is on technical practices and the responsibilities of developers rather than on leadership strategies or the broader aspects of Agile leadership.",
    "level": "Tertiary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 42.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 20,
    "non_ai_confidence": 30,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of source control in the context of software quality and development practices, particularly within Scrum teams. While it mentions source control as a critical component of modern software development, the primary focus is on Scrum methodologies and accountability for quality rather than on specific source control practices or strategies. Therefore, while there is relevant content, it does not fully align with the core themes of modern source control.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-13T22:12:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Scrum roles, responsibilities, and the importance of quality in software delivery, without a focus on identifying patterns or shifts in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the dynamics of Scrum teams and their accountability for quality, which relates to organisational behaviour and systems thinking. However, the primary focus is on Scrum practices rather than a comprehensive exploration of organisational dynamics.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content primarily focuses on Scrum, discussing its principles, roles, and the importance of quality in software delivery. It aligns well with the core themes of Agile frameworks, particularly in promoting collaboration and continuous improvement. The depth of discussion is substantial, providing insights into accountability and the implications of quality in Scrum practices. Overall, the content is a strong representation of Agile frameworks, particularly Scrum.",
    "level": "Primary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and mentions automation and DevOps practices, which are related to deployment frequency. However, the primary focus is on accountability for quality and Scrum roles rather than directly addressing deployment frequency as a central theme.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Lead Time",
    "calculated_at": "2025-05-13T21:57:18",
    "ai_confidence": 13.95,
    "ai_mentions": 0.1,
    "ai_alignment": 1.8,
    "ai_depth": 1.6,
    "ai_intent": 1.3,
    "ai_audience": 4.1,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on software quality, accountability, and continuous improvement in Scrum Teams, with themes of defect-free releases and professionalism. However, there is no direct mention of Lead Time, nor any substantial exploration of its definition, measurement, or impact as an observability or delivery metric. Alignment is low as the core focus is on quality rather than process metrics, and lead time is not referenced even implicitly within discussions of delivery or efficiency. The intended audience (Scrum practitioners, developers, agile teams) could overlap with those interested in Lead Time, but there is little relevant, targeted content, resulting in a low confidence score.",
    "reasoning_summary": "This article discusses software quality and professional Scrum teams, not Lead Time. It doesn't address process delivery metrics or efficiency, resulting in very low confidence for classifying it under the Lead Time category.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "category": "Minimum Viable Product",
    "calculated_at": "2025-02-13T22:12:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on quality software delivery rather than the concept of Minimum Viable Product.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the role of Scrum teams in delivering quality software, which touches on aspects of product management, particularly in relation to stakeholder expectations and accountability. However, it primarily focuses on technical practices and team dynamics rather than strategic product management methodologies or frameworks. While it mentions the Product Owner's role, the overall emphasis is more on execution than on the strategic alignment of product management principles.",
    "level": "Secondary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses Scrum practices and the importance of quality in software development, with only brief mentions of automation and CI principles. While it touches on the need for automated testing and build processes, it does not delve deeply into Continuous Integration as a primary focus. The discussion is more aligned with Scrum methodologies rather than the specific practices and tools of CI.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-13T22:12:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum practices and software development, with no mention of Windows operating system or related topics.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Scrum practices and the importance of quality in software development, without a clear focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on quality software delivery and accountability rather than asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of delivering quality software and the accountability of developers, which indirectly relates to customer satisfaction. However, it primarily focuses on technical practices and Scrum roles rather than explicitly addressing customer satisfaction principles or methodologies. While there are mentions of trust and quality impacting user perception, the overall emphasis is on development processes rather than customer experience.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of developers, which relates to the principles of frequent releases. However, the primary focus is on Scrum roles and the quality of software rather than on the mechanics or strategies of frequent releases themselves.",
    "level": "Tertiary"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-13T22:13:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on team-level practices rather than large-scale Agile principles or frameworks.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-13T21:57:17",
    "ai_confidence": 21.42,
    "ai_mentions": 0.5,
    "ai_alignment": 2.1,
    "ai_depth": 2.5,
    "ai_intent": 3.4,
    "ai_audience": 5.3,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content is primarily focused on principles, practices, and responsibilities associated with Professional Scrum Teams, notably regarding software quality, accountability, and continuous improvement. While some mentions of automation, DevOps, and technical debt are relevant to SRE, there is no explicit mention of Site Reliability Engineering, SLOs/SLIs/SLAs, incident response, or the Google-style SRE principles. Depth and alignment with SRE are minimal as the main thrust is Agile/Scrum professionalism and general engineering quality, not reliability engineering or production-resilience topics. The intent and target audience may partially overlap with SRE practitioners but do not specifically address or serve that group. Signal-to-noise is moderate as much is tangential to SRE.",
    "reasoning_summary": "This article centers on Scrum, quality, and developer accountability—core Agile concepts—not SRE. While it briefly touches on automation and technical debt, it doesn't discuss SRE principles, practices, or production reliability. Thus, its fit with the 'Site Reliability Engineering' category is quite low.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Product Backlog",
    "calculated_at": "2025-05-13T21:57:11",
    "ai_confidence": 34.55,
    "ai_mentions": 3.9,
    "ai_alignment": 4.7,
    "ai_depth": 3.4,
    "ai_intent": 3.2,
    "ai_audience": 5.6,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content discusses Scrum, software quality, and team accountability. Product Backlog is named a handful of times, particularly in relation to reflecting stakeholder expectations and adding bugs or issues to the backlog. However, Product Backlog management is not the main focus, nor are practices, techniques, or backlog refinement discussed in depth. The intent centers on professional development and delivering quality software. Some alignment for practitioners, but overall relevance is moderate and secondary, with little technical detail about the Product Backlog itself.",
    "reasoning_summary": "While the article occasionally references the Product Backlog—mainly as a place to capture bugs or manage expectations—the main discussion revolves around Scrum team professionalism and quality. Direct discussion of backlog management or techniques is limited, so alignment with the category is modest.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content discusses various aspects of software quality, accountability, and the importance of automation and DevOps practices, which are central to engineering practices. It explicitly mentions the need for clean code, automation, and the consequences of technical debt, aligning well with the core themes of the category. The depth of discussion is substantial, covering multiple facets of quality assurance and the responsibilities of developers within a Scrum framework, although it primarily focuses on Scrum rather than broader engineering practices.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the engineering practices category, as it delves into key topics like software quality, automation, and accountability—core elements of effective engineering. While it emphasises Scrum, the discussion around clean code, technical debt, and DevOps practices demonstrates a comprehensive understanding of quality assurance and developer responsibilities within engineering."
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the roles and responsibilities of Scrum teams, particularly focusing on the accountability of Developers for quality in software delivery. It references key Scrum concepts such as the Sprint Review, Product Backlog, and the importance of continuous improvement through retrospectives. The depth of discussion on quality, technical debt, and the need for professional development aligns well with the core themes of Professional Scrum, making it a primary focus rather than a secondary mention.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the Professional Scrum category, as it thoroughly explores Scrum team roles, accountability, and key practices like Sprint Reviews and retrospectives. Its emphasis on quality, technical debt, and ongoing improvement directly reflects the principles and core themes of Professional Scrum."
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on quality and accountability rather than Acceptance Test Driven Development principles.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on quality software delivery rather than validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-13T22:13:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and the importance of quality in software development, rather than focusing on coaching practices or techniques.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 22,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the importance of accountability and quality in software development, which indirectly relates to transparency in Agile processes. It highlights the need for clear communication about quality expectations and the consequences of not meeting them. However, while it touches on aspects of transparency, such as the need for developers to communicate issues and the role of the Scrum Team in reflecting on work done, it does not focus primarily on transparency as a core theme. The discussion is more centred on quality and accountability rather than the broader implications of transparency in Agile methodologies.",
    "level": "Secondary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 50,
    "final_score": 82.0,
    "reasoning": "The content discusses accountability in the context of Scrum teams, emphasising the responsibility of developers for quality and the importance of ownership in delivering working software. It contrasts accountability with blame and highlights the collective nature of accountability within the Scrum framework. The depth of discussion is significant, covering various aspects of accountability, including the consequences of not being accountable and the need for a culture that supports quality delivery. However, while accountability is a primary focus, some sections could be interpreted as veering towards individual blame, which slightly lowers the confidence score.",
    "level": "Primary",
    "reasoning_summary": "This content is well-suited to the category as it thoroughly explores accountability within Scrum teams, focusing on shared responsibility for quality and delivery. It clearly distinguishes between accountability and blame, highlighting the importance of a supportive team culture. While there are minor references that could be seen as individual blame, the main emphasis remains on collective accountability, making it a strong fit overall."
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on accountability for quality in software development rather than BDD principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software development and mentions the need for continuous improvement and experimentation within Scrum teams, but it primarily focuses on accountability and quality assurance rather than a systematic approach to hypothesis-driven experimentation.",
    "level": "Tertiary"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the role of Scrum Teams and the importance of accountability and quality in software delivery, which indirectly relates to the Scrum Master's responsibilities. However, it lacks a direct focus on the Scrum Master role itself, with minimal explicit mentions and a broader emphasis on Developers and the Scrum Team dynamics. The depth of discussion on Scrum principles and practices is present, but it does not sufficiently explore the specific responsibilities or influence of the Scrum Master.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content extensively discusses the importance of quality in software development, accountability of developers, and the need for automation and continuous improvement, which are all key aspects of operational practices. It provides practical insights into how Scrum teams can enhance their operational efficiency by addressing technical debt, implementing automation, and focusing on quality delivery. The depth of discussion is significant, with multiple examples and recommendations for improving practices within Agile frameworks, thus aligning well with the category.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the category, as it delves into essential operational practices within software development. It highlights the value of quality, developer accountability, and automation, offering actionable advice for Scrum teams. The discussion is thorough, with concrete examples and suggestions that support continuous improvement and effective Agile operations."
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses Scrum practices, accountability in software quality, and the importance of DevOps and automation in the software development process. It aligns closely with key topics in the Software Development category, such as Agile methodologies, quality assurance, and continuous improvement. The depth of discussion is significant, providing detailed insights into the responsibilities of developers and the implications of technical debt, which further supports its classification.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the Software Development category, as it thoroughly explores Scrum, developer accountability, and the role of DevOps and automation. Its detailed analysis of Agile practices, quality assurance, and technical debt demonstrates a clear focus on core software development concepts, making the classification appropriate."
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 20,
    "final_score": 68.0,
    "reasoning": "The content discusses the importance of quality in software delivery and mentions automation and accountability, which are relevant to Continuous Delivery. However, it primarily focuses on Scrum practices and roles rather than the broader principles and practices of Continuous Delivery. The discussion lacks depth in Continuous Delivery-specific techniques and strategies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of quality in software development and mentions the need for automation in testing and deployment processes. However, it primarily focuses on Scrum practices and accountability rather than delving deeply into test automation principles, frameworks, or best practices. While automation is mentioned, it is not the primary focus of the discussion, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles, quality assurance, and technical practices rather than product strategy, vision, or market analysis.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality in software development and the accountability of developers, which aligns with technical leadership principles. It touches on DevOps practices and the need for continuous improvement, but lacks a strong focus on mentoring, coaching, or specific agile leadership strategies. The depth of discussion on technical leadership concepts is moderate, with some relevant points but not enough to fully encapsulate the category.",
    "level": "Secondary"
  },
  "Increment": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Increment",
    "calculated_at": "2025-05-13T21:57:12",
    "ai_confidence": 91.327,
    "ai_mentions": 8.8,
    "ai_alignment": 9.6,
    "ai_depth": 9.1,
    "ai_intent": 9.2,
    "ai_audience": 9.7,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly refers to 'increment' and emphasizes delivering 'working software' in Scrum, with multiple explicit and conceptual references to increments as usable pieces delivered each iteration. Extensive discussion covers the accountability for delivering complete, quality increments, and how Scrum practices (Sprint Review, Product Backlog, technical excellence) link to increment quality and stakeholder value. The intent is clearly educational for Scrum practitioners, aligning closely with the Increment category definition. The discussion is primarily focused with minimal digression, maintaining high relevance, but there is some generalization about engineering excellence and developer responsibility that, while pertinent, slightly broadens beyond increments specifically.",
    "reasoning_summary": "This content ties working software quality and team accountability tightly to the Scrum Increment concept, offering hands-on advice for ensuring each iteration delivers value. It's highly relevant for practitioners and maintains a strong focus on Increment practices, justifying the confident, high score.",
    "level": "Primary"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses Scrum roles and the importance of quality in software delivery, which are relevant to Agile Planning. However, it primarily focuses on accountability and quality rather than the broader principles and practices of Agile Planning.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-13T22:13:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and the importance of quality in software delivery, but does not focus on forecasting methods or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the importance of quality in software development within the Scrum framework, highlighting practical problem-solving strategies and the accountability of developers. It aligns well with the core themes of Pragmatic Thinking by emphasising real-world applications of Scrum and DevOps principles, such as automation and continuous improvement. The depth of discussion is significant, providing actionable insights and techniques for navigating challenges in software delivery, thus demonstrating a strong focus on pragmatic approaches.",
    "level": "Primary",
    "reasoning_summary": "This content is a great fit for the Pragmatic Thinking category, as it explores real-world software development challenges within Scrum, focusing on practical solutions and developer accountability. By highlighting actionable strategies like automation and continuous improvement, it offers valuable, experience-based insights that align perfectly with the category’s emphasis on practical, effective approaches."
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content explicitly discusses technical debt multiple times, particularly in relation to the quality of software and the responsibilities of developers. It highlights the consequences of poor quality code and the need for accountability, which aligns well with the core themes of technical debt management. The depth of discussion is significant, as it provides specific examples of what constitutes technical debt and how it can be addressed within a Scrum framework. Overall, the content is focused on the implications of technical debt and strategies for remediation, justifying a high confidence score.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the technical debt category, as it thoroughly explores the topic by discussing its impact on software quality and developer responsibility. It offers concrete examples and practical strategies for managing technical debt within Scrum, making the connection clear and relevant. The detailed focus on both the challenges and solutions further reinforces its alignment with this category."
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-13T22:13:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Scrum roles, accountability for software quality, and technical debt, without a clear focus on customer feedback integration or feedback loops.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of delivering quality software and the accountability of developers in ensuring value delivery. It aligns well with key topics such as iterative development, the role of cross-functional teams, and the impact of Agile methodologies on value delivery. However, while it provides substantial detail on quality and accountability, it could further elaborate on specific techniques for measuring and maximising customer value.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and accountability rather than complexity science or its principles.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "While the content touches on decision-making in the context of software quality and accountability, it primarily focuses on Scrum practices and roles rather than a comprehensive exploration of decision theory principles.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses Scrum practices and the importance of quality in software development, but it lacks a direct focus on Evidence-Based Management principles. While it touches on accountability and the need for empirical decision-making, it does not provide a comprehensive exploration of EBM concepts such as current value metrics or unrealised value analysis. The discussion is more centred on Scrum roles and responsibilities rather than a data-informed management approach.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses Scrum roles and practices at the team level, focusing on quality software delivery and accountability of developers, without addressing broader organisational agility or transformation.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-13T22:09:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-13T22:09:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software development and the accountability of developers, which relates to metrics and continuous improvement. However, the primary focus is on Scrum roles and practices rather than a detailed exploration of metrics and learning.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-13T22:09:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and accountability rather than Systems Thinking principles or holistic analysis.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles, accountability for quality, and the importance of working software, but does not provide any actionable instructions or insights related to installation or configuration of tools or software.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of developers, which touches on sociotechnical aspects. However, it primarily focuses on Scrum practices and technical debt without deeply exploring the interplay between social and technical systems within organisations. While there are mentions of organisational accountability and the need for collaboration, the discussion lacks a comprehensive examination of how these elements collectively influence software delivery and team effectiveness.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality in software development and the accountability of developers, which aligns with the principles of Technical Excellence. It mentions practices like automation and DevOps, which are relevant to the category. However, the primary focus is on Scrum roles and team dynamics rather than deep technical practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the importance of quality in software delivery, the accountability of developers, and the role of Scrum in ensuring that working software is delivered. It aligns well with key topics such as the importance of iterative development, accountability in product delivery, and the need for continuous improvement. The depth of discussion on quality assurance, technical debt, and the responsibilities of cross-functional teams further supports its strong alignment with the category of Product Delivery.",
    "level": "Primary",
    "reasoning_summary": "This content is a great fit for the Product Delivery category, as it thoroughly explores essential aspects like software quality, developer accountability, and Scrum’s role in delivering working products. It also covers iterative development, technical debt, and the responsibilities of cross-functional teams, all of which are central to effective product delivery practices."
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on technical practices and accountability rather than psychological principles or theories related to motivation, engagement, or team dynamics.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 50,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of quality in software development and mentions DevOps practices, particularly in relation to automation and accountability. However, the primary focus is on Scrum methodologies rather than the broader DevOps philosophy. While there are relevant points about automation and continuous improvement, the depth of discussion on DevOps principles is limited, making it a secondary theme rather than a primary focus.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses Scrum practices and the importance of quality in software delivery, which are relevant to organisational agility. However, it primarily focuses on Scrum roles and responsibilities rather than broader organisational agility strategies or cultural shifts.",
    "level": "Tertiary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-13T22:10:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of developers, which relates to flow efficiency in terms of optimising work throughput. However, the primary focus is on Scrum roles and responsibilities rather than directly addressing flow efficiency principles or techniques.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and accountability rather than the flow of value or Value Stream Management principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses Professional Scrum practices and the accountability of developers in delivering quality software. While it touches on some agile principles, it lacks a direct focus on the Agile Product Operating Model as a framework. The discussion is more centred on Scrum roles and responsibilities rather than the broader themes of product management and continuous delivery that characterise the APOM.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the role of Scrum teams in adapting to stakeholder expectations, which aligns with the principles of Agile methodologies. However, the primary focus is on Scrum roles and practices rather than broader market adaptability strategies.",
    "level": "Tertiary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content extensively discusses the role of Scrum teams and the importance of quality in software delivery, which aligns closely with Agile Product Management principles. It highlights the accountability of Developers and the Product Owner, emphasising the need for stakeholder engagement and continuous improvement. The depth of discussion on Scrum practices and the focus on delivering value through quality software further supports a high confidence score.",
    "level": "Primary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of developers, which relates to business agility principles. However, the primary focus is on Scrum practices and roles rather than a broader exploration of business agility as a central theme.",
    "level": "Tertiary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-13T22:10:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on quality and accountability in software development rather than the broader scope of Application Lifecycle Management.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-13T22:10:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Scrum practices, roles, and accountability in software development without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 50,
    "final_score": 62.0,
    "reasoning": "The content discusses the accountability of developers and the role of executive leadership in decision-making regarding software quality. However, it primarily focuses on technical aspects of software development and Scrum practices rather than providing a comprehensive discussion on leadership strategies or frameworks. While there are mentions of leadership's role in quality decisions, the overall emphasis is on technical execution and team responsibilities, which detracts from a strong alignment with the leadership category.",
    "level": "Secondary"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content primarily focuses on Scrum practices and the accountability of developers in delivering quality software. While it touches on themes of collaboration and continuous improvement, it does not explicitly discuss social technologies or frameworks that promote collective intelligence and decision-making. The discussion is more centred on technical aspects and responsibilities rather than the underlying social frameworks that characterise social technologies.",
    "level": "Secondary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T14:06:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum practices and the roles within Scrum teams, with no clear focus on Internal Developer Platforms or their implementation.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T14:06:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and events, focusing on software quality and accountability rather than the application of AI in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 38,
    "ai_depth": 36,
    "non_ai_confidence": 50,
    "final_score": 92.0,
    "reasoning": "The content extensively discusses various aspects of Scrum, including the roles of Developers and Product Owners, the importance of delivering quality software, and the accountability of Scrum Teams. It directly references Scrum events like Sprint Reviews and emphasises the need for continuous improvement, aligning well with Scrum principles. The depth of discussion is significant, providing insights into the implications of quality in software delivery and the responsibilities of team members within the Scrum framework.",
    "level": "Primary",
    "reasoning_summary": "This content clearly belongs in the Scrum category, as it thoroughly explores Scrum roles, events, and principles. It highlights team responsibilities, quality delivery, and continuous improvement, all of which are central to Scrum. The detailed discussion demonstrates a strong alignment with Scrum practices and values."
  },
  "Shift Left Strategy": {
    "category": "Shift Left Strategy",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of quality in software development and mentions the need for accountability among developers, which aligns with the Shift-Left Strategy's focus on integrating quality earlier in the development process. However, it primarily revolves around Scrum practices and does not explicitly address the integration of testing, security, or compliance early in the lifecycle, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of quality in software development and the accountability of developers, which aligns with Continuous Improvement principles. It mentions the need for teams to inspect and adapt, reflecting a commitment to ongoing enhancement. However, while it touches on Continuous Improvement, the primary focus is on Scrum roles and responsibilities rather than a comprehensive exploration of Continuous Improvement strategies or frameworks.",
    "level": "Secondary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the importance of quality in software delivery and the accountability of developers, which aligns with the principles of Agile and DevOps. However, it primarily focuses on the execution of Scrum practices rather than explicitly addressing the concept of Common Goals. While there are mentions of team accountability and the need for alignment in delivering quality software, the discussion lacks depth on how these elements connect to overarching strategic objectives or shared goals within the organisation.",
    "level": "Secondary"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content extensively discusses the importance of quality in software development, emphasising the accountability of developers and the necessity for continuous improvement and skill development. It highlights the need for professional standards and practices, aligning well with the core themes of competence. The depth of discussion on quality assurance, technical debt, and the role of Scrum in fostering a culture of competence further supports a high confidence score.",
    "level": "Primary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 20,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on Scrum practices and the accountability of Scrum teams in delivering quality software. While it touches on aspects of quality and accountability, it does not explicitly discuss the One Engineering System framework, its principles, or its integration across teams. The discussion is more centred on Scrum methodology rather than the broader integration and standardisation of engineering processes that 1ES entails.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T15:54:33",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content primarily discusses Scrum practices and accountability in software development, with a focus on quality and the role of developers. While it touches on themes of accountability and the importance of quality, it does not explicitly address the concept of Agentic Agility or differentiate between human and AI capabilities. The discussion lacks depth in exploring the intentional shaping of outcomes through autonomy and adaptability, which are central to Agentic Agility.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content primarily discusses Scrum practices rather than Hybrid Agile concepts. It fails to critically examine the integration of traditional practices with agile methods, nor does it address the pitfalls of Hybrid Agile. While it mentions accountability and quality, these discussions do not align with the specific aspects of Hybrid Agile such as command-and-control structures or conflicting expectations in Hybrid Agile environments. Overall, the content focuses on promoting Scrum principles, which does not meet the requirements of the Hybrid Agile category.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 12.0,
    "ai_mentions": 100.0,
    "ai_alignment": 15.0,
    "ai_depth": 5.0,
    "non_ai_confidence": null,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on Scrum practices, responsibilities of Developer teams, and quality management in software development, which revolves around accountability and process improvement. While it touches upon some principles like accountability and self-organisation (which may relate to a decentralized structure), it lacks direct references to Cell Structure Design, the Beta Codex, or the specific characteristics of autonomous cells. The discussion does not deeply engage with the core themes of Cell Structure Design and would be categorized primarily as traditional Agile/Scrum content.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Principle",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 76.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": null,
    "final_score": 76.0,
    "reasoning": "The content discusses key principles that guide decision-making in Scrum, such as accountability for quality, continuous improvement through inspection and adaptation, and the importance of delivering value to customers. It emphasizes actionable aspects like the necessity for automation in software delivery processes and the need for Scrum teams to engage in empirical practices to enhance their work. Although the content occasionally touches on abstract ideas, it primarily focuses on how these principles can be practically applied to improve team behavior and results in software development. Therefore, it aligns well with the principle category, demonstrating a strong understanding of how principles influence team dynamics and decision-making.",
    "level": "Secondary",
    "reasoning_summary": "This content clearly fits the \"principle\" category, as it explores foundational guidelines that shape Scrum teams’ actions and decisions. By highlighting practical applications—like automation and empirical practices—it shows how these principles drive continuous improvement and value delivery, making the discussion both actionable and relevant to real-world software development scenarios."
  },
  "Project Management": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Project Management",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 52.0,
    "ai_mentions": 12,
    "ai_alignment": 20,
    "ai_depth": 30,
    "non_ai_confidence": null,
    "final_score": 52.0,
    "reasoning": "The content primarily discusses Scrum and focuses on roles, accountability, and quality in software development within Scrum teams. While it reflects some project management principles, such as accountability for quality and stakeholder expectations, it is heavily centered around Scrum-specific practices and roles, limiting its broader project management applicability. There is mention of project management topics like accountability, quality, and iterative improvement, but these are deeply embedded in the Scrum methodology, which does not sufficiently align with the broader category of project management that includes various methodologies and techniques.",
    "level": "Tertiary"
  },
  "Open Space Agile": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 25.0,
    "ai_mentions": 100.0,
    "ai_alignment": 25.0,
    "ai_depth": 10.0,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content primarily focuses on Scrum and traditional Agile practices, discussing accountability and quality in software development. It briefly mentions accountability but does not delve into Open Space Agile principles such as collective participation or psychological safety. The overall discussion does not align well with the core themes of Open Space Agile, making it a lower confidence score.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Tool",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 37.0,
    "ai_mentions": 2,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 37.0,
    "reasoning": "The content primarily discusses the responsibilities of Scrum Teams and developers regarding software quality and accountability in a Scrum context. While it briefly mentions 'automation' and 'DevOps practices'—which are tools and techniques—the focus is predominantly on Scrum practices and team dynamics rather than on specific tools or their functionality in facilitating workflows or improving collaboration. Consequently, the overall depth and specificity regarding tools is limited, leading to a moderate confidence score in alignment with the 'Tool' category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 22.0,
    "ai_mentions": 0,
    "ai_alignment": 30.0,
    "ai_depth": 20.0,
    "non_ai_confidence": null,
    "final_score": 22.0,
    "reasoning": "The content discusses Scrum practices and accountability in software development but does not mention any specific Liberating Structures methods or facilitate discussions according to the principles of Liberating Structures. It focuses on Scrum roles and the importance of quality in software delivery without incorporating the lightweight facilitation techniques that Liberating Structures represents. While it slightly aligns with the concept of iterative improvement, it lacks depth and specific application of Liberating Structures, thereby meriting a low confidence score.",
    "level": "Ignored"
  },
  "Philosophy": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Philosophy",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 15.0,
    "ai_mentions": 4,
    "ai_alignment": 20,
    "ai_depth": 10,
    "non_ai_confidence": null,
    "final_score": 15.0,
    "reasoning": "The content discusses Scrum practices and the delivery of quality software, primarily focusing on specific Scrum roles and events, which falls outside the philosophical aspects of Agile, Lean, and DevOps methodologies. While there are mentions of accountability and decision-making related to quality, the primary focus is on procedural details and practices rather than the foundational philosophical underpinnings that guide such methodologies.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Discipline",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 67.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 67.0,
    "reasoning": "The content discusses the principles and practices of Scrum, focusing on accountability, quality, and continuous improvement within Software Development teams. It highlights the necessity for a cohesive approach to delivery and how Scrum can be utilized to enhance software quality, which resonates well with the valuation of disciplined methodologies in professional contexts. However, while it mentions some characteristics of discipline, it primarily focuses on tools and practices of Scrum rather than a broader systemic application of the discipline concept itself, resulting in a strong but not complete alignment with the 'Discipline' category.",
    "level": "Secondary"
  },
  "Artifact": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Artifact",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 62.0,
    "ai_mentions": 15,
    "ai_alignment": 45.0,
    "ai_depth": 67.0,
    "non_ai_confidence": null,
    "final_score": 62.0,
    "reasoning": "The content discusses quality software within the Scrum framework and emphasizes the accountability of Developers and the importance of delivering a usable increment, which aligns with the concept of artifacts in Agile. However, the primary focus of the content is on team roles and the importance of quality over specific details related to artifacts like Product Backlog or Increment. While it does mention processes related to managing artifacts indirectly, such as how to handle expectations during Sprint Reviews and technical debt, it does not explicitly dive deep into the structure, purpose, or best practices for supporting artifacts. Therefore, while there is a significant connection to the Artifact category, it is not the primary focus.",
    "level": "Secondary"
  },
  "Observability": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Observability",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 12,
    "ai_depth": 8,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content discusses software quality and Scrum practices, emphasizing accountability and continuous improvement, but does not explicitly address observability concepts like metrics, logs, or traces. While it touches upon software quality and the implications of technical debt, the primary focus is on Scrum roles and responsibilities rather than observability itself. Thus, it demonstrates some alignment but lacks depth and direct discussions on observability tools or metrics.",
    "level": "Ignored"
  },
  "Time to Market": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Time to Market",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 32.0,
    "ai_mentions": 2,
    "ai_alignment": 40.0,
    "ai_depth": 25.0,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content addresses the importance of delivering working software and touches on the need for quality, but it does not provide a focused discussion on Time to Market or the metrics associated with it, such as lead time or cycle time. The concept is vaguely mentioned in the context of accountability and quality but lacks explicit ties to measures that would typically define Time to Market improvement strategies or metrics. Overall, while there are some relevant aspects, the primary focus remains on Scrum practices without a strong connection to optimizing delivery speed.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Product Development",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 85.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 33,
    "non_ai_confidence": null,
    "final_score": 85.0,
    "reasoning": "The content primarily discusses the role of Scrum teams in delivering quality software, which is a core aspect of product development methodologies. It emphasizes the importance of accountability, quality assurance, and practices such as automation and continuous improvement. The content effectively describes how Scrum can be used to inspect and adapt, fostering iterative development processes that align with customer needs. There are multiple explicit mentions of Scrum and its practices. However, while the content is strong, it does lack comprehensive coverage of some key aspects of product development methodology like risk mitigation strategies or cross-functional teamwork, preventing a perfect score.",
    "level": "Primary",
    "reasoning_summary": "This content clearly aligns with the product development methodology category, as it focuses on how Scrum teams ensure software quality through accountability, automation, and ongoing improvement. While it thoroughly covers Scrum practices and their benefits, it doesn’t fully address all elements of product development, such as risk management or cross-functional collaboration."
  },
  "Practice": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Practice",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 85.0,
    "ai_depth": 70.0,
    "non_ai_confidence": null,
    "final_score": 78.0,
    "reasoning": "The content primarily focuses on Scrum practices and the importance of quality in delivering working software. It discusses actionable techniques for improving software quality, such as emphasizing accountability among developers, automating processes, and addressing technical debt, which aligns well with the core themes of the 'Practice' category. The content is detailed and provides several insights into real-world practices, like continuous improvement and reflection during Sprint Retrospectives. However, the primary emphasis on Scrum roles might divert attention from the broader category of general practices, hence a slightly lower score in alignment and depth.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the 'Practice' category, as it explores practical approaches to enhancing software quality within Scrum, including developer accountability, automation, and managing technical debt. While it centres on Scrum roles, the actionable advice and focus on continuous improvement make it highly relevant to real-world practice discussions."
  },
  "Company as a Product": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Company as a Product",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses Scrum teams and processes for delivering quality software rather than focusing on CaaP principles. While there are some allusions to team accountability and software quality as organisational assets, the core theme and depth of discussion align more with Scrum practices and agile methodologies than with the strategic framework of conceptualizing the company itself as a product. Thus, while there are relevant elements, they do not adequately establish a clear emphasis on the 'Company as a Product' approach.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Method",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 85.0,
    "ai_depth": 75.0,
    "non_ai_confidence": null,
    "final_score": 78.0,
    "reasoning": "The content focuses on methods within the Scrum framework, particularly around accountability for quality and delivering working software. It discusses specific processes such as the Sprint Review and emphasizes automated testing, quality control, and continuous improvement, which are all methodical approaches to achieving high-quality software delivery. While there are mentions of broader concepts, like organizational culture and accountability, these serve to bolster the discussion on specific Scrum methods rather than overshadow it. The depth of practical guidance and structured approaches justifies a strong alignment with the Method category.",
    "level": "Secondary",
    "reasoning_summary": "This content is a great fit for the Method category because it delves into practical Scrum processes, like Sprint Reviews and automated testing, to ensure quality software delivery. While it touches on broader themes such as culture and accountability, these points support the main focus on structured, actionable methods, making the classification appropriate."
  },
  "Unrealised Value": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 35.0,
    "ai_mentions": 20.0,
    "ai_alignment": 40.0,
    "ai_depth": 25.0,
    "non_ai_confidence": null,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of quality software delivery and technical debt, which can hint at unrealised value through the lens of improvements and innovations needed in the software development process. However, the focus is largely on accountability and quality rather than explicitly on unrealised value metrics or opportunities. While there are mentions of improving processes and addressing technical debt, the depth of insight into unrealised value as a concept is limited, contributing to a moderate confidence score.",
    "level": "Ignored"
  },
  "Scaling": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Scaling",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 2,
    "ai_depth": 100.0,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses Scrum practices, focusing on the accountability and quality of software delivered by small development teams. While it touches on themes related to team collaboration and quality assurance, it lacks a dedicated exploration of scaling methodologies like SAFe or LeSS. The focus remains on Scrum teams rather than cross-team coordination or the complexities involved in scaling Agile practices across an organization, which are critical to the Scaling category.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Model",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 45.0,
    "ai_mentions": 20.0,
    "ai_alignment": 30.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 45.0,
    "reasoning": "The content primarily focuses on Scrum teams and the practices that lead to delivering quality software. While it touches upon Scrum practices, it doesn’t deeply engage with conceptual models such as the Cynefin Framework or Lean principles that are central to the 'Model' category. The information is more about accountability within Scrum teams rather than a detailed examination of how different models guide decision-making or enhance organizational agility.",
    "level": "Tertiary"
  },
  "Current Value": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Current Value",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 55.0,
    "ai_mentions": 3,
    "ai_alignment": 30,
    "ai_depth": 45,
    "non_ai_confidence": null,
    "final_score": 55.0,
    "reasoning": "The content discusses the quality of software and its relationship to value delivery, emphasizing accountability for quality among developers and its importance for organizational reputation. However, while it touches on aspects related to current value—like the impact of quality on trust and organizational value—it does not delve deeply into metrics or real-time assessment of value, which are critical for the Current Value classification. Furthermore, the focus is more on principles of Scrum and accountability rather than explicitly analyzing or measuring Current Value in a way that aligns strictly with the Evidence-Based Management framework.",
    "level": "Tertiary"
  },
  "Framework": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Framework",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 75.0,
    "ai_mentions": 18,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": null,
    "final_score": 75.0,
    "reasoning": "The content provides a detailed exploration of the Professional Scrum framework, emphasizing roles, responsibilities, and quality aspects specific to Scrum teams. It discusses the importance of quality software delivery while adhering to Scrum principles such as accountability of developers and the iterative process of inspection and adaptation. The content aligns well with the category's themes, particularly in terms of implementation strategies and best practices for Agile frameworks, as well as clarifying the Scrum team's accountability in delivering working software. However, while it covers many relevant points, it primarily focuses on Scrum itself rather than a broader discussion of multiple frameworks which the category suggests. Thus, the confidence score reflects strong relevance without being fully comprehensive in the framework discussion.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the category, as it thoroughly examines the Professional Scrum framework, highlighting team roles, responsibilities, and quality practices. While it mainly centres on Scrum rather than multiple Agile frameworks, its focus on implementation strategies and best practices makes it highly relevant, though not fully comprehensive."
  },
  "Tenet": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Tenet",
    "calculated_at": "2025-05-01T17:26:21",
    "ai_confidence": 82.0,
    "ai_mentions": 16,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": null,
    "final_score": 82.0,
    "reasoning": "The content primarily revolves around the accountability and quality expectations of Professional Scrum Teams, exploring actionable insights into how to deliver working software. It discusses crucial tenets, such as the importance of quality over mere delivery speed, which is a core principle within Scrum and Agile methodologies. The text emphasizes continuous improvement and accountability, aligning closely with tenets that focus on delivering quality and promoting team collaboration. The depth of discussion regarding specific practices, such as automating testing and build processes, further enhances its classification, demonstrating a notable understanding of actionable rules that guide decision-making in a Scrum context.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the category, as it delves into key Scrum and Agile principles like accountability, quality, and continuous improvement. By highlighting actionable practices such as automated testing and build processes, it demonstrates a clear understanding of how professional Scrum Teams deliver high-quality software, making it highly relevant to the topic."
  },
  "GitHub": {
    "resourceId": "vCeqzJIgF1F",
    "category": "GitHub",
    "calculated_at": "2025-05-01T17:26:22",
    "ai_confidence": 10.0,
    "ai_mentions": 0,
    "ai_alignment": 5.0,
    "ai_depth": 5.0,
    "non_ai_confidence": null,
    "final_score": 10.0,
    "reasoning": "The content focuses primarily on Scrum methodologies and practices, emphasizing the quality of software in development teams. There are no direct mentions of GitHub or its services, nor does it align with GitHub-specific functionalities or practices. The discussions are entirely centered on Agile and Scrum without any linkage to GitHub, CI/CD, or version control, which limits its relevance to the GitHub category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-01T17:26:22",
    "ai_confidence": 32.0,
    "ai_mentions": 100.0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content heavily focuses on the Scrum framework and its specific mechanics, emphasizing practices and roles within Scrum teams. While there is a brief mention of accountability and quality that could resonate with Agnostic Agile principles, it lacks in-depth discussion on adapting methodologies according to specific project contexts. The content does not engage with the broader philosophical principles of Agnostic Agile, such as ethical considerations or comparisons to other frameworks, making this content primarily aligned with Scrum rather than Agnostic Agile.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Capability",
    "calculated_at": "2025-05-01T17:26:22",
    "ai_confidence": 36.0,
    "ai_mentions": 5,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 36.0,
    "reasoning": "The content discusses aspects of Scrum teams and their accountability for delivering quality software, but focuses heavily on roles and responsibilities rather than on developing enduring capabilities within the organization. While there are mentions of accountability and practices that could enhance capabilities, they are overshadowed by the emphasis on roles, tools, and immediate practices rather than the systemic development of capabilities over time. Thus, the primary focus does not align fully with the 'Capability' category.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:56:07",
    "ai_confidence": 5.166,
    "ai_mentions": 0.4,
    "ai_alignment": 0.8,
    "ai_depth": 0.8,
    "ai_intent": 0.6,
    "ai_audience": 5.5,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content makes no direct mention of Service Level Expectation (SLE) or related concepts such as elapsed time range, probability, cycle time analysis with regard to SLE, or its calculation within Agile, Scrum, or Kanban. Its main thrust is on software quality, developer accountability, technical debt, automation, and professionalism in Scrum teams—not SLE. There are general references to expectations (e.g., stakeholders' expectations), but these are unrelated to the formal concept of SLE as defined in the classification scope. No part of the text discusses forecasting delivery timelines for work items, setting explicit expectations about time to completion, historical data analysis, or any concrete SLE guidance. The closest tangential mention is the general Scrum practice of inspect and adapt, but this is unrelated to SLE as a probabilistic, time-based forecast. Audience targeting (Scrum practitioners, developers, and organizations) does align with typical SLE users, which moderates the audience score; the signal ratio is high because the content is clear and focused on Scrum practice (just not on SLE). Overall, the text is off-topic for the 'Service Level Expectation' category, resulting in extremely low confidence and scores in all dimensions except for audience and signal-to-noise.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Ethos",
    "calculated_at": "2025-05-13T21:57:12",
    "ai_confidence": 83.55,
    "ai_mentions": 4.1,
    "ai_alignment": 9.2,
    "ai_depth": 9.6,
    "ai_intent": 8.8,
    "ai_audience": 8.4,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content centers on the accountable behaviors, convictions, and disciplined commitments that define a truly 'Professional Scrum Team'—with software quality, accountability, and continuous improvement as system-level, foundational ethos. While the term 'ethos' itself is never directly stated, the conceptual alignment is high: explicit focus on the demonstration of values through evidence (e.g., quality software, accountability for technical debt, leadership's role in ethical decision-making about quality). The writing systematically draws distinctions between ritual/superficial Scrum and genuine, sustained professionalism, reinforcing the importance of ethos as the base for transformation and resilience. The content's depth is substantial: it unpacks real-world practices, system-level evidence (accountability, empirical improvement), and practical/ethical implications of violating the core ethos (quality vs. value cutting, technical debt hiding). The intent is strongly aligned (to illuminate and instill professional behavioral expectations and their rationale), and the audience is agile practitioners, leaders, and coaches—the core audience for this category. High signal-to-noise; little content is off-topic or filler. Deduction is not warranted as tone and references are current, not satirical or outdated.",
    "reasoning_summary": "This content strongly fits the 'Ethos' category: it explores the core beliefs and accountable practices driving authentic Scrum, highlighting quality, accountability, and empiricism as evidence of a system's true foundational convictions. Its practical focus and audience match make it an excellent example.",
    "level": "Primary"
  },
  "Customer Focus": {
    "resourceId": "vCeqzJIgF1F",
    "category": "Customer Focus",
    "calculated_at": "2025-05-13T21:57:17",
    "ai_confidence": 46.28,
    "ai_mentions": 2.7,
    "ai_alignment": 4.6,
    "ai_depth": 5.2,
    "ai_intent": 5.0,
    "ai_audience": 5.8,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content emphasizes software quality, accountability, and continuous improvement in Scrum teams, focusing on delivering reliable software. It notes 'delivers real value,' but customer value is not explored with evidence or actionable practices. While there are some mentions of building trust and value for users, discussions center more on engineering excellence, technical practices, and professionalism than defining, measuring, or responding to customer outcomes. Feedback loops, customer input, and aligning priorities to customer needs are implied but not explicit or detailed. Audience is practitioners, which aligns, and the tone is consistent, but customer focus is not the main theme.",
    "reasoning_summary": "While the article occasionally references customer value and trust, it primarily discusses software quality and developer accountability. Customer outcomes are treated as a secondary concern rather than a core focus, resulting in only a moderate match to the category.",
    "level": "Tertiary"
  },
  "First Principal": {
    "resourceId": "vCeqzJIgF1F",
    "category": "First Principal",
    "calculated_at": "2025-05-13T21:57:56",
    "ai_confidence": 44.7,
    "ai_mentions": 1.6,
    "ai_alignment": 4.9,
    "ai_depth": 5.4,
    "ai_intent": 5.7,
    "ai_audience": 7.3,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "This content broadly discusses professional standards, accountability, software quality, and engineering excellence in Scrum teams, prioritizing 'working software.' While it alludes to core concepts and expectations foundational in Scrum, it does not directly define, identify, or explore first principles explicitly, nor does it deeply analyze immutable constraints as such. The discussion leans toward best practices, accountability, and expectations—closer to derived principles and heuristics, not true first principles. There are some elements that touch on the non-negotiability of quality and accountability, but these are not framed, attributed, or explored in the language or rigor specific to first principles. Focus is strong and the content targets the relevant audience, but without deep directness or explicit treatment of first principles.",
    "reasoning_summary": "The content is practical and audience-appropriate, highlighting professional responsibility and software quality in Scrum, but it centers on best practices and expectations rather than explicit or in-depth discussion of foundational first principles as required by the category.",
    "level": "Tertiary"
  }
}