post:
  title: Getting started with a Definition of Done (DoD)
  link: https://nkdagility.com/blog/getting-started-definition-done-dod/
  pubDate: Mon, 14 Dec 2020 13:03:00 +0000
  creator: MrHinsh
  guid:
    _: https://nakedalmstage.wpengine.com/?p=38238
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - >-
    <!-- wp:paragraph -->

    <p>In my last post about <a
    href="https://nkdagility.com/blog/professional-scrum-teams-build-software-works/">Professional
    software teams creating working software</a> <a
    href="https://www.scrum.org/david-corbin">David Corbin</a> made a good
    point. How do you determining what "Free from fault or defect" means? Since
    that is different for each Product and may change over time you need to
    focus on Quality and reflecting that quality in a Definition of Done
    (DoD).</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p><a
    href="https://nkdagility.com/blog/update-scrum-guide-25th-anniversary-scrum-framework/">Updated
    to reflect the 2020 Scrum Guide!</a></p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-tl-dr">TL;DR;</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>Your <a href="/the-2020-scrum-guide/#developers">Developers</a> are
    ultimately responsible for creating done increments of working software.
    Done Increments. <strong>Done</strong>.</p>

    <!-- /wp:paragraph -->


    <!-- wp:image
    {"align":"center","id":45213,"width":466,"height":365,"sizeSlug":"large"}
    -->

    <div class="wp-block-image"><figure class="aligncenter size-large
    is-resized"><img
    src="https://nkdagility.com/wp-content/uploads/2020/11/naked-Agility-Scrum-Framework-Definition-of-Done-920x720.jpg"
    alt="" class="wp-image-45213" width="466" height="365"/></figure></div>

    <!-- /wp:image -->


    <!-- wp:paragraph -->

    <p><a href="/the-2020-scrum-guide/#developers">Developers</a> needs to
    decide what Done means within the organisational context and the product
    domain. They need to sit down and create a list of things that must be true
    for every Increment of software that they deliver. Working Software is not
    specific to a PBI; it's applied regardless of PBI to the entire delivery.
    Not just for each PBI.</p>

    <!-- /wp:paragraph -->


    <!-- wp:quote -->

    <blockquote class="wp-block-quote"><p>"The Definition of Done creates
    transparency by providing everyone a shared understanding of what work was
    completed as part of the Increment. If a Product Backlog item does not meet
    the Definition of Done, it cannot be released or even presented at the
    Sprint Review. Instead, it returns to the Product Backlog for future
    consideration."</p><cite>-<a
    href="https://nkdagility.com/the-2020-scrum-guide/">The 2020 Scrum
    Guide</a></cite></blockquote>

    <!-- /wp:quote -->


    <!-- wp:paragraph -->

    <p>If you can't ship working software at least every 30 days then by its
    very definition, you are not yet doing Scrum. Since <a
    href="/blog/professional-scrum-teams-build-software-works/">Professional
    Scrum Teams build software that works</a>, stop, create a working increment
    of software that meets your definition of done (DoD), and then start
    Sprinting, and review what you mean by "working" continuously, and at least
    on a regular cadence.</p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-what-is-a-definition-of-done-dod">What is a Definition of Done
    (DoD)</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>You need to start somewhere, and most often we don’t have a greenfield
    product. Either we are handed an existing product, or we are the team that
    built it and are switching to Scrum. Wherever your product originated, the
    code, and thus the product, will not currently be working software. How can
    it be when you don't have a definition of what working means? So what do you
    do?</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>Before you cut a single line of code, you need to decide what done means
    for your product and your company. It will be defined very differently if
    you are building firmware for pacemakers or if you are creating an
    e-commerce portal. Here are some characteristics of a Definition of
    Done:</p>

    <!-- /wp:paragraph -->


    <!-- wp:list -->

    <ul><li><strong>A short, measurable checklist</strong> - try and have things
    on your DoD that can be measured, that you can test the outcome, preferably
    in an automated fashion.</li><li><strong>Mirrors shippable</strong> - While
    you might not have shipped your product, <a
    href="https://nkdagility.com/blog/continuous-deliver-sprint/">although we
    recommended it</a>, you should have that choice. Your <a
    href="https://nkdagility.com/the-2020-scrum-guide/#product-owner">Product
    Owner</a> should be able to say, at the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#sprint-review">Sprint
    Review</a>: "That’s Awesome… lets ship it.".</li><li><strong>No further
    work</strong> - There should be no further work required from the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    to ship your product to production. Any additional work means that you were
    not Done, and it takes away from the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#product-owner">Product
    Owner</a> capacity for the next iteration. Ideally, you have a fully
    automated process for delivering software, and <a
    href="https://nkdagility.com/blog/a-better-way-than-staggered-iterations-for-delivery/">never
    use staggered iterations for delivery</a>.</li></ul>

    <!-- /wp:list -->


    <!-- wp:paragraph -->

    <p>Your short, measurable checklist that mirrors usable and results in no
    further work required to ship your product needs to be defined. I find the
    best way to do this is to get the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#scrum-team">Scrum
    Team</a> (the <a href="/the-2020-scrum-guide/#product-owner">Product
    Owner</a> plus the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    and any relevant <a
    href="https://nkdagility.com/training/audiences/stakeholders/">Stakeholders</a>)
    into a facilitated <a
    href="https://nkdagility.com/training/courses/engineering-practices-workshop/">DoD
    Workshop</a>. Without a Defenition of Done we don't understand what working
    software means, and <a
    href="https://nkdagility.com/blog/release-planning-and-predictable-delivery/">without
    working software we cant have predictable delivery</a>. Your <a
    href="https://nkdagility.com/blog/the-fallacy-of-the-rejected-backlog-item/">Product
    Owner can't reject a Backlog Item</a>, only whether the Increment is working
    or not.</p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-my-first-definition-of-done-dod">My first Definition of Done
    (DoD)</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>Your <a
    href="https://nkdagility.com/the-2020-scrum-guide/#commitment-definition-of-done">Definition
    of Done</a> does not just magically appear, and your software does not
    magically comply. Making your Software comply with your definition of done
    is hard work, and while your definition of done should organically grow, you
    need to create the seed that you can build on.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>I recommend that you run a workshop with the entire <a
    href="https://nkdagility.com/the-2020-scrum-guide/#scrum-team">Scrum
    Team</a>, and likely some other domain experts. If there are Stage Gates
    that your software has to pass after <a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    are Done, then you need representatives from those Gates to participate in
    the workshop. Regardless of your product you likely need representatives
    with the following expertise; Code, Test, Security, UX, UI, Architecture,
    etc. You may have this expertise on your team, or you may need to bring in
    an expert from your organisation, or even external to your organisation.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>Some examples of things to put on your definition of done:</p>

    <!-- /wp:paragraph -->


    <!-- wp:list -->

    <ul><li><strong>Increment Passes SonarCube checks with no Critical
    errors</strong> - You will be increasing over time, so maybe you need to say
    "<em>Code Passes SonarCube checks with no more than 50 Critical errors</em>"
    then work on it over time.</li><li><strong>Increment's Code Coverage stays
    the same or gets higher</strong> - Looking at a specific measure, like 90%,
    of code coverage is a read hearing and tells you nothing of code quality.
    However, it might be advantageous to monitor and measure for adverse change
    in code coverage, and we <a
    href="https://nkdagility.com/blog/you-are-doing-it-wrong-if-you-are-not-using-test-first/">always
    advocate for TDD practices</a>.</li><li><strong>Increment meets agreed
    engineering standards</strong> - You should decide rules for naming of
    methods, tests, variables and everything in-between. Start small and add
    over time. Link to your agreed standards on a Wiki and continuously improve
    and expand your rules. Automate if possible.</li><li><strong>Acceptance
    Criteria for Increment pass</strong> - Making sure you at least meet the
    prescribed criteria is a laudable goal and <a
    href="https://nkdagility.com/blog/you-are-doing-it-wrong-if-you-are-not-using-test-first/">automating
    them with ATDD practices</a> is even better.</li><li><strong>Acceptance
    Tests for Increment are Automated</strong> - Make sure that you automate all
    of your tests. If you think something will break, then you should have a
    test for it.</li><li><strong>Security Checks Pass on Increment</strong> -
    Use an automated tool as part of your build and check for known security
    vulnerabilities. You will not find all of your security issues, but at least
    don’t do things we know to be reflective of poor
    Security.</li><li><strong>Increment meets agreed UX standards</strong> -
    Again, have a Wiki page and make sure that you check it twice. If you are
    not using an automated DoD entry, then you need to agree as a Team that you
    have met the criteria.</li><li><strong>Increment meets agreed Architectural
    Guidelines</strong> - Wiki's are fantastic for this, but automate what you
    can.</li></ul>

    <!-- /wp:list -->


    <!-- wp:paragraph -->

    <p>Whatever <a
    href="https://nkdagility.com/the-2020-scrum-guide/#commitment-definition-of-done">Definition
    of Done</a> you come up with it is unlikely that your entire Product
    currently meets the criteria. You are not yet doing Scrum. Before you start
    Sprinting, you need to focus on making sure that your current Increment
    meets your new Definition of Done. Focus on Quality, which is what the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#developers">Developers</a>
    are accountable for, and make sure that your <a
    href="https://nkdagility.com/the-2020-scrum-guide/#increment">Increment</a>
    meets that new quality bar before you start. The next Increment can only
    reach the quality bar of all those that came before do, but you can and
    should <a
    href="https://nkdagility.com/blog/can-the-definition-of-done-change-per-sprint/">add
    to that quality bar</a>.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p><strong><em>The <a
    href="https://nkdagility.com/the-2020-scrum-guide/#commitment-definition-of-done">Definition
    of Done</a> is the commitment to quality for the <a
    href="https://nkdagility.com/the-2020-scrum-guide/#increment">Increment</a>!</em></strong></p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>Create a usable increment that meets your definition of done and then
    start sprinting. Keeping your software in a working state <a
    href="https://nkdagility.com/getting-started-with-modern-source-control-system-and-devops/">will
    require a modern source control system that provides you with the facility
    to implement good DevOps</a> practices.</p>

    <!-- /wp:paragraph -->


    <!-- wp:heading -->

    <h2 id="h-growing-your-definition-of-done-dod">Growing your Definition of
    Done (DoD)</h2>

    <!-- /wp:heading -->


    <!-- wp:paragraph -->

    <p>It's super important that quality is always increasing, and that means
    that you will need to at least reflect on your <a
    href="/the-2020-scrum-guide/#commitment-definition-of-done">Definition of
    Done</a> on a regular cadence. In <a
    href="/the-2020-scrum-guide/">Scrum</a>, this cadence is defined by your
    Sprint length, and you have a Kaizen moment at the <a
    href="/the-2020-scrum-guide/#sprint-retrospective">Sprint Retrospective</a>.
    That does not mean that you don’t reflect on your DOD all the time, you do.
    You reflect continuously on whether your increment currently meets your DoD,
    and what you need to do to get it there. You should always be reflecting on
    whether your DoD fits your needs. If your <a
    href="/the-2020-scrum-guide/#developers">Developers</a> finds that something
    is missing from the DoD halfway through the Sprint, then they should go
    ahead and add it, making sure that they are not endangering the <a
    href="/the-2020-scrum-guide/#commitment-sprint-goal">Sprint Goal</a>.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>You may discover that you have a performance problem with your product as
    David Corbin pointed out in my previous post. How do we make sure that we
    fix that issue? As I see it there are two pieces to this once you are in
    flight. You can Scrumble (stop Sprinting because of poor quality), and fix
    it, or you can integrate this new knowledge into your product cycle.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>If it is a significant issue that results in you not having working
    software, then you need to stop and fix. In Scrum, this is called a
    Scrumble, as a reflection that the <a
    href="/the-2020-scrum-guide/#developers">Developers</a> stumbled because
    something is missing. You should stop adding new features and create a
    usable increment before you continue Sprinting and adding new features. Once
    you have repaired the issue, you can increase your <a
    href="/the-2020-scrum-guide/#commitment-definition-of-done">Definition of
    Done</a> to make sure that all future <a
    href="/the-2020-scrum-guide/#increment">Increments </a>meet the new
    requirements.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p>If it is less significant, you might want to keep working and add what
    you need to your <a href="/the-2020-scrum-guide/#product-backlog">Product
    Backlog</a>. You can then deliver improvements over the next few Sprints
    that mitigate and then resolve the identified issue. Once you have resolved
    it, you can then pin the outcome by adding something to your DoD.</p>

    <!-- /wp:paragraph -->


    <!-- wp:paragraph -->

    <p><strong>Always look for ways that you can increase your quality. What
    does your definition of done look like today?</strong></p>

    <!-- /wp:paragraph -->
  - ''
  post_id: '38238'
  post_date: '2020-12-14 13:03:00'
  post_date_gmt: '2020-12-14 13:03:00'
  post_modified: '2021-01-20 15:11:37'
  post_modified_gmt: '2021-01-20 15:11:37'
  comment_status: open
  ping_status: open
  post_name: getting-started-definition-done-dod
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _wpcom_is_markdown
    meta_value: '1'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: pl_magazine_format
    meta_value: ''
  - meta_key: _yoast_wpseo_primary_category
    meta_value: '631'
  - meta_key: _yoast_wpseo_primary_marketing-category
    meta_value: '612'
  - meta_key: _wpml_media_duplicate
    meta_value: ''
  - meta_key: _wpml_media_featured
    meta_value: ''
  - meta_key: _yoast_wpseo_content_score
    meta_value: '30'
  - meta_key: _yoast_wpseo_focuskeywords
    meta_value: '[]'
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: dsq_thread_id
    meta_value: '6390906003'
  - meta_key: _wpbitly
    meta_value: http://nkdagility.net/2FBFH9a
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.9.3
  - meta_key: _wpv_contains_gutenberg_views
    meta_value: ''
  - meta_key: kamy_acc_user_role
    meta_value: a:0:{}
  - meta_key: kamy_acc_group_child
    meta_value: '[]'
  - meta_key: kamy_acc_group_default_filed
    meta_value: '[]'
  - meta_key: _yoast_wpseo_keywordsynonyms
    meta_value: '["DOD"]'
  - meta_key: _thumbnail_id
    meta_value: '45213'
  - meta_key: _wp_page_template
    meta_value: default
  - meta_key: _yoast_wpseo_focuskw
    meta_value: Definition of Done
  - meta_key: _yoast_wpseo_linkdex
    meta_value: '68'
  - meta_key: _yoast_wpseo_estimated-reading-time-minutes
    meta_value: '7'
  - meta_key: _yoast_wpseo_metadesc
    meta_value: >-
      Your Developers are ultimately responsible for creating done increments of
      working software. Done Increments. Done.
  - meta_key: _yoast_wpseo_is_cornerstone
    meta_value: '1'
  - meta_key: ekit_post_views_count
    meta_value: '6284'
  - meta_key: _toolset_associations_audience-post
    meta_value: >-
      {!{https://nakedalmstage.wpengine.com/?post_type=audience&#038;p=44700}!}
      +
      {!{https://nakedalmstage.wpengine.com/blog/audience-post/audiences-posts-44700-38238/}!}
  comment:
  - comment_id: '14461'
    comment_author: Page Not Found | Martin Hinshelwood - naked Agility Ltd
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/?p=38243
    comment_author_IP: 104.197.208.225
    comment_date: '2018-01-04 13:59:40'
    comment_date_gmt: '2018-01-04 13:59:40'
    comment_content: '[&#8230;] Getting started with a Definition of Done (DoD). [&#8230;]'
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1515074380.716792;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1515144675.22873;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14464'
    comment_author: Dew Drop - January 5, 2018 (#2637) - Morning Dew
    comment_author_email: ''
    comment_author_url: https://www.alvinashcraft.com/2018/01/05/dew-drop-january-5-2018-2637/
    comment_author_IP: 168.62.48.13
    comment_date: '2018-01-05 13:23:10'
    comment_date_gmt: '2018-01-05 13:23:10'
    comment_content: >-
      [&#8230;] Getting started with a Definition of Done (DoD). (Martin
      Hinshelwood) [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1515158590.556674;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1515165870.534122;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14467'
    comment_author: >-
      If your backlog is not refined then you are doing it wrong | Martin
      Hinshelwood - naked Agility Ltd
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/backlog-not-refined-wrong/
    comment_author_IP: 104.197.208.225
    comment_date: '2018-01-09 14:06:18'
    comment_date_gmt: '2018-01-09 14:06:18'
    comment_content: >-
      [&#8230;] Most Scrum Teams that I encounter don’t do refinement of their
      Product Backlog and try to work on things that they don’t understand
      correctly. However, if you get to the Sprint Planning Event and your
      backlog is not ready, then you are doing it wrong. If what you build is
      not of good quality then you should read about Defenition of Done.
      [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1515506778.445859;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1515579631.021752;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '14502'
    comment_author: >-
      Work can flow across the Sprint boundary | Martin Hinshelwood - naked
      Agility Ltd
    comment_author_email: ''
    comment_author_url: https://nkdagility.com/work-can-flow-across-sprint-boundary/
    comment_author_IP: 104.197.208.225
    comment_date: '2018-02-01 20:09:56'
    comment_date_gmt: '2018-02-01 20:09:56'
    comment_content: >-
      [&#8230;] definition of Done is an instrumental part of maintaining
      transparency of the past work and is not optional. The [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: a:2:{s:4:"time";d:1517515796.549742;s:5:"event";s:9:"check-ham";}
    - meta_key: akismet_history
      meta_value: >-
        a:3:{s:4:"time";d:1517517968.296068;s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
