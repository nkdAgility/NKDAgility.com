post:
  title: Bug in the Visual Studio Git integration that results in a merge conflict
  link: >-
    https://nkdagility.com/blog/bug-visual-studio-git-integration-results-merge-conflict/
  pubDate: Thu, 09 Oct 2014 15:20:01 +0000
  creator: MrHinsh
  guid:
    _: http://nakedalmweb.wpengine.com/?p=10734
    $:
      isPermaLink: 'false'
  description: ''
  encoded:
  - "<p class=\"lead\">When doing a PULL from Git from an origin\\branch but you have changes locally you may encounter a bug in the Visual Studio Git integration that results in a merge conflict fetching the head of the remote Git repository.</p>\r\n<p> <script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></p>\r\n<p>If like me you are new to Git there are a lot of things to learn. This last two weeks I have been onsite in Athens moving source from StarTeam to Git in TFS. As we have just started getting users onto Git we have started hitting workflow issues. In StarTeam they were not really using branching and were doing manual merges. This was for many reasons all of them seemingly perfectly reasonable but it takes up a lot of time. With nearly 50 coders it was well past being manageable and they are currently looking at 100 man-days to do a merge.</p>\r\n<p>I am trying to move them to a much more supportable model and for that I am moving them towards Git. I know this would be a steep learning curve for them but I believe it is the only reasonably way to support the issues that they have in their software strategy.</p>\r\n<p>More on that later, but for now I have been running into an issue with merge conflicts in Git when coders try to Pull from the server. It seems that whatever workflow they are used to when they follow it in Git they get a \"libgit2.Catagory = FetchHead (MergeConflict)\" message that adds that there are 3 conflicts that prevent a checkout. While my first thought is that they have uncommitted changes locally this is not the case. They maybe have 2-3 local commits and no outstanding uncommitted changes.</p>\r\n<p><img style=\"background-image: none; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border: 0px;\" title=\"clip_image001\" src=\"https://nkdagility.com/wp-content/uploads/2014/09/clip-image0013.png\" alt=\"clip_image001\" width=\"540\" height=\"292\" border=\"0\" /></p>\r\n<p>While this should be able to be handled it is not and I have 50 coders hitting it reputedly. The only way I have found so far to resolve the issue is to move their changes onto a temporary branch and rollback the local copy of the server branch. This allows them to do a Pull and then merge their local branch changes across.</p>\r\nhttps://twitter.com/ethomson/status/520262367616053248\r\n<p>Note: This is a bug in Visual Studio 2013.3 that has been fixed in 2013.4. You can download and install, as we did, the 2013.4 CTP to resolve the issue.</p>\r\n<p>While not ideal it does work. So in order to mitigate this issue permanently, pending an update from the TFS team, I am changing their workflow. When planning on working on an origin\\branch all developers will:</p>\r\n<ol>\r\n<li>Create a new \"feature-[name]\" or \"hotfix-[name]\" branch locally.</li>\r\n<li>They make all changes on this branch</li>\r\n<li>Pull regularly from origin\\branch and merge to FEATURE or HOTFIX branch</li>\r\n</ol>\r\n<p>When they are ready to Push to the server they then:</p>\r\n<ol>\r\n<li>Pull from origin\\branch to bring it up to date</li>\r\n<li>Merge into \"feature-[name]\" and get working</li>\r\n<li>Merge from \"feature-[name]\" to branch</li>\r\n<li>Push to origin\\branch</li>\r\n<li>DONE</li>\r\n</ol>\r\n<p>If they are then done with the feature of hotfix they can delete it, if not they can keep it around for reuse. Simpleâ€¦and it works for them every time. However sometimes they forget to do the change on the feature or hotfix branch and end up in the position above.</p>\r\n<p>It depends when they figure out what they have done what the solution is. If they have not committed to the branch then they can solve this in a few clicks.</p>\r\n<ol>\r\n<li>Create a new \"feature-[name]\" or \"hotfix-[name]\" unpublished branch</li>\r\n<li>Commit to the new unpublished branch</li>\r\n</ol>\r\n<p>One of the nice features of Git is that I you made a bunch of changes and have not checked in you can just \"checkout\" another branch and the local changes you have made will be preserved. Simple quick fix.</p>\r\n<p>If they only figure it out after they have committed one or more times to the branch then they have a few extra steps to resolve the committed bits on the published branch.</p>\r\n<ol>\r\n<li>Create a new \"feature-[name]\" or \"hotfix-[name]\" unpublished branch - This will take a copy of the commits that have not yet been pushed to the server. This preserving the changes they have already made.\r\n<ol>\r\n<li>Checkout the branch you want to rollback</li>\r\n<li>Use \"git reset --hard HEAD~[n]\" where [n] is the number of commits you want to back peddle</li>\r\n</ol>\r\n</li>\r\n<li>Pull from origin\\branch to bring it up to date</li>\r\n</ol>\r\n<p>After that they can happily Pull to the published branch and continue to code away on the unpublished local branch. Yes this means that every developer effectively has one or more (they may have more than one set of work on the go) personal branches. While this was a bad practice in a Server Version Control System (SVCS) it is a perfectly good practice for a Distributed Version Control System (DVCS) where merging and branching is cheap and easy.</p>\r\n<p>If you can you should install the Visual Studio 2013.4 CTP that fixes this issue and you can carry on as normal.</p>"
  - >-
    <p class="lead">When doing a PULL from Git from an origin\branch but you
    have changes locally you may encounter a bug in the Visual Studio Git
    integration that results in a merge conflict fetching the head of the remote
    Git repository.</p>
  post_id: '10734'
  post_date: '2014-10-09 16:20:01'
  post_date_gmt: '2014-10-09 15:20:01'
  post_modified: '2014-10-09 18:30:11'
  post_modified_gmt: '2014-10-09 17:30:11'
  comment_status: open
  ping_status: open
  post_name: bug-visual-studio-git-integration-results-merge-conflict
  status: publish
  post_parent: '0'
  menu_order: '0'
  post_type: post
  post_password: ''
  is_sticky: '0'
  category: {}
  postmeta:
  - meta_key: _views_template
    meta_value: '0'
  - meta_key: _thumbnail_id
    meta_value: '10678'
  - meta_key: _edit_last
    meta_value: '3'
  - meta_key: authorsure_include_css
    meta_value: ''
  - meta_key: _syn_old_sitegroups
    meta_value: a:0:{}
  - meta_key: _syn_selected_sitegroups
    meta_value: ''
  - meta_key: _wpbitly
    meta_value: http://nkdalm.net/1rFjRVb
  - meta_key: _mab_post_meta
    meta_value: >-
      a:2:{s:15:"post-action-box";s:7:"default";s:25:"post-action-box-placement";s:6:"bottom";}
  - meta_key: _yoast_wpseo_focuskw
    meta_value: merge conflict git
  - meta_key: _syn_slave_post_states
    meta_value: a:0:{}
  - meta_key: _yoast_wpseo_linkdex
    meta_value: '61'
  - meta_key: _wpas_done_all
    meta_value: '1'
  - meta_key: dsq_thread_id
    meta_value: '3099869782'
  - meta_key: _oembed_8e51f4eeb0c9eb74757680267db3a2ee
    meta_value: >-
      <blockquote class="twitter-tweet" width="500"><p><a
      href="https://twitter.com/MrHinsh">@MrHinsh</a> <a
      href="https://twitter.com/nakedALM">@nakedALM</a> Yep, that one&#39;s my
      bad.  Sorry about that.  (These are checkout conflicts, though, not merge
      conflicts, FWIW.)</p>&mdash; Edward Thomson (@ethomson) <a
      href="https://twitter.com/ethomson/status/520262367616053248">October 9,
      2014</a></blockquote><script async src="//platform.twitter.com/widgets.js"
      charset="utf-8"></script>
  - meta_key: _oembed_time_8e51f4eeb0c9eb74757680267db3a2ee
    meta_value: '1412875687'
  - meta_key: _wpcf_belongs_consulting-engagemen_id
    meta_value: '10772'
  - meta_key: _oembed_aec51ed6d40557b0a4583fef7d5db313
    meta_value: >-
      <blockquote class="twitter-tweet" width="550"><p><a
      href="https://twitter.com/MrHinsh">@MrHinsh</a> <a
      href="https://twitter.com/nakedALM">@nakedALM</a> Yep, that one&#39;s my
      bad.  Sorry about that.  (These are checkout conflicts, though, not merge
      conflicts, FWIW.)</p>&mdash; Edward Thomson (@ethomson) <a
      href="https://twitter.com/ethomson/status/520262367616053248">October 9,
      2014</a></blockquote><script async src="//platform.twitter.com/widgets.js"
      charset="utf-8"></script>
  - meta_key: _oembed_time_aec51ed6d40557b0a4583fef7d5db313
    meta_value: '1420749971'
  - meta_key: _jetpack_related_posts_cache
    meta_value: >-
      a:2:{s:32:"5c7a16c57ce023baf2f5a9ef699ce7fc";a:2:{s:7:"expires";i:1474882041;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:10677;}i:1;a:1:{s:2:"id";i:11465;}i:2;a:1:{s:2:"id";i:11491;}}}s:32:"8f6677c9d6b0f903e98ad32ec61f8deb";a:2:{s:7:"expires";i:1474911159;s:7:"payload";a:3:{i:0;a:1:{s:2:"id";i:10732;}i:1;a:1:{s:2:"id";i:10677;}i:2;a:1:{s:2:"id";i:11465;}}}}
  - meta_key: _wpghs_github_path
    meta_value: >-
      _posts/2014-10-09-bug-visual-studio-git-integration-results-merge-conflict.md
  - meta_key: _sha
    meta_value: ''
  - meta_key: _oembed_84d13ba3078108d2ee90afd3d19d474e
    meta_value: >-
      <blockquote class="twitter-tweet" data-width="550"><p lang="en"
      dir="ltr"><a href="https://twitter.com/MrHinsh">@MrHinsh</a> @nakedALM
      Yep, that one&#39;s my bad.  Sorry about that.  (These are checkout
      conflicts, though, not merge conflicts, FWIW.)</p>&mdash; Edward Thomson
      (@ethomson) <a
      href="https://twitter.com/ethomson/status/520262367616053248">October 9,
      2014</a></blockquote><script async src="//platform.twitter.com/widgets.js"
      charset="utf-8"></script>
  - meta_key: _oembed_time_84d13ba3078108d2ee90afd3d19d474e
    meta_value: '1464470515'
  - meta_key: _oembed_220570df2d32fd01b0178e2a66e1609e
    meta_value: >-
      <blockquote class="twitter-tweet" data-width="550"><p lang="en"
      dir="ltr"><a href="https://twitter.com/MrHinsh">@MrHinsh</a> @nakedALM
      Yep, that one&#39;s my bad.  Sorry about that.  (These are checkout
      conflicts, though, not merge conflicts, FWIW.)</p>&mdash; Edward Thomson
      (@ethomson) <a
      href="https://twitter.com/ethomson/status/520262367616053248">October 9,
      2014</a></blockquote><script async src="//platform.twitter.com/widgets.js"
      charset="utf-8"></script>
  - meta_key: _oembed_time_220570df2d32fd01b0178e2a66e1609e
    meta_value: '1493401420'
  - meta_key: _wpml_media_has_media
    meta_value: '1'
  - meta_key: _tribe_ticket_capacity
    meta_value: '0'
  - meta_key: _tribe_ticket_version
    meta_value: 4.12.1.2
  - meta_key: _oembed_3f40fcaadc79b09fe490580404d26f76
    meta_value: >-
      <blockquote class="twitter-tweet" data-width="550" data-dnt="true"><p
      lang="en" dir="ltr"><a
      href="https://twitter.com/MrHinsh?ref_src=twsrc%5Etfw">@MrHinsh</a>
      @nakedALM Yep, that one&#39;s my bad.  Sorry about that.  (These are
      checkout conflicts, though, not merge conflicts, FWIW.)</p>&mdash; Edward
      Thomson (@ethomson) <a
      href="https://twitter.com/ethomson/status/520262367616053248?ref_src=twsrc%5Etfw">October
      9, 2014</a></blockquote><script async
      src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
  - meta_key: _oembed_time_3f40fcaadc79b09fe490580404d26f76
    meta_value: '1605695768'
  - meta_key: ekit_post_views_count
    meta_value: '1288'
  comment:
  - comment_id: '5359'
    comment_author: Dew Drop &#8211; October 10, 2014 (#1874) | Morning Dew
    comment_author_email: ''
    comment_author_url: http://www.alvinashcraft.com/2014/10/10/dew-drop-october-10-2014-1874/
    comment_author_IP: 168.62.48.19
    comment_date: '2014-10-10 13:20:27'
    comment_date_gmt: '2014-10-10 12:20:27'
    comment_content: >-
      [&#8230;] Bug in the Visual Studio Git integration that results in a merge
      conflict (Martin Hinshelwood) [&#8230;]
    comment_approved: '1'
    comment_type: pingback
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: akismet_result
      meta_value: 'false'
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1412943627.198819;s:7:"message";s:28:"Akismet cleared
        this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}
    - meta_key: akismet_history
      meta_value: >-
        a:4:{s:4:"time";d:1413209533.346539;s:7:"message";s:46:"MrHinsh changed
        the comment status to
        approved";s:5:"event";s:15:"status-approved";s:4:"user";s:7:"MrHinsh";}
  - comment_id: '5440'
    comment_author: B. Clay Shannon
    comment_author_email: axx3andspace@gmail.com
    comment_author_url: ''
    comment_author_IP: 199.96.38.41
    comment_date: '2014-10-13 16:57:00'
    comment_date_gmt: '2014-10-13 15:57:00'
    comment_content: >-
      We have that same problem, and can solve it with this series of steps:


      0) Select the Team Explorer "Actions" link to the right of the "Sync"
      button


      1) Select the "Open Command Prompt" menu item below that


      2) In the command prompt, enter:


      (a) "git pull"


      (b) When prompted for userName, enter it


      (c) When prompted for pwd, enter it


      3) Select "Sync" on the Team Explorer tab


      Voila!
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '1633437214'
  - comment_id: '5453'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@hinshelwood.com
    comment_author_url: http://nkdagility.com/blog
    comment_author_IP: 134.32.149.146
    comment_date: '2014-10-14 08:18:00'
    comment_date_gmt: '2014-10-14 07:18:00'
    comment_content: >-
      Correct, this is a bug in the Visual Studio UI implementation. Drop to the
      command line or third party tool and everything is fine.

      However when you have users that don't like command line ;) ...
    comment_approved: '1'
    comment_type: comment
    comment_parent: '5440'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '1633437214'
    - meta_key: dsq_post_id
      meta_value: '1634623215'
  - comment_id: '14109'
    comment_author: shreedevi bhat
    comment_author_email: shreedevi.012@gmail.com
    comment_author_url: ''
    comment_author_IP: 64.128.141.10
    comment_date: '2016-09-19 08:07:00'
    comment_date_gmt: '2016-09-19 07:07:00'
    comment_content: >-
      Hi Team,

      We are facing strange issue in visual studio during git merge conflict
      resolution from last 3 days. Please find the below details.

      TFS 2015 with update1

      Visual Studio 2013 update 4 

      Team Project with Git repository.

      We are getting merge conflicts during merge of 2 branches. We are
      selecting Keep Source / Keep Target options on conflict resolution window.
      But nothing is working on click of options.

      Please help me with this.

      Thanks in Advance,

      Shree
    comment_approved: '1'
    comment_type: comment
    comment_parent: '0'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: ''
    - meta_key: dsq_post_id
      meta_value: '2904342788'
  - comment_id: '14110'
    comment_author: Martin Hinshelwood
    comment_author_email: martin@nakedalm.com
    comment_author_url: http://nakedalm.com/blog
    comment_author_IP: 85.255.236.28
    comment_date: '2016-09-19 08:48:00'
    comment_date_gmt: '2016-09-19 07:48:00'
    comment_content: >-
      You should drop to the command prompt and try the merge there. There might
      be something that is breaking the VS2013 integration that will be ok in
      Git.


      You could also try opening the git repo in VS2015.
    comment_approved: '1'
    comment_type: comment
    comment_parent: '14109'
    comment_user_id: '0'
    commentmeta:
    - meta_key: dsq_parent_post_id
      meta_value: '2904342788'
    - meta_key: dsq_post_id
      meta_value: '2904370220'
