{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T12:10:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T12:10:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on hypothesis-driven experimentation or Agile methodologies.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T12:10:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the implications of poor quality code on productivity, brand reputation, and technical debt, which are not directly related to the principles and practices of entrepreneurship.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T12:10:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, technical debt, and engineering practices, without a focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T12:10:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and engineering practices, without a clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T12:10:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, without a clear focus on systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T12:10:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a focus on coaching practices or techniques.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T12:10:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T12:10:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code on productivity and brand reputation, without addressing employee engagement or related themes.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-14T17:17:44",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the implications of poor quality code on productivity and brand reputation, which are relevant to product management. However, it primarily focuses on technical aspects and engineering practices rather than strategic product management methodologies or frameworks. While it touches on the importance of delivering value to customers, it lacks a direct focus on product management principles, making it a secondary discussion rather than a primary one.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T12:10:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and engineering practices, without a clear focus on Agile leadership principles or practices.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T12:10:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on Daily Scrum or its related practices.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T12:10:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code on productivity, brand reputation, and technical debt, rather than focusing on system configuration processes or methodologies.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-03-14T17:17:52",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity and brand reputation, which indirectly relates to digital transformation. However, it lacks a direct focus on the strategic adoption of digital technologies or methodologies for business transformation. While it touches on improving processes and efficiency, it does not delve into broader digital transformation strategies or case studies, resulting in a moderate confidence score.",
    "level": "Tertiary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-10T11:36:40",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content discusses the implications of poor quality code and its impact on productivity, brand reputation, and the ability to deliver features, which aligns with the importance of working software. It highlights the need for high-quality, functional software and the benefits of addressing technical debt, which are core themes of the category. However, while it touches on these aspects, the primary focus is on the costs associated with poor quality rather than a direct discussion of working software itself, leading to a high confidence score but not a perfect one.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-03-14T17:18:47",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and suggests improvements, but it lacks a structured approach to decision-making. While it touches on the importance of investing in quality and reducing technical debt, it does not provide evidence-based methodologies or frameworks for decision-making, nor does it focus on collaborative insights or empirical evidence. The discussion is more about the implications of poor decisions rather than a structured decision-making process.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-12T12:11:03",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without a focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T12:11:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the costs and impacts of poor quality code, engineering practices, and productivity, without any focus on remote working or Agile practices.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-03-14T17:18:55",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and the benefits of improving code quality, which indirectly relates to efficiency and productivity. However, it does not explicitly mention Lean principles or focus on minimising waste in the product development process. The discussion is more centred on technical debt and code quality rather than Lean Product Development concepts.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T12:11:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity, brand reputation, and technical debt, without a clear focus on organisational culture or its influence on Agile methodologies.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T12:11:08",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on customer feedback mechanisms or integration into product development.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T12:11:10",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and engineering practices, with only a brief mention of Azure DevOps without a direct focus on Azure Repos functionalities or practices.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T12:11:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a focus on transparency in Agile processes.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T12:11:13",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, technical debt, and engineering practices, without a clear focus on the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T12:11:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the implications of poor quality code on productivity, brand reputation, and technical debt, without a clear focus on product strategy methodologies or frameworks.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T12:11:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, rather than focusing on strategies for retaining customers.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T12:11:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, technical debt, and engineering practices, without a focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-03-13T14:46:46",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 30,
    "final_score": 59.0,
    "reasoning": "The content discusses the implications of poor-quality code and its impact on productivity and brand reputation, which indirectly relates to strategic outcomes in Agile environments. However, it lacks a direct focus on strategic alignment or specific Agile methodologies, making it more of a general discussion on quality rather than a strategic analysis.",
    "level": "Tertiary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-03-14T17:18:20",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the impact of poor-quality code on innovation and productivity, highlighting how addressing technical debt can free up resources for innovation. However, it does not explicitly focus on the Ability to Innovate as a primary theme, nor does it delve deeply into frameworks or metrics for measuring innovation capabilities. The discussion is more about the consequences of poor practices rather than a structured approach to enhancing innovation.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T12:11:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Agile frameworks or their principles.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T12:11:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity, brand reputation, and technical debt, without a clear focus on scaling agile practices or frameworks.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-12T12:11:28",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, rather than focusing on team collaboration dynamics or Agile methodologies.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-03-14T17:18:53",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the impact of poor-quality code on customer satisfaction, particularly in terms of brand reputation and customer support strain. However, the primary focus is on technical debt and code quality rather than a comprehensive exploration of customer satisfaction principles and practices. While it touches on customer happiness, it does not delve deeply into measurement techniques or strategies for enhancing customer engagement, which are central to the category.",
    "level": "Tertiary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-03-14T17:17:44",
    "ai_confidence": 32.0,
    "ai_mentions": 100.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and the importance of improving code quality, which indirectly relates to Lean principles of efficiency and waste reduction. However, it primarily focuses on software quality and technical debt rather than explicitly addressing Lean Thinking concepts such as value stream mapping or waste identification. The mention of productivity and efficiency is present but lacks depth in Lean-specific tools or methodologies.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T12:11:32",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and technical debt, without a clear focus on Cycle Time as a primary topic.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-10T13:53:59",
    "ai_confidence": 87.0,
    "ai_mentions": 75.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the implications of poor quality code and the importance of engineering practices, such as refactoring, automation, and the impact of branching strategies on productivity. It highlights the benefits of improving engineering practices, including increased productivity and brand reputation, which aligns closely with the core themes of clean code and continuous improvement in Agile methodologies. The depth of discussion is significant, providing detailed examples and outcomes from real-world scenarios, thus reinforcing its relevance to the category.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T12:11:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity and brand reputation, without a clear focus on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-10T17:50:25",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses the implications of poor quality code on productivity, brand reputation, and engineering practices, which are all critical aspects of software development. It highlights specific methodologies and practices, such as the importance of maintaining a single version of a product, the impact of branching strategies, and the need for continuous improvement in engineering excellence. The depth of the discussion is significant, providing detailed examples and case studies, particularly around the Azure DevOps team's experience, which illustrates the benefits of addressing technical debt and improving code quality. Overall, the content aligns closely with the core themes of software development, making it a strong fit for the category.",
    "level": "Secondary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-06T14:42:35",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the implications of poor quality code on productivity, brand reputation, and overall engineering practices. It highlights the importance of maintaining high standards in software craftsmanship, addressing technical debt, and implementing effective engineering processes. The detailed examples provided, such as the case of Azure DevOps, illustrate the benefits of refactoring and improving engineering practices, aligning closely with the core themes of Engineering Excellence. The depth of discussion on the costs associated with poor engineering practices and the strategies for improvement further supports a high confidence score.",
    "level": "Secondary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-03-14T15:07:21",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the impact of poor-quality code on team productivity and mentions a case study of the Azure DevOps team improving their efficiency, which aligns with throughput concepts. However, it primarily focuses on the costs of poor code quality rather than directly measuring or optimising throughput, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-03-14T17:18:18",
    "ai_confidence": 45.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 35.0,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of code quality and mentions Azure DevOps in the context of improving productivity through better practices. However, it does not focus specifically on Azure Pipelines or CI/CD processes, which are central to the category. The mention of Azure DevOps is brief and serves more as an example rather than a detailed discussion on Azure Pipelines. Overall, while there is some relevance, the primary focus is not on Azure Pipelines.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-12T12:11:48",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and engineering practices, without a clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-03-14T17:18:48",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the importance of code quality and mentions unit tests briefly, but it primarily focuses on the costs of poor-quality code and strategies for improvement rather than on automated testing principles or methodologies. The discussion lacks depth in automated testing practices and tools, which are central to the category.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-12T12:11:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, without a clear focus on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T12:11:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code and engineering practices, with no clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-12T12:11:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on change management strategies or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T12:11:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without focusing on mentoring, coaching, or professional development in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-12T12:11:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on empirical process control principles or Agile methodologies.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-12T12:11:58",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, rather than focusing on methodologies for validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T12:12:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T12:12:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and technical debt, but does not focus on revenue per employee as a primary topic.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-11T00:17:48",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the implications of poor quality code and its impact on productivity, team dynamics, and brand reputation, which are relevant to software developers. However, it lacks a direct focus on Agile or DevOps methodologies, and while it touches on engineering practices, it does not delve deeply into specific Agile or DevOps principles. The discussion is more about the consequences of poor practices rather than how developers can leverage Agile or DevOps to improve their work.",
    "level": "Secondary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-12T12:12:04",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, focusing on productivity, brand reputation, and technical debt, without a clear emphasis on Test First Development principles or practices.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-03-14T17:17:44",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity and customer satisfaction, which indirectly relates to frequent releases. However, it does not explicitly focus on the principles of frequent releases, continuous delivery, or deployment strategies. The mention of Azure DevOps improving their release efficiency hints at the benefits of frequent releases, but the overall discussion is more centred on code quality and technical debt rather than the release process itself.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T12:12:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the costs and impacts of poor quality code, technical debt, and productivity, but does not focus on estimation techniques or practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-03-14T17:18:36",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and suggests improvements, but it primarily focuses on the implications of code quality rather than directly addressing troubleshooting techniques or methodologies. While it touches on issues like bugs and technical debt, it lacks a systematic approach to diagnosing and resolving specific technical problems, which is essential for a strong alignment with the Troubleshooting category.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-03-14T17:18:40",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity and customer satisfaction, which indirectly relates to the concept of delivering valuable software increments. However, it does not explicitly mention the Increment or its role within Agile frameworks, nor does it focus on the delivery of software increments as a primary topic.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T12:12:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, engineering practices, and productivity, with no specific focus on the Windows operating system or its related topics.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T12:12:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on Sprint Review or its related processes.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-12T12:12:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and technical debt, without a clear focus on Lead Time as defined in the category.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T12:12:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without a focus on scaling Agile practices or coordination among multiple teams.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-11T09:49:22",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 40.0,
    "ai_depth": 32.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the practical implications of poor quality code and its impact on productivity, brand reputation, and overall project management. It provides real-world examples, such as the case of CrowdStrike and the Azure DevOps team, illustrating how addressing technical debt and improving engineering practices can lead to significant productivity gains and better outcomes. The focus on practical problem-solving strategies and the integration of lessons learned from experience aligns well with the core themes of Pragmatic Thinking. However, while the content is rich in examples and insights, it does not explicitly mention Agile, Scrum, or DevOps frameworks, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-03-14T17:17:44",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity and deployment efficiency. While it touches on reducing feedback loops and improving deployment intervals, the primary focus is on code quality rather than deployment frequency itself. The mention of Azure DevOps improving their validation time hints at deployment frequency but lacks a detailed exploration of strategies or metrics specifically related to deployment frequency.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-12T12:12:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on agile methodologies or principles. It does not address agile frameworks, roles, or practices central to Agile Project Management.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-14T17:18:22",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the importance of reducing branching strategies and mentions continuous integration as a method to improve code quality. However, the primary focus is on the costs of poor-quality code and the benefits of high-quality code rather than a detailed exploration of Continuous Integration principles or practices. While CI is mentioned, it is not the central theme, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-12T12:12:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity, brand reputation, and technical debt, without a clear focus on Agile methodologies or strategic planning.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-21T16:58:04",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the importance of code quality and its impact on productivity and brand reputation, which are relevant to Continuous Delivery. However, it primarily focuses on the costs associated with poor-quality code rather than the principles and practices of Continuous Delivery itself. While there are mentions of improving processes and reducing technical debt, the discussion lacks a direct focus on Continuous Delivery practices such as automation, rapid feedback, or specific delivery techniques.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T12:12:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity, brand reputation, and technical debt, without a clear focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T12:12:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, technical debt, and productivity losses, without addressing the criteria or importance of a Definition of Ready for backlog items.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T12:12:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T12:12:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity, brand reputation, and technical debt, without focusing on team dynamics or motivation strategies.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-14T17:17:58",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 50.0,
    "ai_depth": 75.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the impact of poor-quality code on team productivity and morale, which aligns with the themes of team performance. It mentions specific strategies for improving team efficiency and reducing cognitive load, indicating a focus on enhancing team dynamics. However, the primary focus is on code quality rather than direct team performance strategies, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T12:12:46",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity and brand reputation, without any mention of AI or its integration in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T12:12:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T12:12:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T12:12:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, technical debt, and engineering practices, without addressing working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-03-14T17:18:42",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and the benefits of improving code quality, which indirectly relates to Lean principles such as waste reduction and continuous improvement. However, it primarily focuses on software quality and technical debt rather than explicitly addressing Lean concepts or practices. The discussion lacks depth in Lean-specific tools or methodologies, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T12:12:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-03-11T11:12:58",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the implications of poor quality code, which directly relates to technical debt. It highlights the costs associated with maintaining multiple versions of a product, the cognitive load on engineers, and the long-term impacts of past design decisions. The narrative includes specific examples of how addressing technical debt can lead to improved productivity and brand reputation, aligning well with the core themes of the category. The depth of discussion is significant, providing detailed insights into the consequences of neglecting technical debt and the benefits of remediation strategies.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T12:12:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity and brand reputation, without addressing Scrum Values or their significance.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T12:12:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity and brand reputation, without addressing organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-12T12:12:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and the impact on productivity and brand reputation, without a clear focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-12T12:13:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and engineering practices, without a clear focus on Scrum principles, roles, or product development methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-11T13:07:28",
    "ai_confidence": 87.0,
    "ai_mentions": 75.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the implications of poor quality code on operational efficiency, highlighting the costs associated with maintaining multiple product versions and the cognitive load on engineers. It aligns well with operational practices by addressing process optimisation, continuous improvement, and the importance of integrating quality into the development process. The depth of discussion is significant, providing detailed examples and metrics related to productivity and delivery speed, which are core to the category.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-03-21T16:58:07",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the costs of poor-quality code and the benefits of investing in quality, which aligns with the concept of improving outcomes and productivity. However, it lacks direct references to Evidence-Based Management principles and does not focus on empirical metrics or data-informed decision-making, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T12:13:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T12:13:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity, brand reputation, and technical debt, without a clear focus on Scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T12:13:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without a clear focus on the Scrum Master role or related responsibilities.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T12:13:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity, brand reputation, and technical debt, without a clear focus on scaling Agile methodologies or enterprise-level Agile practices.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T12:13:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, without a clear focus on forecasting methodologies or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-03-11T16:06:37",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the implications of poor-quality code and the importance of technical debt management, which aligns with technical leadership principles. However, it primarily focuses on the costs associated with code quality rather than providing in-depth strategies for leading teams or fostering agile practices. While it touches on relevant topics, such as productivity and engineering excellence, it lacks a strong emphasis on the role of leadership in guiding teams through these challenges.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T12:13:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, rather than focusing on methodologies for identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T12:13:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without focusing on Lean Startup principles such as MVP, Build-Measure-Learn feedback loop, or validated learning.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T12:13:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, rather than focusing on Agile Planning methodologies or practices.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-12T12:13:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on accountability or team ownership principles in Agile.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-12T12:13:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity and brand reputation, without focusing on the concept of Minimum Viable Product or its development.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T12:13:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and technical debt, without focusing on collaboration tools or Agile team dynamics.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T12:13:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity and brand reputation, without addressing psychological safety or its role in team dynamics.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T12:13:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, technical debt, and productivity losses, without focusing on specific deployment strategies or methodologies.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T12:13:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, without focusing on Scrum roles, team dynamics, or collaboration techniques relevant to a Scrum Team.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-11T14:17:35",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the implications of poor-quality code and the importance of improving code quality, which aligns closely with the principles of software craftsmanship. It addresses technical debt management, refactoring, and the integration of engineering excellence practices, demonstrating a strong focus on methodologies that enhance software quality. The depth of discussion is significant, providing actionable strategies for improvement, which further supports a high confidence score.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T12:13:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, without a clear focus on release management processes or practices.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-03-14T17:18:15",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the importance of code quality and mentions practices like unit tests, but it does not focus specifically on Test Driven Development (TDD) principles or the TDD cycle. While it touches on related themes, such as reducing technical debt and improving productivity, it lacks a detailed exploration of TDD as a methodology.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T12:13:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than analysing trends in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-12T12:13:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-03-14T17:18:03",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the impact of poor-quality code on productivity and team morale, with a specific mention of complex branching strategies and the need for simpler approaches. It aligns with the category by addressing modern source control practices, particularly in the context of version management and continuous integration. However, the primary focus is on code quality rather than source control methodologies, which limits the depth of discussion on the category itself.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T12:13:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, without focusing on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T12:13:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and the impact on productivity and brand reputation, without a focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T12:13:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity, brand reputation, and engineering practices, without addressing asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T12:13:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code on productivity and brand reputation, without a clear focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T12:13:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, focusing on operational issues rather than long-term strategic objectives or business agility.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-03-14T17:18:38",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the importance of improving code quality and mentions practices like reducing feedback loops and investing in engineering excellence, which align with continuous learning principles. However, it primarily focuses on the costs of poor-quality code rather than explicitly promoting a growth mindset or knowledge sharing, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T12:09:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, engineering practices, and productivity, without a clear focus on decision-making processes or frameworks related to uncertainty.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-12T12:09:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity, brand reputation, and technical debt, without a clear focus on enterprise agility principles or organisational-level agility practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-03-14T17:17:55",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and the benefits of improving code quality, which aligns with Lean principles of efficiency and waste reduction. However, it does not explicitly mention Lean methodologies or tools, and the focus is primarily on software quality rather than Lean practices. The discussion lacks depth in Lean-specific strategies, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-03-14T17:18:29",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the costs of poor-quality code and how improving code quality can enhance productivity and brand reputation. While it touches on themes of organisational improvement and efficiency, it lacks a direct focus on resilience and change management strategies. The discussion is primarily technical and does not delve into the human and cultural aspects of change, which are crucial for the category.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T12:09:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code and technical debt on productivity and brand reputation, rather than installation or configuration processes.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-06T13:28:53",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the implications of poor code quality on productivity, brand reputation, and technical debt, which are all central themes in the 'Code and Complexity' category. It highlights the relationship between code quality and complexity, particularly in the context of maintaining multiple product versions and the cognitive load on engineers. The depth of discussion is significant, providing specific examples and outcomes from real-world scenarios, such as the Azure DevOps team's improvements. However, while the content is rich in detail, it could benefit from a more explicit connection to complexity theory principles, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-03-06T14:42:40",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and the importance of optimising engineering practices to enhance throughput. It highlights how technical debt and inefficient practices can lead to bottlenecks, affecting the overall flow of work. The mention of metrics like feature delivery rates and the shift from long-running tests to quicker validation methods aligns well with flow efficiency principles. However, while the content touches on relevant themes, it primarily focuses on quality and technical debt rather than flow efficiency as a standalone topic.",
    "level": "Secondary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T12:09:40",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content heavily discusses the costs of poor quality code and its impact on productivity and brand reputation, without any mention of AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-06T15:43:33",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content discusses the implications of poor quality code on product delivery, highlighting the costs associated with fixing bugs, maintaining multiple versions, and the impact on team productivity. It aligns well with the core themes of product delivery, such as the importance of quality assurance, iterative development, and the role of engineering practices in enhancing delivery efficiency. The depth of discussion is significant, providing detailed examples and metrics that illustrate the relationship between quality and delivery performance.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-12T12:09:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and engineering practices, focusing on technical debt and productivity rather than Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-14T17:18:08",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the implications of poor-quality code and how improving it can lead to increased productivity and innovation. While it touches on the importance of learning from past mistakes and adapting practices, the primary focus is on the costs associated with code quality rather than a deep exploration of discovery and learning methodologies. The mention of reducing feedback loops and investing in engineering excellence aligns with the category, but the overall depth of discussion on discovery and learning processes is moderate.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T12:09:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T12:09:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T12:09:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on transparency or accountability within Agile teams.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-14T17:18:12",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the implications of poor-quality code and suggests practical techniques for improvement, such as reducing branching strategies and investing in engineering excellence. However, while it touches on relevant tools and methodologies, the primary focus is more on the consequences of poor practices rather than a detailed exploration of specific tools or frameworks that enhance Agile and DevOps practices.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T12:09:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without any reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-03-14T17:18:32",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity and brand reputation, which indirectly relates to market adaptability. However, it lacks a direct focus on Agile, DevOps, or Lean methodologies, and does not provide specific strategies for enhancing market responsiveness. The mention of Azure DevOps showcases a case of improved efficiency, but the overall discussion is more about code quality than market adaptability.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T12:10:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the impacts of poor quality code on productivity, brand reputation, and technical debt, with specific examples and actionable insights related to software engineering practices.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-21T10:41:01",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 50,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of code quality and its impact on productivity, which aligns with DevOps principles of continuous improvement and shared accountability. However, it primarily focuses on the costs associated with poor-quality code rather than explicitly addressing DevOps practices or cultural shifts. The mention of Azure DevOps provides a connection to the category, but the overall discussion lacks depth in DevOps-specific strategies or methodologies.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-14T17:18:01",
    "ai_confidence": 65.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 20,
    "final_score": 60.0,
    "reasoning": "The content discusses the impact of poor-quality code and mentions the Azure DevOps team as a case study for improving productivity. However, the primary focus is on code quality rather than Azure DevOps itself. While there is a relevant mention of Azure DevOps, it is not the central theme of the discussion, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T12:10:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code and engineering practices, rather than specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-03-14T17:17:44",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity and brand reputation, which are relevant to business agility. However, it primarily focuses on technical debt and code quality rather than the broader principles and practices of business agility. The mention of missed opportunities and the need for innovation aligns somewhat with business agility, but the overall discussion lacks depth in agile methodologies and leadership roles in fostering agility.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T12:10:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without any clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-07T12:33:15",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 27.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity, brand reputation, and customer satisfaction, which aligns with the principles of value delivery. It highlights the importance of addressing technical debt and improving engineering practices to enhance value delivery. However, while it touches on relevant themes, the primary focus is more on the consequences of poor quality rather than specific strategies or methodologies for value delivery within Agile or DevOps frameworks.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-07T12:48:38",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 27.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content discusses the implications of poor quality code and the importance of engineering practices that enhance productivity and quality. It mentions specific practices like reducing branching strategies and the impact of technical debt on productivity and brand reputation. However, while it touches on relevant themes such as the need for high-quality code and the consequences of neglecting engineering practices, it lacks a focused discussion on specific methodologies like TDD or CI/CD. The depth of technical discussion is moderate, primarily highlighting the consequences rather than providing detailed methodologies or practices.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-14T17:18:50",
    "ai_confidence": 42.0,
    "ai_mentions": 100.0,
    "ai_alignment": 35.0,
    "ai_depth": 45.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the impact of poor-quality code on productivity and innovation, which aligns with the themes of organisational agility. However, it primarily focuses on technical debt and code quality rather than explicitly addressing agile methodologies or cultural shifts necessary for agility. The mention of productivity and missed opportunities hints at agility but lacks depth in discussing agile principles or frameworks.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T12:10:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code and engineering practices, without personal anecdotes or reflections related to Agile, Scrum, or DevOps.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-14T17:18:44",
    "ai_confidence": 72.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the impact of poor-quality code on team productivity and morale, highlighting the interplay between human behaviour and structured methodologies. It addresses team dynamics, the importance of reducing cognitive load, and the need for effective communication and processes to enhance productivity. However, while it touches on these aspects, the primary focus remains on technical debt and code quality rather than a deep exploration of people and process methodologies.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-14T17:18:06",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the impact of poor-quality code on team productivity and morale, which touches on sociotechnical aspects. However, it primarily focuses on technical debt and code quality without a thorough exploration of the interplay between social and technical systems within organisations. While there are mentions of team dynamics and productivity, the discussion lacks depth in addressing organisational culture or structure, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T12:10:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the implications of poor quality code and engineering practices, rather than providing news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-03-14T17:18:24",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and the benefits of improving code quality, which indirectly relates to metrics and learning through the lens of productivity and team efficiency. However, it lacks explicit discussions on metrics, data collection, or feedback mechanisms, which are central to the category. The focus is more on the implications of code quality rather than on evidence-based decision-making or continuous improvement methodologies.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-14T17:17:46",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the implications of poor-quality code and its impact on productivity and brand reputation, which are relevant to the application lifecycle. However, it primarily focuses on code quality rather than the comprehensive management of the application lifecycle stages, tools, or methodologies. While there are mentions of practices that could relate to ALM, they are not the primary focus of the discussion.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-03-14T17:17:44",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the costs associated with poor-quality code and the benefits of improving code quality, which indirectly relates to efficiency and productivity. However, it does not explicitly mention Value Stream Management or its core principles, nor does it provide in-depth analysis or techniques related to value streams. The focus is more on code quality and technical debt rather than the strategic approach of Value Stream Management.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T12:10:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the impacts of poor quality code on productivity, brand reputation, and technical debt, focusing on engineering practices rather than psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:03:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without a clear focus on platform engineering or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:03:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-03-21T10:41:05",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content discusses the importance of code quality and its impact on productivity and brand reputation, but it does not explicitly mention the Agile Product Operating Model or its principles. While there are elements of continuous improvement and team efficiency that align with agile methodologies, the primary focus is on technical debt and code quality rather than the broader framework of APOM.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:49:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, without a clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T17:45:56",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the impact of poor-quality code on team productivity and morale, which touches on aspects of collaboration and decision-making. However, it primarily focuses on technical debt and code quality rather than the broader themes of social technologies. While there are mentions of team dynamics and productivity, the depth of discussion on social frameworks and methodologies is limited, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without a clear focus on Internal Developer Platforms or their role in streamlining development processes.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the costs and impacts of poor quality code, engineering practices, and productivity, without any mention of Artificial Intelligence or its application in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-14T17:17:44",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 3.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation. While it touches on themes relevant to software development, it does not explicitly mention Scrum principles, roles, events, or artifacts. The discussion lacks a direct focus on Scrum practices or frameworks, resulting in a low confidence score for alignment with the Scrum category.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T15:39:18",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of improving code quality and integrating security into the development process, which aligns with the Shift-Left Strategy. However, it primarily focuses on the costs of poor-quality code and general practices for improvement rather than explicitly detailing the Shift-Left approach or its principles. The mention of reducing feedback loops and baking security into the process indicates some alignment, but the overall depth and direct focus on Shift-Left practices are limited.",
    "level": "Secondary"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-03-21T16:57:54",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the importance of improving code quality and its impact on productivity and brand reputation, which aligns with the principles of Continuous Improvement. However, while it touches on relevant themes such as reducing technical debt and enhancing team effectiveness, it does not explicitly frame these discussions within the context of Continuous Improvement methodologies or strategies. The focus is more on the consequences of poor quality rather than a structured approach to ongoing improvement.",
    "level": "Secondary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-03-21T16:57:56",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the importance of code quality and its impact on productivity and brand reputation, which indirectly relates to common goals in Agile and DevOps. However, it lacks explicit discussions on shared objectives or alignment strategies, focusing more on the consequences of poor quality rather than how to align team efforts with overarching goals.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-03-21T16:57:59",
    "ai_confidence": 72.0,
    "ai_mentions": 3,
    "ai_alignment": 80.0,
    "ai_depth": 75.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity, team morale, and brand reputation, which aligns with the core themes of competence. It mentions strategies for improving code quality, such as reducing branching and investing in engineering excellence, indicating a focus on skill development and continuous improvement. However, while competence is a significant theme, the primary focus is on the costs of poor-quality code rather than a direct exploration of competence itself.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-03-21T16:58:01",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of code quality and its impact on productivity and brand reputation, which are relevant to the principles of the One Engineering System. However, it does not explicitly mention 1ES or its components, nor does it focus on integration and standardisation of engineering processes. The discussion is more centred on general software quality rather than the specific framework of 1ES.",
    "level": "Ignored"
  }
}
