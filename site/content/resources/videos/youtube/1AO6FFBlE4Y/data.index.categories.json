{
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code on productivity, brand reputation, and the importance of engineering practices, highlighting the benefits of technical excellence.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity and brand reputation, emphasising the importance of engineering excellence and iterative processes, which are central to enterprise agility.",
    "level": "Secondary"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, which relates to scaling agility, but it primarily focuses on the costs and consequences of technical debt rather than agility practices themselves.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "Content discusses the impact of engineering practices on team productivity and brand reputation, highlighting the importance of quality processes in software development.",
    "level": "Secondary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, which are important aspects of value stream management, but it primarily focuses on technical debt and engineering practices.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, which aligns with Lean principles of reducing waste and enhancing productivity.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, with no clear focus on events or presentations.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the implications of poor quality code and engineering practices, with only brief mentions of products and their versions, making the category not central to the overall discussion.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the implications of poor quality code and technical debt, which relates to complexity in engineering practices and decision-making. However, it primarily focuses on the costs and impacts rather than a deep exploration of complexity thinking itself.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content discusses the impact of engineering practices on productivity and quality, with a specific example from the Azure DevOps team, making Azure DevOps a primary focus.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the implications of poor quality code and the learning experiences from past engineering practices, making discovery and learning a significant but secondary theme.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and the impacts on productivity and brand reputation, without a clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code on productivity, brand reputation, and technical debt, rather than focusing on decision-making processes or theories.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code on productivity, brand reputation, and the importance of maintaining a high-quality product throughout its lifecycle, which aligns closely with Application Lifecycle Management principles.",
    "level": "Secondary"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily discusses the implications of poor quality code on productivity, brand reputation, and technical debt, highlighting the complexities involved in maintaining code quality and the associated costs.",
    "level": "Secondary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the implications of poor quality code and its impact on productivity and brand reputation, rather than focusing on news or reviews.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, rather than focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity, brand reputation, and engineering practices, which are relevant to sociotechnical systems. However, the primary focus is on technical debt and software engineering practices rather than a comprehensive exploration of sociotechnical systems.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the impact of poor quality code on productivity, brand reputation, and the ability to deliver features efficiently, highlighting the importance of maintaining high-quality engineering practices to enhance flow efficiency.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs and impacts of poor quality code, focusing on engineering practices and productivity, rather than miscellaneous topics.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity and brand reputation, while also detailing specific engineering practices and techniques that can improve quality and efficiency.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the impact of poor quality code on productivity, brand reputation, and the ability to deliver features, emphasising the importance of high-quality engineering practices for value delivery.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity, brand reputation, and the ability to deliver features, which are central to organisational agility.",
    "level": "Secondary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, without a clear focus on AI or automation in agility.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on market adaptability as a central theme.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code on productivity, brand reputation, and engineering practices, with no clear focus on personal themes.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code and the necessary changes to improve engineering practices, highlighting the importance of resilience in adapting to past mistakes and enhancing productivity.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code on productivity, brand reputation, and technical debt, with no clear focus on organisational psychology.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity, brand reputation, and the benefits of improving engineering practices, which aligns closely with metrics and learning in software development.",
    "level": "Secondary"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 50,
    "final_score": 74.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity, brand reputation, and engineering practices, which are central themes in DevOps. It highlights the importance of maintaining high-quality code and efficient engineering processes, aligning closely with DevOps principles.",
    "level": "Secondary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on transparency and accountability.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, with only a minor mention of Agile practices and principles.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the interconnected impacts of poor quality code on various aspects of a business, including productivity, brand reputation, and security, which aligns with systems thinking principles. However, the primary focus is on the consequences of poor engineering practices rather than a comprehensive exploration of systems thinking itself.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses the impact of poor quality code on product delivery, including costs, productivity, and the ability to deliver features to customers.",
    "level": "Secondary"
  }
}
