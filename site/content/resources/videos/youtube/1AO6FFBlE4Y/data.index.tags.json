{
  "Decision Theory": {
    "category": "Decision Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, rather than focusing on decision-making processes or theories.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "ai_confidence": 75,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "Content discusses the impact of engineering practices on team productivity and brand reputation, highlighting the importance of quality processes in software development.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content discusses engineering practices and productivity but does not focus on Agile frameworks as a primary topic.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, without a clear focus on Scrum values.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with only a brief mention of Azure DevOps. Azure Boards is not a central theme.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on trend analysis.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of engineering practices on productivity and quality, with a focus on how improving these practices can lead to more features and better outcomes, indicating a secondary theme of experimentation in product development.",
    "level": "Ignored"
  },
  "Kanban Process": {
    "category": "Kanban Process",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on the Kanban process.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity and brand reputation, emphasising the importance of engineering practices and technical debt, which are central themes in lean product development.",
    "level": "Secondary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "ai_confidence": 92,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "Content heavily discusses the impact of poor quality code on productivity, brand reputation, and engineering practices, emphasising the importance of engineering excellence in delivering value.",
    "level": "Secondary"
  },
  "Homepage": {
    "category": "Homepage",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs and impacts of poor quality code, focusing on engineering practices and productivity, rather than serving as a homepage or introductory content.",
    "level": "Ignored"
  },
  "Agile Community": {
    "category": "Agile Community",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and technical debt, with only brief mentions of Agile practices and team productivity.",
    "level": "Ignored"
  },
  "Value Prioritisation": {
    "category": "Value Prioritisation",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the benefits of prioritising quality improvements, which directly relates to value prioritisation in software development.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on value stream mapping as a central theme.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on market adaptability.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of engineering practices and productivity, which are related to self-organisation, but the primary focus is on the costs of poor quality code and its impacts.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, rather than focusing on Agile planning principles or methodologies.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the implications of poor quality code and the decisions surrounding engineering practices, but it primarily focuses on the costs and impacts rather than decision-making processes themselves.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, without a clear focus on Scaling Kanban.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of quality code and the impact of engineering practices on productivity, including references to testing and validation processes. However, it primarily focuses on the broader implications of poor quality code rather than specifically on test automation.",
    "level": "Ignored"
  },
  "Organisational Transformational Mastery": {
    "category": "Organisational Transformational Mastery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on organisational productivity, brand reputation, and the importance of engineering excellence, which aligns closely with themes of organisational transformation.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses engineering practices and productivity improvements, which are relevant to Agile principles, but the primary focus is on the costs of poor quality code rather than Agile transformation itself.",
    "level": "Ignored"
  },
  "Technical Strategy": {
    "category": "Technical Strategy",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the implications of poor quality code on productivity, brand reputation, and engineering practices, emphasising the strategic importance of maintaining high-quality code and effective engineering processes.",
    "level": "Secondary"
  },
  "Agile Evolution": {
    "category": "Agile Evolution",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses engineering practices and productivity improvements, which are relevant to Agile methodologies, but the primary focus is on the costs of poor quality code rather than Agile principles or evolution.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs and impacts of poor quality code, focusing on engineering practices and productivity, rather than miscellaneous topics.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with only a brief mention of engineering practices that could relate to Agile methodologies.",
    "level": "Ignored"
  },
  "Agile Certification": {
    "category": "Agile Certification",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Agile certification or related methodologies.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and delivery speed, highlighting how improvements in engineering practices can reduce cycle time, but it is not the primary focus.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on working agreements.",
    "level": "Ignored"
  },
  "Agile Coaching": {
    "category": "Agile Coaching",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, with only a minor mention of engineering practices that could relate to Agile methodologies.",
    "level": "Ignored"
  },
  "Agile Pilot": {
    "category": "Agile Pilot",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content discusses engineering practices and productivity but does not focus primarily on Agile methodologies or principles.",
    "level": "Ignored"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on BetaCodex principles or frameworks.",
    "level": "Ignored"
  },
  "Agile Mentoring Program": {
    "category": "Agile Mentoring Program",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, without a clear focus on Agile methodologies or mentoring.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on team productivity and performance, highlighting how engineering practices affect team efficiency and output.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the importance of engineering practices, with only a minor mention of Agile principles related to productivity and delivery.",
    "level": "Ignored"
  },
  "Kanban Coaching": {
    "category": "Kanban Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on Kanban coaching or its principles.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code, its impact on productivity, brand reputation, and technical debt, without a clear focus on revenue per employee.",
    "level": "Ignored"
  },
  "Agile Methodology": {
    "category": "Agile Methodology",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses engineering practices and productivity improvements, which are relevant to Agile principles, but the primary focus is on the costs of poor quality code rather than Agile methodology itself.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity, brand reputation, and missed opportunities, which are relevant to strategic goals, but the primary focus is on the technical aspects of code quality and engineering practices.",
    "level": "Ignored"
  },
  "Nonlinear Dynamics": {
    "category": "Nonlinear Dynamics",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, with no clear focus on nonlinear dynamics.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, which aligns with themes of organisational efficiency and effectiveness, but it primarily focuses on technical debt and engineering practices.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the implications of poor quality code on productivity, brand reputation, and engineering practices, highlighting the importance of technical leadership in addressing these issues.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "ai_confidence": 45,
    "non_ai_confidence": 10,
    "final_score": 34.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, with only peripheral references to Agile practices and principles.",
    "level": "Ignored"
  },
  "Agile Forecasting": {
    "category": "Agile Forecasting",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, rather than focusing on Agile forecasting principles or practices.",
    "level": "Ignored"
  },
  "Agile Resource Management": {
    "category": "Agile Resource Management",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, rather than focusing on Agile resource management practices.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, which aligns with lean principles of reducing waste and improving efficiency, but it primarily focuses on specific case studies and examples rather than lean principles as a central theme.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses engineering practices and productivity improvements related to software development, with a specific mention of the Azure DevOps team, indicating a significant but secondary theme related to Azure Pipelines.",
    "level": "Ignored"
  },
  "Agile Predictability": {
    "category": "Agile Predictability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and delivery, which relates to Agile principles, but the primary focus is on quality and technical debt rather than Agile predictability itself.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content discusses engineering practices and productivity but does not focus on Scrum roles or events, making Scrum Team a minor theme.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "ai_confidence": 85,
    "non_ai_confidence": 50,
    "final_score": 74.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity, brand reputation, and engineering practices, which are central themes in DevOps. It highlights the importance of maintaining high-quality code and efficient engineering processes, aligning closely with DevOps principles.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and technical debt, without a clear focus on employee engagement.",
    "level": "Ignored"
  },
  "Kanban Theory": {
    "category": "Kanban Theory",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code on productivity, brand reputation, and the importance of maintaining a high-quality product throughout its lifecycle, which aligns closely with Application Lifecycle Management principles.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, without a clear focus on empirical process control principles.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content discusses the impact of quality code on productivity and the ability to deliver features to production, highlighting the benefits of frequent releases and the consequences of poor quality.",
    "level": "Secondary"
  },
  "Release Planning": {
    "category": "Release Planning",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs and impacts of poor quality code, technical debt, and engineering practices, rather than focusing on release planning.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impacts of poor quality code and the associated costs, which includes troubleshooting aspects, but it primarily focuses on broader themes of productivity, brand reputation, and engineering practices rather than direct troubleshooting methods.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on backlog refinement.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, which aligns with evidence-based management principles, but it primarily focuses on technical debt and engineering practices.",
    "level": "Ignored"
  },
  "Adaptive Leadership": {
    "category": "Adaptive Leadership",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on adaptive leadership principles.",
    "level": "Ignored"
  },
  "Agile Apocalypse": {
    "category": "Agile Apocalypse",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on Agile methodologies or concepts central to the Agile Apocalypse theme.",
    "level": "Ignored"
  },
  "Systemic Thinking": {
    "category": "Systemic Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the interconnected impacts of poor quality code on various aspects of a business, including productivity, brand reputation, and security, highlighting the systemic nature of these issues.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and engineering practices, without a clear focus on remote working.",
    "level": "Ignored"
  },
  "Continuos Integration": {
    "category": "Continuos Integration",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of maintaining high-quality code and the impact of poor engineering practices, which are relevant to continuous integration, but the primary focus is on the costs associated with poor quality code rather than continuous integration itself.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Agile planning tools.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code on productivity, brand reputation, and engineering practices, with no clear focus on personal themes.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code and the importance of engineering practices, including testing and validation, but it is primarily focused on the broader implications of quality and productivity rather than solely on automated testing.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Scrum practices or scaling Scrum methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the implications of poor quality code on productivity, brand reputation, and the importance of engineering practices, showcasing a pragmatic approach to problem-solving in software development.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on Acceptance Test Driven Development.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on organisational change as a central theme.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, with only a minor mention of product delivery and team dynamics, which are relevant but not central to the role of a Product Owner.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, with only brief mentions of Agile practices and principles.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity, brand reputation, and the overall ability to deliver value, which are central themes in product strategy.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the impact of poor quality code on productivity, brand reputation, and the ability to deliver features efficiently, highlighting the importance of maintaining high-quality engineering practices to enhance flow efficiency.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on transparency as a central theme.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content discusses the impacts of poor quality code and the importance of improving engineering practices, but it primarily focuses on technical debt and productivity rather than change management as a central theme.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "Content primarily discusses the implications of poor quality code on software development practices, team productivity, and engineering excellence, making it highly relevant to software developers.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "Content primarily discusses the impacts of poor quality code on productivity, brand reputation, and the ability to deliver features, emphasising the importance of maintaining a high-quality, working product.",
    "level": "Secondary"
  },
  "Agile Estimation": {
    "category": "Agile Estimation",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity, brand reputation, and technical debt, without a clear focus on Agile estimation practices.",
    "level": "Ignored"
  },
  "Agile Books": {
    "category": "Agile Books",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Agile methodologies or principles.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs and impacts of poor quality code, technical debt, and engineering practices, rather than focusing on system configuration.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on Lean Startup principles such as validated learning, pivoting, or building a minimum viable product.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, with only brief mentions of organisational aspects related to engineering practices.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, highlighting the importance of engineering practices and technical debt, which are relevant to digital transformation efforts.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on Sprint Reviews or related Scrum events.",
    "level": "Ignored"
  },
  "Predictability in Kanban": {
    "category": "Predictability in Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on predictability in Kanban.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "Content discusses the impact of engineering practices on productivity and quality, with specific examples from the Azure DevOps team, making Azure DevOps a primary focus.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, which are relevant to business operations and entrepreneurship, but the primary focus is on technical aspects rather than entrepreneurship itself.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "ai_confidence": 92,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "Content primarily discusses the implications of poor quality code and the costs associated with technical debt, including lost productivity and missed opportunities, while providing examples of how addressing technical debt can lead to significant improvements.",
    "level": "Secondary"
  },
  "Lean Agile": {
    "category": "Lean Agile",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity and brand reputation, emphasising the importance of engineering practices and continuous improvement, which are central themes in Lean Agile methodologies.",
    "level": "Secondary"
  },
  "Kanban Flow": {
    "category": "Kanban Flow",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Kanban flow or its principles.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on Daily Scrum practices or events.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of maintaining high-quality code and the impact of poor engineering practices, which are relevant to continuous integration, but the primary focus is on the costs associated with poor quality code rather than continuous integration itself.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the impact of poor quality code on customer satisfaction, brand reputation, and the ability to deliver features that meet customer needs.",
    "level": "Secondary"
  },
  "Agile Tools": {
    "category": "Agile Tools",
    "ai_confidence": 45,
    "non_ai_confidence": 0,
    "final_score": 31.0,
    "reasoning": "The content discusses engineering practices and productivity but does not primarily focus on Agile tools or methodologies.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and team dynamics, which relates to large scale agility, but it primarily focuses on the costs and consequences of technical debt rather than large scale agility as a central theme.",
    "level": "Ignored"
  },
  "Agile Digital Tools": {
    "category": "Agile Digital Tools",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses engineering practices and productivity in software development, which are relevant to Agile methodologies, but the primary focus is on the costs of poor quality code rather than Agile tools specifically.",
    "level": "Ignored"
  },
  "Agile Software Development": {
    "category": "Agile Software Development",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses engineering practices, productivity, and the impact of quality code on delivery, which are significant themes in Agile methodologies, but it is primarily focused on the costs of poor quality code rather than Agile principles themselves.",
    "level": "Secondary"
  },
  "Software Increment": {
    "category": "Software Increment",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and feature delivery, which relates to software increments, but the primary focus is on the costs and consequences of poor engineering practices rather than on the increments themselves.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on coaching or mentoring individuals or teams.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "ai_confidence": 65,
    "non_ai_confidence": 10,
    "final_score": 48.0,
    "reasoning": "The content discusses branching strategies and the impact of poor engineering practices on productivity, which are relevant to modern source control, but the primary focus is on the costs of poor quality code and technical debt.",
    "level": "Ignored"
  },
  "Site Reliability": {
    "category": "Site Reliability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity, brand reputation, and security, which are relevant to site reliability, but the primary focus is on quality and engineering practices rather than site reliability itself.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of improving engineering practices and learning from past mistakes, which aligns with continuous learning as a secondary theme.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content discusses the impacts of poor quality code and technical debt on productivity and delivery, but it does not focus on Scrum practices, roles, or events, making it not central to the category.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code and the necessary changes to improve engineering practices, highlighting the resilience required to overcome past mistakes and enhance productivity.",
    "level": "Secondary"
  },
  "Strategic": {
    "category": "Strategic",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the strategic implications of poor quality code on productivity, brand reputation, and overall business opportunities, highlighting the importance of engineering excellence and its long-term benefits.",
    "level": "Secondary"
  },
  "Sprint Review Workshops": {
    "category": "Sprint Review Workshops",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, with no clear focus on Sprint Review Workshops.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses engineering practices and productivity in the context of delivering high-quality software, which aligns with Agile principles, but it primarily focuses on the costs of poor quality code rather than Agile strategy itself.",
    "level": "Secondary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, which are relevant to value stream management, but the primary focus is on the costs associated with technical debt and engineering practices.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of quality code and the impact of engineering practices on productivity, which are related to Test Driven Development, but the primary focus is on the broader implications of poor quality code rather than TDD itself.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, with only a minor mention of engineering practices that could relate to Agile methodologies.",
    "level": "Ignored"
  },
  "Agile Product Ownership": {
    "category": "Agile Product Ownership",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, rather than focusing on Agile product ownership principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and technical debt, without a clear focus on market share.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of high-quality code and its impact on productivity and brand reputation, which are relevant to the concept of a Minimum Viable Product (MVP), but the primary focus is on the costs of poor quality code rather than directly on MVP development.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity, brand reputation, and the ability to deliver features, which are central to organisational agility.",
    "level": "Secondary"
  },
  "Throughput": {
    "category": "Throughput",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity and the ability to deliver features, highlighting the importance of throughput in software development.",
    "level": "Secondary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "Content heavily discusses the impact of poor quality code on productivity, brand reputation, and the ability to deliver features, emphasising the importance of high-quality engineering practices for value delivery.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and team efficiency, which are relevant to scaling agility, but the primary focus is on the costs associated with poor engineering practices rather than on scaling agility itself.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "ai_confidence": 95,
    "non_ai_confidence": 0,
    "final_score": 66.0,
    "reasoning": "Content primarily discusses the implications of poor quality code on productivity, brand reputation, and engineering practices, making software development the central theme.",
    "level": "Secondary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impacts on productivity and brand reputation, rather than focusing on deployment strategies.",
    "level": "Ignored"
  },
  "Sprint Planning Workshop": {
    "category": "Sprint Planning Workshop",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with no clear focus on sprint planning or related activities.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the consequences of poor quality code and the importance of maintaining high standards, which relates to accountability in engineering practices, but it is primarily focused on the costs and impacts of quality rather than accountability itself.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the impact of poor quality code on team productivity and collaboration, making it a major but secondary theme.",
    "level": "Ignored"
  },
  "Agile Product Discovery": {
    "category": "Agile Product Discovery",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, rather than focusing on Agile Product Discovery principles.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code on productivity, brand reputation, and technical debt, rather than focusing on portfolio management.",
    "level": "Ignored"
  },
  "Agile AI": {
    "category": "Agile AI",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on Agile AI principles or practices.",
    "level": "Ignored"
  },
  "Complexity Science": {
    "category": "Complexity Science",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code on productivity, brand reputation, and engineering practices, without a clear focus on complexity science as a central theme.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs and impacts of poor quality code, technical debt, and productivity, without focusing on the concept of 'Definition of Ready'.",
    "level": "Ignored"
  },
  "Leadership Training": {
    "category": "Leadership Training",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a clear focus on leadership training.",
    "level": "Ignored"
  },
  "Kanban Training": {
    "category": "Kanban Training",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on Kanban training or methodologies.",
    "level": "Ignored"
  },
  "Agility": {
    "category": "Agility",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "Content discusses the importance of engineering practices and quality code in enhancing productivity and delivering features, which aligns with agile principles.",
    "level": "Secondary"
  },
  "Agile Leader": {
    "category": "Agile Leader",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses engineering practices and productivity, which are relevant to Agile methodologies, but the primary focus is on the costs of poor quality code rather than Agile leadership specifically.",
    "level": "Ignored"
  },
  "Continuos Delivery": {
    "category": "Continuos Delivery",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity and delivery, emphasising the importance of maintaining high-quality standards to enhance continuous delivery processes.",
    "level": "Secondary"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the costs and impacts of poor quality code, technical debt, and engineering practices, with only a minor mention of product delivery and features, which are not central to the topic.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content primarily discusses the impact of poor quality code on productivity and brand reputation, while also highlighting how improving engineering practices can lead to increased innovation and feature delivery, making the ability to innovate a central theme.",
    "level": "Secondary"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "ai_confidence": 92,
    "non_ai_confidence": 0,
    "final_score": 64.0,
    "reasoning": "The content primarily discusses the impacts of poor quality code and the benefits of improving engineering practices, highlighting the importance of continuous improvement in productivity, brand reputation, and overall product quality.",
    "level": "Secondary"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, without a clear focus on Scrum roles or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with only a brief mention of team dynamics and engineering practices.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 38.0,
    "reasoning": "The content discusses the impact of poor quality code on team productivity and the benefits of improving engineering practices, which indirectly relates to team motivation as it highlights how better practices can enhance team performance and morale.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the impact on productivity and brand reputation, without a focus on psychological safety.",
    "level": "Ignored"
  },
  "CI/CD": {
    "category": "CI/CD",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 52.0,
    "reasoning": "The content discusses the impact of poor quality code on productivity and brand reputation, touching on engineering practices that relate to CI/CD, such as branching strategies and the importance of maintaining a single version of a product. However, the primary focus is on the costs associated with poor quality rather than CI/CD processes themselves.",
    "level": "Secondary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, which aligns with Lean Thinking principles of reducing waste and enhancing productivity.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the interconnected impacts of poor quality code on various aspects of a business, including productivity, brand reputation, and security, which aligns with systems thinking principles. However, the primary focus is on the consequences of poor engineering practices rather than a comprehensive exploration of systems thinking itself.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 6.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on customer feedback loops.",
    "level": "Ignored"
  },
  "Evidence Based Improvement": {
    "category": "Evidence Based Improvement",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the impact of poor quality code on productivity and brand reputation, providing evidence and examples of improvements achieved through better engineering practices.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and the impact on productivity and brand reputation, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "ai_confidence": 95,
    "non_ai_confidence": 10,
    "final_score": 70.0,
    "reasoning": "Content primarily focuses on the implications of poor quality code and the benefits of improving engineering practices, highlighting the importance of technical excellence in productivity and brand reputation.",
    "level": "Secondary"
  },
  "Scrum Product Management": {
    "category": "Scrum Product Management",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity and brand reputation, with only a brief mention of product delivery and team productivity, which are not central to Scrum Product Management.",
    "level": "Ignored"
  },
  "Featured": {
    "category": "Featured",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "Content primarily discusses the implications of poor quality code and how improving code quality can enhance productivity and brand reputation, making it a central theme.",
    "level": "Secondary"
  },
  "Adaptive Strategy": {
    "category": "Adaptive Strategy",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 35.0,
    "reasoning": "The content discusses the importance of quality code and its impact on productivity and brand reputation, which aligns with adaptive strategies in engineering practices. However, the primary focus is on the costs of poor quality code rather than adaptive strategies themselves.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 59.0,
    "reasoning": "The content primarily discusses the implications of poor quality code and the hidden costs associated with it, which requires a deep understanding and interpretation of various factors affecting productivity, brand reputation, and technical debt. It explores how these elements interconnect and impact decision-making in software development, aligning closely with the concept of sensemaking.",
    "level": "Secondary"
  },
  "Lead Time": {
    "category": "Lead Time",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 3.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and its impact on productivity, brand reputation, and technical debt, without a clear focus on lead time as a central theme.",
    "level": "Ignored"
  },
  "Agile Scaling": {
    "category": "Agile Scaling",
    "ai_confidence": 30,
    "non_ai_confidence": 0,
    "final_score": 21.0,
    "reasoning": "The content primarily discusses the costs of poor quality code and its impact on productivity and brand reputation, with only brief mentions of engineering practices that could relate to Agile principles.",
    "level": "Ignored"
  },
  "Agile Mentoring": {
    "category": "Agile Mentoring",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the costs associated with poor quality code and the benefits of improving engineering practices, rather than focusing on Agile mentoring or related themes.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 41.0,
    "reasoning": "The content discusses the importance of quality code and the impact of testing practices on productivity, but it primarily focuses on the costs associated with poor quality code rather than explicitly advocating for Test First Development as a central theme.",
    "level": "Ignored"
  }
}
