{
  "kind": "youtube#video",
  "etag": "B1o5aHz3fOew4r7d3f2_OBWaJVc",
  "id": "s4h2K62V_d0",
  "snippet": {
    "publishedAt": "2024-11-20T07:00:26Z",
    "channelId": "UCkYqhFNmhCzkefHsHS652hw",
    "title": "Shifting Left. Quality from the Start",
    "description": "# Shift Left: Building Quality In From the Start | Martin Hinshelwood  \n\nðŸ‘‹ Hi, Iâ€™m Martin Hinshelwood from [NKD Agility](https://www.nkdagility.com), and in this video, I explore the transformative concept of **shifting left** in modern software engineering. Itâ€™s about integrating quality, security, and testing into the earliest stages of development, empowering teams to build better products and avoid the pitfalls of technical debt. From test-driven development to pair programming, Iâ€™ll share actionable insights and real-world examples that demonstrate why shifting left is a game-changer.\n\n**ðŸ“Œ Chapters:**  \n\n1. 00:00 â€“ Introduction: What is Shift Left?  \n2. 01:30 â€“ Why Shift Left is Controversial  \n3. 04:00 â€“ Owning the Code: Build, Test, and Support  \n4. 07:15 â€“ Key Skills for Modern Engineering Teams  \n5. 10:00 â€“ Tools & Techniques: Test-Driven Development, Pair Programming  \n6. 14:30 â€“ Lessons from the Azure DevOps Team  \n7. 19:00 â€“ How Shifting Left Impacts Productivity and Innovation  \n8. 22:00 â€“ Building a Culture of Engineering Excellence  \n\n**ðŸŽ¯ Who This Video is For:**  \n\n- Software engineers and developers seeking to improve product quality and reduce technical debt  \n- Engineering managers and CTOs focused on scaling effective teams  \n- Agile practitioners looking to integrate modern engineering practices into their workflow  \n\n**ðŸ“– What Youâ€™ll Learn:**  \n\n- Why shifting quality assurance earlier in the development cycle improves outcomes  \n- The importance of engineering teams owning the entire product lifecycle, from development to production support  \n- How test-driven development leads to better architectures  \n- The productivity and innovation gains from pair programming  \n- Real-world insights from the Azure DevOps teamâ€™s journey to continuous delivery  \n- How shifting left minimizes production bugs, brand damage, and missed opportunities  \n\n**ðŸ’¡ Key Takeaways:**  \n\n- Shifting left empowers teams to \"build quality in\" rather than testing it in later.  \n- Practices like pair programming and test-driven development may seem slower initially but drastically reduce costs and increase efficiency in the long run.  \n- Paying down technical debt enables exponential productivity and value gains.  \n- Iterating quickly through small experiments creates better products that resonate with customers.  \n\nAre you ready to embrace modern software engineering practices and unlock your teamâ€™s potential? At [NKD Agility](https://www.nkdagility.com), we specialize in helping organizations implement effective strategies tailored to their context. Letâ€™s shift left and build excellence together!  \n\n#agile #scrum #agileprojectmanagement #agileproductdevelopment #agileproductmanagement #productdevelopment #projectmanagement #projectmanager #productmanager #developer",
    "thumbnails": {
      "default": {
        "url": "https://i.ytimg.com/vi/s4h2K62V_d0/default.jpg",
        "width": 120,
        "height": 90
      },
      "medium": {
        "url": "https://i.ytimg.com/vi/s4h2K62V_d0/mqdefault.jpg",
        "width": 320,
        "height": 180
      },
      "high": {
        "url": "https://i.ytimg.com/vi/s4h2K62V_d0/hqdefault.jpg",
        "width": 480,
        "height": 360
      },
      "standard": {
        "url": "https://i.ytimg.com/vi/s4h2K62V_d0/sddefault.jpg",
        "width": 640,
        "height": 480
      },
      "maxres": {
        "url": "https://i.ytimg.com/vi/s4h2K62V_d0/maxresdefault.jpg",
        "width": 1280,
        "height": 720
      }
    },
    "channelTitle": "naked Agility with Martin Hinshelwood",
    "tags": [
      "Agile",
      "Product development",
      "Agile product development",
      "Project management",
      "Agile project management",
      "Software engineering",
      "project manager",
      "product manager",
      "product owner",
      "scrum master"
    ],
    "categoryId": "28",
    "liveBroadcastContent": "none",
    "localized": {
      "title": "Shifting Left. Quality from the Start",
      "description": "# Shift Left: Building Quality In From the Start | Martin Hinshelwood  \n\nðŸ‘‹ Hi, Iâ€™m Martin Hinshelwood from [NKD Agility](https://www.nkdagility.com), and in this video, I explore the transformative concept of **shifting left** in modern software engineering. Itâ€™s about integrating quality, security, and testing into the earliest stages of development, empowering teams to build better products and avoid the pitfalls of technical debt. From test-driven development to pair programming, Iâ€™ll share actionable insights and real-world examples that demonstrate why shifting left is a game-changer.\n\n**ðŸ“Œ Chapters:**  \n\n1. 00:00 â€“ Introduction: What is Shift Left?  \n2. 01:30 â€“ Why Shift Left is Controversial  \n3. 04:00 â€“ Owning the Code: Build, Test, and Support  \n4. 07:15 â€“ Key Skills for Modern Engineering Teams  \n5. 10:00 â€“ Tools & Techniques: Test-Driven Development, Pair Programming  \n6. 14:30 â€“ Lessons from the Azure DevOps Team  \n7. 19:00 â€“ How Shifting Left Impacts Productivity and Innovation  \n8. 22:00 â€“ Building a Culture of Engineering Excellence  \n\n**ðŸŽ¯ Who This Video is For:**  \n\n- Software engineers and developers seeking to improve product quality and reduce technical debt  \n- Engineering managers and CTOs focused on scaling effective teams  \n- Agile practitioners looking to integrate modern engineering practices into their workflow  \n\n**ðŸ“– What Youâ€™ll Learn:**  \n\n- Why shifting quality assurance earlier in the development cycle improves outcomes  \n- The importance of engineering teams owning the entire product lifecycle, from development to production support  \n- How test-driven development leads to better architectures  \n- The productivity and innovation gains from pair programming  \n- Real-world insights from the Azure DevOps teamâ€™s journey to continuous delivery  \n- How shifting left minimizes production bugs, brand damage, and missed opportunities  \n\n**ðŸ’¡ Key Takeaways:**  \n\n- Shifting left empowers teams to \"build quality in\" rather than testing it in later.  \n- Practices like pair programming and test-driven development may seem slower initially but drastically reduce costs and increase efficiency in the long run.  \n- Paying down technical debt enables exponential productivity and value gains.  \n- Iterating quickly through small experiments creates better products that resonate with customers.  \n\nAre you ready to embrace modern software engineering practices and unlock your teamâ€™s potential? At [NKD Agility](https://www.nkdagility.com), we specialize in helping organizations implement effective strategies tailored to their context. Letâ€™s shift left and build excellence together!  \n\n#agile #scrum #agileprojectmanagement #agileproductdevelopment #agileproductmanagement #productdevelopment #projectmanagement #projectmanager #productmanager #developer"
    },
    "defaultAudioLanguage": "en-GB"
  },
  "contentDetails": {
    "duration": "PT10M",
    "dimension": "2d",
    "definition": "hd",
    "caption": "false",
    "licensedContent": false,
    "contentRating": {},
    "projection": "rectangular"
  }
}
