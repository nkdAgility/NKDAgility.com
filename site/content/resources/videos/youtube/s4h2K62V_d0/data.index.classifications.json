{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of experimentation and validating learning in the context of software engineering practices, particularly through the lens of shifting quality assurance left and conducting experiments to improve product features. However, the primary focus is on engineering practices rather than explicitly on hypothesis formulation and testing.",
    "level": "Tertiary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T02:11:55",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of experimentation in Agile practices, particularly in the context of shifting quality assurance left in the development cycle. It highlights the role of testing, validation, and learning from experiments to improve product features and team effectiveness, making experimentation a primary theme throughout the discussion.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T02:11:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically quality assurance and agile methodologies, without a clear focus on entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T02:11:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering methodologies, with no clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T02:11:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality assurance practices and engineering methodologies, with no clear focus on Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the dynamics of engineering teams and their practices, touching on systems thinking principles such as the shift left approach and the interplay between team roles and organisational effectiveness. However, the primary focus is on software engineering practices rather than a comprehensive exploration of organisational dynamics.",
    "level": "Tertiary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T02:12:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, quality assurance, and the shift-left approach, with minimal focus on coaching or facilitation of growth and development within teams.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T02:12:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically the concept of 'shift left' in quality assurance, without a clear focus on evidence-based leadership principles or empirical decision-making in leadership contexts.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T02:12:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices and quality assurance, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of integrating quality assurance and engineering practices within product development, which aligns with product management principles. However, the primary focus is on technical practices and methodologies rather than strategic product management discussions.",
    "level": "Tertiary"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T02:12:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical practices and concepts related to quality assurance and software engineering, without a clear focus on leadership roles or practices within Agile contexts.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T02:12:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance and engineering practices, with no clear focus on Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T02:12:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, quality assurance, and agile methodologies, with no clear focus on system configuration or related topics.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses modern software engineering practices, particularly the concept of 'shift left' in quality assurance, which relates to enhancing operational efficiency and agility. However, it primarily focuses on engineering practices rather than a broader strategic adoption of digital technologies for business transformation.",
    "level": "Tertiary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-12T02:12:15",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses practices and methodologies that enhance software quality and functionality, such as shift left, test-driven development, and pair programming, which are central to delivering working software. It also touches on the importance of engineering excellence and customer feedback, aligning well with the key topics of the category.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of engineering practices and methodologies that can influence decision-making in software development, particularly in the context of quality assurance and agile practices. However, the primary focus is on the technical aspects of software engineering rather than structured decision-making processes.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of engineering teams taking ownership of their work and the shift-left approach, which aligns with self-organisation principles. However, the primary focus is on quality assurance and engineering practices rather than self-organisation itself.",
    "level": "Tertiary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T02:12:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses software engineering practices and quality assurance, with no clear focus on remote working or Agile collaboration in a distributed environment.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses concepts related to quality assurance and engineering practices that align with Lean principles, such as minimising waste and fostering continuous improvement. However, the primary focus is on software engineering practices rather than Lean Product Development specifically.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T02:12:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices and tools related to quality assurance and software engineering, without a clear focus on organisational culture or its influence on agility and transformation.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of integrating customer feedback through iterative development and experimentation, which aligns with the theme of customer feedback loops. However, the primary focus is on engineering practices and quality assurance rather than explicitly on customer feedback mechanisms.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T02:12:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of shifting left in quality assurance and modern software engineering practices, with no direct focus on Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T02:12:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance and engineering practices, with no clear focus on transparency or its role in Agile processes.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T02:12:30",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of shifting left in software engineering, without a clear focus on the Definition of Done.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T02:12:32",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses engineering practices, quality assurance, and technical implementation details rather than product strategy, vision, or market analysis.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T02:12:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, quality assurance, and development methodologies without a clear focus on customer retention strategies or user engagement.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T02:12:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software engineering practices, quality assurance, and the concept of 'shift left', without any focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the concept of 'shift left' in quality assurance and its implications for Agile practices, which aligns with strategic approaches in Agile environments. However, the primary focus is on technical practices rather than strategic alignment or planning, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses modern software engineering practices, including shift left, test-driven development, and pair programming, which are related to improving quality and efficiency in development. While these practices can contribute to innovation, the primary focus is on quality assurance and engineering excellence rather than directly measuring or enhancing the organisation's capacity to innovate.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Agile practices and mentions concepts like test-driven development and pair programming, which are relevant to Agile frameworks. However, the primary focus is on quality assurance and engineering practices rather than a detailed exploration of Agile frameworks themselves.",
    "level": "Tertiary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T02:12:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering techniques, with a focus on team-level activities rather than organisational scaling of agile principles.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of team-based approaches in quality assurance and the shift-left concept, which involves collaboration among team members in the software development process. However, the primary focus is on engineering practices and methodologies rather than explicit team collaboration techniques or dynamics.",
    "level": "Tertiary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T02:12:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, quality assurance, and the shift-left approach, without a clear focus on customer satisfaction or related metrics.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-12T02:12:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance and engineering practices, with a focus on shifting left in the development cycle, rather than Lean principles or waste minimisation.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T02:12:49",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, without a clear focus on Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-12T02:12:51",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses engineering practices such as shifting quality assurance left, test-driven development, pair programming, and the importance of clean code and architecture. It aligns well with the principles of Agile development and emphasizes methodologies that enhance software quality and team effectiveness.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T02:12:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices, quality assurance, and team dynamics, with no clear focus on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-12T02:12:53",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "Content primarily discusses quality assurance practices in software engineering, specifically focusing on the concept of 'shift left', test-driven development, and the importance of integrating quality into the development process. It aligns closely with key topics in software development methodologies and practices.",
    "level": "Primary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-12T02:12:56",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses the principles of software craftsmanship, quality assurance, and best practices in coding standards, particularly focusing on the concept of 'shift left' in quality assurance. It elaborates on the importance of integrating testing and support within the engineering team, promoting a culture of excellence in software development. The discussion includes methodologies like test-driven development and pair programming, which are central to engineering excellence, making this content highly relevant to the category.",
    "level": "Primary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-12T02:12:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of shifting left in software engineering, rather than focusing on the measurement and optimisation of throughput.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-12T02:12:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and agile methodologies without a specific focus on Azure Pipelines or its features.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses Agile practices and the importance of quality assurance within the context of Agile methodologies, but it primarily focuses on specific engineering practices rather than the foundational values and principles of Agile.",
    "level": "Tertiary"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of integrating testing practices, such as test-driven development, into the software engineering process. While it touches on automated testing principles, it primarily focuses on broader engineering practices and team dynamics rather than solely on automated testing methodologies.",
    "level": "Tertiary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-12T02:13:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality assurance and software engineering practices, with a focus on shifting left in the development cycle, rather than Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T02:13:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software engineering practices and quality assurance, with no clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-12T02:13:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically the concept of 'shift left' in quality assurance, rather than focusing on change management strategies or principles.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T02:13:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices and quality assurance techniques, with no clear focus on mentoring or coaching within Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses Agile practices and the importance of quality assurance in software development, touching on concepts like shifting left and continuous improvement. However, it primarily focuses on engineering practices rather than explicitly on empirical process control principles such as transparency, inspection, and adaptation.",
    "level": "Tertiary"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses methodologies related to quality assurance and engineering practices that indirectly support product validation through improved testing and user feedback integration. However, the primary focus is on engineering processes rather than direct product validation techniques.",
    "level": "Tertiary"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T02:13:11",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering methodologies, with no clear focus on Azure Boards or its functionalities in Agile project management.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T02:13:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices and quality assurance without any focus on revenue per employee metrics or related financial efficiency discussions.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-12T02:13:15",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses modern software engineering practices, including the concept of 'shift left', Test-Driven Development (TDD), and the integration of quality assurance within Agile methodologies. It focuses on how these practices enhance the role of software developers in building, supporting, and maintaining software, aligning well with the category's emphasis on Agile and DevOps frameworks.",
    "level": "Secondary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-12T02:13:17",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 75.0,
    "reasoning": "The content primarily discusses the importance of integrating testing early in the development process, specifically mentioning test-driven development (TDD) and its benefits for architecture and code quality. It aligns well with the principles of Test First Development, although it also touches on broader Agile practices.",
    "level": "Secondary"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of quality assurance and engineering practices that can lead to more effective and frequent releases, particularly through the concept of 'shift left' and continuous delivery. However, the primary focus is on quality assurance and engineering practices rather than frequent releases themselves.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T02:13:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality assurance practices and the concept of shifting left in software engineering, with no clear focus on estimation techniques or Agile estimation practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T02:13:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of shifting left in software development, rather than focusing on the identification and resolution of technical issues.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-12T02:13:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering techniques rather than the delivery of software increments in Agile frameworks.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T02:13:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices and quality assurance, with no focus on the Windows operating system or its related topics.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T02:13:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering processes, with no clear focus on Sprint Review or its related topics.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-12T02:13:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of shifting left in software engineering, without a clear focus on Lead Time as defined in the category.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T02:13:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering methodologies without a clear focus on scaling Agile across multiple teams or enterprise-level initiatives.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-12T02:13:30",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses practical problem-solving strategies in software engineering, particularly focusing on the 'shift left' approach in quality assurance, which aligns with Agile and DevOps principles. It emphasises real-world applications, team collaboration, and the importance of integrating various skills within engineering teams to enhance efficiency and product quality.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of shifting quality assurance left in the development cycle, which indirectly relates to deployment frequency by emphasising the need for better engineering practices to enable more frequent and reliable releases. However, the primary focus is on quality assurance and engineering practices rather than deployment frequency itself.",
    "level": "Tertiary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses agile practices and their impact on software engineering, particularly in relation to quality assurance and team dynamics. However, it primarily focuses on the concept of 'shift left' in quality assurance rather than a comprehensive exploration of agile project management principles or frameworks.",
    "level": "Tertiary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the concept of 'shift left' in quality assurance, which relates to integrating testing and validation earlier in the development process. While it touches on practices that can support Continuous Integration, such as test-driven development and pair programming, the primary focus is on quality assurance and engineering practices rather than CI itself.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Agile practices and their impact on engineering excellence, but it primarily focuses on technical practices rather than strategic alignment or broader Agile strategy implementation.",
    "level": "Tertiary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the concept of 'shift left' in quality assurance and its implications for engineering teams, which relates to Continuous Delivery principles. However, the primary focus is on quality assurance practices rather than Continuous Delivery itself, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of diverse skill sets within engineering teams and touches on collaboration practices like pair programming and test-driven development, which are relevant to cross-functional teams. However, the primary focus is on quality assurance and engineering practices rather than explicitly on cross-functional team dynamics.",
    "level": "Tertiary"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T02:13:43",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of shifting left in software engineering, without addressing the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T02:13:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically quality assurance and the shift-left approach, without a clear focus on sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T02:13:45",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical practices and methodologies in software engineering, with minimal focus on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses practices and methodologies related to software engineering that can enhance team effectiveness, such as pair programming and test-driven development. However, the primary focus is on quality assurance and engineering practices rather than directly on team dynamics or collaboration.",
    "level": "Tertiary"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T02:13:48",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically focusing on quality assurance and Agile methodologies, without any mention or integration of AI.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T02:13:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses shift left in quality assurance and modern engineering practices, with no clear focus on Kanban principles or scaling Kanban in large organisations.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T02:13:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality assurance and engineering practices, without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T02:13:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering methodologies rather than working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to quality assurance and engineering practices that align with Lean principles, such as waste reduction and continuous improvement. However, the primary focus is on software engineering methodologies rather than Lean principles specifically.",
    "level": "Tertiary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Agile practices and methodologies, particularly in the context of software engineering and quality assurance. However, it primarily focuses on the concept of 'shift left' and engineering excellence rather than a comprehensive discussion on Agile transformation strategies or frameworks.",
    "level": "Tertiary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses technical debt in the context of engineering practices and the importance of addressing it for long-term sustainability. However, it primarily focuses on broader topics such as quality assurance, team dynamics, and Agile methodologies, making technical debt a significant but secondary theme.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T02:14:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices and quality assurance, with no clear focus on Scrum Values.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T02:14:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses software engineering practices, specifically focusing on quality assurance and development methodologies, without a clear emphasis on organisational change strategies or frameworks.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the concept of 'shift left' in quality assurance, which relates to integrating testing earlier in the development process. It touches on test-driven development and the importance of having a test infrastructure, indicating a significant focus on testing practices. However, the primary theme revolves around broader engineering practices and team dynamics rather than solely on test automation.",
    "level": "Tertiary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-12T02:14:07",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, without a clear focus on Scrum principles, roles, or product development processes.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-12T02:14:09",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses techniques and strategies for enhancing operational efficiency in software engineering, particularly through the concept of 'shift left' in quality assurance, which aligns with Agile and DevOps principles. It covers practical applications such as test-driven development, pair programming, and the importance of integrating various expertise within engineering teams to improve overall performance and reduce technical debt.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-12T02:14:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically the concept of 'shift left' in quality assurance, rather than focusing on Evidence-Based Management principles or empirical data-driven decision-making.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T02:14:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering methodologies, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T02:14:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses quality assurance practices and engineering methodologies, with no clear focus on scaling Scrum principles or frameworks. It does not address coordination among multiple Scrum teams or the challenges of scaling Scrum in large organisations.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T02:14:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices and quality assurance, with no clear focus on the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T02:14:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically focusing on quality assurance and the concept of 'shift left', without addressing large-scale Agile frameworks or enterprise-level Agile transformation.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T02:14:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, without a clear focus on forecasting methodologies or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of shifting quality assurance left in the development cycle and touches on agile practices, team dynamics, and the role of engineering teams in supporting and maintaining code. However, it primarily focuses on technical practices rather than the broader principles of technical leadership.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T02:14:23",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality assurance practices and engineering methodologies rather than focusing on identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T02:14:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically the concept of 'shift left' in quality assurance, without a clear focus on Lean Startup principles such as MVP, Build-Measure-Learn feedback loop, or validated learning.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Agile practices and methodologies, particularly in the context of quality assurance and engineering excellence. While Agile principles are mentioned, the primary focus is on quality assurance techniques rather than Agile Planning specifically.",
    "level": "Tertiary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of team ownership and responsibility in the context of quality assurance and engineering practices, which aligns with the theme of accountability. However, it primarily focuses on technical practices and methodologies rather than a direct exploration of accountability as a central theme.",
    "level": "Tertiary"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-12T02:14:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality assurance practices and engineering methodologies, with no clear focus on Minimum Viable Product concepts or market validation.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T02:14:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering methodologies, with a focus on shifting left in the development cycle, rather than collaboration tools or their impact on Agile team dynamics.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T02:14:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices and quality assurance without addressing psychological safety or its implications in team dynamics.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T02:14:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software development, without a clear focus on deployment strategies or methodologies.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T02:14:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses quality assurance practices and engineering techniques rather than focusing on Scrum Team dynamics, roles, or collaboration. It does not address Scrum-specific topics such as team roles, communication strategies, or self-organisation.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-12T02:14:37",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses best practices in software engineering, particularly focusing on the concept of 'shift left' in quality assurance, the importance of testing, and the integration of various engineering skills within teams. It also touches on methodologies like test-driven development and pair programming, which are central to software craftsmanship and engineering excellence.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T02:14:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering methodologies, with a focus on shifting quality left in the development cycle, rather than on release management strategies or processes.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T02:14:40",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the principles of Test Driven Development (TDD), including its role in building better architectures, the importance of writing tests before code, and how TDD integrates with modern engineering practices. While it touches on broader topics like agile methodologies and quality assurance, TDD is a central theme throughout the discussion.",
    "level": "Secondary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T02:14:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, without a clear focus on identifying patterns or shifts in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Agile practices and the importance of building quality into the development process, which aligns with Agile principles. However, it primarily focuses on technical aspects and specific practices rather than the broader Agile philosophy.",
    "level": "Tertiary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses practices related to quality assurance and engineering excellence, which are relevant to modern software development. However, it primarily focuses on broader agile practices and methodologies rather than specifically on version control systems or source control strategies.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T02:14:47",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, with no clear focus on Agile Planning Tools or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T02:14:49",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the concept of shifting quality assurance left in the development process, focusing on engineering practices and team dynamics rather than specifically on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T02:14:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, without a focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T02:14:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, quality assurance, and development methodologies, with no clear focus on market share strategies or competitive advantage.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T02:14:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and engineering techniques rather than long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses practices such as test-driven development and pair programming, which are related to continuous improvement and team effectiveness. However, the primary focus is on quality assurance and engineering practices rather than explicitly on continuous learning principles.",
    "level": "Tertiary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T02:10:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices and quality assurance without a focus on decision-making processes or the principles of decision theory.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses agile practices and engineering excellence, which are relevant to enterprise agility, but the primary focus is on team-level practices and quality assurance rather than broader organisational agility.",
    "level": "Tertiary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-12T02:10:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, particularly Agile methodologies, and does not focus on Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses methodologies and practices in software engineering that can enhance organisational resilience and adaptability, particularly through the concept of 'shift left' in quality assurance. However, the primary focus is on technical implementations rather than a comprehensive exploration of resilience and change as a central theme.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T02:11:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses concepts related to quality assurance, engineering practices, and team dynamics rather than installation or configuration of tools or software.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-12T02:11:03",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance of code quality, the shift-left approach in software development, and the role of practices like pair programming and test-driven development in managing complexity and improving maintainability. It aligns well with the key topics of the category, particularly in relation to software code quality and best practices in development.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to improving engineering practices and quality assurance, which indirectly touches on flow efficiency through the idea of shifting left and optimising processes. However, the primary focus is on quality assurance and engineering practices rather than directly on flow efficiency principles or metrics.",
    "level": "Tertiary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T02:11:06",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content heavily discusses software engineering practices, specifically focusing on quality assurance and the shift-left approach, without any mention of AI or automation technologies in Agile frameworks.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-12T02:11:09",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses methodologies and practices related to quality assurance and engineering excellence, which are integral to the product delivery process. It emphasises the importance of shifting quality assurance left in the development cycle, the role of cross-functional teams, and the impact of agile practices on delivering effective software products.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses Agile practices and their impact on product development, particularly in relation to quality assurance and team dynamics. However, it primarily focuses on engineering practices rather than product management strategies, making Agile principles a major but secondary theme.",
    "level": "Tertiary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of shifting quality assurance left in the development cycle, which involves experimentation and learning from both successes and failures. It touches on methodologies that foster continuous learning and improvement within engineering teams, but the primary focus is on quality assurance practices rather than discovery and learning as a central theme.",
    "level": "Tertiary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T02:11:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically the concept of 'shift left' in quality assurance, without a clear focus on Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses modern software engineering practices, particularly the concept of 'shift left' in quality assurance, which touches on themes of complexity in organisational behaviour and the need for adaptive practices. However, it primarily focuses on practical engineering techniques rather than a deep exploration of complexity science principles.",
    "level": "Tertiary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T02:11:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically the concept of 'shift left' in quality assurance, without a clear focus on transparency or accountability within Agile teams.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-12T02:11:19",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses practical techniques and tooling related to quality assurance in software engineering, including concepts like 'shift left', test-driven development, and pair programming. It explores how these methodologies can enhance team performance and product quality, aligning well with the category's focus.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T02:11:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software engineering practices and concepts, specifically around quality assurance and Agile methodologies, without reference to any specific events, presentations, or discussions related to them.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses Agile practices and the importance of building quality into the development process, which relates to market adaptability. However, the primary focus is on quality assurance and engineering practices rather than directly addressing strategies for responding to market shifts.",
    "level": "Tertiary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T02:11:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software engineering practices, specifically the concept of 'shift left' in quality assurance, which is closely related to Agile methodologies and practices. It references various Agile concepts and tools, making it not suitable for the Miscellaneous category.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-12T02:11:25",
    "ai_confidence": 80,
    "non_ai_confidence": 50,
    "final_score": 77.0,
    "reasoning": "The content primarily discusses the integration of quality assurance practices within the software development lifecycle, emphasising the shift-left approach, which aligns with DevOps principles. It highlights the importance of collaboration, automation, and continuous delivery, making it a central theme in the context of DevOps.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses engineering practices and methodologies that align with Agile and DevOps principles, and it briefly mentions Azure DevOps in the context of transitioning from a waterfall model to continuous delivery. However, the primary focus is on general software engineering practices rather than specifically on Azure DevOps functionalities or tools.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T02:11:29",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software engineering practices and the concept of shifting quality assurance left, without a clear focus on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses modern software engineering practices, including concepts like 'shift left' and test-driven development, which are relevant to fostering a culture of innovation and adaptability. However, the primary focus is on technical practices rather than a comprehensive exploration of business agility principles or strategies.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T02:11:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-12T02:11:34",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses strategies for improving quality assurance through practices like shift left, test-driven development, and pair programming, which are all aimed at enhancing value delivery in software engineering. It highlights the importance of iterative development and aligning engineering practices with customer needs, making it a central theme.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-12T02:11:36",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses engineering practices such as shifting quality assurance left, test-driven development, and pair programming, all of which are central to enhancing technical excellence in software development.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-12T02:11:39",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses modern software engineering practices, particularly the concept of 'shift left' in quality assurance, which aligns with agile methodologies. It explores how these practices enhance organisational adaptability and responsiveness, emphasising the importance of team-based approaches and continuous improvement, which are central to organisational agility.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T02:11:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical concepts and practices related to quality assurance and software engineering, without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-12T02:11:42",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the role of engineering teams in quality assurance, the importance of collaboration, and the integration of various skills within teams, which aligns well with the themes of team dynamics and process improvement in technology development.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the integration of engineering practices and team dynamics in the context of quality assurance and software development. While it touches on sociotechnical themes, such as team roles and the importance of collaboration, the primary focus is on technical practices rather than a comprehensive exploration of sociotechnical systems.",
    "level": "Tertiary"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T02:11:45",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses software engineering practices and the concept of 'shift left' in quality assurance, without focusing on news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of quality assurance and engineering practices, touching on concepts like shift left and continuous improvement. However, it primarily focuses on practices rather than metrics and learning, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-17T12:02:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses aspects of the application lifecycle, particularly focusing on quality assurance and the shift-left approach in the development cycle. However, it primarily centres around engineering practices and methodologies rather than a comprehensive view of Application Lifecycle Management as a whole.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T02:11:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software engineering practices, particularly around quality assurance and the concept of 'shift left', rather than focusing on Value Stream Management principles or techniques.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T02:11:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices, specifically focusing on quality assurance and Agile methodologies, without addressing psychological principles or theories related to motivation, engagement, leadership, or team dynamics.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:02:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, without a clear focus on platform engineering or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:02:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices in software engineering, focusing on concepts like 'shift left' and team dynamics within traditional frameworks, without a clear emphasis on BetaCodex principles.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T12:02:32",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses engineering practices and methodologies that could relate to the principles of 1ES, particularly in terms of integrating quality assurance and team responsibilities. However, it primarily focuses on the concept of 'shift left' and agile practices rather than the specific framework of 1ES.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T12:02:37",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses Agile practices and the importance of quality assurance in product development, but it primarily focuses on technical practices and engineering excellence rather than a comprehensive discussion of the Agile Product Operating Model.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:49:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices and methodologies in software engineering, specifically around quality assurance and development processes, without a clear focus on leadership principles or practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-17T13:49:12",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses agile practices and modern software engineering, which are related to the themes of collaboration and continuous improvement within teams, but it primarily focuses on quality assurance and engineering processes rather than the frameworks themselves.",
    "level": "Tertiary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality assurance practices and the concept of shifting left in software development, without a clear focus on Internal Developer Platforms or their specific benefits and components.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software engineering practices, quality assurance, and Agile methodologies without any mention of Artificial Intelligence.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T10:40:40",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses quality assurance practices and the concept of 'shift left' in software engineering, with only a brief mention of agile practices. While it touches on team dynamics and the importance of collaboration, it does not explicitly address Scrum roles, events, or artifacts. The discussion lacks depth in Scrum-specific principles and does not focus on the Scrum framework, leading to a low confidence score.",
    "level": "Quinary"
  }
}
