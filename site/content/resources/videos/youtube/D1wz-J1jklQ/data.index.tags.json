{
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T15:22:45",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses deployment strategies and technical debt without any mention of AI or its integration in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-12T15:22:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with little focus on team dynamics, communication, or collaboration within Agile or DevOps frameworks.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-12T15:22:48",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and breaking down work into smaller chunks, which aligns with MVP principles of rapid iteration and learning. However, the primary focus is on technical debt and deployment practices rather than explicitly on MVP development or validation.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-12T15:22:50",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses the advantages of frequent deployments, the impact on technical debt, and strategies for improving deployment frequency, making it central to the topic of Deployment Frequency.",
    "level": "Primary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-12T15:22:51",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and how they relate to reducing technical debt, which directly ties into the concept of throughput by emphasising the importance of delivering smaller work items efficiently and optimising the flow of work.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T15:22:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on Scrum Values.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-12T15:22:55",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, which aligns with Lean principles of minimising waste and maximising learning. It emphasises breaking down work into smaller, valuable chunks, the importance of customer feedback, and continuous improvement, all of which are central to Lean Product Development.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T15:22:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-12T15:22:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T15:22:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment strategies and technical debt in software development, with no specific focus on the Windows operating system or its related topics.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T15:23:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical deployment practices and the impact on technical debt, without a focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-12T15:23:02",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, which aligns with the principles of empirical process control by emphasising decision-making based on observed evidence, such as customer feedback and telemetry. It highlights the importance of adaptation and continuous improvement in the context of Agile practices.",
    "level": "Secondary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-12T15:23:03",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses practical problem-solving strategies related to frequent deployments, technical debt, and the importance of breaking down work into smaller, manageable chunks. It emphasises real-world applications of Agile principles, particularly in the context of continuous delivery and customer feedback, aligning well with the category of Pragmatic Thinking.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T15:23:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical processes related to deployment and technical debt, with no focus on employee engagement or motivation.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-12T15:23:09",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and breaking down work into smaller increments, which aligns closely with the concept of delivering valuable software increments in Agile frameworks.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-12T15:23:11",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and customer feedback, which are related to innovation practices. However, the primary focus is on technical debt and deployment strategies rather than a direct exploration of the Ability to Innovate as a central theme.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-12T15:23:13",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on technical debt, which relates to strategic approaches in Agile environments. However, the primary focus is on technical practices rather than a clear strategic framework or alignment with organisational goals.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T15:23:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on Agile Planning Tools or methodologies.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T15:23:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and deployment practices, with no clear focus on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T15:23:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment strategies and technical debt, with no clear focus on the Scrum Master role or related responsibilities.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-12T15:23:23",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the impact of frequent deployments on code quality and team dynamics, touching on aspects of team performance and collaboration, but it primarily focuses on technical practices rather than team performance strategies.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T15:23:26",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and breaking down work into smaller chunks, which aligns with Agile principles. However, it primarily focuses on technical debt and deployment practices rather than Agile Planning methodologies and practices.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T15:23:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on forecasting methodologies or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T15:23:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, with no clear focus on estimation techniques or practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-12T15:23:30",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and data-driven decision-making, which aligns with some principles of Evidence-Based Management. However, the primary focus is on technical debt and deployment practices rather than a comprehensive exploration of EBM principles.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T15:23:32",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical practices related to frequent deployments and technical debt, without a focus on organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T15:23:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without any mention of Azure Boards or its functionalities in Agile project management.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T15:23:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to software deployment and technical debt, with no clear focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-12T15:23:42",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining code quality and the peer pressure to avoid creating technical debt, which touches on accountability within team dynamics. However, it primarily focuses on deployment practices and technical debt rather than accountability as a central theme.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-12T15:23:43",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and how they relate to reducing technical debt, maintaining production readiness, and improving code quality, which are all central themes of Continuous Delivery.",
    "level": "Secondary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T15:23:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without addressing working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T15:23:46",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better understanding of customer needs and improved product quality, which are related to customer satisfaction. However, the primary focus is on technical practices rather than customer satisfaction itself.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T15:23:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on Agile leadership roles or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-12T15:23:50",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, which aligns closely with Continuous Integration principles. It highlights the importance of smaller batch sizes, maintainable code, and the relationship between deployment frequency and technical debt, all of which are central to CI practices.",
    "level": "Secondary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-12T15:23:52",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the benefits of frequent deployments and breaking down work into smaller chunks, which aligns with Lean principles of waste reduction and value maximisation. However, it primarily focuses on technical debt and deployment practices, making Lean a secondary theme.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T15:23:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on the Daily Scrum or its related practices.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-12T15:23:56",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to technical debt and customer feedback, which aligns with Agile principles of delivering value and responding to change. However, it primarily focuses on technical practices rather than the foundational values and principles of Agile.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-12T15:24:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T15:24:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without addressing the criteria or practices related to the Definition of Ready.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T15:24:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T15:24:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-12T15:24:08",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and how they relate to technical debt, maintainability, and the role of developers in delivering quality software. It aligns well with Agile and DevOps principles, focusing on practices that enhance developer productivity and collaboration.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T15:24:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without addressing scaling Agile practices or coordination among multiple teams.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-12T15:24:15",
    "ai_confidence": 90,
    "non_ai_confidence": 0,
    "final_score": 81.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments in software development, focusing on reducing technical debt, improving code quality, and enhancing customer feedback through iterative delivery. It aligns closely with best practices in CI/CD and agile methodologies.",
    "level": "Primary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T15:24:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without any direct reference to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T15:24:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a focus on acceptance criteria or collaborative development practices central to ATDD.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T15:24:20",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can lead to better understanding of customer needs through telemetry and feedback. However, the primary focus is on technical debt and deployment practices rather than a dedicated exploration of customer feedback loops.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-12T15:24:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which are relevant to Agile methodologies. However, it primarily focuses on technical practices rather than strategic alignment or broader Agile strategy discussions.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T15:24:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment frequency and technical debt, with no focus on collaboration tools or team dynamics.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T15:24:25",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses frequent deployments and their impact on technical debt, which aligns with Agile principles of iterative development and continuous delivery. However, it primarily focuses on technical practices rather than broader Agile transformation strategies or methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-12T15:24:26",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 76.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, focusing on reducing technical debt, improving code quality, and enhancing customer feedback through smaller, more manageable changes. It aligns well with operational efficiency strategies within Agile and DevOps frameworks.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-12T15:24:30",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can lead to better decision-making regarding code quality and customer needs. However, the primary focus is on technical practices rather than structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-12T15:24:32",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, technical debt, and how these practices contribute to delivering functional software that meets customer needs. It aligns well with the principles of working software in Agile and Scrum frameworks.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T15:24:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on Sprint Review processes or related topics.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-12T15:24:35",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on technical debt, which relates to principles of reliability and maintainability in production systems. However, it primarily focuses on software development practices rather than the core principles of Site Reliability Engineering.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T15:24:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and deployment strategies, with only a brief mention of peer pressure among colleagues, which does not align with the core themes of psychological safety.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T15:24:39",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better understanding of customer needs and improved product quality, which are relevant to customer retention. However, the primary focus is on technical debt and deployment practices rather than direct strategies for retaining customers.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T15:24:41",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and hypothesis-driven engineering practices, which align with Lean Startup principles. However, the primary focus is on technical debt and code quality rather than explicitly on Lean Startup methodologies like MVP or the Build-Measure-Learn feedback loop.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T15:24:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T15:24:43",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses hypothesis-driven engineering practices and the importance of collecting telemetry and data to validate whether features are worth further investment. While the primary focus is on frequent deployments and reducing technical debt, the mention of validating assumptions through experimentation indicates that experimentation is a significant theme in the content.",
    "level": "Secondary"
  },
  "BetaCodex": {
    "category": "BetaCodex",
    "calculated_at": "2025-02-12T15:24:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T15:24:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment frequency, technical debt, and coding practices, with no clear focus on revenue per employee metrics or related financial efficiency discussions.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-12T15:24:48",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and continuous delivery, which are relevant to Azure Pipelines, but it does not specifically mention Azure Pipelines or its configuration and management.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-12T15:24:50",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the benefits of frequent deployments and breaking down work into smaller chunks, which aligns with agile principles of iterative development and responsiveness to customer feedback. However, it does not explicitly mention agile frameworks or roles, making it a secondary theme rather than the primary focus.",
    "level": "Secondary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-12T15:24:52",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing batch sizes, which aligns with Lean principles of minimising waste and enhancing efficiency. However, the primary focus is on technical debt and deployment practices rather than Lean Thinking itself.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T15:24:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical deployment practices and their impact on code quality and technical debt, without focusing on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T15:24:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without addressing large-scale Agile frameworks or enterprise-level practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T15:24:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T15:24:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices related to deployment and technical debt, with minimal focus on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T15:25:00",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they relate to hypothesis-driven engineering practices, including collecting telemetry and validating whether features resonate with users. However, the primary focus is on technical debt and deployment strategies rather than a detailed exploration of hypothesis formulation and experimentation.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T15:25:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T15:25:03",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can help understand customer needs through telemetry and feedback, which aligns with product discovery. However, the primary focus is on technical practices and reducing technical debt rather than directly exploring methodologies for identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-12T15:25:05",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits and practices of frequent deployments, including reducing technical debt, improving code quality, and enhancing user feedback integration, which aligns closely with the principles of Frequent Releases.",
    "level": "Secondary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-12T15:25:07",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which aligns with Agile principles of continuous improvement and customer feedback. However, it primarily focuses on technical practices rather than the broader Agile philosophy.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T15:25:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-12T15:25:10",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to reducing technical debt and improving code quality, which indirectly touches on the concept of Lead Time. However, the primary focus is on deployment frequency and technical debt rather than a direct examination of Lead Time as a metric.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T15:25:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-12T15:25:13",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and iterative development, which are relevant to Scrum principles. However, it does not explicitly mention Scrum roles, events, or the Scrum framework, making it a secondary theme rather than a primary focus.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T15:25:19",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and their impact on technical debt and product quality, which relates to customer needs and product success. However, the primary focus is on technical implementation and engineering practices rather than a clear product strategy framework or vision.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T15:25:22",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can help in understanding customer needs and managing technical debt, which relates to decision-making in complex environments. However, the primary focus is on technical practices rather than a deep exploration of sensemaking principles or frameworks.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-12T15:25:23",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments in relation to technical debt management, code maintainability, and the importance of writing production-ready code. It aligns well with the principles of software craftsmanship and engineering practices.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T15:25:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on transparency or its role in Agile processes.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T15:25:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses deployment frequency and technical debt, with no clear focus on Scrum roles, team dynamics, or collaboration practices.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T15:25:28",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing batch sizes, which indirectly relates to Cycle Time by emphasising the importance of smaller, more manageable work units and their impact on workflow efficiency. However, the primary focus is on technical debt and deployment practices rather than Cycle Time itself.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-12T15:25:33",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and understanding of customer needs, which aligns with the principles of Continuous Learning. However, the primary focus is on technical debt and deployment strategies rather than explicitly on continuous learning practices or team improvement.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T15:25:35",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on technical debt, which relates to trends in software delivery practices. However, it primarily focuses on the technical aspects of deployment rather than a broader analysis of trends within Agile or DevOps frameworks.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-12T15:25:36",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and responsiveness to customer needs, which aligns with self-organisation principles. However, the primary focus is on technical debt and deployment strategies rather than self-organisation itself.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-12T15:25:38",
    "ai_confidence": 90,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments in relation to technical debt management, maintainability of code, and the importance of continuous delivery practices, all of which align closely with the principles of engineering excellence.",
    "level": "Primary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-12T15:25:40",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and technical debt reduction, which are relevant to digital transformation practices. However, it primarily focuses on software development processes rather than a broader strategic adoption of digital technologies across an organisation.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T15:25:41",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses deployment practices and technical debt rather than system configuration processes or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-12T15:25:44",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses how frequent deployments can help manage and reduce technical debt by promoting maintainable and adaptable code practices. It highlights the relationship between deployment frequency and the quality of code, making technical debt a central theme.",
    "level": "Secondary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T15:25:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T15:25:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on remote working practices or Agile methodologies in a distributed context.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T15:25:52",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of data and telemetry in decision-making related to software development and deployment, which aligns with evidence-based practices. However, the primary focus is on technical aspects of deployment rather than leadership decisions, making it a secondary theme.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T15:25:55",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and how they relate to reducing technical debt, which aligns closely with deployment strategies. It emphasises the importance of smaller batch sizes and continuous delivery, making deployment methodologies a central theme.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T15:25:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T15:26:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without addressing scaling agility frameworks, leadership roles, or organisational structures.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-12T15:26:02",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to understanding customer needs and reducing technical debt, which are relevant to product management. However, the primary focus is on technical practices rather than strategic product management discussions.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T15:26:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on organisational culture or its influence on Agile methodologies.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-12T15:26:06",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to technical debt and code quality, which are relevant to modern source control practices. However, it primarily focuses on deployment strategies rather than specific version control methodologies or tools.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T15:26:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T15:26:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to software deployment and technical debt, without a clear focus on organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-12T15:26:10",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can help in understanding customer needs through telemetry and feedback, which aligns with product validation practices. However, the primary focus is on technical debt and deployment strategies rather than direct user testing or validation methodologies.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T15:26:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T15:26:13",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and their impact on technical debt, which aligns closely with release management practices, particularly in the context of continuous delivery and iterative release planning.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T15:26:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to software development and deployment, focusing on reducing technical debt and improving code quality, rather than entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-12T15:26:17",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and its impact on technical debt, which aligns with technical leadership principles. However, it primarily focuses on technical practices rather than the broader aspects of guiding teams or fostering collaboration.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T15:26:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management rather than identifying or resolving specific technical issues.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-12T15:26:21",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which are related to change management practices in Agile environments. However, the primary focus is on technical aspects of deployment rather than on broader change management strategies or principles.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-12T15:26:22",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, technical debt, and maintainable code, which are central to engineering practices in Agile development.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T15:26:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which aligns with Agile principles of iterative development and continuous delivery. However, it does not explicitly focus on Agile frameworks themselves, making it a secondary theme rather than the primary topic.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-12T15:26:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on Test First Development or related testing practices.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T15:26:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  }
}
