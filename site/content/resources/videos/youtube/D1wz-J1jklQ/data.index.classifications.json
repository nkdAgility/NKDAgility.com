{
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T15:22:45",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses deployment strategies and technical debt without any mention of AI or its integration in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-12T15:22:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with little focus on team dynamics, communication, or collaboration within Agile or DevOps frameworks.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and breaking down work into smaller chunks, which aligns with MVP principles of rapid iteration and learning. However, the primary focus is on technical debt and deployment practices rather than explicitly on MVP development or validation.",
    "level": "Tertiary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-03-11T13:05:29",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content explicitly discusses the importance of frequent deployments and how they can reduce technical debt, improve code quality, and enhance customer feedback. It aligns well with the core themes of deployment frequency in Agile and DevOps, providing detailed insights into the benefits of smaller batch sizes and continuous delivery practices. The depth of discussion is substantial, covering various aspects such as maintainability, customer interaction, and the impact on team dynamics.",
    "level": "Primary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-03-11T14:15:47",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the impact of deployment frequency on code quality and team performance, which aligns with throughput concepts. It mentions reducing batch size and increasing deployment frequency, both of which are strategies for improving throughput. However, while it touches on related themes, it does not explicitly focus on throughput as a primary topic, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T15:22:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on Scrum Values.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-03-11T16:04:33",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of frequent deployments, which aligns with Lean principles of minimising waste and maximising learning through iterative development. It highlights the benefits of smaller, manageable changes and the role of user feedback, both of which are core themes in Lean Product Development. However, while it touches on Lean concepts, it primarily focuses on deployment practices rather than a comprehensive exploration of Lean methodologies, which slightly limits its depth in the category.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T15:22:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-12T15:22:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T15:22:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment strategies and technical debt in software development, with no specific focus on the Windows operating system or its related topics.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T15:23:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical deployment practices and the impact on technical debt, without a focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-03-11T17:18:16",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of frequent deployments, which aligns with the principles of empirical process control by emphasising decision-making based on observed evidence (user feedback) rather than assumptions. It highlights the benefits of smaller, manageable changes and iterative development, which are core themes of empirical process control. However, while it touches on these concepts, it does not delve deeply into the theoretical foundations or specific Agile frameworks, which slightly limits its depth of discussion.",
    "level": "Secondary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-13T14:45:08",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses practical strategies for improving code quality through frequent deployments, which aligns well with the core themes of Pragmatic Thinking. It emphasises real-world applications of Agile principles, such as iterative development and hypothesis-driven engineering, showcasing how these practices can enhance collaboration and efficiency. The depth of discussion is significant, providing specific examples and actionable steps, which further supports its alignment with pragmatic approaches. Overall, the content is focused on practical problem-solving in a complex environment, justifying a high confidence score.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T15:23:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical processes related to deployment and technical debt, with no focus on employee engagement or motivation.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-03-13T14:55:53",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 35,
    "non_ai_confidence": 30,
    "final_score": 73.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they relate to delivering smaller, manageable increments of work. It highlights the benefits of iterative development, user feedback, and maintaining code quality, which aligns well with the Increment category. However, while it touches on key themes, it does not delve deeply into the specific Agile frameworks or the formal definition of an Increment, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and customer feedback, which are related to innovation practices. However, the primary focus is on technical debt and deployment strategies rather than a direct exploration of the Ability to Innovate as a central theme.",
    "level": "Tertiary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on technical debt, which relates to strategic approaches in Agile environments. However, the primary focus is on technical practices rather than a clear strategic framework or alignment with organisational goals.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T15:23:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on Agile Planning Tools or methodologies.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T15:23:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and deployment practices, with no clear focus on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T15:23:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment strategies and technical debt, with no clear focus on the Scrum Master role or related responsibilities.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the impact of frequent deployments on code quality and team dynamics, touching on aspects of team performance and collaboration, but it primarily focuses on technical practices rather than team performance strategies.",
    "level": "Tertiary"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and breaking down work into smaller chunks, which aligns with Agile principles. However, it primarily focuses on technical debt and deployment practices rather than Agile Planning methodologies and practices.",
    "level": "Tertiary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T15:23:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on forecasting methodologies or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T15:23:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, with no clear focus on estimation techniques or practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and data-driven decision-making, which aligns with some principles of Evidence-Based Management. However, the primary focus is on technical debt and deployment practices rather than a comprehensive exploration of EBM principles.",
    "level": "Tertiary"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T15:23:32",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical practices related to frequent deployments and technical debt, without a focus on organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T15:23:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without any mention of Azure Boards or its functionalities in Agile project management.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T15:23:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to software deployment and technical debt, with no clear focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of maintaining code quality and the peer pressure to avoid creating technical debt, which touches on accountability within team dynamics. However, it primarily focuses on deployment practices and technical debt rather than accountability as a central theme.",
    "level": "Tertiary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-13T15:19:15",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content discusses the importance of frequent deployments, which aligns closely with Continuous Delivery principles. It highlights the benefits of smaller, manageable changes, the need for regular feedback, and the reduction of technical debt, all of which are core themes in Continuous Delivery. The depth of discussion is substantial, providing practical steps for improvement and emphasising the iterative nature of development. However, while it strongly aligns with Continuous Delivery, it does not explicitly mention the term 'Continuous Delivery' or delve into specific methodologies or practices outlined by experts in the field, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T15:23:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without addressing working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better understanding of customer needs and improved product quality, which are related to customer satisfaction. However, the primary focus is on technical practices rather than customer satisfaction itself.",
    "level": "Tertiary"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T15:23:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on Agile leadership roles or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-13T16:19:17",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of frequent deployments, which is a key aspect of Continuous Integration. It highlights the benefits of smaller, manageable changes and the need for regular feedback, aligning with CI principles. However, it lacks explicit mention of CI tools, automated testing, or detailed strategies for managing code merges, which are crucial for a higher confidence score in this category.",
    "level": "Secondary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-12T15:23:52",
    "ai_confidence": 75,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the benefits of frequent deployments and breaking down work into smaller chunks, which aligns with Lean principles of waste reduction and value maximisation. However, it primarily focuses on technical debt and deployment practices, making Lean a secondary theme.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T15:23:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on the Daily Scrum or its related practices.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to technical debt and customer feedback, which aligns with Agile principles of delivering value and responding to change. However, it primarily focuses on technical practices rather than the foundational values and principles of Agile.",
    "level": "Tertiary"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-12T15:24:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T15:24:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without addressing the criteria or practices related to the Definition of Ready.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T15:24:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T15:24:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-12T15:24:08",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and how they relate to technical debt, maintainability, and the role of developers in delivering quality software. It aligns well with Agile and DevOps principles, focusing on practices that enhance developer productivity and collaboration.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T15:24:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without addressing scaling Agile practices or coordination among multiple teams.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-12T15:24:15",
    "ai_confidence": 90,
    "non_ai_confidence": 0,
    "final_score": 81.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments in software development, focusing on reducing technical debt, improving code quality, and enhancing customer feedback through iterative delivery. It aligns closely with best practices in CI/CD and agile methodologies.",
    "level": "Primary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T15:24:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without any direct reference to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T15:24:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a focus on acceptance criteria or collaborative development practices central to ATDD.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can lead to better understanding of customer needs through telemetry and feedback. However, the primary focus is on technical debt and deployment practices rather than a dedicated exploration of customer feedback loops.",
    "level": "Tertiary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which are relevant to Agile methodologies. However, it primarily focuses on technical practices rather than strategic alignment or broader Agile strategy discussions.",
    "level": "Tertiary"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T15:24:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment frequency and technical debt, with no focus on collaboration tools or team dynamics.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses frequent deployments and their impact on technical debt, which aligns with Agile principles of iterative development and continuous delivery. However, it primarily focuses on technical practices rather than broader Agile transformation strategies or methodologies.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-12T15:24:26",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 76.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, focusing on reducing technical debt, improving code quality, and enhancing customer feedback through smaller, more manageable changes. It aligns well with operational efficiency strategies within Agile and DevOps frameworks.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can lead to better decision-making regarding code quality and customer needs. However, the primary focus is on technical practices rather than structured decision-making methodologies.",
    "level": "Tertiary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-12T15:24:32",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, technical debt, and how these practices contribute to delivering functional software that meets customer needs. It aligns well with the principles of working software in Agile and Scrum frameworks.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T15:24:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on Sprint Review processes or related topics.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on technical debt, which relates to principles of reliability and maintainability in production systems. However, it primarily focuses on software development practices rather than the core principles of Site Reliability Engineering.",
    "level": "Tertiary"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T15:24:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and deployment strategies, with only a brief mention of peer pressure among colleagues, which does not align with the core themes of psychological safety.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better understanding of customer needs and improved product quality, which are relevant to customer retention. However, the primary focus is on technical debt and deployment practices rather than direct strategies for retaining customers.",
    "level": "Tertiary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and hypothesis-driven engineering practices, which align with Lean Startup principles. However, the primary focus is on technical debt and code quality rather than explicitly on Lean Startup methodologies like MVP or the Build-Measure-Learn feedback loop.",
    "level": "Tertiary"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T15:24:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T15:24:43",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses hypothesis-driven engineering practices and the importance of collecting telemetry and data to validate whether features are worth further investment. While the primary focus is on frequent deployments and reducing technical debt, the mention of validating assumptions through experimentation indicates that experimentation is a significant theme in the content.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T15:24:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment frequency, technical debt, and coding practices, with no clear focus on revenue per employee metrics or related financial efficiency discussions.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and continuous delivery, which are relevant to Azure Pipelines, but it does not specifically mention Azure Pipelines or its configuration and management.",
    "level": "Tertiary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-12T15:24:50",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the benefits of frequent deployments and breaking down work into smaller chunks, which aligns with agile principles of iterative development and responsiveness to customer feedback. However, it does not explicitly mention agile frameworks or roles, making it a secondary theme rather than the primary focus.",
    "level": "Secondary"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing batch sizes, which aligns with Lean principles of minimising waste and enhancing efficiency. However, the primary focus is on technical debt and deployment practices rather than Lean Thinking itself.",
    "level": "Tertiary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T15:24:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical deployment practices and their impact on code quality and technical debt, without focusing on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T15:24:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without addressing large-scale Agile frameworks or enterprise-level practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T15:24:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T15:24:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices related to deployment and technical debt, with minimal focus on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T15:25:00",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they relate to hypothesis-driven engineering practices, including collecting telemetry and validating whether features resonate with users. However, the primary focus is on technical debt and deployment strategies rather than a detailed exploration of hypothesis formulation and experimentation.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T15:25:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can help understand customer needs through telemetry and feedback, which aligns with product discovery. However, the primary focus is on technical practices and reducing technical debt rather than directly exploring methodologies for identifying customer needs or defining product features.",
    "level": "Tertiary"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-12T15:25:05",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits and practices of frequent deployments, including reducing technical debt, improving code quality, and enhancing user feedback integration, which aligns closely with the principles of Frequent Releases.",
    "level": "Secondary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which aligns with Agile principles of continuous improvement and customer feedback. However, it primarily focuses on technical practices rather than the broader Agile philosophy.",
    "level": "Tertiary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T15:25:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to reducing technical debt and improving code quality, which indirectly touches on the concept of Lead Time. However, the primary focus is on deployment frequency and technical debt rather than a direct examination of Lead Time as a metric.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T15:25:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and iterative development, which are relevant to Scrum principles. However, it does not explicitly mention Scrum roles, events, or the Scrum framework, making it a secondary theme rather than a primary focus.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and their impact on technical debt and product quality, which relates to customer needs and product success. However, the primary focus is on technical implementation and engineering practices rather than a clear product strategy framework or vision.",
    "level": "Tertiary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can help in understanding customer needs and managing technical debt, which relates to decision-making in complex environments. However, the primary focus is on technical practices rather than a deep exploration of sensemaking principles or frameworks.",
    "level": "Tertiary"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-12T15:25:23",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments in relation to technical debt management, code maintainability, and the importance of writing production-ready code. It aligns well with the principles of software craftsmanship and engineering practices.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T15:25:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on transparency or its role in Agile processes.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T15:25:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses deployment frequency and technical debt, with no clear focus on Scrum roles, team dynamics, or collaboration practices.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing batch sizes, which indirectly relates to Cycle Time by emphasising the importance of smaller, more manageable work units and their impact on workflow efficiency. However, the primary focus is on technical debt and deployment practices rather than Cycle Time itself.",
    "level": "Tertiary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and understanding of customer needs, which aligns with the principles of Continuous Learning. However, the primary focus is on technical debt and deployment strategies rather than explicitly on continuous learning practices or team improvement.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on technical debt, which relates to trends in software delivery practices. However, it primarily focuses on the technical aspects of deployment rather than a broader analysis of trends within Agile or DevOps frameworks.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and responsiveness to customer needs, which aligns with self-organisation principles. However, the primary focus is on technical debt and deployment strategies rather than self-organisation itself.",
    "level": "Tertiary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-06T14:36:43",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 34,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the importance of frequent deployments and their impact on code quality, technical debt management, and maintainability, which are all key aspects of engineering excellence. It directly addresses best practices in coding and the benefits of continuous delivery, aligning well with the core themes of the category. The depth of discussion is significant, providing detailed insights into how these practices can enhance software craftsmanship and improve overall engineering processes.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and technical debt reduction, which are relevant to digital transformation practices. However, it primarily focuses on software development processes rather than a broader strategic adoption of digital technologies across an organisation.",
    "level": "Tertiary"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T15:25:41",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses deployment practices and technical debt rather than system configuration processes or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-12T15:25:44",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses how frequent deployments can help manage and reduce technical debt by promoting maintainable and adaptable code practices. It highlights the relationship between deployment frequency and the quality of code, making technical debt a central theme.",
    "level": "Secondary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T15:25:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and reducing technical debt, without a clear focus on scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T15:25:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on remote working practices or Agile methodologies in a distributed context.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of data and telemetry in decision-making related to software development and deployment, which aligns with evidence-based practices. However, the primary focus is on technical aspects of deployment rather than leadership decisions, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T15:25:55",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and how they relate to reducing technical debt, which aligns closely with deployment strategies. It emphasises the importance of smaller batch sizes and continuous delivery, making deployment methodologies a central theme.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T15:25:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T15:26:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without addressing scaling agility frameworks, leadership roles, or organisational structures.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-07T12:36:21",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and customer feedback. However, it primarily focuses on technical aspects of deployment and coding practices rather than the strategic alignment of product management. While there are mentions of customer needs and feedback, the depth of discussion on product management methodologies and frameworks is limited, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T15:26:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on organisational culture or its influence on Agile methodologies.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to technical debt and code quality, which are relevant to modern source control practices. However, it primarily focuses on deployment strategies rather than specific version control methodologies or tools.",
    "level": "Tertiary"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T15:26:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, with no clear focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T15:26:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to software deployment and technical debt, without a clear focus on organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can help in understanding customer needs through telemetry and feedback, which aligns with product validation practices. However, the primary focus is on technical debt and deployment strategies rather than direct user testing or validation methodologies.",
    "level": "Tertiary"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T15:26:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T15:26:13",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and their impact on technical debt, which aligns closely with release management practices, particularly in the context of continuous delivery and iterative release planning.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T15:26:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to software development and deployment, focusing on reducing technical debt and improving code quality, rather than entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of frequent deployments and its impact on technical debt, which aligns with technical leadership principles. However, it primarily focuses on technical practices rather than the broader aspects of guiding teams or fostering collaboration.",
    "level": "Tertiary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T15:26:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management rather than identifying or resolving specific technical issues.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which are related to change management practices in Agile environments. However, the primary focus is on technical aspects of deployment rather than on broader change management strategies or principles.",
    "level": "Tertiary"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-12T15:26:22",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, technical debt, and maintainable code, which are central to engineering practices in Agile development.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which aligns with Agile principles of iterative development and continuous delivery. However, it does not explicitly focus on Agile frameworks themselves, making it a secondary theme rather than the primary topic.",
    "level": "Tertiary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-12T15:26:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on Test First Development or related testing practices.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T15:26:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to frequent deployments and technical debt, which are relevant to CI/CD practices often associated with Azure DevOps, but it does not specifically mention Azure DevOps or its tools.",
    "level": "Tertiary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T15:21:35",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T15:21:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on decision-making processes or the principles of decision theory.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-03-06T13:24:29",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of frequent deployments and breaking down larger tasks into smaller, manageable pieces, which directly relates to optimising flow efficiency. It highlights how smaller batch sizes and increased deployment frequency can reduce technical debt and improve code quality, aligning well with the principles of Flow Efficiency. The depth of discussion on how these practices impact team performance and customer feedback further supports its relevance to the category.",
    "level": "Secondary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-03-06T14:36:47",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the benefits of frequent deployments and smaller batch sizes, which align with Agile and DevOps principles that enhance market adaptability. It highlights how these practices allow for quicker responses to customer feedback and market demands, thus demonstrating a clear connection to the category. However, while the content is rich in detail about technical practices, it does not explicitly frame these practices within a broader market adaptability strategy, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the impact of frequent deployments on technical debt and code quality, which indirectly touches on team dynamics and organisational practices. However, it primarily focuses on technical aspects rather than the interplay between social and technical systems.",
    "level": "Tertiary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T15:21:54",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-06T15:41:56",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the benefits of frequent deployments and smaller batch sizes, which align with agile principles of adaptability and responsiveness. However, it primarily focuses on technical aspects of code quality and deployment practices rather than broader organisational strategies or cultural shifts. While it touches on customer feedback and continuous delivery, it lacks a comprehensive exploration of organisational agility as a primary focus.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of frequent deployments and their impact on technical debt, which touches on interconnectedness and feedback loops in software development. However, it primarily focuses on deployment strategies rather than a comprehensive exploration of Systems Thinking principles.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-03-07T12:30:43",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they relate to technical debt, customer feedback, and code quality. It explicitly mentions the collection of telemetry and data to validate whether features are worth investing in, which aligns with evidence-based decision-making. The discussion on breaking down work into smaller chunks and the impact of deployment frequency on team behaviour and product quality further supports its relevance to the category. However, while it touches on metrics and learning, it does not delve deeply into specific methodologies or frameworks, which slightly limits the depth of discussion.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to technical debt and customer feedback, which are relevant to Agile principles. However, the primary focus is on technical practices rather than explicitly on Agile product management methodologies or roles.",
    "level": "Tertiary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T15:22:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T15:22:07",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T15:22:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, lacking a focus on industry news or reviews.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-06T13:24:26",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses the benefits of frequent deployments, which aligns closely with DevOps principles such as Continuous Delivery (CD) and the importance of maintaining code quality. It highlights the role of automation and telemetry in improving deployment practices and reducing technical debt, which are key aspects of DevOps. The depth of discussion on how smaller batch sizes and frequent deployments can enhance collaboration and efficiency further supports its strong alignment with the DevOps category.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the impact of frequent deployments on technical debt and code quality, touching on human behaviours such as peer pressure and the need for maintainable code. However, the primary focus is on technical practices rather than a deep exploration of team dynamics or structured methodologies.",
    "level": "Tertiary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-07T12:36:25",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content primarily focuses on the importance of frequent deployments and its impact on code quality, maintainability, and technical debt, which aligns closely with the principles of Technical Excellence. It discusses Continuous Delivery practices and how they facilitate better engineering outcomes, demonstrating a strong conceptual alignment with the category. The depth of discussion is substantial, providing detailed insights into how smaller batch sizes and frequent deployments can enhance code quality and responsiveness to user feedback, thus fostering a culture of continuous improvement.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T15:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-07T12:42:57",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content discusses the relationship between frequent deployments and code quality, particularly in terms of maintainability and technical debt. It explicitly mentions how smaller, more frequent deployments can lead to better code practices and a deeper understanding of user needs, which aligns well with the core themes of the category. The depth of discussion is substantial, covering various aspects of how deployment frequency impacts code quality and complexity management. However, while it touches on complexity, it does not delve deeply into complexity theory or its broader implications, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing batch sizes, which aligns with Lean principles of minimising waste and maximising value. However, the primary focus is on technical debt and deployment strategies rather than Lean methodologies themselves.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-10T11:34:29",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 35,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the benefits of frequent deployments and how they relate to value delivery, particularly in terms of reducing technical debt and improving customer feedback. It aligns well with the principles of iterative development and continuous delivery, emphasising the importance of breaking down work into smaller, valuable increments. The depth of discussion on maintaining code quality and adapting to customer needs further supports its strong alignment with the category.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T15:22:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the benefits of frequent deployments and their impact on technical debt, which aligns with Agile and DevOps principles.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and adaptability, which aligns with themes of organisational resilience and change. However, the primary focus is on technical practices rather than broader organisational strategies or change management principles.",
    "level": "Tertiary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-10T13:51:28",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the practical implications of frequent deployments, linking it to technical debt management and code quality. It provides insights into methodologies like continuous delivery and the importance of breaking down work into smaller, manageable chunks, which aligns well with the core themes of the category. The depth of discussion on how these practices can enhance team performance and product delivery outcomes further supports a high confidence score.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T15:22:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses frequent deployments and technical debt, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which aligns with improving efficiency and customer outcomes. However, it primarily focuses on deployment practices rather than a comprehensive discussion on Value Stream Management principles.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses frequent deployments and their impact on technical debt and product delivery, which aligns with agile principles. However, it primarily focuses on team-level practices rather than broader organisational agility.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-03-10T17:48:28",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and responsiveness to customer needs, which aligns with the principles of business agility. However, it primarily focuses on technical practices rather than broader organisational strategies or leadership roles in fostering agility. While it touches on concepts like adaptability and customer feedback, it lacks a comprehensive exploration of business agility as a primary focus.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-11T00:15:49",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the importance of frequent deployments and how they can reduce technical debt, which aligns with the maintenance and deployment stages of the application lifecycle. However, it lacks explicit mentions of broader ALM practices, governance, or tools, which limits its overall alignment with the category. The depth of discussion on deployment practices is significant, but it does not cover the entire lifecycle or other key topics outlined in the category definition.",
    "level": "Tertiary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T15:22:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices related to software deployment and technical debt, with no clear focus on psychological principles or theories relevant to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-11T09:47:30",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 34,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the benefits of frequent deployments, which directly ties into product delivery methodologies. It highlights the importance of breaking down work into smaller, manageable chunks, aligning with iterative development and feedback loops. The discussion on technical debt and the need for maintainable code further supports the core themes of product delivery. Additionally, it touches on customer feedback and telemetry, which are crucial for understanding customer needs and improving delivery performance. Overall, the content is highly relevant and detailed, making it a strong fit for the Product Delivery category.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-11T11:11:01",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and understanding of customer needs. It touches on concepts like hypothesis-driven engineering and the importance of feedback loops, which align with the themes of discovery and learning. However, while it mentions these ideas, the primary focus is more on technical practices rather than a deep exploration of methodologies for fostering innovation or continuous learning. The discussion lacks a broader context of team dynamics or culture of innovation, which limits its alignment with the category.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-17T11:57:38",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the implications of frequent deployments and smaller batch sizes in software development, which relates to managing complexity and uncertainty in systems. However, it primarily focuses on technical debt and deployment practices rather than a comprehensive exploration of complexity science principles.",
    "level": "Tertiary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T15:22:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of frequent deployments and technical debt without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T11:57:41",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses deployment frequency and its impact on code quality and technical debt, which are relevant to platform engineering principles. However, it primarily focuses on deployment practices rather than the broader aspects of platform engineering.",
    "level": "Tertiary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T11:57:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T11:57:46",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on code quality, which aligns with the principles of improving efficiency and software delivery. However, it does not explicitly focus on the One Engineering System framework or its integration across teams.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T11:57:47",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and smaller batch sizes, which align with Agile principles of iterative development and continuous feedback. However, it primarily focuses on technical practices rather than a comprehensive discussion of the Agile Product Operating Model.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:47:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of code deployment and technical debt, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-07T12:42:52",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of frequent deployments and breaking down work into smaller chunks, which aligns with Agile principles of iterative development and continuous improvement. However, it lacks explicit references to specific frameworks like Scrum or Kanban, and while it touches on collaboration and technical debt, it does not delve deeply into the methodologies that define Social Technologies.",
    "level": "Secondary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:31:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and their impact on code quality, which relates to the principles of an Internal Developer Platform, but it primarily focuses on deployment practices rather than the broader context of IDPs.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:31:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses deployment strategies and technical debt in software development, with no clear focus on AI applications.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T10:38:59",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the benefits of frequent deployments and breaking down work into smaller chunks, which aligns with Agile principles and iterative progress. However, it does not explicitly mention Scrum roles, events, or artifacts, nor does it focus on Scrum practices specifically. The discussion is more about deployment strategies and technical debt rather than Scrum as a framework.",
    "level": "Quaternary"
  }
}
