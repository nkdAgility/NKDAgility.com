{
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-12T15:21:31",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to frequent deployments and technical debt, which are relevant to CI/CD practices often associated with Azure DevOps, but it does not specifically mention Azure DevOps or its tools.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T15:21:35",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T15:21:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to frequent deployments and technical debt, without a clear focus on decision-making processes or the principles of decision theory.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-12T15:21:50",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and reducing batch sizes, which directly relates to optimising throughput and minimising bottlenecks in the value stream. It emphasises the importance of continuous delivery and the impact on technical debt, aligning well with the principles of Flow Efficiency.",
    "level": "Secondary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-12T15:21:51",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the benefits of frequent deployments and smaller batch sizes, which align with Agile and DevOps practices that enhance responsiveness to market demands. However, the primary focus is on technical debt and code quality rather than directly addressing market adaptability strategies.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-12T15:21:53",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the impact of frequent deployments on technical debt and code quality, which indirectly touches on team dynamics and organisational practices. However, it primarily focuses on technical aspects rather than the interplay between social and technical systems.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T15:21:54",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, without a clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-12T15:21:56",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the benefits of frequent deployments and smaller batch sizes, which align with agile principles of adaptability and responsiveness. It touches on customer feedback and continuous delivery, indicating a focus on improving organisational agility. However, the primary focus is on technical practices rather than broader organisational strategies or cultural shifts.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T15:21:58",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the importance of frequent deployments and their impact on technical debt, which touches on interconnectedness and feedback loops in software development. However, it primarily focuses on deployment strategies rather than a comprehensive exploration of Systems Thinking principles.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-12T15:22:00",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, including the collection of telemetry and data to inform decision-making, which aligns with evidence-based management principles and continuous improvement methodologies.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-12T15:22:03",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to technical debt and customer feedback, which are relevant to Agile principles. However, the primary focus is on technical practices rather than explicitly on Agile product management methodologies or roles.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T15:22:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T15:22:07",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and managing technical debt, without a clear focus on AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T15:22:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt management, lacking a focus on industry news or reviews.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T15:22:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without a clear focus on scaling Agile practices or frameworks.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-12T15:22:11",
    "ai_confidence": 85,
    "non_ai_confidence": 0,
    "final_score": 76.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, which aligns closely with Continuous Delivery (CD) principles in DevOps. It addresses the impact of deployment frequency on technical debt, code maintainability, and customer feedback, all of which are central themes in DevOps practices.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-12T15:22:13",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the impact of frequent deployments on technical debt and code quality, touching on human behaviours such as peer pressure and the need for maintainable code. However, the primary focus is on technical practices rather than a deep exploration of team dynamics or structured methodologies.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-12T15:22:16",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments and their impact on technical debt, code quality, and maintainability, aligning closely with the principles of Continuous Integration and Continuous Delivery (CI/CD) practices.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T15:22:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the benefits of frequent deployments and technical debt, without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-12T15:22:19",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the relationship between frequent deployments, technical debt, and code maintainability, which aligns closely with the themes of code quality and complexity in software development.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-12T15:22:21",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing batch sizes, which aligns with Lean principles of minimising waste and maximising value. However, the primary focus is on technical debt and deployment strategies rather than Lean methodologies themselves.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-12T15:22:23",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments in relation to reducing technical debt and enhancing customer value through iterative development and feedback. It aligns well with key topics such as continuous delivery, customer needs, and the impact of Agile methodologies on value delivery.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T15:22:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the benefits of frequent deployments and their impact on technical debt, which aligns with Agile and DevOps principles.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-12T15:22:25",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better code quality and adaptability, which aligns with themes of organisational resilience and change. However, the primary focus is on technical practices rather than broader organisational strategies or change management principles.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-12T15:22:27",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the practical technique of frequent deployments and its impact on technical debt, code quality, and customer feedback, aligning well with the category's focus on methodologies and frameworks that enhance Agile and DevOps practices.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T15:22:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses frequent deployments and technical debt, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T15:22:31",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the benefits of frequent deployments and reducing technical debt, which aligns with improving efficiency and customer outcomes. However, it primarily focuses on deployment practices rather than a comprehensive discussion on Value Stream Management principles.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-12T15:22:32",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses frequent deployments and their impact on technical debt and product delivery, which aligns with agile principles. However, it primarily focuses on team-level practices rather than broader organisational agility.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-12T15:22:34",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they can lead to better adaptability and responsiveness to customer needs, which aligns with the principles of business agility. However, the primary focus is on technical practices rather than a broader discussion of business agility principles or strategies.",
    "level": "Secondary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-12T15:22:35",
    "ai_confidence": 70,
    "non_ai_confidence": 0,
    "final_score": 63.0,
    "reasoning": "The content discusses frequent deployments and their impact on technical debt, which relates to the maintenance and delivery stages of the application lifecycle. However, it primarily focuses on deployment practices rather than a comprehensive view of the entire application lifecycle.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T15:22:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices related to software deployment and technical debt, with no clear focus on psychological principles or theories relevant to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-12T15:22:38",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses the benefits of frequent deployments, technical debt management, and the importance of smaller, iterative changes in the context of product delivery. It aligns well with key topics such as continuous delivery, customer feedback, and the impact of deployment frequency on product quality.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-12T15:22:41",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the benefits of frequent deployments and how they relate to understanding customer needs and reducing technical debt, which aligns with the themes of experimentation and learning from user feedback. However, the primary focus is on technical practices rather than a broader exploration of discovery and learning methodologies.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T15:22:42",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the implications of frequent deployments and smaller batch sizes in software development, which relates to managing complexity and uncertainty in systems. However, it primarily focuses on technical debt and deployment practices rather than a comprehensive exploration of complexity science principles.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T15:22:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of frequent deployments and technical debt without personal anecdotes or reflections.",
    "level": "Ignored"
  }
}
