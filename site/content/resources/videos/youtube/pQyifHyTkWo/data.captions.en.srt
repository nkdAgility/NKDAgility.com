1
00:00:01,399 --> 00:00:06,720
so so you're looking at your monolithic

2
00:00:04,400 --> 00:00:07,559
system and you're thinking this isn't

3
00:00:06,720 --> 00:00:10,160
working

4
00:00:07,559 --> 00:00:12,080
anymore maybe it's slowing you down

5
00:00:10,160 --> 00:00:14,160
maybe it's getting harder and harder to

6
00:00:12,080 --> 00:00:16,720
maintain or maybe the business needs

7
00:00:14,160 --> 00:00:19,520
more flexibility and you just can't get

8
00:00:16,720 --> 00:00:21,680
that with a monolith whatever the reason

9
00:00:19,520 --> 00:00:24,960
you're considering microservices and

10
00:00:21,680 --> 00:00:27,039
that's great but let's be clear if you

11
00:00:24,960 --> 00:00:29,439
just start breaking things apart without

12
00:00:27,039 --> 00:00:32,719
a solid strategy you're setting yourself

13
00:00:29,439 --> 00:00:34,960
up for a world of pain this isn't about

14
00:00:32,719 --> 00:00:37,120
blindly following trends it's about

15
00:00:34,960 --> 00:00:39,600
understanding how to decompose your

16
00:00:37,120 --> 00:00:42,640
systems in a way that makes sense for

17
00:00:39,600 --> 00:00:45,200
your business scalability flexibility

18
00:00:42,640 --> 00:00:49,840
maintainability all great outcomes if

19
00:00:45,200 --> 00:00:51,520
you can do it but if you rush in without

20
00:00:49,840 --> 00:00:53,800
thinking it through you'll introduce

21
00:00:51,520 --> 00:00:57,039
complexity that doesn't actually help

22
00:00:53,800 --> 00:00:58,480
you at Naked Agility we we don't come in

23
00:00:57,039 --> 00:01:01,280
and do the work for you that's that's

24
00:00:58,480 --> 00:01:03,440
not our approach instead we help you

25
00:01:01,280 --> 00:01:05,799
make sense of your system so that you

26
00:01:03,440 --> 00:01:08,960
can make better decisions about how to

27
00:01:05,799 --> 00:01:11,520
transition where to start what to break

28
00:01:08,960 --> 00:01:15,520
off first how do you avoid turning your

29
00:01:11,520 --> 00:01:18,240
monolith into a distributed mess

30
00:01:15,520 --> 00:01:21,520
we work with CTO's and engineering leads

31
00:01:18,240 --> 00:01:24,000
to improve the way that you work so that

32
00:01:21,520 --> 00:01:26,560
you can map out the transition step by

33
00:01:24,000 --> 00:01:29,920
step allowing you to move towards

34
00:01:26,560 --> 00:01:31,840
microservices as needed without chaos

35
00:01:29,920 --> 00:01:34,000
this isn't just about technology it's

36
00:01:31,840 --> 00:01:35,920
about how you work how you design your

37
00:01:34,000 --> 00:01:38,560
teams how you handle dependencies how

38
00:01:35,920 --> 00:01:41,079
you ensure each service is independently

39
00:01:38,560 --> 00:01:44,079
deployable and maintainable

40
00:01:41,079 --> 00:01:46,560
microservices aren't the goal the goal

41
00:01:44,079 --> 00:01:48,479
is faster more adaptable delivery

42
00:01:46,560 --> 00:01:51,040
without the drag of a massive tightly

43
00:01:48,479 --> 00:01:53,840
coupled system so if you're thinking

44
00:01:51,040 --> 00:01:55,439
about this shift make sure you do it for

45
00:01:53,840 --> 00:01:57,520
the right reasons with the right

46
00:01:55,439 --> 00:02:01,360
approach and if you want to talk through

47
00:01:57,520 --> 00:02:01,360
your options let's have a conversation


