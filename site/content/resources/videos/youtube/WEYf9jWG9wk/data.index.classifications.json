{
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-13T19:53:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development, without a focus on collaboration tools or Agile team dynamics.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation of feature delivery through a strategic approach of small experiments, which aligns with Agile principles. It highlights the importance of customer feedback, risk reduction, and continuous learning, all of which are key themes in Agile strategy. The depth of discussion on how these practices lead to improved outcomes demonstrates a strong focus on strategic alignment and optimisation of delivery processes.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-13T19:53:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on backlog refinement practices.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content primarily discusses the transformation in feature delivery through small experiments, which aligns closely with the principles of working software. It highlights the importance of customer feedback, iterative development, and the delivery of functional software that meets user needs. The depth of discussion on the benefits of smaller features and the emphasis on a customer-centric approach further supports its relevance to the category.",
    "level": "Primary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through practical experimentation, which aligns with pragmatic thinking in Agile contexts. It highlights the importance of adaptability and real-world application of strategies to improve product development. However, while it touches on key themes, it lacks detailed exploration of specific Agile or Scrum methodologies, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-13T19:53:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on market share strategies or competitive advantage.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with evidence-based practices in terms of using feedback and iterative processes. However, it lacks direct references to leadership principles or empirical evidence guiding leadership decisions, focusing more on development practices than on leadership itself.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T17:04:35",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content explicitly discusses the transformation in feature delivery through the adoption of smaller experiments, which aligns closely with the core themes of innovation. It highlights the importance of feedback, reduced risk, and enhanced learning cycles, all of which are critical for fostering a culture of innovation. The depth of discussion is significant, providing insights into how these practices can lead to improved product development and customer satisfaction. Overall, the content strongly focuses on innovative practices in software development, justifying a high confidence score.",
    "level": "Primary"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation in software development, which aligns with agile principles. However, it does not explicitly mention the role of a Scrum Master or delve into their responsibilities, techniques, or influence on team dynamics. The focus is more on general software development practices rather than the specific role of a Scrum Master.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-13T19:53:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and the benefits of conducting small experiments in feature delivery, rather than focusing on organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-13T19:53:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on the Sprint Review process or its specific elements.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-13T19:53:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses a transformation in feature delivery through a mindset shift and the adoption of smaller experiments, which aligns with change management principles. However, it primarily focuses on the process of feature delivery rather than explicitly addressing change management strategies or practices. While it touches on adaptability and customer-centric development, it lacks depth in discussing leadership roles or stakeholder engagement, which are crucial aspects of change management.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-13T19:53:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation in software development, without a clear focus on systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-13T19:53:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on Scrum Values.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of conducting small experiments to identify which features resonate with customers, aligning with the core themes of understanding user needs and validating ideas. However, it lacks explicit mention of methodologies or frameworks for product discovery, and the depth of discussion is somewhat limited, focusing more on the outcomes rather than detailed processes.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of small experiments and customer feedback, which aligns well with Agile principles of flexibility and customer-centricity. It highlights iterative processes and continuous improvement, key aspects of Agile methodologies. However, it does not explicitly mention the Agile Manifesto or its core values, which slightly lowers the confidence score.",
    "level": "Primary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development without a clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery rates, highlighting the increase from 25 to 150 features, which directly relates to throughput. It emphasises the importance of smaller experiments and iterative processes, aligning with the core themes of optimising work flow and enhancing delivery efficiency. However, while it touches on throughput, the focus is more on the benefits of experimentation and customer-centric development rather than a detailed exploration of throughput metrics or strategies for improvement.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-13T19:53:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on transparency or its role in Agile processes.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation in feature delivery through iterative learning and experimentation, which aligns with Lean principles of continuous improvement and waste reduction. However, it primarily focuses on Agile methodologies and customer-centric development rather than explicitly addressing Lean concepts or tools. The discussion on small experiments and feedback loops reflects Lean's emphasis on value maximisation, but it lacks depth in exploring core Lean tools or principles.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-13T19:54:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development processes and feature delivery, with no clear focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of customer feedback and iterative processes, which align with customer-centric approaches in product strategy. It also highlights the significance of experimentation in product development, reflecting on methodologies that can inform product vision and roadmap. However, the focus is more on implementation and team dynamics rather than strategic planning or market analysis, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the impact of small experiments on feature delivery, which relates to team performance and productivity. However, it primarily focuses on the outcomes of these experiments rather than specific strategies or methodologies for enhancing team dynamics or collaboration.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of teams in software development through the adoption of smaller experiments, which aligns with self-organisation principles by promoting autonomy and iterative learning. However, it lacks direct mentions of self-organisation and does not delve deeply into the specific practices or leadership roles that support it, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-13T19:54:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on Agile Planning Tools or methodologies.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-13T19:54:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery rather than estimation techniques or practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-13T19:54:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and feature delivery, with no mention of Windows or related topics.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-13T19:54:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, with no direct reference to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation, without addressing the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses a transformation in feature delivery and the benefits of smaller experiments, which aligns with Agile methodologies. However, it lacks explicit references to trend analysis or shifts in Agile and DevOps practices. While it touches on concepts like iterative processes and customer-centric development, it does not provide a comprehensive analysis of trends or their implications for strategic decision-making.",
    "level": "Tertiary"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-13T19:54:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery, focusing on customer resonance rather than technical practices or software craftsmanship.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-13T19:54:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, with no clear focus on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of customer feedback and customer-centric development, which aligns well with the principles of customer satisfaction. It highlights how smaller features allow for rapid feedback and better alignment with customer needs, demonstrating a clear understanding of customer satisfaction principles. However, while the content is focused on feature delivery and experimentation, it does not explicitly measure customer satisfaction or provide detailed methodologies for enhancing it, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation in feature delivery through the lens of small experiments, which aligns well with the principles of empirical process control. It highlights the importance of feedback, iterative processes, and adaptation based on real-time insights, all of which are core themes of the category. The depth of discussion on how smaller features lead to increased learning and reduced risk further supports this alignment. However, while the content is strong in its focus on experimentation and customer-centric development, it does not explicitly mention Agile methodologies or key figures associated with empirical process control, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery and emphasises the importance of smaller, more frequent releases, which aligns with the core themes of deployment frequency. It highlights the benefits of rapid feedback loops and iterative processes, which are crucial in Agile and DevOps practices. However, while it touches on deployment frequency, it does not delve deeply into specific strategies or metrics for measuring deployment frequency, which slightly limits its depth of discussion.",
    "level": "Secondary"
  },
  "Minimum Viable Product": {
    "category": "MVP",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of small experiments and iterative processes, which aligns well with MVP principles. It highlights the benefits of rapid feedback and learning, key aspects of MVP development. However, it does not explicitly mention 'Minimum Viable Product' or delve deeply into specific MVP strategies, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-13T19:54:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on version control practices or methodologies.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-13T19:54:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, with no clear focus on revenue per employee metrics or related financial efficiency analysis.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-11T08:57:31",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the transformation in feature delivery and the benefits of smaller experiments, which indirectly relates to Lead Time by implying faster delivery and increased efficiency. However, it does not explicitly mention Lead Time or provide a detailed exploration of its measurement or optimisation strategies. The focus is more on the process of feature delivery rather than on Lead Time as a specific metric.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of gathering customer feedback through smaller feature experiments, which aligns well with the core themes of customer feedback loops. It highlights how rapid feedback collection enhances product quality and informs development decisions. However, while the focus on feedback is strong, the content primarily revolves around the concept of experimentation rather than a comprehensive exploration of feedback integration processes, which slightly limits its depth in the context of the category.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 70.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with sensemaking principles by emphasising iterative learning and adaptation based on customer feedback. However, while it touches on decision-making processes and the importance of flexibility, it lacks a deeper exploration of frameworks or models specific to sensemaking, which limits its overall depth in this category.",
    "level": "Secondary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-13T19:54:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting experiments in feature delivery, without a clear focus on Scrum roles, team dynamics, or collaboration practices.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-13T19:54:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development without a clear focus on Agile leadership roles or practices.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-13T19:54:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-13T19:54:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without addressing technical debt or its management.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with Agile principles of iterative development and customer feedback. However, it lacks explicit mentions of Agile Planning methodologies and does not delve deeply into specific Agile practices like sprints or backlogs, which limits its overall alignment with the category.",
    "level": "Secondary"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the impact of small experiments on feature delivery, which aligns with product management principles such as iterative development and customer feedback. However, it lacks explicit references to product management frameworks or methodologies, and the discussion is somewhat anecdotal rather than deeply analytical.",
    "level": "Secondary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of a mindset focused on experimentation, customer feedback, and continuous improvement, which aligns closely with Agile principles. It highlights the value of flexibility and customer-centric development, key themes in Agile philosophy. The depth of discussion on how smaller features and iterative processes enhance product quality further supports its alignment with Agile values.",
    "level": "Primary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-13T19:54:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on forecasting methodologies or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-13T19:54:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on technical leadership principles or agile methodologies.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses a transformation in feature delivery within software development, highlighting the importance of adopting a new mindset and iterative processes. While it does not explicitly mention 'digital transformation', it aligns with the core themes of enhancing business agility and fostering innovation through the use of smaller experiments. The depth of discussion on how these practices lead to improved customer engagement and product quality supports a moderate confidence score, but the lack of direct references to digital technologies or broader organisational change limits the overall score.",
    "level": "Secondary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-13T19:54:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery and product development, without focusing on working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-13T19:54:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-13T19:55:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development, without a clear focus on organisational culture or its impact on agility and transformation.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation, which indirectly relates to the principles of Test First Development. However, it lacks explicit mentions of Test First practices, success criteria, or detailed discussions on testing methodologies. The focus is more on feature delivery and customer feedback rather than the core concepts of Test First Development.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-13T19:55:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery and product development, rather than focusing on coaching practices or techniques.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-13T19:55:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than focusing on the measurement or implications of Cycle Time.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-13T19:55:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development, without a clear focus on team dynamics or motivation strategies.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-13T19:55:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in software development and feature delivery, without a clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-13T19:55:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than specific deployment methodologies or strategies.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on the criteria for backlog item readiness.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with Lean principles of minimising waste and maximising learning. However, it lacks explicit references to Lean methodologies or tools, and the discussion is somewhat general, focusing more on experimentation than on structured Lean practices.",
    "level": "Secondary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-13T19:55:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in software development and feature delivery, rather than focusing on the identification and resolution of technical issues.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-13T19:55:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than articulating long-term strategic objectives or alignment with Agile principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-13T19:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, lacking a clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-13T19:55:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, with no clear focus on Daily Scrum practices or discussions.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which indirectly relates to decision-making processes in software development. However, it lacks explicit discussions on structured methodologies or evidence-based practices. While it touches on feedback and learning, it does not delve deeply into frameworks or empirical evidence that would strengthen its alignment with the Decision Making category.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-13T19:55:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on feature delivery and experimentation in software development without specific reference to Azure Pipelines or CI/CD practices.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of conducting small experiments to validate product features and their resonance with customers, which aligns with the core themes of product validation. However, it lacks explicit mentions of structured methodologies or detailed practices related to user testing or customer feedback loops, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments, which aligns with the principles of Evidence-Based Management, particularly in terms of empirical decision-making and customer-centric development. However, it lacks explicit references to specific EBM metrics or a structured approach to measuring current value or unrealised value, which limits its depth in the context of EBM.",
    "level": "Secondary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through experimentation, highlighting the benefits of testing smaller features to better connect with customers. It explicitly mentions the concept of conducting 'lots of little experiments' to validate ideas and improve product capabilities, aligning well with the core themes of hypothesis-driven approaches in Agile workflows. However, while it touches on experimentation, it lacks detailed techniques or structured methodologies, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-13T19:55:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on Azure Boards or Agile project management practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-13T19:55:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, focusing on individual practices rather than large-scale Agile principles or frameworks.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with Agile principles of iterative development and responsiveness to customer feedback. However, it does not explicitly address Agile frameworks or transformation strategies, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the transformation in feature delivery and the importance of small experiments, which relates to the concept of delivering increments in Agile. However, it primarily focuses on the process of experimentation rather than the specific delivery of increments.",
    "level": "Tertiary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-13T19:55:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation rather than accountability or team dynamics.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-13T19:55:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on release management processes or strategies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-04-10T13:40:34",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software development practices and the benefits of smaller feature delivery, which does not directly relate to system configuration. While there are mentions of processes and methodologies, they are not focused on system setup, integration, or maintenance, which are key aspects of the System Configuration category.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation in feature delivery and the benefits of smaller, more frequent releases, which aligns with the principles of Frequent Releases. It highlights the importance of feedback, reduced risk, and customer-centric development, all of which are key themes in the category. However, while it mentions the increase in feature delivery, it does not explicitly discuss continuous delivery or deployment practices, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on feature delivery and experimentation in software development, without discussing TDD principles or practices.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller, incremental improvements, which aligns well with Continuous Delivery principles. It emphasises the importance of rapid feedback, reduced risk, and continuous learning, all of which are key aspects of Continuous Delivery. However, while it touches on these themes, it does not explicitly mention Continuous Delivery as a practice, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-13T19:56:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a focus on remote working practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through the use of smaller experiments, which aligns with operational practices aimed at improving efficiency and delivery. It highlights techniques such as iterative feedback, risk reduction, and customer-centric development, which are relevant to Agile methodologies. However, while it touches on these concepts, the discussion lacks depth in specific operational strategies or metrics, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with the principles of Continuous Learning. It highlights the importance of experimentation and adapting based on customer feedback, reflecting a growth mindset. However, while it touches on key themes, it lacks explicit discussions on knowledge sharing, feedback loops, or team dynamics, which are crucial for a higher confidence score.",
    "level": "Secondary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-13T19:56:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery and product development, without a clear focus on team dynamics or collaboration principles.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-13T19:56:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on Agile engineering practices such as clean code, TDD, or CI/CD.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-13T19:56:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and the benefits of conducting small experiments in software development, without a focus on test automation principles or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-13T19:56:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 65.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation in feature delivery through a focus on smaller experiments, which aligns with Lean principles of continuous improvement and customer-centric development. It mentions concepts like reducing waste and enhancing efficiency, which are core to Lean Thinking. However, it does not explicitly reference Lean terminology or tools, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through small experiments, which aligns with Agile principles of iterative development and customer-centric approaches. It highlights the importance of feedback, flexibility, and continuous improvement, all of which are core themes in Agile strategy. However, while it touches on these concepts, it lacks a direct focus on broader organisational alignment and strategic planning, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-13T19:56:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development, without a clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of experimenting with features to better connect with customers, which aligns with customer engagement strategies. However, it primarily focuses on feature delivery and experimentation rather than direct customer retention strategies.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation in feature delivery through a mindset of experimentation, which aligns with Agile principles of iterative development and customer feedback. However, it does not explicitly mention Agile frameworks like Scrum or Kanban, which limits the direct mentions. The depth of discussion on continuous improvement and customer-centric development reflects Agile values, but the overall focus is more on practices rather than specific frameworks.",
    "level": "Secondary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the transformation of feature delivery through experimentation, which indirectly relates to engineering excellence by highlighting the importance of iterative improvement and responsiveness to customer feedback. However, it lacks explicit mentions of software craftsmanship principles, coding standards, or best practices in engineering processes. The focus is more on the outcomes of experimentation rather than the underlying engineering practices that ensure quality and excellence.",
    "level": "Tertiary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery through a mindset of experimentation, which aligns with entrepreneurial principles of innovation and risk management. It highlights the importance of customer feedback and iterative processes, key aspects of entrepreneurship. However, while it touches on these themes, the primary focus is on software development practices rather than broader entrepreneurial strategies, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses software development practices, particularly focusing on the transformation of feature delivery through small experiments. It aligns well with key topics such as Agile methodologies and iterative processes, emphasising customer-centric development and continuous improvement. The depth of discussion is substantial, providing insights into the benefits of smaller features and the importance of feedback, which are critical aspects of effective software development.",
    "level": "Primary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-13T19:56:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than focusing on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with the principles of hypothesis-driven development. It mentions the iterative process of testing ideas and adapting based on customer resonance, reflecting the core themes of experimentation and validated learning. However, it lacks explicit mentions of hypothesis formulation and structured experimentation methods, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with the Lean Startup principles of iterative testing and learning from customer feedback. However, it does not explicitly mention key terms like Minimum Viable Product (MVP) or the Build-Measure-Learn feedback loop, which limits the direct mentions score. The discussion is somewhat detailed but lacks a comprehensive exploration of Lean Startup methodologies, resulting in a moderate depth score.",
    "level": "Secondary"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on Acceptance Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting experiments in feature delivery rather than focusing on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery through experimentation, which aligns with the principles of business agility, particularly in terms of adapting to customer needs and fostering innovation. However, it lacks explicit mentions of business agility as a concept and does not delve deeply into strategies or frameworks that support it. The focus is more on the outcomes of experimentation rather than the broader principles of business agility.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-13T19:52:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the transformation in feature delivery, focusing on methodologies such as iterative development and customer feedback, which are core to product delivery. It provides detailed insights into the benefits of smaller features and experimentation, aligning well with the category's themes. The depth of discussion on how these practices enhance product quality and customer satisfaction further supports a high confidence score.",
    "level": "Primary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of conducting small experiments to enhance feature delivery and responsiveness to customer needs, which aligns with the principles of adaptability. However, it primarily focuses on the process of feature delivery rather than explicitly addressing broader market adaptability strategies.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-13T19:52:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in software development, focusing on feature delivery rather than the principles or practices of Value Stream Management.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the benefits of small experiments in software development, which indirectly relates to decision-making processes. However, it primarily focuses on Agile methodologies and feature delivery rather than explicitly addressing decision theory concepts such as heuristics, biases, or frameworks. The discussion on risk reduction and learning aligns somewhat with decision-making under uncertainty, but the overall emphasis is more on practical implementation than theoretical exploration.",
    "level": "Tertiary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-13T19:52:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, which is more aligned with product management and customer feedback rather than specific engineering practices or methodologies that enhance technical excellence.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of small experiments in feature delivery and does not address installation or configuration processes.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-13T19:52:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than the management of the application lifecycle stages or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through small experiments, which aligns with the principles of iterative development and incremental delivery. It highlights the importance of customer feedback and adapting to what resonates with users, reflecting a conceptual alignment with value delivery. However, the discussion lacks depth in terms of specific methodologies or frameworks like Agile or Lean, and it does not explicitly mention value delivery practices, which affects the overall confidence score.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content discusses the transformation in feature delivery through the lens of small experiments, which aligns well with the principles of continuous improvement and iterative learning. It explicitly mentions the importance of feedback loops and the role of customer-centric development, which are key themes in the Metrics and Learning category. The depth of discussion on how smaller features lead to increased feedback opportunities and reduced risk further supports its relevance. Overall, while the content is primarily focused on the benefits of experimentation, it effectively ties back to metrics and learning principles, justifying a high confidence score.",
    "level": "Primary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery through experimentation, which aligns with the principles of agility and responsiveness to customer needs. However, it lacks explicit mentions of organisational agility frameworks or leadership roles, and the depth of discussion is limited to the outcomes of experimentation rather than broader organisational strategies.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-13T19:53:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the process of feature delivery and experimentation in software development, without a clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments and a culture of continuous improvement, which aligns with DevOps principles. It highlights the importance of feedback loops, reduced risk, and customer-centric development, all of which are key themes in DevOps. However, it does not explicitly mention DevOps or its practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-13T19:53:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in software development, focusing on feature delivery and customer resonance, rather than exploring Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-13T19:53:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting experiments in software development without specific reference to Azure DevOps or its functionalities.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development, focusing on the benefits of small experiments and iterative processes. While it touches on concepts like flexibility and customer-centric development, it primarily centres on team-level practices rather than broader organisational agility. The discussion lacks explicit references to enterprise-level frameworks or structures that support agility, which diminishes its alignment with the category.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-13T19:53:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation, without a clear focus on the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery and the benefits of smaller experiments, which indirectly relates to flow efficiency by highlighting increased throughput and reduced risk. However, it lacks explicit mentions of flow efficiency principles, metrics, or techniques for eliminating bottlenecks. The focus is more on the mindset and approach rather than specific flow efficiency strategies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of small experiments and iterative processes in feature delivery, which aligns with Agile principles. It highlights customer feedback and a customer-centric approach, key aspects of Agile Product Management. However, it lacks direct mentions of specific Agile roles or frameworks, and while it touches on relevant concepts, it does not delve deeply into Agile methodologies or practices.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-13T19:53:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development processes and experimentation rather than psychological principles related to organisational behaviour.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with the principles of complexity thinking, particularly in terms of iterative processes and customer feedback. However, it lacks direct references to complexity science frameworks or theories, and the depth of discussion on complexity concepts is limited. The focus is more on Agile practices rather than a thorough exploration of complexity dynamics.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with Agile principles but does not explicitly reference Agile, Scrum, or any specific methodologies. While it provides insights into a mindset shift and iterative processes, it lacks direct mentions of recognised frameworks, making it more of a general discussion on development practices rather than a focused exploration of Agile or related methodologies.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-13T19:53:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:02:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the benefits of conducting small experiments to enhance feature delivery, which aligns with adaptive and human-centric approaches. However, it primarily focuses on the process of feature delivery rather than the broader principles of BetaCodex.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments and a customer-centric approach, which aligns with the principles of the Agile Product Operating Model. However, it lacks explicit references to the APOM framework and does not delve deeply into its specific components, such as governance or organisational structure.",
    "level": "Secondary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:49:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, lacking a clear focus on leadership practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments, which aligns with the principles of continuous improvement and iterative processes. However, it primarily focuses on the technical aspects of software development rather than explicitly addressing social technologies or collaboration frameworks. While it mentions customer feedback and a culture of experimentation, these are secondary to the main narrative about feature delivery, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on Internal Developer Platforms or their role in streamlining development processes.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development without a clear focus on AI integration or its applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with Agile principles of iterative progress and responding to customer feedback. However, it does not explicitly mention Scrum roles, events, or artifacts, leading to a lower score in direct mentions. The depth of discussion is limited as it focuses more on the outcomes of experimentation rather than the Scrum framework itself.",
    "level": "Tertiary"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller feature delivery and iterative processes, which align with the Shift-Left Strategy's emphasis on early feedback and quality. However, it does not explicitly mention testing, security, or compliance integration, nor does it focus on the Shift-Left concept as a primary theme, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the transformation of feature delivery through a culture of experimentation, which aligns closely with the principles of Continuous Improvement. It highlights the importance of iterative processes, customer feedback, and learning from smaller experiments, all of which are core themes of Continuous Improvement. The depth of discussion is substantial, providing insights into how these practices lead to enhanced product quality and team effectiveness. Overall, the content strongly embodies the philosophy of Continuous Improvement.",
    "level": "Primary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the transformation in feature delivery through smaller experiments, which indirectly relates to the concept of aligning team efforts with customer needs. However, it lacks explicit mentions of Common Goals, Agile, or DevOps principles. The focus is more on the process of experimentation rather than on shared objectives or strategic alignment, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 80.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of continuous learning and experimentation in software development, which aligns with the core themes of competence. It highlights how smaller features and iterative processes enhance quality and customer satisfaction, reflecting a commitment to professional growth and effective delivery. However, while competence is a significant theme, the primary focus is more on the methodology of feature delivery rather than a deep exploration of competence itself.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation in software development, but it does not explicitly mention the One Engineering System (1ES) or its principles. While there are elements of process improvement and efficiency, the focus is primarily on feature delivery rather than the integration and standardisation of engineering practices across teams, which is central to 1ES.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the transformation in software development through smaller features and experimentation, which aligns with the principles of adaptability and intentional shaping of outcomes. However, it lacks explicit mentions of Agentic Agility and does not differentiate between human and AI capabilities, focusing instead on general Agile practices.",
    "level": "Tertiary"
  },
  "Product Development": {
    "category": "Product Development",
    "calculated_at": "2025-04-10T13:40:05",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 34,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses methodologies for improving feature delivery through smaller experiments, which aligns closely with Agile principles and iterative development processes. It highlights the importance of customer feedback, risk reduction, and continuous improvement, all of which are core themes in product development. The depth of discussion is substantial, providing detailed insights into how these practices can transform product outcomes.",
    "level": "Primary"
  },
  "Time to Market": {
    "category": "Time to Market",
    "calculated_at": "2025-04-10T17:04:28",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development, focusing on the shift from delivering 25 to 150 features annually. It highlights the importance of smaller features and experimentation, which directly relates to improving Time to Market. The discussion includes aspects such as increased feedback opportunities, reduced risk, and customer-centric development, all of which align with the core themes of Time to Market. However, while the content is rich in examples and insights, it does not explicitly mention Time to Market as a term, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Project Management": {
    "category": "Project Management",
    "calculated_at": "2025-04-10T13:40:12",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development, focusing on the benefits of smaller features and experimentation. While it does not explicitly mention project management methodologies or roles, it aligns with core project management principles such as risk management, iterative processes, and continuous improvement. The depth of discussion is moderate, providing insights into the benefits of this approach but lacking detailed exploration of project management tools or methodologies.",
    "level": "Secondary"
  },
  "Unrealised Value": {
    "category": "Unrealised Value",
    "calculated_at": "2025-04-10T17:04:46",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the transformation in feature delivery through smaller experiments, which indirectly relates to the concept of Unrealised Value by highlighting the potential for increased delivery and customer satisfaction. However, it lacks explicit mentions of Unrealised Value or its indicators, and the focus is more on operational improvements rather than strategic insights into untapped opportunities. The depth of discussion on potential value is limited, primarily focusing on the benefits of experimentation rather than a comprehensive exploration of unrealised value in the context of Evidence-Based Management.",
    "level": "Tertiary"
  },
  "Hybrid Agile": {
    "category": "Hybrid Agile",
    "calculated_at": "2025-04-10T13:40:18",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation, which aligns with agile principles. However, it does not explicitly mention Hybrid Agile or critically examine the integration of traditional and agile methodologies. The focus is more on agile practices rather than the challenges of Hybrid Agile, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Current Value": {
    "category": "Current Value",
    "calculated_at": "2025-04-10T17:04:50",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery and the importance of customer feedback, which aligns with the concept of Current Value. It highlights metrics such as the number of features delivered and the quality of customer feedback, which are relevant indicators of value. However, while it touches on aspects of Current Value, it does not provide a comprehensive analysis or specific metrics typically associated with Current Value in Evidence-Based Management. The focus is more on the process of experimentation rather than a real-time assessment of value delivered, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Scaling": {
    "category": "Scaling",
    "calculated_at": "2025-04-10T13:40:25",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments, which aligns with the principles of Agile and iterative development. However, it lacks explicit references to scaling frameworks or methodologies, and the focus is more on individual team practices rather than cross-team collaboration or enterprise-level scaling strategies. While it touches on concepts like customer feedback and flexibility, it does not delve deeply into the complexities of scaling Agile practices or managing dependencies across multiple teams.",
    "level": "Tertiary"
  },
  "GitHub": {
    "category": "GitHub",
    "calculated_at": "2025-04-10T13:40:28",
    "ai_confidence": 12.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content discusses software development practices and the benefits of smaller feature delivery but does not mention GitHub or its functionalities. While it touches on concepts relevant to Agile and iterative development, it lacks direct references to GitHub services, tools, or methodologies, resulting in a low confidence score for the GitHub category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "category": "Agnostic Agile",
    "calculated_at": "2025-04-10T17:04:32",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of smaller features and a culture of experimentation, which aligns with the principles of Agnostic Agile, particularly the emphasis on adapting methods to context and focusing on value delivery. However, it lacks direct mentions of Agnostic Agile or its specific principles, and the discussion primarily revolves around feature delivery rather than a broader application of Agnostic Agile concepts. The depth of discussion is limited, focusing more on practical outcomes rather than theoretical underpinnings.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "category": "Company as a Product",
    "calculated_at": "2025-04-10T17:04:39",
    "ai_confidence": 62.0,
    "ai_mentions": 2,
    "ai_alignment": 3,
    "ai_depth": 3,
    "non_ai_confidence": 30,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development through a culture of experimentation and customer feedback, which aligns with the principles of CaaP. It mentions the importance of customer-centric development and iterative processes, reflecting the core themes of treating the organisation as a product. However, it primarily focuses on software development practices rather than a broader organisational strategy, which limits its depth in the context of CaaP. The discussion is relevant but not exhaustive, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Cell Structure Design": {
    "category": "Cell Structure Design",
    "calculated_at": "2025-04-10T17:04:42",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software development practices, particularly focusing on feature delivery and the benefits of smaller experiments. While it touches on themes of agility and customer-centric development, it does not explicitly mention or align with the principles of Cell Structure Design, such as decentralised structures or autonomous cells. The discussion lacks depth regarding the core concepts of the category, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "category": "Liberating Structures",
    "calculated_at": "2025-04-10T17:04:24",
    "ai_confidence": 32.0,
    "ai_mentions": 0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation in software development, which aligns with some principles of Liberating Structures, such as enhancing collaboration and learning. However, it does not explicitly mention Liberating Structures or any specific techniques associated with it. The focus is primarily on Agile methodologies and customer-centric development rather than on facilitation techniques or group dynamics, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "category": "Open Space Agile",
    "calculated_at": "2025-04-10T17:04:53",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation in software development, which aligns with Agile principles. However, it does not explicitly mention Open Space Agile or its specific practices, nor does it delve into the core themes of Open Space Technology, psychological safety, or co-creation. The focus is more on traditional Agile practices rather than the unique aspects of Open Space Agile, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Principle",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 85.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 34,
    "non_ai_confidence": null,
    "final_score": 85.0,
    "reasoning": "The content focuses on the principle of 'Continuous Improvement' by discussing how a culture of experimentation and iterative feedback has led to increased feature delivery. It directly mentions smaller experiments and feedback loops, which are actionable principles in Agile methodologies. The emphasis on customer-centric development and flexibility aligns well with the guiding principles of Agile, further reinforcing its relevance to the category. The depth of discussion in how these practices lead to effective outcomes showcases a significant understanding of the principles involved.",
    "level": "Primary"
  },
  "Tool": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Tool",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 35.0,
    "ai_mentions": 0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": null,
    "final_score": 35.0,
    "reasoning": "The content discusses the concept of adopting smaller features and a culture of experimentation in software development. However, it does not mention specific tools or mechanisms that facilitate these practices, which is essential for it to align with the 'Tool' category. While there is a conceptual alignment with methodologies that could be enhanced through tools, it lacks direct reference to any specific tool or deep exploration of how tools might enable the described practices, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Values": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Values",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 35.0,
    "ai_mentions": 0,
    "ai_alignment": 40.0,
    "ai_depth": 25.0,
    "non_ai_confidence": null,
    "final_score": 35.0,
    "reasoning": "The content discusses the benefits of experimentation and a customer-centric approach in software development, which tangentially relates to values such as trust and transparency. However, it primarily focuses on the practical aspects of feature delivery and does not deeply engage with foundational values or ethical considerations. The emphasis is on methods and outcomes rather than discussing core values directly, resulting in a lower confidence score.",
    "level": "Ignored"
  },
  "Philosophy": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Philosophy",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 32.0,
    "ai_mentions": 2,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of embracing a mindset of experimentation in software development, which hints at a philosophical approach. However, it primarily focuses on detailed descriptions of specific practices such as delivering smaller features and iterative processes, which are more procedural in nature. The depth of discussion relates to the outcomes of adopting this mindset but lacks a thorough exploration of the philosophical foundations behind these choices. Therefore, while it touches on aspects of the philosophy of agility and customer-centric development, it does not engage deeply enough with the 'why' and 'what' behind these practices.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Discipline",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 52.0,
    "ai_mentions": 100.0,
    "ai_alignment": 35.0,
    "ai_depth": 65.0,
    "non_ai_confidence": null,
    "final_score": 52.0,
    "reasoning": "The content briefly touches on principles of Agile and iterative processes, which relate to the discipline of software development. While it discusses the success of a team adopting a culture of experimentation, the focus is primarily on practical outcomes and experiences rather than the underlying principles and methodologies that define the discipline. The mention of transformation in feature delivery supports some alignment with discipline themes, but it lacks a comprehensive exploration of shared principles or governance structures, resulting in a moderate confidence score.",
    "level": "Tertiary"
  },
  "Artifact": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Artifact",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 25.0,
    "ai_mentions": 100.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content discusses the importance of small features and experiments within a software development process but does not explicitly mention Agile artifacts or their roles. It briefly touches on feedback and iterative processes, which align with the conceptual themes of transparency and adaptation, yet provides minimal depth specifically related to artifacts or their formal representations.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Observability",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 32.0,
    "ai_mentions": 0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content primarily focuses on the benefits of implementing smaller features and a culture of experimentation in software development, with no explicit mention of observability. While it discusses concepts like feedback loops and continuous improvement that could touch on principles associated with observability, the core discussion is not centered around the measurement and understanding of internal system states or metrics, logs, and traces as defined in the category. Therefore, it has minimal alignment with the observability theme and lacks depth in discussing observability-related tools or practices.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Practice",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the practice of utilizing smaller features and experimentation in software development to improve delivery effectiveness. It outlines actionable techniques such as gathering feedback quickly, reducing risk through small experiments, and fostering a culture of continuous improvement. While it touches on practices related to agile development, such as experimentation and iterative processes, it might not delve deeply into specific practices like TDD or pair programming, leading to a slightly lower confidence score. Overall, the content aligns well with the core themes of the 'Practice' category.",
    "level": "Secondary"
  },
  "Method": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Method",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 63.0,
    "ai_mentions": 2,
    "ai_alignment": 75.0,
    "ai_depth": 55.0,
    "non_ai_confidence": null,
    "final_score": 63.0,
    "reasoning": "The content discusses a specific method of using smaller features and experimentation in software development to enhance feature delivery. It mentions increased feedback opportunities and reduced risk associated with this method, which shows alignment with structured procedural approaches. However, the focus is more on the benefits and mindset rather than a detailed step-by-step description of a defined method, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Model": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Model",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 62.0,
    "ai_mentions": 2,
    "ai_alignment": 50.0,
    "ai_depth": 75.0,
    "non_ai_confidence": null,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in software development through the lens of experimentation and iterative processes, which loosely aligns with Agile principles. However, it does not explicitly reference or explore specific models or frameworks such as Lean Startup or the Cynefin Framework. While it mentions concepts relevant to models, like 'small experiments' and 'iterative feedback', the focus is more on the results and mindset rather than detailed analysis or comparison of established models. Thus, the confidence score reflects a moderate alignment with the category due to the focus on experimentation without deep engagement with specific models or frameworks.",
    "level": "Secondary"
  },
  "Framework": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Framework",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 45.0,
    "ai_mentions": 3,
    "ai_alignment": 25,
    "ai_depth": 15,
    "non_ai_confidence": null,
    "final_score": 45.0,
    "reasoning": "The content discusses a transformation in software development through experimentation and iterative processes, which resonates with Agile principles, particularly the notion of smaller, iterative features akin to Agile frameworks. However, it lacks explicit discussions about formal frameworks like Scrum or Kanban, which are central to the category. The focus is more on the concept of experimentation rather than a structured Agile framework itself, limiting its depth in this context.",
    "level": "Tertiary"
  },
  "Tenet": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Tenet",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 68.0,
    "ai_mentions": 10,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 68.0,
    "reasoning": "The content discusses the concept of embracing smaller features and a culture of experimentation. While it aligns with the core themes of Agile methodologies, particularly around feedback loops and continuous improvement, it does not explicitly mention guiding rules or tenets that shape decision-making. The content does offer actionable insights into enhancing delivery through iterative processes, which relates conceptually to Agile tenets, but lacks a precise framework or set of tenets that would strengthen the alignment. The depth of the discussion on the culture of experimentation also reflects an understanding of Agile principles but stops short of providing explicit tenets.",
    "level": "Secondary"
  },
  "Capability": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Capability",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 72.0,
    "ai_mentions": 10,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 72.0,
    "reasoning": "The content focuses on how adopting smaller features and a culture of experimentation enhances software development, directly discussing capabilities such as flexibility, customer-centric development, and the iterative learning process. While it does mention practical approaches and examples of experimentation, it primarily revolves around a mindset shift rather than detailing enduring capabilities cultivated within an organization. It provides substantial depth regarding the benefits and impacts of these practices, aligning well with the themes of capability development but remains slightly more tactical than strategic.",
    "level": "Secondary"
  },
  "Service Level Expectation": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:54:41",
    "ai_confidence": 18.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 3.1,
    "ai_audience": 5.0,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content centers on improving software delivery by adopting small experiments and frequent feedback, but never directly references Service Level Expectation (SLE) as a concept. The ideas of smaller features, faster delivery, experimentation, and continuous learning are generally aligned with Agile and Kanban values, which relate peripherally to concepts underlying SLE, such as predictability and cycle time. However, at no point does the article mention SLE, its calculation, its probability/range basis, its specific connection to workflow predictability, or any authoritative Kanban/Scrum source material. There is modest conceptual overlap in that faster cycle times and smaller work items can influence SLEs, but none of these links are drawn or discussed — no SLE definitions, applications, or explicit advice. The audience (practitioners of software/product development) loosely matches the target for SLE guidance, but the focus is entirely on changing team attitudes and delivery cadence, not on establishing, using, or improving an SLE. The signal-to-noise ratio is adequate, but most of the signal is about product strategy and experimentation rather than explicit flow predictability or measurement. Thus, the overall confidence the content fits specifically under 'Service Level Expectation' is very low.",
    "level": "Ignored"
  }
}