1
00:00:00,120 --> 00:00:06,160
I think the most common um challenge

2
00:00:03,800 --> 00:00:11,120
that organizations face when trying to

3
00:00:06,160 --> 00:00:12,480
adopt uh devops practices is regression

4
00:00:11,120 --> 00:00:15,480
I think that's probably the best way to

5
00:00:12,480 --> 00:00:18,520
describe it is you make two steps

6
00:00:15,480 --> 00:00:23,640
forward and five steps backwards and

7
00:00:18,520 --> 00:00:27,119
part of that is um how do we maintain

8
00:00:23,640 --> 00:00:29,599
our ability to control risk within this

9
00:00:27,119 --> 00:00:31,119
new context because the risk profile is

10
00:00:29,599 --> 00:00:34,079
different

11
00:00:31,119 --> 00:00:36,960
because the risk profile is different we

12
00:00:34,079 --> 00:00:41,360
need different tools and techniques to

13
00:00:36,960 --> 00:00:43,879
manage that risk um in in the old the

14
00:00:41,360 --> 00:00:45,440
old days I'm calling it the old days it

15
00:00:43,879 --> 00:00:48,320
might be the current days for lots of

16
00:00:45,440 --> 00:00:52,239
organizations but in the old days the

17
00:00:48,320 --> 00:00:54,160
the we we would spend a bunch of time

18
00:00:52,239 --> 00:00:55,960
designing our product right we would

19
00:00:54,160 --> 00:00:57,840
design the architecture we would decide

20
00:00:55,960 --> 00:01:00,280
what we're going to build we would list

21
00:00:57,840 --> 00:01:03,760
out all of the features and then would

22
00:01:00,280 --> 00:01:06,520
work towards some kind of release date

23
00:01:03,760 --> 00:01:08,720
of our product and then once we get to

24
00:01:06,520 --> 00:01:11,000
that close to that release date once

25
00:01:08,720 --> 00:01:14,520
we've delivered a a body of of features

26
00:01:11,000 --> 00:01:16,520
that make sense we're going to test

27
00:01:14,520 --> 00:01:18,320
those features so we have a different

28
00:01:16,520 --> 00:01:20,920
group of people who are who are testing

29
00:01:18,320 --> 00:01:22,720
and validating um those features I mean

30
00:01:20,920 --> 00:01:25,920
it is still quite common to have

31
00:01:22,720 --> 00:01:28,360
separate test teams to engineering teams

32
00:01:25,920 --> 00:01:32,799
rather than a combined uh combined arms

33
00:01:28,360 --> 00:01:35,880
combined engineering Force and um then

34
00:01:32,799 --> 00:01:37,360
once they've done those testing it's

35
00:01:35,880 --> 00:01:39,560
probably handed off to some kind of

36
00:01:37,360 --> 00:01:43,240
operations team who are going to deploy

37
00:01:39,560 --> 00:01:46,920
it to an environment and then something

38
00:01:43,240 --> 00:01:49,840
like uat is going to start where you

39
00:01:46,920 --> 00:01:52,840
have some kind of additional validation

40
00:01:49,840 --> 00:01:55,520
of uh um what's what's going on in the

41
00:01:52,840 --> 00:01:57,600
product and then once all of those

42
00:01:55,520 --> 00:02:00,759
things are are successful then it moves

43
00:01:57,600 --> 00:02:02,799
on to um maybe deploy to production or

44
00:02:00,759 --> 00:02:06,159
staging or you know you might have other

45
00:02:02,799 --> 00:02:08,640
environments that the traditional most

46
00:02:06,159 --> 00:02:11,480
common traditional model is deploy by

47
00:02:08,640 --> 00:02:14,920
environment and that fundamentally

48
00:02:11,480 --> 00:02:17,879
doesn't work within the context of of of

49
00:02:14,920 --> 00:02:21,080
of devops it's going to slow you down um

50
00:02:17,879 --> 00:02:23,360
it's not going to get you the the the

51
00:02:21,080 --> 00:02:26,760
key thing that devops that's trying to

52
00:02:23,360 --> 00:02:29,480
bring to your business is high quality

53
00:02:26,760 --> 00:02:32,920
flexibility adaptability and your

54
00:02:29,480 --> 00:02:34,640
ability to validate assumptions right we

55
00:02:32,920 --> 00:02:36,840
we have an assumption that this feature

56
00:02:34,640 --> 00:02:39,360
is going to be valuable but in order to

57
00:02:36,840 --> 00:02:44,519
actually validate it no matter how much

58
00:02:39,360 --> 00:02:46,879
stuff we do on paper or in Labs or in um

59
00:02:44,519 --> 00:02:49,640
studies right no matter how much of that

60
00:02:46,879 --> 00:02:51,440
stuff we do the only place to really

61
00:02:49,640 --> 00:02:55,280
validate that feature is is in

62
00:02:51,440 --> 00:02:58,159
production um a great example of that is

63
00:02:55,280 --> 00:03:01,159
uh Windows 8 right Microsoft spent

64
00:02:58,159 --> 00:03:07,959
hundreds of Millions on user experience

65
00:03:01,159 --> 00:03:11,040
um on Labs on um flying people into labs

66
00:03:07,959 --> 00:03:13,799
to video them using the product

67
00:03:11,040 --> 00:03:15,920
performing certain tasks and then

68
00:03:13,799 --> 00:03:17,480
getting feedback from them in interviews

69
00:03:15,920 --> 00:03:19,519
or sitting with people that are using

70
00:03:17,480 --> 00:03:21,360
the product all of those types of things

71
00:03:19,519 --> 00:03:24,480
they did all of the things that you're

72
00:03:21,360 --> 00:03:27,080
supposed to do and still they ended up

73
00:03:24,480 --> 00:03:29,599
with a product that bounced off their

74
00:03:27,080 --> 00:03:31,120
consumers from a usability perspective

75
00:03:29,599 --> 00:03:35,840
and

76
00:03:31,120 --> 00:03:39,159
and that is because of that production

77
00:03:35,840 --> 00:03:41,480
problem um one of my favorite uh people

78
00:03:39,159 --> 00:03:45,519
Brian Harry um who used to run the Azure

79
00:03:41,480 --> 00:03:49,159
devops team um he made this comment that

80
00:03:45,519 --> 00:03:51,239
I loved and it was there's no place like

81
00:03:49,159 --> 00:03:53,519
production right the little red shoes

82
00:03:51,239 --> 00:03:55,799
there's no place like production because

83
00:03:53,519 --> 00:03:58,680
no matter how much testing no matter how

84
00:03:55,799 --> 00:04:00,280
much validation you do especially if

85
00:03:58,680 --> 00:04:02,159
you're in the service

86
00:04:00,280 --> 00:04:03,840
world where you're building a service

87
00:04:02,159 --> 00:04:05,760
that's that's got thousands and

88
00:04:03,840 --> 00:04:10,040
thousands of customers using the same

89
00:04:05,760 --> 00:04:13,799
service no matter what you do you cannot

90
00:04:10,040 --> 00:04:16,759
simulate production you just can't it's

91
00:04:13,799 --> 00:04:19,199
not possible to simulate production we

92
00:04:16,759 --> 00:04:22,520
we can we can make it maybe we can do

93
00:04:19,199 --> 00:04:25,440
some stuff but that's that that common

94
00:04:22,520 --> 00:04:28,840
challenge is how do we address these

95
00:04:25,440 --> 00:04:32,880
things as that world is changing right

96
00:04:28,840 --> 00:04:35,520
we've no longer got 6 months or a year

97
00:04:32,880 --> 00:04:37,720
or the windows team used to be on

98
00:04:35,520 --> 00:04:39,039
six-year delivery that's how long it

99
00:04:37,720 --> 00:04:40,880
would take them to get a new version of

100
00:04:39,039 --> 00:04:42,560
Windows out the door from from starting

101
00:04:40,880 --> 00:04:45,680
writing the code to it actually been

102
00:04:42,560 --> 00:04:49,320
released to production was six years

103
00:04:45,680 --> 00:04:52,160
they've got six years to do testing uh

104
00:04:49,320 --> 00:04:55,280
oh I had a colleague from Boeing um and

105
00:04:52,160 --> 00:04:58,400
he talked about um one of the things

106
00:04:55,280 --> 00:05:01,639
that he saw as a problem and he said

107
00:04:58,400 --> 00:05:05,600
Boeing don't build quality in they test

108
00:05:01,639 --> 00:05:08,320
quality in right so you've got all of

109
00:05:05,600 --> 00:05:10,479
this aggressive testing that's happening

110
00:05:08,320 --> 00:05:11,880
as part of you're building something and

111
00:05:10,479 --> 00:05:13,400
then you're testing it oh right it

112
00:05:11,880 --> 00:05:16,400
failed right so what do we have to do

113
00:05:13,400 --> 00:05:17,320
differently that that is a quite often

114
00:05:16,400 --> 00:05:18,960
you have to do that with some

115
00:05:17,320 --> 00:05:20,919
manufacturing stuff these days you've

116
00:05:18,960 --> 00:05:22,840
got simulators so you can you can

117
00:05:20,919 --> 00:05:25,160
digital simulators you can do a lot more

118
00:05:22,840 --> 00:05:28,280
but in the software world we don't have

119
00:05:25,160 --> 00:05:30,680
to suffer from from that problem right

120
00:05:28,280 --> 00:05:33,400
we we don't have to spend lots of time

121
00:05:30,680 --> 00:05:35,800
building a rocket to put it on a rocket

122
00:05:33,400 --> 00:05:37,240
pad and launch it and then it explodes

123
00:05:35,800 --> 00:05:39,479
and we look at the Telemetry and figured

124
00:05:37,240 --> 00:05:42,000
out what went wrong we don't have to do

125
00:05:39,479 --> 00:05:44,520
that we're building software we can get

126
00:05:42,000 --> 00:05:46,759
that software out the door as quickly as

127
00:05:44,520 --> 00:05:48,319
humanly possible with the level of

128
00:05:46,759 --> 00:05:53,080
quality that we need to maintain our

129
00:05:48,319 --> 00:05:55,319
business brand or our our H um uh

130
00:05:53,080 --> 00:05:57,919
protect our business protect our

131
00:05:55,319 --> 00:06:00,880
consumers and protect our producers

132
00:05:57,919 --> 00:06:02,039
right um with that level of quality and

133
00:06:00,880 --> 00:06:03,840
we can get things out the door as

134
00:06:02,039 --> 00:06:07,039
quickly as possible test it in the real

135
00:06:03,840 --> 00:06:09,280
world test it in the market find out how

136
00:06:07,039 --> 00:06:10,680
accepted that thing is in the market

137
00:06:09,280 --> 00:06:12,720
whether it's increasing our Market or

138
00:06:10,680 --> 00:06:15,319
decreasing our market and then adapt

139
00:06:12,720 --> 00:06:17,759
around that and that's part of that that

140
00:06:15,319 --> 00:06:20,199
devop story is closing those feedback

141
00:06:17,759 --> 00:06:22,400
loops not just identifying those

142
00:06:20,199 --> 00:06:24,479
feedback loops and eliminating waste in

143
00:06:22,400 --> 00:06:26,880
the process to get it to go through the

144
00:06:24,479 --> 00:06:28,800
process as quickly as possible but

145
00:06:26,880 --> 00:06:30,360
actually closing the feedback looks not

146
00:06:28,800 --> 00:06:32,720
just collecting the dat

147
00:06:30,360 --> 00:06:37,919
closing those feedback loops so the the

148
00:06:32,720 --> 00:06:41,080
two big common challenges um that that I

149
00:06:37,919 --> 00:06:43,120
see is one is that huge one is closing

150
00:06:41,080 --> 00:06:45,759
the feedback loops and but the other one

151
00:06:43,120 --> 00:06:49,759
is actually getting how do

152
00:06:45,759 --> 00:06:53,720
we change the way we understand our risk

153
00:06:49,759 --> 00:06:56,400
profile and how we mitigate and organize

154
00:06:53,720 --> 00:06:58,000
around risk within that context and then

155
00:06:56,400 --> 00:07:02,360
how do we

156
00:06:58,000 --> 00:07:05,080
adapt to the the things that we see in a

157
00:07:02,360 --> 00:07:07,360
timely manner those are the two most

158
00:07:05,080 --> 00:07:12,639
common challenges and those are the

159
00:07:07,360 --> 00:07:14,680
things that we can help teams products

160
00:07:12,639 --> 00:07:18,599
and your organization deal with and

161
00:07:14,680 --> 00:07:18,599
figure out how to do better


