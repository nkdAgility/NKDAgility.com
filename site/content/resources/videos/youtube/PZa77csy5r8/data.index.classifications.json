{
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T16:53:15",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses technical debt management and its implications in software development, without any mention of AI or its integration within Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-12T16:53:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, without a clear focus on team collaboration or dynamics within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-12T16:53:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt management and its implications on product quality, rather than focusing on the development or utilisation of a Minimum Viable Product.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses technical debt and its management, with only a brief mention of Agile practices and continuous delivery. While it touches on the importance of closing feedback loops, which relates to deployment frequency, the main focus is not on optimising deployment intervals or strategies to increase deployment frequency.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-03-14T17:08:44",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses technical debt rather than throughput. While it touches on the importance of delivering value and mentions the increase in features delivered by the Azure DevOps team, it does not explicitly define or focus on throughput as a measurement of work completion rates. The discussion on strategies for managing technical debt provides some indirect relevance to throughput but lacks a direct connection to the core themes of measuring and optimising work flow in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T16:53:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on Scrum Values or their significance within the Scrum framework.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T12:00:29",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the management of technical debt and its impact on product delivery, which aligns with Lean principles of maximising value and minimising waste. However, the primary focus is on technical debt rather than Lean Product Development specifically.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T16:53:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, without addressing Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-12T16:53:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software quality, without a focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T16:53:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and software development practices, with no focus on the Windows operating system or related topics.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T16:53:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on mentoring or coaching within Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-03-14T17:09:47",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt and its management, which is somewhat related to Agile practices but does not explicitly focus on empirical process control principles. While it mentions the importance of feedback loops and adapting processes, it lacks a direct discussion on transparency, inspection, or adaptation as core themes of empirical process control.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-07T12:46:49",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 42.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content discusses technical debt in detail, providing real-world examples, particularly from the Azure DevOps team, which illustrates practical problem-solving in a complex environment. It aligns well with the themes of adaptability and critical thinking, emphasising the importance of addressing technical debt to enhance product delivery. However, while it touches on Agile principles, the primary focus is on technical debt rather than a broader discussion of Agile or Scrum methodologies.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T16:53:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt management and software development processes, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-03-14T17:09:45",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses technical debt and its management rather than focusing on the delivery of software increments. While it briefly touches on Agile practices, it does not delve into the specifics of increments or their significance in delivering value to stakeholders.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-03-14T17:10:00",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to innovation by highlighting the importance of quality and continuous improvement. However, it lacks a direct focus on the Ability to Innovate category, as it primarily centres on technical debt rather than frameworks or strategies specifically aimed at fostering innovation. While there are mentions of improving processes and delivering value, these are secondary to the main topic of technical debt management.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-03-13T16:20:23",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses strategies for managing technical debt, which aligns with the strategic optimisation of delivery processes. It provides specific techniques such as prioritising refactoring and closing feedback loops, indicating a depth of discussion on improving team performance. However, the primary focus is on technical debt rather than a broader strategic framework within Agile, Scrum, or DevOps, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T16:53:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management rather than Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T16:53:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, rather than focusing on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T16:53:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and does not focus on the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-14T17:09:00",
    "ai_confidence": 32.0,
    "ai_mentions": 100.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses technical debt and its management within a development team context, which is relevant to team performance. However, it primarily focuses on technical debt rather than directly addressing team dynamics, collaboration, or Agile methodologies. The mention of the Azure DevOps team's transition to Agile practices provides some alignment, but the overall depth of discussion on team performance strategies is limited.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T16:53:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical debt management rather than Agile Planning methodologies or practices. While it touches on aspects of delivery and team dynamics, it does not focus on Agile principles or planning techniques.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T16:53:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product quality and delivery, without a clear focus on forecasting methodologies or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T16:53:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product quality and delivery, without a focus on estimation techniques or practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-12T16:53:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, rather than focusing on evidence-based management principles or practices.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T16:53:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and software development practices, with no clear focus on organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T16:53:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with only brief mentions of Azure DevOps, which is not the main focus.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T16:54:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for product quality and delivery, with no direct reference to market share or strategies for increasing it.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-12T16:54:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, without a clear focus on accountability or team ownership within Agile practices.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-10T11:35:56",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "The content discusses technical debt and its implications on software delivery, mentioning a transition to a continuous delivery model. However, the primary focus is on technical debt rather than the principles and practices of Continuous Delivery itself. While there are references to continuous delivery and its impact on feature delivery, the depth of discussion on Continuous Delivery principles is limited, making it a secondary theme rather than a primary focus.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T16:54:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T16:54:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on customer satisfaction or related strategies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T16:54:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, without a clear focus on Agile leadership roles or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-14T17:09:14",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on technical debt rather than Continuous Integration. While it briefly mentions the transition to a continuous delivery model, it does not delve into CI principles, practices, or tools, which are essential for a higher confidence score in this category.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-03-14T17:09:49",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to Lean principles through the emphasis on quality and continuous improvement. However, it primarily focuses on technical debt rather than explicitly addressing Lean concepts such as waste reduction or value maximisation. The mention of Agile practices hints at Lean integration but lacks depth in Lean-specific tools or principles.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T16:54:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and does not address the Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-12T16:54:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, without a clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-12T16:54:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, without a focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T16:54:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management rather than the criteria or practices related to the Definition of Ready in Agile.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T16:54:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, without addressing the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T16:54:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on cross-functional teams or their characteristics within Agile methodologies.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-10T13:53:01",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses technical debt in the context of software development, particularly how it affects teams transitioning to Agile and DevOps methodologies. It provides examples of how the Azure DevOps team managed their technical debt while shifting to continuous delivery, which aligns with the category's focus on modern engineering practices. However, while it touches on relevant themes, the primary focus is on technical debt rather than a broader exploration of the role of software developers within Agile and DevOps frameworks.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T16:54:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on scaling Agile practices or frameworks.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-10T17:49:44",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content provides a comprehensive discussion on technical debt, a critical aspect of software development. It explicitly defines technical debt, discusses its implications, and provides real-world examples, particularly referencing the Azure DevOps team's experience. The depth of the discussion is significant, covering both known and unknown technical debt, and the importance of managing it effectively within the software development lifecycle. The content aligns well with key topics in software development, such as best practices in coding, continuous delivery, and the impact of architectural decisions on software quality.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T16:54:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with only brief mentions of Azure DevOps without a direct focus on Azure Repos functionalities or practices.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T16:54:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and does not focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T16:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product development, without a clear focus on customer feedback integration or feedback loops.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-03-14T17:08:47",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses technical debt in the context of Agile methodologies, particularly referencing the Azure DevOps team's transition to a more Agile model. However, while it touches on Agile principles, the primary focus is on technical debt management rather than a comprehensive Agile strategy. The discussion lacks depth in strategic planning and leadership roles, which are crucial for the Agile Strategy category.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T16:54:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, without a focus on collaboration tools or Agile team dynamics.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T16:54:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with only a brief mention of Agile practices in the context of continuous delivery. The focus is not on Agile transformation strategies or methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-11T00:17:00",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses technical debt and its implications on operational efficiency, particularly in the context of Agile and DevOps practices. It highlights the importance of managing and paying back technical debt to improve delivery speed and product quality, which aligns with the core themes of operational practices. However, while it touches on relevant concepts, the primary focus is on technical debt rather than broader operational strategies, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-03-14T17:09:52",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to decision-making processes in software development. However, it primarily focuses on the implications of technical debt rather than structured decision-making methodologies. While it mentions strategies that could influence decisions, such as prioritising refactoring and closing feedback loops, these are not explored in the context of evidence-based decision-making or collaborative insights, which are central to the category.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-14T17:09:22",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses technical debt, which indirectly relates to working software by highlighting the importance of quality and long-term solutions in software development. However, it primarily focuses on the concept of technical debt rather than directly addressing the delivery of functional software or customer value, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T16:54:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on Sprint Review processes or related topics.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-12T16:54:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, without a clear focus on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T17:15:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt management and its implications on software development, without any focus on psychological safety or related themes.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T17:15:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on customer retention strategies or user engagement.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T17:15:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a focus on Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T17:15:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, without any focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T17:15:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product quality and delivery, without a focus on experimentation or hypothesis-driven approaches.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T17:15:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical debt management and its implications on product delivery, without any focus on revenue per employee metrics or related financial efficiency discussions.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-12T17:15:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with only brief mentions of Azure DevOps without a focus on Azure Pipelines or CI/CD practices.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-12T17:15:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses technical debt management and its implications, with only a brief mention of Agile practices in the context of continuous delivery. It does not focus on Agile methodologies or principles as a primary topic.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-03-14T17:09:35",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses technical debt and its management within software development, which is not a direct discussion of Lean Thinking principles. While there are elements of efficiency and value delivery that align with Lean concepts, the focus is not on Lean methodologies or tools. The mention of improving processes and delivering more value could be seen as tangentially related, but it lacks a strong connection to Lean principles such as waste minimisation or specific Lean tools. Therefore, the confidence score reflects a low alignment with the Lean Thinking category.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T17:15:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T17:15:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a focus on scaling Agile methodologies or enterprise-level practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T17:15:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management rather than the Product Backlog or its management in Agile frameworks.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T17:15:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical debt management and its implications on software development, without a focus on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T17:15:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product quality, without a focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T17:15:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, without any focus on Value Stream Mapping or related Lean principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T17:15:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical debt management and its implications on product quality and feature delivery, rather than focusing on customer needs or product feature definition.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the transition of the Azure DevOps team to a continuous delivery model, which is relevant to frequent releases. However, the primary focus is on technical debt rather than the principles and practices of frequent releases. While it touches on aspects like feedback loops and quality, it does not delve deeply into the core themes of frequent releases, such as automation, metrics, or best practices for minimising risk during releases.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt in the context of software development and mentions a transition to a more agile model, but it primarily focuses on technical aspects rather than the broader Agile Philosophy. While there are references to Agile practices, they are not the main focus, and the discussion lacks depth on Agile principles such as collaboration, customer satisfaction, and continuous improvement.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt and its management, which is primarily operational rather than strategic. While it touches on long-term benefits and the importance of quality, it lacks a direct focus on strategic goals or frameworks for setting and measuring objectives. The discussion is more about tactical approaches to technical debt rather than aligning with broader organisational strategies or agile principles.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-12T17:15:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on Lead Time as defined in the category description.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T17:15:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software quality, without any focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-12T17:15:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses technical debt management and its implications, with only a brief mention of a transition to a continuous delivery model. It does not focus on Scrum principles, roles, or practices, nor does it address product development within a Scrum framework.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T17:15:39",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, rather than focusing on product strategy methodologies, frameworks, or customer-centric approaches.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T17:15:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-11T09:48:39",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content provides a thorough exploration of technical debt, discussing its implications, management strategies, and the importance of addressing it within software development. It aligns closely with the principles of software craftsmanship and engineering excellence, detailing how technical debt can impact product delivery and quality. The depth of discussion is significant, with real-world examples illustrating the consequences of neglecting technical debt and the benefits of prioritising its management. Overall, the content is highly relevant to the category of Technical Mastery.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T17:15:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, without a clear focus on transparency within Agile processes.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T17:15:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses technical debt management and its implications on software development, without a clear focus on Scrum Team dynamics, roles, or collaboration.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on technical debt rather than Cycle Time. While it briefly touches on Agile practices and mentions the importance of measuring progress, it does not explicitly discuss Cycle Time or its implications. The discussion lacks depth and does not align with the core themes of Cycle Time, such as its definition, measurement methods, or strategies for reduction.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-03-14T17:09:43",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to continuous learning through the emphasis on feedback loops and the importance of quality. However, it primarily focuses on technical debt rather than explicitly exploring continuous learning principles or practices. The mention of Agile methodologies and the Azure DevOps team's journey provides some alignment, but the depth of discussion on continuous learning concepts is limited.",
    "level": "Secondary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-03-14T17:09:05",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on technical debt management rather than trend analysis within Agile or DevOps frameworks. While it briefly mentions the Azure DevOps team's transition to Agile practices, it does not explore broader trends or their implications for organisational practices. The discussion lacks depth in analysing emerging trends or shifts, which are central to the Trend Analysis category.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-12T17:15:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product delivery, without a focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-06T14:40:26",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content provides a thorough exploration of technical debt, a critical aspect of engineering excellence. It discusses the implications of technical debt on software quality and delivery, aligning closely with the principles of software craftsmanship and continuous improvement. The depth of the discussion is significant, with detailed examples and strategies for managing and paying back technical debt, which directly ties into best practices in coding standards and refactoring strategies. The content also highlights the impact of these practices on overall engineering performance and value delivery, reinforcing its relevance to the category.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-03-14T17:08:50",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses technical debt and its management, which is relevant to digital transformation in terms of improving operational efficiency and fostering innovation. However, it primarily focuses on technical debt rather than the broader strategic adoption of digital technologies. While there are mentions of agile methodologies and the impact of past decisions on current practices, the content lacks a direct focus on digital transformation strategies or case studies, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T17:15:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development rather than system configuration processes or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-03-11T11:12:08",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 38,
    "ai_depth": 36,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content provides a comprehensive discussion on technical debt, including its definition, types (intentional vs. unintentional), and real-world examples illustrating its impact on development velocity and product quality. It delves into strategies for managing and prioritising technical debt, particularly through the lens of the Azure DevOps team's experience. The depth of discussion is significant, with detailed explanations and case studies that highlight the consequences of neglecting technical debt and the benefits of addressing it. Overall, the content aligns closely with the key topics outlined in the Technical Debt category.",
    "level": "Primary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T17:16:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T17:16:03",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and does not address remote working practices, challenges, or solutions.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T17:16:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on evidence-based leadership principles or practices.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T17:16:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software quality, rather than deployment strategies or methodologies.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T17:16:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management rather than backlog refinement or Agile practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T17:16:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for product quality, without a clear focus on scaling agile practices or frameworks.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses technical debt and its implications for development teams, which is more aligned with software engineering than product management. While it touches on the importance of managing technical debt for delivering value and features, it lacks a direct focus on product management strategies, methodologies, or frameworks. The discussion does not explicitly mention product management roles or techniques for aligning customer needs with business objectives, which are central to the category. Therefore, while there are relevant points, they are not the primary focus of the content.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T17:16:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development processes, without a clear focus on organisational culture or its influence on agility and team dynamics.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-12T17:16:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software quality, without a clear focus on version control practices or methodologies.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T17:16:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software development, with no clear focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-03-14T17:09:41",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily discusses technical debt in software development, focusing on its implications and management strategies. While it touches on organisational challenges and the impact of team dynamics, it does not explicitly engage with systems thinking or the broader dynamics of organisational behaviour as defined in the category of Organisational Physics. The mention of the Azure DevOps team's transition to agile practices hints at organisational change but lacks a comprehensive exploration of systems thinking principles or organisational dynamics.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-12T17:16:20",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product quality, rather than focusing on validating product ideas through user engagement or testing methodologies.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T17:16:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, with no clear focus on Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T17:16:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management rather than release management strategies or practices.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T17:16:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and software development practices, which are not directly related to entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-03-11T13:06:44",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses technical debt extensively, providing examples and implications for development teams. However, while it touches on the importance of managing technical debt, it lacks a direct focus on the broader aspects of technical leadership, such as mentoring, team dynamics, or agile methodologies. The discussion is primarily centred on the concept of technical debt rather than the leadership strategies that guide teams in addressing it.",
    "level": "Secondary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T17:16:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management rather than the identification and resolution of specific technical issues.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on technical debt and its management within software development, with only brief references to Agile principles and a transformation journey. While it touches on aspects of change, such as transitioning from a waterfall model to Agile, it lacks a comprehensive discussion on change management strategies, stakeholder engagement, or leadership roles, which are central to the category.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-11T14:16:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 35,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses technical debt extensively, which is closely related to clean code and refactoring, both of which are key topics in engineering practices. It provides a detailed exploration of the types of technical debt, its implications, and strategies for managing it, aligning well with the principles of Agile development. However, while it touches on important engineering practices, it does not explicitly mention concepts like TDD or CI/CD, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T17:16:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with only a brief mention of Agile practices in the context of continuous delivery. The focus is not on Agile frameworks themselves.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-12T17:16:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, without a focus on Test First Development or related testing practices.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T17:16:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-03-06T13:27:11",
    "ai_confidence": 72.0,
    "ai_mentions": 80.0,
    "ai_alignment": 65.0,
    "ai_depth": 75.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses technical debt extensively, using the Azure DevOps team as a primary example to illustrate the impact of technical debt on development processes. It directly mentions Azure DevOps multiple times, indicating a strong focus on the platform. The discussion aligns well with the category's themes, particularly in relation to continuous delivery and agile practices. However, while the content is rich in detail regarding technical debt, it does not delve deeply into the specific functionalities or tools of Azure DevOps, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T16:52:09",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of technical debt and its implications in software development, without focusing on specific products, books, or methodologies related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-03-14T17:08:58",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses decision-making in the context of technical debt, particularly how choices made in software development can lead to future costs. However, it primarily focuses on technical debt management rather than exploring broader decision-making frameworks or theories. While there are mentions of decision-making processes, they are not the primary focus, and the depth of discussion on decision theory concepts is limited.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-03-14T17:09:29",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt, which indirectly relates to flow efficiency by highlighting the importance of managing work processes to improve delivery speed. However, it primarily focuses on the concept of technical debt rather than directly addressing flow efficiency principles, techniques, or metrics. While there are mentions of improving processes and delivery, the depth of discussion on flow efficiency itself is limited.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-03-14T17:09:38",
    "ai_confidence": 42.0,
    "ai_mentions": 3,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to market adaptability through the mention of Agile methodologies and continuous feedback loops. However, the primary focus is on technical debt rather than explicitly addressing market adaptability strategies. The depth of discussion on Agile practices is present but not comprehensive enough to fully align with the category.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-14T17:09:03",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on technical debt, discussing its types, costs, and management strategies. While it touches on team dynamics and the impact of organisational changes (like the shift from waterfall to agile), it lacks a comprehensive exploration of the interplay between social and technical systems. The mention of the Azure DevOps team's experience provides some contextual insight, but the overall discussion does not sufficiently align with the core themes of sociotechnical systems.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T16:52:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on product quality, rather than focusing on transparency and accountability within Agile teams.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-14T17:09:55",
    "ai_confidence": 62.0,
    "ai_mentions": 100.0,
    "ai_alignment": 70.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the transition from a waterfall model to a more agile, continuous delivery model, which aligns with the principles of organisational agility. It mentions strategies for managing technical debt that can enhance responsiveness and adaptability, such as prioritising refactoring and closing feedback loops. However, the primary focus is on technical debt rather than organisational agility itself, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-03-14T17:09:12",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt in software development, focusing on its implications and management strategies. While it touches on interconnectedness and decision-making, it does not explicitly address Systems Thinking principles or techniques. The discussion is primarily centred on technical debt rather than a holistic analysis of systems within organisations.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-03-14T17:09:20",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 50.0,
    "ai_depth": 70.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to metrics through the mention of measuring progress and tracking features delivered. However, the primary focus is on technical debt rather than metrics and learning. While there are elements of feedback loops and continuous improvement, they are not explored in depth, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-12T16:52:25",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses technical debt management and its implications on product quality and delivery, without a clear focus on Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T16:52:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of technical debt and its implications on software development, rather than focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T16:52:27",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical debt management and its implications on software delivery, without any mention of AI or automation in Agile practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T16:52:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of technical debt and its implications, without focusing on industry news, updates, or reviews related to Agile or DevOps.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-06T13:27:08",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 50,
    "final_score": 70.0,
    "reasoning": "The content discusses technical debt and its implications on software delivery, referencing the Azure DevOps team's transition to continuous delivery. While it touches on aspects of DevOps, such as the importance of managing technical debt and improving delivery processes, the primary focus is on technical debt itself rather than a comprehensive exploration of DevOps principles or practices. The mention of continuous delivery and feedback loops indicates some alignment with DevOps concepts, but the depth of discussion is limited to technical debt management rather than a broader DevOps context.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-11T17:19:21",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the interplay between technical debt and team dynamics, particularly in the context of the Azure DevOps team's transition to Agile methodologies. It highlights the importance of team collaboration, feedback loops, and a culture of quality, which are all relevant to the 'People and Process' category. However, the primary focus remains on technical debt rather than the human factors or processes themselves, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-06T14:40:31",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses technical debt extensively, providing examples and implications of managing it within software development. While it touches on the importance of addressing technical debt, it lacks a direct focus on specific engineering practices like TDD or CI/CD. The discussion is more about the consequences of technical debt rather than detailed methodologies that enhance technical excellence. Therefore, while it aligns with the category, it does not fully meet the criteria for a primary focus on technical excellence.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T16:52:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management without reference to any specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-06T15:43:00",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 76.0,
    "reasoning": "The content primarily discusses technical debt, which is a significant aspect of code quality and complexity. It explores how technical debt arises from both deliberate and inadvertent decisions in software development, linking it to the overall quality of the codebase. The examples provided, particularly regarding the Azure DevOps team, illustrate the impact of technical debt on software delivery and the importance of managing it effectively. While the discussion is rich in detail and provides insights into the relationship between technical debt and code quality, it does not delve deeply into broader complexity theory concepts or architectural implications, which slightly limits its alignment with the category's core themes.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-03-14T17:08:55",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt and its management, which is tangentially related to Lean principles of continuous improvement and value delivery. However, it lacks direct references to Lean methodologies, tools, or concepts such as waste reduction or value stream mapping. The focus is primarily on technical debt rather than Lean practices, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-07T12:32:40",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses technical debt and its impact on value delivery, particularly in the context of the Azure DevOps team's transition to continuous delivery. It highlights how managing technical debt can enhance the ability to deliver features and value to customers. However, while it touches on value delivery, the primary focus is on technical debt rather than a broader discussion of value delivery strategies and methodologies. The depth of discussion on value delivery principles is moderate, but it lacks comprehensive exploration of key topics such as customer feedback alignment and iterative development.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T16:52:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt management, linking it to Agile practices and continuous delivery, which are specific methodologies.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-03-14T17:09:31",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to organisational resilience through the lens of improving processes and systems. However, it primarily focuses on technical aspects and does not explicitly address broader themes of resilience or change management. The mention of the Azure DevOps team's transition to agile practices hints at adaptability, but the overall discussion lacks depth in exploring organisational strategies or leadership roles in change management.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-14T17:09:10",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its management, which is relevant to Agile and DevOps practices. However, it lacks direct mentions of specific tools or methodologies, focusing more on the concept of technical debt rather than practical techniques or tooling. While it does provide some strategies for managing technical debt, the overall depth and focus on practical application are limited.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T16:52:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content primarily discusses technical debt and its management, which is not directly related to Value Stream Management. While it touches on concepts of efficiency and quality, it lacks a focus on value flow, waste elimination, or alignment with customer outcomes, which are core to Value Stream Management.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-03-14T17:09:07",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on technical debt management within software development, discussing its implications and strategies for addressing it. While it briefly touches on agile practices, such as the transition to a continuous delivery model, the main emphasis is on individual team-level challenges rather than broader organisational agility. The discussion lacks a comprehensive exploration of enterprise-level agility frameworks, leadership roles, or cultural aspects, which are essential for a higher confidence score in this category.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-03-14T17:09:26",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt in the context of software development and mentions the transition to a more agile model, which aligns with business agility principles. However, the primary focus is on technical debt management rather than a comprehensive exploration of business agility itself. While there are relevant points about adapting processes and improving delivery, the depth of discussion on business agility concepts is limited, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-14T17:09:58",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses technical debt, which is relevant to the application lifecycle, particularly in the maintenance and development stages. However, it does not explicitly mention Application Lifecycle Management or its methodologies, practices, and tools. The focus is more on technical debt management rather than a comprehensive view of the entire application lifecycle, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T16:53:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt management and software development practices, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-14T17:09:24",
    "ai_confidence": 42.0,
    "ai_mentions": 3,
    "ai_alignment": 35.0,
    "ai_depth": 45.0,
    "non_ai_confidence": 20,
    "final_score": 40.0,
    "reasoning": "The content discusses technical debt, which is indirectly related to product delivery as it impacts the quality and efficiency of software development. However, the primary focus is on understanding and managing technical debt rather than the end-to-end process of delivering software products. While it touches on aspects like prioritising refactoring and closing feedback loops, it lacks a comprehensive exploration of methodologies and practices specifically tied to product delivery.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-14T17:09:16",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 22,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to learning from past decisions and improving processes. It mentions the importance of feedback loops and adapting practices, aligning with the category's themes. However, the primary focus is on technical debt rather than explicit discovery and learning methodologies, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T16:53:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt management and its implications for software development, without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T16:53:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt management and its implications in software development, lacking personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:00:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software development, without a clear focus on platform engineering or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:00:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its management within development teams, without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T12:00:35",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical debt and its implications in software development, without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T12:00:37",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the impact of technical debt on product delivery and value, which aligns with the Agile Product Operating Model's focus on maximising value delivery in product teams. However, the primary focus is on technical debt rather than the Agile Product Operating Model itself.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:48:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications for development teams, without a clear focus on leadership practices or strategies.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-17T13:48:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications for development teams, without a clear focus on Scrum, Kanban, Lean, or Agile practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:32:45",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses technical debt and its implications in software development, without a clear focus on Internal Developer Platforms or their role in streamlining development processes.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:32:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt in software development without any mention of AI or its integration within Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-14T17:08:41",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses technical debt and its implications for development teams, with no direct mention of Scrum principles, roles, events, or artifacts. While it touches on aspects of team dynamics and continuous improvement, these are not explicitly linked to Scrum practices. The focus is on technical debt management rather than Scrum methodologies, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T15:38:32",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to the Shift-Left Strategy by emphasising the importance of addressing issues early in the development process. However, it does not explicitly mention the Shift-Left concept or focus on integrating testing, security, or compliance earlier in the lifecycle. The discussion on feedback loops and quality aligns somewhat with Shift-Left principles, but the primary focus remains on technical debt rather than a comprehensive Shift-Left approach.",
    "level": "Ignored"
  }
}
