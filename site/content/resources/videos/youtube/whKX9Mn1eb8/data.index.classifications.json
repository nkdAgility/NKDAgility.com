{
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T17:25:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on AI applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-12T17:25:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality engineering and the shift left concept, with no clear emphasis on team collaboration or dynamics.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-12T17:25:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to MVP development or market validation.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-12T17:25:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with only a brief mention of delivering value on a regular cadence, which does not focus on deployment frequency.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-12T17:25:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on throughput or its measurement and optimisation.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T17:25:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, which are not directly related to Scrum Values.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-03-13T15:20:32",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 20,
    "final_score": 63.0,
    "reasoning": "The content discusses the 'shift left' approach in software development, which aligns with Lean principles of early quality assurance and continuous feedback. However, it primarily focuses on quality assurance rather than the broader scope of Lean Product Development, such as waste reduction and customer value. While it touches on some relevant themes, it lacks depth in discussing Lean methodologies and does not explicitly mention Lean principles.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T17:25:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content discusses the concept of 'shift left' in quality assurance but does not specifically address Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-03-13T14:57:15",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the shift-left approach in software development, which includes aspects of quality assurance and the importance of early testing. While it mentions the integration of automated testing, the primary focus is on the broader concept of quality assurance rather than specifically on test automation practices, frameworks, or tools. The discussion lacks detailed exploration of test automation frameworks or metrics, which are crucial for a higher confidence score in this category.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T17:25:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and software development concepts, with no clear focus on Windows operating system topics.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T17:25:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering concepts and practices, with no focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-12T17:25:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to empirical process control principles.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-11T00:17:19",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the concept of 'shift left' in software development, which aligns with pragmatic thinking by emphasising practical problem-solving and the integration of quality assurance early in the development cycle. However, it lacks direct mentions of Agile, Scrum, or DevOps frameworks, and does not provide extensive detail on navigating complexity or real-world applications, which limits its overall depth and alignment with the category.",
    "level": "Tertiary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T17:25:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and software development processes, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of delivering high-quality software and the shift-left approach, which indirectly relates to the concept of Increment in Agile. However, it does not explicitly mention Increments or their significance in Agile frameworks. The focus is more on quality assurance and collaboration rather than the delivery of potentially shippable product increments, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-12T17:25:43",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to the measurement and improvement of innovation capabilities.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-12T17:25:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile, Scrum, or DevOps strategy discussions.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T17:25:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to Agile Planning Tools.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T17:25:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to portfolio management.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T17:25:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, with no clear focus on Scrum Master responsibilities or practices.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content briefly touches on the importance of delivering high-quality products and the concept of 'shift left' in software development, which can indirectly relate to team performance. However, it lacks explicit discussions on team dynamics, collaboration, or Agile methodologies. The focus is more on quality assurance practices rather than strategies for enhancing team effectiveness or collaboration.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T17:25:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile Planning principles.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T17:25:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on forecasting methodologies or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T17:25:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on estimation practices within Agile or Scrum.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-12T17:25:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Evidence-Based Management principles.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T17:25:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept in software development, which are not central to organisational change.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T17:26:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T17:26:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-12T17:26:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on accountability or team dynamics.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses the 'shift left' approach, which is related to quality assurance and early testing in the software development lifecycle. While it touches on aspects that can contribute to Continuous Delivery, such as early involvement of QA and continuous feedback, it does not explicitly focus on Continuous Delivery principles or practices. The discussion lacks depth in terms of Continuous Delivery methodologies, deployment strategies, and the relationship with DevOps, which are crucial for a higher confidence score in this category.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T17:26:05",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T17:26:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to customer satisfaction.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T17:26:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Agile leadership or related practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content briefly mentions the concept of 'shift left', which relates to integrating quality assurance earlier in the development cycle, a principle that can be associated with Continuous Integration. However, it does not explicitly discuss CI practices, tools, or the integration of code changes into a shared repository. The focus is more on quality assurance rather than CI itself, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-12T17:26:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean Principles.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T17:26:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-12T17:26:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile values and principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-03-11T16:06:09",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the shift-left approach, which is closely related to automated testing, particularly in the context of integrating QA early in the development cycle. However, while it mentions the importance of automation, it does not delve deeply into specific automated testing practices, tools, or methodologies. The focus is more on the overall quality assurance process rather than automated testing specifically, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T17:26:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T17:26:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to the Definition of Done.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T17:26:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-10T13:53:23",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the concept of 'shift left' in software development, which aligns with modern engineering practices and the importance of integrating quality assurance early in the development cycle. However, it lacks explicit references to Agile or DevOps methodologies and does not delve deeply into the role of software developers within these frameworks. The focus is more on the general concept of quality assurance rather than specific practices or tools that enhance developer productivity and collaboration.",
    "level": "Secondary"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T17:26:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept without a focus on scaling Agile practices or coordination among multiple teams.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-06T15:43:15",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 32.0,
    "non_ai_confidence": 20,
    "final_score": 76.0,
    "reasoning": "The content explicitly discusses the concept of 'shift left' in the context of software development, which directly relates to quality assurance practices within the software development lifecycle. It aligns well with the core themes of integrating quality early in the development process, a key aspect of methodologies like Agile. However, while it touches on important concepts, the depth of discussion is somewhat limited, focusing primarily on the benefits of this approach without delving into specific methodologies or practices in detail.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T17:26:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no direct relevance to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T17:26:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality engineering, without a clear focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T17:26:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to customer feedback integration.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-12T17:26:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are technical practices rather than strategic discussions related to Agile methodologies.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T17:26:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on collaboration tools or their impact on Agile teams.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T17:26:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-14T15:07:00",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 38.0,
    "ai_depth": 34.0,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the 'shift left' approach in software development, which aligns with operational practices aimed at improving quality assurance and delivery efficiency. It provides detailed insights into early involvement of QA, continuous feedback, and collaboration, all of which are key to enhancing operational efficiency. The depth of discussion on practical steps for implementation further supports its relevance to the category.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-12T17:26:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-07T12:32:53",
    "ai_confidence": 75.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of delivering high-quality, usable software regularly, which aligns with the core themes of working software. It mentions the concept of 'shift left' in quality assurance, indicating a focus on building quality into the software development process. However, while it touches on relevant topics, it lacks detailed exploration of specific practices or metrics related to working software, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T17:26:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, which are not directly related to the Sprint Review process.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-12T17:26:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to Site Reliability Engineering principles.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T17:26:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on psychological safety.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T17:26:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, which does not directly relate to customer retention strategies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T17:26:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean Startup principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T17:26:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T17:26:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a focus on experimentation or hypothesis-driven approaches.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T17:26:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no focus on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-12T17:26:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without specific reference to Azure Pipelines or related CI/CD practices.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-12T17:26:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile Project Management principles or methodologies.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-12T17:26:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean Thinking principles.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T17:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T17:26:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to large scale agility principles or practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T17:26:58",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T17:27:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T17:27:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T17:27:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T17:27:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to product discovery methodologies or understanding customer needs.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of delivering high-quality software regularly, which aligns with the principles of frequent releases. However, it primarily focuses on the 'shift left' concept in quality assurance rather than on the broader practices of continuous delivery or deployment. While it touches on the idea of regular cadence, it lacks detailed exploration of release processes, metrics, or specific strategies for frequent releases.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-12T17:27:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T17:27:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are operational tactics rather than strategic goals.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-12T17:27:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Lead Time or its measurement.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T17:27:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality engineering, which is not directly related to Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-12T17:27:17",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to Scrum principles or practices.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T17:27:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not central to product strategy discussions.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T17:27:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a focus on sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-07T12:47:17",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the concept of 'shift left' in software development, which aligns with the principles of integrating quality assurance early in the development cycle. This reflects a focus on improving code quality and maintainability, which are key aspects of technical mastery. However, the discussion lacks depth and does not cover a broader range of technical practices or methodologies, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T17:27:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on transparency or its importance in Agile processes.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T17:27:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not specific to Scrum Team dynamics or roles.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T17:27:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-12T17:27:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a clear focus on Continuous Learning principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T17:27:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to trend analysis in Agile, DevOps, or business agility.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-12T17:27:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-06T13:27:53",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the concept of 'shift left' in quality assurance, which aligns with the principles of software craftsmanship and quality assurance. It highlights the importance of integrating quality early in the development process, reflecting best practices in coding and testing methodologies. However, while it touches on key themes, the discussion lacks depth and does not extensively cover other aspects of engineering excellence, such as CI/CD practices or technical debt management.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-12T17:27:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on digital transformation or the strategic use of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T17:27:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, which are not directly related to system configuration.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-12T17:27:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on technical debt management or its implications.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T17:27:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to scaling Scrum practices.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T17:27:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no direct relevance to remote working or Agile practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T17:27:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a focus on evidence-based leadership or empirical decision-making.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T17:27:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to deployment strategies.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T17:27:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T17:27:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to scaling agility discussions.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-12T17:27:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on quality engineering and the shift left concept in software development, which are not central to product management discussions.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T17:27:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on organisational culture or its influence on agility and transformation.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-12T17:27:49",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to version control practices.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T17:27:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T17:27:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-12T17:27:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T17:27:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T17:27:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a clear focus on release management processes or practices.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T17:27:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and software development practices, which are not central to the entrepreneurial process.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-12T17:27:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to technical leadership principles or agile methodologies.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T17:27:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to troubleshooting or the identification and resolution of technical issues.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-12T17:28:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, which are not central to change management principles or practices.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-10T11:36:12",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the concept of 'shift left', which aligns with the principles of integrating quality assurance early in the development process, a key aspect of Agile engineering practices. However, it lacks explicit mentions of other core topics such as clean code, TDD, or CI/CD. The discussion is somewhat superficial, focusing primarily on the benefits of early quality assurance without delving into specific methodologies or practices that would enhance the depth of the discussion.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T17:28:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, without a clear focus on Agile frameworks or their principles.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content briefly mentions the concept of 'shift left', which aligns with the idea of integrating quality early in the development process, a principle related to Test First Development. However, it does not explicitly discuss Test-Driven Development (TDD) or the specific practices of writing tests before code. The discussion lacks depth and detail on the principles, benefits, and tools associated with Test First Development, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T17:28:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, which are not central to Scrum principles or practices.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-12T17:24:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept without specific reference to Azure DevOps services or practices.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T17:24:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T17:24:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept in software development, with no focus on decision-making processes or uncertainty.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-12T17:24:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly focused on optimising work throughput or flow efficiency.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-12T17:24:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to market adaptability strategies or practices.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-12T17:24:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T17:24:32",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on transparency or accountability.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-12T17:24:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to organisational agility.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T17:24:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a focus on Systems Thinking principles or interconnectedness.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-12T17:24:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a clear focus on metrics, data utilisation, or learning mechanisms.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-12T17:24:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T17:24:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses quality engineering concepts and the shift left approach, which are not directly related to installation and configuration processes.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T17:24:40",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to AI and automation in Agile practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T17:24:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality engineering without focusing on news, updates, or reviews related to Agile or DevOps.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-21T10:40:14",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the 'shift left' approach, which aligns with DevOps principles by emphasising early quality assurance, continuous feedback, and collaboration among teams. It provides a detailed exploration of how integrating QA early can enhance software delivery, reflecting core DevOps themes. However, while it touches on DevOps concepts, it primarily focuses on quality assurance rather than a broader DevOps philosophy, which slightly limits its classification strength.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-12T17:24:51",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering concepts and the shift left approach, with minimal focus on team dynamics or human factors.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-06T13:27:56",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the concept of 'shift left' in software development, which aligns with the principles of integrating quality assurance early in the development cycle. This is relevant to Technical Excellence as it touches on enhancing code quality and reliability. However, the discussion lacks depth and does not explicitly mention other key topics such as TDD, CI/CD, or modular architecture, which are crucial for a higher confidence score. The focus is primarily on the concept of shift left, making it a secondary rather than a primary focus on Technical Excellence.",
    "level": "Tertiary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T17:24:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering concepts and practices without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses the 'shift left' approach in software development, which relates to quality assurance and its integration into the development process. While it touches on aspects of code quality and the importance of early involvement of QA, it does not delve deeply into the complexities of software architecture or the theoretical underpinnings of complexity theory. The primary focus is on practical implementation rather than a thorough exploration of the interplay between code quality and complexity, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-12T17:24:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean methodologies.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-06T14:41:30",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of delivering a high-quality product regularly, which aligns with the principles of iterative development and continuous delivery. The mention of 'shift left' indicates a focus on integrating quality assurance early in the development process, which is relevant to value delivery. However, the discussion lacks depth in exploring specific strategies or methodologies related to value management, limiting its overall alignment with the category.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T17:24:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of shift left in quality engineering, which is directly related to Agile and DevOps principles.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-12T17:25:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, with no clear focus on organisational resilience or change management.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-13T16:20:39",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 76.0,
    "reasoning": "The content extensively discusses the 'shift left' approach in quality assurance, which is a practical technique that aligns with Agile and DevOps methodologies. It provides a clear overview of how to implement this technique, including early involvement of QA, continuous feedback, and collaboration, which are all key aspects of tooling and methodologies in software development. The depth of discussion is significant, with practical recommendations for implementation, making it a strong fit for the category.",
    "level": "Secondary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T17:25:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T17:25:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Value Stream Management.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-12T17:25:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on enterprise agility or its broader implications.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-12T17:25:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to business agility principles or practices.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-03-14T14:47:16",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the 'shift left' approach in software development, which relates to quality assurance and early involvement in the development cycle. However, it does not explicitly mention the broader aspects of Application Lifecycle Management, such as deployment, maintenance, or retirement stages. While it touches on some principles that align with ALM, such as collaboration and continuous feedback, the focus remains primarily on quality assurance rather than the entire lifecycle of applications.",
    "level": "Tertiary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T17:25:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and software development practices, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-11T14:17:12",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 10,
    "final_score": 79.0,
    "reasoning": "The content extensively discusses the shift-left approach in quality assurance, which is a critical aspect of product delivery. It directly addresses methodologies for integrating quality early in the development process, emphasising collaboration, continuous feedback, and the benefits of improved quality and faster delivery. The depth of discussion includes practical recommendations for implementation, aligning well with the core themes of product delivery. Overall, the content is highly relevant and provides substantial insights into enhancing product delivery through quality assurance practices.",
    "level": "Secondary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-12T17:25:15",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a clear focus on discovery or learning processes.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T17:25:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept in software development, without a focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T17:25:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality engineering without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:01:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality assurance, which is not directly related to platform engineering or internal developer platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:01:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'shift left' in software development and quality assurance, which is not directly related to the principles of BetaCodex or its focus on decentralised and human-centric organisational design.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T12:01:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of 'shift left' in quality assurance, which is not directly related to the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-03-21T10:40:16",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the shift-left approach in software development, which is related to quality assurance and team collaboration. However, it does not explicitly mention the Agile Product Operating Model or its core principles. While there are elements of agile practices and continuous improvement, the primary focus is on quality assurance rather than the broader framework of APOM. Therefore, the confidence score reflects a low direct mention but some conceptual alignment with agile principles.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:48:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'shift left' in software development and quality assurance, without a clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T17:45:26",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the shift-left approach in software development, which includes elements of collaboration and team dynamics, particularly in the context of quality assurance. While it touches on collaboration and continuous improvement, the primary focus is on technical practices rather than the broader social frameworks of social technologies. The mention of enhanced collaboration and team morale indicates some alignment with social technologies, but the depth of discussion primarily revolves around technical implementation rather than the underlying social methodologies.",
    "level": "Tertiary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of shift left in quality assurance, which is not directly related to Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'shift left' in quality assurance within software development, without a clear focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-14T17:12:04",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content briefly touches on the importance of delivering a high-quality product regularly, which aligns with Scrum's emphasis on delivering working software frequently. However, it primarily focuses on the concept of 'shift left' in quality assurance, which is not a Scrum-specific principle. There are no direct mentions of Scrum roles, events, or artifacts, and the discussion lacks depth regarding Scrum practices or frameworks.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T15:38:50",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 38,
    "ai_depth": 36,
    "non_ai_confidence": 20,
    "final_score": 85.0,
    "reasoning": "The content explicitly discusses the Shift-Left Strategy, detailing its principles, benefits, and practical recommendations for implementation. It provides a thorough exploration of how integrating quality assurance early in the development process enhances software quality and delivery speed, aligning closely with the core themes of the category. The depth of discussion is significant, with personal experiences and actionable steps included, demonstrating a strong commitment to the Shift-Left approach.",
    "level": "Primary"
  }
}
