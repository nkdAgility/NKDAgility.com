{
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-12T17:25:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality engineering and the shift left concept, with no clear emphasis on team collaboration or dynamics.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "category": "MVP",
    "calculated_at": "2025-02-12T17:25:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to MVP development or market validation.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-12T17:25:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with only a brief mention of delivering value on a regular cadence, which does not focus on deployment frequency.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T13:37:35",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content discusses the shift-left approach in software development, focusing on quality assurance and early integration rather than explicitly addressing throughput as a delivery metric. While it mentions faster delivery and improved quality, it does not provide a clear analysis or visualisation of throughput, nor does it delve into the measurement of work items completed over time. The primary focus is on quality and collaboration rather than throughput metrics.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T17:25:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, which are not directly related to Scrum Values.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 20,
    "final_score": 68.0,
    "reasoning": "The content discusses the 'shift left' approach in software development, which aligns with Lean principles of early quality assurance and continuous feedback. However, it primarily focuses on quality assurance rather than the broader scope of Lean Product Development, such as waste reduction and customer value. While it touches on some relevant themes, it lacks depth in discussing Lean methodologies and does not explicitly mention Lean principles.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content discusses the concept of 'shift left' in quality assurance but does not specifically address Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the shift-left approach in software development, which includes aspects of quality assurance and the importance of early testing. While it mentions the integration of automated testing, the primary focus is on the broader concept of quality assurance rather than specifically on test automation practices, frameworks, or tools. The discussion lacks detailed exploration of test automation frameworks or metrics, which are crucial for a higher confidence score in this category.",
    "level": "Secondary"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T17:25:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and software development concepts, with no clear focus on Windows operating system topics.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T17:25:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering concepts and practices, with no focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-12T17:25:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to empirical process control principles.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the concept of 'shift left' in software development, which aligns with pragmatic thinking by emphasising practical problem-solving and the integration of quality assurance early in the development cycle. However, it lacks direct mentions of Agile, Scrum, or DevOps frameworks, and does not provide extensive detail on navigating complexity or real-world applications, which limits its overall depth and alignment with the category.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T17:25:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and software development processes, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of delivering high-quality software and the shift-left approach, which indirectly relates to the concept of Increment in Agile. However, it does not explicitly mention Increments or their significance in Agile frameworks. The focus is more on quality assurance and collaboration rather than the delivery of potentially shippable product increments, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T17:02:04",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the shift-left approach in software development, which indirectly relates to innovation by promoting early quality assurance and collaboration. However, it primarily focuses on quality improvement and efficiency rather than explicitly addressing innovation mechanisms or metrics. The mention of benefits like improved quality and faster delivery hints at innovative practices but lacks depth in discussing innovation as a primary focus.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-12T17:25:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile, Scrum, or DevOps strategy discussions.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T17:25:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to Agile Planning Tools.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T17:25:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to portfolio management.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on the shift-left approach in software development and quality assurance, with no direct mention of the Scrum Master role or its responsibilities. While it touches on collaboration and team dynamics, it does not align with the core themes of the Scrum Master category, such as facilitating Scrum processes or promoting agile principles. The discussion lacks depth regarding the specific impact of a Scrum Master, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content briefly touches on the importance of delivering high-quality products and the concept of 'shift left' in software development, which can indirectly relate to team performance. However, it lacks explicit discussions on team dynamics, collaboration, or Agile methodologies. The focus is more on quality assurance practices rather than strategies for enhancing team effectiveness or collaboration.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T17:25:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile Planning principles.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T17:25:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on forecasting methodologies or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T17:25:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on estimation practices within Agile or Scrum.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the shift-left approach in software development, focusing on quality assurance and team collaboration. While it touches on aspects of improving outcomes and efficiency, it does not explicitly mention Evidence-Based Management or its key topics. The discussion is more centred on Agile practices rather than empirical decision-making or metrics that align with EBM.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T17:25:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept in software development, which are not central to organisational change.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T17:26:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T17:26:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-12T17:26:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on accountability or team dynamics.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the shift-left approach, which aligns with Continuous Delivery principles by emphasising early quality assurance and continuous feedback. However, it does not explicitly mention Continuous Delivery or its specific practices, leading to a moderate confidence score. The depth of discussion on benefits and implementation strategies contributes positively, but the primary focus remains on the shift-left concept rather than Continuous Delivery itself.",
    "level": "Secondary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T17:26:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to customer satisfaction.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T17:26:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Agile leadership or related practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content briefly mentions the concept of 'shift left', which relates to integrating quality assurance earlier in the development cycle, a principle that can be associated with Continuous Integration. However, it does not explicitly discuss CI practices, tools, or the integration of code changes into a shared repository. The focus is more on quality assurance rather than CI itself, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-12T17:26:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean Principles.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T17:26:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile values and principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift-left approach, which is closely related to automated testing, particularly in the context of integrating QA early in the development cycle. However, while it mentions the importance of automation, it does not delve deeply into specific automated testing practices, tools, or methodologies. The focus is more on the overall quality assurance process rather than automated testing specifically, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to the Definition of Done.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 32.0,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content explicitly discusses the concept of 'shift left' in the context of software development, which directly relates to quality assurance practices within the software development lifecycle. It aligns well with the core themes of integrating quality early in the development process, a key aspect of methodologies like Agile. However, while it touches on important concepts, the depth of discussion is somewhat limited, focusing primarily on the benefits of this approach without delving into specific methodologies or practices in detail.",
    "level": "Primary"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T17:26:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no direct relevance to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality engineering, without a clear focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T17:26:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to customer feedback integration.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-12T17:26:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are technical practices rather than strategic discussions related to Agile methodologies.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T17:26:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on collaboration tools or their impact on Agile teams.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T17:26:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 38.0,
    "ai_depth": 34.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the 'shift left' approach in software development, which aligns with operational practices aimed at improving quality assurance and delivery efficiency. It provides detailed insights into early involvement of QA, continuous feedback, and collaboration, all of which are key to enhancing operational efficiency. The depth of discussion on practical steps for implementation further supports its relevance to the category.",
    "level": "Primary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-12T17:26:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 75.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 75.0,
    "reasoning": "The content discusses the importance of delivering high-quality, usable software regularly, which aligns with the core themes of working software. It mentions the concept of 'shift left' in quality assurance, indicating a focus on building quality into the software development process. However, while it touches on relevant topics, it lacks detailed exploration of specific practices or metrics related to working software, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T17:26:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, which are not directly related to the Sprint Review process.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to Site Reliability Engineering principles.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T17:26:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on psychological safety.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T17:26:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, which does not directly relate to customer retention strategies.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T17:26:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean Startup principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T17:26:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a focus on experimentation or hypothesis-driven approaches.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T17:26:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no focus on revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-12T17:26:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without specific reference to Azure Pipelines or related CI/CD practices.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-12T17:26:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean Thinking principles.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T17:26:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to large scale agility principles or practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T17:27:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on team motivation or dynamics.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T17:27:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to product discovery methodologies or understanding customer needs.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the importance of delivering high-quality software regularly, which aligns with the principles of frequent releases. However, it primarily focuses on the 'shift left' concept in quality assurance rather than on the broader practices of continuous delivery or deployment. While it touches on the idea of regular cadence, it lacks detailed exploration of release processes, metrics, or specific strategies for frequent releases.",
    "level": "Tertiary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-12T17:27:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T17:27:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are operational tactics rather than strategic goals.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-11T08:57:12",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses the shift-left approach in software development, which indirectly relates to Lead Time by emphasising faster delivery and improved quality. However, it does not explicitly mention Lead Time or provide a detailed exploration of it as a metric. The focus is more on quality assurance and collaboration rather than on measuring or optimising Lead Time specifically.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality engineering, which is not directly related to Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not central to product strategy discussions.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T17:27:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a focus on sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the concept of 'shift left' in software development, which aligns with the principles of integrating quality assurance early in the development cycle. This reflects a focus on improving code quality and maintainability, which are key aspects of technical mastery. However, the discussion lacks depth and does not cover a broader range of technical practices or methodologies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T17:27:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no clear focus on transparency or its importance in Agile processes.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T17:27:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not specific to Scrum Team dynamics or roles.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T17:27:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-12T17:27:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a clear focus on Continuous Learning principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T17:27:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to trend analysis in Agile, DevOps, or business agility.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of 'shift left' in quality assurance, which aligns with the principles of software craftsmanship and quality assurance. It highlights the importance of integrating quality early in the development process, reflecting best practices in coding and testing methodologies. However, while it touches on key themes, the discussion lacks depth and does not extensively cover other aspects of engineering excellence, such as CI/CD practices or technical debt management.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-12T17:27:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on digital transformation or the strategic use of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-04-10T13:37:29",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on the shift-left approach in software development and quality assurance, which does not directly relate to system configuration. While it touches on aspects of integration and collaboration, it lacks explicit discussions on configuration management tools, system optimisation, or maintenance practices. The overall emphasis is on software development methodologies rather than system configuration.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-12T17:27:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on technical debt management or its implications.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, with no direct relevance to remote working or Agile practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T17:27:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a focus on evidence-based leadership or empirical decision-making.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T17:27:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to deployment strategies.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T17:27:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on quality engineering and the shift left concept in software development, which are not central to product management discussions.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T17:27:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on organisational culture or its influence on agility and transformation.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to version control practices.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T17:27:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T17:27:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on organisational dynamics or systems thinking.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept, which are not directly related to validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T17:27:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a clear focus on release management processes or practices.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T17:27:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and software development practices, which are not central to the entrepreneurial process.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-12T17:27:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to technical leadership principles or agile methodologies.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T17:27:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to troubleshooting or the identification and resolution of technical issues.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-12T17:28:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, which are not central to change management principles or practices.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of 'shift left', which aligns with the principles of integrating quality assurance early in the development process, a key aspect of Agile engineering practices. However, it lacks explicit mentions of other core topics such as clean code, TDD, or CI/CD. The discussion is somewhat superficial, focusing primarily on the benefits of early quality assurance without delving into specific methodologies or practices that would enhance the depth of the discussion.",
    "level": "Secondary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T17:28:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, without a clear focus on Agile frameworks or their principles.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content discusses the 'shift left' approach, which aligns with some principles of Test First Development, such as early QA involvement and continuous feedback. However, it does not explicitly mention Test First Development or its specific practices like TDD or ATDD. The focus is more on quality assurance rather than the detailed methodologies of Test First Development, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T17:28:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the concept of shift left, which are not central to Scrum principles or practices.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-12T17:24:22",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept without specific reference to Azure DevOps services or practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T17:24:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept in software development, with no focus on decision-making processes or uncertainty.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-12T17:24:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly focused on optimising work throughput or flow efficiency.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-12T17:24:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to market adaptability strategies or practices.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-12T17:24:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-12T17:24:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to organisational agility.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T17:24:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a focus on Systems Thinking principles or interconnectedness.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, without a clear focus on metrics, data utilisation, or learning mechanisms.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not directly related to Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering concepts and the shift left approach, which are not directly related to installation and configuration processes.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the 'shift left' approach, which aligns with DevOps principles by emphasising early quality assurance, continuous feedback, and collaboration among teams. It provides a detailed exploration of how integrating QA early can enhance software delivery, reflecting core DevOps themes. However, while it touches on DevOps concepts, it primarily focuses on quality assurance rather than a broader DevOps philosophy, which slightly limits its classification strength.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the concept of 'shift left' in software development, which aligns with the principles of integrating quality assurance early in the development cycle. This is relevant to Technical Excellence as it touches on enhancing code quality and reliability. However, the discussion lacks depth and does not explicitly mention other key topics such as TDD, CI/CD, or modular architecture, which are crucial for a higher confidence score. The focus is primarily on the concept of shift left, making it a secondary rather than a primary focus on Technical Excellence.",
    "level": "Secondary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-12T17:24:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Lean methodologies.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of delivering a high-quality product regularly, which aligns with the principles of iterative development and continuous delivery. The mention of 'shift left' indicates a focus on integrating quality assurance early in the development process, which is relevant to value delivery. However, the discussion lacks depth in exploring specific strategies or methodologies related to value management, limiting its overall alignment with the category.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T17:24:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of shift left in quality engineering, which is directly related to Agile and DevOps principles.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T17:25:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T17:25:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to Value Stream Management.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-12T17:25:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept in software development, without a clear focus on enterprise agility or its broader implications.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-12T17:25:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses quality engineering and the shift left concept, which are not central to business agility principles or practices.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the 'shift left' approach in software development, which relates to quality assurance and early involvement in the development cycle. However, it does not explicitly mention the broader aspects of Application Lifecycle Management, such as deployment, maintenance, or retirement stages. While it touches on some principles that align with ALM, such as collaboration and continuous feedback, the focus remains primarily on quality assurance rather than the entire lifecycle of applications.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T17:25:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and software development practices, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the shift-left approach in quality assurance, which is a critical aspect of product delivery. It directly addresses methodologies for integrating quality early in the development process, emphasising collaboration, continuous feedback, and the benefits of improved quality and faster delivery. The depth of discussion includes practical recommendations for implementation, aligning well with the core themes of product delivery. Overall, the content is highly relevant and provides substantial insights into enhancing product delivery through quality assurance practices.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T17:25:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses quality engineering and the shift left concept in software development, without a focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T17:25:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality engineering without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of shift left in quality assurance, which is not directly related to platform engineering or internal developer platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:01:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'shift left' in software development and quality assurance, which is not directly related to the principles of BetaCodex or its focus on decentralised and human-centric organisational design.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the shift-left approach in software development, which is related to quality assurance and team collaboration. However, it does not explicitly mention the Agile Product Operating Model or its core principles. While there are elements of agile practices and continuous improvement, the primary focus is on quality assurance rather than the broader framework of APOM. Therefore, the confidence score reflects a low direct mention but some conceptual alignment with agile principles.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:48:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'shift left' in software development and quality assurance, without a clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the shift-left approach in software development, which includes elements of collaboration and team dynamics, particularly in the context of quality assurance. While it touches on collaboration and continuous improvement, the primary focus is on technical practices rather than the broader social frameworks of social technologies. The mention of enhanced collaboration and team morale indicates some alignment with social technologies, but the depth of discussion primarily revolves around technical implementation rather than the underlying social methodologies.",
    "level": "Secondary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of shift left in quality assurance, which is not directly related to Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'shift left' in quality assurance within software development, without a clear focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content briefly touches on the importance of delivering a high-quality product regularly, which aligns with Scrum's emphasis on delivering working software frequently. However, it primarily focuses on the concept of 'shift left' in quality assurance, which is not a Scrum-specific principle. There are no direct mentions of Scrum roles, events, or artifacts, and the discussion lacks depth regarding Scrum practices or frameworks.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 38,
    "ai_depth": 36,
    "non_ai_confidence": 20,
    "final_score": 92.0,
    "reasoning": "The content explicitly discusses the Shift-Left Strategy, detailing its principles, benefits, and practical recommendations for implementation. It provides a thorough exploration of how integrating quality assurance early in the development process enhances software quality and delivery speed, aligning closely with the core themes of the category. The depth of discussion is significant, with personal experiences and actionable steps included, demonstrating a strong commitment to the Shift-Left approach.",
    "level": "Primary"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift-left approach in software development, which aligns with Continuous Improvement principles by emphasising early quality assurance, continuous feedback, and collaboration. However, while it touches on aspects of Continuous Improvement, such as proactive problem-solving and iterative processes, it primarily focuses on the shift-left methodology rather than a broader discussion of Continuous Improvement as a whole. The depth of discussion on Continuous Improvement concepts is limited, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 65.0,
    "ai_depth": 55.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses the shift-left approach in software development, which indirectly relates to common goals through enhanced collaboration and alignment among team members. While it mentions the importance of shared understanding and teamwork, the primary focus is on quality assurance rather than explicitly addressing common goals within Agile or DevOps frameworks. The depth of discussion on common goals is moderate, as it touches on collaboration but lacks a thorough exploration of strategic alignment or frameworks like OKRs.",
    "level": "Secondary"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 68.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 65.0,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the shift-left approach in software development, which aligns with the principles of competence by emphasising early quality assurance, continuous feedback, and collaboration. It highlights the importance of integrating QA early to improve quality and build trust, which are key aspects of competence. However, while it touches on these themes, the primary focus is on the shift-left methodology rather than a deep exploration of competence itself, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses the 'shift-left' approach in quality assurance, which, while relevant to software development, does not explicitly mention or focus on the One Engineering System (1ES). The principles of early QA integration and collaboration are touched upon, but they do not align closely with the core themes of 1ES, such as standardisation and integration across teams. The depth of discussion is limited to the shift-left methodology without connecting it to the broader framework of 1ES.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T13:36:57",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the shift-left approach in software development, which promotes proactive quality assurance and collaboration. However, it does not explicitly mention Agentic Agility or its principles. While there are elements of autonomy and adaptability in the shift-left methodology, the focus is primarily on quality assurance rather than the intentional shaping of outcomes through agency. The discussion lacks depth in exploring the distinctions between human and AI capabilities in this context.",
    "level": "Ignored"
  },
  "Product Development": {
    "category": "Product Development",
    "calculated_at": "2025-04-10T13:37:01",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the shift-left approach in software development, which aligns closely with product development methodologies. It highlights the importance of early QA integration, continuous feedback, and cross-functional collaboration, all of which are key themes in product development. The depth of discussion is significant, providing practical recommendations and personal experiences that reinforce the principles of iterative learning and continuous improvement. Overall, the content is highly relevant to the category.",
    "level": "Primary"
  },
  "Time to Market": {
    "category": "Time to Market",
    "calculated_at": "2025-04-10T17:01:57",
    "ai_confidence": 68.0,
    "ai_mentions": 2,
    "ai_alignment": 30,
    "ai_depth": 36,
    "non_ai_confidence": 20,
    "final_score": 68.0,
    "reasoning": "The content discusses the shift-left approach in software development, which indirectly relates to Time to Market by emphasising faster delivery and improved quality. While it mentions benefits like faster delivery and cost efficiency, it does not explicitly focus on Time to Market metrics or strategies for optimisation. The discussion is primarily centred on quality assurance rather than the broader concept of delivering value quickly, which is essential for a higher confidence score in this category.",
    "level": "Secondary"
  },
  "Project Management": {
    "category": "Project Management",
    "calculated_at": "2025-04-10T13:37:07",
    "ai_confidence": 42.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 22,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content discusses the shift-left approach in software development, which relates to project management principles, particularly in terms of quality assurance and team collaboration. However, it primarily focuses on software engineering practices rather than broader project management methodologies or lifecycle phases. While it mentions aspects like early involvement and continuous feedback, it lacks a comprehensive exploration of project management tools, roles, or governance structures, which are essential for a higher confidence score in this category.",
    "level": "Tertiary"
  },
  "Unrealised Value": {
    "category": "Unrealised Value",
    "calculated_at": "2025-04-10T17:02:16",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses the shift-left approach in software development, focusing on quality assurance and its benefits. While it touches on concepts like improved quality and faster delivery, which could relate to unrealised value, it does not explicitly mention unrealised value or its indicators. The discussion is more about operational improvements rather than exploring untapped opportunities or potential value within the context of Evidence-Based Management.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "category": "Hybrid Agile",
    "calculated_at": "2025-04-10T13:37:15",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on the shift-left approach in software development and quality assurance, with no direct mention of Hybrid Agile or its challenges. While it discusses collaboration and early integration of QA, it does not critically examine the merging of traditional and agile methodologies, nor does it address the pitfalls associated with Hybrid Agile. Therefore, the content does not align with the core themes of the Hybrid Agile category.",
    "level": "Ignored"
  },
  "Current Value": {
    "category": "Current Value",
    "calculated_at": "2025-04-10T17:02:19",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the shift-left approach in software development, focusing on quality assurance and its benefits. While it touches on aspects of value delivery, such as improved quality and faster delivery, it does not explicitly mention Current Value or provide metrics related to customer satisfaction or revenue impact. The discussion is more about process improvement rather than a real-time assessment of value delivered, which is central to the Current Value category. Therefore, the confidence score reflects a low alignment with the core themes of Current Value.",
    "level": "Ignored"
  },
  "Scaling": {
    "category": "Scaling",
    "calculated_at": "2025-04-10T13:37:22",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses the 'shift left' approach in software development, focusing on quality assurance and team collaboration. While it touches on aspects of collaboration and early involvement, it does not explicitly address scaling methodologies or frameworks, nor does it delve into the complexities of coordinating multiple teams or managing dependencies at scale. Therefore, it aligns only partially with the core themes of the Scaling category.",
    "level": "Ignored"
  },
  "GitHub": {
    "category": "GitHub",
    "calculated_at": "2025-04-10T13:37:24",
    "ai_confidence": 12.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses the shift-left approach in software development and quality assurance, which is a general software engineering topic. While it touches on collaboration and team dynamics, it does not specifically mention GitHub or its functionalities, nor does it provide insights into GitHub services, tools, or best practices. Therefore, it does not align well with the GitHub category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "category": "Agnostic Agile",
    "calculated_at": "2025-04-10T17:02:01",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content discusses the shift-left approach in software development, focusing on quality assurance and collaboration. However, it does not explicitly mention Agnostic Agile or its principles. While there are elements of agility and value delivery, the primary focus is on a specific methodology rather than a broader discussion of Agnostic Agile principles. The depth of discussion on the shift-left approach is significant, but it lacks direct ties to the Agnostic Agile philosophy.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "category": "Company as a Product",
    "calculated_at": "2025-04-10T17:02:08",
    "ai_confidence": 32.0,
    "ai_mentions": 100.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content discusses the shift-left approach in software development, which focuses on integrating quality assurance early in the development cycle. While it touches on collaboration and continuous feedback, which are relevant to the CaaP concept, it primarily centres on software development practices rather than treating the organisation itself as a product. The mention of cross-functional collaboration is present, but the overall focus remains on quality assurance rather than broader organisational strategies or customer-centric approaches. Therefore, while there are elements that align with CaaP, they are not the primary focus of the content.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "category": "Cell Structure Design",
    "calculated_at": "2025-04-10T17:02:13",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses the shift-left approach in software development, focusing on quality assurance and team collaboration. It does not directly mention or align with the principles of Cell Structure Design, nor does it explore the characteristics of autonomous cells or decentralised structures. The discussion is centred around traditional software development practices rather than the decentralised, network-based organisational model described in the Cell Structure Design category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "category": "Liberating Structures",
    "calculated_at": "2025-04-10T17:01:54",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on the shift-left approach in software development and quality assurance, which does not directly relate to Liberating Structures. While it mentions collaboration and team dynamics, it lacks explicit references to Liberating Structures techniques or principles. The discussion is more aligned with traditional software development practices rather than the facilitation techniques that enhance participation and creativity in groups.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "category": "Open Space Agile",
    "calculated_at": "2025-04-10T17:02:22",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on the 'shift left' approach in software development and quality assurance, which is not directly related to Open Space Agile principles. While it discusses collaboration and early involvement of QA, it does not explicitly mention Open Space Agile or its core themes such as psychological safety, co-creation, or iterative dialogue. The discussion lacks depth regarding Open Space Agile methodologies, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Principle",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 78.0,
    "ai_mentions": 4,
    "ai_alignment": 85.0,
    "ai_depth": 70.0,
    "non_ai_confidence": null,
    "final_score": 78.0,
    "reasoning": "The content discusses the 'shift-left' approach, which emphasizes proactive quality assurance and early involvement of QA in the software development process. This aligns well with the principles of Continuous Improvement and Value Delivery by promoting early quality interventions that lead to a more refined product. Direct mentions of the importance of building quality from the start and enhancing collaboration among team members bolster the principle-focused nature of the content. Furthermore, the article provides detailed recommendations for implementing this principle, demonstrating a depth of discussion that supports its alignment with actionable principles rather than vague philosophies.",
    "level": "Secondary"
  },
  "Tool": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Tool",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 55.0,
    "ai_mentions": 2,
    "ai_alignment": 60.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 55.0,
    "reasoning": "The content discusses the 'shift-left' approach, which is more focused on a methodology than specific tools. It briefly mentions practices such as integrating QA and fostering collaboration but lacks in-depth discussion about specific tools or their functionalities, which are essential in the 'Tool' category. There are some tool-related recommendations (like embracing automation), but the content primarily emphasizes methodologies in software development.",
    "level": "Tertiary"
  },
  "Values": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Values",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 42.0,
    "ai_mentions": 100.0,
    "ai_alignment": 40.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 42.0,
    "reasoning": "The content primarily discusses the 'shift left' approach and its benefits for quality assurance and team collaboration. While it touches on the themes of collaboration and engagement, which are tied to values, it lacks a focused exploration of specific values such as Agile or Scrum Values. The discussion does mention the importance of empowering teams and fostering collaboration, but it does not delve deeply into underlying beliefs that guide these practices. Thus, while there is some alignment to the category, especially related to collaboration and ethical decision-making in software quality, it does not explicitly center on values themselves as foundational elements, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Philosophy": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Philosophy",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 25.0,
    "ai_mentions": 5,
    "ai_alignment": 20,
    "ai_depth": 15,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content discusses the shift-left approach in software development, focusing on quality assurance and team collaboration. While it emphasizes the proactive mindset and improves outcomes—which could touch on philosophical aspects—the primary focus remains on practices, benefits, and recommendations rather than a philosophical exploration of foundational beliefs guiding methodologies such as Agile or DevOps. The mention of personal experience further pulls it away from a philosophical discussion. Overall, this content does not delve deeply into the principles behind these practices, leading to a low confidence score in the Philosophy category.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Discipline",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 47.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 97.0,
    "non_ai_confidence": null,
    "final_score": 47.0,
    "reasoning": "The content mainly discusses the 'shift left' approach in software development, focusing on quality assurance practices rather than the underlying principles or frameworks of a discipline. While it does show some conceptual alignment with discipline through highlighting quality, collaboration, and continuous improvement, it lacks explicit discussion of formal methodologies or the evolution of disciplines like Agile or DevOps. It primarily revolves around practical strategies and personal experiences, which keeps it from deeply engaging with the core themes of the 'Discipline' category.",
    "level": "Tertiary"
  },
  "Artifact": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Artifact",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 20.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 0.0,
    "non_ai_confidence": null,
    "final_score": 20.0,
    "reasoning": "The content discusses the 'shift left' approach in software development and quality assurance, focusing on early QA involvement and improving collaboration. However, it does not explicitly mention or explore any Agile, Scrum, or Lean artifacts, such as Product Backlogs or Definitions of Done. Instead, it emphasizes principles and benefits of quality assurance without tying these concepts to specific artifacts. This results in a low confidence score for alignment with the 'Artifact' category.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Observability",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 25.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 5,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "While the content discusses quality assurance and collaboration in the software development lifecycle, it primarily focuses on the 'shift left' approach, which emphasizes early integration of QA practices rather than directly addressing observability. Observability is not explicitly mentioned or explored, and the content does not elaborate on metrics, logs, or traces in relation to observability. Instead, it emphasizes quality assurance processes, which are somewhat related but do not align directly with observability principles.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Practice",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 85.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 85.0,
    "reasoning": "The content discusses the shift-left approach to quality assurance, focusing on integrating QA practices early in the development process. It outlines actionable techniques for improving collaboration, continuous feedback, and training team members, which align closely with the category of Practice. The article provides specific recommendations to implement these techniques effectively, indicating a strong understanding of how practices can enhance team performance and value delivery. The primary focus of the content is on the practical application of the shift-left strategy, making it highly relevant to the Practice category.",
    "level": "Primary"
  },
  "Method": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Method",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": null,
    "final_score": 78.0,
    "reasoning": "The content extensively discusses the shift-left approach in quality assurance, outlining structured procedures such as early involvement of QA, continuous feedback, and collaboration among team members. It provides specific recommendations for implementing the shift-left strategy, demonstrating a methodical approach. However, while it aligns closely with the 'Method' category, it leans slightly towards a general discussion rather than strictly outlining a step-by-step method, preventing a higher score.",
    "level": "Secondary"
  },
  "Model": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Model",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 35.0,
    "ai_mentions": 2,
    "ai_alignment": 40.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 35.0,
    "reasoning": "The content discusses the shift-left approach primarily in the context of quality assurance and software development. While it mentions a methodology that impacts decision-making and team dynamics, it does not explicitly frame this within the context of established models or frameworks such as DevOps, Lean, or Agile concepts. The references to early QA integration could be seen as an application of a conceptual model, but the piece lacks a thorough exploration of broader systemic implications or clear ties to recognized models within the Agile, DevOps, or Lean philosophies. Hence, while there is some relevant discussion, it does not fully align with the Model category focus.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Framework",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 25.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 10,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content discusses the shift-left approach, which relates to quality assurance in software development but does not delve into the structured methodologies and frameworks like Agile, DevOps, or Lean that the category specifically requires. While it mentions concepts like collaboration and continuous feedback that could imply a framework, it does not explicitly connect to Agile or any specific framework methodologies. The depth of discussion focuses more on personal experience and benefits rather than providing a structured analysis or implementation strategy typical of the Framework category.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Tenet",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 36.0,
    "ai_mentions": 2,
    "ai_alignment": 40.0,
    "ai_depth": 30.0,
    "non_ai_confidence": null,
    "final_score": 36.0,
    "reasoning": "The content discusses the 'shift left' approach, which aligns with the concept of integrating quality assurance early in the development process. It provides some actionable recommendations, such as involving QA early and fostering collaboration, which resonate with the principles of continuous improvement and evidence-based practices. However, the overall focus on personal experience and the concept of 'shift left' as a general strategy rather than a specific tenet diminishes its alignment with the category. The depth of discussion varies, lacking thorough exploration of how these actions translate into tenets for agile or related methodologies.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Capability",
    "calculated_at": "2025-05-01T14:06:24",
    "ai_confidence": 45.0,
    "ai_mentions": 4,
    "ai_alignment": 30,
    "ai_depth": 20,
    "non_ai_confidence": null,
    "final_score": 45.0,
    "reasoning": "The content primarily discusses the shift-left approach in software development, which emphasizes integrating quality assurance early in the development process. While it touches on benefits such as improved quality, faster delivery, and team collaboration, it lacks a strong focus on capabilities as enduring competencies that empower teams over time. The conversation about QA practices is framed more around techniques and efficiencies rather than cultivating systemic capabilities that align with the provided definition of the category 'Capability.' As a result, the content aligns moderately with the theme, but does not deeply dive into the nurturing and embedding of capabilities within an organization.",
    "level": "Tertiary"
  },
  "Service Level Expectation": {
    "resourceId": "whKX9Mn1eb8",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:54:38",
    "ai_confidence": 9.15,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.1,
    "ai_audience": 0.6,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses exclusively on the 'shift-left' approach to quality assurance in software development, advocating for early QA integration, continuous feedback, and collaboration during the development lifecycle. Nowhere does the text directly or indirectly mention, define, or analyze Service Level Expectation (SLE) within Agile, Scrum, or Kanban contexts. There is no discussion of SLE calculation, transparency, elapsed time ranges, probabilities, or linkage to delivery predictability by SLE definition. The audience (software practitioners and team leads) does partially overlap, which justifies a slightly higher audience alignment score, but otherwise the entire content lacks both the keywords and the conceptual scope required for this specific category. No penalties were necessary as the content is neither outdated nor in contradiction with the SLE concept; it's simply unrelated. The confidence, calculated per the formula, reflects the very weak direct and indirect connection to the SLE category.",
    "level": "Ignored"
  }
}