{
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, with no clear focus on team collaboration or dynamics within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "category": "Minimum Viable Product",
    "calculated_at": "2025-02-12T15:37:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and quality issues in product development, but does not focus on MVP concepts or the validation of market assumptions.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-12T15:37:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and costs, with no clear focus on deployment frequency or related practices.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and poor quality in product development, with no explicit mention of throughput as a delivery metric. While it touches on concepts related to efficiency and productivity, it does not analyse or visualise throughput, nor does it provide insights into delivery capacity or flow-based systems. The focus remains on managing technical debt rather than on throughput metrics, leading to a very low confidence score.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T15:37:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and quality management, with no direct reference to Scrum Values.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and efficiency, which are relevant to Lean principles of minimising waste and maximising learning. However, it primarily focuses on technical debt rather than Lean Product Development specifically. While it touches on continuous improvement, it lacks a direct emphasis on Lean methodologies or customer feedback, which are crucial for a higher confidence score in this category.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T15:37:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and costs, without a focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-12T15:37:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and development processes, without a focus on test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-03-14T16:50:01",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses technical debt and quality management in software development, with only a brief mention of Windows in the context of long release cycles. While it touches on a relevant aspect of Windows, the overall focus is not on the Windows operating system itself, nor does it provide substantial insights or guidance specific to Windows installation, configuration, or troubleshooting. The mention of Windows is secondary and does not align with the core themes of the category.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T15:37:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, with no focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-12T15:37:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality management rather than empirical process control principles or Agile methodologies.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 87.0,
    "ai_mentions": 75.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses the concept of technical debt, its implications, and practical strategies for managing it within a software development context. It highlights real-world examples, such as the Azure DevOps team's experience, demonstrating how pragmatic thinking is applied to solve complex problems related to quality and efficiency. The discussion aligns well with the core themes of pragmatic thinking, including practical problem-solving strategies and the importance of adaptability in decision-making processes. The depth of the discussion is significant, providing detailed insights into the consequences of technical debt and the necessity of continuous improvement, which are crucial in Agile and DevOps environments.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the category, as it delves into technical debt with practical examples and actionable strategies. By referencing real-world scenarios like the Azure DevOps team, it demonstrates pragmatic thinking and adaptability—key aspects of the category. The discussion’s depth and focus on continuous improvement further reinforce its relevance to Agile and DevOps practices."
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T15:37:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its implications on product quality and development processes, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Increment": {
    "resourceId": "npnQtdLEwQY",
    "category": "Increment",
    "calculated_at": "2025-05-13T21:55:02",
    "ai_confidence": 18.46,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.2,
    "ai_intent": 2.8,
    "ai_audience": 5.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content is centered on technical debt, poor quality, and continuous improvement, primarily within software engineering. Although it touches on Agile ideas (like continuous delivery, definition of done, and quality standards), there are no direct mentions nor substantial exploration of Increment as working software at the end of an iteration. The discussion is not focused on the delivery, measurement, or the value of Increments per Scrum’s definition; rather, it focuses on maintaining code quality and efficiency through disciplined technical practices. References to artifacts or the iterative delivery structure central to Scrum Increments are absent, making conceptual alignment and depth weak for this category.",
    "reasoning_summary": "While the piece references Agile-adjacent practices, it does not address Increments, their delivery, or their role in Scrum. Its focus is technical debt and ongoing improvement—not the delivery of usable, working software at regular intervals. Alignment and depth for 'Increment' are weak.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T16:50:12",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses technical debt and poor quality in product development, which are important topics but do not directly address the mechanisms or practices that foster innovation. While there are mentions of continuous improvement and the importance of quality, these concepts are not explored in the context of innovation metrics or strategies for enhancing organisational innovation capacity. The focus remains on managing existing challenges rather than fostering new innovative solutions, leading to a low confidence score in the 'Ability to Innovate' category.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and efficiency, which indirectly relates to strategic decision-making in Agile environments. However, it lacks explicit references to Agile, Scrum, or DevOps strategies, and the focus is more on technical aspects rather than strategic alignment or planning. While there are mentions of continuous improvement and the importance of quality, these concepts are not deeply tied to the strategic frameworks outlined in the category definition.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T15:37:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T15:37:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and quality management in product development, with no direct mention of the Scrum Master role or its responsibilities. While it touches on continuous improvement, which is a relevant theme, it does not specifically relate to the Scrum Master's influence or practices within a Scrum context. Therefore, the content does not align well with the category.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on team dynamics, collaboration, or Agile methodologies.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T15:38:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Agile Planning methodologies or practices.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T15:38:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on forecasting methodologies or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T15:38:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and quality management rather than estimation practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to evidence-based practices in terms of decision-making and quality assurance. However, it lacks direct references to empirical metrics or the specific themes of Evidence-Based Management, such as current value or outcome management. The focus is more on the implications of technical debt rather than on data-informed decision-making, which diminishes its alignment with the category.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and development processes, without a clear focus on organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and development processes, with no clear focus on Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T15:38:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "resourceId": "npnQtdLEwQY",
    "category": "Accountability",
    "calculated_at": "2025-05-13T21:55:06",
    "ai_confidence": 27.4,
    "ai_mentions": 0.7,
    "ai_alignment": 2.0,
    "ai_depth": 2.1,
    "ai_intent": 1.6,
    "ai_audience": 6.3,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content focuses primarily on technical debt, quality, and development practices. While it lightly references decisions and responsibilities (e.g., how teams and leadership choose to incur debt), it does not explicitly discuss accountability structures, outcome ownership, or role-based accountability. There’s little mention of frameworks like Scrum, DevOps, or how accountability is embedded in organizational systems. The target audience includes technical leaders, but the central theme stays on process improvement, not accountability as a core mechanism.",
    "reasoning_summary": "This content centers on technical debt and quality management—topics related to responsibility but not the structural accountability discussed in the definition. There’s no substantial exploration of outcome ownership or explicit accountability roles, so alignment with the category is limited.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 20,
    "final_score": 42.0,
    "reasoning": "The content discusses technical debt and its impact on product quality and release cycles, which are relevant to Continuous Delivery. However, it primarily focuses on the implications of technical debt rather than the principles and practices of Continuous Delivery itself. While it mentions the shift to Continuous Delivery as a solution, this is not the main focus of the discussion. The content lacks detailed exploration of Continuous Delivery practices, automation, or cultural aspects, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, with no focus on working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and efficiency, which indirectly relates to customer satisfaction. However, the primary focus is on technical aspects rather than customer experience or satisfaction metrics. While it mentions that managing technical debt can lead to happier users, this is a secondary point rather than a central theme. The content lacks detailed exploration of customer satisfaction strategies or methodologies, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T15:38:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on Agile leadership roles or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and costs, with no clear focus on Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its management, which indirectly relates to Lean Principles through the concepts of continuous improvement and efficiency. However, it primarily focuses on technical debt rather than explicitly addressing Lean principles such as waste reduction or value maximisation. While there are mentions of continuous improvement, the overall discussion does not deeply engage with Lean concepts, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T15:38:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications, with no clear focus on Daily Scrum or related topics.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-12T15:38:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and development processes, without a clear focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, with no clear focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "npnQtdLEwQY",
    "category": "Definition of Done",
    "calculated_at": "2025-05-13T21:55:04",
    "ai_confidence": 32.6,
    "ai_mentions": 1.2,
    "ai_alignment": 3.5,
    "ai_depth": 2.1,
    "ai_intent": 2.4,
    "ai_audience": 6.3,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses nearly entirely on technical debt, poor quality, and cycles of technical improvement, without in-depth discussion of the Definition of Done (DoD). The DoD is mentioned only once—briefly and metaphorically described as a 'minimum quality bar.' There are no elaborations on DoD criteria, practices, or its core agile aspects. The main purpose is to inform about technical debt rather than the DoD. The intended audience (technical practitioners and leaders) aligns, and there is some relevance in the brief intersection with quality and standards, but the signal remains low because discussion is off-core to the DoD category.",
    "reasoning_summary": "This piece primarily discusses technical debt and quality, with only a passing mention of the Definition of Done as a vague quality bar. It does not cover DoD's core concepts or criteria, so confidence in this fitting the category is low.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and development processes, without a focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content provides a thorough exploration of technical debt, its implications on software quality, and the importance of managing it within the software development lifecycle. It discusses the deliberate and unintentional aspects of technical debt, linking it to broader software engineering practices such as quality assurance and architectural decisions. The depth of discussion is significant, with examples illustrating the impact of technical debt on product development and maintenance, aligning closely with key topics in software development methodologies.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the category, as it delves deeply into technical debt and its effects on software quality. It covers both intentional and accidental debt, connects these concepts to software engineering practices, and uses examples to highlight their real-world impact. The discussion is comprehensive and clearly relevant to software development methodologies."
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality management in software development, with only a brief mention of Azure DevOps, which does not focus on Azure Repos specifically.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T15:38:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and quality issues without any mention of acceptance criteria, collaboration, or acceptance testing methodologies related to ATDD.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T15:38:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on customer feedback mechanisms or integration into product development.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-12T15:38:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Agile methodologies or strategic alignment.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T15:38:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and development processes, with no focus on collaboration tools or Agile team dynamics.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T15:38:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Agile transformation principles, methodologies, or practices.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses technical debt and its implications on quality and efficiency, which are relevant to operational practices. However, while it touches on the importance of maintaining quality and managing technical debt, it lacks a direct focus on specific operational practices or methodologies like Agile, DevOps, or Lean. The discussion is more about the consequences of technical debt rather than providing actionable strategies or techniques for operational efficiency. Therefore, while it aligns conceptually with the category, the depth and direct mentions are limited.",
    "level": "Secondary",
    "reasoning_summary": "This content relates to operational practices by highlighting the impact of technical debt on quality and efficiency. However, it doesn’t delve into specific methodologies or offer concrete strategies for improving operations. Instead, it broadly addresses the consequences of technical debt, making its connection to the category more conceptual than practical or detailed."
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses decision-making in the context of technical debt, particularly the choices made between speed and quality. It highlights the implications of these decisions on product quality and organisational costs. However, while it touches on decision-making, it primarily focuses on the consequences of those decisions rather than structured methodologies or frameworks for decision-making, which limits its alignment with the category.",
    "level": "Secondary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses technical debt and its impact on software quality, which is relevant to the concept of working software. However, it primarily focuses on the challenges and management of technical debt rather than directly addressing the delivery of functional software. While it touches on the importance of quality and continuous improvement, it lacks explicit discussions on working software characteristics and best practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Sprint Review": {
    "resourceId": "npnQtdLEwQY",
    "category": "Sprint Review",
    "calculated_at": "2025-05-13T21:55:05",
    "ai_confidence": 7.82,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 7.3,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not directly mention Sprint Review nor discuss its process or purpose within Scrum. Instead, it focuses on technical debt, quality, and continuous improvement—topics related to software development but not specific to Sprint Reviews. There are brief related references (e.g., 'definition of done'), but none clearly align with Sprint Review concepts, roles, or events as per the provided definition. The intended audience is technical practitioners, which matches the general Scrum audience, yielding a higher audience alignment score. However, minimal mention, limited conceptual overlap, and an absence of event-specific discussion yield a very low overall confidence regarding the Sprint Review category.",
    "reasoning_summary": "This content addresses technical debt and quality in software development but does not mention or meaningfully discuss Sprint Reviews. It is not a fit for the category, reflected by the very low confidence score.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "npnQtdLEwQY",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-13T21:55:05",
    "ai_confidence": 27.49,
    "ai_mentions": 0.7,
    "ai_alignment": 3.3,
    "ai_depth": 3.2,
    "ai_intent": 3.0,
    "ai_audience": 5.4,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content primarily discusses managing technical debt, distinguishing it from poor quality, and improving software quality and efficiency. While some references (Azure DevOps, circuit breaker, production incident) touch on reliability, there are no explicit mentions of SRE, its principles, or direct SRE-focused tools and practices. The main focus is software development quality and process improvement, not SRE's core themes. Audience overlap exists (practitioners), but the depth, intent, and conceptual alignment with SRE is moderate to weak, as most of the article follows a software craftsmanship and technical debt management approach, diverging from SRE-specific content.",
    "reasoning_summary": "While the article touches on reliability and production incidents, it mainly focuses on technical debt and quality improvement in software development, not on core Site Reliability Engineering principles or practices. This makes its fit to the SRE category limited and only tangential.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T15:39:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its implications on product quality and team performance, without addressing psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 65.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of managing technical debt and maintaining product quality, which indirectly relates to customer retention by highlighting how a positive user experience can lead to customer loyalty. However, the primary focus is on technical debt rather than explicit customer retention strategies, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T15:39:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality management in product development, without a focus on Lean Startup principles such as MVP, Build-Measure-Learn feedback loop, or validated learning.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T15:39:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and development processes, without any focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T15:39:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and quality management, with no focus on hypothesis-driven experimentation or Agile workflows.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T15:39:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its impact on costs and quality, but does not focus on revenue per employee as a primary topic.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-03-14T16:50:01",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and quality assurance in software development, with only a brief mention of Azure DevOps in the context of continuous improvement. It does not focus on Azure Pipelines or CI/CD practices, which are central to the category. The discussion lacks depth regarding Azure Pipelines specifically, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-12T15:39:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Lean principles or practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without focusing on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T15:39:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality issues in software development, without a focus on scaling Agile methodologies or enterprise-level practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "npnQtdLEwQY",
    "category": "Product Backlog",
    "calculated_at": "2025-05-13T21:55:07",
    "ai_confidence": 26.6,
    "ai_mentions": 0.5,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 2.1,
    "ai_audience": 7.0,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content centers almost exclusively on technical debt, its distinction from poor quality, and continuous improvement practices. It does not explicitly mention the Product Backlog or any of the related key backlog management topics (e.g., backlog refinement, prioritization, sprint planning, user stories). While it brushes against Agile best practices by mentioning continuous delivery and definitions of done, there is only an indirect conceptual overlap—technical debt management may impact the backlog, but the connection is implied rather than discussed. Audience alignment is strong (practitioners, leaders), but the lack of direct or in-depth discussion about the backlog category significantly limits relevance.",
    "reasoning_summary": "The content thoughtfully explains technical debt and its management but makes no direct or substantive reference to the Product Backlog, its processes, or key practices. There are only tangential connections, so fit to this category is minimal.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its implications on product quality and development processes, without addressing team dynamics or motivation.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T15:39:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality issues in product development, without a focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T15:39:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, with no clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without focusing on customer needs or product feature definition.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-12T15:39:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and costs, with only a brief mention of continuous delivery practices. The main focus is on the consequences of poor quality and technical debt rather than on frequent releases or the principles of continuous delivery.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-12T15:39:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T15:39:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-11T08:55:54",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 20,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and poor quality in product development, with no direct mention of Lead Time. While it touches on related concepts like long release cycles, it does not align with the core themes of Lead Time as an observability metric. The discussion lacks depth regarding Lead Time, focusing instead on the implications of technical debt and quality management.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T15:39:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and costs, without any focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on product strategy methodologies or frameworks.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T15:39:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses technical debt, its implications on software quality, and the importance of maintaining high standards in software development. It aligns closely with the principles of software craftsmanship, particularly in how it addresses the need for continuous refactoring and architectural decisions to manage technical debt effectively. The depth of discussion is significant, providing detailed examples and insights into the consequences of poor quality and technical debt, as well as strategies for improvement, such as the circuit breaker pattern. Overall, the content is a strong fit for the 'Technical Mastery' category.",
    "level": "Primary",
    "reasoning_summary": "This content is a great match for the 'Technical Mastery' category, as it delves deeply into managing technical debt and maintaining software quality. It highlights best practices, such as continuous refactoring and architectural choices, and offers practical examples and strategies. The focus on improving code quality and long-term maintainability clearly demonstrates advanced technical understanding and craftsmanship."
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T15:39:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on transparency or Agile processes.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical debt and its implications on product quality and development processes, without a clear focus on Scrum Team dynamics, roles, or collaboration.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T15:39:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on quality and costs, with no clear focus on Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on continuous learning principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T15:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on identifying patterns or shifts in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content extensively discusses technical debt, its implications on software quality, and the importance of maintaining high standards in engineering practices. It aligns well with the core themes of Engineering Excellence, particularly in terms of technical debt management, quality assurance, and the continuous improvement of engineering processes. The depth of discussion is significant, providing detailed examples and insights into how technical debt affects product quality and development efficiency, as well as strategies for addressing it. Overall, the content is a strong fit for the category.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong match for the Engineering Excellence category, as it delves into technical debt, its impact on software quality, and the need for robust engineering standards. By offering practical examples and strategies for managing technical debt, it clearly supports continuous improvement and quality assurance within engineering teams."
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-12T15:40:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality management in software development, without a clear focus on digital transformation strategies or the integration of digital technologies for business enhancement.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 3.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and product quality, which are not directly related to system configuration. While there are mentions of processes that could tangentially relate to system performance, the focus is on development practices rather than the setup and integration of systems. The discussion lacks depth in system configuration topics such as configuration management tools or automation practices.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 92.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 38,
    "non_ai_confidence": 20,
    "final_score": 92.0,
    "reasoning": "The content extensively discusses the concept of technical debt, including its definition, types (intentional vs. unintentional), and the implications of poor quality versus technical debt. It provides a detailed exploration of how technical debt accumulates, the trade-offs involved in making design decisions, and the long-term impacts on product quality and development velocity. The author also shares practical examples and strategies for managing and remediating technical debt, aligning closely with the key topics outlined in the category definition. Overall, the content is a primary focus on technical debt, demonstrating a high level of detail and conceptual alignment.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the technical debt category, as it thoroughly explores what technical debt is, its various forms, and the consequences for software projects. The discussion includes practical examples and management strategies, clearly aligning with the category’s focus on understanding and addressing technical debt in development."
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, with no direct relevance to remote working practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T15:40:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on evidence-based leadership principles or data-driven decision-making.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T15:40:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality issues in software development, with no clear focus on deployment strategies or methodologies.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T15:40:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and development cycles, which are relevant to product management. However, it primarily focuses on technical aspects and implementation details rather than strategic product management frameworks or methodologies. While it touches on the importance of quality and decision-making in product development, it lacks a direct focus on the broader strategic alignment of customer needs and business objectives, which is central to product management discussions.",
    "level": "Secondary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T15:40:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and development processes, without a clear focus on organisational culture or its influence on agility and transformation.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-12T15:40:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on software quality and costs, without a clear focus on version control practices or methodologies.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T15:40:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its implications on product quality and development processes, with no focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T15:40:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and organisational decision-making, but does not focus on systems thinking or organisational dynamics as defined in the category.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a focus on validating product ideas through user engagement or testing methodologies.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T15:40:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality issues rather than release management strategies or practices.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T15:40:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality management in software development, which does not align with the principles and practices of entrepreneurship.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses technical debt extensively, highlighting its implications on product quality and team productivity. While it touches on continuous improvement and the importance of architectural decisions, it lacks a direct focus on the principles of technical leadership, such as mentoring, team dynamics, or agile methodologies. The discussion is more centred on technical challenges rather than the leadership aspects that guide teams through these challenges.",
    "level": "Secondary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and efficiency, but it does not focus on troubleshooting specific technical issues. While it touches on the consequences of poor quality and the need for continuous improvement, it lacks explicit techniques or methodologies for diagnosing and resolving technical problems, which is essential for the 'Troubleshooting' category.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on change management strategies or practices.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content extensively discusses technical debt, its implications on quality, and the importance of maintaining high standards in software development. It aligns well with the principles of clean code and continuous integration, as it highlights the need for refactoring and architectural decisions to manage technical debt effectively. The depth of discussion is significant, providing examples and insights into how technical debt can impact development cycles and product quality, which are core themes of engineering practices. However, while it touches on related concepts, it does not explicitly mention all key topics such as TDD or CI/CD, which slightly lowers the confidence score.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the engineering practices category, as it delves into technical debt, its effects on software quality, and the necessity of refactoring. The discussion reflects core engineering principles, though it doesn’t cover every related topic in depth. Overall, it provides valuable insights into maintaining high standards in development, making it relevant to the category."
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T15:40:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical debt and its implications on product quality and organisational costs, without a clear focus on Agile frameworks or principles.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-08T15:34:53",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 10,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and poor quality in product development, with no explicit mention of Test First Development principles or practices. While it touches on the importance of quality and continuous improvement, it does not align with the core themes of Test First Development, such as defining success criteria or automated testing practices. The focus is on managing technical debt rather than the Test First approach.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T15:40:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical debt and its implications on product quality and development processes, without a clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its implications on software quality, with a specific mention of Azure DevOps in the context of a production incident. However, the primary focus is on technical debt rather than Azure DevOps itself. While there is some alignment with Azure DevOps principles, the depth of discussion on Azure DevOps services and practices is limited, making it a secondary topic rather than the main focus.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses decision-making processes related to technical debt, highlighting choices made between speed and quality. It explores the implications of these decisions on product quality and organisational outcomes, which aligns with decision theory principles. However, while it touches on decision-making, the primary focus is on technical debt rather than a comprehensive exploration of decision theory itself, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 42.0,
    "ai_mentions": 8,
    "ai_alignment": 15,
    "ai_depth": 18,
    "non_ai_confidence": 10,
    "final_score": 42.0,
    "reasoning": "The content discusses technical debt and its impact on productivity and efficiency, which indirectly relates to flow efficiency. However, it primarily focuses on the implications of technical debt rather than optimising work throughput or addressing bottlenecks in the value stream. While there are mentions of continuous improvement and the importance of quality, the core themes of flow efficiency are not the primary focus, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-12T15:36:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality management, with no clear focus on market adaptability strategies or practices.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses technical debt and its implications on software quality and development processes. While it touches on organisational decisions and team dynamics, it lacks a direct focus on the interplay between social and technical systems as defined in the Sociotechnical Systems category. The discussion is more centred on technical aspects and does not sufficiently explore the broader sociotechnical context, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-12T15:36:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on organisational agility or related practices.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T15:36:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its implications on product quality and organisational decision-making, but does not focus on Systems Thinking principles or interconnectedness of components within a system.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on metrics, data utilisation, or learning mechanisms.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Agile methodologies or practices related to product management.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and development processes, without focusing on installation or configuration of tools or software.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 50,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and development processes, which are relevant to DevOps principles such as continuous improvement and the importance of quality in software delivery. However, it does not explicitly mention DevOps or its core themes, focusing instead on technical debt management and quality assurance. The discussion lacks depth in terms of DevOps practices and cultural shifts, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses technical debt extensively, highlighting its implications on quality and efficiency in software development. It touches on the importance of architectural decisions and continuous improvement, which aligns with the principles of Technical Excellence. However, while it provides valuable insights, the focus is more on the consequences of technical debt rather than specific engineering practices or methodologies that enhance agility. The depth of discussion on actionable practices like refactoring and the circuit breaker pattern is present but not exhaustive, leading to a moderately high confidence score.",
    "level": "Secondary",
    "reasoning_summary": "This content fits the Technical Excellence category as it delves into technical debt and its impact on software quality and team efficiency. While it references some engineering practices, the main emphasis is on understanding and addressing technical debt rather than detailing specific agile methodologies. The discussion supports continuous improvement, making it relevant, though not exclusively focused on actionable techniques."
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 30,
    "final_score": 42.0,
    "reasoning": "The content discusses technical debt and its management, which touches on aspects of continuous improvement, a key principle of Lean. However, it primarily focuses on technical debt rather than Lean methodologies or waste reduction strategies. While there are mentions of efficiency and quality, the content does not explicitly address Lean principles or tools, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 50.0,
    "ai_depth": 75.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and efficiency, which indirectly relates to value delivery. It highlights the importance of continuous improvement and the impact of long release cycles on customer satisfaction. However, the primary focus is on technical debt rather than explicit value delivery strategies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T15:36:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its implications on product quality and costs, which are relevant to Agile and DevOps practices.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T15:37:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and development processes, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T15:37:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-12T15:37:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on enterprise agility or organisational-level agility practices.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-12T15:37:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without a clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 42.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 20,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and development processes, which are relevant to the application lifecycle. However, it primarily focuses on the concept of technical debt rather than the broader scope of Application Lifecycle Management. While it touches on aspects like continuous improvement and the impact of long release cycles, it lacks a comprehensive discussion on the stages of the application lifecycle, governance, or specific tools and frameworks related to ALM.",
    "level": "Tertiary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T15:37:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical debt and its implications on product quality and development processes, without addressing psychological principles or theories related to motivation, engagement, leadership, or team dynamics.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 25,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and delivery, which aligns with the principles of product delivery. However, it primarily focuses on the concept of technical debt rather than the broader methodologies and practices of delivering software products. While it touches on continuous improvement and the importance of quality, it lacks a comprehensive exploration of product delivery methodologies like Agile or CI/CD, which limits its depth in the category.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T15:37:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and organisational decision-making, without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T15:37:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and its implications on product quality and costs, without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality issues in software development, without a clear focus on platform engineering or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T11:58:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality management in software development, with no clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt and quality management in product development, which are relevant to agile practices. However, it does not explicitly mention the Agile Product Operating Model or its core principles. While there are elements of continuous improvement and a focus on product quality, the primary focus is on technical debt rather than the broader framework of APOM.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality issues in software development, with minimal focus on leadership practices or principles.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily focuses on technical debt and quality management in product development, which does not directly address the core themes of social technologies such as collaboration, decision-making, or value delivery. While it touches on continuous improvement, it lacks a strong emphasis on social frameworks or methodologies that promote teamwork and collective intelligence. The discussion is more centred on technical aspects rather than the social dynamics within teams or organisations.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:31:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality issues in software development, without a clear focus on Internal Developer Platforms or their role in streamlining development processes.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:31:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical debt and quality assurance in software development, with no clear focus on the application of AI in Agile or DevOps practices.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 12.0,
    "ai_mentions": 5.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and quality issues in software development, with no direct mention of Scrum principles, roles, or events. While it touches on concepts like team dynamics and decision-making, it does not align with the core themes of the Scrum framework or its implementation. The discussion lacks depth regarding Scrum practices, making it a secondary topic rather than a primary focus.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "category": "Shift Left Strategy",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt and its implications on quality and efficiency, but it does not explicitly mention the Shift-Left Strategy or its principles. While there are elements of proactive quality management and continuous improvement that align with Shift-Left concepts, the primary focus is on technical debt rather than integrating testing, security, and compliance earlier in the development process. The discussion lacks depth in terms of specific techniques or tools related to the Shift-Left Strategy.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses continuous improvement in the context of managing technical debt and maintaining product quality. It highlights the importance of regular refactoring and proactive management of technical debt, which aligns with the principles of continuous improvement. However, while it touches on these themes, the primary focus is on technical debt and quality rather than a broader discussion of continuous improvement practices. The depth of discussion on continuous improvement is moderate, as it is integrated into the narrative but not extensively elaborated upon.",
    "level": "Secondary",
    "reasoning_summary": "This content is relevant to the category as it addresses continuous improvement through the lens of technical debt management and product quality. While it doesn’t deeply explore all aspects of continuous improvement, it effectively connects regular refactoring and proactive debt management to ongoing enhancement, making it a suitable, though not comprehensive, fit for the category."
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses technical debt and poor quality in product development, which are important topics but do not directly address the concept of Common Goals within Agile and DevOps frameworks. While there are mentions of team dynamics and the importance of quality, the focus is not on aligning strategy with execution or shared objectives that guide decision-making. The discussion lacks depth in connecting these concepts to the overarching strategic objectives of an organisation.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 70.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the importance of managing technical debt and maintaining quality, which aligns with the principles of competence in Agile and DevOps. It highlights the need for continuous improvement and the impact of quality on productivity, reflecting a commitment to skill development and professionalism. However, while competence is a theme, it is not the primary focus, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses technical debt and quality issues in software development, which are important topics but do not directly address the principles or components of the One Engineering System (1ES). While there are mentions of continuous improvement and the impact of quality on productivity, these concepts are not explicitly tied to the 1ES framework or its integration and standardisation goals. The discussion lacks a focus on the unification of tools and processes across teams, which is central to 1ES, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content primarily discusses technical debt and quality management in product development, with a focus on decision-making processes. While it touches on the intentionality behind choices made by teams, it does not explicitly address Agentic Agility or its principles. The discussion lacks depth in exploring the transformative capacity of individuals or systems in a socio-technical context, and it does not differentiate between human and AI capabilities in relation to agility.",
    "level": "Ignored"
  },
  "Product Development": {
    "category": "Product Development",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and development processes, which aligns well with product development methodologies. It highlights the importance of continuous improvement and the impact of long release cycles on product quality, both of which are key themes in product development. The depth of discussion on managing technical debt and the distinction between technical debt and poor quality further supports its relevance to the category. However, while it touches on product development, it does not explicitly mention Agile or other specific methodologies, which slightly lowers the confidence score.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the product development category, as it explores how technical debt affects product quality and the development process. It emphasises continuous improvement and the challenges of long release cycles—core concerns in product development—even though it doesn’t directly reference specific methodologies like Agile."
  },
  "Project Management": {
    "category": "Project Management",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 42.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 20,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses technical debt and its implications on product quality and development processes, which are relevant to project management. However, it primarily focuses on technical aspects rather than broader project management principles, methodologies, or lifecycle phases. While it touches on continuous improvement and the importance of quality, it lacks a comprehensive exploration of project management strategies, tools, or roles, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Hybrid Agile": {
    "category": "Hybrid Agile",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and quality management in product development, with no direct mention of Hybrid Agile methodologies or their challenges. While it touches on aspects of project management, it does not critically examine the integration of traditional and agile practices, nor does it address the specific themes outlined for the Hybrid Agile category.",
    "level": "Ignored"
  },
  "Scaling": {
    "category": "Scaling",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and quality management in product development, which does not align with the core themes of scaling Agile practices or frameworks. While it touches on continuous improvement, it lacks a focus on cross-team collaboration, alignment with business goals, or specific scaling methodologies.",
    "level": "Ignored"
  },
  "GitHub": {
    "category": "GitHub",
    "calculated_at": "2025-04-10T13:00:42",
    "ai_confidence": 12.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses technical debt and quality in product development without any direct mention of GitHub or its functionalities. While it touches on concepts relevant to software development, it does not align with GitHub's core themes or provide depth on GitHub-specific practices, tools, or methodologies.",
    "level": "Ignored"
  },
  "Time to Market": {
    "category": "Time to Market",
    "calculated_at": "2025-04-10T16:50:05",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt and its impact on product quality and efficiency, which indirectly relates to Time to Market. However, it does not explicitly mention Time to Market or its associated metrics. The discussion on long release cycles hints at the importance of timely delivery but lacks a focused exploration of strategies to improve Time to Market. Overall, while there are relevant themes, the primary focus remains on technical debt rather than the speed of delivering value.",
    "level": "Ignored"
  },
  "Unrealised Value": {
    "category": "Unrealised Value",
    "calculated_at": "2025-04-10T16:50:25",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses technical debt and poor quality in product development, which are not directly related to the concept of Unrealised Value. While there are mentions of improving processes and the potential benefits of managing technical debt, the focus is more on operational challenges rather than exploring untapped opportunities or potential value. The discussion lacks explicit references to indicators of Unrealised Value or strategies for identifying it, leading to a low confidence score in this category.",
    "level": "Ignored"
  },
  "Current Value": {
    "category": "Current Value",
    "calculated_at": "2025-04-10T16:50:28",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 25,
    "ai_depth": 15,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses technical debt and poor quality, which indirectly relates to the concept of Current Value by highlighting the importance of maintaining product quality for customer satisfaction and long-term success. However, it does not explicitly mention Current Value or provide metrics or techniques for measuring it. The focus is more on the implications of technical debt rather than a real-time assessment of value delivered, which is central to the Current Value category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "category": "Agnostic Agile",
    "calculated_at": "2025-04-10T16:50:08",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on technical debt and quality management in product development, without any direct mention of Agnostic Agile principles or discussions. While it touches on concepts like continuous improvement, which can relate to agile practices, it does not explicitly connect these ideas to the Agnostic Agile philosophy or its core themes. The discussion lacks depth regarding the application of Agnostic Agile principles, making it largely irrelevant to the category.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "category": "Company as a Product",
    "calculated_at": "2025-04-10T16:50:15",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 30,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses technical debt and quality in product development, which are important aspects of organisational processes but do not directly address the concept of 'Company as a Product'. While there are mentions of continuous improvement and the impact of product quality on customer satisfaction, these themes are not explicitly tied to the broader organisational strategy of CaaP. The focus remains on product management rather than on the organisational structure or customer-centric strategies that define CaaP.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "category": "Cell Structure Design",
    "calculated_at": "2025-04-10T16:50:20",
    "ai_confidence": 5.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 5.0,
    "reasoning": "The content primarily focuses on technical debt and quality management in product development, with no direct mention of Cell Structure Design or its principles. While it touches on themes of organisational efficiency and continuous improvement, these concepts are not aligned with the core themes of decentralised structures or autonomous cells as outlined in the Cell Structure Design category. The discussion lacks depth regarding the specific characteristics and functions of cells, making it largely irrelevant to the category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "npnQtdLEwQY",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-13T21:55:02",
    "ai_confidence": 2.33,
    "ai_mentions": 0.12,
    "ai_alignment": 0.4,
    "ai_depth": 0.45,
    "ai_intent": 0.19,
    "ai_audience": 0.67,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content is entirely focused on technical debt, distinguishing it from poor quality, and advocating for practices like continuous improvement and refactoring. There is no direct mention of Liberating Structures, facilitation techniques, or related concepts. No references to the toolkit, its methods, or its intended use cases appear. The audience overlaps somewhat, as Scrum Masters and Agile coaches may care about technical debt, but the topic is not aligned. No penalty was warranted as the tone and content are neutral and contemporary.",
    "reasoning_summary": "This piece centers on managing technical debt and quality, with no reference to Liberating Structures or facilitation methods. As such, it doesn't fit the category and the confidence score reflects minimal relevance.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "category": "Open Space Agile",
    "calculated_at": "2025-04-10T16:50:31",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on technical debt and quality management in product development, with no direct mention of Open Space Agile principles or practices. While it touches on themes of continuous improvement, which could loosely relate to Agile methodologies, it does not engage with the core concepts of Open Space Agile, such as collective participation, psychological safety, or co-creation. The discussion lacks depth regarding Open Space Agile, making it clear that this content does not align with the category.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "npnQtdLEwQY",
    "category": "Principle",
    "calculated_at": "2025-05-01T14:48:48",
    "ai_confidence": 63.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 60.0,
    "non_ai_confidence": null,
    "final_score": 63.0,
    "reasoning": "The content discusses managing technical debt and its impact on product quality, emphasizing the importance of continuous improvement, which aligns well with Agile principles. The concept of making deliberate decisions about technical debt reflects self-management and value delivery. However, while it touches on core principles, the primary focus is on technical debt rather than directly on the principles themselves. Therefore, the confidence score is moderate.",
    "level": "Secondary"
  },
  "Tool": {
    "resourceId": "npnQtdLEwQY",
    "category": "Tool",
    "calculated_at": "2025-05-01T14:48:48",
    "ai_confidence": 40.0,
    "ai_mentions": 5,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 40.0,
    "reasoning": "The content discusses technical debt and poor quality in product development with some emphasis on continuous improvement and refactoring, which relates indirectly to tools that could aid in these practices. However, the discussion lacks explicit references to specific tools or software applications, which diminishes its direct alignment with the 'Tool' category. The main focus remains on the concepts of technical debt rather than the tools that support its management, resulting in a moderate confidence score.",
    "level": "Ignored"
  },
  "Philosophy": {
    "resourceId": "npnQtdLEwQY",
    "category": "Philosophy",
    "calculated_at": "2025-05-01T14:48:48",
    "ai_confidence": 20.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 20.0,
    "non_ai_confidence": null,
    "final_score": 20.0,
    "reasoning": "The content discusses technical debt and quality management within product development, focusing on practical challenges and lessons learned. However, it does not engage with broader philosophical frameworks or foundational beliefs that would align it with the category of Philosophy. Instead, it primarily addresses specific practices and challenges, which are excluded from this category. The mention of overarching choices impacting product quality touches on decision-making philosophy but lacks depth in exploring the foundational philosophical implications.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "npnQtdLEwQY",
    "category": "Discipline",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 36.0,
    "ai_mentions": 2,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 36.0,
    "reasoning": "The content discusses technical debt and quality in product development, touching on the principles of continuous improvement and a structured approach to managing these concepts. However, it primarily focuses on specific practices rather than the broader systemic application and maturation of a discipline. While it mentions continuous improvement, it lacks a deeper exploration of governance structures, ethical considerations, and evolution over time related to the field of software development, which are essential aspects of the 'Discipline' category.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "npnQtdLEwQY",
    "category": "Artifact",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 15.0,
    "ai_mentions": 0,
    "ai_alignment": 30.0,
    "ai_depth": 20.0,
    "non_ai_confidence": null,
    "final_score": 15.0,
    "reasoning": "The content discusses technical debt and quality in software development, but does not focus on artifacts as defined in Agile, Scrum, or Lean. While there is some mention of a 'definition of done', which is an Agile artifact, the primary focus is on the concepts of technical debt and poor quality rather than on the role and management of artifacts themselves. As a result, the content is only tangentially related to the Artifact category.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "npnQtdLEwQY",
    "category": "Observability",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 20.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": null,
    "final_score": 20.0,
    "reasoning": "The content discusses concepts related to technical debt and its management within software development but does not explicitly mention observability or its related topics. There are brief mentions of quality and continuous improvement, which are tangentially related, but the primary focus is on managing technical debt rather than on observability or the specific tools, metrics, and practices associated with it.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "npnQtdLEwQY",
    "category": "Practice",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 62.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 40,
    "non_ai_confidence": null,
    "final_score": 62.0,
    "reasoning": "The content discusses practices related to managing technical debt and maintaining product quality. It highlights the importance of continuous improvement, refactoring, and setting quality standards, which align with the 'Practice' category. However, while it mentions improvement practices, the primary focus is on the implications and definitions surrounding technical debt rather than specific actionable techniques or methods teams can use. This reduces its alignment and depth in terms of practical methodologies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Method": {
    "resourceId": "npnQtdLEwQY",
    "category": "Method",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 45.0,
    "ai_mentions": 15,
    "ai_alignment": 25,
    "ai_depth": 30,
    "non_ai_confidence": null,
    "final_score": 45.0,
    "reasoning": "The content discusses the implications of technical debt and poor quality in product development, focusing on the importance of continuous improvement and refactoring as methods to manage technical debt. However, it does not provide structured, step-by-step procedures or explicit methods related to Agile, Lean, or other frameworks, leading to a lower confidence score.",
    "level": "Tertiary"
  },
  "Model": {
    "resourceId": "npnQtdLEwQY",
    "category": "Model",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 25.0,
    "ai_mentions": 0,
    "ai_alignment": 30.0,
    "ai_depth": 20.0,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content primarily focuses on the concept of technical debt and quality management in product development, but it does not explicitly engage with or discuss any specific models, frameworks, or structured representations relevant to the 'Model' category. While it touches upon ideas of continuous improvement and potential implications for organizational processes, it lacks direct references to recognized models or frameworks like Lean, DevOps principles, or others outlined in the category description. The depth of discussion also centers more on issues rather than on careful conceptual modeling, leading to a low overall confidence score.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "npnQtdLEwQY",
    "category": "Framework",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 25.0,
    "ai_mentions": 2,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content discusses technical debt and poor quality in product development, but it does not explicitly address any specific frameworks or structured methodologies related to Agile, DevOps, or Lean principles. Although there are mentions of continuous improvement, which is relevant, the overall focus remains on the issues of technical debt rather than providing a discussion on frameworks. The analysis lacks depth in exploring how frameworks could be applied to manage these issues effectively.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "npnQtdLEwQY",
    "category": "Tenet",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 58.0,
    "ai_mentions": 2,
    "ai_alignment": 50.0,
    "ai_depth": 55.0,
    "non_ai_confidence": null,
    "final_score": 58.0,
    "reasoning": "The content focuses on technical debt and poor quality, discussing their implications for product development and the importance of continuous improvement in managing these issues. While it touches on continuous improvement, a key tenet, it lacks explicit guiding rules that directly translate into actionable tenets for Agile, Lean, or DevOps methodologies as outlined in the specified category. Instead, it provides a broader discussion on technical debt without clear prescriptive steps, which slightly reduces its relevance to the 'Tenet' category.",
    "level": "Tertiary"
  },
  "Capability": {
    "resourceId": "npnQtdLEwQY",
    "category": "Capability",
    "calculated_at": "2025-05-01T14:48:49",
    "ai_confidence": 42.0,
    "ai_mentions": 3,
    "ai_alignment": 60.0,
    "ai_depth": 25.0,
    "non_ai_confidence": null,
    "final_score": 42.0,
    "reasoning": "While the content discusses the importance of managing technical debt and poor quality, it primarily focuses on specific challenges and solutions rather than enduring capabilities. The mention of continuous improvement is relevant, but the overall discussion lacks a deep exploration of capabilities as defined in Agile or DevOps contexts. Instead, it focuses on the consequences of poor practices and the need for higher quality. Therefore, it does align with the category at a basic level but does not meet the depth or focus required for a higher confidence score.",
    "level": "Tertiary"
  },
  "Service Level Expectation": {
    "resourceId": "npnQtdLEwQY",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:54:36",
    "ai_confidence": 3.84,
    "ai_mentions": 0.4,
    "ai_alignment": 1.5,
    "ai_depth": 2.0,
    "ai_intent": 0.9,
    "ai_audience": 6.3,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses entirely on technical debt, poor quality, and product development practices. Nowhere does it mention Service Level Expectation (SLE) or discuss its definition, calculation, or direct application in Agile, Scrum, or Kanban contexts. No references to SLE's role in predictability, time ranges, probability, or the Kanban Guide are present. The conceptual alignment is very weak as the text primarily addresses technical quality, process improvement, and organizational discipline, not forecast-based flow metrics. There is zero direct mention of SLE, and the signal-to-noise ratio reflects that while some process improvement ideas (like continuous improvement) overlap slightly with Agile principles, nothing points towards SLE specifically. No outdated practices or negative tone require penalties. The audience, while relevant to Agile practitioners, does not compensate for the lack of direct or deep SLE content. Confidence is therefore extremely low, reflecting only tiny incidental relevance.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "npnQtdLEwQY",
    "category": "Ethos",
    "calculated_at": "2025-05-13T21:55:03",
    "ai_confidence": 41.909,
    "ai_mentions": 1.8,
    "ai_alignment": 4.7,
    "ai_depth": 5.4,
    "ai_intent": 3.9,
    "ai_audience": 8.1,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on technical debt, poor quality, and continuous improvement, with clear emphasis on the impact of choices and maintaining standards. However, discussion is largely limited to practices and their outcomes rather than foundational beliefs or organizational ethos. System-level convictions, underlying core values, or deeper explorations of how ethos drives sustained transformation are not central; any alignment is tangential, such as in references to a 'definition of done' and the shaping of product quality through decision-making. The audience is mainly practitioners and leaders concerned with delivery, somewhat overlapping with Ethos' target, but the signal is focused more on practical management rather than ethos itself.",
    "reasoning_summary": "While touching on organizational standards and decision-making, the content mainly addresses management of technical debt and quality—not the core beliefs beneath system evolution or authentic transformation. Strong on practice, weak on ethos; partial category fit.",
    "level": "Tertiary"
  },
  "Customer Focus": {
    "resourceId": "npnQtdLEwQY",
    "category": "Customer Focus",
    "calculated_at": "2025-05-13T21:55:04",
    "ai_confidence": 48.36,
    "ai_mentions": 2.7,
    "ai_alignment": 5.3,
    "ai_depth": 6.2,
    "ai_intent": 4.2,
    "ai_audience": 6.3,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content discusses technical debt, quality, and engineering practice. While it touches on customer experience (e.g., happier users, reduced issues, business/customer protection), the main focus is on productivity and internal process efficiency. Explicit linkage to defining/measuring customer value, validated outcomes, or customer-driven prioritization is brief and mostly implied. Customer Focus is not directly named or deeply explored; customer impact is referenced in a supporting rather than central role. The audience and intent are moderately aligned, but the discussion does not explicitly use customer outcomes as primary drivers for strategy or decision-making.",
    "reasoning_summary": "This piece is mainly about managing technical debt and quality for better team outcomes, with customer benefits mentioned but not central. While users are referenced, the core theme isn't how customer value tangibly guides decisions, so confidence for Customer Focus is moderate at best.",
    "level": "Tertiary"
  },
  "First Principal": {
    "resourceId": "npnQtdLEwQY",
    "category": "First Principal",
    "calculated_at": "2025-05-13T21:55:05",
    "ai_confidence": 36.52,
    "ai_mentions": 0.1,
    "ai_alignment": 4.2,
    "ai_depth": 4.65,
    "ai_intent": 4.0,
    "ai_audience": 8.15,
    "ai_signal": 7.18,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses extensively on technical debt, distinguishing it from poor quality, and emphasizes practices such as continuous improvement, refactoring, and setting a 'definition of done.' While these align with modern product development and advocate for foundational quality, there is no explicit identification, definition, or application of 'first principles' as immutable constraints per Lean, Agile, Scrum, or DevOps. The discussion stays within best practices and practical guidance, rather than foundational theory or first principles. Thus, scores reflect partial conceptual overlap but lack of direct fit.",
    "reasoning_summary": "This content discusses technical debt and quality in depth, but doesn’t explicitly define or apply first principles as immutable foundations. Its focus is on practical improvement and standards, not on foundational constraints that would fit the strict 'First Principal' category.",
    "level": "Ignored"
  },
  "Definition of Workflow": {
    "resourceId": "npnQtdLEwQY",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:18",
    "ai_confidence": 15.618,
    "ai_mentions": 0.7,
    "ai_alignment": 2.3,
    "ai_depth": 2.1,
    "ai_intent": 2.8,
    "ai_audience": 4.5,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses entirely on technical debt, poor quality, and continuous improvement in software development. There is one explicit mention of 'definition of done', but no direct mention or in-depth discussion of the Definition of Workflow as per Kanban or agile frameworks. The main themes center on distinguishing technical debt and quality, process improvement, release cycles, and team outcomes, none of which meaningfully address workflow agreements, WIP limits, entry/exit policies, or the explicit modeling of work flow. The audience is relevant to the agile/software community, but the alignment and depth regarding Definition of Workflow are minimal.",
    "reasoning_summary": "The content discusses technical debt, quality, and continuous improvement in agile development, but does not explicitly address or explore the Definition of Workflow. Alignment with the category is minimal, with only slight audience overlap and no substantive coverage of workflow-defining concepts.",
    "level": "Ignored"
  }
}