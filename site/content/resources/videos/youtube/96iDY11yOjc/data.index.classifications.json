{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T10:10:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than hypothesis formulation or experimentation.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T10:10:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than on hypothesis-driven experimentation or testing ideas within Agile workflows.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T10:10:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on learning, engagement, and training methods rather than entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T10:10:36",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-17T16:42:15",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the qualities of great Agile developers and touches on learning and engagement, which are relevant to Scrum principles, but it primarily focuses on personal development rather than Scrum roles or practices.",
    "level": "Tertiary"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-03-14T23:45:18",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the personal development of Agile developers and the importance of engagement and self-directed learning. While it touches on aspects of organisational culture and training methodologies, it lacks a direct discussion on systems thinking or the dynamics within organisations. The mention of organisational empowerment and culture is relevant but not the primary focus, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-03-10T14:19:32",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of learning, self-directed growth, and the role of practice in becoming a great Agile developer, which aligns with coaching principles. However, it lacks explicit mentions of coaching techniques or frameworks, and the depth of discussion on coaching as a practice is limited.",
    "level": "Secondary"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T10:10:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and engagement rather than empirical evidence or data-driven leadership practices.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-03-10T18:15:07",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of engagement in the context of developers' willingness to learn and adapt, which aligns with the core themes of employee engagement. It highlights intrinsic motivation through self-directed learning and the value of opt-in training, which fosters a culture of growth. However, while it touches on employee engagement, the primary focus is on the skills and practices of developers rather than broader strategies for enhancing team motivation and commitment.",
    "level": "Secondary"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-12T10:10:45",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the qualities and practices of developers in an Agile context, without a clear focus on product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T16:42:15",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of learning and engagement in the context of Agile development, highlighting the role of individual empowerment and self-directed learning, which are relevant to Agile Leadership. However, it primarily focuses on the skills and practices of developers rather than leadership roles or practices.",
    "level": "Tertiary"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T10:10:48",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on learning and engagement rather than the Daily Scrum or its specific practices.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T10:10:49",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than system configuration.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-12T10:10:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great agile developers, focusing on personal development, learning practices, and engagement rather than the strategic adoption of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-12T10:10:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and learning rather than the delivery of functional software.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-12T10:10:53",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-03-13T15:41:20",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of self-directed learning and empowerment within organisations, which aligns with the principles of self-organisation. However, it primarily focuses on the personal development of Agile developers rather than the broader team dynamics and practices of self-organisation. While there are relevant themes, the depth of discussion on self-organisation principles is limited.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T10:10:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the qualities and practices that differentiate average developers from great Agile developers, focusing on learning and engagement rather than remote working practices or challenges.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-12T10:10:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Lean Product Development principles or waste reduction.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-03-14T23:43:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the importance of engagement and self-directed learning, which are cultural elements that can influence organisational culture. However, it primarily focuses on individual developer growth rather than broader organisational culture themes. While it touches on aspects of culture, such as fostering a learning environment and the role of training, it lacks a comprehensive exploration of how these elements impact organisational agility or team dynamics.",
    "level": "Secondary"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T10:11:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than customer feedback integration.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T10:11:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Agile methodologies and developer engagement, with no mention of Azure Repos or related functionalities.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T10:11:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than transparency in Agile processes.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T10:11:04",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than the Definition of Done.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T10:11:06",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the differences between average and great developers, focusing on personal development and training rather than product strategy or methodologies.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T10:11:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training methods, without a clear connection to customer retention strategies.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T10:11:09",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Value Stream Mapping or Lean principles.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-03-14T23:45:10",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the qualities of a great Agile developer and the importance of continuous learning and engagement, which are relevant to Agile principles. However, it lacks a direct focus on strategic alignment, optimisation of delivery processes, or the integration of Lean principles. The discussion is more about personal development and training methodologies rather than strategic approaches within Agile frameworks.",
    "level": "Tertiary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-03-14T23:44:02",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 20,
    "final_score": 40.0,
    "reasoning": "The content discusses the importance of continuous learning and self-directed learning, which are relevant to fostering a culture of innovation. However, it primarily focuses on personal development and Agile practices rather than directly addressing the measurement and improvement of innovation capabilities within organisations. The mention of innovative training methods like flipped learning aligns with the category, but the overall emphasis is more on individual growth than on organisational innovation strategies.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-03-14T23:43:58",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 61.0,
    "reasoning": "The content discusses the qualities of a great Agile developer and touches on concepts like continuous learning and self-directed learning, which align with Agile principles. However, it lacks a direct focus on specific Agile frameworks or a comparative analysis of them, which limits its alignment with the category. The mention of Agile and Scrum courses indicates some relevance, but the primary focus is on personal development rather than the frameworks themselves.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T10:11:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great agile developers, focusing on individual learning and engagement rather than organisational scaling of agile practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-03-14T23:44:48",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content primarily focuses on individual development and the characteristics of a great Agile developer rather than team collaboration. While it touches on aspects of engagement and self-directed learning, which can indirectly relate to team dynamics, it lacks explicit discussions on team communication, shared ownership, or collaborative practices within Agile frameworks. The depth of discussion on team collaboration is minimal, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T10:11:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training methods, without a clear emphasis on customer satisfaction or related metrics.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-12T10:11:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training methods, without a clear emphasis on Lean principles or practices.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T10:11:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than on Cycle Time or its implications.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-03-14T23:45:13",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the qualities of a great Agile developer, emphasising engagement, continuous learning, and self-directed learning. While it touches on themes relevant to Agile practices, such as the importance of practice and learning methodologies, it lacks direct references to specific engineering practices like clean code, TDD, or CI/CD. The focus is more on personal development and training methodologies rather than the core principles of software engineering practices.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T10:11:25",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development, learning, and engagement rather than portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-11T10:12:34",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the qualities that differentiate an average developer from a great Agile developer, focusing on learning, engagement, and practice. While it touches on Agile methodologies and the importance of continuous learning, it lacks detailed exploration of specific software development practices or methodologies. The mention of Agile and Scrum indicates some relevance, but the overall discussion is more about personal development and engagement rather than concrete software engineering practices.",
    "level": "Secondary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-07T13:54:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the qualities that differentiate average developers from great agile developers, emphasising the importance of continuous learning and practice, which aligns with the principles of software craftsmanship. However, it primarily focuses on personal development and engagement rather than specific engineering practices or methodologies, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-12T10:11:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than the measurement or optimisation of work completion rates.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-12T10:11:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Azure Pipelines or related CI/CD practices.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-03-14T23:45:07",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the qualities of a great Agile developer, emphasising engagement, continuous learning, and self-directed learning, which align with Agile principles. However, it lacks direct references to the Agile Manifesto or its core values, and the focus is more on personal development rather than a deep exploration of Agile values themselves.",
    "level": "Secondary"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-12T10:11:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than automated testing principles or practices.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-12T10:11:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Agile development practices and the differences between average and great developers, without any focus on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T10:11:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the qualities and development of agile developers, without a clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-03-14T23:43:53",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the personal development of Agile developers and their engagement in learning rather than discussing change management strategies or practices. While it touches on themes of continuous improvement and self-directed learning, it lacks explicit discussions on organisational change management principles, stakeholder engagement, or leadership roles in transformation, which are central to the Change Management category.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-03-11T11:35:34",
    "ai_confidence": 72.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of continuous learning and self-directed training, which aligns with mentoring principles. It highlights the role of personal engagement in professional development, a key aspect of mentoring. However, while it touches on mentoring concepts, it lacks a direct focus on specific mentoring techniques or the mentor-mentee relationship, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-03-14T23:45:05",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses the qualities of a great Agile developer, emphasising engagement, continuous learning, and adaptation, which are aligned with empirical process control principles. However, it lacks direct references to empirical process control concepts and does not delve deeply into specific Agile methodologies or practices, resulting in a moderate confidence score.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-12T10:11:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on learning, engagement, and training rather than product validation methodologies or user feedback.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T10:11:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T10:11:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great agile developers, focusing on engagement, learning, and training rather than financial metrics or productivity analysis related to revenue per employee.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-11T14:40:13",
    "ai_confidence": 82.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 80.0,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content primarily focuses on the qualities and practices that differentiate average developers from great Agile developers, aligning closely with the themes of Agile methodologies and the importance of continuous learning and engagement. It discusses the significance of self-directed learning and innovative training approaches, which are relevant to the role of software developers in Agile contexts. The depth of discussion is substantial, providing insights into the mindset and practices that contribute to developer excellence within Agile frameworks.",
    "level": "Secondary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-12T10:11:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than Test First Development principles or practices.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-12T10:11:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and personal development rather than frequent software releases or related practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T10:11:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than estimation techniques or practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T10:11:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than troubleshooting technical issues.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-12T10:11:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on learning and engagement rather than the delivery of software increments or Agile practices.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T10:11:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training methods, with no mention of Windows or related topics.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T10:11:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the qualities of developers and their engagement in learning, without focusing on the Sprint Review process or its specific elements.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-12T10:11:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than Lead Time as a metric.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T10:12:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the qualities and practices of individual Agile developers rather than scaling Agile practices across multiple teams or at an enterprise level.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-11T16:29:32",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the transition from average to great Agile developers, emphasising practical learning, engagement, and adaptability, which aligns well with pragmatic thinking. It highlights real-world applications of Agile principles, such as self-directed learning and flipped learning methodologies, demonstrating a strong connection to the category. However, while it provides substantial insights, it lacks detailed case studies or specific problem-solving strategies, which slightly lowers the depth score.",
    "level": "Secondary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-03-14T23:44:36",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the qualities of a great Agile developer, emphasising engagement, continuous learning, and self-directed learning, which align with agile principles. However, it lacks explicit references to Agile frameworks or methodologies, and the focus is more on personal development rather than project management practices.",
    "level": "Secondary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-12T10:12:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on learning, engagement, and training rather than Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-03-14T23:44:27",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses the qualities of a great Agile developer, emphasising engagement, continuous learning, and self-directed learning, which align with Agile principles. It also touches on training methodologies like flipped learning, which can be linked to Agile strategies for fostering a culture of adaptability and continuous improvement. However, while it mentions Agile concepts, it does not delve deeply into strategic planning or organisational alignment, which slightly limits its overall depth in the context of Agile Strategy.",
    "level": "Secondary"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-12T10:12:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Continuous Delivery principles or practices.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T10:12:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on individual learning and engagement rather than the structure or dynamics of cross-functional teams.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T10:12:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T10:12:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development, engagement, and training rather than on sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-03-14T23:45:23",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the importance of engagement and self-directed learning, which are key aspects of team motivation. It highlights how fostering a culture of continuous learning and empowerment can enhance individual contributions within agile teams. However, while it touches on team dynamics, the primary focus is more on individual development rather than collective team motivation, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-14T23:44:20",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the qualities that differentiate average developers from great Agile developers, focusing on engagement, continuous learning, and self-directed learning, which are relevant to team performance. However, while it touches on aspects of Agile methodologies and training, it lacks a direct focus on team dynamics, collaboration, or specific Agile practices, which limits its depth in the context of team performance.",
    "level": "Tertiary"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T10:12:48",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training methods, without any mention of AI or its application in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T10:12:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and training rather than Kanban principles or scaling practices.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T10:12:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development, engagement, and training rather than Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T10:12:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and learning rather than working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-12T10:12:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T16:42:15",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the qualities that differentiate average developers from great Agile developers, touching on learning, engagement, and self-directed training, which are relevant to Agile transformation. However, it primarily focuses on individual development rather than broader Agile transformation strategies or methodologies.",
    "level": "Tertiary"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-12T10:12:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than technical debt management or its implications.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T10:12:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on learning, engagement, and training rather than the specific Scrum Values.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-03-14T23:44:29",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the development of individual Agile developers rather than discussing organisational change strategies or frameworks. While it touches on concepts like self-directed learning and engagement, which can relate to organisational culture, it lacks a direct focus on the broader organisational change processes, methodologies, or leadership roles that are central to the category. The discussion is more about personal development within Agile practices than about transforming an organisation as a whole.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-12T10:13:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than test automation principles or practices.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-12T10:13:04",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses the qualities and mindset of developers rather than focusing on Scrum principles, practices, or product development processes.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-03-14T23:44:40",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the qualities of a great Agile developer, focusing on engagement, continuous learning, and self-directed learning. While it touches on aspects of operational practices, such as fostering a culture of learning and the importance of practice, it lacks a direct focus on specific operational techniques or methodologies that enhance efficiency within Agile frameworks. The discussion is more about personal development and training approaches rather than concrete operational practices.",
    "level": "Tertiary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-12T10:13:08",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and engagement rather than empirical evidence or management practices.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T10:13:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the qualities and practices that differentiate average developers from great Agile developers, without a focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T10:13:11",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the qualities of great developers and their learning processes, without a clear focus on scaling Scrum principles or practices.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T10:13:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the qualities and practices of developers in an Agile context, without a specific focus on the Scrum Master role or responsibilities.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T10:13:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on individual learning and engagement rather than large-scale Agile practices or frameworks.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T10:13:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than forecasting methodologies or practices.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-03-14T23:44:58",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the qualities of a great Agile developer and the importance of continuous learning and engagement, which are relevant to technical leadership. However, it primarily focuses on personal reflections and experiences rather than providing structured guidance or strategies for leading teams. The mention of training methodologies like flipped learning aligns with fostering a culture of learning, but the overall depth and direct focus on technical leadership principles are limited.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T10:13:17",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on learning, engagement, and training rather than methodologies for identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T10:13:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great agile developers, focusing on learning, engagement, and training methods, without a clear connection to Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-03-14T23:45:03",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the qualities of a great Agile developer and touches on concepts like continuous learning and self-directed learning, which are relevant to Agile principles. However, it lacks a direct focus on Agile Planning methodologies, techniques, or specific practices. The discussion is more about personal development and engagement rather than the structured planning processes central to Agile Planning.",
    "level": "Tertiary"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-12T10:13:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and personal development rather than accountability within teams.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-12T10:13:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than on Minimum Viable Products or related concepts.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T10:13:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development, learning, and engagement rather than collaboration tools or their impact on team dynamics.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T10:13:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training methods rather than psychological safety.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T10:13:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the qualities and practices that differentiate average developers from great agile developers, focusing on learning, engagement, and training rather than deployment methodologies.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T10:13:28",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the qualities and practices of developers in an Agile context, but does not focus specifically on Scrum Team dynamics, roles, or collaboration techniques.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-03-14T23:44:34",
    "ai_confidence": 62.0,
    "ai_mentions": 3,
    "ai_alignment": 25,
    "ai_depth": 34,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the qualities that differentiate average developers from great Agile developers, focusing on engagement, continuous learning, and self-directed learning. While it touches on important aspects of software craftsmanship, such as the importance of practice and innovative training methods, it primarily centres on personal development and Agile methodologies rather than specific technical practices or principles of software design and architecture. The discussion lacks depth in technical specifics, which affects the overall alignment with the 'Technical Mastery' category.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T10:13:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the qualities of developers and learning practices, with no focus on release management processes or strategies.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T10:13:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T10:13:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and training rather than analysing trends in Agile methodologies or practices.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-03-13T16:49:37",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the qualities that differentiate average developers from great Agile developers, emphasising engagement, continuous learning, and self-directed growth, which align with Agile principles. It touches on the importance of adaptability and fostering a culture of learning, reflecting the Agile mindset. However, it primarily focuses on personal development rather than broader Agile philosophy discussions, which slightly limits its depth in the context of Agile as a whole.",
    "level": "Secondary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-12T10:13:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than version control practices.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T10:13:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and personal development rather than Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T10:13:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the qualities and practices that differentiate average developers from great agile developers, without a focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T10:13:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great developers, focusing on engagement, learning, and training rather than asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T10:13:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great agile developers, focusing on learning, engagement, and training rather than market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T10:13:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great agile developers, focusing on personal development and engagement rather than long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-03-11T17:42:09",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content extensively discusses the importance of continuous learning and adaptation in the context of Agile development. It highlights the significance of a growth mindset, the value of self-directed learning, and the role of practice and engagement in enhancing skills. The author draws parallels with martial artists and musicians to emphasise the need for relentless practice and innovative training methods, such as flipped learning. Overall, the content aligns well with the principles of Continuous Learning, making it a primary focus rather than a secondary mention.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-12T12:39:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than deployment frequency or related optimisation strategies.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T10:09:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than decision-making processes in uncertain environments.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-03-14T23:44:11",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the individual development of Agile developers rather than discussing enterprise-level agility. While it touches on themes of continuous learning and engagement, it lacks a broader organisational context and does not address frameworks, structures, or leadership roles that support enterprise agility.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-12T10:09:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Agile principles and the development of skills in that context, without a clear focus on Lean methodologies or principles.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-03-14T23:45:20",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 10,
    "final_score": 39.0,
    "reasoning": "The content discusses the journey of becoming a great Agile developer, emphasising continuous learning and adaptation, which aligns with the themes of resilience and change. However, it primarily focuses on individual development rather than organisational strategies or frameworks, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T10:09:47",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than installation or configuration of tools or software.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-12T10:09:48",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than the interplay between code quality and complexity.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-12T10:09:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and personal development rather than optimising work throughput or flow efficiency.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T10:09:50",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than AI and automation in Agile practices.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-14T23:44:45",
    "ai_confidence": 42.0,
    "ai_mentions": 3,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the qualities of great Agile developers and the importance of continuous learning and engagement, which are relevant to product delivery. However, it primarily focuses on personal development and training methodologies rather than the end-to-end process of delivering software products. While Agile principles are mentioned, the discussion lacks depth in areas such as deployment, testing, and cross-functional team dynamics, which are crucial for product delivery.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-03-14T23:44:32",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses the qualities of a great Agile developer and touches on concepts like engagement, continuous learning, and self-directed learning, which are relevant to Agile principles. However, it lacks a direct focus on product management aspects such as the role of the Product Owner, backlog prioritisation, or stakeholder engagement, which are crucial for the Agile Product Management category.",
    "level": "Tertiary"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-06T15:56:12",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content explicitly discusses the importance of learning and adapting in the context of becoming a great Agile developer. It highlights the role of self-directed learning, practice, and engagement, which are core themes of the Discovery and Learning category. The author shares personal insights and examples, such as the value of training budgets and the concept of flipped learning, which further emphasises the depth of discussion on fostering a culture of continuous learning. Overall, the content aligns well with the category's focus on innovation and learning processes.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T10:09:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development, engagement, and training methods rather than Systems Thinking principles or applications.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T10:09:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and practice rather than complexity science or its principles.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T10:10:00",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and personal development rather than transparency and accountability within Agile teams.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-14T23:44:05",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 20,
    "final_score": 58.0,
    "reasoning": "The content discusses the importance of engagement and continuous learning for Agile developers, touching on training methodologies like flipped learning. However, it lacks direct references to specific Agile tools or frameworks, and the focus is more on personal development rather than practical techniques or tooling. While it aligns with the themes of self-directed learning and training, it does not provide in-depth discussions on specific tools or methodologies that enhance Agile practices.",
    "level": "Tertiary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-03-14T23:44:00",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content discusses the journey of becoming a great Agile developer and mentions training classes, but it lacks direct references to specific events or presentations. While it aligns conceptually with the themes of learning and development in Agile, it does not focus on actual events or structured presentations, which diminishes its relevance to the category.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T16:42:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of learning and adaptability in the context of Agile development, which aligns with the principles of market adaptability. However, it primarily focuses on individual developer skills rather than broader organisational strategies or practices.",
    "level": "Tertiary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-03-14T23:44:16",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the qualities of a great Agile developer and touches on concepts like engagement, continuous learning, and self-directed learning. However, it primarily focuses on personal reflections and anecdotes rather than providing actionable insights or directly referencing established Agile frameworks. While it mentions Agile and Scrum, the discussion lacks depth in terms of specific methodologies or practices, making it more of a personal narrative than a structured exploration of Agile principles.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-12T10:10:07",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than DevOps principles or practices.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-12T10:10:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the qualities of agile developers and learning practices, without specific reference to Azure DevOps tools or methodologies.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T10:10:09",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and learning rather than specific products or literature.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-17T16:42:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of learning, adaptability, and engagement in the context of agile development, which aligns with the principles of business agility. However, it primarily focuses on individual developer skills rather than broader organisational practices or strategies.",
    "level": "Tertiary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T10:10:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training rather than Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-03-14T23:44:18",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the qualities of a great Agile developer and the importance of engagement and self-directed learning, which are relevant to value delivery. However, it primarily focuses on personal reflections and training methodologies rather than specific strategies or practices that enhance customer value or align product development with customer needs. The discussion lacks depth in terms of established value delivery frameworks and methodologies.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-17T16:42:15",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of continuous learning and practice in developing technical skills, which aligns with the principles of technical excellence. However, it primarily focuses on the broader concept of engagement and personal development rather than specific engineering practices or methodologies.",
    "level": "Tertiary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-14T23:44:55",
    "ai_confidence": 72.0,
    "ai_mentions": 3,
    "ai_alignment": 80.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the qualities of a great Agile developer, emphasising engagement, continuous learning, and self-directed learning, which align with the principles of organisational agility. It mentions the importance of fostering a culture of learning and adaptability, which are key themes in the category. However, while it touches on these concepts, it primarily focuses on individual developer traits rather than broader organisational strategies or frameworks, leading to a slightly lower depth score.",
    "level": "Secondary"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-03-07T13:54:05",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content primarily focuses on personal reflections and insights regarding the qualities that differentiate an average developer from a great Agile developer. It discusses the importance of engagement, learning, and self-directed training, which aligns well with the Personal category's emphasis on individual experiences and insights related to Agile methodologies. The author shares personal anecdotes and interpretations, particularly about the value of practice and self-directed learning, which adds depth to the discussion. However, while the content is rich in personal insights, it also touches on broader Agile concepts, which slightly detracts from its primary focus on personal experiences.",
    "level": "Secondary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-10T12:10:08",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 20,
    "final_score": 80.0,
    "reasoning": "The content primarily discusses the differences between average and great Agile developers, focusing on the importance of engagement, learning, and self-directed training. It highlights the human factors that influence developer performance and the processes that can enhance individual growth within a team context. The mention of training budgets and self-service learning aligns well with the category's emphasis on improving communication and feedback loops, as well as fostering a culture of continuous improvement. Overall, the content is deeply rooted in the interplay between people and processes, justifying a high confidence score.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-14T23:44:13",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the qualities of great Agile developers, focusing on engagement, continuous learning, and self-directed learning. While it touches on aspects of team dynamics and organisational culture, it does not explicitly address the interplay between social and technical systems or provide a detailed exploration of sociotechnical principles. The primary focus remains on individual developer traits rather than the broader sociotechnical context.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T10:10:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and learning rather than industry news or reviews.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-03-14T23:44:43",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses the journey of developers towards Agile excellence, focusing on engagement, continuous learning, and self-directed learning. However, it lacks explicit discussions on metrics, data analysis, or feedback mechanisms, which are central to the 'Metrics and Learning' category. While it touches on themes of continuous improvement and learning, it does not provide detailed insights into how metrics can be utilised for evidence-based decision-making or team dynamics.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-12T10:10:28",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development, learning, and engagement rather than the management of software applications throughout their lifecycle.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T10:10:29",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development, engagement, and training rather than Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-03-14T23:44:25",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 22,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses engagement and self-directed learning, which are relevant to organisational psychology. However, it primarily focuses on Agile development practices and methodologies rather than delving deeply into psychological theories or principles. While there are mentions of motivation and learning environments, the overall emphasis is on technical skills and training methods, which detracts from a stronger alignment with organisational psychology.",
    "level": "Tertiary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-03-10T12:10:05",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses the qualities that differentiate an average developer from a great agile developer, focusing on personal engagement, learning, and adaptability. While it touches on aspects of leadership, such as self-directed learning and fostering an environment for growth, it primarily centres on individual developer skills rather than leadership practices or strategies. The mention of a training budget and self-service learning aligns with leadership in terms of empowering individuals, but the overall focus remains on personal development rather than leadership dynamics or team performance.",
    "level": "Tertiary"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-10T14:19:30",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 65.0,
    "reasoning": "The content discusses the qualities that differentiate an average developer from a great Agile developer, touching on themes of learning, engagement, and self-directed training, which align with Agile principles. However, it lacks direct references to specific frameworks like Scrum or Kanban, and the depth of discussion on Agile practices is limited, focusing more on personal development rather than team dynamics or methodologies.",
    "level": "Secondary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T22:50:52",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the qualities of great Agile developers and the importance of continuous learning and engagement, which are relevant to the Agile Product Operating Model. However, it primarily focuses on individual developer skills rather than the broader organisational framework or principles of the Agile Product Operating Model.",
    "level": "Tertiary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T22:50:54",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses themes of engagement, self-directed learning, and adaptive practices in the context of Agile development, which aligns with some principles of BetaCodex, but it primarily focuses on individual developer growth rather than organisational design.",
    "level": "Tertiary"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T22:50:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Agile development and personal development of developers, without a clear focus on platform engineering or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T22:50:56",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on personal development and learning rather than the principles or implementation of the One Engineering System.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:57:28",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Agile methodologies and developer engagement without any mention of Internal Developer Platforms or their related concepts.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:57:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the differences between average and great Agile developers, focusing on learning, engagement, and training methods, without any mention of AI or its application in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-04T11:22:44",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 50,
    "final_score": 43.0,
    "reasoning": "The content discusses the qualities of great agile developers and touches on learning and engagement, which are relevant to Scrum principles. However, it lacks a direct focus on Scrum roles, events, or artifacts, and does not delve deeply into Scrum-specific practices. The mention of 'agile' is present but is not explicitly tied to Scrum, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T16:02:12",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 11.0,
    "reasoning": "The content primarily discusses the qualities of great Agile developers and their learning journeys, with no explicit mention of the Shift-Left Strategy or its principles. While it touches on continuous learning and engagement, these themes do not directly align with integrating testing, security, or compliance earlier in the software development lifecycle, which is the core of the Shift-Left Strategy.",
    "level": "Ignored"
  }
}
