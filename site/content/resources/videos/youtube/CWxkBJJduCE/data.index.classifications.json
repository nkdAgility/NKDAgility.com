{
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-13T19:56:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are specific software development practices rather than principles or strategies directly related to business agility.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-13T19:56:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of TDD and pair programming without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-13T19:56:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, with no clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-03-06T13:28:46",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses test-driven development (TDD) and pair programming, both of which are relevant to software code quality and complexity management. It highlights how TDD contributes to better architecture by focusing on necessary features, aligning with the principles of maintainability and performance. The mention of pair programming addresses best practices in software development, which is a core theme of the category. However, while the content touches on these topics, it lacks a deeper exploration of complexity theory and its application in software systems, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-13T19:56:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, focusing on software architecture rather than organisational resilience or change management.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-13T19:56:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, which are software development practices rather than methodologies or practices specifically related to the end-to-end process of delivering usable software products.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-03-10T13:53:54",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 57.0,
    "reasoning": "The content discusses pair programming and test-driven development (TDD), which can contribute to learning and innovation in software development. However, it primarily focuses on the productivity aspects and architectural benefits rather than explicitly exploring methodologies for fostering a culture of discovery and learning. The mention of productivity and architecture does not directly align with the core themes of the category, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-03-07T12:48:29",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses practical techniques such as Test-Driven Development (TDD) and Pair Programming, which are relevant to Agile practices. However, it lacks explicit mentions of specific tools or methodologies associated with Agile and DevOps, and the discussion is more focused on the philosophy behind these techniques rather than their practical application in a tooling context. The depth of discussion is moderate, providing insights into the benefits of these practices but not delving into specific frameworks or metrics for implementation.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-13T19:57:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development practices such as TDD and pair programming, without reference to specific events or presentations.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-13T19:57:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are not directly related to market adaptability strategies or practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-13T19:57:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not directly related to scaling Agile practices across multiple teams or organisational structures.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-13T19:57:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, which are not central to Value Stream Management principles.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-13T19:57:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development practices such as TDD and pair programming, without a focus on decision-making processes or uncertainty.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-03-06T14:42:31",
    "ai_confidence": 82.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 32.0,
    "non_ai_confidence": 0,
    "final_score": 74.0,
    "reasoning": "The content primarily focuses on Test-Driven Development (TDD) and its impact on software architecture, which aligns well with the principles of Technical Excellence. It discusses the benefits of TDD in creating better architectures and highlights the role of pair programming in enhancing code quality. However, while it touches on these key topics, the depth of discussion could be expanded to fully explore the methodologies and practices that enhance agility in software development. Overall, the content is relevant and provides a solid foundation, but it could benefit from a more comprehensive exploration of the themes outlined in the category.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-13T19:57:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not related to installation or configuration processes.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-13T19:57:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are software development practices rather than the management of the application lifecycle.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-13T19:57:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices such as test-driven development and pair programming without a clear focus on value delivery principles or methodologies.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-13T19:57:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, focusing on software architecture rather than metrics, data analysis, or continuous improvement methodologies.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-13T19:57:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are specific software development practices rather than broader organisational agility strategies or frameworks.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-13T19:57:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-13T19:57:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development practices, specifically TDD and pair programming, without reference to specific products or literature.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-13T19:57:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are not central to DevOps principles and practices.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-03-10T17:50:22",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content briefly touches on the interconnectedness of productivity and architecture in software development, suggesting a systems perspective. However, it lacks explicit discussions on Systems Thinking principles, techniques, or frameworks. The focus is primarily on TDD and pair programming rather than a holistic analysis of organisational dynamics.",
    "level": "Tertiary"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-10T11:36:36",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 24,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content discusses pair programming, which directly relates to team dynamics and collaboration, a key topic in the 'People and Process' category. It highlights the human factors influencing productivity and the benefits of collaboration, aligning well with the core themes. However, the focus is more on technical practices rather than a comprehensive exploration of processes or team interactions, which slightly limits the depth of discussion.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-13T19:57:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, which are not specific to Azure DevOps.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-13T19:57:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, focusing on software architecture rather than organisational agility or broader enterprise-level practices.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T12:02:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, which are technical practices rather than a focus on the Agile Product Operating Model or value delivery.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-17T12:02:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, without a clear focus on Evidence-Based Management principles or practices.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-17T12:02:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, focusing on productivity and architecture rather than complexity science or its principles.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-17T12:02:43",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not directly related to AI and automation in Agile practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-17T12:02:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses concepts of test-driven development and pair programming without focusing on industry news, updates, or reviews.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-17T12:02:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are specific practices within Agile methodologies.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:02:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not central to the principles of BetaCodex.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-03-11T00:17:45",
    "ai_confidence": 35.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content briefly touches on productivity and the benefits of pair programming, which can relate to flow efficiency in terms of reducing future problems. However, it lacks explicit discussions on flow efficiency principles, metrics, or techniques for optimising throughput. The focus is more on software architecture and development practices rather than directly addressing flow efficiency concepts.",
    "level": "Quaternary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-11T09:49:19",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses pair programming and test-driven development (TDD) in the context of software architecture, which touches on technical practices but lacks a strong focus on the sociotechnical interplay. While it hints at productivity and team dynamics, it does not explicitly address organisational culture, communication, or the broader sociotechnical implications of these practices. Therefore, while there is some relevance, it does not meet the primary focus required for a higher confidence score.",
    "level": "Quaternary"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-17T12:02:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-17T12:03:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are technical practices rather than Agile product management principles.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:03:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not central to platform engineering principles.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T12:03:03",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are not central to the One Engineering System framework.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-17T12:03:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices such as test-driven development and pair programming, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:49:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices such as test-driven development and pair programming, without a focus on leadership themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-17T13:49:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not central to the frameworks of Scrum, Kanban, Lean, or Agile practices.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on Test-driven development and pair programming, without any mention of Kanban principles or scaling Kanban practices.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are software development practices, rather than system configuration methodologies.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming without reference to scaling Agile practices across multiple teams or at an enterprise level.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices like TDD and pair programming without a central focus on Agile philosophy principles such as customer collaboration or adaptability.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming with no clear focus on change management principles or strategies.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and pair programming with a focus on architectural improvements, but does not specifically address test automation practices or tools.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on test-driven development and pair programming rather than on Lead Time or its measurement.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices such as TDD and pair programming without addressing team motivation or dynamics.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses test-driven development and pair programming, which are not central to Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming without any focus on Azure Pipelines, CI/CD practices, or related topics.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, with no clear focus on Definition of Ready criteria or preparation for sprint planning.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, with no mention of Azure Repos or relevant source control topics.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and pair programming, which are technical practices that contribute to software craftsmanship and architecture.",
    "level": "Secondary"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software development practices such as test-driven development and pair programming, which do not relate directly to customer retention strategies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on test-driven development and pair programming, which are not directly related to the principles of frequent software releases.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mostly revolves around test-driven development and pair programming, which are not central to Lean Thinking principles.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses primarily on software architecture and methodologies like TDD and pair programming, without directly addressing troubleshooting or problem-solving techniques related to technical issues.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses practices such as test-driven development and pair programming that contribute to software quality and functionality, but it primarily focuses on software architecture and productivity rather than directly addressing the concept of working software.",
    "level": "Tertiary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on test-driven development and pair programming, which are not directly related to release management processes.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-driven Development (TDD) and Pair Programming, with no clear focus on methodologies or processes related to organisational change.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-03-11T13:07:25",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content discusses pair programming and test-driven development (TDD), which are practices that can contribute to continuous learning by promoting collaboration and improving code quality. However, the primary focus is on the technical aspects of software architecture rather than explicitly addressing the principles of continuous learning, such as growth mindset or knowledge sharing. While there are elements that suggest a learning approach, they are not deeply explored, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses test-driven development and pair programming, which are not related to Scaling Scrum practices.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development techniques like Test-Driven Development (TDD) and pair programming, without a focus on leadership decisions or evidence-based practices related to leadership.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on software development practices (TDD and pair programming) rather than strategic digital transformation initiatives or the integration of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, with no clear focus on remote work or Agile practices in a distributed environment.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are not directly focused on empirical process control principles, and lacks significant connection to Agile methodologies such as transparency, inspection, or adaptation.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on software development practices like TDD and pair programming without addressing customer satisfaction or the customer experience.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and pair programming without a clear focus on hypothesis-driven experimentation within Agile workflows.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices like test-driven development and pair programming, without focusing on leadership roles or Agile principles as central topics.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development and Pair Programming, which are not directly related to customer feedback mechanisms.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, with no clear focus on estimation techniques or practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not specific to the Product Owner role.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and pair programming, which are practices in software development, rather than analyzing trends in Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices such as test-driven development and pair programming, which are more focused on technical code practices rather than the strategic aspects of product management.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not related to backlog refinement.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, which are more focused on software engineering practices rather than Lean Product Development principles such as waste reduction and customer feedback.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and pair programming, which are primarily team-level practices and do not pertain to principles of scaling Agile across an organization.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-03-06T13:28:42",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses test-driven development (TDD) and pair programming, which are both practices that align with the principles of software craftsmanship and quality assurance. It highlights the importance of creating better architectures and the long-term benefits of pair programming, which ties into continuous improvement and engineering processes. However, while these topics are relevant, the discussion lacks depth in exploring broader engineering excellence themes such as CI/CD practices or metrics for assessing performance, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical implementation details related to TDD and pair programming, which are not central to product strategy.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on Test-driven development and pair programming, which are not specific to Scrum Teams or their dynamics.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses test-driven development and pair programming, with no clear focus on the Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming without a focus on Agile transformation principles, frameworks, or methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses Test-Driven Development (TDD) and Pair Programming, which are relevant to improving operational practices in software development. However, the focus is more on the theoretical implications of TDD and pair programming rather than detailed operational techniques and strategies.",
    "level": "Tertiary"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, which are software development practices, not deployment strategies.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, with no clear focus on working agreements or team norms.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on technical practices like Test-Driven Development and Pair Programming without discussing alignment with Agile strategy or principles.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-03-11T11:12:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 66.0,
    "reasoning": "The content discusses Test-Driven Development (TDD) and pair programming, which are modern engineering practices relevant to software developers. However, it lacks explicit references to Agile or DevOps methodologies, which are central to the category. The discussion is somewhat detailed but does not fully explore the broader implications of these practices within Agile frameworks or team dynamics.",
    "level": "Secondary"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, which are key topics within the Engineering Practices category. The focus on improving architecture through TDD and the collaboration benefits of pair programming aligns with the category's principles.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on technical practices like test-driven development and pair programming rather than long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test Driven Development and Pair Programming, which are not directly related to Scrum Values.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming rather than cross-functional teams.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-driven development and pair programming, which are not tools designed to enhance communication and coordination within Agile teams.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on software development practices like test-driven development and pair programming, which are not directly related to entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming without a focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "Content discusses practices like pair programming and its impact on architecture, which is relevant to technical leadership, but it does not primarily focus on guiding teams or leadership strategies.",
    "level": "Tertiary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, not focusing on transparency or its role in Agile processes.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, focusing on software architecture rather than innovation capabilities or evidence-based management.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and pair programming, not focusing on accountability within Agile teams.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content mainly discusses test-driven development and pair programming, which are practices but does not focus on Agile frameworks themselves.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses pair programming, which relates to team dynamics and collaboration, but it primarily focuses on software architecture and productivity rather than team performance specifically.",
    "level": "Tertiary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and pair programming, rather than focusing on the measurement and optimization of throughput in Agile or DevOps contexts.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on software architecture, test-driven development, and pair programming, with no mention of the Windows operating system or topics related to it.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on test-driven development (TDD) and pair programming, with no clear emphasis on acceptance test driven development or its principles.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses technical processes and methodologies like TDD and pair programming, which do not align with the human aspects of employee engagement.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily focuses on test-driven development and pair programming, which are practices in software development, but it does not address agile project management principles, methodologies, or frameworks directly.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, without a focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily focuses on test-driven development and pair programming, which do not directly relate to Agile planning tools.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on test-driven development and pair programming, without discussing principles or practices related to Continuous Delivery.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development (TDD) and pair programming, which are technical implementation practices, rather than focusing on product discovery methodologies or customer needs.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software architecture, test-driven development, and pair programming, which are not central to the Definition of Done.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses technical practices of TDD and pair programming without addressing organisational culture.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses test-driven development and pair programming, which are unrelated to Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 20,
    "non_ai_confidence": 0,
    "final_score": 18.0,
    "reasoning": "The content discusses aspects of productivity and architectural decisions in software development, but it primarily focuses on TDD and pair programming rather than structured decision-making principles or methodologies.",
    "level": "Quinary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming as methodologies that impact software architecture and engineering practices.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices such as TDD and pair programming without a clear connection to revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software architecture and pair programming, which are unrelated to Product Backlog management.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on test-driven development and pair programming, which are not directly related to Scrum product development processes, roles, or principles.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to efficiency and productivity through practices like pair programming and test-driven development, which align with Lean thinking principles, though it does not directly focus on Lean as a primary topic.",
    "level": "Tertiary"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming in relation to software architecture, with no clear focus on psychological safety.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development practices like TDD and pair programming, without a direct focus on sensemaking, complexity interpretation, or decision-making processes in organizational contexts.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development (TDD) and pair programming rather than the principles and practices of Agile Planning.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Test-driven Development (TDD) and Pair Programming without focusing on Site Reliability Engineering principles or practices.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are not central to Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on Test-Driven Development (TDD) and pair programming, which are software development practices rather than Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and pair programming, which are not directly related to modern source control practices.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly discusses test-driven development and pair programming without a focus on validating product ideas or user engagement.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses practices like pair programming and focusing on necessities, which are aligned with Agile principles such as collaboration and emphasizing value. However, it primarily centers around specific development practices rather than the core Agile values and principles themselves.",
    "level": "Tertiary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software architecture, Test-Driven Development, and pair programming, which are not focused on portfolio management.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses concepts related to systems thinking in the context of software development, particularly how pair programming and test-driven development can influence architecture and productivity as a whole system. However, it primarily focuses on software practices rather than explicitly on organisational dynamics.",
    "level": "Tertiary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on test-driven development and pair programming, with no clear discussion on deployment frequency or Agile/DevOps practices directly related to deployment intervals.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming rather than strategic approaches within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content focuses on test-driven development and pair programming, which are not directly related to AI applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses software architecture, test-driven development, and pair programming without mentioning forecasting, Agile methodologies, or relevant metrics.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of Test-Driven Development (TDD) and Pair Programming, without a focus on mentoring or coaching.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on test-driven development and pair programming, with no discussion of Sprint Reviews or related Scrum processes.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses Test-Driven Development (TDD) as a key aspect of creating better software architectures, indicating a significant focus on TDD principles and its impact on the development process, but it also touches on broader topics like pair programming and productivity, which makes TDD a major but secondary theme.",
    "level": "Tertiary"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-driven Development (TDD) and pair programming, without a substantial focus on automated testing methodologies or practices itself.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content touches on the long-term benefits of pair programming and test-driven development in terms of addressing potential problems, which indirectly relates to the concept of technical debt, but the primary focus is on programming practices rather than explicit discussions of technical debt.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses practical problem-solving techniques related to software architecture, specifically the impact of test-driven development and pair programming. While it touches on real-world applications and collaborative approaches, it does not primarily focus on Agile, Scrum, or DevOps principles.",
    "level": "Tertiary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development practices rather than strategies or discussions related to market share.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on Test-Driven Development (TDD) and Pair Programming rather than on coaching practices or principles. The discussion does not prominently feature themes related to the facilitation of growth and development typical in coaching contexts.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices (TDD and pair programming) without a focus on the Scrum Master role or related responsibilities.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, without a focus on Cycle Time as a metric or its implications.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and pair programming, which are unrelated to Value Stream Mapping.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming without focusing on the delivery of software increments or Agile processes.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on test-driven development and pair programming, with no clear discussion on Minimum Viable Product or its related principles.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses TDD in relation to software architecture and mentions benefits associated with it, but focuses significantly on pair programming and does not detail TDD principles comprehensively.",
    "level": "Secondary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses pair programming, which involves collaboration between team members, highlighting aspects of teamwork and shared ownership. However, it primarily focuses on test-driven development and architectural decisions, making collaboration a secondary theme.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-17T13:49:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily focuses on Test-Driven Development (TDD) and pair programming, which are not central to Behaviour Driven Development (BDD).",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are not central to the concept of Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses test-driven development and pair programming, with no mention of AI or its application in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-06T14:42:26",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 20.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 22.0,
    "reasoning": "The content briefly touches on concepts related to collaboration and productivity, which are relevant to Scrum principles, but it primarily focuses on test-driven development (TDD) and pair programming without explicitly discussing Scrum roles, events, or artifacts. The alignment with Scrum is minimal, as it does not delve into the Scrum framework or its core themes, resulting in a low confidence score.",
    "level": "Quaternary"
  }
}
