{
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-13T19:56:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are specific software development practices rather than principles or strategies directly related to business agility.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-13T19:56:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of TDD and pair programming without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-13T19:56:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, with no clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-13T19:56:54",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the impact of test-driven development (TDD) and pair programming on software architecture, which relates to code quality and complexity. However, the primary focus is on the practices themselves rather than a deep exploration of complexity theory or its principles.",
    "level": "Secondary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-13T19:56:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, focusing on software architecture rather than organisational resilience or change management.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-13T19:56:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, which are software development practices rather than methodologies or practices specifically related to the end-to-end process of delivering usable software products.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-13T19:56:58",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses pair programming and test-driven development (TDD) in the context of improving software architecture, which implies a learning aspect. However, the primary focus is on productivity and code quality rather than explicit methodologies for discovery and learning.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-13T19:57:01",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses practical techniques such as Test-Driven Development (TDD) and Pair Programming, which are relevant to Agile practices. However, it does not delve deeply into specific tools or methodologies, making it a secondary theme rather than the primary focus.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-13T19:57:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development practices such as TDD and pair programming, without reference to specific events or presentations.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-13T19:57:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are not directly related to market adaptability strategies or practices.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-13T19:57:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not directly related to scaling Agile practices across multiple teams or organisational structures.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-13T19:57:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, which are not central to Value Stream Management principles.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-13T19:57:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses software development practices such as TDD and pair programming, without a focus on decision-making processes or uncertainty.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-13T19:57:11",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses Test-Driven Development (TDD) and pair programming, both of which are key engineering practices that enhance code quality and architecture. It focuses on the benefits of these methodologies in improving software architecture and overall productivity, aligning well with the principles of technical excellence.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-13T19:57:12",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses test-driven development and pair programming, which are not related to installation or configuration processes.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-13T19:57:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are software development practices rather than the management of the application lifecycle.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-13T19:57:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices such as test-driven development and pair programming without a clear focus on value delivery principles or methodologies.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-13T19:57:16",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, focusing on software architecture rather than metrics, data analysis, or continuous improvement methodologies.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-13T19:57:19",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and pair programming, which are specific software development practices rather than broader organisational agility strategies or frameworks.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-13T19:57:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses Test-Driven Development (TDD) and Pair Programming, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-13T19:57:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses software development practices, specifically TDD and pair programming, without reference to specific products or literature.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-13T19:57:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and Pair Programming, which are not central to DevOps principles and practices.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-13T19:57:47",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the interconnectedness of productivity and architecture in software development, which aligns with Systems Thinking principles, but it primarily focuses on TDD and pair programming.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-13T19:57:49",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "Content discusses pair programming and its impact on productivity, which relates to team dynamics and collaboration, but primarily focuses on technical aspects of TDD and software architecture.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-13T19:57:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, which are not specific to Azure DevOps.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-13T19:57:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Test-Driven Development (TDD) and pair programming, focusing on software architecture rather than organisational agility or broader enterprise-level practices.",
    "level": "Ignored"
  }
}
