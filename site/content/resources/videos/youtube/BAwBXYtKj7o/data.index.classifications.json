{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T09:14:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T09:14:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on hypothesis-driven experimentation or Agile workflows.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T09:14:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on entrepreneurship principles or practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-12T09:15:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, with no clear focus on the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T09:15:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing and software engineering practices, with no clear focus on Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T09:15:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T09:15:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on coaching or facilitating growth and development within teams or individuals.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T09:15:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without a clear focus on evidence-based leadership principles or empirical decision-making.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T09:15:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and software engineering processes, with no focus on employee motivation, commitment, or engagement strategies.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-12T09:15:09",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses technical aspects of automated testing and software engineering practices, lacking a focus on product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T09:15:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to automated testing and software engineering without addressing leadership roles or practices within Agile contexts.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T09:15:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-12T09:15:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on system configuration or related methodologies.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving software quality and operational efficiency, which aligns with aspects of digital transformation. However, the primary focus is on technical debt management and testing strategies rather than a comprehensive discussion on digital transformation initiatives or strategies.",
    "level": "Tertiary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-02-12T09:15:18",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of automated testing in delivering high-quality software, which aligns with the principles of working software. It emphasises the need for functional software that meets user requirements and the role of testing in ensuring software quality, making it a central theme.",
    "level": "Secondary"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses the importance of automated testing and its impact on software quality, which indirectly relates to decision-making in terms of choosing testing strategies and methodologies. However, the primary focus is on technical aspects of testing rather than structured decision-making processes.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-12T09:15:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T09:15:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on remote working or Agile methodologies.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its role in improving efficiency and quality in software development, which aligns with Lean principles of minimising waste and maximising value. However, the primary focus is on technical debt management and testing strategies rather than Lean Product Development specifically.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T09:15:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical practices related to automated testing and software engineering, without a clear focus on organisational culture or its influence on agility and transformation.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T09:15:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on customer feedback integration or feedback loops.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-12T09:15:30",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, with only a brief mention of Azure DevOps features, which does not focus on Azure Repos specifically.",
    "level": "Ignored"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T09:15:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its benefits in software engineering, without a focus on transparency or related Agile practices.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-12T09:15:38",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on the Definition of Done or its criteria.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T09:15:40",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and technical implementation details, with no clear focus on product strategy methodologies or frameworks.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T09:15:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on customer retention strategies or user engagement.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-12T09:15:42",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses the importance of automated testing and its role in improving software quality and delivery processes, which aligns with strategic approaches in Agile and DevOps. However, the primary focus is on technical aspects of testing rather than a clear strategic framework or alignment with organisational goals.",
    "level": "Tertiary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated testing and its role in improving software quality and efficiency, which relates to innovation in practices. However, it primarily focuses on technical aspects of testing rather than a comprehensive exploration of the Ability to Innovate framework or strategies.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T09:15:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing and its importance in software engineering, without a clear focus on Agile frameworks or their principles.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T09:15:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without addressing scaling agile practices or organisational agility.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-12T09:15:50",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its benefits for software engineering, without a clear focus on team collaboration or dynamics within Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T09:15:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without a clear focus on customer satisfaction or related strategies.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving efficiency and quality, which aligns with Lean principles of minimising waste and enhancing value delivery. However, the primary focus is on testing strategies rather than Lean Thinking itself.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-12T09:15:54",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its benefits, with no clear focus on Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-12T09:15:56",
    "ai_confidence": 85,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses the importance of automated testing, TDD, and the need for efficient test infrastructure, which are all central themes in engineering practices. It emphasizes clean code principles, automation, and strategies for improving software quality, aligning closely with the key topics outlined in the category description.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T09:15:57",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on portfolio management or alignment of projects with organisational strategy.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-02-12T09:15:59",
    "ai_confidence": 90,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "Content primarily discusses automated testing, its importance in software engineering, and methodologies like TDD, which are central to software development practices.",
    "level": "Primary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-12T09:16:01",
    "ai_confidence": 90,
    "non_ai_confidence": 20,
    "final_score": 83.0,
    "reasoning": "The content primarily discusses automated testing, its importance in software engineering, and strategies for improving testing practices, which aligns closely with the principles of software craftsmanship and quality assurance. It also touches on continuous integration and the role of automation in enhancing development efficiency, making it a strong fit for the category.",
    "level": "Primary"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its impact on software delivery speed, which relates to throughput. However, the primary focus is on technical debt management and testing strategies rather than a direct exploration of throughput as a central theme.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, with specific references to Azure DevOps and its features, such as test impact analysis. However, the primary focus is on testing strategies rather than Azure Pipelines specifically.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-02-12T09:16:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its impact on software quality, without a clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-12T09:16:09",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance of automated testing in software engineering, its benefits, and strategies for implementation, making it a central theme.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, but it primarily focuses on testing practices rather than the principles and practices of Site Reliability Engineering. While there are mentions of reducing problems in production and improving quality, these are not central themes related to SRE.",
    "level": "Quaternary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T09:16:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-12T09:16:15",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on change management strategies or principles.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T09:16:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of automated testing and software engineering, with no clear focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-12T09:16:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on empirical process control principles or Agile methodologies.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-12T09:16:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its role in software engineering, rather than focusing on validating product ideas through user engagement or feedback.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T09:16:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with only a brief mention of Azure DevOps features, which does not align with the central theme of Azure Boards.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T09:16:24",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on revenue per employee metrics or related financial efficiency discussions.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-12T09:16:25",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses automated testing, TDD, and the importance of fast-running tests within the context of modern software engineering practices, which aligns closely with the role of software developers in Agile and DevOps methodologies.",
    "level": "Secondary"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, touching on concepts related to Test-Driven Development (TDD). However, the primary focus is on automated testing strategies and infrastructure rather than a thorough exploration of Test First Development principles.",
    "level": "Tertiary"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving software delivery processes, which aligns with the principles of frequent releases. However, the primary focus is on test automation rather than the broader topic of frequent releases.",
    "level": "Tertiary"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T09:16:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, with no clear focus on estimation techniques or practices within Agile or Scrum frameworks.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in reducing human errors and improving software quality, which relates to troubleshooting. However, the primary focus is on test automation strategies rather than direct troubleshooting techniques or methodologies.",
    "level": "Tertiary"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-12T09:16:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on the concept of Increment in Agile or Scrum.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T09:16:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on the Windows operating system or its specific functionalities.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-12T09:16:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Sprint Review or its related topics.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-12T09:16:41",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its benefits, with no clear focus on Lead Time or its measurement.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-12T09:16:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without reference to scaling Agile methodologies or frameworks.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-02-12T09:16:43",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses practical problem-solving strategies related to automated testing within a DevOps context, emphasising real-world applications and the importance of efficiency and adaptability in software engineering.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving feedback loops and reducing deployment times, which are relevant to deployment frequency. However, the primary focus is on test automation rather than deployment frequency itself.",
    "level": "Tertiary"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-02-12T09:16:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses automated testing and its importance in software engineering, without a clear focus on Agile Project Management principles or methodologies.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-12T09:16:49",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance of automated testing within the context of software development, which is a key aspect of Continuous Integration. It highlights the need for fast-running tests, the impact of test automation on code quality, and the integration of testing into the development workflow, aligning closely with CI principles.",
    "level": "Secondary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-12T09:16:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and technical practices without a clear focus on Agile strategy or methodologies.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-02-12T09:16:52",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses the importance of automated testing and its role in ensuring a production-ready state of the codebase, which aligns closely with Continuous Delivery principles. It emphasizes automation, fast feedback, and reducing manual intervention, all of which are key aspects of Continuous Delivery.",
    "level": "Secondary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T09:16:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-12T09:16:56",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, with no clear focus on the Definition of Ready or its criteria.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T09:16:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and technical debt management without a clear focus on sensemaking or decision-making processes in complex environments.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T09:16:59",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses technical aspects of automated testing and software engineering without addressing team dynamics or motivation.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-12T09:17:03",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its impact on software engineering rather than focusing on team dynamics, collaboration, or Agile methodologies.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-12T09:17:04",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on AI applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-12T09:17:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Kanban principles or scaling Kanban in large organisations.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T09:17:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T09:17:08",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving efficiency and reducing errors, which aligns with Lean principles of waste reduction and value maximisation. However, the primary focus is on technical debt management and testing strategies rather than a comprehensive discussion of Lean principles.",
    "level": "Tertiary"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T09:17:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, which indirectly relates to managing technical debt by improving code quality and reducing human error. However, the primary focus is on testing strategies rather than a direct discussion of technical debt itself.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T09:17:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Scrum Values such as commitment, courage, focus, openness, or respect.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T09:17:14",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses automated testing and software engineering practices without a focus on organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-12T09:17:16",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses the importance and benefits of automated testing, its role in improving software quality, and strategies for implementing effective test automation. It covers various aspects such as the need for fast-running tests, the impact of test infrastructure, and the integration of automated testing within development workflows, aligning well with the key topics of the Test Automation category.",
    "level": "Secondary"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-12T09:17:18",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses automated testing and its importance in software engineering, without a clear focus on Scrum principles, roles, or product development processes.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-12T09:17:19",
    "ai_confidence": 80,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the importance of automated testing in enhancing operational efficiency, reducing human error, and improving the speed and quality of software delivery, which aligns well with operational practices in Agile and DevOps frameworks.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-02-12T09:17:21",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Evidence-Based Management principles or empirical data application.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T09:17:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, with no clear focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-12T09:17:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on scaling Scrum principles or frameworks.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-12T09:17:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on the role or responsibilities of a Scrum Master.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-12T09:17:26",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without addressing large scale Agile principles or frameworks.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T09:17:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on forecasting methodologies or practices within Agile and Scrum frameworks.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, which relates to technical leadership principles. However, it primarily focuses on technical practices rather than the broader aspects of guiding teams or fostering collaboration, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T09:17:31",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, rather than focusing on identifying customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T09:17:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Lean Startup principles such as MVP, Build-Measure-Learn feedback loop, or validated learning.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T09:17:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on Agile Planning principles or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-12T09:17:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its benefits in software engineering, without a clear focus on accountability or team dynamics in Agile methodologies.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-12T09:17:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and its importance in software engineering, without a clear focus on Minimum Viable Product concepts or related strategies.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T09:17:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no focus on collaboration tools or Agile team dynamics.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T09:17:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T09:17:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on deployment methodologies or strategies.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T09:17:44",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on Scrum Team dynamics, roles, or collaboration.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-12T09:17:45",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses automated testing, its importance in software engineering, and strategies for improving testing practices, which aligns closely with the principles of technical mastery in software craftsmanship and quality assurance.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated testing and its importance in the software delivery process, which is relevant to release management. However, the primary focus is on testing strategies rather than the broader aspects of release management such as planning, scheduling, or coordination.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, touching on TDD principles. However, it primarily focuses on broader automated testing strategies and practices rather than exclusively on TDD.",
    "level": "Tertiary"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T09:17:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on trend analysis within Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-12T09:17:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of automated testing and test infrastructure, with no clear focus on Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-12T09:17:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on version control practices or methodologies.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T09:17:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on Agile planning tools or methodologies.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T09:17:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its benefits, without a clear focus on Acceptance Test Driven Development or its principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T09:17:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without any focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T09:17:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T09:18:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its benefits for software quality, without a clear focus on long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-12T09:18:01",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its impact on software quality, without a clear focus on continuous learning principles or practices.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T09:13:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on decision-making processes or the principles of decision theory.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-12T09:13:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on enterprise agility or organisational-level agility practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses automated testing and its role in improving efficiency and reducing waste in software engineering, which aligns with Lean principles. However, the primary focus is on testing strategies rather than Lean methodologies themselves.",
    "level": "Tertiary"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-12T09:14:01",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without a clear focus on organisational resilience or change management.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T09:14:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, rather than focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-12T09:14:04",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 75.0,
    "reasoning": "The content primarily discusses the importance of automated testing in software engineering, focusing on how it relates to code quality, complexity management, and the reduction of human error. It explores the impact of complexity on testing strategies and the need for fast-running unit tests, which aligns well with the themes of code quality and complexity in software development.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving software delivery speed and quality, which relates to flow efficiency. However, the primary focus is on technical debt management and automated testing strategies rather than directly addressing flow efficiency principles or bottleneck elimination.",
    "level": "Tertiary"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, which aligns with automation in Agile workflows. However, it primarily focuses on testing strategies rather than the broader integration of AI and automation within Agile frameworks.",
    "level": "Tertiary"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-12T09:14:09",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses automated testing and its importance in delivering quality software, which aligns with product delivery practices. However, the primary focus is on technical aspects of testing rather than the broader methodologies and practices of product delivery.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-12T09:14:11",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses automated testing and software engineering practices, with no clear focus on Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses automated testing and its importance in software engineering, focusing on technical implementation details rather than the processes of discovery and learning. While there are mentions of feedback and improvement, they are not central to the overall discussion.",
    "level": "Quaternary"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T09:14:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the complexities of software engineering and the challenges of automated testing, touching on themes of non-linear dynamics and the need for adaptive strategies in testing. However, it primarily focuses on practical aspects of test automation rather than a deep exploration of complexity science principles.",
    "level": "Tertiary"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T09:14:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its benefits in software engineering, without a focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-12T09:14:20",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses automated testing as a practical technique within software engineering, highlighting its importance in DevOps practices, the need for fast-running tests, and the shift from manual to automated processes. It also references specific tools and methodologies, such as Azure DevOps and TDD, making it relevant to the category.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T09:14:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving software quality and delivery speed, which are relevant to market adaptability. However, the primary focus is on technical debt management and testing strategies rather than directly addressing market adaptability principles.",
    "level": "Tertiary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T09:14:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, with clear references to DevOps practices and methodologies.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-12T09:14:28",
    "ai_confidence": 80,
    "non_ai_confidence": 50,
    "final_score": 77.0,
    "reasoning": "The content primarily discusses the importance of automated testing within the context of DevOps practices, including the need for fast-running tests, the role of automation in reducing human error, and the integration of testing into the software delivery pipeline. It also references Azure DevOps and the shift towards more efficient testing strategies, which aligns closely with DevOps principles.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-12T09:14:30",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses automated testing within the context of Azure DevOps, including specific features like test impact analysis and the transition to faster unit tests. It aligns well with Azure DevOps functionalities and best practices, making it a central theme.",
    "level": "Secondary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T09:14:32",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its implications in software engineering, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-12T09:14:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its role in software engineering, without a clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T09:14:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without any clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-12T09:14:37",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of automated testing in delivering high-quality software and reducing human error, which aligns with value delivery principles. However, the primary focus is on technical implementation details rather than a direct discussion of value delivery strategies or methodologies.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-12T09:14:38",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses automated testing, its importance in software engineering, and how it contributes to technical excellence through practices like TDD and efficient test infrastructure. It aligns well with the principles of high-quality engineering practices and methodologies that enhance agility in software development.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-12T09:14:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its impact on software quality, without a clear focus on organisational agility principles or practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T09:14:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of automated testing and DevOps practices without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the human factors involved in automated testing and the challenges faced by testers, indicating a secondary theme related to team dynamics and process improvement.",
    "level": "Tertiary"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-12T09:14:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its technical aspects without a clear focus on the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T09:14:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its implications in software engineering, lacking a focus on news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of automated testing and its impact on software quality and efficiency, which relates to metrics and performance data. However, the primary focus is on technical debt management and testing strategies rather than a direct exploration of metrics and learning principles.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-17T12:01:55",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its importance in the software development process, which is a significant aspect of the application lifecycle. However, it primarily focuses on testing strategies rather than the broader scope of application lifecycle management, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T09:14:51",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and its role in software engineering, without a clear focus on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T09:14:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and software engineering practices, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-02-17T12:01:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing and software engineering practices, with no clear focus on Scrum principles, roles, events, or frameworks.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:01:58",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses automated testing and its role in improving software engineering processes, which aligns with enhancing developer productivity. However, it primarily focuses on testing strategies rather than the broader principles of platform engineering.",
    "level": "Tertiary"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:01:59",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "One Engineering System (1ES)": {
    "category": "One Engineering System (1ES)",
    "calculated_at": "2025-02-17T12:02:05",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on the One Engineering System framework or its principles.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-02-17T12:02:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on the Agile Product Operating Model or its principles.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:49:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of automated testing and software engineering, with no clear focus on leadership practices or themes.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-02-17T13:49:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses automated testing and its importance in software engineering, without a clear focus on Scrum, Kanban, Lean, or Agile practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:14",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on Internal Developer Platforms or their specific components and benefits.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and DevOps practices without a clear focus on the application of AI in these areas.",
    "level": "Ignored"
  }
}
