{
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T09:13:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices, with no clear focus on decision-making processes or the principles of decision theory.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-12T09:13:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on enterprise agility or organisational-level agility practices.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-12T09:13:59",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses automated testing and its role in improving efficiency and reducing waste in software engineering, which aligns with Lean principles. However, the primary focus is on testing strategies rather than Lean methodologies themselves.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-12T09:14:01",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without a clear focus on organisational resilience or change management.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-12T09:14:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, rather than focusing on installation or configuration processes.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-12T09:14:04",
    "ai_confidence": 80,
    "non_ai_confidence": 30,
    "final_score": 75.0,
    "reasoning": "The content primarily discusses the importance of automated testing in software engineering, focusing on how it relates to code quality, complexity management, and the reduction of human error. It explores the impact of complexity on testing strategies and the need for fast-running unit tests, which aligns well with the themes of code quality and complexity in software development.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-12T09:14:06",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving software delivery speed and quality, which relates to flow efficiency. However, the primary focus is on technical debt management and automated testing strategies rather than directly addressing flow efficiency principles or bottleneck elimination.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-12T09:14:08",
    "ai_confidence": 50,
    "non_ai_confidence": 30,
    "final_score": 48.0,
    "reasoning": "The content discusses automated testing and its importance in software engineering, which aligns with automation in Agile workflows. However, it primarily focuses on testing strategies rather than the broader integration of AI and automation within Agile frameworks.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-02-12T09:14:09",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses automated testing and its importance in delivering quality software, which aligns with product delivery practices. However, the primary focus is on technical aspects of testing rather than the broader methodologies and practices of product delivery.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-12T09:14:11",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "The content primarily discusses automated testing and software engineering practices, with no clear focus on Agile Product Management principles or practices.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-12T09:14:13",
    "ai_confidence": 30,
    "non_ai_confidence": 10,
    "final_score": 28.0,
    "reasoning": "The content primarily discusses automated testing and its importance in software engineering, focusing on technical implementation details rather than the processes of discovery and learning. While there are mentions of feedback and improvement, they are not central to the overall discussion.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-12T09:14:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a clear focus on Systems Thinking principles or interconnectedness within organisational dynamics.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T09:14:17",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the complexities of software engineering and the challenges of automated testing, touching on themes of non-linear dynamics and the need for adaptive strategies in testing. However, it primarily focuses on practical aspects of test automation rather than a deep exploration of complexity science principles.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-12T09:14:19",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its benefits in software engineering, without a focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-12T09:14:20",
    "ai_confidence": 80,
    "non_ai_confidence": 10,
    "final_score": 73.0,
    "reasoning": "The content primarily discusses automated testing as a practical technique within software engineering, highlighting its importance in DevOps practices, the need for fast-running tests, and the shift from manual to automated processes. It also references specific tools and methodologies, such as Azure DevOps and TDD, making it relevant to the category.",
    "level": "Secondary"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-12T09:14:22",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without reference to specific events, presentations, or discussions related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-12T09:14:24",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 45.0,
    "reasoning": "The content discusses automated testing and its role in improving software quality and delivery speed, which are relevant to market adaptability. However, the primary focus is on technical debt management and testing strategies rather than directly addressing market adaptability principles.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T09:14:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, with clear references to DevOps practices and methodologies.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-02-12T09:14:28",
    "ai_confidence": 80,
    "non_ai_confidence": 50,
    "final_score": 77.0,
    "reasoning": "The content primarily discusses the importance of automated testing within the context of DevOps practices, including the need for fast-running tests, the role of automation in reducing human error, and the integration of testing into the software delivery pipeline. It also references Azure DevOps and the shift towards more efficient testing strategies, which aligns closely with DevOps principles.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-12T09:14:30",
    "ai_confidence": 80,
    "non_ai_confidence": 20,
    "final_score": 74.0,
    "reasoning": "The content primarily discusses automated testing within the context of Azure DevOps, including specific features like test impact analysis and the transition to faster unit tests. It aligns well with Azure DevOps functionalities and best practices, making it a central theme.",
    "level": "Secondary"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-12T09:14:32",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its implications in software engineering, without focusing on specific products or literature related to Agile or DevOps.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-12T09:14:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its role in software engineering, without a clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T09:14:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and software engineering practices without any clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-12T09:14:37",
    "ai_confidence": 70,
    "non_ai_confidence": 10,
    "final_score": 64.0,
    "reasoning": "The content discusses the importance of automated testing in delivering high-quality software and reducing human error, which aligns with value delivery principles. However, the primary focus is on technical implementation details rather than a direct discussion of value delivery strategies or methodologies.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-12T09:14:38",
    "ai_confidence": 85,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses automated testing, its importance in software engineering, and how it contributes to technical excellence through practices like TDD and efficient test infrastructure. It aligns well with the principles of high-quality engineering practices and methodologies that enhance agility in software development.",
    "level": "Secondary"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-12T09:14:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its importance in software engineering, without a focus on scaling Agile practices or frameworks.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-02-12T09:14:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its impact on software quality, without a clear focus on organisational agility principles or practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T09:14:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses technical aspects of automated testing and DevOps practices without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-02-12T09:14:44",
    "ai_confidence": 50,
    "non_ai_confidence": 20,
    "final_score": 47.0,
    "reasoning": "The content discusses the human factors involved in automated testing and the challenges faced by testers, indicating a secondary theme related to team dynamics and process improvement.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-02-12T09:14:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses automated testing and its technical aspects without a clear focus on the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-12T09:14:46",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses automated testing and its implications in software engineering, lacking a focus on news or reviews related to Agile, DevOps, or technology updates.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-12T09:14:48",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses the importance of automated testing and its impact on software quality and efficiency, which relates to metrics and performance data. However, the primary focus is on technical debt management and testing strategies rather than a direct exploration of metrics and learning principles.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-12T09:14:49",
    "ai_confidence": 50,
    "non_ai_confidence": 10,
    "final_score": 46.0,
    "reasoning": "The content discusses automated testing and its importance in the software development process, which is a significant aspect of the application lifecycle. However, it primarily focuses on testing strategies rather than the broader scope of application lifecycle management, making it a secondary theme.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-12T09:14:51",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses automated testing and its role in software engineering, without a clear focus on Value Stream Management principles or practices.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T09:14:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses automated testing and software engineering practices, with no focus on psychological principles or theories related to organisational behaviour.",
    "level": "Ignored"
  }
}
