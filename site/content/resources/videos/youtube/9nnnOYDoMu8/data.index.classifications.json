{
  "Cell Structure Design": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 13.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 2.1,
    "ai_intent": 2.0,
    "ai_audience": 4.2,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on delivery value in software through real-world feedback—defining 'done' as live in production. While this resonates with modern agile principles and advocates decentralization and fast feedback loops, it never mentions Cell Structure Design, Beta Codex, or autonomous cells. There is no discussion of networked organization, end-to-end accountable units, or comparison with hierarchical structures—core elements of the category. The message is relevant for cross-functional teams, but not for the unique organizational model underpinning Cell Structure Design.",
    "reasoning_summary": "While the article encourages real-time feedback and value delivery, it lacks direct or implicit reference to Cell Structure Design concepts and organizational models, making fit with the category quite low beyond general agile resonance.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 70.45,
    "ai_mentions": 2.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.2,
    "ai_intent": 6.8,
    "ai_audience": 7.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content strongly emphasizes the shift from internal milestones to value delivered to the customer, aligning with Agile and business agility themes. Specific recommendations—like closing feedback loops, using telemetry, and measuring real outcomes—are relevant to strategy. However, the primary focus is on delivery practices and team mindset rather than on explicitly formulating, aligning, or measuring long-term strategic goals. Strategic goals are referenced through the context of achieving meaningful outcomes, but the discussion largely centers on operational change and redefining 'done,' rather than setting or adapting business-wide objectives. Audience alignment is good, appealing to teams and organizational leaders, and the content consistently pushes for outcome-driven measures that support business agility. There are no outdated or penalizing elements present.",
    "reasoning_summary": "While this article centers on driving real value by delivering to production and closing learning loops, it links operational shifts to outcome-focused thinking aligned with agile strategy. Still, explicit discussion of long-term strategic goals is limited, so confidence in this strict category is moderate.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 27.96,
    "ai_mentions": 0.0,
    "ai_alignment": 2.2,
    "ai_depth": 2.7,
    "ai_intent": 4.8,
    "ai_audience": 6.0,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on software delivery, defining 'done' as live in production, and emphasizes value delivery, feedback loops, and customer outcomes. However, it never directly mentions Value Stream Mapping, nor does it discuss VSM techniques, visualization, steps, or mapping workflows. The themes (value, learning, customer impact) partially align with VSM's goals, but the direct discussion is about redefining 'done' and shifting team mindsets—not mapping or analyzing the value stream. There are no references to Lean tools or practices like VSM, Kaizen, or mapping itself, and the depth of process visualization is absent. The audience (teams interested in value delivery) overlaps with VSM practitioners, justifying a moderate audience score, but the core intent and content remain too general and high-level for the Value Stream Mapping category.",
    "reasoning_summary": "While the piece emphasizes delivering real value and feedback loops, it doesn't reference or explore Value Stream Mapping. It aligns conceptually at a distance, but lacks the techniques, tools, or focus needed for this category.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Tool",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 31.71,
    "ai_mentions": 1.7,
    "ai_alignment": 3.8,
    "ai_depth": 3.6,
    "ai_intent": 3.1,
    "ai_audience": 7.3,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on redefining 'done' in software delivery, advocating for features to be considered finished only when live in production. While it references practices like automation, CI/CD, deployment pipelines, and telemetry (which are tool-enabled), the primary theme is process mindset, not tools themselves. There are broad conceptual alignments to tool usage, but no direct discussion, evaluation, or in-depth exploration of specific tools, features, or implementation details as required for the 'Tool' category. The audience is relevant (practitioners/teams), but the discussion is methodology- and philosophy-centered, lacking the substance, comparisons, or integration guidance central to the tools category.",
    "reasoning_summary": "This content challenges teams to redefine 'done' as 'live in production,' stressing value and feedback. While it mentions automation and telemetry (tool-adjacent topics), it’s mostly about mindset and process, not tools, earning a low confidence for fitting the 'Tool' category.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Ethos",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 86.78,
    "ai_mentions": 5.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.9,
    "ai_intent": 8.1,
    "ai_audience": 8.7,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content deeply critiques 'fake finishes' and advocates for defining 'done' as 'live in production with real feedback and value.' It discusses the need for genuine evidence, learning, and outcome-oriented delivery, which are foundational ethos elements in Agile/DevOps/Lean. While it doesn't explicitly say 'ethos,' its themes of authentic delivery, system-level evidence, and critique of superficial ritual clearly embody the category. It is directly aimed at practitioners/coaches/leaders. The only minor reduction comes from an absence of direct 'ethos' terminology and some portions that address guidance/action steps (nudging the signal score), but the piece as a whole is a strong fit.",
    "reasoning_summary": "This article goes beyond process to focus on authentic Agile/DevOps ethos—advocating for real value, outcome-driven delivery, and feedback. Its critique of superficial 'done' markers demonstrates a deep concern for foundational convictions and system integrity. A strong match for 'Ethos.'",
    "level": "Primary"
  },
  "Large Scale Agility": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Large Scale Agility",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 32.52,
    "ai_mentions": 1.3,
    "ai_alignment": 3.4,
    "ai_depth": 3.2,
    "ai_intent": 3.9,
    "ai_audience": 4.6,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on the concept of 'done' meaning software live in production, targeting practices like continuous delivery, feedback loops, and value delivery to end users. While these are relevant to Agile and somewhat to enterprise agility, the discussion centers almost entirely on team-level principles rather than frameworks, scaling strategies, or enterprise-wide adoption. There is a faint connection to Large Scale Agility where delivery mindset might influence bigger organizations, and fleeting references to organizations and teams. However, there is no exploration of scaling frameworks, enterprise leadership, or multi-team alignment. Most examples and advice are practical, aimed at developer/practitioner-level audiences, and lack the strategic or cross-team focus required for true Large Scale Agility classification.",
    "reasoning_summary": "This article mainly targets team-level Agile, focusing on defining 'done' and encouraging customer-centered value delivery. It contains minimal direct relevance or depth about scaling Agile practices organizationally, so it scores low for Large Scale Agility.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-08-07T07:06:46",
    "ai_confidence": 76.07,
    "ai_mentions": 3.5,
    "ai_alignment": 8.8,
    "ai_depth": 7.9,
    "ai_intent": 8.5,
    "ai_audience": 8.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "Direct mentions of 'Agile' and 'agility' are present but not the manifesto or principles by name. Conceptually, the focus on 'value', 'feedback loops', 'learning', and 'customer outcomes' strongly aligns with Agile values (customer collaboration, responding to change, valuing outcomes). The content thoroughly explores the 'Definition of Done' through the Agile lens, emphasizing continuous feedback, learning, and adaptation. The main intent is to recalibrate teams' understanding of value, which matches the aims of Agile principles, targeting practitioners in Agile delivery. Signal is high as little is off-topic—all is about delivering value and learning, though some actionable advice (CI/CD, telemetry) starts bordering on practice, not principle. No penalties apply as content is neither outdated nor critical of Agile's ethos.",
    "reasoning_summary": "The content urges teams to focus on delivering value via live releases, prioritizing feedback and learning—directly reflecting Agile values. Alignment is strong, though explicit references to the manifesto are limited. Fit is clear but not exhaustive.",
    "level": "Secondary"
  },
  "Agile Transformation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Transformation",
    "calculated_at": "2025-08-07T09:25:34",
    "ai_confidence": 71.27,
    "ai_mentions": 4.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.9,
    "ai_intent": 7.2,
    "ai_audience": 7.8,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "The content focuses on redefining 'done' as live in production, advocating for real value delivery, telemetry, and feedback loops—key principles in Agile thinking. While it references agility and practices aligned with Agile transformation (e.g., cultural shift, feedback focus, value delivery), it does not directly address organizational change, leadership, or transformation strategies on a broad level. Instead, the discussion orbits a specific transformation in mindset and practices around 'done' definitions and shifting team behavior, which fits the scope but not with maximal depth. The audience clearly includes Agile practitioners, coaches, and leaders willing to drive meaningful change. No outdated content or negative tone justifies any penalties.",
    "reasoning_summary": "The content strongly supports a key Agile transformation mindset: redefining 'done' to mean actual value delivery and feedback. It targets relevant audiences, but organizational change methods and frameworks are less directly explored. Clear fit, but focus is specific.",
    "level": "Secondary"
  },
  "Product Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Management",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 81.1,
    "ai_mentions": 3.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.6,
    "ai_intent": 8.0,
    "ai_audience": 8.3,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "Direct mention of 'Product Management' is absent, but the article extensively covers core conceptual themes relevant to the category, such as customer value, evidence-based decisions, feedback loops, aligning teams with outcomes, and shifting organizational mindset. The discussion reaches significant depth, especially on outcomes over outputs, continuous delivery, and metrics (telemetry, feedback), aligning well with modern product management frameworks. The advice is targeted at practitioners and strategic leaders interested in product success, though it doesn't explicitly isolate product managers. No notable off-topic noise, with most content supporting the strategic shift toward real value delivery typical of product management. No penalties applied; the material is up-to-date, constructive, and firmly within the spirit of product management best practices.",
    "reasoning_summary": "While the content doesn't explicitly mention product management, it thoroughly discusses strategic delivery, customer value, and evidence-driven practices central to the field. It provides actionable advice and is well-aligned with modern product management frameworks, making it a strong, focused fit for the category.",
    "level": "Primary"
  },
  "Continuous Delivery": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Continuous Delivery",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 93.9,
    "ai_mentions": 8.7,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.4,
    "ai_audience": 8.9,
    "ai_signal": 9.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content thoroughly advocates for the principle that 'done' should mean software running live in production, aligning perfectly with Continuous Delivery. While the term 'Continuous Delivery' isn't explicitly named, the themes—automation, rapid feedback, telemetry, shortening release cycles, and closing the feedback loop—are central throughout. Advice provided is practical and addresses both technical practices (automation, deployment pipelines) and cultural shifts (celebrating real value, redefining 'done'), showing depth. The target audience appears to be practitioners, coaches, and teams interested in improving delivery, matching the category audience. Signal-to-noise is high, with almost all content directly relevant to Continuous Delivery. No outdated advice or tone issues were identified.",
    "reasoning_summary": "This content excellently advocates Continuous Delivery principles, urging teams to define 'done' as live in production and to focus on user value and fast feedback. Its practical depth, relevance, and orientation to practitioner audiences make it a strong fit for the category, even without the explicit term.",
    "level": "Primary"
  },
  "Personal": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Personal",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 93.76,
    "ai_mentions": 8.6,
    "ai_alignment": 9.7,
    "ai_depth": 9.4,
    "ai_intent": 9.0,
    "ai_audience": 9.2,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content is deeply rooted in personal perspective, sharing anecdotes ('I’ve learned the hard way', 'Here’s what I see time and again'), direct advice, and experiential insights gained through Agile coaching and team facilitation. The main theme is a reflection on personal and observed industry challenges around 'done' definitions in software, aligning closely with the category’s intended focus. The discussion goes well beyond surface mentions with practical steps, emotional context, and calls to shift mindset—hallmarks of personal reflection. Technical details are minimally prescriptive and framed as lessons or advice rather than systematic theory explanation. All key scores are high, with small differences to account for a few generalized recommendations and slight audience broadening to teams/organizations overall. No penalties apply as the tone is supportive, current, and positive.",
    "reasoning_summary": "This content fits 'Personal' very well—it’s rich with the author’s own Agile experience, candid lessons learned, and targeted advice from hands-on coaching. Its value lies in subjective reflection and actionable guidance, all delivered in a personal, relatable tone perfect for practitioners.",
    "level": "Primary"
  },
  "Software Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Software Development",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 95.3,
    "ai_mentions": 8.8,
    "ai_alignment": 9.9,
    "ai_depth": 9.7,
    "ai_intent": 9.2,
    "ai_audience": 9.6,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly discusses software delivery practices, emphasizing that 'done' should mean code is live in production—a central concept in agile methodologies and DevOps. It addresses feedback loops, CI/CD, collaboration, and customer value—core to modern software development. Multiple best practices are explicitly recommended, depth is high with practical advice, and the audience is clearly software professionals. There is virtually no irrelevant material, and all advice aligns with current, evidence-based software engineering thinking.",
    "reasoning_summary": "This content expertly addresses key software development principles like CI/CD, agile delivery, and feedback loops. It's detailed, methodologically focused, and perfectly matches the needs and expectations of modern software development professionals.",
    "level": "Primary"
  },
  "Team Motivation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Team Motivation",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 68.4,
    "ai_mentions": 3.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.4,
    "ai_intent": 6.8,
    "ai_audience": 7.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "This content focuses on redefining 'done' as live in production and fostering feedback loops, emphasizing value delivery and outcome-based thinking. It addresses changing team mindsets, overcoming pitfalls in celebrating false milestones, and suggests team-level actions (like rewarding delivery of value or shortening the path to production). While the link to Team Motivation is present (via empowering teams, fostering learning, and celebrating real outcomes), the primary theme is value delivery and process alignment, not direct psychological or motivational drivers. There's indirect alignment—motivation through clarity of purpose, rewarding real achievement, and encouraging learning—but no explicit reference to intrinsic motivation techniques or psychological safety. The discussion is deep and pragmatic for agile teams, and the audience match is strong, but direct mentions of 'motivation' or its synonyms are minimal.",
    "reasoning_summary": "The content pushes teams to redefine 'done,' close feedback loops, and focus on delivering real value. While it encourages team adaptation and outcome-based celebration—motivation-adjacent themes—the main focus is process improvement, not direct team motivation strategies. Confidence is moderate due to strong indirect but weak explicit alignment.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Discovery",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 38.25,
    "ai_mentions": 0.3,
    "ai_alignment": 3.5,
    "ai_depth": 3.7,
    "ai_intent": 4.2,
    "ai_audience": 3.8,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content discusses the importance of truly delivering value by considering work 'done' only when live in production, emphasizing real outcomes and feedback loops. While it touches on concepts somewhat adjacent to Product Discovery (like learning from users and gathering telemetry), its main focus is on redefining 'done' in software delivery, deployment practices, and closing the feedback loop after release. Direct mentions of Product Discovery topics—such as user research, PRACTICES for understanding customer needs pre-development, or ideation/validation frameworks—are minimal or absent. The intended audience aligns somewhat (teams trying to deliver user value) but the discussion centers on software delivery and operational agility, not Product Discovery methods. Overall, only a partial, indirect fit.",
    "reasoning_summary": "This article centers on delivering real value by making features live and learning from production feedback. While it shares themes relevant to Product Discovery, it primarily addresses post-development delivery practices, not the specific methods or intent of Product Discovery. Its alignment is moderate but indirect.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Scrum Values",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 38.65,
    "ai_mentions": 0.4,
    "ai_alignment": 4.3,
    "ai_depth": 3.7,
    "ai_intent": 5.2,
    "ai_audience": 7.1,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content does not explicitly discuss Scrum Values or name them (such as commitment, courage, focus, openness, or respect). While it does align somewhat with concepts like focus (emphasizing value delivery) and openness (feedback loops), it remains conceptual and practical about 'done' rather than values-centric. There is some indirect overlap with Scrum team mindset, but the primary focus is on shipping practices and redefining 'done,' rather than on the values themselves. The audience is mostly Agile practitioners, somewhat aligning with Scrum's typical target group. Nearly all the content is relevant to the stated theme; however, the substance lies in process and delivery rather than explicit values discourse. No penalties were applied.",
    "reasoning_summary": "This content focuses on redefining 'done' as releasing value to users, with only limited alignment to Scrum Values. The main discussion is about practical delivery, not the foundational principles of Scrum, and so confidence in this category is low.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Azure Pipelines",
    "calculated_at": "2025-08-07T07:06:42",
    "ai_confidence": 33.71,
    "ai_mentions": 0.3,
    "ai_alignment": 4.6,
    "ai_depth": 3.9,
    "ai_intent": 4.1,
    "ai_audience": 7.2,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on the definition of 'done' being live in production, advocating for automation, continuous integration, and deployment pipelines. However, Azure Pipelines, or even Azure DevOps, is never explicitly mentioned. The principles align conceptually with the outcomes Azure Pipelines supports (automation, CI/CD, telemetry, feedback), but the discussion remains high-level and generic, applicable to many CI/CD tools and processes. There is no substantive exploration of Azure Pipelines features, YAML, integration specifics, or Azure ecosystem references. The primary intent is to drive cultural and practical shifts toward continuous delivery, not to inform or support users specifically interested in Azure Pipelines.",
    "reasoning_summary": "While the content advocates for CI/CD and automation closely related to Azure Pipelines usage, it lacks any direct mention or specific discussion of Azure Pipelines, keeping the fit generic and conceptual, not categorical.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Validation",
    "calculated_at": "2025-08-07T11:24:09",
    "ai_confidence": 84.86,
    "ai_mentions": 3.2,
    "ai_alignment": 9.0,
    "ai_depth": 8.7,
    "ai_intent": 8.1,
    "ai_audience": 8.7,
    "ai_signal": 9.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "Direct mentions of 'validation' or 'product validation' are absent, but the piece strongly aligns conceptually with Product Validation. The focus is on putting working software into users' hands to gather evidence and feedback, emphasizing closing feedback loops and using telemetry to learn if real value is being delivered. The content thoroughly discusses shifting from internal milestones to customer-centric outcomes and real-world learning, core to Product Validation. The advice and examples target practitioners (delivery teams, coaches) and maintain a high signal-to-noise ratio. The only limitation is lack of explicit topical naming and relatively few direct, technical references to validation methodologies (user testing, A/B, prototyping)—instead, it frames validation more holistically via live production and data. No penalties were necessary as the content is timely, supportive, and correctly framed.",
    "reasoning_summary": "The content strongly fits Product Validation through its focus on live user feedback, evidence-driven delivery, and closing real customer feedback loops, despite lacking explicit mention of 'validation.' Themes and intent are directly aligned with the category.",
    "level": "Primary"
  },
  "Decision Theory": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Decision Theory",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 32.566,
    "ai_mentions": 0.8,
    "ai_alignment": 3.5,
    "ai_depth": 4.2,
    "ai_intent": 2.2,
    "ai_audience": 8.7,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on redefining the term 'done' in software delivery to mean work that is live in production and valued by users. While the article discusses feedback loops, evidence, measurement, and learning from real-world usage (which are peripherally related to decision quality and uncertainty), it never explicitly uses or references terms such as decision theory, heuristics, probability, or behavioral economics. The conceptual alignment is only partial—there are allusions to hypothesis-testing and evidence-based learning, but these tie more closely to Agile practices focused on delivery than to formal decision theory frameworks. The depth of discussion into decision-making processes is limited; the main thoroughness is about workflow and value delivery, not systematic frameworks for making decisions under uncertainty. The audience is similar (teams looking to improve outcomes under uncertainty), and the content is focused, but the majority of discussion remains on changing definitions in Agile rather than exploring decision theory principles. Hence, the confidence score is low, reflecting only weak and indirect alignment.",
    "reasoning_summary": "This content focuses on shifting Agile teams' definitions of 'done' and emphasizes real-world feedback and value, but only loosely touches on topics relevant to Decision Theory. There is minimal discussion of decision-making frameworks, probability, or heuristics—the core of the category.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 73.7,
    "ai_mentions": 4.8,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 7.6,
    "ai_audience": 7.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content primarily addresses the principle of 'Definition of Done,' a foundational topic in Agile frameworks like Scrum and Kanban. Although 'Agile' and specific frameworks are not explicitly named, the article strongly aligns conceptually: it emphasizes value delivery, closing feedback loops, and real customer outcomes—core Agile concerns. The depth is moderate, providing actionable advice and process reflections but lacking comparative analysis or explicit discussion of particular frameworks. The target audience is practitioners and coaches, matching the Agile community. The article remains focused, with little filler or off-topic content. Absence of outdated practices, tool-specific focus, or contradictory tone means no penalties are warranted.",
    "reasoning_summary": "This piece closely aligns with Agile principles by emphasizing real value delivery and refining 'done.' While it doesn’t name frameworks, its advice and audience fit the Agile context well, supporting organizational agility. The moderate depth and focus on outcomes make it relevant to Agile practitioners.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Strategy",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 54.31,
    "ai_mentions": 1.3,
    "ai_alignment": 6.8,
    "ai_depth": 6.6,
    "ai_intent": 7.2,
    "ai_audience": 7.0,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content centers around redefining 'done' as live in production and stresses the importance of feedback loops, learning from customers, and delivering real value. These themes partially align with product strategy—especially customer-centricity and outcome-focused delivery. However, it does not explicitly address vision formulation, strategic planning, or market analysis; instead, it focuses on process improvement at the delivery end. There are no direct mentions of 'Product Strategy' as a term, and while the advice could inform a strategic posture, the discussion remains more operational, aimed at practitioner-level audiences (e.g., coaching teams, shipping value sooner) rather than high-level product strategists. No penalties apply as the information is current and supportive. Thus, confidence is moderate but not high.",
    "reasoning_summary": "While the content strongly emphasizes delivering real value and closing feedback loops—ideas relevant to product strategy—its focus is more on operational delivery than strategic vision or planning. It's moderately aligned but does not dive into core product strategy frameworks.",
    "level": "Tertiary"
  },
  "Customer Focus": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Customer Focus",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 97.1,
    "ai_mentions": 8.7,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.4,
    "ai_audience": 9.1,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 97.0,
    "reasoning": "The content repeatedly centers on the principle that delivering value means having increments live in production, emphasizing closing feedback loops with real users and measuring outcomes with evidence (telemetry, customer feedback). It critiques focusing on internal milestones and advocates shifting to outcomes that matter for customers, directly exploring key Customer Focus topics like defining value from the user's perspective, prioritizing based on real impact, and embedding learning and feedback into the process. Advice is actionable, targeting practitioners and organizations in agile/delivery roles. There is strong conceptual alignment, thorough discussion, and high relevance with minimal off-topic content. No penalties apply.",
    "reasoning_summary": "This content strongly fits the 'Customer Focus' category, highlighting the importance of measuring success through real customer value, live feedback, and actionable learning in production. It thoroughly advocates moving from internal metrics to true user outcomes, aligning deeply with Customer Focus principles.",
    "level": "Primary"
  },
  "Leadership": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Leadership",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 70.15,
    "ai_mentions": 2.3,
    "ai_alignment": 8.1,
    "ai_depth": 7.5,
    "ai_intent": 7.1,
    "ai_audience": 7.8,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The article mainly focuses on redefining the meaning of 'done' in software delivery and the importance of delivering real value by closing feedback loops and shipping to production. While it sometimes uses leadership-tone advice (e.g., shifting team mindsets, helping teams adopt new definitions, and recommending recognition of value-delivery milestones), it rarely addresses leadership frameworks, roles, or methods explicitly. It aligns conceptually with leadership topics regarding challenging status quo and changing team cultures, but the audience includes practitioners as well as leaders, and direct references to leadership are minimal. Depth is moderate—it guides behavioral change but stops short of strategic or organizational leadership models.",
    "reasoning_summary": "This content encourages cultural change and accountability—concepts relevant to leadership—but explicitly targets both teams and leaders, focusing on shifting how 'done' is defined rather than directly exploring leadership roles or frameworks. The fit with 'Leadership' is moderate.",
    "level": "Secondary"
  },
  "Frequent Releases": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 87.1,
    "ai_mentions": 5.2,
    "ai_alignment": 9.6,
    "ai_depth": 8.8,
    "ai_intent": 9.1,
    "ai_audience": 8.4,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content aligns strongly with the Frequent Releases category: it repeatedly references the necessity of delivering value by having software live in production, ties the definition of 'done' to actual release and feedback cycles, and recommends concrete practices such as automation, CI/CD pipelines, and shortening the path to production. While 'Frequent Releases' is not directly named, core principles (continuous delivery, incremental value, telemetry, feedback loops) are thoroughly discussed. The practical advice and examples are aimed at practitioners seeking to improve release practices, indicating strong audience fit. The discussion is focused, with negligible off-topic or filler material, and demonstrates substantial depth into the subject. Direct naming is moderate but not explicit, so that dimension scores lower. The content is modern and aligned with DevOps/Agile thinking without contradiction or outdated advice.",
    "reasoning_summary": "The piece clearly stresses the importance of live, frequent releases as the true mark of 'done', offering practical strategies and mindset shifts toward value delivery. While it doesn't use the exact term 'Frequent Releases', its concepts, depth, and actionable advice closely match the category definition for teams and practitioners.",
    "level": "Primary"
  },
  "Unrealised Value": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 28.61,
    "ai_mentions": 1.2,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 3.8,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content discusses the concept of real value in software delivery, emphasizing that value is only realized when features are live in production. However, it focuses on the distinction between outputs (code complete) and outcomes (working in production), rather than on unrealised value as defined in Evidence-Based Management (potential or untapped value/opportunities). There are no direct mentions of unrealised value, nor does the discussion cover its measurement, indicators, or strategic exploration. The content briefly aligns in that it urges teams not to mistake internal deliverables for true value, but it does not address latent opportunities or value not yet realized due to unmet market demand, innovation, or missed business potential. Therefore, alignment and depth to the 'Unrealised Value' category are low, despite its strong signal and suitable audience.",
    "reasoning_summary": "This content stresses the need for software to be live to count as valuable but doesn't address unrealised value, untapped opportunities, or how to measure them. It's focused on realised value and delivery practice, so its fit with the 'Unrealised Value' category is low.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 31.24,
    "ai_mentions": 2.8,
    "ai_alignment": 2.1,
    "ai_depth": 3.1,
    "ai_intent": 3.5,
    "ai_audience": 4.4,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content discusses the importance of defining 'done' as 'live in production' and advocates for closing feedback loops by shipping real value to users. However, it focuses heavily on principles central to Agile and DevOps (production feedback, automation, continuous delivery, value over process), though without specific framework mentions. The conceptual alignment with 'Miscellaneous' is weak, since its entire premise is closely tied to recognized Agile and Lean practices, including CI/CD and evidence-based outcomes. There are no penalties, as the content is current and on-topic, but most arguments draw directly on philosophies fundamental to Agile and DevOps, strictly excluded from this category.",
    "reasoning_summary": "This piece centers on delivering production-ready value, emphasizing continuous feedback and automation—key Agile/DevOps philosophies. With strong alignment to recognized frameworks, it only marginally fits 'Miscellaneous'. Its confidence is low as its intent and depth are embedded in mainstream agile thought.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Project Management",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 82.75,
    "ai_mentions": 4.7,
    "ai_alignment": 8.9,
    "ai_depth": 8.6,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content offers a strong conceptual and practical alignment with Project Management, focusing on outcome-driven delivery, stakeholder value, feedback loops, and the importance of true completion in software projects. While agile themes are prevalent, the discussion is framed within the broader context of value delivery, milestone definition, and organizational learning, which are core project management concerns. There are no explicit, repeated mentions of 'Project Management,' but the principles and techniques addressed—including roles, delivery phases, definition of 'done,' feedback mechanisms, and stakeholder value—are highly relevant. The content targets team leads, managers, and practitioners concerned with delivery and value, aligning with the category's target audience. No penalties applied, as the content is timely, non-contradictory, and constructive.",
    "reasoning_summary": "The article excels at aligning project delivery with real-world value, emphasizing key management principles like feedback loops, stakeholder focus, and true definition of milestones. While not naming 'project management' directly, its depth and intent clearly serve practitioners in this discipline.",
    "level": "Primary"
  },
  "Model": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Model",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 60.6,
    "ai_mentions": 2.2,
    "ai_alignment": 6.7,
    "ai_depth": 6.8,
    "ai_intent": 6.1,
    "ai_audience": 8.3,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content does not directly mention any explicit models or frameworks (e.g., Cynefin, Three Ways of DevOps, Kanban), resulting in a low 'mentions' score. However, its substance promotes systems thinking and feedback loops—themes common in Agile/Lean models—which provides moderate alignment and depth. The main intention is to shift mindsets about 'done,' indirectly supporting model-driven thinking. The content is targeted at practitioners and is highly focused, but lacks explicit conceptual model discussion required for the highest confidence.",
    "reasoning_summary": "While the post strongly encourages systems thinking and value delivery, it doesn’t explicitly frame these ideas as models or frameworks. It offers moderate conceptual alignment and insightful depth, but with few direct references to 'Model' category concepts.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 54.74,
    "ai_mentions": 1.6,
    "ai_alignment": 5.8,
    "ai_depth": 5.2,
    "ai_intent": 3.9,
    "ai_audience": 7.2,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content emphasizes the need for real value delivery by defining 'done' as 'live in production' and discusses feedback loops, telemetry, and evidence-based progress. While these are adjacent to innovation capacity—especially with learning cycles, shortening delivery, and measuring real outcomes—the primary focus remains on delivery effectiveness, not specifically on innovation mechanisms, metrics for innovation, or frameworks supporting innovation in Agile/DevOps. There are indirect conceptual connections, such as fostering feedback-driven improvement, but explicit innovation discussion is limited. The audience is well aligned (teams, Agile practitioners), and signal-to-noise ratio is strong since most examples reinforce the main message. Depth is moderate, explaining related learning cycles but not innovation-specific tools or strategies.",
    "reasoning_summary": "While the content highlights feedback loops and the importance of delivering real value to customers, it primarily focuses on delivery effectiveness rather than innovation practices or metrics. Its alignment with 'Ability to Innovate' is indirect—not explicit—so confidence is moderate.",
    "level": "Tertiary"
  },
  "Increment": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Increment",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 94.23,
    "ai_mentions": 8.8,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.6,
    "ai_audience": 9.1,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content directly addresses the definition of 'Increment' in Agile/Scrum, emphasizing that 'done' means an increment is live in production delivering real value, not just code complete. It thoroughly discusses the importance of fully delivered, working software increments, closing feedback loops, and stakeholder value. The advice and best practices are aimed at Agile practitioners and teams, matching the category's target audience. Coverage is deep, avoiding tangential topics and focusing on actionable guidance. No penalties apply, as the content is current and not critical of the Increment concept.",
    "reasoning_summary": "This piece delves deeply into the Agile/Scrum concept of Increment, advocating that 'done' means live in production. It aligns closely with the category through clear examples, best practices, and practical advice for teams, making it highly relevant and confidently classified as Increment.",
    "level": "Primary"
  },
  "Agile Planning": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Planning",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 77.32,
    "ai_mentions": 4.9,
    "ai_alignment": 8.8,
    "ai_depth": 8.3,
    "ai_intent": 8.1,
    "ai_audience": 7.7,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content deeply explores the importance of defining 'done' as 'live in production,' emphasizing feedback loops, real-world evidence, and value delivery—all of which resonate with Agile Planning principles such as iterative planning, focus on outcomes, and continuous improvement. However, it does not directly mention Agile Planning or specific Agile methodologies (like Scrum or Kanban), nor does it discuss ceremonies like sprint planning or backlog refinement. Audience is practitioners and teams, matching the category, though there's a broad focus on value delivery. The discussion is thorough but stays narrowly on the 'definition of done' concept, with limited coverage of other Agile Planning techniques or tools. No outdated practices or contradictory tone; no penalties applied.",
    "reasoning_summary": "This content strongly emphasizes Agile values—delivering real value via live releases and feedback loops—and encourages teams to rethink their definition of 'done.' While highly relevant to Agile Planning, it doesn't directly mention the term or cover wider planning practices, hence a high but not maximal confidence score.",
    "level": "Secondary"
  },
  "Experimentation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Experimentation",
    "calculated_at": "2025-08-07T07:06:04",
    "ai_confidence": 67.552,
    "ai_mentions": 2.8,
    "ai_alignment": 7.0,
    "ai_depth": 7.2,
    "ai_intent": 6.9,
    "ai_audience": 8.3,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content strongly argues that 'done' means live in production, emphasizing the need for feedback loops, real evidence, and telemetry to validate outcomes. 'Evidence over assumptions' and 'learning over guessing' directly echo experimentation themes (hypothesis–evidence–learning). The message fits well with hypothesis-driven approaches and Agile’s focus on empirical validation. However, experimentation as a repeatable, hypothesis-formulating/testing discipline isn’t directly named, nor are classic techniques (A/B testing, user experiments) explicitly discussed. There is strong conceptual alignment and depth in promoting learning from telemetry and outcomes, but lacking are repeated explicit references to experimentation per se. The content targets Agile practitioners/coaches, matching the intended audience. The entirety is focused on evidence and learning through live deployments—central to the spirit, if not the explicit letter, of experimentation in Agile.",
    "reasoning_summary": "Emphasizes validating real-world impact, evidence, and learning in Agile, aligning with experimentation themes, but rarely names or details experimentation techniques directly. Strong indirect fit, but references to experimentation are implicit.",
    "level": "Secondary"
  },
  "Coaching": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Coaching",
    "calculated_at": "2025-08-07T06:10:41",
    "ai_confidence": 62.76,
    "ai_mentions": 5.2,
    "ai_alignment": 7.3,
    "ai_depth": 6.4,
    "ai_intent": 7.0,
    "ai_audience": 7.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content is primarily focused on redefining 'done' as 'live in production' to support delivery of real value, which is a foundational agile and DevOps lesson. It references 'coaching sessions' and discusses how the author helps teams shift mindsets and practices. The advice section and narrative position the author as a mentor or coach, and themes like feedback loops, handling resistance, and shifting culture align with coaching objectives. However, there is no deep dive into coaching techniques, frameworks, or extended discussion about the coaching relationship/context. The term 'coaching' appears but isn't the sustained focal point—it's an example context, not the primary lens. Most of the practical advice is given from a position of expertise or experience, with some coaching tone, but it could also apply to broader transformation/content leadership. Thus, mentions, depth, and signal are moderate but not high. Fit is significant, but not exhaustive or exclusive—other categories like 'Delivery', 'DevOps', or 'Agility' could also apply.",
    "reasoning_summary": "Content aligns with coaching through mindset change, guidance, and team support, referencing coaching contexts and practices, but does not focus exclusively or deeply on coaching methods. Partial but clear relevance.",
    "level": "Secondary"
  },
  "Shift Left Strategy": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 34.73,
    "ai_mentions": 0.8,
    "ai_alignment": 4.9,
    "ai_depth": 4.5,
    "ai_intent": 6.5,
    "ai_audience": 7.6,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on redefining 'done' as code being live in production, emphasizing faster feedback loops, telemetry, and a user-focused definition of value. However, it does not directly address Shift-Left Strategy or how testing, security, or compliance are moved earlier in the lifecycle. There are indirect conceptual overlaps—like the importance of feedback and automation—but no explicit or thorough discussion of Shift-Left practices, principles, or terminology. The audience is technical, and the content is tightly focused, but relevance to the exact 'Shift Left Strategy' category is limited.",
    "reasoning_summary": "The article urges teams to value software only when it's live and learning from real users, promoting rapid feedback and automation. While it shares some ideals with Shift-Left, it doesn't directly mention or deeply address Shift-Left Strategy topics, so the fit is weak.",
    "level": "Ignored"
  },
  "First Principal": {
    "resourceId": "9nnnOYDoMu8",
    "category": "First Principal",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 47.07,
    "ai_mentions": 0.8,
    "ai_alignment": 6.3,
    "ai_depth": 6.1,
    "ai_intent": 5.6,
    "ai_audience": 7.1,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content articulates a strong, repeated position that 'done' in software means live in production, and briefly touches on the need for telemetry and feedback loops. However, while this could be inferred as touching an \"immutable constraint,\" nowhere is this claim anchored explicitly as a first principle or discussed as an irreducible, foundational assumption underlying Lean, Agile, or DevOps. The discussion is more of an impassioned prescription or best practice, aimed at shifting mindsets. There are no references to theorists, nor is there a section distinguishing first principles from other types of guidance. Thus, while the alignment and depth are moderately strong due to firm language and focus on foundational logic, explicit 'first principles' discourse is missing. No deductions apply, as the tone is aligned and the advice is not obsolete.",
    "reasoning_summary": "While the article emphatically argues that 'done' must mean live in production, it doesn't explicitly frame this as a first principle or tie it to foundational theory. Its focus is prescriptive and practical rather than analytically first-principled, so confidence for this category is moderate but not high.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 53.86,
    "ai_mentions": 2.3,
    "ai_alignment": 6.4,
    "ai_depth": 5.7,
    "ai_intent": 5.9,
    "ai_audience": 7.2,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "This article addresses the gap between code completion and actual value delivery, emphasizing the importance of continuous deployment, feedback loops, and real outcomes. While it references agility and challenges common anti-patterns, its primary focus is on delivery and team process improvement. There are indirect organisational implications (e.g., celebrating real outcomes, changing definitions of 'done'), but explicit discussion of enterprise-wide practices, frameworks, or leadership roles is limited. The audience could include leaders, but the consultative tone and examples focus most on team-level behaviors rather than transformation at the organisational scale.",
    "reasoning_summary": "While the article highlights agile principles like live feedback, rapid release, and customer value, it centers mainly on evolving team practices rather than enterprise-wide transformation. There are links to enterprise agility, but direct coverage is modest.",
    "level": "Tertiary"
  },
  "Release Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Release Management",
    "calculated_at": "2025-05-13T21:54:54",
    "ai_confidence": 81.2,
    "ai_mentions": 4.1,
    "ai_alignment": 8.2,
    "ai_depth": 8.5,
    "ai_intent": 7.3,
    "ai_audience": 7.7,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "Direct mentions of 'Release Management' or its formal terminology are minimal; the content rarely uses explicit vocabulary like 'release', 'deployment', or 'release management'. However, the conceptual alignment is strong—core ideas stress the need for work to be 'live', emphasize shortening the path to production, continuous integration, automation, and closing feedback loops, all of which are central to Release Management practices. The depth of discussion is robust, as specific hurdles and cultural shifts in software delivery are analyzed with practical advice and best practices. Intent is strongly aligned: the piece advocates rethinking software 'done-ness' in terms of actual release and real-world value delivery. Audience targeting is a bit broader, potentially including both practitioners and coaches; it doesn’t focus on executive stakeholders but is clearly relevant to technical and delivery teams. Almost all of the content is on-topic, advocating a release-oriented mindset and process, so the signal-to-noise ratio is high. No penalties were applied, as the discussion is neither outdated nor satirical, and it does not contradict the framing of Release Management.",
    "reasoning_summary": "The content closely aligns with Release Management principles, focusing on making software truly 'done' by releasing it live. It offers practical insights into shortening release cycles and closing feedback loops, making it highly relevant—despite few explicit mentions of the category.",
    "level": "Primary"
  },
  "Value Delivery": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Value Delivery",
    "calculated_at": "2025-08-07T07:10:18",
    "ai_confidence": 97.41,
    "ai_mentions": 8.8,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.5,
    "ai_audience": 9.2,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 97.0,
    "reasoning": "The content is tightly focused on core Value Delivery principles in Agile/Scrum. It explicitly contrasts 'fake finishes' with real value, repeatedly emphasizes outcomes over outputs, and urges practices like CI/CD, feedback loops, telemetry, and aligning 'done' with real customer impact. Key topics like shortening the path to production and closing the feedback loop are discussed with actionable detail, and the main audience is practitioners/team leaders striving for business agility and customer value. No penalties are necessary—nothing is outdated or satirical. The text thoroughly and explicitly explores Value Delivery's key concepts and provides nuanced, practical guidance.",
    "reasoning_summary": "Content directly defines, exemplifies, and teaches Value Delivery in Agile—covering delivery to production, feedback loops, value measurement, and customer-focused outcomes. Main topic and intent fully match category purpose, with minor off-topic digressions only.",
    "level": "Primary"
  },
  "Strategy": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Strategy",
    "calculated_at": "2025-05-13T21:54:58",
    "ai_confidence": 59.67,
    "ai_mentions": 1.4,
    "ai_alignment": 7.4,
    "ai_depth": 5.7,
    "ai_intent": 6.6,
    "ai_audience": 6.8,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content strongly advocates for a mindset shift from measuring value by internal milestones to recognizing value when features are live in production, focusing on customer impact and closed feedback loops. This aligns conceptually with strategy—driving high-level alignment and value delivery—but doesn't explicitly mention 'strategy', frameworks, or planning. The discussion is comprehensive and aimed at leaders and teams needing a strategic mindset but contains some operational and tactical advice. The intent supports strategic alignment, but the lack of direct category mentions and partial focus on process limit the highest ratings.",
    "reasoning_summary": "This piece encourages teams to deliver real customer value by treating 'done' as only 'live in production.' Its focus on shifting organizational mindset aligns with Strategy, though it stops short of strategic frameworks or planning. The score reflects strong conceptual fit without explicit naming.",
    "level": "Tertiary"
  },
  "Working Software": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Working Software",
    "calculated_at": "2025-05-13T21:55:01",
    "ai_confidence": 93.6,
    "ai_mentions": 8.7,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.2,
    "ai_audience": 8.8,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content strongly emphasizes that 'done' in software means live, usable code in production, not just internal milestones. It discusses the importance of delivering increments that have real impact, gathering telemetry, and providing customer value—closely mirroring the definition and key topics for 'Working Software.' The discussion is deep, with actionable steps for Agile teams, high relevance to practitioners, and consistently stays on-topic without filler. No penalty was needed as it is up-to-date, constructive, and not critical or satirical.",
    "reasoning_summary": "This content deeply explores the true meaning of 'Working Software' by focusing on live, value-delivering increments in production. It directly targets Agile teams, offering practical advice and strongly aligns with the category—all with very high confidence.",
    "level": "Primary"
  },
  "Change Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Change Management",
    "calculated_at": "2025-05-13T21:55:04",
    "ai_confidence": 68.6,
    "ai_mentions": 1.8,
    "ai_alignment": 7.2,
    "ai_depth": 7.8,
    "ai_intent": 6.6,
    "ai_audience": 7.0,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content critically addresses shifting team mindsets from 'fake finishes' to true value delivery, advocating for organizational transformation and continuous feedback. These are core tenets of Agile-aligned change management. However, the piece never explicitly mentions 'change management,' nor does it directly discuss strategies for engaging resistance or leadership roles in transformation. The primary audience includes practitioners and possibly leaders interested in improving value delivery, but the focus is largely on team-level practices, not broader organizational change. While the depth is strong regarding cultural shift and value outcomes, it doesn't comprehensively cover the full scope of change management as per the category definition.",
    "reasoning_summary": "This content promotes shifting mindsets to deliver real value, aligning with change management principles, but lacks direct references and comprehensive coverage. It targets practitioners and discusses cultural change, earning a moderate confidence for the category.",
    "level": "Secondary"
  },
  "Estimation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Estimation",
    "calculated_at": "2025-08-07T09:25:34",
    "ai_confidence": 21.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.1,
    "ai_audience": 5.2,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on the definition of 'done' as live in production, closing feedback loops, telemetry, and delivering real value—topics central to Agile delivery, but not specifically to estimation. There are no mentions of estimation techniques, empirical forecasting, or collaborative practices for sizing or prediction. While some indirect alignment exists (feedback loops and customer outcomes can inform estimation processes), these are at best tangential. The main themes and advice relate to deployment, value delivery, and reducing internal milestones—not estimation or forecasting accuracy, velocity, or sizing. Audience is aligned with Agile practitioners, but purpose/intention, depth, and conceptual match to 'Estimation' are very limited.",
    "reasoning_summary": "The content centers on redefining 'done' as live in production and maximizing real value, not estimation. It lacks direct mentions, techniques, or deep discussion of Agile/Scrum estimation. Fit with 'Estimation' is low and tangential at best.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 20.95,
    "ai_mentions": 0.7,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.4,
    "ai_audience": 6.7,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content discusses the concept of 'done' in software delivery, emphasizing continuous delivery, production deployment, feedback loops, and value delivery to users. These themes align broadly with DevOps principles, but there are no direct or even indirect references to Azure DevOps, its tools, or functionalities. The advice and examples are generic and do not mention automation, CI/CD, or collaboration in the context of Azure DevOps, nor do they touch on its specific Boards, Pipelines, Repos, or integration practices. The main purpose is conceptual improvement for teams adopting Agile/DevOps mindsets but remains general to the field and not Azure DevOps-specific. Thus, only partial alignment (audience and some process overlap), with low confidence for the Azure DevOps category.",
    "reasoning_summary": "The content focuses on software delivery value and closing feedback loops, echoing Agile/DevOps ideas but never mentions Azure DevOps tools or practices. It's generic advice relevant to practitioners but doesn't fit the specific Azure DevOps category requirements.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-13T21:55:12",
    "ai_confidence": 77.9,
    "ai_mentions": 2.8,
    "ai_alignment": 8.7,
    "ai_depth": 8.4,
    "ai_intent": 8.1,
    "ai_audience": 7.7,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The article aligns conceptually with Flow Efficiency by emphasizing the importance of delivering work live to users, shortening the path to production, and closing feedback loops—all principles related to improving value stream throughput. While it discusses continuous integration, deployment, and the need to measure outcomes, it never explicitly names 'flow efficiency'. The depth is considerable, offering actionable advice for redefining 'done,' automating releases, and gathering telemetry. The primary intent is to improve delivery speed and learning-driven iteration, which matches typical Flow Efficiency goals. Audience fit is strong for Agile, Lean, and DevOps practitioners, though not exclusively so, and the content is focused with few tangents. No penalties applied, as the advice is current, constructive, and relevant.",
    "reasoning_summary": "This article deeply aligns with Flow Efficiency concepts (like closing the feedback loop and optimizing the path to production) and offers clear, actionable advice to Agile and DevOps teams, even though it never directly uses the term 'flow efficiency.' Its focus and depth make it a strong fit.",
    "level": "Secondary"
  },
  "Hypothesis Driven Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-05-13T21:55:14",
    "ai_confidence": 59.2,
    "ai_mentions": 1.1,
    "ai_alignment": 6.3,
    "ai_depth": 5.9,
    "ai_intent": 7.2,
    "ai_audience": 7.0,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content focuses on the importance of delivering software to production for real learning and value, frequently referencing evidence, feedback, telemetry, and customer impact. While it aligns conceptually with elements of Hypothesis Driven Development – notably emphasizing evidence over assumptions and learning from real-world usage – it never directly mentions hypotheses, experiment design, or formal validated learning loops. The guidance centers on 'live = done', advocating for outcome-based value delivery through production releases and feedback, but it stops short of advocating explicit hypothesis formulation or discussing in-depth scientific experimentation practices. The depth is solid regarding actionable steps (automation, telemetry, feedback loops) and audience targeting is strong for practitioners who would benefit from H.D.D., yet it's not quite an in-depth treatment of the full hypothesis-driven methodology. No penalties were applied as the message is up-to-date and not critical of the core category.",
    "reasoning_summary": "This piece strongly emphasizes outcome-driven delivery, real user learning, and production feedback, aligning well with core Hypothesis Driven Development principles. However, it never explicitly references hypothesis formulation or keyed experiments, so it's conceptually adjacent but lacks full category depth.",
    "level": "Tertiary"
  },
  "System Configuration": {
    "resourceId": "9nnnOYDoMu8",
    "category": "System Configuration",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 11.65,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 1.5,
    "ai_audience": 2.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "Direct mentions are almost nonexistent; 'system configuration' or its key concepts are not explicitly referenced. The content focuses on delivery practices—moving features to production, closing feedback loops, and measuring value. While automation, CI/CD, and telemetry are briefly mentioned, they are contextually tied to value delivery rather than the setup, management, or ongoing maintenance of systems. The depth of discussion on configuration methodology is minimal; references to automation and pipelines serve general DevOps or delivery culture points, not configuration-specific insights. The intent is to advocate for redefining 'done' as 'live in production,' targeting software teams and managers rather than system administrators or configuration specialists. Audience alignment is weak, and the content has a low signal-to-noise ratio for this category, as nearly all examples and advice revolve around process improvement and customer value, not system configuration tools or practices.",
    "reasoning_summary": "This content centers on redefining “done” as software in production, focusing on value delivery and process improvement. It isn't about system configuration, only briefly touching on automation and CI/CD. Thus, it poorly fits the System Configuration category and scores low in relevance.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Team Performance",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 94.8,
    "ai_mentions": 8.9,
    "ai_alignment": 9.7,
    "ai_depth": 9.6,
    "ai_intent": 9.3,
    "ai_audience": 9.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly addresses core aspects of team performance, emphasizing how teams deliver value and interpreting performance through real outcomes (production releases, customer impact, telemetry). It critiques internal milestones and pseudo-progress, offers actionable ways teams can enhance real delivery (automation, feedback loops), and aims to shift team behaviors systemically. The audience is clearly teams and those coaching team delivery. Content is focused, practical, and system-oriented; nothing is outdated or contradictory to the category framing.",
    "reasoning_summary": "This content is highly relevant to ‘Team Performance,’ explicitly urging teams to focus on real delivery and customer impact, not just internal milestones. It provides actionable advice and emphasizes team-level delivery capability, strongly aligning with the category’s definition and audience.",
    "level": "Primary"
  },
  "Forecasting": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Forecasting",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 34.15,
    "ai_mentions": 0.3,
    "ai_alignment": 3.5,
    "ai_depth": 3.6,
    "ai_intent": 4.2,
    "ai_audience": 7.2,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content centers around redefining 'done' as delivering work live to users, emphasizing value delivery and feedback loops in Agile practices. However, it scarcely mentions or directly addresses forecasting methods, empirical prediction, or techniques for estimating delivery timelines. The discussion is deep regarding outcomes and continuous learning but lacks substantial exploration of forecasting methodologies, metrics (like burn-down charts, velocity), or historical data use. The audience and signal are moderately aligned as it targets Agile practitioners, but most of the substance is about delivery and feedback rather than predictive practices.",
    "reasoning_summary": "While the content deeply explores Agile delivery and closing feedback loops, it doesn't discuss Agile forecasting methods. Its focus is on redefining 'done' rather than using data to predict timelines or manage risk. Thus, it's only loosely related to 'Forecasting,' resulting in a low confidence fit.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Artifact",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 84.4,
    "ai_mentions": 7.4,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 8.3,
    "ai_audience": 8.7,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content focuses on the Definition of Done—a formal agile artifact—explicitly redefining and exploring its real-world meaning in the context of value delivery. It addresses why an increment is only 'done' when live in production, connecting this to transparency, feedback loops, and empirical evidence, all central to the artifact category. While it doesn't enumerate multiple artifacts, the piece dives deeply into the structure, purpose, and practical management of 'Done' as an artifact. No penalties apply: the advice is current and fits the intended agile/Scrum practitioner audience.",
    "reasoning_summary": "This content closely aligns with the 'Artifact' category by deeply examining the Definition of Done artifact, advocating for outcome-based completion, and tying its structure and use to Agile principles. It’s targeted at practitioners and supports transformative, evidence-driven work.",
    "level": "Primary"
  },
  "Customer Feedback Loops": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 60.66,
    "ai_mentions": 3.8,
    "ai_alignment": 7.6,
    "ai_depth": 6.7,
    "ai_intent": 8.4,
    "ai_audience": 7.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content centers on the concept that 'done' means live in production, prioritizing real user feedback, telemetry, and continuous learning. It directly references 'closing feedback loops,' 'gathering telemetry,' and 'using real data to inform next steps,' aligning moderately with the category. It explores why customer impact and real-world evidence matter, stressing the importance of learning from actual use. However, the focus is more on deployment and mindset shifts than specific feedback collection and integration techniques. There are brief but relevant mentions of feedback loops, but the core discussion is generalized rather than a deep dive into mechanisms or best practices for customer feedback loops specifically.",
    "reasoning_summary": "The article stresses the need for real user feedback and closing the loop by shipping to production, but focuses more on delivery mindset than detailed feedback loop practices. It moderately aligns with the Customer Feedback Loops category.",
    "level": "Secondary"
  },
  "Method": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Method",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 90.1,
    "ai_mentions": 6.6,
    "ai_alignment": 9.7,
    "ai_depth": 8.9,
    "ai_intent": 9.1,
    "ai_audience": 8.6,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content revolves around shifting teams toward practices where 'done' means live in production, not just internally complete. Key method-focused topics—feedback loops, automation, continuous deployment, explicit redefinition of 'done,' and telemetry—are directly discussed. The alignment with method is strong: it describes step-by-step recommendations (redefining 'done,' automating deployments, closing feedback loops) and focuses on the iterative delivery of value through Agile and DevOps practices. The audience is practitioners and leaders seeking improved delivery methods; the discussion stays substantive and practical with little off-topic filler. There's some variance between explicit mentions of the word 'method' (moderate, indirect) and the overall methodological focus, but the depth and intent are strong. Content is current and positive—no penalty applied.",
    "reasoning_summary": "This piece strongly aligns with 'Method,' detailing procedural shifts (like redefining 'done' and automating releases) to close feedback loops and deliver real value. It offers actionable guidance for practitioners implementing Agile/DevOps practices, making it a near-ideal fit for the category.",
    "level": "Primary"
  },
  "Test Automation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Test Automation",
    "calculated_at": "2025-08-07T09:25:33",
    "ai_confidence": 29.7,
    "ai_mentions": 0.7,
    "ai_alignment": 3.2,
    "ai_depth": 2.8,
    "ai_intent": 2.6,
    "ai_audience": 7.2,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses on redefining 'done' in Agile software delivery as 'live in production,' emphasizing feedback loops, value delivery, and continuous deployment. While there are passing references to automation and continuous integration/deployment pipelines, these are not the main focus; the principles, frameworks, practices, or metrics of test automation are not discussed in detail. Direct mentions of 'test automation' or related frameworks/tools are absent. Audience alignment is moderate, as practitioners interested in Agile, DevOps, and process improvement are addressed, but the core content is about delivery value and shortening cycle time rather than automating tests. Signal-to-noise ratio is fair, as most content is on value delivery rather than testing. There are no explicit penalties for outdatedness or negative tone.",
    "reasoning_summary": "The article centers on Agile delivery and 'done' as deployed, with only brief mention of automation/CI. Test automation is not a focus; reference is tangential and lacking in depth or alignment with category definition. Fit is partial and minimal.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Kanban",
    "calculated_at": "2025-08-07T09:25:34",
    "ai_confidence": 13.2,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.2,
    "ai_intent": 1.5,
    "ai_audience": 5.5,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content strongly discusses the meaning of 'done' as 'live in production,' emphasizing value delivery, fast feedback, and closing the loop. However, there is no direct mention or invocation of Kanban, nor are Kanban principles like visualization, limiting WIP, boards, or associated metrics present. The focus is on delivery and agile value, not specifically Kanban practices or philosophy. The audience may overlap partially (practitioners of Agile or Lean), but conceptual and topical fit with Kanban is incidental and weak. There are no outdated or contradictory statements.",
    "reasoning_summary": "The content is not about Kanban. It stresses production-ready work and real value but doesn’t mention Kanban or apply its core principles, making the fit highly tenuous and peripheral.",
    "level": "Ignored"
  },
  "Scrum": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Scrum",
    "calculated_at": "2025-08-07T11:24:02",
    "ai_confidence": 74.25,
    "ai_mentions": 2.8,
    "ai_alignment": 8.1,
    "ai_depth": 7.7,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content strongly aligns with Scrum principles—the definition of 'Done,' focus on increments, feedback loops, and value delivery closely reflect Scrum Guide teachings like the Increment and the importance of potentially releasable increments. Terminology such as 'retrospectives' and 'workshops' further hints at Scrum events. The audience is practitioners, matching Scrum's target. However, 'Scrum' is never explicitly named, and several practices (CI/CD pipelines, telemetry focus) extend beyond Scrum's core Guide, leaning towards Lean/DevOps. The depth of discussion on 'Done' and feedback loops is thorough and resonates with Scrum's empirical process but lacks broad coverage of other Scrum-specific roles/artifacts/events. Signals are occasionally diluted by general Agile/DevOps concepts, not just Scrum. No penalties were applied as the message is current, positive, and not critical of Scrum.",
    "reasoning_summary": "The content aligns well with Scrum values (increment, Definition of Done, feedback loops), but uses broader Agile/DevOps language and never explicitly names Scrum, making this a strong but not definitive fit for the category.",
    "level": "Secondary"
  },
  "Technical Leadership": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Technical Leadership",
    "calculated_at": "2025-08-07T11:24:01",
    "ai_confidence": 81.71,
    "ai_mentions": 3.7,
    "ai_alignment": 8.8,
    "ai_depth": 8.6,
    "ai_intent": 8.9,
    "ai_audience": 8.1,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content focuses strongly on driving teams toward outcomes, emphasizing moving beyond 'code complete' to delivery, measuring real value, and closing feedback loops—core concepts in agile technical leadership. It advocates for redefining 'done,' fostering learning, and changing what teams celebrate, all of which are integral to technical leadership’s role in guiding team mindset and process. There's explicit discussion of practices influencing team culture and high-level strategy, and targeted advice for those leading or shaping development practice. While it doesn't explicitly mention 'technical leadership' or related roles by name (lowering 'mentions'), its substance is highly aligned with leadership principles and transformation of team behaviors. The piece is clearly intended for those responsible for leading, coaching, or otherwise shaping agile teams, rather than for management theorists or non-technical audiences. No penalties applied because the advice, practices, and language are current and supportive.",
    "reasoning_summary": "Strong alignment with technical leadership: content focuses on shaping team mindsets, continuous improvement, true value delivery, and agile practices—key themes in leadership. Lacks explicit role naming, but intent and depth support high confidence.",
    "level": "Primary"
  },
  "Accountability": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Accountability",
    "calculated_at": "2025-05-13T21:54:46",
    "ai_confidence": 71.65,
    "ai_mentions": 2.5,
    "ai_alignment": 7.8,
    "ai_depth": 7.9,
    "ai_intent": 7.3,
    "ai_audience": 8.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content strongly aligns with the core concept of outcome ownership in work systems, emphasizing that work is only 'done' when it delivers customer value. While it doesn't use the term 'accountability' explicitly, the themes focus on structural clarity, true outcome responsibility, and practical mechanisms (e.g., redefining 'done,' feedback loops, evidence-based management). The depth is substantial, going beyond surface-level with actionable advice and systemic critique. The audience targets Agile practitioners and leaders, directly matching the category. Signal is high; minor deductions for not naming 'accountability' outright and for lacking explicit discussion of role-specific accountabilities, but conceptual fit and instructional intent are robust.",
    "reasoning_summary": "This article thoroughly explores outcome ownership and real value delivery—defining 'done' as live in production. While 'accountability' isn’t named directly, the content strongly matches the category’s spirit by pushing teams to anchor their work in transparent, evidence-based outcomes.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 45.76,
    "ai_mentions": 0.8,
    "ai_alignment": 4.2,
    "ai_depth": 4.7,
    "ai_intent": 5.0,
    "ai_audience": 5.6,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content centers on redefining ‘done’ as achieving live deployment and feedback loops in production, emphasizing operational value, telemetry, and automation. However, it lacks direct mentions or explicit discussion of SRE, SLOs, SLIs, or reliability-focused engineering. While there’s a clear alignment with value delivery in production systems, the focus is more on agile delivery, CI/CD, and cultural change than the practices or principles specific to Site Reliability Engineering. There is no contradictory or outdated information here, and no penalties are required.",
    "reasoning_summary": "Although the content stresses moving work live to production and gathering telemetry—ideas adjacent to SRE—it doesn’t discuss SRE principles or terminology directly. Its core focus is on value delivery and Agile mindset shifts, rather than site reliability engineering specifics.",
    "level": "Tertiary"
  },
  "Scrum Master": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Scrum Master",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 37.41,
    "ai_mentions": 1.0,
    "ai_alignment": 4.3,
    "ai_depth": 5.1,
    "ai_intent": 3.4,
    "ai_audience": 2.8,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on redefining 'done' as work live in production and stresses real customer value, which aligns with agile delivery values. However, there are no explicit mentions of the Scrum Master or its accountability. The main discussion centers on feedback loops, continuous delivery, and agile mindsets, which Scrum Masters may champion, but does not directly explore their role, responsibilities, or impact. The audience seems to be agile practitioners at large, not specifically Scrum Masters, and much of the content covers system delivery efforts applicable across agile roles. There are no outdated references or contradictions present. Thus, overall confidence is limited: the fit is indirect and tangential.",
    "reasoning_summary": "This article prioritizes real user value and feedback loops but does not directly reference Scrum Master accountabilities. Its themes are relevant for agile teams in general, with only loose ties to the specific focus expected for Scrum Master content.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Beta Codex",
    "calculated_at": "2025-08-07T11:24:09",
    "ai_confidence": 38.44,
    "ai_mentions": 0.2,
    "ai_alignment": 4.7,
    "ai_depth": 3.9,
    "ai_intent": 4.5,
    "ai_audience": 7.0,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "There is no direct mention of BetaCodex or its principles by name. The content promotes outcome-focused delivery and feedback loops, aligning with some Beta Codex values like adaptivity and evidence-based improvement, but it never references decentralisation, organisational design, or key human-centric themes central to Beta Codex. The focus instead is on software delivery practices (e.g., defining 'done' as live in production, using telemetry for evidence, shortening release cycles) within an agile/devops context. The depth is moderate, discussing practical steps for teams but not theory or macro-organisational change. Audience and signal are high, as the text targets delivery teams and is focused. Overall, the alignment is partial and indirect, centering more on modern Agile or DevOps thinking than Beta Codex itself.",
    "reasoning_summary": "Content centers on agile and DevOps delivery, advocating for real user value and feedback loops. It partially overlaps with adaptive principles but does not discuss Beta Codex concepts or decentralised organisational design.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 91.7,
    "ai_mentions": 8.9,
    "ai_alignment": 9.8,
    "ai_depth": 9.6,
    "ai_intent": 9.2,
    "ai_audience": 8.6,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content strongly emphasizes core Metrics and Learning principles by arguing that real value and learning occur only when work is live, enabling true feedback via telemetry and usage data. It highlights the necessity of evidence and feedback loops, urging teams to measure true outcomes instead of internal milestones. Concrete recommendations (telemetry, continuous delivery, redefinition of 'done') are provided, reinforcing depth. The intended audience is Agile/DevOps practitioners seeking to improve learning and evidence-based delivery. There are frequent, explicit references to metrics, feedback, and learning, with no outdated/contradictory statements or off-topic segments.",
    "reasoning_summary": "This piece is a strong, actionable argument for shifting teams toward evidence-driven, feedback-loop-centric ways of working, highly aligned with Metrics and Learning. It focuses on data, telemetry, and real outcomes, not just process, and is deeply relevant to Agile/DevOps practitioners.",
    "level": "Primary"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 36.28,
    "ai_mentions": 0.4,
    "ai_alignment": 4.7,
    "ai_depth": 3.7,
    "ai_intent": 3.6,
    "ai_audience": 6.3,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content never mentions Acceptance Test Driven Development (ATDD) or its principles directly. Its main theme is about redefining 'done' as work being live and delivering customer value, not aligned to the collaborative acceptance testing approach that defines ATDD. There are tangential links—such as the emphasis on feedback loops and value—but there is no discussion of acceptance criteria, stakeholder collaboration, or techniques for writing acceptance tests. The target audience (delivery teams) could overlap, but the substance is not about ATDD or its practices. Therefore, the confidence is low, with modest credit for conceptual overlap regarding feedback and delivery, but not enough to support strong inclusion in the ATDD category.",
    "reasoning_summary": "This content focuses on redefining 'done' in software delivery and emphasizes closing feedback loops for real value, but it does not directly address ATDD concepts or practices. Its overlap is minimal and incidental, so a low confidence score is warranted for this category.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 83.8,
    "ai_mentions": 7.5,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 8.4,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content thoroughly emphasizes the importance of feedback loops, learning from outcomes, and closing the gap between development and production—core tenets of Continuous Learning. While the term itself is not repeatedly named, core practices such as gathering telemetry, adapting from real-world usage, and reframing 'done' to mean actionable, data-driven learning are central. The advice is actionably aligned with Agile/DevOps audiences, promoting ongoing improvement and value creation. The depth is strong but doesn’t cover supporting tools or formal frameworks in detail, which slightly tempers the depth and signal scores. No penalties applied as the tone, content, and practices are contemporary and supportive of the intended learning culture.",
    "reasoning_summary": "The content strongly fits Continuous Learning by highlighting feedback loops, learning from real outcomes, and promoting a shift to evidence-driven value in Agile/DevOps contexts. It encourages a learning culture even though it doesn’t directly name the category often. The discussion is relevant, actionable, and audience-appropriate.",
    "level": "Primary"
  },
  "Framework": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Framework",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 37.88,
    "ai_mentions": 1.2,
    "ai_alignment": 5.5,
    "ai_depth": 6.2,
    "ai_intent": 3.8,
    "ai_audience": 6.1,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "Direct references to Agile concepts (e.g., feedback loops, value delivery, CI/CD) are present, but no named frameworks (e.g., Scrum, Kanban) or structural methodologies are discussed. The main focus is on redefining 'done' in software delivery, which aligns tangentially with framework principles but doesn't explore or adapt frameworks, compare them, or discuss their implementation. The depth of discussion is strong for best practices and value, but not for frameworks per the category's definition. The primary intent is to encourage outcome-oriented mindsets—relevant to teams and practitioners—yet without explicit guiding structures, audience fit is decent, and signal is moderate.",
    "reasoning_summary": "The content promotes Agile values like real value delivery and fast feedback but doesn't discuss specific frameworks or their structures. While useful for practitioners, it focuses on mindset rather than framework methodology, resulting in low confidence for the Framework category.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 8.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 0.7,
    "ai_intent": 2.0,
    "ai_audience": 0.6,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on Agile software delivery, emphasizing the importance of defining 'done' as work being live in production. While concepts like telemetry, automation, and continuous integration are mentioned, there is no explicit or implicit discussion of Artificial Intelligence or its applications in Agile, DevOps, or software development. AI is not mentioned, nor are use cases or challenges involving AI. The audience and intent align more with general Agile/DevOps practitioners, not AI-focused roles, resulting in very low scores across all dimensions.",
    "reasoning_summary": "This piece focuses exclusively on real value delivery in Agile software, without discussing AI or its application in these practices. Its themes and audience do not match the AI category, so confidence is extremely low.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-13T21:54:53",
    "ai_confidence": 71.75,
    "ai_mentions": 4.8,
    "ai_alignment": 7.6,
    "ai_depth": 7.3,
    "ai_intent": 7.5,
    "ai_audience": 7.1,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content strongly aligns with principles elevating customer-centric value delivery: it critiques 'fake finishes' and emphasizes the necessity of production releases as the true measure of value—namely, in customers' hands and generating feedback/data. However, 'customer satisfaction' itself is rarely named outright, and only a few lines about 'customer feedback' and 'customer impact' directly reference it as such. The main focus is on shifting organizational practices to center real outcomes for users—not the mechanics of measuring or systematically improving customer satisfaction. Discussion on telemetry, feedback loops, and value delivery makes the content substantively relevant, but it lacks detailed analysis or methodologies for customer satisfaction and does not discuss alignment with Agile or Lean customer metrics in depth. The audience (software practitioners/teams/managers) fits, and nearly all content is on point. No penalties applied, as tone is up-to-date, positive, and forward-thinking.",
    "reasoning_summary": "This content centers on delivering real value to users via live production releases and closing the feedback loop, which closely aligns with customer-centric outcomes. While 'customer satisfaction' isn't deeply analyzed or frequently named, the focus on customer impact and gathering feedback supports a solid fit for the category.",
    "level": "Secondary"
  },
  "Remote Working": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Remote Working",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 9.5,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 1.4,
    "ai_intent": 0.9,
    "ai_audience": 3.2,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses exclusively on the importance of defining 'done' as features being live in production, the need for closing feedback loops, and delivering value. While deeply relevant to Agile practices, it does not address, mention, or allude to remote working challenges, tools, or distributed teams. No explicit or implicit reference to remote work context exists; thus, the alignment, mentions, and depth scores are very low. The audience (Agile practitioners and coaches) partially overlaps with Remote Working, warranting a slightly higher score there, but overall, the content is out of scope for Remote Working.",
    "reasoning_summary": "This article offers valuable Agile insights on value delivery, but it doesn’t mention or address remote working topics, tools, or challenges. It targets Agile practitioners generally, not remote or distributed teams specifically, so it doesn’t fit the 'Remote Working' category.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 88.23,
    "ai_mentions": 6.9,
    "ai_alignment": 9.2,
    "ai_depth": 8.7,
    "ai_intent": 9.1,
    "ai_audience": 8.5,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content deeply aligns with Agile Product Management, emphasizing customer value, feedback loops, evidence-based delivery, and shifting the team's definition of 'done' toward impact and learning—key Agile principles. While it doesn't overtly state 'Agile Product Management,' it heavily references agile values and practices, particularly those focused on product delivery and team alignment with outcomes. The audience is product teams, managers, and coaches. The article is relevant, modern, and has minimal off-topic content, focusing thoroughly on continuous delivery and user value over internal process milestones.",
    "reasoning_summary": "This piece strongly fits Agile Product Management, exploring the importance of delivering real value by getting work live and closing feedback loops. Its advice, audience, and evidence-orientation are highly targeted, making the confidence score high despite the absence of explicit category naming.",
    "level": "Primary"
  },
  "Automated Testing": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Automated Testing",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 41.357,
    "ai_mentions": 1.6,
    "ai_alignment": 4.5,
    "ai_depth": 4.8,
    "ai_intent": 4.2,
    "ai_audience": 4.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on shifting the definition of 'done' to mean work that is live in production, emphasizing value delivery, feedback loops, and real user impact. While there are tangential references to automation, CI/CD, and feedback, automated testing is not directly mentioned nor substantially discussed. The alignment is moderate, as automation is noted as a way to shorten the path to production, but the main thrust is value delivery and redefining team processes, not automated testing practices, tools, or methodologies. No outdated or undermining content is found, so no penalties are applied.",
    "reasoning_summary": "This content strongly discusses value delivery and live releases, touching on automation and CI/CD but only in passing. It doesn't substantially cover automated testing or its best practices, so confidence in this category is moderate-to-low.",
    "level": "Tertiary"
  },
  "Lean Principles": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Lean Principles",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 83.749,
    "ai_mentions": 3.9,
    "ai_alignment": 9.5,
    "ai_depth": 8.6,
    "ai_intent": 9.1,
    "ai_audience": 8.8,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content focuses on real value delivery, shortening feedback loops, and ensuring 'done' means live in production—concepts that closely align with Lean Principles focused on maximising customer value, learning, and process efficiency. Lean core ideas are discussed thoroughly: waste is implied through the critique of 'fake finishes,' there's emphasis on process improvement (continuous feedback, flow to production), and audience targeting is appropriate for Lean practitioners. However, direct mentions of Lean or its tools are minimal, preventing a perfect direct mentions score, and some advice is delivered in broader agile/continuous delivery language rather than strictly Lean terminology. Overall, the content embodies Lean's focus on value, but is less explicit in terminology.",
    "reasoning_summary": "This resource closely fits Lean Principles by emphasising real customer value, minimising wasteful internal milestones, and advocating for tight feedback loops—key Lean themes. Although Lean itself isn't named, the content's intent and depth align strongly with Lean thinking.",
    "level": "Primary"
  },
  "Backlog Refinement": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 27.94,
    "ai_mentions": 0.3,
    "ai_alignment": 3.4,
    "ai_depth": 2.7,
    "ai_intent": 2.6,
    "ai_audience": 7.0,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content does not mention backlog refinement, user stories, or backlog management. Its main focus is on the definition of 'done,' advocating for work to be considered complete only when it's in production. Although relevant to Agile teams and their workflows, the core topic strays from backlog refinement's practices (clarity, prioritisation, collaboration, estimation). The audience is similar (Agile practitioners), and the content is focused, but the alignment, depth, and intent scores are low, as it doesn’t cover refinement per se.",
    "reasoning_summary": "This content targets Agile teams but centers on redefining 'done' as live value delivery, not on backlog refinement. It doesn't mention or explore refinement practices, with limited conceptual relevance. Its audience fits, but overall, it only loosely relates to the category.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 7.8,
    "ai_mentions": 0.3,
    "ai_alignment": 1.4,
    "ai_depth": 1.9,
    "ai_intent": 1.2,
    "ai_audience": 1.8,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content provides a strong case for redefining 'done' in Agile and Lean contexts as meaning 'live in production.' While this discussion aligns with Agile delivery concepts, it does not reference Service Level Expectation (SLE) directly or indirectly, and does not discuss forecasting cycle times, elapsed days, probabilities, or using SLE for flow predictability. The focus remains on value delivery, shortening feedback loops, and promoting outcome-centric thinking, but without conceptual or explicit connection to SLE terminology, principles, or calculation. The intended audience (practitioners, coaches, teams) overlaps with those interested in SLE, but the topic is orthogonal rather than integrated, so the content is not relevant to SLE for classification.",
    "reasoning_summary": "This piece passionately advocates for 'done' meaning live in production, emphasizing value and feedback loops, but does not discuss Service Level Expectation or related metrics. Thus, it doesn't fit the SLE category.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 56.428,
    "ai_mentions": 1.2,
    "ai_alignment": 6.1,
    "ai_depth": 5.7,
    "ai_intent": 6.6,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content strongly discusses the importance of releasing software changes to production for true business value and maintaining effective feedback loops. It emphasizes practices such as automation, CI/CD, telemetry, and culture change—ideas aligned with Digital Transformation. However, it never explicitly uses the phrase 'digital transformation' nor delves deeply into its strategic or enterprise-level implications. Its focus is more on agile delivery and operational value than the broad, organisation-wide digital reinvention emphasized in the category definition. The audience targets practitioners and transformation agents, which is appropriate, but the discussion remains at a team/operational level rather than encompassing full-scale digital enterprise transformation. No penalties are applied as the content is current, direct, and respectful.",
    "reasoning_summary": "The article promotes deploying software to production as the true measure of value, highlighting feedback loops and operational agility. While it aligns with Digital Transformation themes, it focuses more on agile delivery than broader organisation-wide digital change, yielding a moderate confidence score.",
    "level": "Tertiary"
  },
  "Principle": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Principle",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 92.78,
    "ai_mentions": 8.4,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.6,
    "ai_audience": 8.2,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content repeatedly emphasizes actionable principles such as 'evidence over assumptions' (empiricism), 'learning over guessing' (continuous improvement), feedback loops, and value delivery—all central to Agile, Lean, and DevOps principles. Principles are directly discussed, guiding how teams should define and pursue 'done' work. The advice is prescriptive and audience-focused for practitioners seeking to improve delivery practices. Minor deductions in audience and signal reflect its conversational tone and slight promotional close, but these do not detract from substantial principle-focused alignment.",
    "reasoning_summary": "This content exemplifies core delivery principles—empiricism, fast feedback, and value delivery—making principles central to its argument. It explores their meaning and impact, giving actionable advice. The fit with the 'Principle' category is strong, precise, and practical.",
    "level": "Primary"
  },
  "Liberating Structures": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 7.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 0.6,
    "ai_audience": 1.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content thoroughly discusses redefining 'done' and emphasizes real value delivery, focusing on continuous delivery practices, feedback loops, and customer outcomes. However, it never mentions Liberating Structures, facilitation techniques, or any specific related methods. Its language and advice fit agile practitioners, but all core concepts pertain strictly to value delivery in software rather than structured team facilitation. Thus, alignment, depth, and intent scores are extremely low—there is virtually no content relevant to Liberating Structures beyond possible indirect and generic applicability.",
    "reasoning_summary": "This content centers on real value delivery and the meaning of 'done' in software, without any reference to Liberating Structures or related facilitation techniques. While relevant for agile teams, it does not fit this category.",
    "level": "Ignored"
  },
  "DevOps": {
    "resourceId": "9nnnOYDoMu8",
    "category": "DevOps",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 94.1,
    "ai_mentions": 7.8,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.1,
    "ai_audience": 8.7,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content aligns strongly with DevOps principles, focusing on continuous value delivery, feedback loops, automation, and redefining 'done' as code being live in production. The discussion is both conceptual and practical, addressing cultural shifts (celebrating real outcomes), technical practices (automation, telemetry), and organizational habits. The content targets practitioners and leaders seeking to enhance delivery, and depth is evident through specific advice and frameworks. No outdated practices or negative tone were found.",
    "reasoning_summary": "This piece deeply embodies DevOps principles, advocating for live deployments, feedback loops, and real customer value over internal milestones. It thoroughly explores both cultural and technical aspects, making it highly relevant to the DevOps category audience.",
    "level": "Primary"
  },
  "Hybrid Agile": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 17.36,
    "ai_mentions": 0.25,
    "ai_alignment": 2.8,
    "ai_depth": 2.45,
    "ai_intent": 2.35,
    "ai_audience": 4.8,
    "ai_signal": 4.35,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on the definition of 'done' as truly live in production and the importance of delivering real value in agile software delivery. It addresses common pitfalls like celebrating internal milestones over real outcomes and emphasizes feedback loops and learning. However, it does not reference Hybrid Agile explicitly or conceptually, nor does it examine the dysfunctions/specific scenarios resulting from blending agile with traditional methods. The overall focus is pure agile practice improvement, not the challenges of Hybrid Agile.",
    "reasoning_summary": "While this piece offers strong agile delivery advice about 'done' meaning live in production, it never explicitly or implicitly engages with Hybrid Agile or its characteristic challenges, resulting in low category fit.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 19.55,
    "ai_mentions": 0.3,
    "ai_alignment": 1.6,
    "ai_depth": 2.0,
    "ai_intent": 1.4,
    "ai_audience": 7.0,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content centers on redefining 'done' in software delivery—insisting real value is shipped code that’s live in production. It emphasizes short feedback loops, value delivery, and continuous deployment, but never mentions Internal Developer Platforms explicitly. The alignment is slight, since IDPs can enable this, but core themes focus on mindset, delivery practices, and value—not platform architecture, IDP components, or implementation specifics. Audience and signal scores are highest due to relevance to practitioners.",
    "reasoning_summary": "The piece advocates for live production delivery as the standard for 'done,' highlighting automation and outcomes, but doesn't directly or deeply relate to Internal Developer Platforms. Its focus is on delivery philosophy, not platform strategy or structure.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 87.3,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 9.0,
    "ai_intent": 9.2,
    "ai_audience": 8.3,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content focuses on moving from output metrics (‘code complete’) to outcome-based delivery (‘done’ means live in production) and stresses the use of empirical evidence—telemetry, real usage data, and feedback—as a basis for improvement. It advocates for value delivery, closing feedback loops, and using data instead of assumptions, which aligns very strongly with Evidence Based Management. While it doesn’t directly name EBM, it touches on several key dimensions such as evidence-guided action, outcome focus, and learning cycles. The depth is strong in practical advice and mindset shift but stays mainly on ‘why and how’ instead of referencing the formal EBM framework or metrics. Audience is engineering leaders/practitioners, with a strong signal on value over output. No penalties apply; content is current and supportive.",
    "reasoning_summary": "This content thoroughly champions outcome-focused delivery, urging teams to rely on real-world evidence and customer impact rather than internal completion markers. It embodies the core values of Evidence Based Management, with rich examples and actionable advice, making its fit to the category clear and confident.",
    "level": "Primary"
  },
  "Market Adaptability": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 90.927,
    "ai_mentions": 6.7,
    "ai_alignment": 9.5,
    "ai_depth": 9.9,
    "ai_intent": 9.1,
    "ai_audience": 8.9,
    "ai_signal": 10.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content centers around redefining 'done' in software delivery to mean live in production, emphasizing feedback loops, continuous integration, and real-world learning—key Agile and DevOps topics. It thoroughly examines strategies to shorten delivery cycles and close feedback loops, advocating for outcomes-focused practices directly aligned with market adaptability. The intent is prescriptive and motivational for technical and team audiences, focusing on agility, adaptability, and value-driven outcomes. Terminology and principles are highly consistent with the category definition, and there is deep exploration (not surface-level), clear practical advice, and exclusively relevant focus. No outdated practices or off-topic content were found, and no penalties were applied.",
    "reasoning_summary": "This content closely fits 'Market Adaptability' by urging a shift to production-focused delivery, stressing Agile feedback, real value, and outcome-driven releases. It provides actionable strategies and detailed discussion for professionals seeking faster adaptation to market needs.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 32.8,
    "ai_mentions": 1.3,
    "ai_alignment": 4.8,
    "ai_depth": 4.2,
    "ai_intent": 4.5,
    "ai_audience": 8.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content strongly emphasizes delivery of real value, closing feedback loops, and using real-world data to inform decisions. These are principles adjacent to complexity thinking—especially feedback loops, learning, and adaptive behavior. However, there are no direct mentions of complexity science, its theories, or any named frameworks. The discussion is focused on practical Agile and DevOps delivery, which at best implicitly promotes some ideas found in complexity thinking, but does not explicitly discuss emergence, non-linearity, or complexity science. The piece is practical and focused, targeting practitioners, but lacks theoretical depth or reference to complexity frameworks. Therefore, confidence for strict 'Complexity Thinking' classification remains low.",
    "reasoning_summary": "This content promotes real value delivery and rapid feedback, tangentially touching on principles found in complexity thinking, but it lacks explicit mention of complexity science, frameworks, or theory. It's a practical Agile piece, not a direct fit for the 'Complexity Thinking' category.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 45.28,
    "ai_mentions": 0.0,
    "ai_alignment": 6.6,
    "ai_depth": 5.7,
    "ai_intent": 7.2,
    "ai_audience": 7.9,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content never directly mentions MVP or Minimum Viable Product concepts. Instead, it focuses on the importance of delivering increments to production and gathering real feedback, which conceptually aligns with some Lean/Agile goals also found in MVP discussions. However, the central topic is redefining 'done' in software delivery (i.e., shifting from code complete to live in production). There are surface-level themes that connect to MVP principles—such as learning from real user feedback, deploying quickly, and validating with evidence—but the content does not discuss building or iterating an MVP, nor does it cover MVP-specific strategies, feature selection, or case studies. The intended audience (teams seeking to improve delivery and feedback loops) is adjacent to the MVP audience. The content is focused on incremental change and learning, resulting in a high signal-to-noise ratio, but the depth in terms of MVP as a distinct methodology or framework is lacking.",
    "reasoning_summary": "While the article's focus on live feedback and value delivery aligns with MVP philosophies, it does not explicitly discuss MVPs or their core strategies. Its main concern is redefining 'done' in software delivery, with only tangential relevance to the 'Minimum Viable Product' category.",
    "level": "Tertiary"
  },
  "Cycle Time": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Cycle Time",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 57.48,
    "ai_mentions": 2.6,
    "ai_alignment": 6.9,
    "ai_depth": 6.7,
    "ai_intent": 7.2,
    "ai_audience": 8.4,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content directly discusses the importance of defining 'done' as work being live in production, which has implications for cycle time (i.e., measuring value delivery from initiation to production). While 'Cycle Time' is never explicitly mentioned, the themes—closing feedback loops, shortening delivery paths, and measuring actual user impact—strongly align with the spirit of Cycle Time in Agile/DevOps. The audience and intent are well matched, focusing on practitioners and coaches aiming for efficient delivery. However, the piece does not detail Cycle Time measurement or explicitly address it as a metric, instead focusing broadly on 'done' and value delivery. Therefore, the alignment and depth are solid but not maximal. There is very little off-topic content. No penalties are needed as the advice is current and supportive.",
    "reasoning_summary": "This content aligns with Cycle Time concepts, emphasizing rapid value delivery and defining 'done' as work being live in production. While it doesn't directly reference Cycle Time or its metrics, it supports themes like shortening delivery paths—making it relevant but not a perfect fit for the specific category.",
    "level": "Tertiary"
  },
  "Platform Engineering": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 35.23,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.2,
    "ai_intent": 4.5,
    "ai_audience": 6.0,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content centers on redefining “done” as live in production, urging teams to focus on deploying to production and gathering real feedback. While it references automation, CI/CD pipelines, telemetry, and short feedback loops—topics adjacent to platform engineering—there are no direct mentions of platform engineering or Internal Developer Platforms (IDPs). The intent is aligned with developer efficiency but remains focused on agile delivery and value realization rather than designing or operating internal platforms. The discussion’s depth is moderate regarding deployment best practices but shallow on actual platform engineering specifics.",
    "reasoning_summary": "While the post advocates for production-first thinking, feedback loops, and automation—all concepts relevant to platform engineering—it never mentions or deeply explores platform engineering itself. The focus is on software delivery discipline, not internal platform construction.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 68.8,
    "ai_mentions": 2.7,
    "ai_alignment": 7.6,
    "ai_depth": 6.9,
    "ai_intent": 7.1,
    "ai_audience": 8.2,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content strongly advocates for shifting team focus from internal markers to real production outcomes, referencing working with teams and transitioning mindsets. It aligns with Agile/DevOps, emphasizes feedback loops, and mentions coaching teams, but is primarily about value delivery definitions rather than direct team collaboration techniques, dynamics, or psychological safety. Audience is teams/leaders in Agile settings. Discussion is substantive yet doesn't deeply explore the nuance of team communication or collaboration tools.",
    "reasoning_summary": "While the piece centers on Agile teams and their delivery mindset, it addresses team behavior in the context of value delivery rather than direct collaboration dynamics. It's relevant for Agile practitioners but only moderately fits the Team Collaboration category.",
    "level": "Secondary"
  },
  "Technical Mastery": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 82.55,
    "ai_mentions": 4.4,
    "ai_alignment": 9.0,
    "ai_depth": 8.8,
    "ai_intent": 8.1,
    "ai_audience": 8.2,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content directly tackles key practices of Technical Mastery—advocating for 'done' as deployed, emphasizing continuous integration, automation, meaningful telemetry, and feedback loops. It explores root problems (confusing code complete with value delivery) and prescribes modern engineering solutions. Content is deeply aligned, targets practitioners, and is focused, but explicit direct references to 'Technical Mastery' are few. No penalties as it's relevant and uses up-to-date concepts.",
    "reasoning_summary": "This piece is strongly aligned with Technical Mastery, stressing high-quality engineering practices like automation, CI/CD, and feedback loops to deliver real value. It's deeply relevant for practitioners, thoroughly explores its topic, and makes actionable recommendations, though direct category mentions are low.",
    "level": "Primary"
  },
  "Windows": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Windows",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 7.3,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.1,
    "ai_intent": 1.3,
    "ai_audience": 1.8,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content makes no explicit mention of the Windows operating system. Its main themes concentrate on agile software delivery, the definition of 'done,' and continuous deployment practices, which are generic and not specific to Windows environments. There are no discussions of Windows installation, configuration, troubleshooting, or any topic unique to Windows. The intended audience seems to be software development teams and agile practitioners, not specifically those engaged with the Windows OS. No obsolete or contradictory tone is present, so penalties are not applied. The confidence score is very low since the content does not overlap with the Windows category in a direct or substantial way.",
    "reasoning_summary": "This content doesn't reference or focus on Windows at all—it's about software delivery best practices and value realisation, not OS-specific topics. It scores extremely low for category fit, as neither the themes nor the audience align with the Windows classification.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Working Agreements",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 38.68,
    "ai_mentions": 0.3,
    "ai_alignment": 3.7,
    "ai_depth": 3.6,
    "ai_intent": 3.9,
    "ai_audience": 4.2,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses on clarifying the definition of 'done' as requiring production release rather than just code completion. While this may be codified in some teams' working agreements, the article does not explicitly discuss team norms, co-creation of agreements, adaptation, or collaboration protocols. Instead, the piece emphasizes value delivery, feedback loops, and changing team mindset—concepts adjacent to working agreements but not a direct or thorough exploration. Mentions of 'explicit,' 'agreement,' or team creation of standards are missing, so there are minimal direct mentions. The intent is partly informative for practitioners but not strictly about working agreements as a collaborative team practice. The discussion's depth is moderate—mostly oriented at re-shaping team perspectives on delivery criteria rather than exploring how teams collectively build or evolve working agreements. Audience alignment is decent as it addresses Agile teams, but the focus is more on software delivery effectiveness than on team agreement structures. Signal-to-noise is moderate; much is relevant to Agile delivery, but only tangential to working agreements.",
    "reasoning_summary": "This content centers on redefining 'done' as live in production, urging value-oriented delivery. While related to standards teams might codify, it does not explicitly discuss the collaborative creation, maintenance, or purpose of working agreements—making its fit to the category moderate to weak.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 13.65,
    "ai_mentions": 0.1,
    "ai_alignment": 1.8,
    "ai_depth": 2.2,
    "ai_intent": 2.3,
    "ai_audience": 3.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content is a thematic exploration of redefining 'done' in Agile/DevOps, centering on value delivery and closing feedback loops. It strongly argues that work is only 'done' when live in production and used by customers. However, there are virtually no direct mentions or instructive guides on installing or configuring tools, platforms, or environments. No explicit configuration steps, troubleshooting, system requirements, or best practice details are present. Audience overlap exists (practitioners), but focus remains conceptual, not technical. Minimal alignment to 'Install and Configuration' beyond tangential references to automating deployment pipelines or shortening the path to production.",
    "reasoning_summary": "This content focuses on the philosophy of delivering real value by getting work live in production, but lacks direct guidance or specifics on installation and configuration. It’s more about mindset than technical procedures, so confidence for this category is very low.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 63.18,
    "ai_mentions": 2.3,
    "ai_alignment": 8.2,
    "ai_depth": 7.7,
    "ai_intent": 7.4,
    "ai_audience": 7.1,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "This content uses language that alludes to organisational culture—challenging the norm of celebrating 'fake finishes' and advocating for a culture focused on real outcomes. It references team and organisational habits, stakeholder frustration, and shifting conversations, which touches on cultural change. However, explicit references to 'organisational culture' are absent, and cultural themes are implied rather than deeply dissected. The piece is aimed at practitioners and leaders interested in effective delivery practices, which overlaps with culture-oriented audiences, but the main thrust is delivery-focused. It offers some actionable strategies for cultural change (redefining 'done', reward real outcomes), but the content is more practical than analytical regarding culture itself. Signal is good with little fluff, but most of the piece is about mindsets and delivery habits, not foundational cultural theory.",
    "reasoning_summary": "This article discusses shifting team mindsets from internal milestones to real customer outcomes—an idea closely tied to organisational culture, but without naming it directly. It provides practical suggestions and cultural implications, making it relevant, though not deeply focused on culture as its core subject.",
    "level": "Secondary"
  },
  "Market Share": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Market Share",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 15.32,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.1,
    "ai_intent": 0.9,
    "ai_audience": 2.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on defining 'done' in software delivery as being live in production and creating feedback loops for learning and value delivery, emphasizing agile practices and customer impact. There is no mention or substantial discussion of market share, competitive positioning, or strategies to increase market presence. While customer value is discussed, it is framed in terms of process improvement, not in the context of capturing or measuring market share. The audience is mainly software delivery teams rather than market strategists.",
    "reasoning_summary": "This piece is focused on redefining 'done' in software delivery to mean live value for the user, not on market share. While customer impact and learning are featured, there's no significant alignment with competitive strategies or market share growth.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 73.14,
    "ai_mentions": 2.7,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 7.4,
    "ai_audience": 8.1,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "Direct mentions of 'Lean Thinking' or explicit Lean terminology are absent, limiting the 'mentions' score. Conceptual alignment is strong, as the content embodies Lean principles such as delivering value to customers, minimising waste (by avoiding 'fake finishes'), shortening feedback loops, and focusing on real outcomes—these echo Lean Thinking's mindset. The piece discusses systemic inefficiencies and recommends process changes similar to Lean tools (such as CI/CD for faster flow), but it doesn't refer directly to canonical Lean terms like Muda, 5S, or Value Stream Mapping. Depth is good: the author delves into mindset shift, gives practical steps, and illustrates the implications of redefining 'done.' The intent is to drive cultural and behavioral change in software delivery, which fits the Lean Thinking audience, though the framing is slightly more Agile-oriented. The audience (software delivery teams, leaders) overlaps strongly with Lean practitioners, justifying a high audience score. Signal is strong: nearly the entire text is focused on 'real value' and improving workflow, with little to no off-topic content. No penalty is needed, as neither out-of-date practices nor contradictory tone are present.",
    "reasoning_summary": "While the content doesn't name Lean Thinking explicitly, its focus on delivering customer value, eliminating wasteful milestones, and shortening feedback loops is highly aligned with Lean principles. The discussion is detailed, actionable, and targets an audience well-matched to Lean Thinking, resulting in strong—but not perfect—confidence.",
    "level": "Secondary"
  },
  "Agile Philosophy": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 94.2,
    "ai_mentions": 8.5,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 9.2,
    "ai_signal": 9.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content closely aligns with Agile Philosophy, emphasizing value delivery, closing feedback loops, customer outcomes, and adaptability—core to Agile principles. Direct mentions of 'agility,' learning, and delivering real value reinforce alignment. It critically engages with common organizational pitfalls from a philosophical angle, not just practices or frameworks. The depth is high, as it moves beyond definitions to organizational change and mindsets, and targets both practitioners and leaders. Signal-to-noise is excellent, with focused, practical advice rooted in Agile ethos. No penalties apply, as the tone and content match modern Agile perspectives.",
    "reasoning_summary": "This content is a strong match for Agile Philosophy, thoroughly discussing customer value, feedback loops, and mindset shifts fundamental to Agile. It goes beyond process, targeting those seeking to deepen their understanding and adoption of Agile values.",
    "level": "Primary"
  },
  "Deployment Strategies": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 67.4,
    "ai_mentions": 3.8,
    "ai_alignment": 7.9,
    "ai_depth": 7.4,
    "ai_intent": 8.2,
    "ai_audience": 7.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content champions the mindset that 'done' means live in production and emphasizes the importance of delivering value by shipping code to users. It advocates for shortening the release cycle through automation, CI/CD, and closing feedback loops. However, while it references deployment practices like automation and continuous delivery, it doesn't explicitly discuss Blue-Green Deployments, Canary Releases, or specific deployment methodologies in detail. The core concepts are highly aligned with the category, but coverage is more about cultural mindset and value delivery than in-depth technical deployment strategies.",
    "reasoning_summary": "This content strongly aligns with the intent of Deployment Strategies by advocating for delivering to production and shortening release cycles, though it’s more focused on mindset than detailed tactics. It clearly targets practitioners aiming for real customer value through actual live deployments.",
    "level": "Secondary"
  },
  "Lean": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Lean",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 43.16,
    "ai_mentions": 2.3,
    "ai_alignment": 5.6,
    "ai_depth": 3.8,
    "ai_intent": 5.9,
    "ai_audience": 6.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content champions value delivery and minimizing non-value-adding activities, resonating somewhat with Lean's focus on real outcomes, feedback, and customer value. However, it refrains from directly referencing Lean or its frameworks (e.g., 5S, Muda). While 'waste' is implicitly addressed (work that is not live is wasteful), there is no explicit Lean toolkit or methodology cited. The main target is software practitioners seeking better delivery practices, overlapping with but not exclusively Lean-focused audiences. There is some thematic overlap but not enough for a strong alignment or depth score, as the primary discourse revolves around redefining 'done' in agile/software delivery contexts rather than Lean principles or tools.",
    "reasoning_summary": "While the content shares Lean-like priorities—real value, feedback, and avoiding waste—it never references Lean explicitly or discuss its tools. The overlap is conceptual but not deep or direct, making this a borderline candidate for the category with modest confidence.",
    "level": "Tertiary"
  },
  "Social Technologies": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Social Technologies",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 84.9,
    "ai_mentions": 4.7,
    "ai_alignment": 9.8,
    "ai_depth": 8.9,
    "ai_intent": 8.7,
    "ai_audience": 8.5,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "While the content doesn't directly name 'social technologies,' it is conceptually aligned, focusing on value delivery, feedback loops, and redefining 'done'—all core to Agile, Lean, and DevOps social frameworks. The article explores key social tech principles, such as collaboration, organisational culture change, and continuous improvement. It targets practitioners and leaders seeking to optimise team processes for real-world impact. Discussion is deep and purposeful, referencing direct application and attitude shifts. Minor deduction in mentions due to lack of explicit category labeling.",
    "reasoning_summary": "This content strongly fits Social Technologies, advocating for real value delivery and iterative learning. It deeply addresses feedback loops, continuous improvement, and organisational culture change, making it highly relevant even if it doesn’t explicitly use the category’s name.",
    "level": "Primary"
  },
  "Sensemaking": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Sensemaking",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 54.34,
    "ai_mentions": 0.3,
    "ai_alignment": 6.0,
    "ai_depth": 5.5,
    "ai_intent": 6.2,
    "ai_audience": 7.1,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content does not directly reference sensemaking or its frameworks, nor does it thoroughly discuss interpreting complexity or decision-making in uncertain environments. The primary focus is redefining 'done' as value realized in production, emphasizing learning from real usage and closing feedback loops. While this relates tangentially to organizational learning and adaptation (which overlaps with sensemaking principles), it lacks explicit alignment or depth regarding the sensemaking domain. The audience (software delivery, agile teams) could overlap with sensemaking practitioners, but the main intent rests on delivery and outcome measurement rather than interpreting complex environments. Thus, the signal-to-noise is strong, but not decisively aligned with the category definition.",
    "reasoning_summary": "While the article highlights learning from real-world data and adapts based on feedback, its main focus is on software delivery practices, not on sensemaking as an organizational capability for navigating complexity. Its relevance is peripheral and not a strong categorical fit.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Azure Repos",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 6.3,
    "ai_mentions": 0.1,
    "ai_alignment": 0.5,
    "ai_depth": 0.2,
    "ai_intent": 0.2,
    "ai_audience": 9.1,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content centers on the concept of 'done' in software delivery, emphasizing the need for code to be live in production to be considered complete. It discusses value delivery, feedback loops, and CI/CD processes at a high level. There is no explicit or implicit mention of Azure Repos—no discussion of source control, branching, pull requests, or any Azure Repos-specific functionalities. The only tenuous alignment is that teams using Azure Repos might resonate with value delivery concepts, but the content is broadly applicable to any development workflow and does not target Azure Repos users specifically. Technical terms like automation, continuous integration, and deployment pipelines are mentioned, but these are not linked to Azure Repos. Therefore, the direct mention, conceptual alignment, depth, and intent scores are very low, while the audience and signal scores reflect that it at least targets practitioners in software teams.",
    "reasoning_summary": "This piece doesn't discuss Azure Repos or its features; instead, it speaks broadly about value delivery and finishing work by deploying to production. Its relevance to Azure Repos is at best indirect, so the content does not fit this category.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Operational Practices",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 94.8,
    "ai_mentions": 8.4,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 8.8,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly and repeatedly references core operational practice themes—including delivery to production, automation, continuous integration, and closing the feedback loop. It teaches practical, actionable strategies: redefining 'done,' investing in CI/CD pipelines, gathering telemetry, focusing on evidence, and learning from real customers. The discussion is highly aligned and deep, specifically oriented at Agile/Lean/DevOps practitioners and teams striving for operational excellence and real customer value, with minimal off-topic content.",
    "reasoning_summary": "This content expertly addresses operational practices, offering practical guidance on delivering real value by focusing on work that is live in production. It aligns closely with the category, demonstrates depth, and targets practitioners seeking to improve process outcomes and organisational efficiency.",
    "level": "Primary"
  },
  "Empirical Process Control": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 86.263,
    "ai_mentions": 4.3,
    "ai_alignment": 9.4,
    "ai_depth": 8.9,
    "ai_intent": 8.6,
    "ai_audience": 8.7,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content consistently reinforces core empirical process control principles: transparency about delivery status (done means live), inspection through telemetry and real evidence, and adaptation based on real user feedback. It uses practical examples of closing feedback loops and rejecting vanity metrics, focusing on outcomes rather than internal milestones. While the term 'empirical process control' isn't directly named and Agile/Scrum isn't mentioned explicitly, the intent, conceptual alignment, and depth firmly situate the article in this category. The target audience—practitioners and teams involved in software delivery—matches well, and the signal remains high throughout. No penalty is warranted, as the tone and advice align perfectly with current empirical process control thinking.",
    "reasoning_summary": "This content deeply embodies empirical process control by emphasizing real feedback from production, outcome-focused delivery, and the necessity for evidence over assumptions—core to agile thinking. It’s highly relevant, practical, and focused on guiding teams to adapt based on learned results.",
    "level": "Primary"
  },
  "Employee Engagement": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 27.84,
    "ai_mentions": 0.5,
    "ai_alignment": 3.2,
    "ai_depth": 3.7,
    "ai_intent": 2.9,
    "ai_audience": 3.1,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on redefining 'done' as 'live in production' and emphasizes value delivery, feedback loops, and learning through real user feedback within software delivery. While there are faint overlaps with employee motivation (encouraging learning and real accomplishment), it never directly discusses employee engagement principles, strategies for motivation, or the psychological/social aspects outlined in the category definition. The main theme centers around delivery process improvement, not on enhancing motivation or commitment among employees. Direct mentions and conceptual fit are minimal, depth skims the edges of the human element, and the intended audience (software teams/leaders) are not addressed from an engagement theory lens.",
    "reasoning_summary": "This content is focused on software delivery practices and real value delivery, not on employee engagement strategies. While it touches on team learning and celebration of outcomes, it doesn't explore the core psychological aspects or motivational theories relevant to employee engagement.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 48.7,
    "ai_mentions": 0.6,
    "ai_alignment": 5.8,
    "ai_depth": 4.9,
    "ai_intent": 5.7,
    "ai_audience": 6.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content centers on shifting software teams to define 'done' as live in production, emphasizing feedback loops, evidence-based value, and telemetry. These concepts partially align with Systems Thinking—feedback loops and end-to-end value delivery are key principles. However, the article does not explicitly reference Systems Thinking or its foundational frameworks, does not use its terminology, and is focused more on agile and continuous delivery mindsets than holistic systems mapping or analysis. It offers depth around product delivery and learning cycles, but with little to no direct mention of systemic interrelationships or tools from the Systems Thinking domain. The main audience (software delivery teams) loosely overlaps but isn't explicitly targeted at systems thinkers or organizational change strategists. Overall, it embodies compatible thinking but is not a strong or explicit fit for the category.",
    "reasoning_summary": "While the article discusses feedback loops and value delivery—ideas related to Systems Thinking—it doesn’t reference Systems Thinking concepts, frameworks, or language directly. Its depth and intent are connected but not centered on the discipline, yielding a moderate overall fit.",
    "level": "Tertiary"
  },
  "Throughput": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Throughput",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 33.16,
    "ai_mentions": 0.5,
    "ai_alignment": 3.6,
    "ai_depth": 3.2,
    "ai_intent": 5.7,
    "ai_audience": 6.1,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on redefining 'done' as 'live in production' and stresses real value delivery, feedback loops, and impact for users. However, it never mentions throughput explicitly nor discusses throughput as a delivery metric or measurement basis. The core theme is process definition and value orientation, not tracking throughput units or patterns. While some overlap with delivery metrics exists (e.g., cycle time and customer outcomes), the content lacks any substantive discussion or visualization of throughput, empirical forecasts, or measurable delivery capacity. Therefore, confidence in alignment with the Throughput category is low, though some tangential audience and topic relevance exists.",
    "reasoning_summary": "This piece centers on redefining 'done' as value delivered to users, not explicitly on throughput metrics. While it shares related delivery principles and targets similar audiences, it doesn’t analyze or assess throughput as a delivery metric, resulting in low confidence for the 'Throughput' category.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 94.85,
    "ai_mentions": 6.7,
    "ai_alignment": 9.75,
    "ai_depth": 9.6,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content strongly aligns with the Professional Scrum ethos by emphasizing 'Done' as 'live in production', the importance of evidence-based learning, and focusing on real value and outcomes—central to empiricism and technical excellence. It critiques shallow Scrum implementations ('fake finishes'), demonstrating depth and practical insight. The text repeatedly targets practitioners and leaders working with Scrum, advocating for closing feedback loops and fostering accountability, all core to the category's definition.",
    "reasoning_summary": "This content deeply embodies Professional Scrum, urging teams to define 'Done' as live value in production, not just internal completion. Its focus on learning from evidence, technical rigor, and real outcomes is tightly aligned with the ethos and principles of Professional Scrum, making it an exemplary fit.",
    "level": "Primary"
  },
  "Company as a Product": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Company as a Product",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 54.65,
    "ai_mentions": 1.2,
    "ai_alignment": 6.9,
    "ai_depth": 5.6,
    "ai_intent": 7.15,
    "ai_audience": 7.95,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "This content focuses on redefining 'done' in software delivery to mean 'live in production,' emphasizing customer impact, real outcomes, and rapid feedback loops. It aligns with principles of customer-centricity and measurable outcomes foundational to 'Company as a Product.' However, it does not directly mention CaaP or discuss organisational strategy at a company-wide level. The discussion remains at a team/product delivery layer, without broader references to CaaP frameworks, cross-functional org design, or company-wide strategic alignment. Thus, alignment and depth are moderate, but strong signal and audience overlap yield a moderate overall confidence.",
    "reasoning_summary": "The content champions customer value, fast feedback, and outcome focus, echoing CaaP principles. Yet, it centers on software delivery teams, lacking direct CaaP references or broader organisational strategy, so its fit with 'Company as a Product' is moderate but not strong.",
    "level": "Tertiary"
  },
  "Organisational Psychology": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Organisational Psychology",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 34.39,
    "ai_mentions": 0.2,
    "ai_alignment": 3.6,
    "ai_depth": 3.85,
    "ai_intent": 4.8,
    "ai_audience": 7.0,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on the definition of 'done' in software delivery and emphasizes the importance of delivering real value by getting work live to users. While it briefly touches on team learning, motivation, and value delivery, it does not explicitly discuss psychological theories, organisational behaviour, or group dynamics central to Organisational Psychology. The overall purpose is more about process optimization than psychological principles, with minimal direct or conceptual references to the intended category.",
    "reasoning_summary": "While the article highlights motivation and team outcomes, it mainly concentrates on practical delivery processes rather than psychological principles, providing only marginal alignment with Organisational Psychology.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Backlog",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 37.1,
    "ai_mentions": 0.6,
    "ai_alignment": 4.3,
    "ai_depth": 3.2,
    "ai_intent": 4.8,
    "ai_audience": 5.7,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content thoroughly discusses the definition of 'done,' emphasizing that value is only delivered when software is live in production. While it champions core Agile concepts—user value, feedback loops, continuous delivery—it never directly references or discusses the Product Backlog or its management techniques, roles, refinement, prioritization, or tooling. The closest alignment is tangential: encouraging teams to focus backlog items on production-ready increments. The intended audience overlaps with backlog practitioners, but the discussion is much broader and product delivery-centric, not backlog-specific. Thus, mention and depth scores are low, while alignment and intent are modest, yielding a low overall confidence for fitting specifically under the Product Backlog category.",
    "reasoning_summary": "This content powerfully advocates for a 'done means live' mindset and real user value, but doesn't address Product Backlog principles, techniques, or management. While highly relevant to Agile delivery, it isn't focused enough to fit the Product Backlog category with confidence.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 76.7,
    "ai_mentions": 3.6,
    "ai_alignment": 8.8,
    "ai_depth": 7.3,
    "ai_intent": 8.0,
    "ai_audience": 7.6,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content doesn't explicitly mention 'Agile Leadership' but strongly aligns with core leadership concerns: challenging teams to redefine 'done', fostering real value delivery, and focusing on outcome-based measures over internal milestones. The tone targets Agile practitioners and leaders pushing for continuous improvement and value focus. While it guides leaders to shift mindsets and systems, it doesn't deeply discuss formal Agile leadership models or roles—hence depth is somewhat moderate. Mentions are low, but alignment and relevance are strong.",
    "reasoning_summary": "This piece strongly fits Agile Leadership by urging leaders to redefine 'done', focus on customer value, and foster a learning environment. Its actionable advice and advocacy for continuous improvement closely match Agile Leadership principles, though it doesn't deeply explore formal leadership theory.",
    "level": "Secondary"
  },
  "Test First Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Test First Development",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 39.84,
    "ai_mentions": 0.25,
    "ai_alignment": 3.65,
    "ai_depth": 4.0,
    "ai_intent": 3.85,
    "ai_audience": 4.5,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content strongly champions the principle of 'done' meaning live in production and prioritizes rapid feedback with real users, which conceptually aligns with the spirit of testing and validation before claiming completion. However, it makes no direct reference to Test First Development or its core practices, such as writing tests before code, specifying acceptance criteria first, or emphasizing automation as a signal of maturity. The automation and CI/CD mentions are in service of reducing deployment friction rather than strictly Test First workflows. There is some overlap in audience and philosophy—such as valuing fast feedback and iterative learning—but the content is fundamentally about redefining 'done' and optimizing deployment pipelines, not Test First methods. The discussion on value delivery and telemetry is substantive, but it remains focused on product-release criteria and operational feedback rather than the upstream discipline of Test First Development. No penalties apply, but the confidence is low due to limited topical relevance beyond general agile/software delivery.",
    "reasoning_summary": "While the content values feedback and quality delivery—which shares philosophical ground with Test First Development—it doesn't cover Test First practices or principles directly. Its focus is more on getting features live and closing feedback loops, not on pre-implementation test definition or automation-first workflows.",
    "level": "Ignored"
  },
  "Decision Making": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Decision Making",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 82.3,
    "ai_mentions": 3.3,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 8.1,
    "ai_audience": 8.6,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content strongly aligns with evidence-based Decision Making by emphasizing the need for telemetry, feedback loops, and data to inform real value delivery in software. While it does not mention 'Decision Making' by name, its entire premise centers on structured, empirical methods for evaluating what is actually valuable. The discussion of closing feedback loops, using usage data, and shifting incentives illustrates substantial depth. The audience (teams, coaches, organizational leaders in Agile/DevOps) is matched, and the focus remains tightly relevant throughout. Direct category mentions are low, but conceptual and practical fit is very high.",
    "reasoning_summary": "This piece powerfully supports evidence-led Decision Making by pushing teams to value data, feedback loops, and outcomes over assumptions. It fits the category well, showing clear conceptual alignment and actionable practices, though it doesn’t use the category label directly.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 30.984,
    "ai_mentions": 0.7,
    "ai_alignment": 3.3,
    "ai_depth": 3.9,
    "ai_intent": 2.9,
    "ai_audience": 4.2,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content focuses on redefining 'done' in software delivery, emphasizing value delivery, telemetry, and closing the feedback loop. While these themes touch on some systemic issues, they do not directly discuss the identification or resolution of technical problems (i.e., troubleshooting). There are no explicit troubleshooting discussions, techniques, or diagnostic methods presented. The audience is technical and some best practices are adjacent to troubleshooting (e.g., using telemetry), but the primary focus is shifting mindsets and processes, not technical troubleshooting. No penalties applied, as content is current and tone is aligned.",
    "reasoning_summary": "This content is about shifting mindsets in software delivery to focus on live, real-world impact—not fixing issues or technical troubleshooting. While themes like telemetry and feedback loops relate tangentially, there's minimal direct relevance to troubleshooting as defined.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Customer Retention",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 66.55,
    "ai_mentions": 2.7,
    "ai_alignment": 7.9,
    "ai_depth": 7.2,
    "ai_intent": 6.3,
    "ai_audience": 7.7,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "Direct use of the term 'customer' is present several times, but 'customer retention' is never explicitly referenced. The content emphasizes delivering real value to users through live software, stressing the necessity of feedback loops, telemetry, and learning from real user data. These practices are conceptually aligned with the foundations of customer retention, particularly in Agile/DevOps contexts, but the piece centers more on internal team processes and the shift in mindset toward continuous delivery, rather than on specific, actionable retention strategies or measurements. The discussion is thorough about value delivery and feedback loops, offering advice on how to redefine 'done' and making outcomes user-focused, but lacks deep exploration of satisfaction metrics or retention-focused case studies. The intended audience (teams, coaches, technical leaders) matches the strategic/technical layer where customer retention questions frequently arise. Nearly all content is relevant, with little off-topic material, but the absence of targeted retention strategies and metrics limits the direct fit to the category.",
    "reasoning_summary": "While the article champions user-centered value and the importance of live feedback, it focuses on continuous delivery rather than explicit customer retention tactics. Its advice and audience are adjacent to retention, but it stops short of directly addressing the strategies and metrics core to that category.",
    "level": "Secondary"
  },
  "Continuous Integration": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 57.92,
    "ai_mentions": 2.8,
    "ai_alignment": 6.7,
    "ai_depth": 5.2,
    "ai_intent": 6.4,
    "ai_audience": 6.9,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content centralizes the meaning of 'done' as live in production and emphasizes shortening delivery cycles and feedback loops. It mentions automation and continuous integration pipelines once, suggesting some relevance, but CI is not the main theme; most discussion orbits value delivery, release practices, and customer feedback. Major CI principles (frequent integration, automated tests, merge conflict handling) are only obliquely alluded to. The audience is technical teams, partially matching the typical CI audience, and the signal is reasonably focused, but the lot of detail is on value delivery rather than explicit CI practice.",
    "reasoning_summary": "While the content encourages automated pipelines and briefly references continuous integration, its focus remains on value delivery and redefining 'done' as live in production. CI is relevant but only as one supporting tactic, not the core subject.",
    "level": "Tertiary"
  },
  "Mentoring": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Mentoring",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 38.62,
    "ai_mentions": 2.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 4.2,
    "ai_audience": 5.1,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content advises teams and practitioners on correct definitions of 'done' and delivering real value, offering practical steps and reflecting on experience. However, explicit mentoring (as defined by the category) is minor: there is some overlap in practices and coaching references, but little on mentor-mentee relationships, leadership skill development, or other core mentoring topics. The main thrust is thought leadership and delivery practice, not guidance for mentoring itself.",
    "reasoning_summary": "While the article offers advice and some coaching tone, it focuses mostly on delivery practices and real value, not on mentoring relationships or growth strategies. Some overlap with mentoring exists, but the fit is limited and indirect.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 83.55,
    "ai_mentions": 4.8,
    "ai_alignment": 8.3,
    "ai_depth": 8.6,
    "ai_intent": 8.4,
    "ai_audience": 7.7,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content strongly aligns with Technical Excellence by stressing the importance of delivering value through live, production-ready increments and closing feedback loops. It advocates automation and CI/CD as enablers of moving work to production, connects internal engineering practices to customer impact, and promotes evidence-driven learning. While direct discussion of specific technical practices is not exhaustive, the entire argument is built on principles that underpin technical excellence in software delivery. The audience is primarily practitioners and teams seeking better engineering outcomes. There is minimal off-topic or filler content. Direct naming of 'technical excellence' is absent; key terms like CI/CD and automation are referenced but not the main subject, weighing down the 'mentions' score. Still, conceptual alignment and depth are high.",
    "reasoning_summary": "This content connects engineering practices like CI/CD and automation to delivering real value, emphasizing that 'done' means live in production. It targets practitioners aiming for high-quality delivery, deeply embodying technical excellence principles even if only referencing specific practices indirectly.",
    "level": "Primary"
  },
  "Definition of Ready": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-13T21:54:53",
    "ai_confidence": 7.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.1,
    "ai_depth": 1.3,
    "ai_intent": 1.2,
    "ai_audience": 1.6,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content directly and thoroughly discusses the Definition of Done, focusing on why 'done' should mean in production and urging teams to align their processes and mindsets accordingly. It never mentions or discusses Definition of Ready, nor does it touch on the preparation, clarity, or readiness of backlog items prior to sprint planning. There is no conceptual alignment or intent with the DoR; the entire focus is on completion criteria, live deployments, and outcome measurements, entirely aligning with DoD. The only remote relevance is that teams confused about 'done' might also misunderstand what being 'ready' means, but this is neither stated nor implied. Audience and signal scores reflect that the content is aimed at Agile practitioners, but this is coincidental. No penalties applied as content is current and not actively satirical.",
    "reasoning_summary": "This content thoroughly discusses Definition of Done—emphasizing live production and value delivery—but does not mention or address Definition of Ready. There's no alignment with DoR criteria, making it a very weak or absent fit for this category.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 83.25,
    "ai_mentions": 5.7,
    "ai_alignment": 9.1,
    "ai_depth": 8.6,
    "ai_intent": 8.9,
    "ai_audience": 8.5,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content focuses on driving organizational value through verifiable outcomes, emphasizing feedback loops, telemetry, evidence, and learning from real usage—all key to evidence-based leadership. 'Evidence' is directly referenced multiple times and the necessity of data-driven decisions is a consistent theme, closely mirroring the category's core. It goes beyond surface-level advocacy, detailing actionable steps to instill data-centric leadership habits (redefining 'done,' telemetry, outcomes over tasks). However, while strongly aligned, the term 'evidence-based leadership' itself is not named explicitly. No penalty is warranted as all recommendations are current and framed in support of the category.",
    "reasoning_summary": "This content strongly aligns with Evidence Based Leadership, focusing on using real-world data, feedback loops, and measurable outcomes to guide decisions and deliver value. It provides specific advice, targets leaders and teams, and applies evidence-driven principles, though it doesn't explicitly use the category name.",
    "level": "Primary"
  },
  "Product Delivery": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Delivery",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 94.2,
    "ai_mentions": 8.8,
    "ai_alignment": 9.7,
    "ai_depth": 9.4,
    "ai_intent": 9.3,
    "ai_audience": 9.2,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content explicitly focuses on redefining 'done' in the context of software delivery—emphasizing live deployment, closing feedback loops, and real customer value. It discusses continuous integration, deployment pipelines, measuring outcomes, and iterating based on live feedback, directly mirroring key topics in the category definition. The discourse is detailed, nuanced, targets practitioners and teams working on product delivery, and maintains very high relevance without veering off-topic. No outdated practices or tone penalties were applicable.",
    "reasoning_summary": "This content directly targets product delivery, teaching why 'done' must mean 'in production.' It explores feedback loops, CI/CD, measurement, and cultural change, providing practical, actionable guidance for practitioners—making it a strong fit for the category.",
    "level": "Primary"
  },
  "Azure Boards": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Azure Boards",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 26.3,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.3,
    "ai_intent": 2.4,
    "ai_audience": 5.5,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content strongly discusses Agile concepts around the definition of 'done', delivering value, and closing feedback loops. However, there are no mentions of Azure Boards or any Azure DevOps tools. The discussion is process-focused, not tool- or board-focused. While relevant to team practitioners and project managers, there's no evidence that Azure Boards is the context or medium for these practices. The intent, therefore, mismatches direct tool usage or discussion. Content is clear and focused, but not aligned with the Azure Boards category.",
    "reasoning_summary": "While the article offers valuable Agile insights about 'done' and value delivery, it doesn't mention Azure Boards or its features. The focus is on mindsets and practices, not on specific tooling or Azure Boards functionality—resulting in a low fit with the category.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 80.93,
    "ai_mentions": 5.8,
    "ai_alignment": 8.7,
    "ai_depth": 8.2,
    "ai_intent": 8.4,
    "ai_audience": 7.8,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "The content tightly aligns with Engineering Practices, emphasizing principles such as CI/CD, feedback loops, automation, and delivery pipelines. While it doesn't repeatedly mention canonical terms like TDD or Clean Code, it substantively discusses agile value delivery, deployment automation, and evidence-driven development—core Agile engineering topics. The depth is strong, presenting practical advice and explicit rationale for production-focused 'done'. Audience focus is technical (teams, coaches), signal is high, but some concepts are broader Agile (e.g., value delivery) rather than strictly engineering-exclusive, so scores do not max out.",
    "reasoning_summary": "This content thoroughly explores agile engineering practices by promoting CI/CD, automation, and real feedback through production releases. Its advice and audience suit the category, though a slightly broader Agile focus keeps scores below the maximum.",
    "level": "Primary"
  },
  "Technical Debt": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Technical Debt",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 28.24,
    "ai_mentions": 0.2,
    "ai_alignment": 3.6,
    "ai_depth": 4.0,
    "ai_intent": 2.9,
    "ai_audience": 7.8,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on redefining 'done' as code live in production, emphasizing delivery, real user feedback, and closing the loop between work and value. While it thoroughly discusses continuous delivery and agile effectiveness, there are no direct mentions of technical debt, nor explicit conceptual overlap with managing or addressing suboptimal code or technical tradeoffs. The article is intended for practitioners but is aligned with a broader DevOps/agile value stream context, not the core concerns of technical debt.",
    "reasoning_summary": "While this article targets agile software teams with insights into value delivery and real feedback, it doesn’t discuss technical debt or related management practices. Its focus is process definition and production readiness, not technical debt concepts or remediation.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 81.783,
    "ai_mentions": 2.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.8,
    "ai_intent": 9.0,
    "ai_audience": 8.9,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content emphasizes delivering real value to customers by focusing on 'done' as live in production, which is closely aligned with Agile Product Operating Model (APOM) principles. It discusses continuous delivery, feedback loops, evidence-driven learning, outcome orientation, and shifting team mindsets—strong conceptual and intentional overlap with APOM. While it does not name 'Agile Product Operating Model' directly, it advances key APOM behaviors (e.g., moving from project milestones to customer-value delivery, continuous improvement, integrating telemetry and evidence into practices, and revising team incentives). The depth is robust, detailing practical steps and mindset shifts, but explicit APOM terminology and certain governance/structure themes are less pronounced. The audience is practitioners, coaches, and change leaders, which fits the APOM context. Signal is high with minimal tangents. No penalties apply for being outdated or critical.",
    "reasoning_summary": "This article thoroughly explores the shift from internal 'done' milestones to actual customer value—a central concept in APOM. While APOM isn't named outright, the narrative embodies its practices and intended mindset, providing actionable depth and a strong fit for leaders shaping Agile product delivery.",
    "level": "Primary"
  },
  "Organisational Physics": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 37.35,
    "ai_mentions": 0.1,
    "ai_alignment": 4.4,
    "ai_depth": 3.8,
    "ai_intent": 3.7,
    "ai_audience": 5.6,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses on redefining 'done' in software delivery as live in production, emphasizing feedback loops and value delivery. While it references systems thinking concepts such as feedback loops and learning from real-world usage, it is situated within software delivery practices rather than broader organisational dynamics. The topic aligns somewhat with Organisational Physics via its emphasis on feedback and learning, but it does not directly discuss systems thinking principles, organisational structure, or holistic dynamics at an organisational scale. Mentions are minimal, and depth is limited to process improvement in software teams rather than a systemic or organisational analysis. No penalties applied as the content is current and not contradicted.",
    "reasoning_summary": "This article stresses the value of real-world feedback in software delivery, touching on feedback loops but stays rooted in team processes. It lacks the broader systems thinking and organisational dynamic focus needed for Organisational Physics, making its fit tangential and only partial.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 53.35,
    "ai_mentions": 1.6,
    "ai_alignment": 6.2,
    "ai_depth": 6.9,
    "ai_intent": 4.7,
    "ai_audience": 7.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content strongly advocates for redefining 'done' in software delivery as 'live in production' rather than code complete, highlighting process pitfalls and suggesting improvements aligned with Agile and DevOps mindsets. It references concepts like feedback loops, value delivery, and automation, which are relevant to business agility trends. However, it only implicitly addresses trends—there’s no explicit analysis of patterns over time, industry-wide shifts, or data-driven examination typical in trend analysis. The main focus is evangelizing best practice and mindset shifts, not systematically analyzing emerging trends or providing supporting data. Direct mention of trend analysis, and even the word 'trend,' is absent. While practitioners in Agile/DevOps will find this relevant, the content primarily serves as expert guidance and motivational coaching, not as a comprehensive or case-based trend analysis piece.",
    "reasoning_summary": "This content champions rethinking 'done' as delivering real value through live releases—highly relevant to Agile and DevOps. However, it offers advice and advocacy rather than actual trend analysis. Few explicit trend references or data-driven insights mean confidence in classifying this as 'Trend Analysis' is moderate.",
    "level": "Tertiary"
  },
  "Deployment Frequency": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-13T21:54:53",
    "ai_confidence": 91.12,
    "ai_mentions": 7.4,
    "ai_alignment": 9.7,
    "ai_depth": 9.4,
    "ai_intent": 9.2,
    "ai_audience": 8.7,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content repeatedly equates 'done' with shipping to production, strongly advocating for work to be live before claiming completeness. Strategies such as shortening paths to production, automation, CI/CD, and feedback loops are directly aligned with Deployment Frequency. The depth is strong, focusing on closing feedback loops and actual value delivery. The target audience is practitioners and teams in Agile/DevOps, matching the category. While 'deployment frequency' isn't named verbatim, the concept (shipping to production quickly/often) is deeply embedded and discussed throughout.",
    "reasoning_summary": "This piece thoroughly explores why work only counts when live, aligning deeply with deployment frequency principles by emphasizing releasing often, automating pipelines, and closing feedback loops. It offers practical strategies and resonates with DevOps teams seeking faster, more impactful delivery.",
    "level": "Primary"
  },
  "Practice": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Practice",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 91.45,
    "ai_mentions": 7.1,
    "ai_alignment": 9.5,
    "ai_depth": 9.1,
    "ai_intent": 8.8,
    "ai_audience": 8.5,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content strongly advocates a practice-oriented mindset: defining 'done' as live in production, which drives real value. Direct mentions of actionable team habits—like automating deployment, continuous integration, closing feedback loops, and gathering telemetry—tie directly to core Practice topics (e.g., Continuous Deployment, feedback loops). The article provides practical steps teams can take to shift their delivery pattern, explores the motivational reasoning for change in depth, and its intent is clearly to inform and support practitioners. The target audience is technical teams and leaders who care about value delivery effectiveness. The focus is consistently on actionable improvement with very minimal off-topic content. There are no signs of outdated advice or tonal misalignment; rather, this is a current, authentic push toward best practices.",
    "reasoning_summary": "This article exemplifies Practice by emphasizing that 'done' means live in production. It delivers practical, actionable advice to teams aiming for real value delivery, aligns deeply with Practice principles like continuous deployment and feedback loops, and avoids off-topic content. Confidence is very high.",
    "level": "Primary"
  },
  "Business Agility": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Business Agility",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 79.62,
    "ai_mentions": 3.6,
    "ai_alignment": 8.8,
    "ai_depth": 8.1,
    "ai_intent": 8.4,
    "ai_audience": 8.0,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content strongly aligns with Business Agility, emphasizing real customer value, feedback loops, and the organizational shift from internal milestones to outcomes. While it directly mentions agility and discusses key practices like CI/CD, measurement, and feedback, it focuses on software delivery rather than comprehensive business-wide agility. The audience is clearly practitioners and leaders seeking improved outcomes through agile principles, and the discussion is substantive but not exhaustive across all business agility facets. There is little filler and off-topic content.",
    "reasoning_summary": "The article closely aligns with Business Agility, thoroughly exploring how true value is delivered only when increments are live in production. It targets agile professionals and leaders, focuses on outcomes and learning, and uses strong, relevant examples for the category.",
    "level": "Secondary"
  },
  "Competence": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Competence",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 77.51,
    "ai_mentions": 2.8,
    "ai_alignment": 8.3,
    "ai_depth": 7.7,
    "ai_intent": 7.3,
    "ai_audience": 7.9,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content does not directly mention 'competence' or its synonyms, hence a low score for direct mentions. However, it strongly aligns with the competence category conceptually, emphasizing the necessity to focus on real outcomes, evidence-based progress, and learning—core traits of professional competence in Agile and DevOps. Depth is solid, exploring key topics (e.g., feedback loops, value delivery, shifting awareness), but the main thrust is about defining 'done' rather than explicitly nurturing or inspecting competence. Intent is highly relevant: it's prescriptive, informative, and corrective, encouraging higher standards aligned with competence. The targeted audience (practitioners, coaches, teams) maps well to the competence discussion. The majority of the content is highly relevant, although a small portion is motivational or anecdotal rather than strictly theoretical or instructional about competence.",
    "reasoning_summary": "This content powerfully supports competence by challenging superficial definitions of 'done' and urging real learning and value delivery, but it only indirectly references competence and development. Its conceptual alignment is high, making it a strong—though not purely categorical—fit.",
    "level": "Secondary"
  },
  "Lean Product Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 84.649,
    "ai_mentions": 4.2,
    "ai_alignment": 8.7,
    "ai_depth": 8.9,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content consistently critiques internal milestones in software delivery and strongly advocates for customer-centric value, rapid feedback loops, and measurement—directly echoing Lean Product Development principles such as maximizing learning, minimizing waste, and focusing on user outcomes. While Lean is not mentioned explicitly, the discussion deeply aligns conceptually: practices like closing the feedback loop, telemetry gathering, and focusing on production delivery reinforce Lean’s priorities. It also targets practitioners and leaders seeking to improve product delivery culture. There’s some indirectness due to a lack of specific Lean terminology or explicit Lean frameworks/tools, so the 'Direct Mentions' score is moderate, but conceptual alignment and depth are both high. The focus is tight, the discussion is substantial, and the audience matches well to those interested in Lean Product Development. No penalties apply; the advice is current and constructive.",
    "reasoning_summary": "This content thoroughly aligns with Lean Product Development through its emphasis on value delivery, real-world outcomes, and learning via feedback loops. While Lean isn’t named, the advice on redefining 'done' and ensuring tight feedback strongly matches Lean’s core principles.",
    "level": "Primary"
  },
  "Agile Strategy": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 76.44,
    "ai_mentions": 5.7,
    "ai_alignment": 8.6,
    "ai_depth": 8.2,
    "ai_intent": 8.0,
    "ai_audience": 7.8,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content strongly promotes Agile principles like continuous value delivery, closing feedback loops, and delivering outcomes that matter—core aspects of Agile Strategy. It directly addresses organizational behavior and change, such as redefining 'done,' focusing on value over internal milestones, and encouraging strategic cultural shifts. The depth includes practical team advice and rationale rooted in Agile methodology. While explicit usage of 'Agile Strategy' as a term is modest, the main concepts fully align. The target audience (leaders, coaches, practitioners shaping organizational strategy) matches well. There is room for a slightly higher score if strategic topics like scaling Agile or leadership roles were addressed more directly, but the relevance and focus are strong.",
    "reasoning_summary": "This piece aligns closely with Agile Strategy by advocating real value delivery and closing feedback loops as central to agile success. Its actionable advice and focus on organizational change demonstrate substantial depth and a strong fit for leaders aiming to integrate Agile principles strategically.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 32.84,
    "ai_mentions": 0.9,
    "ai_alignment": 4.6,
    "ai_depth": 3.7,
    "ai_intent": 5.0,
    "ai_audience": 7.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on redefining 'done' in Agile contexts to mean 'live in production', emphasizing outcomes and feedback loops. However, it does not discuss specific Agile Planning Tools, their selection, usage, or comparison. Techniques and tool-based methodologies for backlog or sprint planning are absent. The audience and signal remain moderately relevant for Agile practitioners, but the lack of tool-specific focus or discussion means the fit falls short of the category definition.",
    "reasoning_summary": "This piece emphasizes Agile value delivery and feedback loops but does not discuss Agile Planning Tools or methodologies directly. Its focus is on mindset and outcomes, not on tools or planning practices, making it only tangentially related to the category.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agentic Agility",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 59.17,
    "ai_mentions": 1.1,
    "ai_alignment": 7.35,
    "ai_depth": 7.43,
    "ai_intent": 6.68,
    "ai_audience": 7.9,
    "ai_signal": 8.34,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content thoroughly discusses the importance of delivering real value by ensuring increments are live in production and emphasizes feedback loops and learning. While these are crucial for Agile effectiveness, the explicit focus is on outcome delivery and customer impact rather than agentic agility per se. Concepts such as agency, intentional adaptive action, accountability, or autonomy—the heart of Agentic Agility—are only implicit, with no direct mention or in-depth exploration. The advice and solutions align with Agile best practices but lack the explicit framing around agency (human or AI), self-management, or intentionality in adapting to evolving goals. The audience is technical and practitioner-focused, and the content is highly relevant and well-targeted, but the core topic is not Agentic Agility itself.",
    "reasoning_summary": "This piece champions true value delivery and learning in Agile but doesn’t directly engage with the core concept of Agentic Agility. While there’s strong relevance to effective practice and outcome focus, explicit discussion of agency, autonomy, or adaptive action—central to Agentic Agility—is lacking.",
    "level": "Tertiary"
  },
  "One Engineering System": {
    "resourceId": "9nnnOYDoMu8",
    "category": "One Engineering System",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 26.36,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.2,
    "ai_intent": 2.0,
    "ai_audience": 7.2,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content discusses the importance of delivering software to production to achieve real value and learning, focusing on redefining 'done' as being live. While it addresses themes relevant to agile delivery and continuous deployment, it does not mention or discuss the One Engineering System (1ES), its principles, components, or integration across teams. The audience is engineering teams, but the main ideas are not explicitly or conceptually tied to 1ES, resulting in low alignment and depth scores.",
    "reasoning_summary": "This article is about redefining 'done' in software delivery to mean live in production, not about One Engineering System. It lacks direct mention or discussion of 1ES principles or integration, so confidence for this category is very low.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Lead Time",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 67.215,
    "ai_mentions": 2.6,
    "ai_alignment": 8.9,
    "ai_depth": 7.3,
    "ai_intent": 6.7,
    "ai_audience": 8.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content strongly aligns conceptually with Lead Time by emphasizing the importance of work being live in production and shortening the path to delivery—central aspects of Lead Time. It discusses closing feedback loops, flow to production, and the need for telemetry, overlapping with Lead Time’s measurement focus. However, the term \"Lead Time\" is never directly mentioned, nor are specific Lead Time measurement techniques or dashboards discussed. The depth is substantial but does not explicitly analyze Lead Time metrics or optimization strategies—most discussion is on redefining 'done' and cultural shifts. The audience (teams/practitioners) matches well. The focus is tight, although some sections could apply more broadly to Agile/DevOps. Thus, the confidence is moderate-high, but not maximal.",
    "reasoning_summary": "This content powerfully echoes Lead Time’s principles by insisting 'done' means live and highlighting the need to shorten delivery cycles. While terminology and direct metrics references are missing, the intent and audience fit closely, resulting in a solid but not top-tier confidence score.",
    "level": "Secondary"
  },
  "Philosophy": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Philosophy",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 71.38,
    "ai_mentions": 2.8,
    "ai_alignment": 8.2,
    "ai_depth": 6.6,
    "ai_intent": 7.2,
    "ai_audience": 8.7,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "The content emphasizes moving beyond superficial milestones in software delivery and advocating for outcomes-based thinking—aligning with the philosophical underpinnings of Agile and value delivery. Concepts like feedback loops, evidence over assumptions, and value to users support strong conceptual alignment. However, there are minimal explicit references to 'philosophy' or foundational frameworks and some advice leans toward practical steps. The audience is aligned (leaders, change agents, strategists), and the tone is focused on values and mindsets over tools or tactics. No penalties were necessary since there is no evidence of outdatedness, satire, or contradiction.",
    "reasoning_summary": "This content aligns well with the Philosophy category by focusing on the deeper reasoning behind defining 'done' and pursuing value delivery. It centers discussion on mindsets, learning, and outcomes rather than technical process, making it a philosophically relevant piece for Agile and delivery professionals.",
    "level": "Secondary"
  },
  "Scaling": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Scaling",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 28.65,
    "ai_mentions": 0.4,
    "ai_alignment": 3.9,
    "ai_depth": 3.7,
    "ai_intent": 3.8,
    "ai_audience": 4.2,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses on redefining 'done' as live in production and emphasizes real value delivery, continuous feedback, and outcome-based thinking, which are generally aligned with Agile and DevOps principles. However, it does not specifically address scaling frameworks, methodologies, cross-team coordination, or enterprise-level perspectives central to the 'Scaling' category. There are no direct references to scaling frameworks (SAFe, LeSS), multi-team challenges, or metrics/KPIs at scale; the discussion remains at the level of team practices. The audience is primarily team-level practitioners, not those orchestrating scaling efforts. While the content has some conceptual overlap (optimising value flow and closing feedback loops), it does not sufficiently address the core complexities or strategies involved in scaling Agile practices.",
    "reasoning_summary": "While this article powerfully champions agile value delivery and closing feedback loops, it doesn't address the specific scaling challenges—such as multi-team coordination or enterprise-wide frameworks—central to the 'Scaling' category, resulting in a low confidence rating.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 71.07,
    "ai_mentions": 2.6,
    "ai_alignment": 8.5,
    "ai_depth": 6.8,
    "ai_intent": 8.0,
    "ai_audience": 7.5,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "The content centers on bridging the gap between technical (code complete, QA, CI/CD pipelines) and social/organizational aspects (redefining 'done,' team learning, shifting mindset, stakeholder satisfaction). While it does not explicitly mention 'sociotechnical systems' or relevant frameworks, its themes—celebrating value delivered through live systems, closing feedback loops, and aligning team/organizational focus with user outcomes—reflect strong conceptual alignment. The analysis includes advice for teams and leaders on organizational change, but discussion of cultural/structural interactions is moderate rather than deep and does not reference theoretical frameworks. The article is clearly aimed at practitioners and change agents interested in improving delivery effectiveness. Minimal noise or tangential content is present.",
    "reasoning_summary": "While the article doesn't mention 'sociotechnical systems' explicitly, it strongly aligns with the category by exploring how organizations can redefine 'done' to ensure teams deliver real user value, not just technical milestones. It provides actionable advice on integrating processes and mindset for true impact.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Revenue per Employee",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 17.37,
    "ai_mentions": 0.7,
    "ai_alignment": 1.8,
    "ai_depth": 2.2,
    "ai_intent": 2.3,
    "ai_audience": 5.9,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content never directly mentions Revenue per Employee nor financial observability metrics. Its focus is on defining 'done' as live in production to close feedback loops and deliver user value. It discusses measuring outcomes and gathering telemetry, but this is tied to team learning and customer impact, not workforce efficiency or systemic financial performance metrics like Revenue per Employee. There is minimal conceptual alignment, shallow (if any) depth, and intent is process/quality improvement rather than metric-based analysis. The audience overlaps with those who might care about org performance metrics but the signal-to-noise ratio is low for this tag.",
    "reasoning_summary": "This content is about redefining 'done' as live in production for feedback and value delivery, not about Revenue per Employee or related metrics. While measurement and outcomes are mentioned, they are not discussed as financial workforce metrics. Alignment is weak.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Self Organisation",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 53.86,
    "ai_mentions": 1.6,
    "ai_alignment": 6.9,
    "ai_depth": 5.1,
    "ai_intent": 7.2,
    "ai_audience": 8.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content addresses Agile principles of value delivery, feedback loops, and redefining 'done.' While it lightly references practices such as retrospectives and continuous deployment (which relate to self-organisation), it never directly discusses self-organisation, autonomy, or team empowerment. The main theme is to shift from process-compliant milestones to truly delivering customer value. Therefore, there is conceptual overlap with self-organisation (via Agile values and improving team focus), but self-organisation is not the explicit focus, nor is it deeply explored as a primary topic.",
    "reasoning_summary": "This content strongly aligns with Agile values and value delivery, indirectly supporting self-organisation principles. However, it doesn't directly address self-organisation or team autonomy, focusing instead on redefining 'done.' Thus, its fit with the category is moderate but not primary.",
    "level": "Tertiary"
  },
  "Asynchronous Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 15.47,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.85,
    "ai_intent": 1.35,
    "ai_audience": 5.17,
    "ai_signal": 4.14,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content primarily focuses on redefining 'done' in software delivery to mean live in production, emphasizing customer value, feedback loops, and lean/agile practices. It does not mention asynchronous development, its tools, principles, or distributed teamwork. The audience overlaps with software practitioners, but the main ideas, depth, intent, and signal are only tangentially related to asynchronous development. No penalties were needed since there is no outdated or contradictory tone.",
    "reasoning_summary": "This content centers on shipping value and feedback in production, with minimal relevance to asynchronous development. It neither addresses distributed work nor asynchronous practices, so the confidence for this category is low.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 11.65,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 1.0,
    "ai_intent": 0.6,
    "ai_audience": 6.1,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content does not reference Test Driven Development (TDD) by name or concept. Its focus is on defining 'done' as production-ready and emphasizes continuous delivery, feedback loops, and value to users—not TDD principles like writing tests first, the red-green-refactor cycle, or automated unit testing strategies. While the target audience (teams and practitioners) slightly overlaps with potential TDD audiences, no section meaningfully discusses core TDD ideas, intent, or practices. There are no penalties for outdatedness or negative tone.",
    "reasoning_summary": "This content focuses on delivering value in production and feedback loops but never addresses TDD concepts or methodology. It is not a close fit for the Test Driven Development category.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Current Value",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 88.67,
    "ai_mentions": 6.6,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 8.5,
    "ai_audience": 9.0,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "The content strongly aligns with the concept of Current Value in Evidence-Based Management, emphasizing real-world impact, live increments, and measurement via telemetry and feedback loops. The main ideas focus on delivering value that can be observed and measured, which fits the category’s definition. There are several direct references to value, learning, and outcomes for real users. Techniques such as automation, continuous integration, and telemetry are recommended to ensure actual value is realized in practice. Although the term 'Current Value' is not explicitly named, conceptually it is thoroughly discussed. The discussion goes beyond surface level, offering actionable suggestions. The intended audience—practitioners seeking to improve agile delivery—is well matched. The entire piece is focused with little digression. No penalties were necessary.",
    "reasoning_summary": "The piece powerfully urges teams to focus on delivering real, measurable value to users by defining “done” as live in production with feedback and telemetry. Its actionable advice and constant emphasis on real outcomes precisely match the goals and audience of the Current Value category.",
    "level": "Primary"
  },
  "Product Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Development",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 92.183,
    "ai_mentions": 7.8,
    "ai_alignment": 9.7,
    "ai_depth": 9.5,
    "ai_intent": 9.3,
    "ai_audience": 8.9,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content strongly aligns with Product Development, consistently advocating for customer-centric, outcome-based delivery—key to Agile product development. It dives into the importance of feedback loops, continuous improvement, evidence over assumptions, and redefines 'done' as value delivered to users. The piece addresses practitioners and leaders, encourages current, actionable methodologies (CI/CD, telemetry), and maintains clear focus. Minor reduction on Direct Mentions: the phrase 'Product Development' itself is not explicitly stated, though concepts saturate the text.",
    "reasoning_summary": "This piece exemplifies Product Development values, urging teams to measure 'done' by real user impact, not internal milestones. It integrates feedback loops, continuous delivery, and evidence-based practices—making it highly relevant for product development professionals.",
    "level": "Primary"
  },
  "Engineering Excellence": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 92.52,
    "ai_mentions": 6.7,
    "ai_alignment": 9.4,
    "ai_depth": 9.1,
    "ai_intent": 9.2,
    "ai_audience": 8.9,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content directly addresses core Engineering Excellence concepts: it stresses the importance of delivering production-ready software, emphasizes value delivery, discusses shortening release cycles with CI/CD and automation, highlights measurement (telemetry), and prioritizes customer outcomes. While it doesn't repeatedly name 'engineering excellence,' its themes and practical advice are fully aligned. The discussion has strong depth—concrete problems are identified, and actionable solutions offered. The target audience is technical practitioners and leaders looking to improve engineering processes. The content is focused, with minimal filler and clear relevance. No penalties apply as the advice is current and matches modern best practices.",
    "reasoning_summary": "This article exemplifies Engineering Excellence, focusing on value-driven delivery, CI/CD, measurement, and customer impact. The advice is actionable and highly relevant, directly aligned with best practices in software engineering. The content is focused and practical for technical teams.",
    "level": "Primary"
  },
  "Psychological Safety": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 14.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.2,
    "ai_depth": 2.0,
    "ai_intent": 1.6,
    "ai_audience": 5.2,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on redefining 'done' as 'live in production', emphasizing value delivery, feedback loops, and real-world outcomes in software delivery. While it discusses team behavior and learning, it does not explicitly address psychological safety, risk-taking, expressing ideas, or leader strategies to foster a safe environment. There are no direct or indirect mentions of psychological safety or its core themes; thus, it does not align deeply with the category.",
    "reasoning_summary": "This content centers on software delivery and value realization, not psychological safety. While team behavior and learning are involved, it misses essential psychological safety themes like risk tolerance and open communication—offering little fit with that category.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Observability",
    "calculated_at": "2025-05-13T21:54:53",
    "ai_confidence": 79.38,
    "ai_mentions": 6.6,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.1,
    "ai_audience": 7.3,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content strongly aligns with observability principles, emphasizing the importance of measuring real outcomes via telemetry, usage data, and closing feedback loops. The explicit call for gathering telemetry and evidence over assumptions provides direct alignment, though the main focus is on redefining 'done' rather than a deep technical dive into observability itself. The discussion is aimed at Agile/DevOps practitioners, advocates practices that require observability tooling, and uses relevant language, but does not go into granular detail about metrics, tools, or case studies. There is some repetition, and a portion of the content addresses value delivery and process change more broadly than observability alone.",
    "reasoning_summary": "This article aligns with Observability by emphasizing the need for telemetry and real usage data to confirm value delivery. While its core is redefining 'done,' it effectively promotes gathering evidence and closing feedback loops, key aspects of observability, earning a strong but not perfect fit.",
    "level": "Secondary"
  },
  "Product Owner": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Owner",
    "calculated_at": "2025-05-13T21:54:54",
    "ai_confidence": 41.85,
    "ai_mentions": 1.2,
    "ai_alignment": 5.9,
    "ai_depth": 5.3,
    "ai_intent": 5.0,
    "ai_audience": 5.3,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content emphasizes shifting the definition of 'done' to mean live, production-ready value, which aligns with product value and feedback central to Product Ownership but never directly mentions the Product Owner or their accountability. It offers guidance relevant to PO concerns (value delivery, feedback loops), but could apply to broader Agile or technical audiences (DevOps, Scrum teams). No direct PO accountability focus or terminology is present, though themes lightly intersect.",
    "reasoning_summary": "While the article discusses delivering real value and feedback loops—concepts important for Product Owners—it never addresses the accountability or role of the Product Owner. Its focus is generic and suitable for a wider Agile audience, limiting its alignment with the 'Product Owner' category.",
    "level": "Tertiary"
  },
  "Capability": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Capability",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 69.79,
    "ai_mentions": 2.7,
    "ai_alignment": 7.2,
    "ai_depth": 7.4,
    "ai_intent": 7.1,
    "ai_audience": 7.6,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content strongly encourages moving beyond internal milestones to delivering real value by having completed work live in production. It addresses systemic issues and enables learning, emphasizing feedback loops, measurement, and customer impact—concepts central to capability-building, especially in Agile/DevOps. However, it never directly uses the term 'capability', and tends to focus on shifting mindsets and processes rather than explicitly detailing enduring, cross-cutting organizational capabilities. There are mentions of automation and pipelines, aligning with capability principles, but the overall discussion is more about changing team definitions of 'done' and value realization rather than building and sustaining capabilities per se.",
    "reasoning_summary": "The content urges teams to deliver real value by redefining “done” as work that’s live in production. While it echoes principles of sustained capability—emphasizing feedback loops, measurement, and systemic value—it does not explicitly focus on capability-building, resulting in a moderate-to-strong confidence fit.",
    "level": "Secondary"
  },
  "Transparency": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Transparency",
    "calculated_at": "2025-05-13T21:54:48",
    "ai_confidence": 41.32,
    "ai_mentions": 2.2,
    "ai_alignment": 4.6,
    "ai_depth": 4.8,
    "ai_intent": 3.3,
    "ai_audience": 3.9,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content advocates for clear criteria of 'done' tied to production and value delivery, indirectly reflecting aspects of transparency (like visibility and honest progress). However, it never directly references transparency or associated Agile practices (e.g., dashboards, information radiators) and doesn't discuss transparency as a primary theme. The main focus is on outcome delivery and the feedback loop, targeting Agile teams and leaders. While some overlap exists (clarifying 'done' status aids visibility), the fit is mostly tangential and lacks explicit exploration of the transparency category’s core themes.",
    "reasoning_summary": "This piece stresses clarity around when work is 'done' and advocates honest progress measurement, which loosely overlaps with transparency. However, it doesn't explicitly discuss transparency or its key tools or practices, so the alignment is limited.",
    "level": "Tertiary"
  },
  "Open Space Agile": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 27.232,
    "ai_mentions": 0.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.4,
    "ai_intent": 2.9,
    "ai_audience": 5.3,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content does not explicitly mention Open Space Agile or Open Space Technology. Its main focus is on redefining 'done' in software delivery to mean live in production, advocating for tighter feedback loops and direct customer value—ideas adjacent to Agile thinking. However, there is no discussion of collaborative emergence, collective ownership, or the facilitation-driven participatory methods central to Open Space Agile. Audience is practitioners interested in delivery excellence, not necessarily organisational change agents. While high on Agile principles, it lacks specifics of Open Space Agile.",
    "reasoning_summary": "The content champions Agile delivery and feedback loops but doesn't discuss or reference Open Space Agile or its unique practices. Its focus is on operational value rather than collaborative transformation, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 15.755,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.7,
    "ai_intent": 1.1,
    "ai_audience": 7.0,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content discusses the importance of only considering work \"done\" once it's live in production and emphasizes value delivery, feedback loops, and effective definition of \"done.\" While these are relevant in Agile and Scrum contexts, there is no explicit mention or substantial discussion of the Daily Scrum event. Key Daily Scrum topics—structure, time-boxing, daily progress inspection—are entirely absent. While the target audience (practitioners) somewhat overlaps with those interested in Daily Scrum, the main focus is broader Agile delivery value, not the event itself.",
    "reasoning_summary": "This content focuses on the meaning of \"done\" in Agile software delivery and value to users, with no mention or substantive alignment to Daily Scrum. It targets practitioners in a related field but lacks direct or detailed discussion of the Daily Scrum event itself.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 64.65,
    "ai_mentions": 1.4,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 6.8,
    "ai_audience": 6.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content focuses on redefining 'done' as code being live in production rather than just completed internally. It highlights the importance of feedback loops, customer-centric value, automation, and telemetry—all relevant to software delivery. However, it centers more on Agile principles and continuous delivery practices than on holistic Application Lifecycle Management (ALM) as defined. There are implicit ties to ALM, particularly in its focus on deployment, feedback, and continuous improvement, but no direct mention of ALM, its full lifecycle stages, governance, or comprehensive lifecycle practices. The audience is practitioners in software teams, likely to overlap but not strictly aligned to ALM strategists or managers. No penalties are needed, as the content is current and respectful.",
    "reasoning_summary": "This content strongly echoes ALM principles, especially regarding deployment and continuous feedback, yet it primarily targets agile delivery. Its lack of direct ALM references and broader governance focus lowers confidence, though its depth and value orientation make it relevant to ALM practitioners.",
    "level": "Secondary"
  },
  "Continuous Improvement": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 87.34,
    "ai_mentions": 7.6,
    "ai_alignment": 9.2,
    "ai_depth": 8.8,
    "ai_intent": 8.3,
    "ai_audience": 8.4,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content closely aligns with Continuous Improvement by advocating for empirical evidence (telemetry, feedback), frequent reflection (questioning what 'done' means), and a culture of learning and outcome measurement. It details shifting team habits, closing feedback loops, and operational changes to deliver incremental value—key tenets of continuous improvement. There are explicit calls for using data and feedback, plus strategic recommendations for fostering improvement practices. It falls slightly short of a perfect score due to a moderate focus on the practical shift in mindsets rather than a broad exploration of CI frameworks or sustained organizational case studies, and the explicit term 'Continuous Improvement' is not directly mentioned.",
    "reasoning_summary": "This piece strongly embodies Continuous Improvement, emphasizing iterative learning, data-driven delivery, rapid feedback, and adaptive processes. While it doesn't name the category outright, it delivers actionable advice and aligns tightly with core principles that drive sustainable, empirical enhancement.",
    "level": "Primary"
  },
  "GitHub": {
    "resourceId": "9nnnOYDoMu8",
    "category": "GitHub",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 13.47,
    "ai_mentions": 0.0,
    "ai_alignment": 2.2,
    "ai_depth": 1.9,
    "ai_intent": 2.6,
    "ai_audience": 3.6,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content does not mention GitHub or any of its services, tools, or workflows directly or indirectly. Its focus is on redefining 'done' in software delivery, advocating for work to be live in production to deliver value, and discussing general agile/DevOps principles such as short feedback loops, value delivery, and automation. There is no discussion of GitHub-specific features, practices, or integrations. The audience (software teams, coaches) mildly overlaps with GitHub’s, but only tangentially. Signal-to-noise is somewhat high since the content is relevant to general software delivery; however, it is off-topic for the GitHub category. No penalties apply since the content is current and not critical or satirical. The low confidence score appropriately reflects minimal alignment with the GitHub category.",
    "reasoning_summary": "This piece is a thoughtful reflection on value delivery in software, but it doesn't mention GitHub or discuss its tools or workflows. While some general principles overlap with GitHub’s audience, there’s no substantive connection to the category, resulting in a very low confidence fit.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Discipline",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 80.032,
    "ai_mentions": 4.5,
    "ai_alignment": 8.9,
    "ai_depth": 8.3,
    "ai_intent": 7.6,
    "ai_audience": 7.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "This content centers on redefining \"done\" in software delivery to mean live in production, emphasizing evidence-based value and learning loops. It discusses codified principles (e.g., real value delivery, closing feedback loops), references agile discipline concepts, and provides practical guidelines to mature team practices. However, it doesn't explicitly analyze 'discipline' as a field or reference governance or evolution of disciplines in depth, focusing instead on one key practice within those fields. The audience (practitioners, coaches, managers) is appropriate, and discussion is deeply aligned yet doesn’t comprehensively address all aspects of \"discipline\" as outlined in the category definition.",
    "reasoning_summary": "The content is highly relevant to discipline in agile and software delivery, focusing on sound principles and continuous improvement. While it doesn't explore discipline as a formalized field, its practical depth and alignment justify a strong but not perfect confidence score.",
    "level": "Secondary"
  },
  "Tenet": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Tenet",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 92.5,
    "ai_mentions": 6.7,
    "ai_alignment": 9.3,
    "ai_depth": 9.1,
    "ai_intent": 9.0,
    "ai_audience": 9.0,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content rigorously asserts an actionable tenet (\"done\" means in production) foundational to Agile and DevOps. It aligns strongly with prescriptive doctrines—emphasizing feedback loops, evidence over assumption, value via outcomes, and the necessity of telemetry. The discussion is richly developed, offering step-by-step guidance, cultural implications, and practical takeaways relevant to organizational agility and software delivery best practices. Terminology and audience fit are directly in line with technical practitioners aiming to improve real business outcomes. Minor deduction in \"mentions\" reflects that the term 'tenet' is not directly named, though its substance dominates the piece.",
    "reasoning_summary": "This piece deeply explores the actionable tenet that 'done' means live in production, championing feedback loops, evidence, and value delivery. With clear steps and strong relevance to Agile/DevOps teams, it thoroughly embodies the 'Tenet' category. Scores are high across all alignment, depth, and signal dimensions.",
    "level": "Primary"
  },
  "Time to Market": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Time to Market",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 84.82,
    "ai_mentions": 4.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.7,
    "ai_intent": 8.5,
    "ai_audience": 8.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "Direct references to 'Time to Market' as a term are absent, but the concept is strongly aligned: the entire content centers on minimizing the gap between code completion and customer availability, emphasizing feedback loops, production releases, and value delivery. While metrics (like lead/cycle time) aren’t deeply discussed, process strategies—such as CI/CD, reducing queue time, and focusing on 'live' work—map closely to Time to Market. The depth of discussion is substantial, giving actionable advice and organizational implications. The primary audience is software development practitioners and leaders, relevant to Time to Market optimization, with a clear, purposeful focus. Some related EBM topics (customer value, learning) appear, but signal remains high and off-topic material is minimal. No penalties are warranted.",
    "reasoning_summary": "While the article doesn't mention 'Time to Market' by name, its focus on getting features live, accelerating feedback, and valuing real production release directly aligns with improving Time to Market. The advice is practical, audience-appropriate, and firmly rooted in EBM principles.",
    "level": "Primary"
  },
  "Sprint Review": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Sprint Review",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 27.14,
    "ai_mentions": 0.7,
    "ai_alignment": 2.7,
    "ai_depth": 2.5,
    "ai_intent": 3.0,
    "ai_audience": 5.1,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content focuses almost entirely on the definition of 'done' as 'live in production,' promoting fast feedback, real learning, and customer value. However, it does not mention the Sprint Review, Scrum events, the role of stakeholders, or group collaboration per the Sprint Review ceremony. There are no explicit references or substantial exploration of the Sprint Review's process, purpose, challenges, or best practices. Its intended audience (practitioners) and some concepts (feedback loops, delivering value) overlap modestly, but the primary focus is general Agile delivery and definition of done, not the Sprint Review event.",
    "reasoning_summary": "While this piece delves deeply into delivery and 'definition of done,' it lacks reference to the Sprint Review or Scrum ceremonies. Its themes only loosely relate to Sprint Review by emphasizing outcomes and feedback. Most content centers on production deployment, not Sprint Review practices.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 55.17,
    "ai_mentions": 0.4,
    "ai_alignment": 6.6,
    "ai_depth": 6.7,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content focuses on the importance of real value delivery (measured by code being live) in software, emphasizing feedback loops, value creation, and learning from outcomes. While these are thematically adjacent to entrepreneurial principles (customer impact, validation, outcome focus), the discussion is specific to agile teams and software delivery, without directly addressing entrepreneurship, innovation, risk-taking, or founder mindset. Direct mention of entrepreneurship is absent, but some content overlaps through value creation and aligning outputs with user needs. Audience is primarily practitioners and teams involved in delivering software, rather than explicit entrepreneurs. No penalties were warranted.",
    "reasoning_summary": "The article strongly champions delivering real value and user-centric outcomes in software, closely relating to some entrepreneurial principles, but never directly referencing entrepreneurship or its unique challenges. Its fit for the category is moderate but not primary.",
    "level": "Tertiary"
  },
  "Definition of Done": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Definition of Done",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 85.65,
    "ai_mentions": 7.2,
    "ai_alignment": 9.1,
    "ai_depth": 8.7,
    "ai_intent": 8.8,
    "ai_audience": 8.5,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content is anchored around challenging inadequate Definitions of Done, arguing that \"done\" must mean live in production to deliver value. It directly discusses redefining DoD, shows why traditional completion criteria fall short, and offers practical ways to evolve team understanding. While intent and alignment are strong, the term 'Definition of Done' is not used verbatim, slightly diluting direct mentions. The audience, depth, and focus remain highly consistent with Agile practitioners concerned with DoD effectiveness.",
    "reasoning_summary": "This content closely fits the Definition of Done category, advocating a rigorous, impactful standard for 'done' in Agile. It strongly addresses the need for DoD to mean production-ready and offers actionable advice, despite not using the exact term frequently.",
    "level": "Primary"
  },
  "Collaboration Tools": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-13T21:54:50",
    "ai_confidence": 22.19,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.6,
    "ai_intent": 2.9,
    "ai_audience": 7.3,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on the definition of 'done' in Agile software delivery, emphasizing delivering value through production releases and closing feedback loops with real users. While it references Agile practices and improving teamwork outcomes, it does not mention or discuss collaboration tools, their features, comparisons, or integration with Agile. The audience is Agile practitioners, making audience alignment somewhat relevant, but the core themes and depth are only tangentially related to the 'Collaboration Tools' category.",
    "reasoning_summary": "This article discusses Agile delivery and value realization, not collaboration tools. It focuses on the meaning of 'done' and feedback loops, with minimal overlap to the category—hence the low confidence score.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 33.87,
    "ai_mentions": 1.2,
    "ai_alignment": 3.4,
    "ai_depth": 3.1,
    "ai_intent": 3.6,
    "ai_audience": 7.9,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on the definition of 'done' in software delivery, arguing that 'done' means live in production and emphasizing value delivery, feedback loops, and customer outcomes. While it mentions practices like continuous integration and pipelines, version control and associated principles are only lightly implied, not directly discussed or explored. The primary theme is about agile thinking and delivery, not modern source control. Audience overlap exists (technical practitioners), and some supporting practices are relevant, but overall alignment and direct mention are marginal, and depth on source control is minimal.",
    "reasoning_summary": "The article strongly promotes shipping code to production and closing feedback loops, mentioning CI/CD but not focusing on version control. Its core message is about software delivery value, not modern source control, so only slight overlap with the category exists.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 56.3,
    "ai_mentions": 0.2,
    "ai_alignment": 6.6,
    "ai_depth": 7.4,
    "ai_intent": 6.8,
    "ai_audience": 8.0,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content thoroughly explores the definition of 'done' in Agile software delivery, focusing on value realization once work is live in production. While this overlaps with key Agile concepts and has indirect implications for cross-functional team dynamics (e.g., closing feedback loops, delivering end-to-end value), it does not explicitly reference or deeply discuss cross-functional teams, their structure, or unique challenges. The audience is Agile practitioners or leaders, and the signal is high, but direct mentions of the category are almost absent, and the intent centers on delivery/value not team composition.",
    "reasoning_summary": "Although the article strongly aligns with Agile delivery and the importance of cross-functional outcomes, it focuses on the definition of 'done' and end-to-end value rather than directly discussing cross-functional teams. Relevance is moderate due to shared Agile values, but explicit fit is limited.",
    "level": "Tertiary"
  },
  "Organisational Change": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Organisational Change",
    "calculated_at": "2025-05-13T21:54:55",
    "ai_confidence": 55.502,
    "ai_mentions": 1.8,
    "ai_alignment": 5.6,
    "ai_depth": 5.0,
    "ai_intent": 6.2,
    "ai_audience": 4.9,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content briefly references 'agility' but does not explicitly discuss organisational change frameworks, models, or leadership principles. Its main focus is on encouraging teams to redefine 'done' as 'live in production,' which relates to incremental delivery and feedback loops—concepts found within agile and lean. However, it does not thoroughly address the broader strategies, methodologies, or leadership topics integral to organisational change. The advice is tactical and team-centric, aimed at improving software delivery practices rather than transforming organisational culture or structures. Alignment and depth are moderate, with some conceptual overlap, but lacking direct exploration or strategic intent towards organisation-wide change. Audience targeting is more towards teams and practitioners, not executives or change leaders.",
    "reasoning_summary": "While the article references agility and improving delivery, it mainly focuses on team practices rather than organisational transformation. There is moderate conceptual overlap but little depth or direct connection to the broader processes and frameworks of organisational change.",
    "level": "Tertiary"
  },
  "Lean Startup": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Lean Startup",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 68.924,
    "ai_mentions": 1.0,
    "ai_alignment": 7.9,
    "ai_depth": 7.3,
    "ai_intent": 7.8,
    "ai_audience": 8.6,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "Direct mentions of Lean Startup are absent, and Lean terminology like 'MVP,' 'Build-Measure-Learn,' or 'startup' do not appear. However, the content is conceptually aligned: it emphasizes short learning cycles, rapid feedback, evidence-based delivery, and closing feedback loops, which are core to Lean Startup principles. The post targets teams and practitioners who value outcomes measured by use, not activity, resonating with Lean Startup’s audience. While the discussion of continuous delivery, telemetry, and real-world feedback is in-depth and purpose-driven, it doesn't deeply or explicitly connect to validated learning or experimentation at the business hypothesis level. The signal is high, with minimal digression, and advice is actionable and practical for practitioners. The slightly higher audience score reflects its concrete advice for delivery teams, though it could resonate with startup founders as well.",
    "reasoning_summary": "While Lean Startup isn’t mentioned by name, the content foregrounds real-world feedback, rapid delivery, and outcome-driven learning—concepts tightly aligned with Lean principles. It’s practical and focused, but not deeply detailed about Lean Startup’s business hypothesis or MVP cycle, hence a moderate confidence score.",
    "level": "Secondary"
  },
  "Agnostic Agile": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 54.34,
    "ai_mentions": 1.2,
    "ai_alignment": 6.5,
    "ai_depth": 7.2,
    "ai_intent": 7.0,
    "ai_audience": 6.9,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content passionately advocates for outcome-focused software delivery, emphasizing real value over internal milestones, aligning partially with Agnostic Agile's principles of value delivery and empirical feedback loops. However, it never directly mentions Agnostic Agile or its thought leaders, nor does it explicitly address the category's philosophy, critical thinking, or ethical aspects. Discussion is substantial and practical, resonating with agile professionals, but remains mostly framework-agnostic without framing itself in 'Agnostic Agile' terms. The signal is strong, but contextual fit is more indirect than explicit.",
    "reasoning_summary": "The piece champions value delivery and real feedback, echoing some Agnostic Agile principles, but lacks direct mention or deep philosophical engagement with the movement itself—so the fit is moderate, with good alignment on outcomes but weaker on explicit category signals.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 67.65,
    "ai_mentions": 2.7,
    "ai_alignment": 7.9,
    "ai_depth": 7.3,
    "ai_intent": 7.7,
    "ai_audience": 8.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content focuses on shifting teams from marking work as 'done' when code is complete to only considering work 'done' once it is live and delivering value to users. This strongly aligns with value delivery, continuous feedback, and outcome-based thinking central to Value Stream Management, especially on minimising waste (waiting for release, fake finishes), and using real-world feedback (telemetry, outcomes) to inform next steps. However, it does not explicitly mention 'Value Stream Management', nor does it go into formal techniques such as value stream mapping or process-level optimisation, hence moderate scores for mentions and depth. The message suits leaders and teams interested in delivering customer value—well aligned with the audience. There is some slight general Agile/DevOps phrasing but the focus on production, feedback loops, and real outcomes keeps it focused on value flow.",
    "reasoning_summary": "This piece encourages teams to focus on real value delivery by making 'done' mean live in production—a concept in line with Value Stream Management. While it doesn’t cite the term directly or dive into formal practices, the alignment with value flow, feedback, and continuous improvement is strong for a practical audience.",
    "level": "Secondary"
  },
  "Pragmatic Thinking": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-13T21:54:49",
    "ai_confidence": 94.7,
    "ai_mentions": 8.7,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 9.6,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 95.0,
    "reasoning": "The content directly targets pragmatic, experience-based practice: it anchors everything on practical definitions of 'done,' insists on real-world outcomes, and explicitly critiques theoretical, process-focused thinking. Concrete techniques such as CI/CD automation, feedback loops, measuring value, and shifting mindsets are emphasized. Advice is grounded in direct practitioner observations and repeatedly tied to Agile, Lean, and DevOps paradigms ('work isn’t done until it’s live; telemetry, learning, feedback loops'). The content is actionable, audience-focused (agile practitioners, Scrum teams, coaches), and maintains a tightly focused narrative. There are no outdated practices, off-topic criticism, or filler.",
    "reasoning_summary": "This piece embodies pragmatic thinking by challenging superficial definitions of 'done' and urging teams to prioritize feedback and real value in production. It's rich with actionable advice for Agile practitioners, spotlighting genuine, experience-driven improvement over theoretical processes.",
    "level": "Primary"
  },
  "Organisational Agility": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 91.16,
    "ai_mentions": 8.7,
    "ai_alignment": 9.6,
    "ai_depth": 9.3,
    "ai_intent": 8.9,
    "ai_audience": 9.0,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content explicitly refers to agility, emphasizing principles central to Organisational Agility, such as closing feedback loops, customer value, and rapid adaptation. The discussion details practical shifts (redefining 'done,' shortening delivery cycles, telemetry, continuous improvement), aligning well with agile methodologies and the category’s purpose. The depth is notable, addressing root behaviors and providing actionable advice for organizations, leaders, and teams. The audience is practitioners and leaders striving for agility, and most of the content is highly focused on organizational change and customer-centric delivery. Minimal filler, no outdated practices, and a positive, instructive tone reinforce its classification.",
    "reasoning_summary": "This piece strongly exemplifies Organisational Agility by urging organizations to focus on live, customer-facing outcomes, not internal milestones. It delves into agile principles, continuous feedback, and real value delivery, offering actionable guidance for teams—a near-perfect fit for the category.",
    "level": "Primary"
  },
  "Common Goals": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Common Goals",
    "calculated_at": "2025-05-13T21:54:52",
    "ai_confidence": 54.1,
    "ai_mentions": 2.5,
    "ai_alignment": 6.4,
    "ai_depth": 6.1,
    "ai_intent": 5.8,
    "ai_audience": 6.3,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content emphasizes shifting from internal definitions of 'done' to delivering real value by shipping increments live to users, which loosely relates to aligning around outcomes and goals. However, 'Common Goals' as defined by the category—shared objectives guiding decision-making, frameworks like OKRs, or explicit strategic goal alignment—are not directly addressed. There is some conceptual overlap (the link to value/outcome and feedback loops), but there are no direct mentions of 'Common Goals', minimal discussion on team ownership or strategic alignment, and minimal reference to frameworks operationalising goals. The main thrust is about definition of 'done' and value delivery, not about the explicit establishment or alignment of shared goals across teams. The intent and depth have partial relevance; the audience and signal are moderately aligned with agile practitioners and leaders. No penalties were warranted.",
    "reasoning_summary": "While the article promotes delivering real user value, it only indirectly connects to 'Common Goals.' There's some conceptual overlap in outcomes and feedback, but explicit discussion of shared objectives, strategic alignment, or frameworks is missing. The focus remains on 'done' definitions, making relevance moderate.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 27.17,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.1,
    "ai_intent": 2.5,
    "ai_audience": 7.6,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content centers on defining 'done' as live in production, emphasizing real value, fast feedback loops, and user impact. While these ideas overlap with some Agile and BDD goals, the piece contains no direct mention or practice of Behaviour Driven Development. It doesn't discuss BDD principles, tools, user stories, or stakeholder collaboration through BDD frameworks. Instead, it discusses general value delivery, release practices, and feedback loops, which are more generic Agile or DevOps concerns. The intent is informative for practitioners, and most of the content is relevant to engineers and Agile teams. However, the lack of explicit, substantial BDD discussion restricts both conceptual alignment and depth. No penalties were needed, as content is current and not negative.",
    "reasoning_summary": "This article focuses on delivering real value by treating 'done' as live in production, aligning with Agile delivery rather than BDD. There’s little alignment with BDD-specific principles, practices, or terminology, so the confidence for the BDD category is low.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-13T21:54:47",
    "ai_confidence": 28.007,
    "ai_mentions": 0.5,
    "ai_alignment": 3.8,
    "ai_depth": 4.4,
    "ai_intent": 3.7,
    "ai_audience": 5.0,
    "ai_signal": 6.607,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on redefining 'done' in software delivery, advocating for real value through live deployments and feedback loops. While it references agility and value delivery, it centers on team-level practices and release management rather than portfolio-wide prioritization, investment, or strategic alignment. No direct mention of Portfolio Management frameworks, prioritization, or value stream mapping is present. The audience is largely practitioners and team leaders, not portfolio managers. The content’s intent is to shift delivery teams toward value-based thinking, but it doesn’t discuss managing a portfolio of projects or organizational investment choices as per the category definition.",
    "reasoning_summary": "The article emphasizes delivery-team practices—shipping to production, feedback loops, and focus on real value—but does not discuss topics central to Portfolio Management, such as strategic alignment or portfolio-level investment. It's relevant only peripherally to the category.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Scrum Team",
    "calculated_at": "2025-05-13T21:54:51",
    "ai_confidence": 48.45,
    "ai_mentions": 1.6,
    "ai_alignment": 5.8,
    "ai_depth": 5.1,
    "ai_intent": 5.9,
    "ai_audience": 6.2,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content addresses the concept of 'done' in software delivery, emphasizing the value of work being live in production and closing feedback loops. While relevant to agile delivery teams and indirectly applicable to Scrum Teams, there is no explicit mention or deep exploration of the Scrum Team as an accountability per the Scrum Guide. The primary focus is outcome orientation and delivery, not Scrum Team structure, purpose, or responsibilities. As such, the main audience overlaps with Scrum practitioners, but the discussion does not focus on Scrum Team-specific themes as defined, instead addressing broader agile, DevOps, and delivery practices. The connection is conceptual but not direct or in depth.",
    "reasoning_summary": "While the article promotes a 'done when live' mindset common to agile teams, it does not specifically address the Scrum Team, its structure, or its unique accountability. It offers useful guidance for team value delivery, but relation to the 'Scrum Team' category is indirect and surface level.",
    "level": "Tertiary"
  },
  "Definition of Workflow": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:12",
    "ai_confidence": 23.24,
    "ai_mentions": 1.2,
    "ai_alignment": 2.4,
    "ai_depth": 2.7,
    "ai_intent": 2.2,
    "ai_audience": 5.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content is focused almost entirely on redefining 'done' as 'live in production' and urging teams to tie completion to customer value, telemetry, and feedback. It offers prescriptive advice and rationale for shifting team mindsets and practices, but does not explicitly discuss Kanban's Definition of Workflow, workflow policies, entry/exit criteria, WIP limits, or the visualization of flow in the Kanban sense. There are implicit touchpoints, such as release policies and outcomes, but no mention of explicit workflow agreements, stages, or adaptability of workflow—a necessary component of the category. The intended audience (agile/software delivery teams) matches, and the content is focused, but the conceptual and direct linkage to the Definition of Workflow as defined is minimal.",
    "reasoning_summary": "This content is about redefining 'done' as work live in production and emphasizes value delivery, feedback, and learning. However, it lacks direct or deep engagement with the Kanban-centric Definition of Workflow and associated policies, so alignment with the category is low.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:02:07",
    "ai_confidence": 69.5,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 7.4,
    "ai_intent": 6.3,
    "ai_audience": 7.0,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content does not directly reference the 'Product Developer' role or accountability, yielding a low 'Direct Mentions' score. However, it aligns strongly with core Product Developer themes such as Definition of Done, feedback loops, and value delivery. The discussion offers significant depth on why 'done' must mean live in production, focuses on collective responsibility, quality (telemetry), and learning—strongly resonating with Product Developer accountabilities. Intent is fairly aligned: the article speaks to improving team behaviors tied to delivering real value, likely targeted at practitioners or coaches with a product development focus. Slight reductions reflect the article’s general language—it addresses 'teams' generically and never uses the formal 'Product Developer' label, which impacts intent, mentions, and focus. There are no explicit mentions of obsolete practices or a contradictory tone, so no penalties apply. Overall, confidence is good but not maximal, as the article's framing is conceptual and behavioral rather than explicitly categorical.",
    "reasoning_summary": "While this piece never explicitly mentions 'Product Developer,' it closely aligns with the role’s core accountabilities, deeply addressing the importance of real value delivery, feedback, and learning. The content is relevant and insightful for Product Developers, but its generic audience and terminology temper full confidence.",
    "level": "Secondary"
  },
  "Collective Intelligence": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:02:14",
    "ai_confidence": 19.78,
    "ai_mentions": 0.4,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 3.9,
    "ai_audience": 7.3,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content is robustly aligned with Agile and DevOps best practices, focusing on delivering real value and closing feedback loops by emphasizing production deployment as the true definition of 'done.' However, it does not reference or explore human-AI collaboration, the augmentation of cognition through AI, or team patterns involving AI agents. There are no explicit or even implicit mentions of AI, collaboration with AI agents, or any aspects of collective intelligence as narrowly defined. The main audience (Agile practitioners, coaches, DevOps teams) may overlap with those interested in collective intelligence, but the actual content is centered around team process improvement, not human-AI partnership.",
    "reasoning_summary": "This article addresses Agile delivery and value realization but does not discuss human-AI collaboration or collective intelligence themes. Its relevance to 'Collective Intelligence' is only tangential, as it lacks references to AI or enhanced human-AI teamwork.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-23T09:02:02",
    "ai_confidence": 33.05,
    "ai_mentions": 0.5,
    "ai_alignment": 3.8,
    "ai_depth": 3.3,
    "ai_intent": 3.9,
    "ai_audience": 6.5,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on the definition of 'done' as deploying software to production and emphasizes real value, evidence, feedback, and outcome-based practices. However, it does not directly mention OKRs, nor explore their structure (Objectives, Key Results), nor reference John Doerr or his principles or the four superpowers. The conceptual overlap is indirect: themes of outcome-orientation, learning from production, and measuring real value resonate with OKR philosophy, but there is no explicit or in-depth engagement with OKRs as a framework or system. The main intent reflects agile, DevOps, and continuous delivery best practices rather than OKR fundamentals. The audience fits broadly, and the signal is high, but strong alignment and depth with OKRs as defined are lacking.",
    "reasoning_summary": "While the content promotes evidence, learning, and outcome focus—key attributes of OKRs—it never references OKRs directly or as a framework. Its focus remains on agile delivery and the definition of 'done,' making the fit indirect and partial at best.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:34",
    "ai_confidence": 72.85,
    "ai_mentions": 1.7,
    "ai_alignment": 7.4,
    "ai_depth": 7.1,
    "ai_intent": 7.3,
    "ai_audience": 8.3,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "Direct mentions are low—'Agentic Engineering' is not named, but the piece deeply aligns with core aspects: it urges short feedback loops, empirical learning, and production-first value, echoing agentic practices. Systemic observability via telemetry and outcome focus is stressed. The advice to redefine 'done', automate, and prioritise live delivery resonates with developer agency and DevOps ethos. The audience (engineers, technical leaders) matches. Depth is good, with prescriptive steps, but lacks explicit coverage of AI/human shared agency to fully maximise the category fit.",
    "reasoning_summary": "The content emphasizes real value delivery, production releases, feedback loops, and outcome measurement—strongly resonating with Agentic Engineering’s focus on agency, observability, and DevOps-infused practice, though it doesn't directly address AI agency or name the category.",
    "level": "Secondary"
  },
  "Agentic Software Delivery": {
    "resourceId": "9nnnOYDoMu8",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:40",
    "ai_confidence": 57.95,
    "ai_mentions": 0.7,
    "ai_alignment": 6.3,
    "ai_depth": 5.8,
    "ai_intent": 6.7,
    "ai_audience": 7.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content focuses on closing feedback loops, delivering production value, and using telemetry, which aligns with modern DevOps/agile but only indirectly aligns with 'Agentic Software Delivery.' It does not reference AI agents, agency, or human/agent collaboration—so direct mentions are absent. Alignment and depth are moderate as the themes (automation, telemetry, continuous learning) partly overlap with agentic principles, but there's no explicit or thorough exploration of agentic delivery, AI agent integration, or related governance. The audience is software delivery teams and leaders, which somewhat matches. Signal/noise is high, with the content staying focused on real value delivery.",
    "reasoning_summary": "The piece strongly supports DevOps and continuous delivery practices but only partially matches Agentic Software Delivery. It lacks explicit discussion of AI agents, agentic design, or human-agent synergy, so fit with the category is limited but not absent.",
    "level": "Tertiary"
  }
}