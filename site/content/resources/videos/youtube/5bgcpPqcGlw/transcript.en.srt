1
00:00:43,560 --> 00:00:50,950
hello and welcome to Nikhil agility with

2
00:00:47,800 --> 00:00:52,930
Martin Intuit I'm Martin Intuit and I'm

3
00:00:50,950 --> 00:00:55,750
going to be talking about the life sight

4
00:00:52,930 --> 00:00:59,880
culture and site reliability in the

5
00:00:55,750 --> 00:00:59,880
azure DevOps team at Microsoft

6
00:01:03,620 --> 00:01:10,260
[Music]

7
00:01:15,180 --> 00:01:23,220
okay hey I'm welcome today I want to

8
00:01:21,480 --> 00:01:26,670
talk a little bit about site reliability

9
00:01:23,220 --> 00:01:28,800
engineering it's something that um I

10
00:01:26,670 --> 00:01:30,780
spend a lot of time thinking about

11
00:01:28,800 --> 00:01:35,660
because I have many customers who also

12
00:01:30,780 --> 00:01:39,450
have operational needs as well as having

13
00:01:35,660 --> 00:01:41,400
the the typical engineering needs that

14
00:01:39,450 --> 00:01:45,930
they have and I think it's important to

15
00:01:41,400 --> 00:01:48,450
find that balance between engineering

16
00:01:45,930 --> 00:01:51,270
and operations and there's your DevOps

17
00:01:48,450 --> 00:01:54,300
team have an interesting story about how

18
00:01:51,270 --> 00:01:58,770
they've managed to create that that

19
00:01:54,300 --> 00:02:03,380
balance and create a culture inside of

20
00:01:58,770 --> 00:02:07,020
their organization supporting live site

21
00:02:03,380 --> 00:02:14,790
and and doing it with engineering teams

22
00:02:07,020 --> 00:02:18,060
so we're going to cover quite a few

23
00:02:14,790 --> 00:02:21,630
different topics and I have I have a lot

24
00:02:18,060 --> 00:02:24,570
of information here about how the azure

25
00:02:21,630 --> 00:02:28,770
DevOps team do their work as well as how

26
00:02:24,570 --> 00:02:31,200
they interact with us the customers but

27
00:02:28,770 --> 00:02:33,810
just to give you an overview we're going

28
00:02:31,200 --> 00:02:37,709
to talk about a transparency and how to

29
00:02:33,810 --> 00:02:40,800
how they manage to build trust with

30
00:02:37,709 --> 00:02:44,310
their customers and we're going to talk

31
00:02:40,800 --> 00:02:47,640
about the amount of telemetry that they

32
00:02:44,310 --> 00:02:50,310
collect and how they organize that so

33
00:02:47,640 --> 00:02:52,170
how open and transparent actually are

34
00:02:50,310 --> 00:02:54,800
they with customers and how much

35
00:02:52,170 --> 00:02:58,190
telemetry did right

36
00:02:54,800 --> 00:03:01,970
and then how do they organize themselves

37
00:02:58,190 --> 00:03:03,080
around responding to things that happen

38
00:03:01,970 --> 00:03:06,530
so there's going to be plenty of things

39
00:03:03,080 --> 00:03:08,900
that happen they do they do scrum they

40
00:03:06,530 --> 00:03:10,970
have three week Sprint's how do they

41
00:03:08,900 --> 00:03:15,620
make sure that they're still able to

42
00:03:10,970 --> 00:03:19,490
deliver value and while also being able

43
00:03:15,620 --> 00:03:21,110
to and get other things done as well get

44
00:03:19,490 --> 00:03:24,230
their operational what if the site goes

45
00:03:21,110 --> 00:03:27,650
down what if there are other pieces of

46
00:03:24,230 --> 00:03:29,780
work that would make the site more

47
00:03:27,650 --> 00:03:32,260
efficient and less likely to go down how

48
00:03:29,780 --> 00:03:35,750
do they prioritize that work and so

49
00:03:32,260 --> 00:03:37,010
stuff around that and then we can have a

50
00:03:35,750 --> 00:03:40,400
little bit of discussion about

51
00:03:37,010 --> 00:03:43,790
automation automation is very important

52
00:03:40,400 --> 00:03:47,120
for an agile story we talk about all the

53
00:03:43,790 --> 00:03:51,730
time in in scrum that your definition of

54
00:03:47,120 --> 00:03:55,160
done at the end of every sprint your

55
00:03:51,730 --> 00:03:58,580
application should be potentially

56
00:03:55,160 --> 00:04:01,190
shippable with no further work required

57
00:03:58,580 --> 00:04:04,100
by the engineering team to make that

58
00:04:01,190 --> 00:04:05,780
happen so if your business decides let's

59
00:04:04,100 --> 00:04:07,510
ship to production there's not anything

60
00:04:05,780 --> 00:04:10,640
else for the engineering team to do

61
00:04:07,510 --> 00:04:13,760
ultimately your product owner can just

62
00:04:10,640 --> 00:04:16,910
push push a button and ship to

63
00:04:13,760 --> 00:04:19,910
production and that should be as much as

64
00:04:16,910 --> 00:04:21,250
is necessary and and then there's a

65
00:04:19,910 --> 00:04:23,930
little bit of a discussion around

66
00:04:21,250 --> 00:04:26,540
investigation and getting to the root

67
00:04:23,930 --> 00:04:28,190
cause and how to continually improve in

68
00:04:26,540 --> 00:04:30,260
your environment and I think that's

69
00:04:28,190 --> 00:04:33,470
that's important as well we talked a lot

70
00:04:30,260 --> 00:04:36,650
about in in complex systems it can be

71
00:04:33,470 --> 00:04:39,800
impossible to get to a root cause and I

72
00:04:36,650 --> 00:04:41,630
think if if that were true we would

73
00:04:39,800 --> 00:04:45,400
never visit the doctor because there

74
00:04:41,630 --> 00:04:49,910
would be no point there are certain

75
00:04:45,400 --> 00:04:52,700
causes that we can identify we may not

76
00:04:49,910 --> 00:04:54,890
get everything but we can certainly do

77
00:04:52,700 --> 00:04:57,669
our due diligence and figure out how to

78
00:04:54,890 --> 00:05:03,710
get there but first I have a little

79
00:04:57,669 --> 00:05:06,350
short story about an organization that

80
00:05:03,710 --> 00:05:09,000
you may or may not be familiar with

81
00:05:06,350 --> 00:05:12,390
it's the story of how a company with

82
00:05:09,000 --> 00:05:16,440
nearly 400 million dollars in assets

83
00:05:12,390 --> 00:05:20,790
went bankrupt in 45 minutes because of a

84
00:05:16,440 --> 00:05:22,740
field deployment um this was a company I

85
00:05:20,790 --> 00:05:26,940
called the knight Capital Group they

86
00:05:22,740 --> 00:05:31,440
were listed on the New York Stock

87
00:05:26,940 --> 00:05:35,490
Exchange and they were implementing

88
00:05:31,440 --> 00:05:38,960
effectively a new order handling system

89
00:05:35,490 --> 00:05:43,290
that allowed them to create child orders

90
00:05:38,960 --> 00:05:46,320
this allowed them to do something they

91
00:05:43,290 --> 00:05:49,980
hadn't done before but it required that

92
00:05:46,320 --> 00:05:53,550
they replaced the old code with new code

93
00:05:49,980 --> 00:05:57,770
and be able to integrate from there and

94
00:05:53,550 --> 00:05:59,700
and it was really nine nine years of

95
00:05:57,770 --> 00:06:01,770
application building that had gone into

96
00:05:59,700 --> 00:06:06,240
this system so you can imagine if you

97
00:06:01,770 --> 00:06:08,040
have nine years of code in there there's

98
00:06:06,240 --> 00:06:10,530
going to be maybe a lot of spaghetti

99
00:06:08,040 --> 00:06:12,990
there's going to be a lot of difficult

100
00:06:10,530 --> 00:06:15,240
areas lots of leftover things that

101
00:06:12,990 --> 00:06:18,450
people have just built and ignored for

102
00:06:15,240 --> 00:06:22,560
many years so they did decide to

103
00:06:18,450 --> 00:06:24,360
repurpose an existing flag in the system

104
00:06:22,560 --> 00:06:26,990
in order to activate the new code so

105
00:06:24,360 --> 00:06:30,960
that was one of the things that they did

106
00:06:26,990 --> 00:06:33,900
which potentially could have a negative

107
00:06:30,960 --> 00:06:36,750
result or negative impact and but at

108
00:06:33,900 --> 00:06:39,540
deployment time their engineer their

109
00:06:36,750 --> 00:06:42,270
technician during the deployment only

110
00:06:39,540 --> 00:06:46,070
copied the new code to seven of the

111
00:06:42,270 --> 00:06:46,070
eight fireman's

112
00:06:46,800 --> 00:06:54,409
then they flip the switch turned on that

113
00:06:50,580 --> 00:06:58,909
flag and they went live

114
00:06:54,409 --> 00:07:01,879
because they had that Fault in the

115
00:06:58,909 --> 00:07:07,330
number of servers that were active at

116
00:07:01,879 --> 00:07:07,330
with the new code and the system was not

117
00:07:07,639 --> 00:07:14,569
I was gonna say performing correctly but

118
00:07:11,080 --> 00:07:16,550
not not operating normally

119
00:07:14,569 --> 00:07:19,639
it was doing strange things it wasn't

120
00:07:16,550 --> 00:07:21,499
able to process the the orders at all

121
00:07:19,639 --> 00:07:24,590
that we're coming through and they

122
00:07:21,499 --> 00:07:28,210
started losing at just under two hundred

123
00:07:24,590 --> 00:07:29,910
thousand dollars per minute and

124
00:07:28,210 --> 00:07:32,250
[Music]

125
00:07:29,910 --> 00:07:33,560
because the system wasn't wasn't working

126
00:07:32,250 --> 00:07:35,910
as expected

127
00:07:33,560 --> 00:07:37,700
they then obviously they're gonna try

128
00:07:35,910 --> 00:07:40,290
and fix it so they drop everything

129
00:07:37,700 --> 00:07:42,780
everybody's here's on fire they come

130
00:07:40,290 --> 00:07:45,030
running trying to figure it out and they

131
00:07:42,780 --> 00:07:46,230
just they couldn't figure out what the

132
00:07:45,030 --> 00:07:48,360
problem was

133
00:07:46,230 --> 00:07:50,670
for that whole D so they spent a whole

134
00:07:48,360 --> 00:07:51,810
day with the system down and they

135
00:07:50,670 --> 00:07:55,170
couldn't figure out what the problem was

136
00:07:51,810 --> 00:07:58,200
they didn't understand that it was just

137
00:07:55,170 --> 00:08:00,240
one server that was acting up everything

138
00:07:58,200 --> 00:08:02,100
looked like it was normal you go test a

139
00:08:00,240 --> 00:08:04,320
seraph things good why is this not

140
00:08:02,100 --> 00:08:08,370
working couldn't figure it out and at

141
00:08:04,320 --> 00:08:11,340
the end of that day they were losing the

142
00:08:08,370 --> 00:08:14,400
the the they lost four hundred and sixty

143
00:08:11,340 --> 00:08:18,750
million dollars and they filed for

144
00:08:14,400 --> 00:08:21,930
bankruptcy protection an interesting

145
00:08:18,750 --> 00:08:25,140
question you may ask yourself is what

146
00:08:21,930 --> 00:08:28,290
would be the impact in your organization

147
00:08:25,140 --> 00:08:30,600
of our key or critical platform that you

148
00:08:28,290 --> 00:08:33,630
create or that you create for your

149
00:08:30,600 --> 00:08:37,650
customers being being down for that

150
00:08:33,630 --> 00:08:39,900
length of time what what can you do to

151
00:08:37,650 --> 00:08:41,490
prevent it it's interesting we know a

152
00:08:39,900 --> 00:08:43,950
lot about what happened to the night

153
00:08:41,490 --> 00:08:46,830
capital group because there are publicly

154
00:08:43,950 --> 00:08:50,040
where a publicly listed company and you

155
00:08:46,830 --> 00:08:53,000
can see their SEC filing and going to

156
00:08:50,040 --> 00:08:59,160
see what happened but they had no

157
00:08:53,000 --> 00:09:03,810
automation and they they no procedures

158
00:08:59,160 --> 00:09:07,410
for back-out plans no no no anything so

159
00:09:03,810 --> 00:09:11,370
that's it was a massive at risk of the

160
00:09:07,410 --> 00:09:13,770
organizations and and really we need to

161
00:09:11,370 --> 00:09:15,270
think about how do you get better at

162
00:09:13,770 --> 00:09:16,320
doing something like that one of the

163
00:09:15,270 --> 00:09:20,990
things that I see a lot of organizations

164
00:09:16,320 --> 00:09:23,910
doing is thinking that they can create

165
00:09:20,990 --> 00:09:26,850
they can create a back-up plan that they

166
00:09:23,910 --> 00:09:30,140
can reverse the thing that they failed

167
00:09:26,850 --> 00:09:33,120
to do forwards and be successful at it

168
00:09:30,140 --> 00:09:35,490
if you can't be successful at deploying

169
00:09:33,120 --> 00:09:38,790
your product the chances of you being

170
00:09:35,490 --> 00:09:42,120
able to reverse that deployment are a

171
00:09:38,790 --> 00:09:43,560
lot lower than your ability to deploy in

172
00:09:42,120 --> 00:09:46,950
the first place

173
00:09:43,560 --> 00:09:49,470
so I think it's really a losing

174
00:09:46,950 --> 00:09:51,840
proposition one of the things that I see

175
00:09:49,470 --> 00:09:55,680
most engineering organizations that move

176
00:09:51,840 --> 00:09:57,750
towards continuous delivery move towards

177
00:09:55,680 --> 00:10:01,050
DevOps move towards delivering faster is

178
00:09:57,750 --> 00:10:04,680
that the observe our roll forwards

179
00:10:01,050 --> 00:10:06,900
mentality rather than enabling things

180
00:10:04,680 --> 00:10:11,370
like rollback which are just really not

181
00:10:06,900 --> 00:10:15,110
not viable anymore so Microsoft has made

182
00:10:11,370 --> 00:10:19,250
a lot of changes over the last few years

183
00:10:15,110 --> 00:10:21,870
ten years ago Microsoft was a waterfall

184
00:10:19,250 --> 00:10:24,390
organization no matter how much they you

185
00:10:21,870 --> 00:10:26,490
know you you saw tools for maybe doing

186
00:10:24,390 --> 00:10:28,310
agile things they were a waterfall

187
00:10:26,490 --> 00:10:31,940
organization they were deploying a

188
00:10:28,310 --> 00:10:34,920
visual studio and TFS every two years

189
00:10:31,940 --> 00:10:37,410
that's the particular department that

190
00:10:34,920 --> 00:10:40,920
I'm going to talk about today instead of

191
00:10:37,410 --> 00:10:42,720
Microsoft and times have changed

192
00:10:40,920 --> 00:10:44,279
they were deploying every two years they

193
00:10:42,720 --> 00:10:48,120
were in a service pack halfway and

194
00:10:44,279 --> 00:10:51,839
that's no longer viable it's no longer

195
00:10:48,120 --> 00:10:53,640
okay to respond to feedback from your

196
00:10:51,839 --> 00:10:57,770
customers on those type of timeframes

197
00:10:53,640 --> 00:11:02,430
and and a big example of that has been

198
00:10:57,770 --> 00:11:04,530
Windows with their windows 8 a massive

199
00:11:02,430 --> 00:11:06,330
failure of understanding the customers

200
00:11:04,530 --> 00:11:10,470
needs so there was a big disconnect and

201
00:11:06,330 --> 00:11:12,839
a multi-billion dollar lost therefore

202
00:11:10,470 --> 00:11:15,360
basically not having tighter feedback

203
00:11:12,839 --> 00:11:16,910
loops so it is important it is something

204
00:11:15,360 --> 00:11:19,400
that you will need to do with your

205
00:11:16,910 --> 00:11:22,380
customers shorten those feedback loops

206
00:11:19,400 --> 00:11:24,060
understand their needs a little bit

207
00:11:22,380 --> 00:11:26,940
better and get things out the door and

208
00:11:24,060 --> 00:11:31,080
even the windows team who deploy to

209
00:11:26,940 --> 00:11:33,450
nearly a billion machines worldwide and

210
00:11:31,080 --> 00:11:35,070
have four and a half thousand software

211
00:11:33,450 --> 00:11:37,650
engineers working on their product are

212
00:11:35,070 --> 00:11:41,550
now doing continuous delivery to

213
00:11:37,650 --> 00:11:45,959
production and the the we get it you get

214
00:11:41,550 --> 00:11:47,970
it as a general public and every 30 days

215
00:11:45,959 --> 00:11:49,380
it used to be Patch Tuesday

216
00:11:47,970 --> 00:11:51,540
now it's whole new version of Windows

217
00:11:49,380 --> 00:11:54,120
Tuesday and has new features new

218
00:11:51,540 --> 00:11:56,339
capabilities on that continuous cadence

219
00:11:54,120 --> 00:11:56,940
so they can get feedback they do have

220
00:11:56,339 --> 00:11:58,260
short okay

221
00:11:56,940 --> 00:12:01,470
Ceaser's as well they're not just

222
00:11:58,260 --> 00:12:03,480
deploying once a month and I have two

223
00:12:01,470 --> 00:12:05,700
machines here that are on the windows

224
00:12:03,480 --> 00:12:07,530
insider group which I get weekly

225
00:12:05,700 --> 00:12:07,950
deployments as long as everything looks

226
00:12:07,530 --> 00:12:10,620
good

227
00:12:07,950 --> 00:12:15,240
and if you're inside of Microsoft and on

228
00:12:10,620 --> 00:12:18,990
a corporate build machine which the CEO

229
00:12:15,240 --> 00:12:21,990
is then you get daily builds from the

230
00:12:18,990 --> 00:12:24,630
dev branch of the windows so it's

231
00:12:21,990 --> 00:12:26,700
important quality is important so

232
00:12:24,630 --> 00:12:30,420
they've actually gone from maybe

233
00:12:26,700 --> 00:12:33,060
deploying once or twice a year across

234
00:12:30,420 --> 00:12:35,190
even all of their products going to

235
00:12:33,060 --> 00:12:37,620
production once or twice a year and to

236
00:12:35,190 --> 00:12:40,620
something that looks a little bit more

237
00:12:37,620 --> 00:12:42,960
more staggering and over a hundred and

238
00:12:40,620 --> 00:12:45,840
sixty three thousand deployments per day

239
00:12:42,960 --> 00:12:50,520
that's to any environment but that's an

240
00:12:45,840 --> 00:12:52,830
incredible bigger across the across the

241
00:12:50,520 --> 00:12:55,500
organization and that's with ninety six

242
00:12:52,830 --> 00:12:58,760
thousand engineers so there's more than

243
00:12:55,500 --> 00:13:03,030
one deployment per day per engineer

244
00:12:58,760 --> 00:13:06,990
inside of Microsoft now 2 million git

245
00:13:03,030 --> 00:13:09,660
commits per month 500 million text

246
00:13:06,990 --> 00:13:12,240
executions per day this is this is a lot

247
00:13:09,660 --> 00:13:15,930
of data a lot of things going on and in

248
00:13:12,240 --> 00:13:18,180
order to support that the team that

249
00:13:15,930 --> 00:13:20,430
builds the product so Microsoft uses a

250
00:13:18,180 --> 00:13:23,190
product called Azure DevOps which used

251
00:13:20,430 --> 00:13:24,990
to be called TFS it's also been called

252
00:13:23,190 --> 00:13:29,220
visuals to do online it's also been

253
00:13:24,990 --> 00:13:31,530
called TF t F services what else has

254
00:13:29,220 --> 00:13:34,170
this had a bit of an identity crisis

255
00:13:31,530 --> 00:13:37,050
over the years but the azure Devi's

256
00:13:34,170 --> 00:13:40,290
platform and has been Microsoft's

257
00:13:37,050 --> 00:13:43,890
platform of choice it was built in order

258
00:13:40,290 --> 00:13:47,070
to support their transition towards this

259
00:13:43,890 --> 00:13:49,860
new way of working and almost everybody

260
00:13:47,070 --> 00:13:51,600
inside of Microsoft is now using it to

261
00:13:49,860 --> 00:13:54,930
manage their work and deploy some of

262
00:13:51,600 --> 00:13:57,270
them have moved over onto github for

263
00:13:54,930 --> 00:14:02,010
source control but for work item

264
00:13:57,270 --> 00:14:04,500
tracking for automated builds at the

265
00:14:02,010 --> 00:14:06,480
majority of folks inside of Microsoft my

266
00:14:04,500 --> 00:14:09,330
understanding is they're using a huge

267
00:14:06,480 --> 00:14:10,600
DevOps and so it was built with with

268
00:14:09,330 --> 00:14:13,480
that in mind with scale

269
00:14:10,600 --> 00:14:16,019
mind with things that that large in mind

270
00:14:13,480 --> 00:14:20,730
and this latest from Donovan Browns

271
00:14:16,019 --> 00:14:26,080
presentation this fairly big numbers

272
00:14:20,730 --> 00:14:30,640
so in order to support this and so

273
00:14:26,080 --> 00:14:32,440
creating the the platform the Microsoft

274
00:14:30,640 --> 00:14:37,480
and many other people around the world

275
00:14:32,440 --> 00:14:40,930
use to to to manage their their

276
00:14:37,480 --> 00:14:44,670
engineering efforts the azure DevOps

277
00:14:40,930 --> 00:14:48,029
team had to create this live site

278
00:14:44,670 --> 00:14:50,649
culture inside of their organization and

279
00:14:48,029 --> 00:14:55,270
one of the things that they really

280
00:14:50,649 --> 00:14:58,510
focuses on is M you you code it you

281
00:14:55,270 --> 00:14:59,860
build it you deploy it you run it if

282
00:14:58,510 --> 00:15:02,290
you're going to be the one that writes

283
00:14:59,860 --> 00:15:03,610
the code you should be the one that gets

284
00:15:02,290 --> 00:15:06,610
up at three o'clock in the morning

285
00:15:03,610 --> 00:15:09,339
because the thing that you've written is

286
00:15:06,610 --> 00:15:11,260
not working properly there's some

287
00:15:09,339 --> 00:15:14,260
caveats to that we'll talk about as we

288
00:15:11,260 --> 00:15:16,480
go through but ultimately the software

289
00:15:14,260 --> 00:15:21,790
engineers the people writing the code

290
00:15:16,480 --> 00:15:25,140
need to feel the pain of any sort of

291
00:15:21,790 --> 00:15:27,520
problems with either deployment or

292
00:15:25,140 --> 00:15:31,390
supporting the product or managing it

293
00:15:27,520 --> 00:15:33,520
online of security of all of the things

294
00:15:31,390 --> 00:15:36,850
there would be a problem so they don't

295
00:15:33,520 --> 00:15:39,520
necessarily have other departments that

296
00:15:36,850 --> 00:15:42,420
manage these things no this is one of

297
00:15:39,520 --> 00:15:44,589
the big transitions between other big

298
00:15:42,420 --> 00:15:47,620
yeah transitions the right word but the

299
00:15:44,589 --> 00:15:53,700
big flip for organizations is that

300
00:15:47,620 --> 00:15:53,700
change from being a predominantly

301
00:15:54,450 --> 00:16:00,750
departmental based organization towards

302
00:15:58,120 --> 00:16:00,750
being

303
00:16:01,410 --> 00:16:05,610
cross-functional delivery teams who are

304
00:16:03,720 --> 00:16:08,190
able to take an idea and get it all the

305
00:16:05,610 --> 00:16:10,470
way to production without needing to be

306
00:16:08,190 --> 00:16:12,569
dependent upon external teams that's

307
00:16:10,470 --> 00:16:14,759
really important for that transition

308
00:16:12,569 --> 00:16:16,709
towards a greater degree of agility

309
00:16:14,759 --> 00:16:18,120
because if soon as you're dependent upon

310
00:16:16,709 --> 00:16:19,790
somebody else outside of your

311
00:16:18,120 --> 00:16:24,170
organization that has different

312
00:16:19,790 --> 00:16:26,699
motivations different priorities then

313
00:16:24,170 --> 00:16:28,680
you're not going to be able to get

314
00:16:26,699 --> 00:16:29,879
things done very quickly because you're

315
00:16:28,680 --> 00:16:31,949
gonna some point you're gonna have to

316
00:16:29,879 --> 00:16:35,009
wait for them we have to remove those

317
00:16:31,949 --> 00:16:36,600
wait times so we bring rather than how

318
00:16:35,009 --> 00:16:39,990
we're going out to an external part

319
00:16:36,600 --> 00:16:43,920
Department we bring that department into

320
00:16:39,990 --> 00:16:48,769
the team so there's representation on

321
00:16:43,920 --> 00:16:53,089
the team of security of legal of

322
00:16:48,769 --> 00:16:57,389
obviously coding engineering test

323
00:16:53,089 --> 00:17:00,449
operations and all of those ideas those

324
00:16:57,389 --> 00:17:04,049
hats those roles are represented inside

325
00:17:00,449 --> 00:17:06,809
of the team you need to automate you

326
00:17:04,049 --> 00:17:10,709
need to learn and share with each other

327
00:17:06,809 --> 00:17:15,539
all the time we need to be getting

328
00:17:10,709 --> 00:17:19,140
better at what we do constantly and and

329
00:17:15,539 --> 00:17:23,059
we need a lot of data to help us figure

330
00:17:19,140 --> 00:17:25,890
out what's going on what's happening and

331
00:17:23,059 --> 00:17:30,000
anybody that manages our live site will

332
00:17:25,890 --> 00:17:32,100
know that live comes first no matter

333
00:17:30,000 --> 00:17:33,870
what you're doing if production is down

334
00:17:32,100 --> 00:17:35,640
you're gonna have to drop everything

335
00:17:33,870 --> 00:17:39,390
you're doing and go go figure that out

336
00:17:35,640 --> 00:17:41,880
so how do we make sure that we support

337
00:17:39,390 --> 00:17:43,740
that in a way of organizing people and

338
00:17:41,880 --> 00:17:46,020
this is about how there's your devops

339
00:17:43,740 --> 00:17:49,909
team I've managed to do that so this is

340
00:17:46,020 --> 00:17:54,900
this is an example a story of our way

341
00:17:49,909 --> 00:17:56,010
that you can do that and don't just hate

342
00:17:54,900 --> 00:17:57,630
the way they're doing things that

343
00:17:56,010 --> 00:17:59,820
implement it yourself you want to see

344
00:17:57,630 --> 00:18:02,549
what works for you in your organization

345
00:17:59,820 --> 00:18:04,770
in your organizational within your

346
00:18:02,549 --> 00:18:06,600
organizational constraints within your

347
00:18:04,770 --> 00:18:08,789
application and platform constraints as

348
00:18:06,600 --> 00:18:11,549
well this particular team is building

349
00:18:08,789 --> 00:18:13,230
our our web application but there are

350
00:18:11,549 --> 00:18:15,360
other teams inside of Microsoft that use

351
00:18:13,230 --> 00:18:18,179
a similar process in order to

352
00:18:15,360 --> 00:18:22,210
managed at desktop as well as windows

353
00:18:18,179 --> 00:18:26,539
and other types of application models

354
00:18:22,210 --> 00:18:31,090
so you need to create a culture within

355
00:18:26,539 --> 00:18:34,520
which this this this this works and

356
00:18:31,090 --> 00:18:36,890
LifeSite is about bringing the right

357
00:18:34,520 --> 00:18:41,110
people together from both app and

358
00:18:36,890 --> 00:18:44,059
platforms so that we can continue and

359
00:18:41,110 --> 00:18:47,990
it's been to keep our system up to have

360
00:18:44,059 --> 00:18:51,650
the the lovely things that we as users

361
00:18:47,990 --> 00:18:53,409
of the system really really want but why

362
00:18:51,650 --> 00:18:57,350
why is it so important to keep

363
00:18:53,409 --> 00:19:00,860
everything up as some headlines there

364
00:18:57,350 --> 00:19:03,230
are great examples of how those things

365
00:19:00,860 --> 00:19:06,649
have been difficult for organizations in

366
00:19:03,230 --> 00:19:09,770
the past Visual Studio online which was

367
00:19:06,649 --> 00:19:12,350
one of the names for Azure DevOps and

368
00:19:09,770 --> 00:19:17,450
has has had outages they have had

369
00:19:12,350 --> 00:19:20,539
outages and it's not possible for a

370
00:19:17,450 --> 00:19:23,740
system not to have outages it's about

371
00:19:20,539 --> 00:19:28,100
how you deal with them when they happen

372
00:19:23,740 --> 00:19:31,940
so Visual Studio online as your husband

373
00:19:28,100 --> 00:19:34,640
down Amazon has been down and there's a

374
00:19:31,940 --> 00:19:36,740
start-up with 25 million in funding in

375
00:19:34,640 --> 00:19:40,010
crisis because when employee deleted the

376
00:19:36,740 --> 00:19:43,039
wrong files these these things happen we

377
00:19:40,010 --> 00:19:45,679
want to do our best to prevent those

378
00:19:43,039 --> 00:19:48,770
things from happening we want to do our

379
00:19:45,679 --> 00:19:51,020
best to respond to those things when

380
00:19:48,770 --> 00:19:52,730
they do happen and we want to do our

381
00:19:51,020 --> 00:19:55,279
best to make sure that things that do

382
00:19:52,730 --> 00:19:59,390
happen don't continue to happen and

383
00:19:55,279 --> 00:20:02,510
that's how we build trust with our

384
00:19:59,390 --> 00:20:04,940
customers because really we've got to be

385
00:20:02,510 --> 00:20:10,600
able to deploy new features that's the

386
00:20:04,940 --> 00:20:14,809
the the ultimate and battle between

387
00:20:10,600 --> 00:20:18,740
engineering and operations is that idea

388
00:20:14,809 --> 00:20:20,899
of engineering is measured by the number

389
00:20:18,740 --> 00:20:24,440
of fantastic features they get into

390
00:20:20,899 --> 00:20:26,659
production but operations is measured by

391
00:20:24,440 --> 00:20:28,460
uptime and generally those things are

392
00:20:26,659 --> 00:20:30,020
antagonistic if you want to keep it up

393
00:20:28,460 --> 00:20:31,549
you don't deploy new features if you

394
00:20:30,020 --> 00:20:33,200
want to deploy new features you're not

395
00:20:31,549 --> 00:20:35,450
gonna be able to keep it up so there's a

396
00:20:33,200 --> 00:20:38,240
fight there but when we bring

397
00:20:35,450 --> 00:20:43,250
those two groups together they can have

398
00:20:38,240 --> 00:20:46,970
a real conversation about how they can

399
00:20:43,250 --> 00:20:50,870
do both of those things and still be

400
00:20:46,970 --> 00:20:53,090
able to delight their customers have

401
00:20:50,870 --> 00:20:55,309
high levels of uptime have fantastic

402
00:20:53,090 --> 00:20:57,620
features and be able to move forward and

403
00:20:55,309 --> 00:21:04,760
that's really what I want to talk about

404
00:20:57,620 --> 00:21:05,720
as we go through this today um so first

405
00:21:04,760 --> 00:21:08,659
thing I want to talk about is

406
00:21:05,720 --> 00:21:11,659
transparency how do we how does this

407
00:21:08,659 --> 00:21:13,399
team build transparency with their

408
00:21:11,659 --> 00:21:16,519
customers so I'm gonna kind of split

409
00:21:13,399 --> 00:21:18,769
trying it split between good practices

410
00:21:16,519 --> 00:21:20,419
complementary practices that you can use

411
00:21:18,769 --> 00:21:22,970
with your scrum team or your Kanban team

412
00:21:20,419 --> 00:21:25,880
as part of your agile practices as well

413
00:21:22,970 --> 00:21:28,220
as what this team specifically has done

414
00:21:25,880 --> 00:21:30,169
it's why I'm going to show some of the

415
00:21:28,220 --> 00:21:33,590
details and governs of the work that

416
00:21:30,169 --> 00:21:36,500
they've done around that um but we need

417
00:21:33,590 --> 00:21:40,580
transparency to build trust with our

418
00:21:36,500 --> 00:21:43,429
customers we need to be understanding of

419
00:21:40,580 --> 00:21:46,309
things when they happen as well as doing

420
00:21:43,429 --> 00:21:47,990
our best to understand how and why they

421
00:21:46,309 --> 00:21:49,299
happened and so that we can figure out

422
00:21:47,990 --> 00:21:51,919
what to do about it

423
00:21:49,299 --> 00:21:53,899
customers are not happy if you just tell

424
00:21:51,919 --> 00:21:57,409
them the system was down we rebooted the

425
00:21:53,899 --> 00:21:58,340
server and now it's back up again why

426
00:21:57,409 --> 00:22:00,649
was it down

427
00:21:58,340 --> 00:22:02,870
is it going to go down again we no

428
00:22:00,649 --> 00:22:05,450
longer have a level of confidence in

429
00:22:02,870 --> 00:22:07,490
your ability to maintain that system if

430
00:22:05,450 --> 00:22:09,799
you don't even know why there's a

431
00:22:07,490 --> 00:22:13,340
problem with or why it's going down so

432
00:22:09,799 --> 00:22:16,490
we need to understand that and build

433
00:22:13,340 --> 00:22:21,049
transparency to build trust with our

434
00:22:16,490 --> 00:22:24,320
customers so this is an example of some

435
00:22:21,049 --> 00:22:26,360
of the output you will get from the

436
00:22:24,320 --> 00:22:29,600
Hosier dev ops team you'll be able to go

437
00:22:26,360 --> 00:22:31,880
find on and the visual studio well

438
00:22:29,600 --> 00:22:34,190
that's this is a from the Veals to team

439
00:22:31,880 --> 00:22:36,649
services blog it's the same blog it's

440
00:22:34,190 --> 00:22:39,559
just been moved around a little bit but

441
00:22:36,649 --> 00:22:42,679
it's there's your DevOps blog and they

442
00:22:39,559 --> 00:22:45,950
do a full post-mortem and they publish

443
00:22:42,679 --> 00:22:48,470
all of the data they publish it to shore

444
00:22:45,950 --> 00:22:50,419
and here if you maybe

445
00:22:48,470 --> 00:22:53,360
I can well that's not what I wanted to

446
00:22:50,419 --> 00:22:56,270
do I wanted to zoom in there was my

447
00:22:53,360 --> 00:23:00,740
magnifying glass there we go

448
00:22:56,270 --> 00:23:01,460
they they show the data when things went

449
00:23:00,740 --> 00:23:04,280
bad

450
00:23:01,460 --> 00:23:06,650
what they've investigated in order to

451
00:23:04,280 --> 00:23:09,440
understand what went bad how they've

452
00:23:06,650 --> 00:23:12,590
managed or tried to mitigate it the

453
00:23:09,440 --> 00:23:16,669
actions they took and the timeline that

454
00:23:12,590 --> 00:23:21,320
that went through so it's a really

455
00:23:16,669 --> 00:23:24,830
powerful story there and they also at

456
00:23:21,320 --> 00:23:28,370
publish an idea of what they're going to

457
00:23:24,830 --> 00:23:31,340
go do to go fix it as well so if i zoom

458
00:23:28,370 --> 00:23:33,830
it there we go they're going to make a

459
00:23:31,340 --> 00:23:37,309
bunch of commitment to their customers

460
00:23:33,830 --> 00:23:39,890
to improve the service to make sure that

461
00:23:37,309 --> 00:23:44,000
that type of problem those outages don't

462
00:23:39,890 --> 00:23:47,890
happen again for every outage of Azure

463
00:23:44,000 --> 00:23:50,570
DevOps at big and small you will find at

464
00:23:47,890 --> 00:23:53,780
these types of posts and this type of

465
00:23:50,570 --> 00:23:55,640
data the smaller the outage the the less

466
00:23:53,780 --> 00:23:57,650
impact the outage obviously the less

467
00:23:55,640 --> 00:23:59,570
effort you want to spend in some of

468
00:23:57,650 --> 00:24:01,520
these areas but when the whole system's

469
00:23:59,570 --> 00:24:04,010
down you're gonna see a post and that

470
00:24:01,520 --> 00:24:06,970
looks like this with a bunch of data in

471
00:24:04,010 --> 00:24:10,149
it and

472
00:24:06,970 --> 00:24:13,749
the leadership of the is your DevOps

473
00:24:10,149 --> 00:24:17,200
team is adamant that they want to create

474
00:24:13,749 --> 00:24:20,349
that transparency this is a post from a

475
00:24:17,200 --> 00:24:22,149
reply that brine Harry who was the

476
00:24:20,349 --> 00:24:25,149
product unit manager for that department

477
00:24:22,149 --> 00:24:29,320
who really instigated those ideas of

478
00:24:25,149 --> 00:24:32,679
moving to the cloud and am empowered

479
00:24:29,320 --> 00:24:37,679
that part of the organization to make

480
00:24:32,679 --> 00:24:39,669
the changes that resulted in them being

481
00:24:37,679 --> 00:24:41,649
becoming an agile organization

482
00:24:39,669 --> 00:24:44,200
delivering to production and at least

483
00:24:41,649 --> 00:24:47,109
every three weeks and you can see the

484
00:24:44,200 --> 00:24:49,809
type of transparency that he's trying to

485
00:24:47,109 --> 00:24:51,849
create he's saying you know we're not

486
00:24:49,809 --> 00:24:54,989
going to be successful 100% of the time

487
00:24:51,849 --> 00:24:57,369
that's just reality we have to accept

488
00:24:54,989 --> 00:25:00,609
reality there's no such thing as a

489
00:24:57,369 --> 00:25:04,210
hundred percent uptime it's just not

490
00:25:00,609 --> 00:25:05,979
possible no matter what folks say you

491
00:25:04,210 --> 00:25:10,929
have to have downtime from maintenance

492
00:25:05,979 --> 00:25:12,609
you have to have we have to have a

493
00:25:10,929 --> 00:25:16,570
little bit of wiggle room you can't be

494
00:25:12,609 --> 00:25:19,749
100 percent up but how do we make sure

495
00:25:16,570 --> 00:25:22,149
that we minimize the amount of downtime

496
00:25:19,749 --> 00:25:26,529
that we have well there's lots of things

497
00:25:22,149 --> 00:25:28,720
that we can do the first is to the

498
00:25:26,529 --> 00:25:32,019
communication letting people know that

499
00:25:28,720 --> 00:25:34,899
you know that those downtime that

500
00:25:32,019 --> 00:25:37,929
there's some sort of problem that and

501
00:25:34,899 --> 00:25:40,149
there's an issue this is an application

502
00:25:37,929 --> 00:25:43,960
that the user DevOps team have created

503
00:25:40,149 --> 00:25:48,029
in 2013 it was just a spreadsheet and it

504
00:25:43,960 --> 00:25:53,200
was 45 minutes was their time to notify

505
00:25:48,029 --> 00:25:56,169
but their customers and as the users and

506
00:25:53,200 --> 00:25:58,869
but in 2017 that's down to 15 minutes

507
00:25:56,169 --> 00:26:01,269
within 15 minutes of that red button

508
00:25:58,869 --> 00:26:03,249
getting pushed understanding that

509
00:26:01,269 --> 00:26:05,019
there's a problem there's something up

510
00:26:03,249 --> 00:26:07,690
on the Status page there's something up

511
00:26:05,019 --> 00:26:09,609
on the blog and for the internal

512
00:26:07,690 --> 00:26:12,759
Microsoft customers and the key

513
00:26:09,609 --> 00:26:16,239
stakeholders there are emails going out

514
00:26:12,759 --> 00:26:19,179
to the people that need to know and I

515
00:26:16,239 --> 00:26:20,440
have a couple of customers who are in

516
00:26:19,179 --> 00:26:24,280
the top

517
00:26:20,440 --> 00:26:26,980
20 largest customers on Azure DevOps and

518
00:26:24,280 --> 00:26:29,530
they get notifications almost before

519
00:26:26,980 --> 00:26:31,840
they know that there's a problem which

520
00:26:29,530 --> 00:26:34,570
is really powerful for them as well to

521
00:26:31,840 --> 00:26:36,160
then be able to and have the real

522
00:26:34,570 --> 00:26:37,960
discussions they need inside of their

523
00:26:36,160 --> 00:26:40,060
organization yes we're aware of the

524
00:26:37,960 --> 00:26:41,590
problem Microsoft's working to fix it

525
00:26:40,060 --> 00:26:44,260
you know those things that build trust

526
00:26:41,590 --> 00:26:48,160
if we know we understand we're aware

527
00:26:44,260 --> 00:26:51,970
that we can do that so in order to to

528
00:26:48,160 --> 00:26:59,230
preempt this you've got the I remember

529
00:26:51,970 --> 00:27:02,140
one of my good friends at Microsoft when

530
00:26:59,230 --> 00:27:04,150
they first moved to the cloud said one

531
00:27:02,140 --> 00:27:07,900
of the reasons that he made his first

532
00:27:04,150 --> 00:27:10,210
got onto Twitter first it was when they

533
00:27:07,900 --> 00:27:12,760
moved to the cloud because he found out

534
00:27:10,210 --> 00:27:15,010
from people on Twitter that the system

535
00:27:12,760 --> 00:27:17,770
was down before his engineering team

536
00:27:15,010 --> 00:27:19,630
knew that the system was down because we

537
00:27:17,770 --> 00:27:21,340
as software engineers being that the

538
00:27:19,630 --> 00:27:26,850
customers are software engineers as well

539
00:27:21,340 --> 00:27:29,920
are particularly aha em windy and

540
00:27:26,850 --> 00:27:32,620
complaining group of people we are happy

541
00:27:29,920 --> 00:27:35,140
to point the finger when something's not

542
00:27:32,620 --> 00:27:38,410
working properly and he found out first

543
00:27:35,140 --> 00:27:41,740
there so how do you create an

544
00:27:38,410 --> 00:27:45,070
environment within which you know first

545
00:27:41,740 --> 00:27:47,410
not your customers you don't want your

546
00:27:45,070 --> 00:27:48,760
customers to know before you do that

547
00:27:47,410 --> 00:27:53,640
there's a problem with the system and

548
00:27:48,760 --> 00:27:57,310
for that we need telemetry we need data

549
00:27:53,640 --> 00:28:02,650
and we need to understand that data in

550
00:27:57,310 --> 00:28:06,190
order to create the right alerts to know

551
00:28:02,650 --> 00:28:08,110
what we're supposed to do and when when

552
00:28:06,190 --> 00:28:09,760
when that problem arises is that a

553
00:28:08,110 --> 00:28:11,620
problem we need to care about is that a

554
00:28:09,760 --> 00:28:14,680
problem that might go away do we just

555
00:28:11,620 --> 00:28:16,540
need to um in a saunter up to that

556
00:28:14,680 --> 00:28:18,850
problem or do we need to run up to that

557
00:28:16,540 --> 00:28:23,080
problem with with everybody that we need

558
00:28:18,850 --> 00:28:25,420
so um figuring out what we can do to

559
00:28:23,080 --> 00:28:27,940
prevent incidents by looking at the data

560
00:28:25,420 --> 00:28:31,060
and seeing when things might be you know

561
00:28:27,940 --> 00:28:33,480
okay that was a bit that data did not

562
00:28:31,060 --> 00:28:34,919
look good if we'd had

563
00:28:33,480 --> 00:28:37,919
more users on the system at that point

564
00:28:34,919 --> 00:28:40,350
in time we would have had a problem what

565
00:28:37,919 --> 00:28:42,929
can we do to make sure that next time

566
00:28:40,350 --> 00:28:45,600
whatever that data is that spikes or

567
00:28:42,929 --> 00:28:48,169
drops in the way that it did how do we

568
00:28:45,600 --> 00:28:50,880
make sure that we get that moving so

569
00:28:48,169 --> 00:28:52,620
incident prevention at continuous

570
00:28:50,880 --> 00:28:54,419
improvement how do we continually go

571
00:28:52,620 --> 00:28:57,450
around those loops identifying the root

572
00:28:54,419 --> 00:28:59,840
causes and figuring it out because your

573
00:28:57,450 --> 00:29:03,710
DevOps team have created their own

574
00:28:59,840 --> 00:29:06,390
telemetry pipeline so that they can

575
00:29:03,710 --> 00:29:10,410
understand that data and do something

576
00:29:06,390 --> 00:29:13,860
with it they have implemented it in a

577
00:29:10,410 --> 00:29:15,210
lot of the work since their servers are

578
00:29:13,860 --> 00:29:16,380
deployed to Azura they can take

579
00:29:15,210 --> 00:29:17,880
advantage of some of that is your

580
00:29:16,380 --> 00:29:20,100
infrastructure that's there for

581
00:29:17,880 --> 00:29:22,890
everybody anyway they don't have any

582
00:29:20,100 --> 00:29:25,080
special powers in as your as your treats

583
00:29:22,890 --> 00:29:29,100
them like customers as well albeit

584
00:29:25,080 --> 00:29:30,540
pretty big customers and somebody

585
00:29:29,100 --> 00:29:32,370
internal that has everybody's email

586
00:29:30,540 --> 00:29:35,929
address and can go look them up but

587
00:29:32,370 --> 00:29:38,460
that's a different matter but having

588
00:29:35,929 --> 00:29:41,220
monitoring agents installed on all of

589
00:29:38,460 --> 00:29:44,010
your servers and having a set of metrics

590
00:29:41,220 --> 00:29:46,530
that can help you understand what that

591
00:29:44,010 --> 00:29:49,260
looks like and then feed that all into a

592
00:29:46,530 --> 00:29:51,660
big data at platform they have they've

593
00:29:49,260 --> 00:29:54,120
built something called cosmos where they

594
00:29:51,660 --> 00:29:56,549
feed all of that data in and then

595
00:29:54,120 --> 00:30:00,330
they're able to use a query platform

596
00:29:56,549 --> 00:30:03,690
called that they built koku store that

597
00:30:00,330 --> 00:30:06,540
allows them to analyze that data and

598
00:30:03,690 --> 00:30:09,210
look for for trends look for things that

599
00:30:06,540 --> 00:30:11,750
are worrying and so you can have

600
00:30:09,210 --> 00:30:14,790
monitors and you can have alerts that's

601
00:30:11,750 --> 00:30:16,410
reactive the alert triggers you had a

602
00:30:14,790 --> 00:30:19,950
notification you're gonna go do

603
00:30:16,410 --> 00:30:23,490
something about it and but also is there

604
00:30:19,950 --> 00:30:26,790
trends that you can look for in the data

605
00:30:23,490 --> 00:30:31,620
analysis to see when something's going

606
00:30:26,790 --> 00:30:35,190
to happen even maybe before it does so

607
00:30:31,620 --> 00:30:37,230
they have access to as your Diagnostics

608
00:30:35,190 --> 00:30:40,200
they use a pin sites application

609
00:30:37,230 --> 00:30:43,919
insights is built on top of your and it

610
00:30:40,200 --> 00:30:45,450
allows you to on any platform and they

611
00:30:43,919 --> 00:30:47,340
have api's for all the platforms it's

612
00:30:45,450 --> 00:30:50,280
just a set of services

613
00:30:47,340 --> 00:30:51,660
collect and analyze metrics and then

614
00:30:50,280 --> 00:30:54,870
they feed all of that data into an azure

615
00:30:51,660 --> 00:30:57,830
data leak and a lot of these systems the

616
00:30:54,870 --> 00:31:00,750
the features were built out as part of a

617
00:30:57,830 --> 00:31:04,260
lot of teams at Microsoft moving towards

618
00:31:00,750 --> 00:31:08,810
this model a very powerful platform I

619
00:31:04,260 --> 00:31:08,810
use it myself on on on my tools as well

620
00:31:09,560 --> 00:31:13,070
and something that they they really

621
00:31:11,510 --> 00:31:15,350
realized was that they have to gather

622
00:31:13,070 --> 00:31:18,080
everything there's dessert there's no

623
00:31:15,350 --> 00:31:19,820
data that is unimportant are you gonna

624
00:31:18,080 --> 00:31:22,220
to gather data about your SLES you've

625
00:31:19,820 --> 00:31:25,280
got to gather data about alerts your

626
00:31:22,220 --> 00:31:26,690
DevOps pipelines your experiments that

627
00:31:25,280 --> 00:31:29,710
are going on you're going to collect

628
00:31:26,690 --> 00:31:32,600
data about your network performance your

629
00:31:29,710 --> 00:31:34,400
platform all of the things that are

630
00:31:32,600 --> 00:31:36,280
going on even then to Tracy's telemetry

631
00:31:34,400 --> 00:31:39,640
power flux everything is going to be

632
00:31:36,280 --> 00:31:42,730
collected in that way and at the moment

633
00:31:39,640 --> 00:31:45,890
or at least at the point in time where I

634
00:31:42,730 --> 00:31:48,080
got access to an understanding of the

635
00:31:45,890 --> 00:31:51,530
volume of data they were collecting

636
00:31:48,080 --> 00:31:55,220
about seven terabytes of data per day on

637
00:31:51,530 --> 00:31:57,800
average with people using the system and

638
00:31:55,220 --> 00:32:00,200
getting an understanding of all of that

639
00:31:57,800 --> 00:32:02,620
data KPI is job history pair of

640
00:32:00,200 --> 00:32:05,780
characters Tracy's activity logs

641
00:32:02,620 --> 00:32:07,370
platform and network capabilities so in

642
00:32:05,780 --> 00:32:11,080
order to do that you really have to

643
00:32:07,370 --> 00:32:14,870
understand the the customer experience

644
00:32:11,080 --> 00:32:16,970
telemetry so a user accesses the system

645
00:32:14,870 --> 00:32:19,130
it goes through a bunch of tiers

646
00:32:16,970 --> 00:32:21,530
possibly it potentially accesses the

647
00:32:19,130 --> 00:32:24,370
database and then serves as a result

648
00:32:21,530 --> 00:32:26,510
back to the customer or all of your

649
00:32:24,370 --> 00:32:30,260
interactivity with with many of these

650
00:32:26,510 --> 00:32:32,270
systems is user activated and when it's

651
00:32:30,260 --> 00:32:36,350
user activated you really have to

652
00:32:32,270 --> 00:32:38,630
understand the flow and one of the

653
00:32:36,350 --> 00:32:42,890
things that the azure DevOps team do is

654
00:32:38,630 --> 00:32:46,310
they have an IDE that is generated for

655
00:32:42,890 --> 00:32:48,800
every like call into the system that

656
00:32:46,310 --> 00:32:50,300
they pass all the way through down to

657
00:32:48,800 --> 00:32:53,030
sequel server and they collect

658
00:32:50,300 --> 00:32:57,050
performance and trace across the board

659
00:32:53,030 --> 00:32:59,420
there's actually our front end flag that

660
00:32:57,050 --> 00:33:01,430
you can turn on and I'll maybe try and

661
00:32:59,420 --> 00:33:02,960
look it up or or speak to one of the

662
00:33:01,430 --> 00:33:05,720
teams to see where you turn that on

663
00:33:02,960 --> 00:33:09,710
again I can never remember oh underscore

664
00:33:05,720 --> 00:33:10,420
Diagnostics on let's see if I can figure

665
00:33:09,710 --> 00:33:14,090
it out

666
00:33:10,420 --> 00:33:16,010
dev comm

667
00:33:14,090 --> 00:33:20,440
bring that across I will bring it across

668
00:33:16,010 --> 00:33:20,440
in just there

669
00:33:22,990 --> 00:33:27,090
let me butt

670
00:33:29,409 --> 00:33:35,559
not there because that will not get

671
00:33:37,730 --> 00:33:45,560
directory where is my [ __ ] did you leti

672
00:33:42,170 --> 00:33:47,780
I'm just switching to I have are a lot

673
00:33:45,560 --> 00:33:50,680
of Azure DevOps that I have access to a

674
00:33:47,780 --> 00:33:54,250
lot of different platforms and systems

675
00:33:50,680 --> 00:33:54,250
so I'm just going to

676
00:33:56,230 --> 00:33:59,130
bring that up

677
00:34:00,300 --> 00:34:05,610
it is just taking its time to load so

678
00:34:02,850 --> 00:34:08,970
maybe I stick it over here and do it

679
00:34:05,610 --> 00:34:10,560
will you that once it's loaded oh no I

680
00:34:08,970 --> 00:34:11,580
have to hit switch at the bottom then

681
00:34:10,560 --> 00:34:13,050
you'll love it when you've got a tall

682
00:34:11,580 --> 00:34:16,950
screen in the buttons way at the bottom

683
00:34:13,050 --> 00:34:19,770
that's a user experience so are they're

684
00:34:16,950 --> 00:34:22,500
able to collect that telemetry that pair

685
00:34:19,770 --> 00:34:24,929
of telemetry across their entire

686
00:34:22,500 --> 00:34:29,580
organization so let me go into my

687
00:34:24,929 --> 00:34:33,000
migration tools setup let's see if I can

688
00:34:29,580 --> 00:34:36,230
remember how to do this I'm pretty sure

689
00:34:33,000 --> 00:34:36,230
it's underscore Oh

690
00:34:39,179 --> 00:34:44,849
is it underscore Diagnostics it is

691
00:34:42,710 --> 00:34:46,409
that's what happens when you've been

692
00:34:44,849 --> 00:34:49,139
working with the team for too long so if

693
00:34:46,409 --> 00:34:51,419
I turn on Diagnostics and perf bar and

694
00:34:49,139 --> 00:34:55,139
you can do this on any of your accounts

695
00:34:51,419 --> 00:34:56,669
as well I just want to show you what it

696
00:34:55,139 --> 00:34:58,770
is that you know the kind of

697
00:34:56,669 --> 00:35:00,750
capabilities that they're collecting you

698
00:34:58,770 --> 00:35:06,480
can see at the bottom of the screen it's

699
00:35:00,750 --> 00:35:10,230
very small can I pop a mic can I pop a

700
00:35:06,480 --> 00:35:14,960
magnifying glass my fire there we go

701
00:35:10,230 --> 00:35:14,960
whoa that is not what I wanted yet

702
00:35:16,040 --> 00:35:18,250
whoo

703
00:35:18,260 --> 00:35:24,740
okay that's not working very well but if

704
00:35:21,020 --> 00:35:31,350
I hit I suck at that I need to get

705
00:35:24,740 --> 00:35:36,060
better at nope it's not letting me

706
00:35:31,350 --> 00:35:38,990
they wat bump here we got if i zoom in

707
00:35:36,060 --> 00:35:38,990
no

708
00:35:39,010 --> 00:35:42,390
right there we go

709
00:35:43,580 --> 00:35:49,150
you can see I don't know if you can see

710
00:35:45,830 --> 00:35:49,150
that hopefully you can see that

711
00:35:52,130 --> 00:35:57,410
okay maybe not but there's our path bar

712
00:35:55,640 --> 00:36:00,590
at the bottom of the page here you can

713
00:35:57,410 --> 00:36:02,840
see at performance if I pop that up I'm

714
00:36:00,590 --> 00:36:06,070
gonna kill magnifier so it makes it

715
00:36:02,840 --> 00:36:10,160
easier to see this but if I pop that up

716
00:36:06,070 --> 00:36:12,800
it's collecting the the trace and time

717
00:36:10,160 --> 00:36:14,990
and things that have happened throughout

718
00:36:12,800 --> 00:36:17,480
the entire system all the way through

719
00:36:14,990 --> 00:36:20,420
every web service down to every database

720
00:36:17,480 --> 00:36:21,950
call every plugin so that you can go

721
00:36:20,420 --> 00:36:24,230
analyze that if you're one of the

722
00:36:21,950 --> 00:36:26,270
developers on this team you want as much

723
00:36:24,230 --> 00:36:28,700
data as possible to go figure that out

724
00:36:26,270 --> 00:36:31,190
and you can see at the bottom there's

725
00:36:28,700 --> 00:36:32,630
actually a little smiley face there um I

726
00:36:31,190 --> 00:36:34,610
don't know if you can see that all the

727
00:36:32,630 --> 00:36:38,720
way down there little smiley face that

728
00:36:34,610 --> 00:36:40,640
means it met the KPI for how long pages

729
00:36:38,720 --> 00:36:41,960
are supposed to load if you have a

730
00:36:40,640 --> 00:36:44,510
smiley face if you have a side place

731
00:36:41,960 --> 00:36:46,790
things are not going so well and it says

732
00:36:44,510 --> 00:36:50,480
all is good all the checks are working

733
00:36:46,790 --> 00:36:55,220
out so that's one of the ways that the

734
00:36:50,480 --> 00:36:58,250
team are able to leverage that and for

735
00:36:55,220 --> 00:37:01,940
some reason I have lost all of the

736
00:36:58,250 --> 00:37:04,700
buttons on my office so let me just

737
00:37:01,940 --> 00:37:09,040
close that and reopen it so I can get

738
00:37:04,700 --> 00:37:09,040
back showing you

739
00:37:09,130 --> 00:37:16,380
there we go I've got a pack

740
00:37:11,970 --> 00:37:23,960
don't you love it when find where where

741
00:37:16,380 --> 00:37:27,620
we we we're about there a it's like ah

742
00:37:23,960 --> 00:37:31,520
so they have this ability to correlate

743
00:37:27,620 --> 00:37:36,270
everything across the board end to end

744
00:37:31,520 --> 00:37:37,680
and have that set up and and working we

745
00:37:36,270 --> 00:37:39,780
can see all the dependencies they can

746
00:37:37,680 --> 00:37:42,630
get all of the telemetry data and set

747
00:37:39,780 --> 00:37:49,710
all of that up and it means that they

748
00:37:42,630 --> 00:37:53,490
can check I have metrics and trend

749
00:37:49,710 --> 00:37:56,370
analysis to see what's going on and when

750
00:37:53,490 --> 00:38:00,800
something goes below the trend that they

751
00:37:56,370 --> 00:38:03,600
want they can dive in and see exactly

752
00:38:00,800 --> 00:38:06,210
when things happen what the problem was

753
00:38:03,600 --> 00:38:09,090
how many people were affected and be

754
00:38:06,210 --> 00:38:12,140
able to take to get to get that pair of

755
00:38:09,090 --> 00:38:15,560
get access to that extra information

756
00:38:12,140 --> 00:38:15,560
that they have

757
00:38:16,440 --> 00:38:21,820
I'm getting that extended down all the

758
00:38:19,840 --> 00:38:25,810
way to their dependencies so if they are

759
00:38:21,820 --> 00:38:28,510
dependent upon the sequel server and the

760
00:38:25,810 --> 00:38:29,800
sequel services then they're able to get

761
00:38:28,510 --> 00:38:32,290
all of that as well and see the

762
00:38:29,800 --> 00:38:34,770
dependency activities I mean the amount

763
00:38:32,290 --> 00:38:37,930
of data that they collect is

764
00:38:34,770 --> 00:38:41,800
unbelievable because they need to keep a

765
00:38:37,930 --> 00:38:46,360
system up with all of the software

766
00:38:41,800 --> 00:38:49,270
engineers that are users of this system

767
00:38:46,360 --> 00:38:52,840
you know checking in code think think of

768
00:38:49,270 --> 00:38:55,150
if as your DevOps goes down all of the

769
00:38:52,840 --> 00:38:56,590
millions of people that use it and all

770
00:38:55,150 --> 00:38:58,780
of the companies that have their

771
00:38:56,590 --> 00:39:02,140
software engineers reliant upon it

772
00:38:58,780 --> 00:39:05,170
they're all down there all unavailable

773
00:39:02,140 --> 00:39:08,770
it's not a good place to know to be and

774
00:39:05,170 --> 00:39:12,100
so you need to be able to go deep on the

775
00:39:08,770 --> 00:39:16,380
telemetry and really understand at

776
00:39:12,100 --> 00:39:20,009
what's going on at every level

777
00:39:16,380 --> 00:39:21,119
ah they do have activity looks schema

778
00:39:20,009 --> 00:39:24,269
I'm just gonna go through this very

779
00:39:21,119 --> 00:39:27,509
quickly I am happy to provide the slides

780
00:39:24,269 --> 00:39:30,509
out to anybody who wants to give me a

781
00:39:27,509 --> 00:39:33,329
shout I will do that but they collect

782
00:39:30,509 --> 00:39:37,049
all of their at telemetry across the

783
00:39:33,329 --> 00:39:38,039
board really understand and that tool

784
00:39:37,049 --> 00:39:40,079
that I just showed

785
00:39:38,039 --> 00:39:41,250
oh there we go there's the URL I did not

786
00:39:40,079 --> 00:39:44,059
even know it was in here but they

787
00:39:41,250 --> 00:39:46,680
surfaced that data at to the developers

788
00:39:44,059 --> 00:39:49,230
so that they can they can see it and get

789
00:39:46,680 --> 00:39:53,009
access to it so you can do that as well

790
00:39:49,230 --> 00:39:55,799
and see that performance on your copy of

791
00:39:53,009 --> 00:39:59,910
the system to see what data is available

792
00:39:55,799 --> 00:40:01,920
and they also aggregate it across the

793
00:39:59,910 --> 00:40:05,250
entire service so they get an insight as

794
00:40:01,920 --> 00:40:07,789
to and what's going on holistically but

795
00:40:05,250 --> 00:40:10,049
also per customer as well if you've got

796
00:40:07,789 --> 00:40:12,450
everybody at a particular customer

797
00:40:10,049 --> 00:40:16,200
that's down then we need to go deal with

798
00:40:12,450 --> 00:40:19,079
that it it's it's not okay to say we

799
00:40:16,200 --> 00:40:21,720
have 5,000 customers and one customer is

800
00:40:19,079 --> 00:40:24,539
down so that's not so bad but one

801
00:40:21,720 --> 00:40:27,390
customer is down everybody at that one

802
00:40:24,539 --> 00:40:29,250
customer cannot do at the job that they

803
00:40:27,390 --> 00:40:32,940
do on the service so you need to make

804
00:40:29,250 --> 00:40:36,539
sure that you can see that as well and

805
00:40:32,940 --> 00:40:39,509
see it in real time so that you can do

806
00:40:36,539 --> 00:40:42,750
something about it and get a true

807
00:40:39,509 --> 00:40:46,170
understanding of what's going on so I

808
00:40:42,750 --> 00:40:51,109
think that's that's super SuperDuper

809
00:40:46,170 --> 00:40:53,819
important okay and that idea that

810
00:40:51,109 --> 00:40:54,089
customers are a bag of sand I love that

811
00:40:53,819 --> 00:40:59,160
one

812
00:40:54,089 --> 00:41:02,759
em every grain of sand is a customer and

813
00:40:59,160 --> 00:41:05,250
every grain is important if somebody is

814
00:41:02,759 --> 00:41:07,019
having a problem they're gonna tell ten

815
00:41:05,250 --> 00:41:09,839
of their friends that they have a

816
00:41:07,019 --> 00:41:13,140
problem and you can see here they're

817
00:41:09,839 --> 00:41:15,930
they're doing an impact threshold and to

818
00:41:13,140 --> 00:41:18,150
understand when do we need to have a

819
00:41:15,930 --> 00:41:20,369
bigger conversation when we're in breach

820
00:41:18,150 --> 00:41:24,059
of SLA so that we can go do something

821
00:41:20,369 --> 00:41:27,480
about it but also the the team I know

822
00:41:24,059 --> 00:41:28,940
that they go back over this data to see

823
00:41:27,480 --> 00:41:32,150
even the

824
00:41:28,940 --> 00:41:34,040
the smaller blips when people had

825
00:41:32,150 --> 00:41:35,900
problems or performance problems let's

826
00:41:34,040 --> 00:41:38,470
go talk to the customer figure out what

827
00:41:35,900 --> 00:41:43,069
the problem was and what can we do to go

828
00:41:38,470 --> 00:41:46,760
and fix that up and you've got to find a

829
00:41:43,069 --> 00:41:50,900
balance between the amount of noise the

830
00:41:46,760 --> 00:41:54,050
amount of data you get and having you

831
00:41:50,900 --> 00:41:56,810
know the alerts to the developers you've

832
00:41:54,050 --> 00:41:58,010
got to be able to push new features at

833
00:41:56,810 --> 00:42:00,770
the same time so if everybody's

834
00:41:58,010 --> 00:42:03,260
interrupted all the time so trying to

835
00:42:00,770 --> 00:42:05,780
minimize those alerts so that they're

836
00:42:03,260 --> 00:42:10,000
only the things that are important you

837
00:42:05,780 --> 00:42:13,040
you'll know if you get an email that is

838
00:42:10,000 --> 00:42:15,349
you get a hundred emails from one

839
00:42:13,040 --> 00:42:18,250
service you're going to either turn that

840
00:42:15,349 --> 00:42:21,079
service off turn the emails off or

841
00:42:18,250 --> 00:42:22,579
create a rule and shove them in a folder

842
00:42:21,079 --> 00:42:25,640
somewhere where nobody will ever see

843
00:42:22,579 --> 00:42:28,730
them so that's that's oh I went the

844
00:42:25,640 --> 00:42:32,900
wrong way that's really important so

845
00:42:28,730 --> 00:42:35,540
balancing at that noise to signal so

846
00:42:32,900 --> 00:42:40,069
then you also need to be able to respond

847
00:42:35,540 --> 00:42:43,460
as quickly as possible to the problems

848
00:42:40,069 --> 00:42:46,490
that come up and you can't have the

849
00:42:43,460 --> 00:42:48,890
development team chucking that code over

850
00:42:46,490 --> 00:42:52,069
the wall over the fence to the software

851
00:42:48,890 --> 00:42:53,359
engineer the operations team and because

852
00:42:52,069 --> 00:42:55,730
what they offer up what's going to

853
00:42:53,359 --> 00:42:59,240
happen is the operations team are going

854
00:42:55,730 --> 00:43:01,849
to just bolt on some type of monitoring

855
00:42:59,240 --> 00:43:04,819
that they can do what they can do

856
00:43:01,849 --> 00:43:06,710
whereas if engineering the dev team is

857
00:43:04,819 --> 00:43:09,619
building out the monitoring they are

858
00:43:06,710 --> 00:43:13,310
able to add deep holistic monitoring

859
00:43:09,619 --> 00:43:15,920
into their application and have a much

860
00:43:13,310 --> 00:43:16,930
better experience for the engineers out

861
00:43:15,920 --> 00:43:19,010
trying to figure out the problem

862
00:43:16,930 --> 00:43:23,030
operations who are trying to support and

863
00:43:19,010 --> 00:43:27,410
maintain it so they built around this

864
00:43:23,030 --> 00:43:29,780
idea of s re bringing DevOps and s re

865
00:43:27,410 --> 00:43:31,260
together they'd already had they used to

866
00:43:29,780 --> 00:43:34,690
have

867
00:43:31,260 --> 00:43:37,750
developers coders testers and operations

868
00:43:34,690 --> 00:43:41,470
as completely separate teams now they've

869
00:43:37,750 --> 00:43:43,869
got a combined engineering team which

870
00:43:41,470 --> 00:43:45,910
has featured team engineers which are

871
00:43:43,869 --> 00:43:47,260
your traditional coders and testers

872
00:43:45,910 --> 00:43:49,570
that's bringing bringing that group

873
00:43:47,260 --> 00:43:52,900
together and that's your feature team

874
00:43:49,570 --> 00:43:57,609
engineers but also on the same team

875
00:43:52,900 --> 00:44:01,089
they have live site engineers okay and

876
00:43:57,609 --> 00:44:03,130
they have two two pieces of that story

877
00:44:01,089 --> 00:44:04,950
I've got it here in blue and purpose re

878
00:44:03,130 --> 00:44:07,990
purple and blue yeah blue and purple

879
00:44:04,950 --> 00:44:12,070
they have a feature team life site

880
00:44:07,990 --> 00:44:14,589
engineer which is a rotating role for

881
00:44:12,070 --> 00:44:18,450
the feature team engineers so at least

882
00:44:14,589 --> 00:44:22,589
one of the if not two of the feature

883
00:44:18,450 --> 00:44:27,130
team engineers for a sprint will be

884
00:44:22,589 --> 00:44:30,609
designated as a feature team live site

885
00:44:27,130 --> 00:44:35,770
engineer that live site engineer em is

886
00:44:30,609 --> 00:44:38,170
not going to be looking at value work ie

887
00:44:35,770 --> 00:44:41,950
your traditional sprint backlog they are

888
00:44:38,170 --> 00:44:44,369
solely going to be looking at work to

889
00:44:41,950 --> 00:44:48,460
help improve stability of the platform

890
00:44:44,369 --> 00:44:50,280
maintain and manage that and they also

891
00:44:48,460 --> 00:44:53,650
have access to site reliability

892
00:44:50,280 --> 00:44:56,349
engineers who are dedicated site

893
00:44:53,650 --> 00:45:01,290
reliability engineering folks and that

894
00:44:56,349 --> 00:45:04,420
have deep expertise in platform and

895
00:45:01,290 --> 00:45:05,619
monitoring to leverage and they're all

896
00:45:04,420 --> 00:45:07,390
part of the same team you have a

897
00:45:05,619 --> 00:45:09,160
combined engineering team that could

898
00:45:07,390 --> 00:45:10,140
includes the rotating roles as well as

899
00:45:09,160 --> 00:45:14,890
the dedicated

900
00:45:10,140 --> 00:45:17,520
LifeSite s our site reliability

901
00:45:14,890 --> 00:45:21,849
engineering is an important concept to

902
00:45:17,520 --> 00:45:25,750
create a world in which we can we can

903
00:45:21,849 --> 00:45:28,810
get very quick delivering to a platform

904
00:45:25,750 --> 00:45:31,839
that's up as much as possible and so we

905
00:45:28,810 --> 00:45:33,310
want to automate as much as possible but

906
00:45:31,839 --> 00:45:36,700
there are always going to be things that

907
00:45:33,310 --> 00:45:41,290
we we have to do you might have some

908
00:45:36,700 --> 00:45:42,910
kind of compliance security those are

909
00:45:41,290 --> 00:45:43,890
all things that we have to do and this

910
00:45:42,910 --> 00:45:46,680
is the the

911
00:45:43,890 --> 00:45:48,690
the the pyramid of things we must do up

912
00:45:46,680 --> 00:45:51,660
to the most valuable things at the tops

913
00:45:48,690 --> 00:45:55,640
or product contributions are at the top

914
00:45:51,660 --> 00:45:58,740
and a live site engineer that that

915
00:45:55,640 --> 00:46:01,140
feature site

916
00:45:58,740 --> 00:46:02,790
life site engineer and site reliability

917
00:46:01,140 --> 00:46:05,880
engineer are going to be working

918
00:46:02,790 --> 00:46:08,369
together and and doing stuff at the

919
00:46:05,880 --> 00:46:10,410
bottom of this pyramid and then flowing

920
00:46:08,369 --> 00:46:12,720
as those things are complete up to the

921
00:46:10,410 --> 00:46:14,970
top of the top of the pyramid so the

922
00:46:12,720 --> 00:46:18,590
last thing they do is product

923
00:46:14,970 --> 00:46:23,310
contributions when everything else is

924
00:46:18,590 --> 00:46:24,900
complete that's a powerful story because

925
00:46:23,310 --> 00:46:28,050
they have to be able to respond to

926
00:46:24,900 --> 00:46:30,690
allowance those are the folks they

927
00:46:28,050 --> 00:46:32,160
assigned feature life site engineers are

928
00:46:30,690 --> 00:46:34,560
the ones that get woken up at 3 o'clock

929
00:46:32,160 --> 00:46:38,430
in the morning to go deal with that

930
00:46:34,560 --> 00:46:42,900
problem the team the there's your DevOps

931
00:46:38,430 --> 00:46:45,360
team have built and I don't know what

932
00:46:42,900 --> 00:46:49,230
you call it an alerting system and auto

933
00:46:45,360 --> 00:46:51,360
routing system with different ways those

934
00:46:49,230 --> 00:46:54,090
elapsed can be triggered social at

935
00:46:51,360 --> 00:46:58,050
humans that's a support call alerting

936
00:46:54,090 --> 00:47:01,100
and customer support and goes into a

937
00:46:58,050 --> 00:47:04,490
rules engine and then allocates that to

938
00:47:01,100 --> 00:47:07,850
the the

939
00:47:04,490 --> 00:47:09,920
the combined engineering team that is

940
00:47:07,850 --> 00:47:11,960
accountable for that part of the system

941
00:47:09,920 --> 00:47:14,120
that part of the code and then they will

942
00:47:11,960 --> 00:47:17,060
do an impact assessment and decide what

943
00:47:14,120 --> 00:47:20,090
they want to do how are they going to

944
00:47:17,060 --> 00:47:23,090
respond to this to this problem are they

945
00:47:20,090 --> 00:47:24,890
going to do a generic business errors

946
00:47:23,090 --> 00:47:27,110
investigation they'll put it on the

947
00:47:24,890 --> 00:47:29,540
backlog we'll get to it in the morning

948
00:47:27,110 --> 00:47:31,670
when everybody wakes up and or are we

949
00:47:29,540 --> 00:47:35,650
going to have to wake a bunch of people

950
00:47:31,670 --> 00:47:38,390
up and do the 24/7 live incident and

951
00:47:35,650 --> 00:47:40,730
when the live incident happens they're

952
00:47:38,390 --> 00:47:42,320
going to create a bridge an incident

953
00:47:40,730 --> 00:47:44,300
bridge with all the people on it that

954
00:47:42,320 --> 00:47:45,890
they need it to go figure that out so

955
00:47:44,300 --> 00:47:47,870
the feature team life site engineer is

956
00:47:45,890 --> 00:47:50,120
on there they're the allocated person on

957
00:47:47,870 --> 00:47:51,920
the engineering team as well as the sres

958
00:47:50,120 --> 00:47:54,470
but maybe they need to bring in

959
00:47:51,920 --> 00:47:57,800
additional partners like if sequel

960
00:47:54,470 --> 00:47:59,890
server is operating slow then maybe they

961
00:47:57,800 --> 00:48:02,030
have to bring in somebody from Azure

962
00:47:59,890 --> 00:48:03,380
executive leadership might be brought in

963
00:48:02,030 --> 00:48:04,580
there may be an incident manager there

964
00:48:03,380 --> 00:48:07,490
are all sorts of things that are

965
00:48:04,580 --> 00:48:10,070
triggered in order to make those things

966
00:48:07,490 --> 00:48:14,060
happen get everybody together and get a

967
00:48:10,070 --> 00:48:19,910
resolution to the problem that idea of

968
00:48:14,060 --> 00:48:23,180
having those a life site team inside of

969
00:48:19,910 --> 00:48:25,340
a software engineering team so they have

970
00:48:23,180 --> 00:48:27,770
slightly bigger teams than you would

971
00:48:25,340 --> 00:48:30,020
traditionally see for scrum teams scrum

972
00:48:27,770 --> 00:48:34,160
teams are traditionally between three

973
00:48:30,020 --> 00:48:36,680
and nine they this drug do between ten

974
00:48:34,160 --> 00:48:38,990
and twelve people they have two people

975
00:48:36,680 --> 00:48:41,270
on the team that is the live site team

976
00:48:38,990 --> 00:48:43,160
so they have a feature team which are

977
00:48:41,270 --> 00:48:44,540
looking at the sprint backlog and

978
00:48:43,160 --> 00:48:48,080
dealing with those issues and then the

979
00:48:44,540 --> 00:48:50,780
live site team only deals with live site

980
00:48:48,080 --> 00:48:55,580
issues and interruptions so they're

981
00:48:50,780 --> 00:49:00,800
shielding the team from those potential

982
00:48:55,580 --> 00:49:02,810
disruptions while still working on

983
00:49:00,800 --> 00:49:05,840
things that would add value to the

984
00:49:02,810 --> 00:49:08,330
product but from the perspective of life

985
00:49:05,840 --> 00:49:12,280
site issues so mitigating things for

986
00:49:08,330 --> 00:49:14,860
future life site issues

987
00:49:12,280 --> 00:49:17,470
and that that group has a rotating group

988
00:49:14,860 --> 00:49:21,490
it will be a different group each each

989
00:49:17,470 --> 00:49:23,290
sprint so again they have priorities if

990
00:49:21,490 --> 00:49:26,140
there's a live site incident that's

991
00:49:23,290 --> 00:49:27,820
their highest priority if there is no

992
00:49:26,140 --> 00:49:30,910
life site incident then they're going to

993
00:49:27,820 --> 00:49:34,330
be looking at past life site mitigation

994
00:49:30,910 --> 00:49:38,080
tasks so that could be things that

995
00:49:34,330 --> 00:49:40,390
enable us to get better at life site or

996
00:49:38,080 --> 00:49:43,030
it could be things that we've identified

997
00:49:40,390 --> 00:49:45,550
as being a problem that really end up in

998
00:49:43,030 --> 00:49:48,040
that category of technical debt things

999
00:49:45,550 --> 00:49:50,410
that are not automated things that are

1000
00:49:48,040 --> 00:49:52,840
not quite in a way they need to be and

1001
00:49:50,410 --> 00:49:56,230
do that and then they're going to look

1002
00:49:52,840 --> 00:49:59,380
at improvements in monitoring telemetry

1003
00:49:56,230 --> 00:50:01,450
and alerts way before they look at

1004
00:49:59,380 --> 00:50:06,310
adding any any new features that is

1005
00:50:01,450 --> 00:50:10,960
their focus so the team that works on

1006
00:50:06,310 --> 00:50:15,720
this they do three week Sprint's so

1007
00:50:10,960 --> 00:50:18,820
during sprint for example during sprint

1008
00:50:15,720 --> 00:50:22,060
1:24 the deployment is ongoing for

1009
00:50:18,820 --> 00:50:23,980
sprint 123 it takes a long time to do a

1010
00:50:22,060 --> 00:50:27,700
deployment on a large system like this

1011
00:50:23,980 --> 00:50:29,410
so it takes more than a few days takes

1012
00:50:27,700 --> 00:50:32,140
more than a week to be honest to get

1013
00:50:29,410 --> 00:50:34,540
that deployed and so they have the

1014
00:50:32,140 --> 00:50:37,180
LifeSite engineers are working alongside

1015
00:50:34,540 --> 00:50:40,860
at the feature team but they're kind of

1016
00:50:37,180 --> 00:50:45,180
working at loggerheads there

1017
00:50:40,860 --> 00:50:48,790
so they also need to be able to manage

1018
00:50:45,180 --> 00:50:52,080
things at scale and the only way to do

1019
00:50:48,790 --> 00:50:55,360
that is to automate we need to automate

1020
00:50:52,080 --> 00:50:58,530
everything need to automate as much as

1021
00:50:55,360 --> 00:51:00,850
possible people people make mistakes

1022
00:50:58,530 --> 00:51:03,280
that's one of the reasons to automate

1023
00:51:00,850 --> 00:51:04,000
people need to go to sleep and people

1024
00:51:03,280 --> 00:51:06,850
forget things

1025
00:51:04,000 --> 00:51:11,260
think about that engineering team at the

1026
00:51:06,850 --> 00:51:13,660
start for the night capital group that

1027
00:51:11,260 --> 00:51:16,540
Nick elected to deploy to one of the

1028
00:51:13,660 --> 00:51:20,740
servers people forget things people make

1029
00:51:16,540 --> 00:51:22,720
mistakes automated processes can tell us

1030
00:51:20,740 --> 00:51:25,540
when they fail when they don't get

1031
00:51:22,720 --> 00:51:29,290
everything done so being able to

1032
00:51:25,540 --> 00:51:33,580
troubleshoot those ideas if we're

1033
00:51:29,290 --> 00:51:37,240
automating we can have alerts that find

1034
00:51:33,580 --> 00:51:40,690
things much much quicker and realize

1035
00:51:37,240 --> 00:51:44,590
that something's wrong and once you

1036
00:51:40,690 --> 00:51:46,780
start mitigating your problems you you

1037
00:51:44,590 --> 00:51:50,710
might have some manual mitigations that

1038
00:51:46,780 --> 00:51:53,440
you have to do that would be you know

1039
00:51:50,710 --> 00:51:56,200
the first thing that might happen but if

1040
00:51:53,440 --> 00:51:59,080
something like that happens often and

1041
00:51:56,200 --> 00:52:02,830
you have the same mitigation task you

1042
00:51:59,080 --> 00:52:05,530
can get it to be automating the

1043
00:52:02,830 --> 00:52:10,180
mitigation as well have the automated

1044
00:52:05,530 --> 00:52:12,370
engine let that switch and then notify

1045
00:52:10,180 --> 00:52:14,140
the engineers that there's a problem

1046
00:52:12,370 --> 00:52:16,240
they need to go fix but you've already

1047
00:52:14,140 --> 00:52:18,610
mitigated the problem that doesn't mean

1048
00:52:16,240 --> 00:52:21,310
we don't have work to do and because

1049
00:52:18,610 --> 00:52:22,840
we're we're monitoring the health all

1050
00:52:21,310 --> 00:52:25,420
the time we're understanding when those

1051
00:52:22,840 --> 00:52:28,990
mitigating tasks have been activated and

1052
00:52:25,420 --> 00:52:30,370
how do we get better at not having those

1053
00:52:28,990 --> 00:52:32,790
problems in the first place that's

1054
00:52:30,370 --> 00:52:35,470
really important

1055
00:52:32,790 --> 00:52:39,460
getting to the root cause is important

1056
00:52:35,470 --> 00:52:45,250
doing some kind of post mortem to really

1057
00:52:39,460 --> 00:52:48,670
understand and what can be done to make

1058
00:52:45,250 --> 00:52:50,620
our product better to improve quality so

1059
00:52:48,670 --> 00:52:53,740
that we don't have those issues in the

1060
00:52:50,620 --> 00:52:57,930
future and each team each feature team

1061
00:52:53,740 --> 00:53:00,640
has their own goals and measures and

1062
00:52:57,930 --> 00:53:06,220
repair times that they can monitor and

1063
00:53:00,640 --> 00:53:07,960
see what's happening and be able to be

1064
00:53:06,220 --> 00:53:11,460
able to respond to change more quickly

1065
00:53:07,960 --> 00:53:13,690
how do we know when the team is being

1066
00:53:11,460 --> 00:53:16,120
good at responding to change

1067
00:53:13,690 --> 00:53:17,680
they should be repairing problems that

1068
00:53:16,120 --> 00:53:20,170
come up quickly they should be having

1069
00:53:17,680 --> 00:53:22,470
less problems over time these are

1070
00:53:20,170 --> 00:53:29,880
indications that we can we can look at

1071
00:53:22,470 --> 00:53:32,980
to go see so kind in conclusion we need

1072
00:53:29,880 --> 00:53:38,830
quality and transparency to build

1073
00:53:32,980 --> 00:53:40,570
customer trust we need to have a full

1074
00:53:38,830 --> 00:53:42,940
transparency so the customers see

1075
00:53:40,570 --> 00:53:44,680
everything that's going on we we we

1076
00:53:42,940 --> 00:53:46,840
taught them about the problems we helped

1077
00:53:44,680 --> 00:53:49,450
figure out how to make them better and

1078
00:53:46,840 --> 00:53:53,380
we we make sure everybody's involved and

1079
00:53:49,450 --> 00:53:56,110
we collect as much telemetry as possible

1080
00:53:53,380 --> 00:53:57,160
so that we can have better insights into

1081
00:53:56,110 --> 00:54:01,180
what's going on

1082
00:53:57,160 --> 00:54:05,290
we need to organize around responding

1083
00:54:01,180 --> 00:54:08,920
more quickly so that's with alerts with

1084
00:54:05,290 --> 00:54:11,230
coal chains with understanding who do we

1085
00:54:08,920 --> 00:54:14,260
have to go deal with who do have to go

1086
00:54:11,230 --> 00:54:17,830
wake up and the LS es an engineering

1087
00:54:14,260 --> 00:54:19,990
team live site a team inside of the

1088
00:54:17,830 --> 00:54:22,210
engineering team is is what allows for

1089
00:54:19,990 --> 00:54:24,640
that for this group and automate

1090
00:54:22,210 --> 00:54:26,260
everything as far as I'm concerned if

1091
00:54:24,640 --> 00:54:27,670
it's not automated its technical debt

1092
00:54:26,260 --> 00:54:30,010
that's something you need to go work on

1093
00:54:27,670 --> 00:54:32,050
you shouldn't have anything that is not

1094
00:54:30,010 --> 00:54:35,830
automated and then you have to get as

1095
00:54:32,050 --> 00:54:40,060
close to the root cause as possible in

1096
00:54:35,830 --> 00:54:43,930
order to continuously improve and try

1097
00:54:40,060 --> 00:54:46,440
and figure out what those things are and

1098
00:54:43,930 --> 00:54:46,440
just to

1099
00:54:46,520 --> 00:54:53,600
and there are some goods well I'll make

1100
00:54:51,650 --> 00:54:57,920
myself smaller there we go

1101
00:54:53,600 --> 00:55:00,859
there are some good articles videos

1102
00:54:57,920 --> 00:55:03,470
there on sre at Microsoft how the

1103
00:55:00,859 --> 00:55:07,910
different teams do it and what they mean

1104
00:55:03,470 --> 00:55:08,840
by that if I how do I make myself

1105
00:55:07,910 --> 00:55:11,980
disappear

1106
00:55:08,840 --> 00:55:11,980
Desktop No

1107
00:55:12,880 --> 00:55:19,510
heywhat I'll move over here there we go

1108
00:55:15,610 --> 00:55:23,170
so you get a picture of that and go to

1109
00:55:19,510 --> 00:55:26,470
that URL and you will be able to

1110
00:55:23,170 --> 00:55:32,050
download this presentation please feel

1111
00:55:26,470 --> 00:55:35,950
free to get in touch with me anytime you

1112
00:55:32,050 --> 00:55:38,650
want to I am on Microsoft teams on that

1113
00:55:35,950 --> 00:55:40,900
URL I'm on twitter and you can whatsapp

1114
00:55:38,650 --> 00:55:43,900
me and find more information on my blog

1115
00:55:40,900 --> 00:55:48,160
I'm happy to share presentations all you

1116
00:55:43,900 --> 00:55:51,160
have to do is ask ok thank you very much

1117
00:55:48,160 --> 00:55:54,760
for listening and I hope you're able to

1118
00:55:51,160 --> 00:55:57,640
come to one of our scrum classes we

1119
00:55:54,760 --> 00:56:00,430
deliver a number of scrum data classes

1120
00:55:57,640 --> 00:56:02,800
and we are delivering all of our courses

1121
00:56:00,430 --> 00:56:06,400
and material as live virtual classrooms

1122
00:56:02,800 --> 00:56:11,170
at the moment and so please go take a

1123
00:56:06,400 --> 00:56:15,720
look at nkd agility calm ok

1124
00:56:11,170 --> 00:56:15,720
thank you very much like and subscribe

1125
00:56:19,140 --> 00:56:25,769
[Music]

