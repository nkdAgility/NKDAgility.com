{
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-17T14:53:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, which is not directly related to the management of the application lifecycle.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-02-17T14:53:26",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams without a focus on metrics, data, or learning mechanisms.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-02-17T14:53:27",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, which is not related to installation or configuration processes.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-03-14T20:35:01",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 50,
    "final_score": 34.0,
    "reasoning": "The content briefly touches on leadership expectations regarding quality and the definition of 'done', but it lacks a comprehensive discussion on leadership practices or strategies. The mention of leadership is not a primary focus, and the overall alignment with the core themes of leadership in Agile is limited.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-17T14:53:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the expectations of quality in Agile teams without addressing complexity science or its principles.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-03-21T18:11:12",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the concept of 'done' in Agile teams, focusing on quality and expectations, but does not explicitly mention Evidence-Based Management or its key topics. While it touches on the importance of clarity and quality assurance, it lacks empirical evidence or metrics that are central to EBM. The discussion is more about Agile practices than data-informed decision-making.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-17T14:53:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-02-17T14:53:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams, which is not central to Systems Thinking principles or applications.",
    "level": "Ignored"
  },
  "Code and Complexity": {
    "category": "Code and Complexity",
    "calculated_at": "2025-02-17T14:53:35",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams, which is not directly related to code quality or complexity.",
    "level": "Ignored"
  },
  "Transparency and Accountability": {
    "category": "Transparency and Accountability",
    "calculated_at": "2025-02-17T14:53:37",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams without a clear focus on transparency or accountability principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-17T14:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without a clear focus on market adaptability strategies or practices.",
    "level": "Ignored"
  },
  "People and Process": {
    "category": "People and Process",
    "calculated_at": "2025-03-06T15:01:25",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content briefly touches on the expectations of leadership regarding the definition of 'done' in Agile teams, indicating a connection to team dynamics and the role of leadership. However, it lacks a detailed exploration of how these expectations influence collaboration or process methodologies, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-17T14:53:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams, focusing on expectations and quality rather than psychological principles or theories related to motivation, engagement, or team dynamics.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-17T14:53:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, which is directly related to Agile principles and practices.",
    "level": "Ignored"
  },
  "News and Reviews": {
    "category": "News and Reviews",
    "calculated_at": "2025-02-17T14:53:45",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without providing news, updates, or reviews related to Agile methodologies or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-02-17T14:53:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the expectations of quality and the definition of 'done' in Agile teams, which does not directly address value delivery strategies or methodologies.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-03-14T20:35:01",
    "ai_confidence": 45.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 35.0,
    "non_ai_confidence": 0,
    "final_score": 40.0,
    "reasoning": "The content briefly touches on the expectations of organisations regarding quality and the definition of 'done' in Agile teams, which hints at the interplay between organisational culture and software delivery. However, it lacks a detailed exploration of sociotechnical interactions and does not explicitly discuss the integration of social and technical aspects, leading to a moderate confidence score.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T14:53:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, which is not directly related to platform engineering.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-17T14:53:51",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content primarily discusses the concept of 'done' in Agile teams without a clear focus on Agile Product Management practices or methodologies.",
    "level": "Ignored"
  },
  "Resilience and Change": {
    "category": "Resilience and Change",
    "calculated_at": "2025-02-17T14:53:52",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams, which is not primarily about organisational resilience or change management.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T14:53:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without a clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-03-14T20:35:01",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content briefly touches on the expectations of quality within teams, which relates to organisational agility, but it lacks explicit discussions on agile methodologies, leadership roles, or strategies for enhancing adaptability. The mention of 'definition of done' hints at agile practices but does not delve into the broader implications of organisational agility.",
    "level": "Ignored"
  },
  "AI and Automation in Agility": {
    "category": "AI and Automation in Agility",
    "calculated_at": "2025-02-17T14:53:57",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without any mention of AI or automation technologies.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-17T14:53:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams without focusing on decision-making processes or uncertainty.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-03-19T17:59:34",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 24,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the concept of 'done' in Agile teams, which relates to collaboration and decision-making within teams. It highlights the importance of clarity, consistency, and quality assurance, aligning with the core themes of social technologies. However, while it touches on collaboration and leadership engagement, it lacks a broader discussion on social frameworks or methodologies, which limits its depth in the category.",
    "level": "Tertiary"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-17T14:54:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Agile concepts without reference to Lean principles.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-02-17T14:54:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams without specific reference to Azure DevOps tools or practices.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-02-17T14:54:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams from a leadership perspective, which does not directly relate to engineering practices or methodologies that enhance technical excellence.",
    "level": "Ignored"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-02-17T14:54:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, which is more focused on Agile practices rather than the broader principles of business agility.",
    "level": "Ignored"
  },
  "Practical Techniques and Tooling": {
    "category": "Practical Techniques and Tooling",
    "calculated_at": "2025-02-17T14:54:07",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on the concept of 'done' in Agile without discussing specific tools, methodologies, or practical techniques for implementation.",
    "level": "Ignored"
  },
  "Events and Presentations": {
    "category": "Events and Presentations",
    "calculated_at": "2025-02-17T14:54:09",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without reference to specific events, presentations, or discussions related to Agile methodologies.",
    "level": "Ignored"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-03-14T20:35:01",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content briefly touches on the concept of 'done' in Agile teams, which relates to product delivery, but lacks explicit discussion on methodologies, practices, or detailed insights into the delivery process. It hints at quality expectations but does not delve into the core themes of product delivery such as planning, testing, or deployment.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-02-17T14:54:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in the context of agile teams without addressing broader organisational implications or enterprise-level agility.",
    "level": "Ignored"
  },
  "Products and Books": {
    "category": "Products and Books",
    "calculated_at": "2025-02-17T14:54:13",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without reference to specific products, books, or tools related to Agile methodologies.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-02-17T14:54:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, which is not directly related to Value Stream Management.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-03-21T18:11:06",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 20,
    "final_score": 31.0,
    "reasoning": "The content discusses the concept of 'done' in Agile, which is relevant to Agile practices but does not explicitly address the Agile Product Operating Model or its core principles. While it touches on quality assurance and team collaboration, it lacks a direct focus on product management, operational stability, or the transition from project to product ethos, which are key aspects of the APOM. Therefore, the confidence score reflects a low alignment with the category.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-03-21T18:10:49",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content primarily focuses on the concept of 'done' within Agile teams, which is more aligned with Agile methodologies than DevOps principles. While it touches on quality assurance and collaboration, it lacks explicit discussions on DevOps practices such as automation, shared accountability, or continuous improvement. The depth of discussion is limited to Agile-specific strategies, which do not fully encompass the broader DevOps philosophy.",
    "level": "Ignored"
  },
  "Discovery and Learning": {
    "category": "Discovery and Learning",
    "calculated_at": "2025-02-17T14:54:29",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the expectations of quality and the definition of 'done' in Agile teams, without a focus on discovery or learning processes.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-02-17T14:54:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams, which is not directly related to optimising work throughput or flow efficiency.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-17T14:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, which is more relevant to Agile methodologies in general rather than specifically focusing on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-17T15:26:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without a clear focus on product management strategies or methodologies.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-02-17T15:26:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, which is more related to project management and team expectations rather than engineering practices or software craftsmanship.",
    "level": "Ignored"
  },
  "Scaling Kanban": {
    "category": "Scaling Kanban",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the definition of 'done' in Agile teams and does not address Kanban principles or scaling it in large organizations.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the Agile concept of 'done' and does not pertain to system configuration or related practices.",
    "level": "Ignored"
  },
  "Scaled Agile": {
    "category": "Scaled Agile",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on the definition of done in Agile teams without addressing scaling Agile or enterprise-level coordination.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the definition of done in the context of team roles, which leans towards specific Agile practices rather than the broader Agile philosophy.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' within Agile teams and does not focus on change management strategies or practices.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is primarily focused on the concept of 'done' in Agile teams and does not discuss test automation principles, practices, or tools.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in agile teams, which is not directly related to Lead Time or its measurement and implications.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done from a leadership perspective and does not primarily address team motivation or dynamics.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content briefly touches on the concept of 'done' but does not primarily focus on Scrum principles, roles, or practices. It discusses a general perspective on quality expectations in teams rather than delving into Scrum specifics.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of done in Agile teams, which is not related to Azure Pipelines.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the Definition of Done, which is not relevant to the Definition of Ready.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Scrum roles and the concept of 'done' in Agile teams, which is unrelated to Azure Repos and source control.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, focusing on organizational expectations rather than technical practices or software craftsmanship.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams, which is not directly related to customer retention strategies.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams without focusing on frequent releases or related practices like Continuous Delivery or DevOps.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without a clear focus on Lean principles or practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams, which is not directly related to troubleshooting technical issues.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-03-11T17:30:45",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 75.0,
    "reasoning": "The content discusses the concept of 'done' in Agile, which is directly related to the delivery of working software. It highlights the importance of quality, clarity, and consistency in meeting customer expectations, aligning well with the core themes of the category. The depth of discussion is substantial, providing strategies for improving understanding and implementation of the definition of done, which is crucial for delivering functional software. However, while it focuses on quality and expectations, it does not delve deeply into metrics or specific case studies, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile without any focus on release processes or practices specifically related to Release Management.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'Done' in Agile teams, which is more about project execution and Agile practices rather than organisational change strategies or methodologies.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the expectations around a standard of quality in Agile teams rather than Continuous Learning principles or practices.",
    "level": "Ignored"
  },
  "Scaling Scrum": {
    "category": "Scaling Scrum",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the concept of 'done' in Agile teams, which does not focus on scaling Scrum practices or frameworks. It does not represent a clear alignment with the topic of scaling Scrum.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams without reference to evidence-based leadership or empirical data informing decision-making.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the concept of 'Done' in Agile teams rather than on the strategic use of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the concept of 'done' in Agile teams but does not focus on remote working practices, tools, or challenges.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content briefly mentions the concept of 'done' but does not engage in discussions on empirical process control or relevant Agile practices. It focuses on leadership expectations rather than any principles of empirical process control.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams without addressing customer satisfaction or related methodologies.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams, which is not relevant to the category of experimentation.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 20,
    "final_score": 2.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams without directly addressing leadership roles, practices, or the environment fostered by Agile leadership.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile without focusing on customer feedback integration or related practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile Teams, which is unrelated to estimation practices.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams without focusing on the specific responsibilities or roles of a Product Owner.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, which is not related to trend analysis or shifts in Agile methodologies.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of done and quality expectations in Agile teams, which is not central to backlog refinement.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams and does not focus on Lean principles or product development practices.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses the expectation of quality without addressing self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses team-level Agile practices, particularly the definition of done, without addressing scaling Agile across an organisation.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of done in Agile teams, focusing on quality expectations rather than product strategy or roadmap development.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content does not clearly address Scrum Team roles, dynamics, or collaboration; it focuses more on the expectation of quality and the concept of 'done' within Agile in a general sense.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the concept of 'done' in Agile teams, which is not directly related to the Daily Scrum event.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-03-13T15:31:18",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the concept of 'done' within Agile teams, which is a key aspect of Agile practices. It highlights the importance of clarity, quality assurance, and collaboration in defining 'done', aligning with Agile principles. However, while it touches on Agile transformation themes, it lacks a broader discussion on methodologies, frameworks, or change management strategies, which limits its depth and overall alignment with the category.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the expectation of quality and the concept of 'done' in Agile teams, but does not focus on practical applications, techniques, or strategies for improving operational efficiency.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams, which is not related to deployment strategies.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams and does not focus on working agreements or teamwork norms.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content focuses on the definition of done and quality expectations in Agile teams, rather than on Agile strategy or its implementation at an organizational level.",
    "level": "Ignored"
  },
  "Software Developers": {
    "category": "Software Developers",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "The content primarily discusses the expectations around the definition of 'done' in Agile teams but does not focus on software developers' roles or practices within Agile and DevOps frameworks.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams without focusing on engineering practices such as clean code or TDD.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams rather than long-term strategic objectives or business agility.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams and leadership expectations, without a clear focus on the Scrum Values.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content does not focus on cross-functional teams but rather discusses the concept of 'Done' in Agile teams without addressing cross-functional collaboration or team structures.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, focusing on expectations and quality, without addressing collaboration tools.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the expectations of quality within Agile teams, which is more aligned with project management and team dynamics than entrepreneurship.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the definition of done in Agile teams without discussion of asynchronous development principles, tools, or practices.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-03-11T14:28:42",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of the 'definition of done' in agile teams, which relates to leadership expectations and quality assurance. It mentions engaging leadership and collaborative definitions, aligning with technical leadership principles. However, it lacks depth in exploring broader technical leadership strategies and agile methodologies, focusing more on the concept of quality rather than the leadership role itself.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' and expectations rather than focusing on transparency, communication, or visibility in Agile processes.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content heavily discusses Scrum roles and events without addressing innovation capabilities or Evidence-Based Management.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams but does not focus on accountability or ownership principles related to team dynamics.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "The content focuses on the expectation of quality and the concept of 'done', which is a specific aspect of Agile but does not discuss Agile frameworks as a primary topic.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-03-14T20:35:01",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content briefly touches on the concept of 'done' in Agile teams, which relates to team performance and quality expectations. However, it lacks explicit discussions on strategies, practices, or methodologies aimed at maximising team effectiveness. The mention of leadership expectations hints at a connection to team dynamics but does not provide sufficient depth or detail on how these factors influence overall team performance.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the definition of done in Agile teams, which is not a primary discussion about throughput or its measurement.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses Agile concepts and does not relate to the Windows operating system.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile without focusing on acceptance criteria or ATDD principles.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in the context of Agile teams, focusing on expectations and quality rather than employee motivation or engagement strategies.",
    "level": "Ignored"
  },
  "Agile Project Management": {
    "category": "Agile Project Management",
    "calculated_at": "2025-03-14T20:35:01",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 30.0,
    "reasoning": "The content briefly touches on the concept of 'done' in Agile teams, which relates to quality expectations in project management. However, it lacks explicit discussions on Agile principles, frameworks, or roles, and does not provide sufficient depth or detail on Agile methodologies, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile contexts without referencing hypothesis formulation, experimentation, or data-driven decision-making.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, which does not directly relate to Agile Planning Tools.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-03-21T18:11:09",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 12,
    "ai_depth": 10,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the concept of 'done' in Agile, which is related to quality assurance and expectations in software delivery. However, it does not explicitly address Continuous Delivery principles or practices. While it touches on quality and clarity, it lacks a focus on automation, rapid feedback, or specific Continuous Delivery strategies, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, which is not directly related to the methodologies and practices of product discovery.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "category": "Definition of Done",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 30,
    "final_score": 3.0,
    "reasoning": "Content primarily discusses the expectations of quality and leadership perspectives rather than elaborating on the Definition of Done itself or its specific criteria and importance in Agile teams.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-03-13T16:39:11",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 71.0,
    "reasoning": "The content discusses the concept of 'done' in Agile teams, highlighting the role of leadership in shaping quality expectations, which aligns with the category's focus on organisational culture. It addresses how cultural elements influence team dynamics and the importance of collaboration in defining quality standards. The depth of discussion is significant, providing strategies for engaging leadership and fostering a culture of quality, but it does not delve deeply into broader cultural transformations or case studies, which slightly limits its alignment.",
    "level": "Secondary"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the concept of 'done' in Agile teams without discussing Azure Boards or its functionalities.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the understanding of 'Done' in Agile teams, which is related to Agile practices rather than structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-03-13T15:08:37",
    "ai_confidence": 87.0,
    "ai_mentions": 15.0,
    "ai_alignment": 40.0,
    "ai_depth": 32.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses the concept of 'done' within Agile methodologies, which is a key aspect of software development practices. It addresses quality assurance, clarity in task completion, and the importance of collaboration in defining project standards, all of which align closely with the core themes of software development. The depth of discussion is substantial, providing strategies for improving understanding and implementation of the definition of done, which is crucial for maintaining quality in software projects.",
    "level": "Secondary"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, which is not related to revenue per employee or financial metrics.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "category": "Product Backlog",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of done in Agile teams, which is not directly related to the Product Backlog or its management.",
    "level": "Ignored"
  },
  "Scrum Product Development": {
    "category": "Scrum Product Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the concept of 'done' in Agile teams, but does not specifically engage with Scrum principles, roles, or product development processes.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content is focused on the concept of 'done' in Agile teams, which does not directly discuss Lean principles or waste reduction.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams without addressing psychological safety as a central theme.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily focuses on the expectations of quality and the definition of 'done' in Agile teams, rather than exploring sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 1.0,
    "reasoning": "Content briefly touches on the concept of 'done' but does not discuss Agile Planning methodologies, practices, or principles in a central manner.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on Agile concepts and definitions of done, which are not relevant to Site Reliability Engineering.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the Agile concept of 'done' rather than Continuous Integration principles or practices.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams without reference to Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams, which is unrelated to modern source control practices.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, which is not directly related to product validation methodologies or practices.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-03-11T16:18:10",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 67.0,
    "reasoning": "The content discusses the concept of 'done' in Agile, which relates to quality expectations and team alignment, reflecting Agile principles of collaboration and customer-centricity. However, it primarily focuses on practical implications rather than explicitly addressing Agile values or principles in depth. The discussion is relevant but lacks a comprehensive exploration of Agile's core values and principles.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the concept of 'done' within Agile teams, which is more relevant to team-level Agile practices than to Portfolio Management frameworks or strategies.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams which is more focused on project management rather than systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content discusses the definition of 'done' in Agile teams but does not address deployment frequency or its optimization.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily explores the concept of 'done' in Agile teams without addressing strategic approaches or alignment with Agile, Scrum, or DevOps frameworks.",
    "level": "Ignored"
  },
  "AI": {
    "category": "AI",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams without mention of AI or its integration in Agile methodologies.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile teams, rather than focusing on forecasting methods or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams without focusing on mentoring, coaching, or professional development.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "category": "Sprint Review",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the concept of 'done' in Agile teams, which is not specific to Sprint Reviews and does not focus on the review process or its related topics.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the concept of 'done' in Agile teams, which is not directly related to Test First Development or TDD principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content mainly focuses on the concept of 'done' in Agile teams and discusses aspects of quality expectations, rather than addressing automated testing or its principles, practices, or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the Agile concept of 'done' but does not relate to technical debt or its management.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-03-10T18:02:08",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 45.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 56.0,
    "reasoning": "The content briefly touches on the concept of 'done' in Agile teams, which relates to practical problem-solving in Agile contexts. However, it lacks explicit discussions on strategies or techniques for navigating complexity and uncertainty, which are central to pragmatic thinking. The mention of quality expectations indicates some alignment with real-world applications, but the depth of discussion is limited, focusing more on assumptions rather than actionable insights.",
    "level": "Tertiary"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the concept of 'done' in Agile Teams, which is unrelated to market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the expectation of quality and the definition of done in Agile teams without focusing on coaching practices or facilitating growth and development.",
    "level": "Ignored"
  },
  "Scaling Agility": {
    "category": "Scaling Agility",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in agile teams, which is a team-level practice, rather than focusing on scaling agility across the organization.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content does not focus on Scrum Master roles or responsibilities; it speaks generally about expectations and quality in Agile teams without specific reference to the Scrum Master.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams, which does not relate directly to Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on the definition of done in Agile teams, which does not relate to Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Increment": {
    "category": "Increment",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' and quality expectations, not focusing on the Increment concept in Agile.",
    "level": "Ignored"
  },
  "MVP": {
    "category": "MVP",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done and quality expectations in Agile teams, without addressing MVP concepts.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams and does not focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of 'done' in Agile teams rather than focusing on team collaboration dynamics or practices.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-17T15:26:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the definition of done in Agile teams without clear reference to Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:45:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of done in Agile teams, which is unrelated to Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:45:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses the definition of 'done' in Agile teams without any mention of AI or its application in Agile methodologies.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-03-14T20:35:01",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content briefly touches on the concept of 'done', which is relevant to Scrum but does not explicitly mention Scrum roles, events, or artifacts. The discussion lacks depth and does not provide a comprehensive exploration of Scrum principles, making it a secondary mention rather than a primary focus.",
    "level": "Ignored"
  },
  "Shift-Left Strategy": {
    "category": "Shift-Left Strategy",
    "calculated_at": "2025-03-17T15:50:46",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the concept of 'done' in Agile teams, focusing on quality assurance and clarity, which are relevant to the Shift-Left Strategy. However, it does not explicitly mention the Shift-Left approach or integrate testing, security, or compliance early in the development process. The discussion is more about expectations and quality rather than proactive integration of processes, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-03-21T18:10:51",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 60.0,
    "reasoning": "The content discusses the importance of a clear definition of 'done' in Agile teams, which indirectly relates to Continuous Improvement by emphasising quality assurance and reducing rework. However, it lacks explicit references to Continuous Improvement principles and does not delve deeply into strategies or frameworks that support ongoing enhancement. The focus is more on clarifying expectations rather than on a broader culture of continuous improvement.",
    "level": "Tertiary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-03-21T18:10:57",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 38.0,
    "reasoning": "The content discusses the concept of 'done' in Agile, which indirectly relates to common goals by emphasising clarity and quality expectations. However, it primarily focuses on the definition of done rather than explicitly addressing shared objectives or strategic alignment within teams. While there are mentions of leadership involvement and team collaboration, these are not deeply tied to the overarching theme of common goals in Agile and DevOps.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-03-21T18:10:59",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 70.0,
    "reasoning": "The content discusses the importance of a clear definition of 'done' in Agile, which directly relates to competence by emphasising quality assurance and the necessity for continuous improvement. It highlights the role of leadership and collaboration in establishing quality standards, aligning well with the core themes of competence. The depth of discussion is substantial, providing strategies for fostering a culture of quality, which is a key aspect of competence. However, while competence is a primary focus, the content could delve deeper into continuous learning and skill development to fully align with the category.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-03-21T18:11:03",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 29.0,
    "reasoning": "The content discusses the concept of 'done' in Agile teams, focusing on quality and expectations, which are relevant to software development practices. However, it does not explicitly mention the One Engineering System or its principles, nor does it address integration across teams or best practices for implementing 1ES. The discussion is primarily centred on Agile methodologies rather than the unified framework of 1ES.",
    "level": "Ignored"
  }
}
