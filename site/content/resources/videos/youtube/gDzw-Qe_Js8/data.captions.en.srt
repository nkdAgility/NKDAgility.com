1
00:00:00,160 --> 00:00:06,960
Engineering excellence isn't about

2
00:00:02,720 --> 00:00:09,360
perfection, right? A a lot of

3
00:00:06,960 --> 00:00:11,599
teams and organizations especially

4
00:00:09,360 --> 00:00:16,400
especially um organizations with more

5
00:00:11,599 --> 00:00:18,880
than more than one team try

6
00:00:16,400 --> 00:00:20,160
they they have this ethos. Oh, we're

7
00:00:18,880 --> 00:00:23,359
going to move to a new way of doing

8
00:00:20,160 --> 00:00:26,000
things and I want to understand all of

9
00:00:23,359 --> 00:00:28,400
the facets of that before we move. I

10
00:00:26,000 --> 00:00:29,760
want to understand all of the choices

11
00:00:28,400 --> 00:00:31,519
we're going to make. I want to

12
00:00:29,760 --> 00:00:34,480
understand why we're making all those

13
00:00:31,519 --> 00:00:38,879
choices. I want to understand I want to

14
00:00:34,480 --> 00:00:42,160
make a a a big plan of of what we're

15
00:00:38,879 --> 00:00:46,559
going to do. And and that's

16
00:00:42,160 --> 00:00:48,800
not reality. That's not how

17
00:00:46,559 --> 00:00:51,280
when you actually start implementing

18
00:00:48,800 --> 00:00:52,640
things. And this is true for for for

19
00:00:51,280 --> 00:00:54,079
implementing things with people,

20
00:00:52,640 --> 00:00:57,920
implementing things in systems,

21
00:00:54,079 --> 00:01:00,719
implementing things in software.

22
00:00:57,920 --> 00:01:02,239
The needs that you discover are

23
00:01:00,719 --> 00:01:05,119
different than the needs that you

24
00:01:02,239 --> 00:01:08,159
thought of right at the beginning. So

25
00:01:05,119 --> 00:01:10,479
there's not a huge amount of value in

26
00:01:08,159 --> 00:01:13,439
planning out all the things at the start

27
00:01:10,479 --> 00:01:15,200
only to have that planet destroyed. So

28
00:01:13,439 --> 00:01:17,439
we still need planning. Absolutely. I'm

29
00:01:15,200 --> 00:01:19,439
not saying shoot from the hip and make

30
00:01:17,439 --> 00:01:23,439
stuff up. That's definitely not what I'm

31
00:01:19,439 --> 00:01:26,799
saying. Um, the plan itself, that every

32
00:01:23,439 --> 00:01:31,119
little detail is the the the the the

33
00:01:26,799 --> 00:01:33,119
irrelevant part. I think there was a was

34
00:01:31,119 --> 00:01:36,400
I think it was a US president from years

35
00:01:33,119 --> 00:01:38,640
ago. Um, might have been a general or a

36
00:01:36,400 --> 00:01:44,079
US president, might have been Eisenhower

37
00:01:38,640 --> 00:01:45,360
said, um, plans are irrelevant. Planning

38
00:01:44,079 --> 00:01:48,560
is everything. I think it was a World

39
00:01:45,360 --> 00:01:52,320
War II thing, right? It's it's about the

40
00:01:48,560 --> 00:01:54,320
planning, the discussions, the what do

41
00:01:52,320 --> 00:01:56,159
we think's going to happen? What do we

42
00:01:54,320 --> 00:01:57,840
want to try and do? What what are our

43
00:01:56,159 --> 00:02:00,560
options when these different things

44
00:01:57,840 --> 00:02:03,360
happen? Um and discussing them and

45
00:02:00,560 --> 00:02:06,399
disseminating that information,

46
00:02:03,360 --> 00:02:08,800
but the plan itself um the plan itself

47
00:02:06,399 --> 00:02:11,920
is is is irrelevant. I think isn't there

48
00:02:08,800 --> 00:02:14,480
a Sunzu? Maybe

49
00:02:11,920 --> 00:02:16,640
no plan survives contact with the enemy,

50
00:02:14,480 --> 00:02:18,560
right? As soon as you start doing

51
00:02:16,640 --> 00:02:20,720
something in your organization, as soon

52
00:02:18,560 --> 00:02:24,160
as you start following the plan, it's

53
00:02:20,720 --> 00:02:26,400
irrelevant, right? The first step, the

54
00:02:24,160 --> 00:02:28,800
feedback from that first step in your

55
00:02:26,400 --> 00:02:32,319
plan and probably destroys the entire

56
00:02:28,800 --> 00:02:34,959
plan. So if if if your goal is to move

57
00:02:32,319 --> 00:02:38,480
towards engineering excellence, it's

58
00:02:34,959 --> 00:02:40,160
it's not about perfection. It's about

59
00:02:38,480 --> 00:02:43,599
instilling

60
00:02:40,160 --> 00:02:47,200
those ideas,

61
00:02:43,599 --> 00:02:49,680
modern software engineering ideas of

62
00:02:47,200 --> 00:02:51,040
continuous, right? Usually you stick

63
00:02:49,680 --> 00:02:53,920
continuous in front of everything.

64
00:02:51,040 --> 00:02:56,480
Continuous delivery, continuous quality,

65
00:02:53,920 --> 00:02:59,920
um continuous adaptation, continuous

66
00:02:56,480 --> 00:03:02,959
learning. It it's that that continuous

67
00:02:59,920 --> 00:03:05,040
or emergent nature that the things

68
00:03:02,959 --> 00:03:07,200
you're going to need, the knowledge

69
00:03:05,040 --> 00:03:09,040
you're going to have to learn, the

70
00:03:07,200 --> 00:03:13,040
things you're going to find out are

71
00:03:09,040 --> 00:03:17,200
going to emerge over time. So we need to

72
00:03:13,040 --> 00:03:20,400
create a system within which that

73
00:03:17,200 --> 00:03:24,319
emergent knowledge

74
00:03:20,400 --> 00:03:26,720
adapts the system as it goes to what is

75
00:03:24,319 --> 00:03:30,319
happening. So that so that we end up

76
00:03:26,720 --> 00:03:34,239
getting um um delivering working

77
00:03:30,319 --> 00:03:39,519
products. Um getting high quality output

78
00:03:34,239 --> 00:03:43,040
and although the goal is not agility um

79
00:03:39,519 --> 00:03:45,519
being fast and nimble and delivering for

80
00:03:43,040 --> 00:03:48,239
your customers is right and that that

81
00:03:45,519 --> 00:03:52,560
that can be a definition of of of

82
00:03:48,239 --> 00:03:55,360
agility for sure. So there are loads of

83
00:03:52,560 --> 00:04:00,080
tools and capabilities

84
00:03:55,360 --> 00:04:03,040
practices that are known

85
00:04:00,080 --> 00:04:05,760
to to enable this. And every time I I

86
00:04:03,040 --> 00:04:07,439
work with a lot of customers and we talk

87
00:04:05,760 --> 00:04:11,360
about some of these practices. I was

88
00:04:07,439 --> 00:04:13,200
talking um yesterday about trunkbased

89
00:04:11,360 --> 00:04:16,720
development

90
00:04:13,200 --> 00:04:19,359
and the customer came back with five or

91
00:04:16,720 --> 00:04:22,479
six reasons why trunkbased development

92
00:04:19,359 --> 00:04:24,720
wouldn't work for them, right? Or or we

93
00:04:22,479 --> 00:04:27,199
couldn't do it that fast, but you know,

94
00:04:24,720 --> 00:04:31,440
it could be this long.

95
00:04:27,199 --> 00:04:33,919
And my immediate response was, well, why

96
00:04:31,440 --> 00:04:36,479
are those things blocking your ability

97
00:04:33,919 --> 00:04:39,440
to do that modern engineering practice?

98
00:04:36,479 --> 00:04:41,600
Where did those things come from

99
00:04:39,440 --> 00:04:43,680
and how do you fix them? Right? That's

100
00:04:41,600 --> 00:04:46,160
that's and some of it could be a

101
00:04:43,680 --> 00:04:50,880
long-term fix. We've caused some legacy

102
00:04:46,160 --> 00:04:54,880
products and it's going to take time to

103
00:04:50,880 --> 00:04:57,759
to get to that to get to that point.

104
00:04:54,880 --> 00:04:59,520
Right? If you're currently manually

105
00:04:57,759 --> 00:05:01,759
building out your your infrastructure

106
00:04:59,520 --> 00:05:05,680
for your products, if you're currently

107
00:05:01,759 --> 00:05:08,479
um doing manual portions in your build

108
00:05:05,680 --> 00:05:12,080
process, right? It's not a automated

109
00:05:08,479 --> 00:05:14,479
CI/CD process. It's it's there's

110
00:05:12,080 --> 00:05:16,479
stuff somebody has to go do in between

111
00:05:14,479 --> 00:05:18,479
in different spots in order to make it

112
00:05:16,479 --> 00:05:20,000
make it work. Then it can be really

113
00:05:18,479 --> 00:05:22,960
daunting

114
00:05:20,000 --> 00:05:24,400
to have this idea of well, we're we're

115
00:05:22,960 --> 00:05:27,120
going to do trunkbased development.

116
00:05:24,400 --> 00:05:29,440
We're going to have a a a topic branch

117
00:05:27,120 --> 00:05:30,880
spin-off. It's only going to exist for a

118
00:05:29,440 --> 00:05:32,320
few hours. It's going to have a full

119
00:05:30,880 --> 00:05:34,240
environment. We're going to run all our

120
00:05:32,320 --> 00:05:36,400
tests and then it's going to going to

121
00:05:34,240 --> 00:05:38,800
come into main in a few hours. How is

122
00:05:36,400 --> 00:05:40,880
that even possible, right? Because of

123
00:05:38,800 --> 00:05:43,120
the frictions that are that are holding

124
00:05:40,880 --> 00:05:44,720
us back. If if but if we want fast

125
00:05:43,120 --> 00:05:48,080
feedback,

126
00:05:44,720 --> 00:05:49,840
right, then we we have to get to our

127
00:05:48,080 --> 00:05:52,639
customers as quickly as possible with

128
00:05:49,840 --> 00:05:53,759
high quality, right? not delivering them

129
00:05:52,639 --> 00:05:55,600
crap because then they'll just the

130
00:05:53,759 --> 00:05:57,360
feedback will be it's crap, right? We

131
00:05:55,600 --> 00:06:00,320
want to deliver high quality usable

132
00:05:57,360 --> 00:06:01,840
working product on a continuous as

133
00:06:00,320 --> 00:06:06,080
quickly as possible, as often as

134
00:06:01,840 --> 00:06:07,120
possible basis. And for that, we're

135
00:06:06,080 --> 00:06:10,240
going to we're going to we're going to

136
00:06:07,120 --> 00:06:12,800
need to have clean code,

137
00:06:10,240 --> 00:06:14,560
right? You can't you can't do this with

138
00:06:12,800 --> 00:06:16,800
poor quality code. And you might be

139
00:06:14,560 --> 00:06:19,840
starting with poor quality code. So

140
00:06:16,800 --> 00:06:22,479
there's something to go work on. you you

141
00:06:19,840 --> 00:06:25,680
need observability in the way you do

142
00:06:22,479 --> 00:06:28,639
things and you you you may not have

143
00:06:25,680 --> 00:06:30,400
observability today. You may not have

144
00:06:28,639 --> 00:06:32,720
telemetry coming through your product.

145
00:06:30,400 --> 00:06:35,840
You may not have those things built in

146
00:06:32,720 --> 00:06:39,880
that allow you to see what's going on.

147
00:06:35,840 --> 00:06:39,880
um you know the the the the

148
00:06:40,639 --> 00:06:45,919
knowledge that you gain on how users are

149
00:06:44,160 --> 00:06:48,160
using your system but also what's

150
00:06:45,919 --> 00:06:51,840
happening in your system while users are

151
00:06:48,160 --> 00:06:55,680
using it. It can be invaluable, right?

152
00:06:51,840 --> 00:06:58,639
Um you you've effectively got

153
00:06:55,680 --> 00:07:00,479
brittle

154
00:06:58,639 --> 00:07:03,120
I'm going to say poorly architected, but

155
00:07:00,479 --> 00:07:06,639
I don't mean that as as as a direct

156
00:07:03,120 --> 00:07:09,840
criticism. maybe atrophied

157
00:07:06,639 --> 00:07:11,840
code. It It's not usually a deliberate

158
00:07:09,840 --> 00:07:14,000
effort. We want to build bad code and we

159
00:07:11,840 --> 00:07:15,360
want to build bad products and we're bad

160
00:07:14,000 --> 00:07:17,120
people because we built bad products.

161
00:07:15,360 --> 00:07:19,520
It's it's that's not what we're talking

162
00:07:17,120 --> 00:07:21,840
about. It's something that happens

163
00:07:19,520 --> 00:07:25,440
slowly over time. It's like it's a

164
00:07:21,840 --> 00:07:27,759
drift. It's like it's like when you um

165
00:07:25,440 --> 00:07:29,520
oh when your tires on your car are not

166
00:07:27,759 --> 00:07:32,000
aligned properly, when the tracking is

167
00:07:29,520 --> 00:07:33,599
not aligned properly, right? It's maybe

168
00:07:32,000 --> 00:07:35,919
it's just a little bit out. Maybe it's

169
00:07:33,599 --> 00:07:37,280
just a a degree. That could be quite a

170
00:07:35,919 --> 00:07:40,400
lot actually. Maybe it's just a fraction

171
00:07:37,280 --> 00:07:42,720
of a degree out. And that means the wear

172
00:07:40,400 --> 00:07:45,599
on your tires

173
00:07:42,720 --> 00:07:47,120
is unnatural, right? And you maybe have

174
00:07:45,599 --> 00:07:48,720
to replace your tires more often. So,

175
00:07:47,120 --> 00:07:50,400
it's costing you more money. And you're

176
00:07:48,720 --> 00:07:53,919
trying to figure out why is this costing

177
00:07:50,400 --> 00:07:56,479
me more money? Well, and it's Â£100 a

178
00:07:53,919 --> 00:07:57,919
tire and you're doing that every every

179
00:07:56,479 --> 00:07:58,960
let's say every year you're having to

180
00:07:57,919 --> 00:08:00,639
replace these tires. You're like, what

181
00:07:58,960 --> 00:08:02,560
what's going on?

182
00:08:00,639 --> 00:08:05,360
But if you paid Â£40 to get the tracking

183
00:08:02,560 --> 00:08:06,879
aligned, then we don't have that

184
00:08:05,360 --> 00:08:09,759
problem. Maybe our tires last a lot

185
00:08:06,879 --> 00:08:11,360
longer. Maybe they last 50,000 mi and

186
00:08:09,759 --> 00:08:13,520
someone that's actually a lot for tires.

187
00:08:11,360 --> 00:08:16,879
Maybe they last 20,000 mi instead of

188
00:08:13,520 --> 00:08:18,319
5,000 mi, right? So So that's that's the

189
00:08:16,879 --> 00:08:21,440
type of thing we're talking about. How

190
00:08:18,319 --> 00:08:24,560
how do we fix the tracking on our on our

191
00:08:21,440 --> 00:08:27,120
software, right? Well, we we we need

192
00:08:24,560 --> 00:08:30,080
clean code. We need observability. We

193
00:08:27,120 --> 00:08:32,800
need CI/CD

194
00:08:30,080 --> 00:08:35,680
right ideas. We need to to automatically

195
00:08:32,800 --> 00:08:38,240
build our product. We need automated

196
00:08:35,680 --> 00:08:40,800
testing. Um we need to test as much as

197
00:08:38,240 --> 00:08:42,959
possible. This is that whole idea that

198
00:08:40,800 --> 00:08:45,279
fixing the tracking is the idea of of

199
00:08:42,959 --> 00:08:47,360
also shifting left. Um you might have

200
00:08:45,279 --> 00:08:51,600
heard that terminology, but shift left

201
00:08:47,360 --> 00:08:54,240
is about moving things as close to the

202
00:08:51,600 --> 00:08:57,600
developers writing the code to figuring

203
00:08:54,240 --> 00:08:59,519
out that it doesn't work. I I always use

204
00:08:57,600 --> 00:09:01,200
the example of the Azure DevOps team

205
00:08:59,519 --> 00:09:04,800
because they started with a massive

206
00:09:01,200 --> 00:09:07,680
legacy product. Um,

207
00:09:04,800 --> 00:09:09,440
very low I'm going to say low code

208
00:09:07,680 --> 00:09:12,320
quality. I think they probably agree

209
00:09:09,440 --> 00:09:15,440
with that. Not great code quality. Um,

210
00:09:12,320 --> 00:09:17,200
and and very poor testing capability.

211
00:09:15,440 --> 00:09:20,000
Most of the testing was longunning

212
00:09:17,200 --> 00:09:21,839
system tests like things like Selenium

213
00:09:20,000 --> 00:09:25,040
tests today, but they had their own

214
00:09:21,839 --> 00:09:26,720
system. And that's just not not good

215
00:09:25,040 --> 00:09:29,760
enough anymore cuz they take too long to

216
00:09:26,720 --> 00:09:31,440
run. It takes too long to find out for

217
00:09:29,760 --> 00:09:33,440
the developer to find out that they've

218
00:09:31,440 --> 00:09:35,680
broken something. And if it takes too

219
00:09:33,440 --> 00:09:37,279
long, they've lost the context. And if

220
00:09:35,680 --> 00:09:39,040
they've lost the context, they have to

221
00:09:37,279 --> 00:09:42,240
relearn that context. And that's a

222
00:09:39,040 --> 00:09:44,640
massive cognitive effort that could have

223
00:09:42,240 --> 00:09:47,360
been used to work on other things,

224
00:09:44,640 --> 00:09:50,560
right? So we want fast tests and they

225
00:09:47,360 --> 00:09:53,600
were I think they were either 48 or 72

226
00:09:50,560 --> 00:09:56,000
hours to run their full test suite

227
00:09:53,600 --> 00:09:59,440
against the the the the stuff they were

228
00:09:56,000 --> 00:10:01,120
building as your DevOps. Um not in Azure

229
00:09:59,440 --> 00:10:04,560
DevOps actually as your DevOps being

230
00:10:01,120 --> 00:10:07,519
building building that product and they

231
00:10:04,560 --> 00:10:09,519
spent a bunch of effort. It took four

232
00:10:07,519 --> 00:10:11,440
years because they're doing a little bit

233
00:10:09,519 --> 00:10:13,279
at a time, right? They're paying back a

234
00:10:11,440 --> 00:10:16,480
little bit of that friction every

235
00:10:13,279 --> 00:10:19,279
sprint. And over four years, which I

236
00:10:16,480 --> 00:10:20,480
think is 80 sprints. They did three week

237
00:10:19,279 --> 00:10:24,000
sprints, so you can probably figure it

238
00:10:20,480 --> 00:10:25,680
out. Um, but over those 80 sprints, they

239
00:10:24,000 --> 00:10:28,640
they paid back a little bit of time and

240
00:10:25,680 --> 00:10:30,959
they went from 48 to 72 hours to find

241
00:10:28,640 --> 00:10:34,079
out whether they'd broken anything to

242
00:10:30,959 --> 00:10:36,160
three and a half minutes.

243
00:10:34,079 --> 00:10:38,959
So a developer

244
00:10:36,160 --> 00:10:42,399
can run the entire

245
00:10:38,959 --> 00:10:44,240
test suite for for the product in three

246
00:10:42,399 --> 00:10:46,880
and a half minutes on their local

247
00:10:44,240 --> 00:10:48,720
workstation. And that includes having a

248
00:10:46,880 --> 00:10:50,560
full environment running to be able to

249
00:10:48,720 --> 00:10:52,399
run those those types of not just the

250
00:10:50,560 --> 00:10:55,040
the fast unit tests, but that includes

251
00:10:52,399 --> 00:10:56,640
some some integration tests as well. And

252
00:10:55,040 --> 00:10:59,680
that

253
00:10:56,640 --> 00:11:05,120
is what makes things better. That's what

254
00:10:59,680 --> 00:11:06,800
makes things faster. the the quicker

255
00:11:05,120 --> 00:11:08,160
shortening the feedback loops. This is

256
00:11:06,800 --> 00:11:12,000
this is what it's all this is the

257
00:11:08,160 --> 00:11:13,360
fundamental premise of DevOps of agile

258
00:11:12,000 --> 00:11:15,040
is shortening the shortening the

259
00:11:13,360 --> 00:11:16,480
feedback loops. DevOps is about

260
00:11:15,040 --> 00:11:18,640
shortening the feedback loops in

261
00:11:16,480 --> 00:11:21,920
engineering. Agile is about shortening

262
00:11:18,640 --> 00:11:25,920
the feedback loops in business. Right?

263
00:11:21,920 --> 00:11:29,040
Um, so if you want your teams to build

264
00:11:25,920 --> 00:11:31,200
better and deliver faster,

265
00:11:29,040 --> 00:11:34,200
you need to start with engineering

266
00:11:31,200 --> 00:11:34,200
excellence.


