1
00:00:00,080 --> 00:00:06,040
if we want to

2
00:00:02,639 --> 00:00:09,960
improve the quality of our product and

3
00:00:06,040 --> 00:00:13,639
reduce risk part of our automation story

4
00:00:09,960 --> 00:00:14,679
is going to be cicd pipelines it's it's

5
00:00:13,639 --> 00:00:17,400
worth

6
00:00:14,679 --> 00:00:19,680
noting that

7
00:00:17,400 --> 00:00:24,199
most most

8
00:00:19,680 --> 00:00:27,080
teams don't use cicd for

9
00:00:24,199 --> 00:00:30,640
cicd they use it for an automated

10
00:00:27,080 --> 00:00:32,520
build okay

11
00:00:30,640 --> 00:00:34,320
I see very

12
00:00:32,520 --> 00:00:38,360
few

13
00:00:34,320 --> 00:00:42,079
teams applying engineering excellence

14
00:00:38,360 --> 00:00:45,360
and doing CI CD as it's intended to be

15
00:00:42,079 --> 00:00:47,559
done just to clarify a little bit

16
00:00:45,360 --> 00:00:49,480
continuous

17
00:00:47,559 --> 00:00:53,280
integration

18
00:00:49,480 --> 00:00:56,399
is coupled with Mainline

19
00:00:53,280 --> 00:00:59,079
branching it's not integrated if it's

20
00:00:56,399 --> 00:01:03,760
not in the mainline in with the rest of

21
00:00:59,079 --> 00:01:05,720
your code so if you've got a CI a

22
00:01:03,760 --> 00:01:08,720
continuous integration on a separate

23
00:01:05,720 --> 00:01:10,960
Branch right that's not actually a CI

24
00:01:08,720 --> 00:01:12,720
that's just a continuous build on your

25
00:01:10,960 --> 00:01:15,080
separate branch which is great

26
00:01:12,720 --> 00:01:16,960
definitely have that but we want

27
00:01:15,080 --> 00:01:19,520
continuous integration we want to be

28
00:01:16,960 --> 00:01:22,840
continuously pulling things into the one

29
00:01:19,520 --> 00:01:24,799
true version so we have fewer and fewer

30
00:01:22,840 --> 00:01:26,680
integration problems we have fewer and

31
00:01:24,799 --> 00:01:27,960
fewer other problems coming off that

32
00:01:26,680 --> 00:01:30,079
because we're having to support multiple

33
00:01:27,960 --> 00:01:32,840
versions of our product if you've get

34
00:01:30,079 --> 00:01:34,560
test live in branches you're just

35
00:01:32,840 --> 00:01:37,079
fundamentally doing it wrong you might

36
00:01:34,560 --> 00:01:41,079
have an older product I I

37
00:01:37,079 --> 00:01:43,280
definitely don't judge the decisions

38
00:01:41,079 --> 00:01:46,000
that led to that in the past right you

39
00:01:43,280 --> 00:01:48,119
might have made that choice 20 years ago

40
00:01:46,000 --> 00:01:51,159
in your product but you shouldn't be

41
00:01:48,119 --> 00:01:52,040
making that choice today Dev test live

42
00:01:51,159 --> 00:01:54,719
with

43
00:01:52,040 --> 00:01:56,479
branches nobody no product anywhere

44
00:01:54,719 --> 00:01:57,960
should be making that choice today we

45
00:01:56,479 --> 00:01:59,920
should be doing continuous integration

46
00:01:57,960 --> 00:02:01,439
and continuous delivery continuous

47
00:01:59,920 --> 00:02:03,399
integration is where you have Mainline

48
00:02:01,439 --> 00:02:06,360
branching and things are continuously

49
00:02:03,399 --> 00:02:09,399
integrating into that Mainline Branch

50
00:02:06,360 --> 00:02:10,879
right everything all the work of all the

51
00:02:09,399 --> 00:02:12,480
engineers that are working on your

52
00:02:10,879 --> 00:02:14,760
product are continuously integrated

53
00:02:12,480 --> 00:02:17,760
every day uh Google is notorious for

54
00:02:14,760 --> 00:02:19,959
this one they have one source control

55
00:02:17,760 --> 00:02:22,640
repository for the whole company every

56
00:02:19,959 --> 00:02:26,879
product everywhere in the company is on

57
00:02:22,640 --> 00:02:29,120
that one main line okay so

58
00:02:26,879 --> 00:02:31,599
that that's a little bit extreme that's

59
00:02:29,120 --> 00:02:33,720
a mono repo that's a little bit extreme

60
00:02:31,599 --> 00:02:36,120
uh but at least for a product you want

61
00:02:33,720 --> 00:02:38,800
to have that Mainline branching model

62
00:02:36,120 --> 00:02:41,879
where you're continuously integrating

63
00:02:38,800 --> 00:02:43,920
every day you should not I would object

64
00:02:41,879 --> 00:02:46,959
to a branch that's around for longer

65
00:02:43,920 --> 00:02:48,599
than a day I'd strenuous strenuously

66
00:02:46,959 --> 00:02:52,599
object to a branches around for more

67
00:02:48,599 --> 00:02:54,440
than a couple of days right yeah yeah

68
00:02:52,599 --> 00:02:57,000
I'm not saying that they wouldn't happen

69
00:02:54,440 --> 00:02:58,400
it's possible but I'm strally object

70
00:02:57,000 --> 00:03:01,080
where people work right people are

71
00:02:58,400 --> 00:03:03,480
adding new things adding new cap ility

72
00:03:01,080 --> 00:03:07,120
don't shouldn't exist for very long so

73
00:03:03,480 --> 00:03:10,120
it it it that's CI continuous

74
00:03:07,120 --> 00:03:11,680
integration continuous delivery is when

75
00:03:10,120 --> 00:03:15,319
it hits the main

76
00:03:11,680 --> 00:03:15,319
line it's going to

77
00:03:15,519 --> 00:03:20,640
production that that's that's continuous

78
00:03:18,400 --> 00:03:22,319
delivery is not I'm continuously

79
00:03:20,640 --> 00:03:23,799
delivering to my test environment it's

80
00:03:22,319 --> 00:03:25,640
I'm continuously delivering to

81
00:03:23,799 --> 00:03:28,599
production to real

82
00:03:25,640 --> 00:03:31,319
users now you might use a ring based

83
00:03:28,599 --> 00:03:34,439
deployment model where you're protecting

84
00:03:31,319 --> 00:03:37,879
and and limiting the blast radius of any

85
00:03:34,439 --> 00:03:40,599
problems behind an audience perhaps it

86
00:03:37,879 --> 00:03:43,680
could be audience-based rings that

87
00:03:40,599 --> 00:03:46,400
enable you to to have your high-risk

88
00:03:43,680 --> 00:03:48,280
customers in a later ring so you find

89
00:03:46,400 --> 00:03:50,920
the problems first with lower risk

90
00:03:48,280 --> 00:03:53,879
customers or or or yeah lower risk

91
00:03:50,920 --> 00:03:55,959
customers but continuous delivery the

92
00:03:53,879 --> 00:03:58,879
delivery part in continuous delivery is

93
00:03:55,959 --> 00:04:00,519
production should be real users really

94
00:03:58,879 --> 00:04:03,120
using your product

95
00:04:00,519 --> 00:04:06,319
so if you're doing continuous delivery

96
00:04:03,120 --> 00:04:09,840
you should be seeing every commit to to

97
00:04:06,319 --> 00:04:11,280
the main repo or a particular Branch

98
00:04:09,840 --> 00:04:12,599
right let's call it a branch could be

99
00:04:11,280 --> 00:04:14,640
called main could be called Master could

100
00:04:12,599 --> 00:04:18,880
be called HK whatever it's going to be

101
00:04:14,640 --> 00:04:21,079
called is is ends up in production and

102
00:04:18,880 --> 00:04:24,639
that's where people continuously

103
00:04:21,079 --> 00:04:28,320
integrate so you CI into that and then

104
00:04:24,639 --> 00:04:30,600
you CD from there to production and most

105
00:04:28,320 --> 00:04:32,840
teams and most organizations don't seem

106
00:04:30,600 --> 00:04:34,960
to do that they say they're doing cic

107
00:04:32,840 --> 00:04:37,160
but they're just using the terminology

108
00:04:34,960 --> 00:04:38,880
and the tools that are part of it to do

109
00:04:37,160 --> 00:04:41,280
something else which is just an

110
00:04:38,880 --> 00:04:43,120
automated build which is also fine right

111
00:04:41,280 --> 00:04:46,680
you got to have the right technology for

112
00:04:43,120 --> 00:04:48,360
the right thing I recommend cicd I

113
00:04:46,680 --> 00:04:50,840
recommend continuous integration

114
00:04:48,360 --> 00:04:54,479
Mainline branching and continuous

115
00:04:50,840 --> 00:04:57,360
delivery into production for example on

116
00:04:54,479 --> 00:05:01,199
products that I use that I build I might

117
00:04:57,360 --> 00:05:03,360
not use true CD I think I'm almost

118
00:05:01,199 --> 00:05:06,360
almost there I'm not quite there I think

119
00:05:03,360 --> 00:05:10,080
my it's little bit too much risk for me

120
00:05:06,360 --> 00:05:11,680
but because of my ability to test right

121
00:05:10,080 --> 00:05:14,080
but

122
00:05:11,680 --> 00:05:16,759
continuous I continuously integrate to

123
00:05:14,080 --> 00:05:19,919
Main and no it ships to production I

124
00:05:16,759 --> 00:05:21,880
have CD on on main ships to production

125
00:05:19,919 --> 00:05:24,080
is a preview so the smaller number of

126
00:05:21,880 --> 00:05:27,840
users so controlling the blast radius

127
00:05:24,080 --> 00:05:31,880
and then when I feel like preview has

128
00:05:27,840 --> 00:05:35,759
enough Telemetry to tell me that it's

129
00:05:31,880 --> 00:05:37,680
good that it's not I don't have a larger

130
00:05:35,759 --> 00:05:39,240
number of Errors I don't have people not

131
00:05:37,680 --> 00:05:40,400
be able to do the stuff that they

132
00:05:39,240 --> 00:05:44,039
they're supposed to be able to do in the

133
00:05:40,400 --> 00:05:46,240
tool when I have enough data then I push

134
00:05:44,039 --> 00:05:48,240
the button and it it rolls out to the

135
00:05:46,240 --> 00:05:50,840
next ring which is everybody so I

136
00:05:48,240 --> 00:05:53,520
effectively have a two- ring system pre

137
00:05:50,840 --> 00:05:55,520
or CD system preview which is a smaller

138
00:05:53,520 --> 00:05:57,400
subset of people that opt in to be using

139
00:05:55,520 --> 00:06:00,759
the preview version and then everybody

140
00:05:57,400 --> 00:06:03,520
else and I'll sometimes somebody asks

141
00:06:00,759 --> 00:06:05,000
for a new thing I'll get it into preview

142
00:06:03,520 --> 00:06:06,960
and I'll tell them it's in preview and

143
00:06:05,000 --> 00:06:08,919
they can try it there and kick the tires

144
00:06:06,960 --> 00:06:11,440
right so I'll bring new stuff that's

145
00:06:08,919 --> 00:06:13,680
never been tried into preview people

146
00:06:11,440 --> 00:06:17,639
will come and kick the tires and then it

147
00:06:13,680 --> 00:06:19,720
will only go to to the rest of the world

148
00:06:17,639 --> 00:06:22,919
once it's been successful and that's

149
00:06:19,720 --> 00:06:24,919
generally how um Windows works that's

150
00:06:22,919 --> 00:06:29,039
generally how Microsoft teams Works

151
00:06:24,919 --> 00:06:31,160
Office 365 um all of most of most of

152
00:06:29,039 --> 00:06:33,680
Microsoft products are now on a ring

153
00:06:31,160 --> 00:06:36,080
based audience-based deployment model

154
00:06:33,680 --> 00:06:38,800
and that seems to be the most effective

155
00:06:36,080 --> 00:06:41,960
for services that you deliver to your

156
00:06:38,800 --> 00:06:44,199
customers um I think websites are a

157
00:06:41,960 --> 00:06:47,120
little bit different for like commercial

158
00:06:44,199 --> 00:06:50,479
websites but again these are all things

159
00:06:47,120 --> 00:06:54,280
that we can talk about and figure out

160
00:06:50,479 --> 00:06:55,680
what the most effective model is CD

161
00:06:54,280 --> 00:06:57,479
might not be the most effective model

162
00:06:55,680 --> 00:06:59,080
for you CI might not be the most

163
00:06:57,479 --> 00:07:01,360
effective model we might just want some

164
00:06:59,080 --> 00:07:04,160
automated

165
00:07:01,360 --> 00:07:07,840
builds having the

166
00:07:04,160 --> 00:07:10,160
expertise to understand your product

167
00:07:07,840 --> 00:07:12,360
understand its architecture understand

168
00:07:10,160 --> 00:07:14,680
what the business is trying to achieve

169
00:07:12,360 --> 00:07:17,280
with the product will help create that

170
00:07:14,680 --> 00:07:21,720
indication of how naked agility can

171
00:07:17,280 --> 00:07:24,759
support you in creating cic CD or just

172
00:07:21,720 --> 00:07:27,720
some automation to enable you to be as

173
00:07:24,759 --> 00:07:30,199
effective as possible and increase your

174
00:07:27,720 --> 00:07:32,879
release frequency and reduce your cost

175
00:07:30,199 --> 00:07:32,879
of deployment


