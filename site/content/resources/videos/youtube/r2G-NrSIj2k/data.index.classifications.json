{
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-02-12T02:54:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, with no focus on hypothesis formulation, experimentation, or validated learning.",
    "level": "Ignored"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-02-12T02:54:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, with no focus on hypothesis-driven experimentation or Agile workflows.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-02-12T02:54:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, which are not directly related to entrepreneurship.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Product Backlog",
    "calculated_at": "2025-05-13T21:55:10",
    "ai_confidence": 6.3,
    "ai_mentions": 0.1,
    "ai_alignment": 1.7,
    "ai_depth": 1.9,
    "ai_intent": 1.0,
    "ai_audience": 0.7,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content is exclusively about code review practices and automation within software quality assurance. It focuses on shift-left strategies, pre-reviewed code, and related tooling such as SonarQube and CI/CD. There are no explicit or indirect references to the Product Backlog, backlog management, prioritization techniques, the role of Product Owner, or any related Agile backlog themes. The intent, depth, and intended audience are all misaligned with the Product Backlog category and its definition. Minimal to no relevant signal exists for Product Backlog classification.",
    "reasoning_summary": "This content centers wholly on code review automation and shift-left quality assurance, with no meaningful connection to Product Backlog concepts or Agile backlog management. Therefore, it does not fit the category.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-12T02:54:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, with no clear focus on Scrum principles, roles, or events.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "category": "Organisational Physics",
    "calculated_at": "2025-02-12T02:54:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in software development, with no clear focus on systems thinking or organisational dynamics.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-12T02:54:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in software development, with no clear focus on coaching practices or themes.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-02-12T02:54:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review practices and automation in software development, without a focus on evidence-based leadership principles or decision-making.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "category": "Employee Engagement",
    "calculated_at": "2025-02-12T02:54:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review processes and automation in software development, with no focus on employee engagement or related themes.",
    "level": "Ignored"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-02-12T02:54:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code review practices and automation in software development, which does not align with the strategic aspects of product management.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-12T02:54:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review practices and automation, with no clear focus on Agile leadership or related themes.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-12T02:54:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, with no clear focus on Daily Scrum or its related topics.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-04-10T13:03:15",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses code reviews and automation in software development, which is not directly related to system configuration. While it mentions automation tools and practices that could be tangentially related to system setup, the focus remains on code quality and review processes rather than the configuration of systems or integration of hardware and software components. The discussion lacks depth in terms of system configuration specifics, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-02-12T02:54:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in software development, without a clear focus on digital transformation strategies or the strategic use of digital technologies for business transformation.",
    "level": "Ignored"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses code reviews and the shift-left approach, which are relevant to ensuring software quality and functionality. However, while it touches on aspects of working software, such as automated checks and faster delivery, it does not explicitly focus on the broader themes of working software delivery or customer value. The depth of discussion on working software principles is moderate, primarily centred around code review practices rather than a comprehensive exploration of working software as defined in Agile and Scrum.",
    "level": "Secondary",
    "reasoning_summary": "This content mainly explores code review practices and the shift-left approach, which are important for software quality. However, it doesnâ€™t fully address the wider concepts of working software delivery or customer value, focusing instead on specific quality assurance methods rather than the broader Agile or Scrum principles related to delivering functional software."
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-02-12T02:54:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review processes and automation rather than structured decision-making methodologies.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-02-12T02:54:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, with no clear focus on self-organisation principles or practices.",
    "level": "Ignored"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-12T02:54:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no focus on remote working or Agile collaboration strategies.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-02-12T02:54:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a clear focus on Lean principles or practices.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-12T02:54:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review practices and automation in DevOps, without a focus on organisational culture.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-02-12T02:54:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in the context of quality assurance, with no focus on customer feedback mechanisms or integration.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses code reviews and the shift-left approach, which are relevant to Azure Repos, particularly in the context of pull requests and automated checks. However, it lacks a direct focus on Azure Repos itself, with only a brief mention of Azure DevOps Pipelines as a tool for automation. The primary emphasis is on general code review practices rather than specific Azure Repos functionalities, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Transparency": {
    "category": "Transparency",
    "calculated_at": "2025-02-12T02:55:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in the context of quality assurance, without a focus on transparency in Agile processes.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Definition of Done",
    "calculated_at": "2025-05-13T21:55:06",
    "ai_confidence": 34.73,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 3.1,
    "ai_audience": 6.3,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content thoroughly discusses modern code review practices, automation, and shift-left strategies for software quality. While these are relevant to Agile processes, there is no direct mention, exploration, or framing around the Definition of Done (DoD). Key DoD themesâ€”such as shared team criteria for 'done' increments, alignment with Scrum artefacts, or explicit DoD best practicesâ€”are absent. The focus is on process automation and code quality via reviews, not on DoD as a deliverable criterion.",
    "reasoning_summary": "This piece deeply explores code review and automation within Agile practices, but it neither mentions nor centers on the Definition of Done. Its primary focus is on workflow and quality assurance, not explicit DoD criteria or practices, making the fit with the category quite weak.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-02-12T02:55:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review processes and automation, which are not central to product strategy.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-02-12T02:55:04",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in software development, with no direct relevance to customer retention strategies.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, which are unrelated to Value Stream Mapping.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Strategy",
    "calculated_at": "2025-05-13T21:55:10",
    "ai_confidence": 72.82,
    "ai_mentions": 4.2,
    "ai_alignment": 8.5,
    "ai_depth": 7.9,
    "ai_intent": 7.8,
    "ai_audience": 8.3,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content primarily explores code review as a modern practice (automation, shift-left, pre-reviewed code) for improving quality and delivery speed. 'Strategy' is not directly named, but strategic elements like aligning reviews with architectural decisions, business goals, and organizational improvement are highlighted. The section 'Focus Manual Reviews on Strategy' explicitly ties code reviews to higher-level business/technical alignment, elevating the discussion above operational details. However, most of the content is still weighted toward process improvements and tooling, not deep enterprise-level strategic planning. The intent is moderately strategicâ€”helping teams align reviews with business outcomesâ€”targeted at engineering leaders and teams. The audience fits, but signal-to-noise is slightly diluted by tool-focused how-tos and practice detail. No penalties for outdated or contradictory tone.",
    "reasoning_summary": "While the content mainly focuses on engineering practices and automation, it meaningfully connects code review improvements to higher-level team alignment and business goals, meeting 'Strategy' criteria with moderate confidence.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T16:59:25",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in the context of software development, which touches on innovation in practices but does not explicitly focus on the broader themes of innovation as defined in the category. While it mentions the shift-left approach and automation, it lacks a detailed exploration of innovation metrics, learning cycles, or case studies that would align more closely with the Ability to Innovate category. The primary focus remains on improving code review processes rather than fostering a culture of innovation.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-02-12T02:55:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, with no clear focus on Agile frameworks or principles.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 20,
    "final_score": 62.0,
    "reasoning": "The content discusses code reviews primarily in the context of quality assurance and automation, with only brief mentions of team dynamics and knowledge sharing. While it touches on collaboration aspects, such as knowledge sharing and strategic discussions during reviews, the focus remains on individual practices and automation rather than enhancing team collaboration within Agile or DevOps frameworks.",
    "level": "Secondary"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-02-12T02:55:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices without any focus on customer satisfaction or related metrics.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-02-12T02:55:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in software development, with no clear focus on Lean principles or waste minimisation.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and their impact on code quality, but does not focus on Cycle Time or its measurement.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses code reviews, which directly relate to clean code and quality assurance, aligning with the principles of Engineering Practices. It mentions the importance of automation in the pull request process, which ties into CI/CD practices. The depth of discussion is substantial, covering various techniques and advocating for automated checks, but it does not delve deeply into TDD or pair programming, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-12T02:55:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, which are not related to portfolio management.",
    "level": "Ignored"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses code reviews, a key practice in software development, and aligns well with the themes of code quality assurance and automated processes within the development lifecycle. It provides a detailed exploration of different perspectives on code reviews, their importance, and the integration of automation in the pull request process, demonstrating a strong understanding of best practices in software development.",
    "level": "Primary"
  },
  "Engineering Excellence": {
    "category": "Engineering Excellence",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 87.0,
    "ai_mentions": 75.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 0,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the importance of code reviews in improving code quality, which is a key aspect of software craftsmanship and quality assurance. It aligns well with the principles of best practices in coding standards and the role of automation in enhancing development efficiency. The depth of discussion is significant, as it covers various techniques and practices related to code reviews, including the shift towards pre-reviewing code and the automation of pull requests. Overall, the content strongly supports the category of Engineering Excellence.",
    "level": "Primary",
    "reasoning_summary": "This content is a great fit for the Engineering Excellence category, as it thoroughly explores how code reviews contribute to higher code quality and better development practices. By addressing both manual and automated review techniques, it highlights best practices and the evolving role of automation, making it highly relevant to software craftsmanship and quality assurance."
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T13:03:17",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in the context of improving delivery speed and quality, which indirectly relates to throughput. However, it does not explicitly define or analyse throughput as a metric, nor does it provide detailed insights into measuring or visualising throughput. The focus is more on code quality and process improvement rather than on throughput as a delivery metric.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-12T02:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices without specific reference to Azure Pipelines or its functionalities.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review practices and automation, with no clear focus on Agile values or principles.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the role of automated checks in the context of code reviews, highlighting their importance in improving quality and efficiency. It mentions automated tests and tools, aligning with the principles of automated testing. However, the primary focus is on code reviews rather than automated testing itself, which limits the depth of discussion on the category.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-13T21:55:08",
    "ai_confidence": 32.651,
    "ai_mentions": 0.7,
    "ai_alignment": 3.5,
    "ai_depth": 3.8,
    "ai_intent": 2.6,
    "ai_audience": 5.0,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content primarily discusses code review practices, automation, and shift-left strategies focusing on improving code quality and delivery speed. While there is some overlap with SRE themes (like automation and CI/CD pipelines), there are no direct mentions of Site Reliability Engineering or its core concepts (SLOs, incident response, reliability metrics), nor are principles specifically framed in a production reliability context. The main audience is software engineers seeking quality improvements, not SREs or reliability practitioners, and the focus is not on system reliability, scalability, or resilience in production environments. Any relevance is tangentialâ€”automation and pipelines are briefly mentioned, but not in service of SRE's central concerns.",
    "reasoning_summary": "This content focuses on code reviews and automated quality checks, mainly targeting developers. While automation and shift-left ideas can relate to SRE, the discussion never addresses SRE principles or reliability in production, so its fit with the SRE category is weak and mostly incidental.",
    "level": "Ignored"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-02-12T02:55:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, which are not directly related to the responsibilities or role of a Product Owner.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-02-12T02:55:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a clear focus on change management principles or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-12T02:55:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation practices, which are not directly related to mentoring in Agile environments.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "category": "Empirical Process Control",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a clear focus on empirical process control principles or Agile methodologies.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-02-12T02:55:34",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, which are not directly related to validating product ideas through user engagement.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-12T02:55:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of software development, with no clear focus on Azure Boards or Agile project management.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-12T02:55:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no mention of revenue per employee or related financial metrics.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in the context of improving quality and speed in software development. While it touches on automated checks and early defect detection, it does not explicitly mention Test First Development principles or practices such as TDD or ATDD. The focus is more on code review processes rather than the foundational concepts of Test First Development, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-02-12T02:55:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance rather than frequent releases or related practices.",
    "level": "Ignored"
  },
  "Estimation": {
    "category": "Estimation",
    "calculated_at": "2025-02-12T02:55:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no focus on estimation techniques or Agile estimation practices.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-12T02:55:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices rather than troubleshooting technical issues.",
    "level": "Ignored"
  },
  "Increment": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Increment",
    "calculated_at": "2025-05-13T21:55:11",
    "ai_confidence": 22.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.5,
    "ai_intent": 3.5,
    "ai_audience": 6.6,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses exclusively on code review practices, automation, shift-left strategies, and quality assurance, with no direct mention of Agile 'Increment' or explicit exploration of delivering usable, working software at the end of iterations. Although the intended audience (developers, Agile teams) closely overlaps with those interested in Increments, the conceptual and thematic linkage is weak: the material is about process improvements and ensuring code quality rather than about producing, measuring, or evolving Increments per Agile or Scrum definitions. Signal-to-noise is decent, but the discussion remains tangential to the Increment artifact and never addresses its definition, value delivery, or its relationship to Scrum artifacts.",
    "reasoning_summary": "While the article is relevant for Agile practitioners and discusses quality assurance, it does not focus on Increments or their role in Scrum. The content is centered on code review automationâ€”not on the delivery, value, or completeness of software increments.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-12T02:55:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and practices in software development, with no mention of Windows or related topics.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Sprint Review",
    "calculated_at": "2025-05-13T21:55:09",
    "ai_confidence": 2.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 1.0,
    "ai_intent": 0.3,
    "ai_audience": 2.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "There are no direct or indirect references to Sprint Review, scrum rituals, or stakeholder feedback. The entire content focuses exclusively on code review processes, automation, and best practices, unrelated to Scrum Sprint Reviews. The alignment is extremely weak: the topic (code review for quality assurance and process improvement) targets software engineers, but not scrum-specific roles or practices. No obsolete practices are discussed, nor is there any contradicting tone toward Scrum eventsâ€”the content simply doesnâ€™t touch Sprint Review in any form.",
    "reasoning_summary": "This content is focused on code review automation and best practices, without any mention or discussion of Sprint Review. It lacks conceptual, intentional, or procedural overlap with the Sprint Review category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-11T08:56:56",
    "ai_confidence": 32.0,
    "ai_mentions": 100.0,
    "ai_alignment": 40.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content briefly mentions 'faster delivery' as a benefit of pre-reviewed code, which aligns with the concept of Lead Time. However, the primary focus is on code reviews and automation rather than a detailed exploration of Lead Time as a metric. The discussion lacks depth on measuring or optimising Lead Time specifically, and while it touches on related themes, it does not provide a comprehensive analysis of Lead Time itself.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses code reviews and their role in improving code quality, which aligns with practical problem-solving strategies in Agile and DevOps contexts. It mentions the importance of automation in the pull request process, reflecting adaptability and efficiency. However, while it touches on relevant themes, the discussion lacks depth in exploring broader pragmatic thinking principles and does not explicitly focus on Agile or Scrum methodologies.",
    "level": "Secondary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of automated checks and streamlined processes in code reviews, which indirectly relates to deployment frequency by emphasising faster delivery and reducing bottlenecks. However, it does not explicitly focus on deployment frequency as a primary topic, nor does it provide in-depth strategies or metrics specifically for optimising deployment intervals.",
    "level": "Secondary"
  },
  "Continuous Integration": {
    "category": "Continuous Integration",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses code reviews and their role in improving code quality, which is tangentially related to Continuous Integration practices. However, it does not explicitly focus on CI principles or tools, and while it mentions automation in the context of pull requests, it lacks depth in discussing CI as a primary focus. The mention of automated checks aligns with CI concepts, but the overall discussion is more about code reviews than CI itself.",
    "level": "Secondary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-02-12T02:55:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review practices and automation in software development, without a clear focus on Agile strategy or principles.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the shift-left approach and automation in code reviews, which aligns with Continuous Delivery principles. It highlights the importance of automated validation and faster delivery, both key aspects of Continuous Delivery. However, while it touches on relevant themes, the primary focus is on code reviews rather than Continuous Delivery as a whole, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-12T02:55:57",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, with no clear focus on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no focus on the Definition of Ready or backlog item readiness.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "category": "Sensemaking",
    "calculated_at": "2025-02-12T02:56:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in software development, without a focus on sensemaking or decision-making in complex environments.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-12T02:56:01",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review processes and automation, with no focus on team dynamics or motivation.",
    "level": "Ignored"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-02-12T02:56:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, rather than focusing on team dynamics, collaboration, or Agile methodologies.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-02-12T02:56:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-12T02:56:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review processes and automation rather than working agreements or team collaboration norms.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-02-12T02:56:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a clear focus on Lean principles such as waste reduction or value maximisation.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-02-12T02:56:13",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, with no clear focus on Agile transformation principles or methodologies.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-12T02:56:14",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation practices, with no clear focus on technical debt management or its implications.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "category": "Scrum Values",
    "calculated_at": "2025-02-12T02:56:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation practices, which are not directly related to Scrum Values.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "category": "Organisational Change",
    "calculated_at": "2025-02-12T02:56:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in software development, which are not related to organisational change.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of automating validation checks in the context of code reviews, which aligns with test automation principles. It mentions automated tests and tools, indicating a focus on improving quality through automation. However, the primary focus is on code reviews rather than test automation itself, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses code reviews and their role in improving code quality, which aligns with operational practices in terms of enhancing delivery speed and quality. However, while it touches on automation and reducing bottlenecks, it does not delve deeply into specific operational efficiency techniques or metrics, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in software development but does not explicitly mention Evidence-Based Management or its key topics. While it touches on improving quality and delivery speed, it lacks a focus on empirical evidence or data-informed decision-making, which are central to EBM.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "category": "Backlog Refinement",
    "calculated_at": "2025-02-12T02:56:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no focus on backlog refinement or related Agile practices.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on code reviews and automation in software development, with no direct mention of the Scrum Master role or its responsibilities. While it touches on themes of collaboration and quality, it does not align with the core topics related to the Scrum Master, such as facilitating Scrum processes or promoting agile principles.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review practices and automation, with no clear focus on scaling Agile methodologies or enterprise-level Agile transformation.",
    "level": "Ignored"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-12T02:56:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no focus on forecasting methodologies or Agile principles.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses code reviews and the shift towards pre-reviewed code, which touches on aspects of technical leadership, such as fostering collaboration and aligning technical practices with business goals. However, it primarily focuses on the mechanics of code reviews rather than providing in-depth insights into technical leadership principles or strategies for mentoring and coaching teams. The discussion lacks a strong emphasis on agile methodologies and team dynamics, which are crucial for a higher confidence score in this category.",
    "level": "Secondary"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-02-12T02:56:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, which are not related to understanding customer needs or defining product features.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-02-12T02:56:31",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in software development, which are not related to Lean Startup principles or methodologies.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-02-12T02:56:32",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, with no clear focus on Agile Planning principles or methodologies.",
    "level": "Ignored"
  },
  "Accountability": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Accountability",
    "calculated_at": "2025-05-13T21:55:11",
    "ai_confidence": 21.49,
    "ai_mentions": 0.8,
    "ai_alignment": 2.2,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 7.4,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content centers on modern code review practices, automated validation, and shift-left strategies. There is no explicit mention or in-depth exploration of outcome ownership, structural roles, or accountability mechanisms in work systems. While the audience overlaps slightly and team collaboration/ownership is implied, the key dimensions of accountabilityâ€”such as role-specific outcome ownership, explicit design of accountabilities, or performance impacts due to clear/unclear accountabilityâ€”are absent. The main intent is on quality assurance improvement, not framing code review as an accountability structure or mechanism. The superficial tangential relevance (team collaboration, pipeline discipline) is not substantial for this tag.",
    "reasoning_summary": "This content focuses on code quality and automation, barely touching on accountability as a work system mechanism. While it hints at collaboration and process discipline, it lacks discussion of outcome ownership or structural accountability and thus fits the category only weakly.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "category": "Minimum Viable Product",
    "calculated_at": "2025-02-12T02:56:35",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no focus on MVP concepts or market validation.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "category": "Collaboration Tools",
    "calculated_at": "2025-02-12T02:56:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and pull request processes, which are not primarily about collaboration tools.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-12T02:56:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in software development, with no focus on psychological safety or related themes.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-12T02:56:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in the context of quality assurance, which is not directly related to deployment strategies.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-12T02:56:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code review practices and automation, with no clear focus on Scrum roles, team dynamics, or collaboration techniques.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses code reviews and their role in improving code quality, which aligns with the principles of clean code and software craftsmanship. It mentions the importance of automated checks and practices that enhance technical delivery, reflecting a good understanding of technical mastery. However, while it touches on relevant topics, the discussion lacks depth in exploring best practices or methodologies in detail, which slightly lowers the overall confidence score.",
    "level": "Secondary"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-12T02:56:42",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation practices, which are not central to release management.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-02-12T02:56:44",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a clear focus on Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-02-12T02:56:45",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and their role in quality assurance, without a clear focus on trend analysis within Agile, DevOps, or business agility frameworks.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-02-12T02:56:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code review practices and automation in the context of quality assurance, without a clear focus on Agile principles or philosophy.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content primarily discusses code reviews, which are a crucial aspect of modern source control practices. It explicitly mentions pull requests and the importance of automated checks, aligning well with the category's focus on collaboration workflows and code review processes. The depth of discussion is significant, as it explores different schools of thought on code reviews and their impact on code quality, indicating a thorough understanding of the topic. Overall, the content is highly relevant to modern source control, though it could benefit from more detailed exploration of specific version control methodologies.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the category, as it delves into code reviews and pull requestsâ€”key elements of modern source control. It highlights collaborative workflows and automated checks, demonstrating a solid grasp of current practices. While it thoroughly covers code review philosophies, adding more detail on specific version control methods could enhance its relevance even further."
  },
  "Agile Planning Tools": {
    "category": "Agile Planning Tools",
    "calculated_at": "2025-02-12T02:56:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, which are not directly related to Agile Planning Tools.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-02-12T02:56:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in the context of quality assurance, without a focus on Acceptance Test Driven Development or acceptance criteria.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-02-12T02:56:52",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a focus on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Market Share": {
    "category": "Market Share",
    "calculated_at": "2025-02-12T02:56:53",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and quality assurance practices, with no relevance to market share strategies or methodologies.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-12T02:56:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review processes and automation, with no clear focus on long-term strategic goals or business agility.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-02-12T02:56:55",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code review processes and automation in software development, rather than focusing on principles of continuous learning or team improvement.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-02-12T02:53:36",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation practices in software development, with no focus on decision-making processes or uncertainty.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in the context of software development, without addressing broader organisational agility or cultural aspects.",
    "level": "Ignored"
  },
  "Lean": {
    "category": "Lean",
    "calculated_at": "2025-02-12T02:53:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in software development, with no clear focus on Lean principles or methodologies.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review practices and philosophies rather than installation or configuration of tools.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the optimisation of code review processes through automation, which directly relates to enhancing flow efficiency by reducing bottlenecks and improving throughput. It highlights the benefits of pre-reviewed code, such as faster delivery and early defect detection, aligning well with the principles of Flow Efficiency. However, while it touches on relevant concepts, the primary focus is on code reviews rather than a broader discussion of flow efficiency principles.",
    "level": "Secondary"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 68.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 68.0,
    "reasoning": "The content discusses code reviews primarily in the context of quality assurance and automation, which are relevant to product delivery. It highlights the importance of automated checks and streamlined processes that contribute to faster delivery and quality, aligning with key topics in product delivery. However, the focus is more on code review practices rather than the broader methodologies and strategies of product delivery, which slightly limits its depth in that specific category.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-02-12T02:53:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, with no clear focus on Agile product management principles or practices.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "category": "Systems Thinking",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in software development, with no clear focus on Systems Thinking principles or practices.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-02-12T02:53:54",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in software development, without a clear focus on complexity science or its principles.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-02-12T02:54:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, with only a brief mention of automation and DevOps, which does not centralise on market adaptability.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-02-12T02:54:02",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and their role in quality assurance within a DevOps context, referencing practices and principles that align with Agile methodologies.",
    "level": "Ignored"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 50,
    "final_score": 78.0,
    "reasoning": "The content discusses the shift-left approach and automation in code reviews, which aligns with DevOps principles of continuous improvement and automation. It emphasises the importance of early defect detection and streamlined processes, reflecting the core themes of DevOps. However, while it touches on collaboration and quality assurance, it primarily focuses on code review practices rather than broader DevOps cultural shifts or principles, leading to a slightly lower confidence score.",
    "level": "Secondary"
  },
  "Azure DevOps": {
    "category": "Azure DevOps",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 68.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 18.0,
    "non_ai_confidence": 20,
    "final_score": 68.0,
    "reasoning": "The content discusses code reviews and the shift-left approach, with a brief mention of Azure DevOps Pipelines as a tool for automated processes. However, the primary focus is on code review practices rather than Azure DevOps itself, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in the context of quality assurance, without a clear focus on business agility principles or practices.",
    "level": "Ignored"
  },
  "Kanban": {
    "category": "Kanban",
    "calculated_at": "2025-02-12T02:54:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, with no clear focus on Kanban principles or practices.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses code reviews primarily in the context of quality assurance and automation, which indirectly relates to value delivery through faster delivery and early defect detection. However, it lacks explicit discussions on customer value, iterative development, or alignment with customer needs, which are core themes of the Value Delivery category.",
    "level": "Secondary"
  },
  "Technical Excellence": {
    "category": "Technical Excellence",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses code reviews and their role in improving code quality, which aligns with the principles of Technical Excellence. It mentions the importance of automated checks and practices that enhance the development process, reflecting a focus on engineering methodologies. However, the discussion is somewhat general and lacks in-depth exploration of specific technical practices like TDD or CI/CD, which limits the overall depth of the content.",
    "level": "Secondary"
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, with no clear focus on organisational agility principles or practices.",
    "level": "Ignored"
  },
  "Personal": {
    "category": "Personal",
    "calculated_at": "2025-02-12T02:54:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation practices in DevOps, lacking personal anecdotes or reflections.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation practices without addressing the interplay between technology and organisational structures.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation practices rather than metrics, data analysis, or feedback mechanisms.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-02-12T02:54:25",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, which is not central to Application Lifecycle Management.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "category": "Value Stream Management",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code reviews and automation in the context of software development, which does not align with the principles of Value Stream Management.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "category": "Organisational Psychology",
    "calculated_at": "2025-02-12T02:54:27",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content heavily discusses code review processes and automation in software development, which are not related to the psychological aspects of organisational behaviour.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:00:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in the context of quality assurance, without a clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "category": "Beta Codex",
    "calculated_at": "2025-02-17T12:00:41",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation in software development, with no clear focus on BetaCodex principles or decentralised organisational design.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses code reviews and automation in software development, which does not directly address the Agile Product Operating Model. While it touches on themes of efficiency and quality, it lacks explicit references to product management principles, agile methodologies, or the core topics outlined in the APOM definition.",
    "level": "Ignored"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:48:39",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and automation practices, with no clear focus on leadership principles or practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "category": "Social Technologies",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in software development, which touches on collaboration and quality assurance. However, it primarily focuses on technical processes rather than the broader social frameworks and methodologies that promote collaboration and decision-making within teams. While there are mentions of knowledge sharing and strategic discussions, the overall emphasis is on technical practices rather than the social technologies that underpin effective teamwork and organisational culture.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:32:47",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices, with no clear focus on Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:32:49",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses code reviews and quality assurance practices without a clear focus on the application of AI in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses code reviews and quality assurance practices, which are not directly related to Scrum principles or frameworks. While there is a mention of 'agility' and 'automations', these concepts are not explicitly tied to Scrum roles, events, or artifacts. The focus is on code quality rather than collaborative project management or Scrum-specific practices, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "category": "Shift Left Strategy",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 87.0,
    "ai_mentions": 90.0,
    "ai_alignment": 85.0,
    "ai_depth": 90.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the Shift-Left Strategy in the context of code reviews, focusing on the concept of pre-reviewed code and its benefits. It aligns well with the core themes of integrating testing and quality assurance earlier in the development process. The depth of discussion is significant, providing detailed best practices and tools that support a Shift-Left approach, making it a primary focus of the content.",
    "level": "Primary"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the evolution of code reviews and the shift-left approach, which aligns with Continuous Improvement principles by emphasising automation, early defect detection, and streamlined processes. However, it primarily focuses on code reviews rather than a broader discussion on Continuous Improvement practices, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in software development, which are relevant to Agile practices. However, it primarily focuses on technical processes rather than explicitly addressing shared objectives or strategic alignment within teams. While there are mentions of business alignment and fostering collaboration, these are secondary to the main topic of code review techniques. Therefore, the content does not fully align with the core themes of Common Goals.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 68.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 68.0,
    "reasoning": "The content discusses the importance of code reviews and the shift-left approach, which indirectly relates to competence through the emphasis on quality assurance and continuous improvement in software development. It mentions the need for knowledge sharing and best practices, aligning with the core themes of competence. However, the primary focus is on code review processes rather than a direct exploration of competence as a foundational principle.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in software development, which are relevant to improving quality and efficiency. However, it does not explicitly mention the One Engineering System framework or its principles. The focus is primarily on code review practices rather than the integration and standardisation of engineering processes across teams, which is central to 1ES.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T13:02:55",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in software development, which touches on aspects of agility but lacks a direct focus on Agentic Agility. While it mentions improving processes and outcomes through automation, it does not explicitly address the intentional shaping of outcomes or the distinction between human and AI capabilities in this context.",
    "level": "Ignored"
  },
  "Product Development": {
    "category": "Product Development",
    "calculated_at": "2025-04-10T13:02:59",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 24,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses code reviews in the context of improving quality and delivery speed, which aligns with product development principles. It mentions methodologies like shift-left and automation, which are relevant to iterative processes and continuous improvement. However, the primary focus is on technical implementation rather than broader product development strategies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Project Management": {
    "category": "Project Management",
    "calculated_at": "2025-04-10T13:03:04",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily focuses on code reviews and automation in software development, which is more aligned with software engineering practices than project management. While it touches on aspects like team collaboration and delivery speed, it lacks a direct discussion of project management principles, methodologies, or lifecycle phases. The mention of aligning with business goals hints at project management but does not delve into the core themes of the category.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "category": "Hybrid Agile",
    "calculated_at": "2025-04-10T13:03:06",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses code reviews and automation in software development, with no explicit mention of Hybrid Agile concepts or critical examination of merging traditional and agile methodologies. It lacks depth in addressing the challenges or implications of Hybrid Agile, focusing instead on improving code quality through automation.",
    "level": "Ignored"
  },
  "Scaling": {
    "category": "Scaling",
    "calculated_at": "2025-04-10T13:03:09",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content primarily discusses code reviews and automation in software development, which are not directly related to scaling methodologies or frameworks. While there are mentions of aligning with business goals and improving delivery speed, these concepts are secondary to the main focus on code review processes. The discussion lacks depth in scaling strategies and frameworks, making it only tangentially relevant to the Scaling category.",
    "level": "Ignored"
  },
  "GitHub": {
    "category": "GitHub",
    "calculated_at": "2025-04-10T13:03:12",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 30,
    "final_score": 72.0,
    "reasoning": "The content discusses code reviews and the shift-left approach, which are relevant to GitHub's functionalities, particularly in the context of pull requests and automated checks. However, it lacks direct references to GitHub services or tools beyond a brief mention of GitHub Actions. The focus is more on general practices rather than specific GitHub methodologies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Time to Market": {
    "category": "Time to Market",
    "calculated_at": "2025-04-10T16:59:20",
    "ai_confidence": 72.0,
    "ai_mentions": 3,
    "ai_alignment": 32,
    "ai_depth": 37,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of 'pre-reviewed code' and how it can lead to faster delivery, which directly relates to the Time to Market category. It mentions the importance of automation in reducing bottlenecks and enhancing the speed of the development process, aligning with the core themes of Time to Market. The depth of discussion is significant, as it provides specific strategies and best practices for improving the code review process to accelerate delivery. However, while it touches on Time to Market, the primary focus is on code reviews rather than a comprehensive exploration of Time to Market metrics or strategies.",
    "level": "Secondary",
    "reasoning_summary": "This content is relevant to the Time to Market category because it explores how pre-reviewed code and automation can speed up delivery. While its main focus is on improving the code review process, the discussion clearly connects these improvements to reducing bottlenecks and accelerating release cycles, which are key aspects of Time to Market. However, it doesnâ€™t cover the full range of Time to Market strategies or metrics."
  },
  "Unrealised Value": {
    "category": "Unrealised Value",
    "calculated_at": "2025-04-10T16:59:33",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 5.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on code reviews and automation in software development, with no explicit discussion of Unrealised Value or its indicators. While it touches on improving processes and quality, it does not explore potential untapped opportunities or strategic decision-making related to Unrealised Value. The discussion is more operational and tactical rather than strategic, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Current Value": {
    "category": "Current Value",
    "calculated_at": "2025-04-10T16:59:37",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 25,
    "ai_depth": 15,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and the shift-left approach, which indirectly relates to the concept of Current Value by emphasising faster delivery and quality assurance. However, it lacks a direct focus on measuring Current Value or discussing specific metrics related to customer satisfaction or revenue impact. The mention of benefits like faster delivery and early defect detection aligns with the idea of delivering value, but it does not delve into the real-time assessment of value or provide concrete examples or metrics that would strengthen its relevance to Current Value in Evidence-Based Management.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "category": "Agnostic Agile",
    "calculated_at": "2025-04-10T16:59:23",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on code reviews and automation in software development, with no direct mention of Agnostic Agile principles or discussions. While it touches on themes of efficiency and quality, it does not align with the core concepts of Agnostic Agile, such as ethical considerations or the importance of adapting methodologies to context. The discussion is more about specific practices rather than the broader philosophy of Agnostic Agile.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "category": "Company as a Product",
    "calculated_at": "2025-04-10T16:59:28",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 20,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on code reviews and automation in software development, with no direct mention of treating the organisation as a product or integrating customer feedback into organisational design. While it touches on improving processes and collaboration, it does not align with the core themes of CaaP, such as organisational agility or customer-centric strategies. The discussion lacks depth regarding the principles of CaaP, making it a low-confidence evaluation.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "category": "Cell Structure Design",
    "calculated_at": "2025-04-10T16:59:30",
    "ai_confidence": 5.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 5.0,
    "reasoning": "The content primarily discusses code reviews and automation in software development, with no direct mention of Cell Structure Design or its principles. While there is a focus on improving processes and efficiency, it does not align with the core themes of decentralised organisational structures or the Beta Codex. The discussion is centred around traditional software practices rather than the dynamics of organisational design.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-13T21:55:09",
    "ai_confidence": 3.85,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.4,
    "ai_audience": 1.0,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses on modern code review practices: automation, shift-left, and team collaboration in software development. There is no mentionâ€”direct or indirectâ€”of Liberating Structures or its methods. Themes like facilitation techniques, participation frameworks, or structured team engagement are not present. The audience overlaps somewhat, targeting Agile practitioners, but the main content is entirely out of scope with the category as defined. All scores are low due to lack of explicit or conceptual connection, minimal alignment, and fully different context.",
    "reasoning_summary": "This resource is about automated code review, not facilitation techniques like Liberating Structures. There's no mention or exploration of the category's methods or concepts, so confidence in its relevance to Liberating Structures is very low.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "category": "Open Space Agile",
    "calculated_at": "2025-04-10T16:59:41",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 10.0,
    "ai_depth": 15.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on code reviews and automation in software development, with no direct mention of Open Space Agile principles or practices. While it discusses collaboration and quality assurance, it does not align with the core themes of Open Space Agile, such as psychological safety, shared ownership, or iterative dialogue. The depth of discussion is also limited to technical practices rather than organisational agility or collaborative change processes.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Principle",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 42.0,
    "ai_mentions": 2,
    "ai_alignment": 35.0,
    "ai_depth": 55.0,
    "non_ai_confidence": null,
    "final_score": 42.0,
    "reasoning": "The content discusses code reviews, particularly focusing on automation and a shift-left approach, emphasizing faster delivery and quality assurance. However, it primarily discusses practical operational aspects and methods rather than the underlying principles that guide these practices. While it touches upon ideas of automation and collaboration, it does not explicitly frame these discussions in terms of the guiding principles like self-management or continuous improvement as defined in Agile or Lean principles, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Tool": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Tool",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 85.0,
    "ai_mentions": 18,
    "ai_alignment": 30,
    "ai_depth": 34,
    "non_ai_confidence": null,
    "final_score": 85.0,
    "reasoning": "The content discusses automation in code reviews and specifically mentions tools such as SonarQube/SonarCloud and GitHub Actions or Azure DevOps Pipelines, which directly aligns with the category of Tools. While the content also covers methods of code reviews and the shift-left approach, it effectively highlights how these tools can automate processes and improve workflows. The discussion includes best practices for tool integration, which aligns well with the category's focus, thus providing a comprehensive understanding of how these tools facilitate team performance and value delivery.",
    "level": "Primary",
    "reasoning_summary": "This content is a great fit for the Tools category because it centres on how platforms like SonarQube and GitHub Actions streamline code reviews. By focusing on automation, integration, and best practices, it clearly demonstrates how these tools enhance workflows and support team efficiency, making it highly relevant to the category."
  },
  "Philosophy": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Philosophy",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 17.0,
    "ai_mentions": 0,
    "ai_alignment": 25.0,
    "ai_depth": 10.0,
    "non_ai_confidence": null,
    "final_score": 17.0,
    "reasoning": "The content primarily discusses practical aspects of code reviews and automation techniques, lacking explicit engagement with philosophical underpinnings or theoretical discussions relevant to the category of Philosophy. It mentions objectives like faster delivery and quality assurance, but does not delve into the foundational beliefs or values that inform these practices, such as those found in Agile or Lean philosophies. There is minimal alignment with the theme of organizational decision-making or team dynamics from a philosophical standpoint.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Discipline",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 32.0,
    "ai_mentions": 3,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and the shift-left approach in software development, but does so in a practical and tool-oriented manner rather than focusing on the underlying principles and methodologies of discipline. While it mentions establishing best practices and strives for quality, it does not delve into how these practices represent a structured discipline within modern work systems, nor does it discuss the evolution of these disciplines or their impact on organizational performance in a significant way.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Artifact",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 20.0,
    "ai_mentions": 10.0,
    "ai_alignment": 15.0,
    "ai_depth": 25.0,
    "non_ai_confidence": null,
    "final_score": 20.0,
    "reasoning": "The content discusses code reviews and the shift-left approach to improving code quality, but does not focus on Agile or Scrum artifacts or their structural roles. Mentions of automated checks and code quality primarily relate to processes and tools, rather than formal representations of work like artifacts. There is minimal discussion of specific Agile artifacts or their purposes.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Observability",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 20,
    "ai_depth": 10,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content discusses code reviews and automation in a software development context but does not directly address observability concepts such as metrics, logs, and traces. It mentions tools like SonarQube and GitHub Actions, which contribute to code quality, but these are more aligned with CI/CD practices than observability. The focus remains on improving code quality and speeding up the review process, rather than explaining how to understand internal system states based on observability principles. While automation is a crucial aspect of Agile and DevOps, it does not equate to observability as defined. Therefore, while there are some relevant mentions, the core themes and depth of discussion do not firmly align with the observability category.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Practice",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 76.0,
    "ai_mentions": 16,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": null,
    "final_score": 76.0,
    "reasoning": "The content focuses on the practice of code reviews and specifically discusses actionable techniques like automated validation and the shift-left approach to enhance the code review process. There's a clear focus on improving team performance through consistent, repeatable actions that streamline development, which aligns well with the category 'Practice'. The depth of discussion around best practices and specific techniques contributes to a high confidence score, though the primary topic may veer slightly towards tools and automation, preventing a perfect score.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong match for the 'Practice' category, as it centres on effective code review methods and highlights actionable strategies like automated validation and shift-left approaches. The emphasis on improving team workflows and sharing best practices makes it highly relevant, even though it briefly touches on tools and automation. Overall, it clearly fits the intended category."
  },
  "Method": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Method",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 35,
    "non_ai_confidence": null,
    "final_score": 72.0,
    "reasoning": "The content discusses a specific method for conducting code reviews, emphasizing the shift-left approach and automated validation. It outlines structured practices and procedures for improving code quality and speeding up delivery through automated checks. The discussion is detailed, providing specific practices and tools to implement this method, aligning well with the key topics of structured procedures. While it does touch on broader concepts like collaboration and overall quality, the primary focus is on the procedural methods of code review, justifying a high confidence score.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the category, as it centres on structured code review procedures, highlighting shift-left practices and automated validation. It offers clear, actionable steps and tools, focusing on improving code quality and delivery speed. While it briefly mentions broader themes, its main emphasis is on detailed, procedural methods, making it highly relevant."
  },
  "Model": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Model",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 22.0,
    "ai_mentions": 0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 22.0,
    "reasoning": "The content primarily discusses practices around code reviews and a shift-left approach rather than focusing explicitly on conceptual models or frameworks that would align it with the 'Model' category. While it introduces the concept of 'pre-reviewed code', it does not delve into discussions of frameworks or models that underpin this approach, nor does it explore their application in decision-making within Agile or DevOps contexts. Overall, discussions remain more operational and procedural, leading to a low confidence score for the 'Model' category.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Framework",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 35.0,
    "ai_mentions": 0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": null,
    "final_score": 35.0,
    "reasoning": "The content discusses code reviews and automation within a development context, which touches on aspects of DevOps and Agile principles such as collaboration and continuous improvement. However, it does not explicitly address structured frameworks like Scrum or Kanban, nor does it provide a detailed overview or implementation strategies for any specific framework. The primary focus is on the concept of pre-reviewed code rather than on frameworks themselves, leading to a relatively low confidence score for the Framework category.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Tenet",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 45.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 45.0,
    "reasoning": "The content discusses the evolving approach to code reviews in a shift-left context, which aligns somewhat with tenets of Agile and DevOps and emphasizes automation and efficiency. However, it lacks direct discussions of actionable guiding rules or doctrines that are core to tenets. The content provides insights and a new perspective on code reviews but does not extensively outline specific tenets or structured principles inherent in Agile or similar methodologies. As such, while it touches on relevant themes, it lacks the depth and focus on tenets required for a higher confidence score.",
    "level": "Tertiary"
  },
  "Capability": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Capability",
    "calculated_at": "2025-05-01T14:06:22",
    "ai_confidence": 37.0,
    "ai_mentions": 5,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 37.0,
    "reasoning": "The content focuses on code review practices and automation, primarily discussing tools and processes rather than the enduring competencies that support organizational capabilities. While it mentions aspects of enhancing quality and collaboration within teams, it lacks a deep exploration of capability development and integration into organizational culture. The discussion on 'shift-left' practices and automated checks hints at improving capabilities but does not articulate strategies for cultivating enduring competencies required for sustainability and adaptability.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:54:38",
    "ai_confidence": 2.6,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 2.2,
    "ai_intent": 3.0,
    "ai_audience": 6.0,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content focuses entirely on best practices for code reviews and the benefits of automation and shift-left strategies to improve software quality and delivery speed. There are no direct mentions, references, or discussion of Service Level Expectation (SLE), including its definition, measurement, or application within Agile, Scrum, or Kanban contexts. The themes align loosely with predictability and delivery speed but do not address SLE specifically or in concept. No SLE calculation, usage, or stakeholder transparency is discussed. The main audience (developers and quality advocates) somewhat overlaps with those interested in SLE, but all substantive material is about code review practice, not SLE. There is no off-topic satire or outdatedness, so no penalties are applied. The very low confidence score reflects the total absence of SLE-related content.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Ethos",
    "calculated_at": "2025-05-13T21:55:07",
    "ai_confidence": 28.4,
    "ai_mentions": 0.4,
    "ai_alignment": 2.9,
    "ai_depth": 3.3,
    "ai_intent": 3.5,
    "ai_audience": 6.6,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content is focused on pragmatic improvements to code reviewsâ€”automation, shift-left strategies, and streamlined processes. While it mentions Agile and DevOps tools, it doesn't discuss foundational convictions, system-level beliefs, or core ethos underlying practices. There is an indirect implication of values like quality and collaboration, but the main thrust is practical and tools/process-oriented rather than ethos-driven. No penalties apply as the tone and references are current and neutral.",
    "reasoning_summary": "This content centers on practical code review improvements with automation and modern practices. It lacks deep discussion of foundational beliefs or system-level convictions, making its fit with the 'Ethos' category marginal and largely incidental.",
    "level": "Ignored"
  },
  "Customer Focus": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Customer Focus",
    "calculated_at": "2025-05-13T21:55:06",
    "ai_confidence": 35.54,
    "ai_mentions": 0.5,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 4.1,
    "ai_audience": 4.5,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content discusses modern code review practices, emphasizing automation, shift-left strategies, and workflow improvements. While these are relevant to agile and DevOps, the discourse remains centered on internal quality assurance and team effectiveness, rather than explicitly driving or validating customer value or outcomes. There are brief mentions of business alignment in manual reviews, but they lack depth or actionable linkage to measurable customer value. The main audience is technical teams, somewhat overlapping with the customer focus category, but the absence of explicit customer outcome measurement, feedback loops, and product strategy discussions places it mostly outside the bounds of true 'Customer Focus' as defined.",
    "reasoning_summary": "This article focuses on optimizing code reviews for efficiency and quality within teams, with only minor references to business alignment. It lacks explicit, deep ties to delivering measurable customer value or using customer outcomes to guide engineering practicesâ€”so it's only weakly relevant for the 'Customer Focus' category.",
    "level": "Ignored"
  },
  "First Principal": {
    "resourceId": "r2G-NrSIj2k",
    "category": "First Principal",
    "calculated_at": "2025-05-13T21:55:08",
    "ai_confidence": 24.71,
    "ai_mentions": 0.75,
    "ai_alignment": 2.18,
    "ai_depth": 3.12,
    "ai_intent": 2.45,
    "ai_audience": 8.2,
    "ai_signal": 7.73,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content discusses modern code review practices, automation, and shift-left strategies for software quality. However, it never mentions 'first principles' directly, nor does it articulate foundational, immutable truths underpinning Lean, Agile, Scrum, or DevOps. The discussion remains practical, with best practices and tool recommendations, rather than explanatory of irreducible constraints or the foundational logic defining system boundaries. The target audience and focus on DevOps practices create partial overlap with the category's audience, but the content is not anchored to the identification, explanation, or application of first principles; it treats all guidance as flexible and contextually adaptive. No penalties were warranted as the content is current and neutral in tone.",
    "reasoning_summary": "This content gives actionable advice on improving code reviews and automation but never discusses or anchors to first principles. While the audience overlaps with Lean/DevOps practitioners, the material covers best practices, not foundational constraints, so it only weakly fits the 'First Principal' category.",
    "level": "Ignored"
  },
  "Definition of Workflow": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:18",
    "ai_confidence": 23.17,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 2.1,
    "ai_audience": 7.3,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on modern code review practices, automation, and shift-left quality assurance strategies in software development. There are no direct or explicit references to the Definition of Workflow, nor any mention of Kanban, workflow agreements, entry/exit criteria, WIP limits, or policies governing the flow of work. While some themes (like explicit rules for pull requests, process automation) could loosely relate to making work visible and setting standards, these are presented in the context of code quality and automationâ€”not in shaping or defining the value stream's workflow per Kanban/agile theory. The main audience (developers, DevOps teams) does overlap with those discussed in the category, but the Fit and Alignment are weak due to the lack of explicit conceptual links. No penalties are needed, as the content does not contradict or undermine the category principles.",
    "reasoning_summary": "The content discusses code review and quality automation, not the Definition of Workflow per Kanban or agile theory. While the audience is similar, the article doesn't address explicit workflow agreements, policies, or Kanban practices. Relevance to the category is minimal.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:04:35",
    "ai_confidence": 47.956,
    "ai_mentions": 0.4,
    "ai_alignment": 5.6,
    "ai_depth": 4.5,
    "ai_intent": 5.1,
    "ai_audience": 6.3,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content strongly centers on code review practices with a modern, automation-driven, and collaborative DevOps focus. Product development teams are implied, but 'Product Developer' as a specific role and accountability is never directly named. There is no explicit discussion of Product Developer collective accountability, responsibilities, or formal behaviors as defined by frameworks like Scrum. The concepts (cross-functional collaboration, shared standards, shift-left) align in spirit with the Product Developer mindset, but never address the role or accountability structure clearly. Although practices described (quality, collaboration) are relevant to Product Developers, they're portrayed as general team or engineering best practices rather than specific to the Product Developer role and accountability; thus, the fit is moderate but not strong.",
    "reasoning_summary": "This content discusses modern, automated code review practices relevant to collaborative software teams. However, it does not address Product Developers as a defined role or accountability, nor does it detail their specific purpose, structure, or responsibilities. Alignment with the Product Developer category is moderate but not explicit.",
    "level": "Tertiary"
  },
  "Collective Intelligence": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:04:35",
    "ai_confidence": 18.78,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 1.8,
    "ai_intent": 1.5,
    "ai_audience": 7.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content primarily discusses modern code review practices, focusing on automation, pre-reviewed code, shift-left engineering, and process efficiency. While it references collaborationâ€”such as knowledge sharing among human team members and tool-supported code validationâ€”it lacks any direct or conceptual engagement with human-AI collaboration, distributed cognition between AI agents and humans, or the emergence of collective intelligence as defined in the category. References to automated tools (e.g., static analysis, CI/CD) consistently frame AI/automation as passive aids rather than as active, agent-like collaborators, and there is no mention of AI as a team member or as possessing agency. The main audience (software engineers, DevOps, Agile practitioners) aligns with the target, but the substance is almost entirely outside the targeted scope of 'Collective Intelligence.' Thus, while the content is relevant to modern teamwork and automation, it does not match the qualified human-AI partnership, making for a very low confidence score.",
    "reasoning_summary": "While this content discusses automation and team processes in code reviews, it does not address human-AI team collaboration or emergent collective intelligence. It focuses on automation as a tool, not as an AI partner, resulting in very weak relevance to the 'Collective Intelligence' category.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-23T09:04:39",
    "ai_confidence": 6.7,
    "ai_mentions": 0.3,
    "ai_alignment": 0.8,
    "ai_depth": 0.6,
    "ai_intent": 0.5,
    "ai_audience": 2.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content never mentions Objective Key Results, OKRs, or related vocabulary. Its focus is exclusively on code review practices, shift-left strategies, automation, and software quality. There are no explicit or implicit connections to OKR frameworks, outcome-based measurement, John Doerrâ€™s principles, or objective/key result thinking. No topics regarding strategic alignment, measurable outcomes, or the implementation of OKRs within Agile or DevOps are addressed. The intended audience is engineering and DevOps practitioners, but the guidance relates to code workflow improvements and not to goal-setting systems like OKRs. Less than 5% of the content could, by an extreme stretch, connect to outcome-driven improvement, but this is incidental and unfocused. No deductions are needed since the tone and temporal relevance are neutral.",
    "reasoning_summary": "This content is not relevant to Objective Key Results. It focuses entirely on code review, automation, and development workflow, without any reference or alignment to OKR theory, practice, or outcomes.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "r2G-NrSIj2k",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:31",
    "ai_confidence": 54.97,
    "ai_mentions": 1.2,
    "ai_alignment": 6.8,
    "ai_depth": 6.1,
    "ai_intent": 8.0,
    "ai_audience": 8.2,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "There are no direct mentions of 'Agentic Engineering' or its core language, but the content conceptually aligns with practices like developer agency, feedback-driven adaptation, and DevOps-infused craft. It emphasizes automating quality checks, empowering developers, and leveraging modern pipelines, which support human agency and decentralized practices. However, it stops short of explicit discussion on ethical AI, autonomy frameworks, or the philosophical underpinnings of agency, keeping depth moderate. The audience fit (practitioners and engineering leaders) and the focus on continuous improvement and value delivery also align, but the discussion centers on tooling and process improvement more than systemic observability or decision-making autonomy. The overall confidence is moderate, reflecting solid partial alignment without deep engagement with agentic principles.",
    "reasoning_summary": "This content on modern code reviews aligns moderately with Agentic Engineering by promoting developer autonomy, automation, and continuous value delivery. However, it lacks direct discussion of agency, system observability, or ethical AI, so the fit is partial rather than comprehensive.",
    "level": "Tertiary"
  }
}