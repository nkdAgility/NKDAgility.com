{
  "Tool": {
    "resourceId": "Continuous Integration",
    "category": "Tool",
    "calculated_at": "2025-08-07T09:27:58",
    "ai_confidence": 40.5,
    "ai_mentions": 1.1,
    "ai_alignment": 3.8,
    "ai_depth": 3.9,
    "ai_intent": 2.7,
    "ai_audience": 5.6,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content discusses Continuous Integration (CI) as a practice, focusing on its benefits and purpose in development. There are references to automation and integration, yet there are no specific software tools, implementations, or comparative analysis. The main thrust is on methodology, not examining CI servers (e.g., Jenkins, GitHub Actions), selection, implementation, or tool-specific features as required for the 'Tool' category. The target audience and relevance are partially aligned, but discussion is not tool-centered; rather, it's methodology-focused with only indirect implications for tool use.",
    "reasoning_summary": "The content centers on CI as a practice, not specific tooling. It lacks discussion of software tools, features, or selection, so only weakly fits the 'Tool' category. Only indirect, conceptual alignment is present.",
    "level": "Ignored"
  },
  "Accountability": {
    "resourceId": "Continuous Integration",
    "category": "Accountability",
    "calculated_at": "2025-08-07T07:09:59",
    "ai_confidence": 18.05,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 2.4,
    "ai_audience": 5.2,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content thoroughly describes Continuous Integration (CI) and its impact on workflow, collaboration, and product quality. However, it does not discuss accountability in terms of role-based outcome ownership or structural constructs. There are no direct mentions or explicit links to accountability as a system mechanism, nor any exploration of who owns outcomes or how CI relates to accountability in Agile or DevOps contexts. The closest proximity is the implied team collaboration and responsibility for code quality, which is insufficient for category fit.",
    "reasoning_summary": "This content discusses Continuous Integration and its workflow benefits, with no explicit or structural focus on accountability. The fit is weak and mostly tangential, lacking direct or substantial alignment with the Accountability category.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "Continuous Integration",
    "category": "Framework",
    "calculated_at": "2025-08-07T07:10:09",
    "ai_confidence": 36.75,
    "ai_mentions": 0.2,
    "ai_alignment": 2.2,
    "ai_depth": 2.7,
    "ai_intent": 2.5,
    "ai_audience": 5.3,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content thoroughly explains Continuous Integration (CI), presenting it as a software development practice rather than a framework as defined in the category. CI is discussed as a methodology to promote error detection, codebase health, and collaboration but is never described as a structured set of guidelines or rules (i.e., a framework). There are no explicit or implicit mentions of frameworks, their principles, comparisons, or how CI fits as a framework within Agile, DevOps, or Lean. While the discussion is relevant to practitioners interested in modern development practices, it is not aligned with the core meaning of ‘Frameworks’ in the context of Agile methodologies provided in the classification instructions.",
    "reasoning_summary": "The content focuses on CI as a practice, not as a framework. There are no framework principles, comparisons, or adaptations discussed, so the fit with the Framework category is weak and partial at best.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "Continuous Integration",
    "category": "Tenet",
    "calculated_at": "2025-08-07T07:09:59",
    "ai_confidence": 76.6,
    "ai_mentions": 3.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.8,
    "ai_intent": 8.2,
    "ai_audience": 7.6,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content presents Continuous Integration as a foundational element of modern software teams, emphasizing actionable principles: frequent integration, early error detection, automation, feedback loops, and continuous improvement. These map closely to core tenets described in Agile and DevOps, especially the importance of feedback and continuous improvement at a team and organizational level. However, while the content heavily details practices and supporting culture, it uses 'tenet'-like language only implicitly rather than directly naming them as tenets or doctrines. There are few or no explicit references to the term 'tenet,' but the alignment with tenet definitions/concepts is strong, particularly as CI is often discussed as a prescriptive norm in Agile/DevOps. The depth is substantial, discussing not only what CI is, but how it shapes team behavior and organizational outcomes. The intended audience (teams, practitioners) fits the category, with focused and relevant content throughout. No penalties are applied as the content is current and supportive.",
    "reasoning_summary": "Content closely aligns with 'Tenet' by discussing CI as an actionable guiding rule shaping team behavior and culture, though it lacks explicit 'tenet' terminology. Fit is strong due to its prescriptive, principle-driven orientation within Agile/DevOps.",
    "level": "Secondary"
  },
  "Method": {
    "resourceId": "Continuous Integration",
    "category": "Method",
    "calculated_at": "2025-08-07T09:28:07",
    "ai_confidence": 76.25,
    "ai_mentions": 3.6,
    "ai_alignment": 8.2,
    "ai_depth": 7.8,
    "ai_intent": 8.0,
    "ai_audience": 7.4,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content covers Continuous Integration (CI) as a structured development practice, describing step-by-step how teams merge code, automate builds/tests, and address errors early. It aligns with key elements of 'Method,' focusing on systematic approaches like frequent integration and feedback cycles. While CI as a concept overlaps with tools, this content emphasizes procedural aspects over technical tooling, keeping the focus primarily on method. There is limited direct mention of 'method' or related terminology and the discussion is confined to CI, not connecting explicitly to broader frameworks or comparing methods, which reduces the 'mentions' score. The writing addresses practitioners interested in structured team practices, fulfilling audience and intent but with moderate depth since it does not provide step-by-step process detail or compare alternative methods.",
    "reasoning_summary": "The content describes CI as a structured practice, discussing its procedures and impacts. It strongly fits the 'Method' category by detailing process and intent, though depth and explicit method labeling are mildly limited. Partial but clear fit.",
    "level": "Secondary"
  },
  "Strategy": {
    "resourceId": "Continuous Integration",
    "category": "Strategy",
    "calculated_at": "2025-08-07T11:38:45",
    "ai_confidence": 33.675,
    "ai_mentions": 0.7,
    "ai_alignment": 3.0,
    "ai_depth": 3.8,
    "ai_intent": 2.6,
    "ai_audience": 4.2,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content describes Continuous Integration (CI) as a workflow practice, focusing on code merging, error detection, and technical debt reduction. While it mentions long-term success and team collaboration—terms sometimes associated with strategic outcomes—it predominantly addresses operational and tactical benefits without connecting CI directly to strategic planning, alignment with organizational objectives, or high-level decision-making. The absence of explicit strategic language or frameworks, such as aligning with business vision or discussing leadership direction, signals a misalignment with the 'Strategy' category. The intent is to inform about effective technical practice rather than guide strategic choices.",
    "reasoning_summary": "The content focuses on CI as a technical practice, with minimal connection to strategic planning or organizational alignment. It only partially and implicitly fits the 'Strategy' category, as its main emphasis is operational, not strategic.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "Continuous Integration",
    "category": "Practice",
    "calculated_at": "2025-08-07T09:28:06",
    "ai_confidence": 93.4,
    "ai_mentions": 9.2,
    "ai_alignment": 9.6,
    "ai_depth": 9.4,
    "ai_intent": 9.4,
    "ai_audience": 8.8,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content centers on Continuous Integration (CI) as a repeatable, actionable technique—matching the definition of 'Practice.' CI is directly named, explained in context, and explored in depth: frequent merges, automated tests, early error detection, collaboration, code quality, and continuous improvement. All information is relevant and on-topic. The primary audience is clearly practitioners/dev teams. No outdated methods or negative tone present, so no penalties applied. Slight variation in scores accounts for the absence of implementation examples or specific step-by-step guidance.",
    "reasoning_summary": "This content thoroughly discusses Continuous Integration as an actionable team practice, directly aligning with the 'Practice' category. Intent, topics, and audience all match, with no significant misfit.",
    "level": "Primary"
  },
  "Philosophy": {
    "resourceId": "Continuous Integration",
    "category": "Philosophy",
    "calculated_at": "2025-08-07T07:09:59",
    "ai_confidence": 28.55,
    "ai_mentions": 0.4,
    "ai_alignment": 3.6,
    "ai_depth": 2.1,
    "ai_intent": 2.3,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content primarily describes the practice of Continuous Integration, focusing on its benefits and mechanics (the 'how' and 'what'), not the philosophical underpinnings (the 'why'). There are passing references to team culture and continuous improvement but these are not deeply rooted in theory or discussed from a foundational beliefs perspective. There is almost no explicit mention of broader philosophical frameworks, principles, or foundational values. The target audience (developers/teams) partially matches philosophy's strategists or org-level audience, and the content is on topic but shallow from a philosophy perspective. The signal is high, but conceptual alignment and depth are limited.",
    "reasoning_summary": "Content discusses CI as a practice and its benefits, not the underlying philosophies. Minimal alignment with philosophical foundations; coverage remains procedural and lacks explicit theory or foundational belief exploration. Only a partial fit.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "Continuous Integration",
    "category": "Observability",
    "calculated_at": "2025-08-07T11:38:21",
    "ai_confidence": 12.4,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.6,
    "ai_intent": 0.8,
    "ai_audience": 6.1,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content discusses practices and benefits of Continuous Integration (CI) in Agile/DevOps but makes no direct mention of observability, nor does it address metrics, logs, traces, or tools for insight into system states. While there are tangential overlaps (e.g., fostering team collaboration, proactive issue resolution), the main themes are focused on CI concepts, automation, and integration—not on observability principles or implementation. The target audience aligns with technical practitioners, but the text’s depth and intent are not devoted to observability as defined.",
    "reasoning_summary": "The content focuses on Continuous Integration practices, not observability. There is limited conceptual overlap, but observability is not directly or thoroughly addressed. It does not fit the assigned category.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "Continuous Integration",
    "category": "Capability",
    "calculated_at": "2025-09-05T03:32:27",
    "ai_confidence": 62.25,
    "ai_mentions": 2.6,
    "ai_alignment": 7.9,
    "ai_depth": 7.6,
    "ai_intent": 6.5,
    "ai_audience": 7.0,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content describes CI as a key software development practice, highlighting its benefits for predictability, collaboration, and sustaining a healthy codebase. While CI is often considered a technique, the text frames it as enabling enduring team competencies and a culture of improvement, which aligns with 'Capability.' However, there is minimal explicit mention of 'capability' itself, and the focus is primarily on describing CI's value as a foundational enabler, which suggests a partial but not complete fit with the category definition.",
    "reasoning_summary": "The content positions CI as enabling team competencies and improvement, partially aligning with 'Capability,' but lacks direct category mention and focuses mostly on the practice itself. The thematic fit is moderate, not absolute.",
    "level": "Secondary"
  },
  "Model": {
    "resourceId": "Continuous Integration",
    "category": "Model",
    "calculated_at": "2025-08-07T11:38:46",
    "ai_confidence": 36.7,
    "ai_mentions": 1.5,
    "ai_alignment": 3.2,
    "ai_depth": 3.5,
    "ai_intent": 4.3,
    "ai_audience": 4.9,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content thoroughly covers Continuous Integration (CI) as a software development practice, focusing on build automation, code quality, collaboration, and team efficiency. However, it does not frame CI as a conceptual model or explicitly reference models, frameworks, or systems thinking as required by the category. There are no comparisons or discussions of CI as a framework or model for organisational analysis; instead, the narrative is about practice adoption, benefits, and process. The intended audience (development teams, Agile practitioners) partially overlaps, but the alignment and depth towards 'Model' as defined are limited.",
    "reasoning_summary": "Content describes CI as a best practice, not as a conceptual model or framework. Intent, themes, and mentions do not directly focus on models or systems thinking as defined by the category; fit is partial and mostly indirect.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "Continuous Integration",
    "category": "Principle",
    "calculated_at": "2025-08-07T09:27:58",
    "ai_confidence": 76.95,
    "ai_mentions": 5.7,
    "ai_alignment": 8.4,
    "ai_depth": 7.9,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 77.0,
    "reasoning": "The content explicitly discusses Continuous Integration as a practice, repeatedly mentioning its principles such as early error detection, frequent merges, and continuous improvement. Alignment is high as CI reflects actionable practices in Agile/DevOps, fostering collaboration and value delivery. Depth is substantial, exploring impacts on code quality, team dynamics, and adaptability. The intent is focused on explaining CI's foundational role and impact—properly aligned with the Principles category rather than just values or tools. The audience is practitioners/teams, matching the target. High signal-to-noise—nearly all content is relevant. No penalties applied as content is up-to-date and consistent with the category's framing.",
    "reasoning_summary": "The content fits the 'Principle' category well due to explicit discussion of actionable, guiding rules for development (CI), strong alignment with Agile/DevOps principles, and a focused, practitioner-oriented explanation.",
    "level": "Secondary"
  },
  "Artifact": {
    "resourceId": "Continuous Integration",
    "category": "Artifact",
    "calculated_at": "2025-08-07T06:12:01",
    "ai_confidence": 11.25,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 0.8,
    "ai_audience": 2.1,
    "ai_signal": 1.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content discusses Continuous Integration as a practice and process, emphasizing collaboration, automation, and quality, but does not mention or focus on artifacts as formal representations of work. There is no exploration of structure, purpose, or types of Agile/Scrum artifacts. The fit is minimal, as CI is an enabling practice rather than an artifact itself. No penalties were needed as the content is not outdated or critical, just misaligned.",
    "reasoning_summary": "Content centers on the practice of Continuous Integration, not on artifacts or their structure and role. Mentions, alignment, and depth are minimal and do not fit the category definition. No evidence of artifact-focused discussion.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "Continuous Integration",
    "category": "Discipline",
    "calculated_at": "2025-08-07T11:38:46",
    "ai_confidence": 56.21,
    "ai_mentions": 2.1,
    "ai_alignment": 7.8,
    "ai_depth": 5.6,
    "ai_intent": 5.9,
    "ai_audience": 8.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content focuses primarily on Continuous Integration as a practice and its benefits (team collaboration, code quality, technical debt reduction). While it links CI to continuous improvement and team culture—core aspects of maturity within disciplines—it doesn't explicitly explore CI as part of the systemic evolution, governance, or the maturation of fields like Agile, DevOps, or Lean. The discussion is mostly at the practice/technique level, with limited reference to shared principles or the broader conceptual structures that define a 'discipline.' Audience is well-aligned (development professionals), and most of the content is relevant, but explicit discipline-level framing is lacking.",
    "reasoning_summary": "Content explains CI as a practice with some mention of underlying principles and team impact, but it mostly describes implementation—not the systemic, principled evolution central to a formal discipline. Fit is partial and practice-focused.",
    "level": "Tertiary"
  },
  "Decision Making": {
    "resourceId": "Continuous Integration",
    "category": "Decision Making",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 26.3,
    "ai_mentions": 0.8,
    "ai_alignment": 2.5,
    "ai_depth": 2.9,
    "ai_intent": 2.4,
    "ai_audience": 7.2,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content discusses Continuous Integration, emphasizing its role in software quality, collaboration, and productivity. However, it does not directly mention decision making or evidence-based practices as defined in the category. Conceptually, there is only a tangential link: while CI can indirectly influence decision quality by providing fast feedback and improved codebase health, the article does not discuss structured methodologies, data-driven analysis, prioritization frameworks, or empirical decision processes. The depth stays surface-level with respect to decision making, focusing instead on process benefits. The intent is more about advocating for CI as a development practice than facilitating structured organizational decisions. Audience alignment and signal are relatively high, as the article is suitable for practitioners potentially interested in decision-enhancing practices, and the content is largely focused without irrelevant tangents. No penalties applied, as the content is current and not critical or satirical. Overall, confidence is low because the core themes, terminology, and explicit purpose do not fit the category's rigorous definition.",
    "level": "Ignored"
  },
  "Collaboration Tools": {
    "resourceId": "Continuous Integration",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-06T20:57:25",
    "ai_confidence": 32.49,
    "ai_mentions": 1.3,
    "ai_alignment": 4.2,
    "ai_depth": 4.1,
    "ai_intent": 3.1,
    "ai_audience": 8.9,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses on Continuous Integration (CI) as a software development practice, highlighting its benefits for code quality, early error detection, and workflow efficiency. While it briefly mentions that CI can 'enhance collaboration among team members,' the primary focus is on automation, development cadence, and technical processes rather than tools designed specifically for team collaboration per se. There is no explicit mention or discussion of any collaboration tools such as Slack, Jira, or Trello. As such, direct mentions are minimal, and the conceptual alignment with the 'Collaboration Tools' category is tangential at best. The discussion of collaboration is more about process effects than about use or selection of actual tools. The audience is likely software development practitioners which overlaps, but the signal is somewhat diluted by the broader context of CI itself. Scoring is therefore low across direct mentions, alignment, depth, and intent, but somewhat higher for audience and signal since it remains relevant to Agile teams.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "Continuous Integration",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-06T20:57:25",
    "ai_confidence": 68.55,
    "ai_mentions": 2.2,
    "ai_alignment": 7.8,
    "ai_depth": 6.6,
    "ai_intent": 7.0,
    "ai_audience": 9.3,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content thoroughly explains Continuous Integration (CI) as a practice and its benefits within software development teams. Direct mentions of 'Organisational Agility' are absent, as the focus is on CI itself; hence, the low mentions score. However, the conceptual alignment is relatively strong (7.8): CI's emphasis on frequent code integration, rapid feedback, and a culture of continuous improvement aligns with principles that foster organisational agility, although this connection isn't made explicitly. The depth of discussion (6.6) delves into CI's mechanics, culture, and collaborative aspects, but doesn't fully expand to broader organisational transformation or frameworks. The intent (7.0) is to inform practitioners on development best practices—tangentially supporting organisational agility but not directly focused on it. Audience alignment (9.3) is high as the content targets practitioners whose work directly impacts organisational adaptability. Signal-to-noise ratio (8.5) is also strong since the piece is focused and on-topic without filler. No penalties were applied since the content is current, not satirical or critical, and does not reference outdated practices. The final weighted confidence reflects that while CI is an enabling practice for agility, the piece would need more explicit discussion of organisational structures, culture, or case studies to score higher in this category.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "resourceId": "Continuous Integration",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-06T20:57:21",
    "ai_confidence": 2.55,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.4,
    "ai_intent": 2.0,
    "ai_audience": 3.0,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content is focused entirely on Continuous Integration (CI) practices, with no direct mentions of Backlog Refinement or related Agile/Scrum backlog practices. There is minimal conceptual overlap as both CI and Backlog Refinement concern healthy development processes and team collaboration, but their practices, techniques, and objectives are distinct. Depth is low as the discussion never covers backlog techniques, prioritization, or story definition. The intent is informative about CI, not backlog refinement or Agile backlog practices. The content may be of moderate interest to similar technical audiences, which accounts for a slightly higher audience score. Signal-to-noise is low regarding the target category since all content is off-topic for Backlog Refinement. No penalties were necessary as nothing is outdated or satirical, but scores are very low because the subject almost completely diverges from the definition and scope of Backlog Refinement.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "Continuous Integration",
    "category": "Scrum Team",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 9.0,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.7,
    "ai_intent": 0.4,
    "ai_audience": 3.6,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content solely focuses on Continuous Integration (CI) as a software development practice for improving codebase health, collaboration, and delivery speed. There are no explicit mentions of 'Scrum Team', nor are there references to Scrum-specific structures (Scrum Master, Product Owner, Developers), team-level accountabilities per the Scrum Guide, or any unique characteristics of Scrum Teams versus generic software teams. The discussion is generic around team practices and does not address the structural or purpose-driven aspects defining the Scrum Team accountability. While some themes (collaboration, iteration, value delivery) could appear within Scrum Teams, none are linked directly to the Scrum framework or its guide-based definition of accountability. Thus, the confidence score is almost zero, with all dimension scores remaining very low and no penalty adjustments necessary.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "Continuous Integration",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 41.71,
    "ai_mentions": 1.2,
    "ai_alignment": 4.3,
    "ai_depth": 4.9,
    "ai_intent": 4.5,
    "ai_audience": 6.3,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content focuses on Continuous Integration (CI) and its positive impact on development teams, emphasizing collaboration, code health, and continuous improvement. However, there is only marginal alignment to Agile Strategy as defined by the category: while CI supports agility and can contribute to enabling Agile strategy, the discussion does not address strategic alignment, organizational vision, or the integration of agile principles into strategic planning and decision-making at scale. Mentions of topics like adaptability and continuous delivery are present but mostly in a technical or team workflow context, without exploring leadership roles or organizational strategy. The main intent is to describe and advocate for CI practices, targeting more technical audiences (developers, perhaps team leads) rather than executives or strategists. Overall, the signal-to-noise ratio is high (CI is discussed directly), but the strategic context is minimal and lacks depth relative to the category definition.",
    "level": "Tertiary"
  },
  "Current Value": {
    "resourceId": "Continuous Integration",
    "category": "Current Value",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 26.7,
    "ai_mentions": 0.4,
    "ai_alignment": 2.9,
    "ai_depth": 2.7,
    "ai_intent": 3.4,
    "ai_audience": 7.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content discusses Continuous Integration (CI) as a practice to improve software development workflow, focusing primarily on rapid feedback, codebase health, collaboration, and proactive management of technical debt. Direct mentions of 'Current Value' are completely absent, hence a very low score for mentions. Conceptually, the material only marginally aligns with the category, since CI may contribute to delivering value, but the piece never references Evidence-Based Management, measurement of value, or actual metrics like customer satisfaction, revenue impact, or tangible performance feedback. Depth of discussion is limited to general benefits of CI, with no exploration of indicators, analytical techniques, or comparisons to Current Value. The intent is to inform about CI's role in development, not specifically as it pertains to measuring or maximising Current Value per EBM. The intended audience (teams and technical leaders) loosely overlaps with EBM's target, so audience alignment is moderate-high. Signal is mostly on-topic about CI, but off-topic relative to Current Value. No penalties apply as the content is current and not antagonistic. Overall, the confidence score is low due to minimal alignment and relevance to the 'Current Value' category, with most evidence pointing to CI as a development practice rather than as a focal area for measuring delivered value in the EBM framework.",
    "level": "Ignored"
  },
  "Scrum": {
    "resourceId": "Continuous Integration",
    "category": "Scrum",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 19.45,
    "ai_mentions": 0.3,
    "ai_alignment": 2.8,
    "ai_depth": 2.2,
    "ai_intent": 2.6,
    "ai_audience": 6.2,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content is exclusively focused on Continuous Integration (CI) as a development practice. There is no direct mention of Scrum, nor does the content explicitly reference any of the Scrum roles, events, or artifacts. While there are some conceptual overlaps with Agile and continuous improvement principles, these are generic and not specifically tied to the Scrum framework. The depth of discussion is substantial regarding CI, but entirely absent regarding Scrum or its practices. The target audience (developers and teams working on software delivery) partially overlaps with Scrum practitioners, but the intent is to inform about CI rather than Scrum. The signal-to-noise ratio is reasonable (content is clear and focused), but the focus is not on Scrum, leading to low confidence. No penalties were applied as the content is neither outdated nor satirical/contradictory. Overall, the content provides almost no justification for classifying it under Scrum, hence the very low confidence score.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "Continuous Integration",
    "category": "Product Validation",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 10.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.0,
    "ai_intent": 0.8,
    "ai_audience": 2.0,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content is centered on Continuous Integration (CI), discussing its benefits for software development efficiency, code quality, and team dynamics. There are no direct or indirect references to Product Validation methodologies such as user testing, prototypes, customer feedback loops, or market fit assessment. The core concepts of CI are focused on internal development workflows and automation, not on validating product ideas with actual users or gathering actionable market feedback, which are required for the Product Validation category. The audience (software engineers, DevOps) only partially overlaps with the category’s target (product teams and validation practitioners), and CI is at best tangential to product validation. Therefore, the confidence score is extremely low and reflects only the smallest relevance due to tangential alignment in fostering smoother product development, but not actual product validation.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "Continuous Integration",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-06T20:57:25",
    "ai_confidence": 30.27,
    "ai_mentions": 0.2,
    "ai_alignment": 3.4,
    "ai_depth": 2.9,
    "ai_intent": 3.7,
    "ai_audience": 6.3,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI), describing its benefits, development practices, and team collaboration. There are no direct mentions of Site Reliability Engineering (SRE), nor any SRE-specific terminology such as SLOs, SLIs, SLAs, incident response, or capacity planning. Conceptually, CI is important to software quality, but the alignment with SRE is indirect; SRE may use CI in its workflow, but this content neither discusses reliability in production systems specifically nor references SRE principles as defined by Google. The depth is moderate regarding CI but does not extend into SRE territory. The intent is informative for a technical practitioner audience, but the main purpose is to improve code integration and quality, not production system reliability. The signal-to-noise ratio is strong for CI, but the content is largely off-topic for SRE. No penalties were applied since the content is not outdated or satirical. Overall, the confidence reflects that, while some thematic overlap exists, the content does not fit the SRE category directly or in depth.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "Continuous Integration",
    "category": "Company as a Product",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 19.71,
    "ai_mentions": 0.12,
    "ai_alignment": 2.65,
    "ai_depth": 2.78,
    "ai_intent": 1.03,
    "ai_audience": 7.08,
    "ai_signal": 9.23,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI) as a development practice. There is no explicit mention of 'Company as a Product' or any related terminology. Conceptual alignment is weak: while there are surface similarities—such as fostering continuous improvement and collaboration—these are situated squarely within software engineering, not organisational design or company-level strategy. The depth is moderate only for CI itself; there are no extensions to company-wide practices or organisational evolution. The intent and purpose are oriented toward informing technical teams about the benefits of CI in development workflows, not about treating the company as a product. The audience is clearly technical—software developers and engineering teams—rather than strategists or executives contemplating organisational frameworks. The content is focused and free from noise, aligning well with technical best practices but not the CaaP category. No penalties were applied since there are no outdated references or contradictory framings. Overall, there is some minor conceptual overlap in referencing continuous improvement, but not enough to warrant a high confidence score for classification as 'Company as a Product.'",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "Continuous Integration",
    "category": "Kanban",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 4.3,
    "ai_mentions": 0.1,
    "ai_alignment": 0.3,
    "ai_depth": 0.2,
    "ai_intent": 0.6,
    "ai_audience": 7.2,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content is exclusively about Continuous Integration (CI) and does not mention Kanban directly or indirectly. There are no explicit references to Kanban practices such as visualising work in progress, limiting WIP, or any Kanban-specific metrics and feedback loops. While the topic is tangentially relevant to Agile and Lean practitioners—who may also use Kanban—the actual concepts and core ideas discussed are not aligned with Kanban methodology. Depth and alignment scores are very low due to a complete lack of Kanban focus. Intent and audience are slightly higher because the target audience could overlap (technical teams interested in process improvement), but this is incidental. Signal-to-noise ratio is medium, as the content is focused but not on the evaluated category. No penalties were necessary as the content is neither outdated nor off-tone. The final confidence score correctly reflects the near-total absence of Kanban relevance.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "Continuous Integration",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 46.53,
    "ai_mentions": 0.5,
    "ai_alignment": 5.8,
    "ai_depth": 4.3,
    "ai_intent": 7.0,
    "ai_audience": 7.5,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content focuses solely on Continuous Integration (CI) as a practice for software development teams, emphasizing frequent merges, early detection of errors, collaborative culture, and continuous improvement. There are no direct or explicit mentions of 'Empirical Process Control' or its key topics (transparency, inspection, adaptation, Agile/Scrum empirical foundations). While the CI discussion indirectly touches on empirical ideas—such as feedback, adaptation, team learning, and continuous improvement—it never contextualizes these within the formal framework of Empirical Process Control as defined in agile methodologies. The depth is moderate, exploring benefits and mechanisms of CI, but not connecting to theory, origins, or empirical process control’s broader concepts. The primary intent is informative and supportive for practitioner audiences (developers, teams), moderately aligned with the expected audience. Nearly all content is signal, focused on CI, with little to no filler or tangential material. Based on the outlined strict criteria, the ties to 'Empirical Process Control' are mostly implicit and do not reach high confidence. No penalties were applied as the content is current, on-topic for modern practice, and does not contradict empirical approaches—it simply does not engage with them as defined by the category.",
    "level": "Tertiary"
  },
  "Agile Leadership": {
    "resourceId": "Continuous Integration",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 32.45,
    "ai_mentions": 0.2,
    "ai_alignment": 3.8,
    "ai_depth": 2.9,
    "ai_intent": 3.1,
    "ai_audience": 6.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses primarily on technical practices related to Continuous Integration (CI), such as frequently merging code, error detection, and maintaining a healthy codebase. While there are tangential references to collaboration, continuous improvement, and team empowerment, these are framed within the context of software development practices rather than Agile leadership principles. There is no direct mention or deep exploration of Agile leadership roles, strategies, servant leadership, or organizational transformation. The audience appears to be developers or practitioners, not leaders or executives. While some alignment in themes exists—particularly around team improvement and adaptability—the discussion does not delve into leadership responsibilities or cultural transformation. The signal-to-noise ratio is relatively high because the content stays on topic, though the topic itself is not well aligned with Agile Leadership. No penalties were applied, as the content is neither outdated nor contradictory to Agile principles. The resulting confidence score accurately reflects a weak fit due to limited conceptual and intentional alignment with Agile Leadership.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "Continuous Integration",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 54.22,
    "ai_mentions": 1.5,
    "ai_alignment": 5.1,
    "ai_depth": 5.5,
    "ai_intent": 6.9,
    "ai_audience": 8.0,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content is focused entirely on Continuous Integration (CI) and outlines its benefits for team collaboration, code quality, and development workflow. However, there are no direct mentions of 'Digital Transformation,' nor is there explicit discussion connecting CI to strategic organizational transformation, business agility, or enterprise-level outcomes as defined in the category. The conceptual alignment is partial; CI is a digital tool and practice that may enable broader digital transformation, yet the content remains focused on software development best practices rather than the wider business transformation context. The depth of discussion is good for CI itself but does not branch into other aspects relevant to digital transformation (such as cultural change, frameworks, or metrics outside software teams). The intent of the piece is informative and supportive for practitioners aiming to improve technical processes, not strategy leaders focused on transformative change. Audience alignment is fairly strong for technical teams but less so for digital transformation strategists or executives. Signal-to-noise ratio is high, as the content is focused and relevant to its topic. No penalties were applied as the content is up-to-date, non-contradictory, and professionally presented. The confidence score reflects the relevance of CI to digital transformation initiatives, but the lack of explicit framing limits overall confidence.",
    "level": "Tertiary"
  },
  "Market Adaptability": {
    "resourceId": "Continuous Integration",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 85.86,
    "ai_mentions": 5.7,
    "ai_alignment": 9.4,
    "ai_depth": 8.9,
    "ai_intent": 8.2,
    "ai_audience": 8.7,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content discusses Continuous Integration (CI), emphasizing its roles in frequent code merging, automated testing, early error detection, enhancing collaboration, and enabling continuous improvement. These ideas conceptually align well with the principles of Market Adaptability—particularly in promoting agility, resilience, and responsiveness to changing requirements, all through DevOps practices (a core topic under the definition). The depth extends beyond simple definitions and explores impacts on workflow, code quality, and team dynamics, directly referencing adaptability (e.g., 'teams can iterate quickly and adapt to changing requirements' and 'respond to customer needs effectively'). While the term 'Market Adaptability' is not mentioned directly, explicit references to adaptability and related practices are substantial; thus, the mentions score is moderate. The content's purpose is informative and targeted at technical practitioners and teams, aligning with the category's audience. The writing remains focused and pertinent throughout, with negligible off-topic material. There are no outdated practices, criticisms, or contradictions, so no penalties are warranted. The resulting confidence score proportionately reflects strong conceptual and applied alignment, but is somewhat limited by the lack of explicit category naming or high-level strategic framing.",
    "level": "Primary",
    "reasoning_summary": "This content fits the category well because it explores how Continuous Integration supports adaptability, agility, and responsiveness—key aspects of Market Adaptability. While it doesn’t use the exact term, it clearly links DevOps practices to improved team performance and the ability to respond to change, making it highly relevant for technical audiences interested in adaptability."
  },
  "Daily Scrum": {
    "resourceId": "Continuous Integration",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 2.75,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.8,
    "ai_intent": 1.7,
    "ai_audience": 4.6,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content solely focuses on Continuous Integration (CI) and never mentions the Daily Scrum, the Scrum framework, or related Scrum events. There are no explicit or implicit references to the structure, purpose, or practices of the Daily Scrum. The 'mentions' score is nearly zero, reflecting the absence of any direct naming. Conceptual alignment and depth are extremely low; although the article discusses team collaboration and communication—which are also valued in Daily Scrums—they are discussed only within the context of CI workflows, not Scrum ceremonies. The intent is to inform about CI, not to address Daily Scrum practices or objectives. The audience could partially overlap (technical teams working in agile environments), but the entire discussion centers on CI practices, not Scrum ceremonies, which is why audience and signal scores are somewhat higher but still limited by off-target content. No penalties are applied as the content is not outdated or oppositional. The final confidence score is very low, accurately reflecting that the content does not fit under the 'Daily Scrum' category.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "Continuous Integration",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-06T20:57:25",
    "ai_confidence": 19.17,
    "ai_mentions": 0.25,
    "ai_alignment": 2.35,
    "ai_depth": 2.75,
    "ai_intent": 2.65,
    "ai_audience": 6.15,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content is exclusively about Continuous Integration (CI), which focuses on frequent code merging, automation of build/test processes, and reducing integration problems. There is no explicit mention of Value Stream Management (mentions: 0.25). Conceptually, while CI is an enabling practice that may be part of a value stream, the discussion does not connect to core Value Stream Management themes, such as mapping/analyzing value streams, optimizing flow, or organizational alignment with customer outcomes (alignment: 2.35). The depth is moderate for CI but does not extend beyond describing CI practices, lacking substantive discussion of value stream concepts (depth: 2.75). The intent centers around explaining CI benefits, with no direct relevance to Value Stream Management's strategic goals (intent: 2.65). The audience overlaps somewhat, as CI practitioners may be interested in value stream discussions, but the content is technical and not aimed at strategists or those optimizing business agility (audience: 6.15). The majority of content is focused on CI and contains little unrelated material (signal: 7.6), but this focus is not on Value Stream Management. No penalties were applied, as there are no outdated or contradictory statements. Consequently, the confidence score is low, reflecting that the content does not directly address or thoroughly support the Value Stream Management category.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "resourceId": "Continuous Integration",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 6.1,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.0,
    "ai_intent": 1.0,
    "ai_audience": 1.8,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI) in the context of software development. There are no direct mentions or references to Value Stream Mapping (VSM), nor is there any discussion of Lean principles, workflow visualization, or waste identification/analysis, which are core to VSM. The content's main themes revolve around CI practices, early error detection, development efficiency, and codebase health. Minimal conceptual alignment exists only on a vague process improvement level, but there is no substantial correlation with VSM methodologies or principles. The target audience (software developers, technical teams) overlaps somewhat with VSM's practitioner audience, but the focus and intent are unrelated. The 'signal-to-noise' ratio is low for VSM relevance since all information is off-topic. No penalties were applied as the content is current and does not contradict the category's framing. The extremely low confidence score (6.1) reflects the lack of category fit.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "resourceId": "Continuous Integration",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 73.81,
    "ai_mentions": 3.2,
    "ai_alignment": 8.9,
    "ai_depth": 7.6,
    "ai_intent": 8.2,
    "ai_audience": 8.7,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content focuses on Continuous Integration (CI), which is a key technical practice within agile environments and DevOps, closely related to the technical leadership role of fostering collaborative, high-performing teams. It touches on technical debt reduction, enhancement of team collaboration, and empowerment in product development—all core concerns of technical leadership. However, there are no direct mentions of 'Technical Leadership' or explicit references to leaders guiding teams, resulting in a low 'Direct Mentions' score. The 'Conceptual Alignment', 'Depth', 'Intent', 'Audience', and 'Signal-to-Noise' scores are strong because the content is relevant, informative, and targets practitioners likely to be in or aspiring toward technical leadership. Depth is somewhat limited, as it doesn’t deeply explore leadership-specific techniques or dynamics, but aligns well by linking CI with team productivity, morale, and delivery success. There are no outdated references or negative tone, so no penalties are applied. The final confidence reflects solid category fit, somewhat limited by lack of explicit leadership framing.",
    "level": "Secondary",
    "reasoning_summary": "This content is a good fit for the category as it explores how Continuous Integration supports team collaboration, productivity, and product quality—key interests for technical leaders. While it doesn’t directly discuss leadership roles or strategies, its focus on practices that empower teams and reduce technical debt makes it highly relevant for those in or aspiring to technical leadership positions."
  },
  "Time to Market": {
    "resourceId": "Continuous Integration",
    "category": "Time to Market",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 50.92,
    "ai_mentions": 2.4,
    "ai_alignment": 5.8,
    "ai_depth": 5.9,
    "ai_intent": 4.3,
    "ai_audience": 7.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 51.0,
    "reasoning": "The content focuses almost entirely on Continuous Integration (CI), describing its process, benefits, and cultural impacts. There is minimal to no explicit mention of 'Time to Market', nor are any associated metrics (like lead or cycle time) directly discussed. Direct mentions are low, as the content does not use the term or talk about it overtly. Conceptual alignment is moderate; although CI can indirectly support Time to Market (by reducing integration friction and enabling faster delivery), the content does not frame its discussion in terms of speed to market or explicitly tackle process optimization for timely delivery. Depth is similarly moderate, as the exploration of CI is substantive but does not go beyond surface implications in relation to Time to Market. The main intent is to inform about CI benefits in general, rather than the speed of value delivery. The audience is well-aligned, targeting practitioners involved in modern development. Signal-to-noise is fair, as nearly all content is relevant to CI but not directly to Time to Market. No penalties are warranted, as the content is neither outdated nor critical of the category. Overall, the confidence reflects that while CI is foundational for practices that improve Time to Market, this piece does not engage with the category in a focused or explicit way.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "resourceId": "Continuous Integration",
    "category": "Lead Time",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 8.75,
    "ai_mentions": 0.1,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 2.0,
    "ai_audience": 2.5,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses exclusively on Continuous Integration (CI) as a practice and its impact on code quality, collaboration, and sustainable delivery. There is no mention—direct or indirect—of Lead Time, its measurement, or related observability metrics. The conceptual alignment is minimal since the article does not discuss time-to-delivery, process efficiency measurement, or techniques for tracking Lead Time. Depth is also very low as there is no exploration of Lead Time or related optimization strategies. The primary intent is to inform about CI, not Lead Time. The audience (developers/software teams) loosely overlaps with those interested in Lead Time, resulting in a slightly higher audience score, but only because of indirect relevance. The content is well-focused, but the focus is on CI, not Lead Time, so the signal is only slightly above zero for general process optimization context. No penalties were necessary; the content is neither outdated nor oppositional, just unrelated.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "Continuous Integration",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 33.75,
    "ai_mentions": 0.1,
    "ai_alignment": 3.3,
    "ai_depth": 3.5,
    "ai_intent": 4.7,
    "ai_audience": 7.4,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content discusses Continuous Integration (CI) and its role in improving software development. There are no direct mentions of Lean Product Development or explicit references to Lean principles, which leads to a very low 'mentions' score. Conceptually, while CI supports practices of efficiency, continuous improvement, and rapid feedback—concepts that align with Lean thinking—the discussion is not framed within the Lean Product Development context and omits waste reduction and key Lean terminology. Depth of discussion is moderate regarding CI itself but shallow in terms of Lean; there are no references to Lean tools or case studies. The intent is focused on promoting CI for better software delivery, which only tangentially fits Lean's intent, resulting in a slightly below mid 'intent' score. The audience is largely technical (developers, possibly product teams), which partially overlaps with Lean Product Development’s audience, but the signal-to-noise ratio is high since the content is clear and focused on its topic, just not on Lean Product Development. Since no penalties were needed (the information is neither outdated nor contradictory), the total score reflects a weak but not non-existent alignment to the category.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "resourceId": "Continuous Integration",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 38.45,
    "ai_mentions": 1.1,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 3.2,
    "ai_audience": 4.6,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content is focused on Continuous Integration (CI) as a practice, with emphasis on team-level benefits: frequent merges, early error detection, code quality, and team workflow. There is mention of how CI supports collaboration and a culture of continuous improvement, but these are framed in a manner directly relevant to developers and immediate product delivery needs, not at the organisational level. There are no explicit references to 'Enterprise Agility' or frameworks that scale agile methods organization-wide. The audience is primarily technical (developers), not executive or organisational leadership. No discussion of enterprise-wide structures, metrics, leadership roles, or transformation strategies is present. Therefore, the conceptual alignment and depth are moderate, reflecting the tangential relationship CI has to enterprise agility as an enabler but not as a focus. The intent and signal-to-noise ratio are moderate, as the content is focused and relevant to CI, but not specifically to Enterprise Agility. No penalties were applied as the content is not outdated or satirical. Final confidence score reflects low direct mention, limited depth in the enterprise agility context, and audience misalignment.",
    "level": "Ignored"
  },
  "Sensemaking": {
    "resourceId": "Continuous Integration",
    "category": "Sensemaking",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 17.5,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 1.9,
    "ai_audience": 4.7,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses exclusively on the technical practice of Continuous Integration (CI) in software development. Throughout, it discusses the benefits of merging code frequently, automating builds, and reducing technical debt. There is virtually no mention—direct or indirect—of sensemaking, nor does the content explore interpretation of complexity, frameworks for decision-making under uncertainty, or organisational adaptation strategies as defined by the category. The themes remain anchored in process improvement and workflow, rather than collective understanding or leading through complexity. The audience (developers, technical leads) only overlaps marginally with sensemaking’s likely strategic target. As such, the confidence score is very low, with minimal alignment outside some broad implications for team adaptation. No penalties were applied because the content is current and does not contradict the tone, but scores remain low across all dimensions.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "Continuous Integration",
    "category": "Team Performance",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 79.05,
    "ai_mentions": 3.2,
    "ai_alignment": 7.9,
    "ai_depth": 7.4,
    "ai_intent": 7.8,
    "ai_audience": 8.3,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content explicitly discusses how Continuous Integration (CI) practices support software teams by enabling early error detection, fostering integration, and maintaining a healthy codebase, which are all closely related to sustained team delivery capability. There are some indirect mentions of team performance outcomes (e.g., predictable and sustainable delivery, improved workflow, reduced disruptions), but the text does not use 'team performance' terminology directly or measure it using system-level metrics. The conceptual alignment is strong, given CI’s relevance to factors influencing performance (workflow, iteration speed, quality), but the discussion is centered on CI as a practice rather than deeply exploring performance metrics, constraints, or systemic behaviors. The depth score reflects a thorough explanation of CI in a team context but doesn't delve into repeated data-driven evaluation of team performance. The audience is software teams—highly relevant to the category. Almost all content is on-topic, with minimal filler. Overall, the confidence score is strong but not maximal due to only indirect references to actual team performance measurement and evaluation.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the category, as it clearly explains how Continuous Integration benefits software teams by improving workflow, code quality, and delivery consistency. While it doesn’t directly measure or define 'team performance' with specific metrics, it effectively connects CI practices to factors that influence team outcomes, making it highly relevant for teams interested in performance improvement."
  },
  "Platform Engineering": {
    "resourceId": "Continuous Integration",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-06T20:57:28",
    "ai_confidence": 39.25,
    "ai_mentions": 1.7,
    "ai_alignment": 4.2,
    "ai_depth": 4.6,
    "ai_intent": 3.8,
    "ai_audience": 5.2,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content focuses exclusively on Continuous Integration (CI) practices—such as frequent code merging, build automation, and early error detection. While CI is often an element within an Internal Developer Platform (IDP), the piece never directly mentions platform engineering, IDPs, or platform development principles. The discussion is moderately deep regarding CI, but it does not connect CI to topics like self-service platforms, standardization, or platform tooling. Its intended audience is developers and software teams (some overlap with platform engineering), but the core conceptual alignment is moderate at best; the link to platform engineering is only indirect and implicit. Signal-to-noise is fair since the content stays on CI throughout but lacks direct relevance to platform engineering as defined. No outdated or contradicting content was observed, so no penalties applied.",
    "level": "Ignored"
  },
  "Windows": {
    "resourceId": "Continuous Integration",
    "category": "Windows",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 7.98,
    "ai_mentions": 0.02,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.13,
    "ai_audience": 6.0,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on general software development practices centering on Continuous Integration (CI) without any mention or implication of the Windows operating system or environment. No explicit or implicit references, configuration specifics, or themes directly connecting this piece to Windows are present. The discussion, while targeted to practitioner audiences, is not tailored to Windows users and contains no system-specific recommendations. The high signal score reflects the focused nature on CI, but this is off-topic per the Windows category. No penalties were needed, as there is no criticism or outdated content, just a mismatch in topical focus.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "resourceId": "Continuous Integration",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-06T20:57:29",
    "ai_confidence": 11.54,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.1,
    "ai_intent": 2.3,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses exclusively on Continuous Integration (CI), its process, and benefits such as error detection, code quality improvement, and team collaboration. There is only a vague reference to 'feedback' in the context of developer collaboration and code merging—not customer feedback mechanisms. None of the core themes or topics are about customer insight gathering, integration of user feedback into the product backlog, or any feedback loop involving customers. The audience is relevant (software teams), but the content does not discuss collecting, analyzing, or acting upon customer feedback. Therefore, direct mention and conceptual alignment are very low, and the final confidence score reflects minimal relevance.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "Continuous Integration",
    "category": "Estimation",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 2.2,
    "ai_mentions": 0.0,
    "ai_alignment": 1.0,
    "ai_depth": 0.5,
    "ai_intent": 0.9,
    "ai_audience": 3.8,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content exclusively focuses on Continuous Integration (CI) practices—emphasizing automated testing, frequent code merging, and reducing technical debt. There are no explicit mentions or discussions of estimation practices, techniques, or themes common to Agile or Scrum estimation. The main ideas revolve around code quality and development workflow, which fall outside the definition of the Estimation category. Audience targeting is somewhat adjacent, as Agile practitioners may be interested, but the CI focus does not directly address those seeking estimation guidance. Overall, there is negligible conceptual or practical overlap, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Scaling": {
    "resourceId": "Continuous Integration",
    "category": "Scaling",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 24.15,
    "ai_mentions": 0.25,
    "ai_alignment": 2.55,
    "ai_depth": 2.45,
    "ai_intent": 2.35,
    "ai_audience": 7.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content is a high-level overview of Continuous Integration (CI) with no direct or indirect mentions of scaling methodologies, frameworks, or cross-team coordination. There is no reference to SAFe, LeSS, Nexus, or other enterprise scaling topics. Instead, the content focuses on general development team practices and the value of CI for team collaboration, which is out of scope for the Scaling category. While the audience may overlap (technical professionals interested in delivery practices), the other dimensions score very low due to a lack of coverage of scaling-specific themes. No penalties were necessary, as the content is neither outdated nor critical or satirical. The confidence score is therefore appropriately very low, reflecting minimal alignment with the Scaling category.",
    "level": "Ignored"
  },
  "Sprint Review": {
    "resourceId": "Continuous Integration",
    "category": "Sprint Review",
    "calculated_at": "2025-05-13T21:57:41",
    "ai_confidence": 3.8,
    "ai_mentions": 0.1,
    "ai_alignment": 0.8,
    "ai_depth": 0.5,
    "ai_intent": 1.2,
    "ai_audience": 0.9,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content does not mention Sprint Review directly or indirectly. Its focus is on Continuous Integration, describing its practices, benefits, and impact on team workflows. There is no discussion of Scrum, events, or stakeholder feedback specific to Sprint Reviews. While some terms like 'collaboration' and 'feedback' overlap thematically with Agile practices, they do not connect to the Sprint Review purpose, process, or audience. Scoring is therefore extremely low across all dimensions.",
    "reasoning_summary": "This content focuses solely on Continuous Integration practices, with no reference to Sprint Review or related Scrum events. Its goals, topics, and intended audience are misaligned with the Sprint Review category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "Continuous Integration",
    "category": "Test Automation",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 53.7,
    "ai_mentions": 2.4,
    "ai_alignment": 6.3,
    "ai_depth": 5.9,
    "ai_intent": 6.1,
    "ai_audience": 8.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content centers on Continuous Integration (CI), emphasizing practices such as frequent code merging, early error detection, and codebase health. Test automation is mentioned in a supporting role ('automating the build and testing processes'), but it is not the direct focus of the content. The main discussion is about CI as a whole, with only brief, indirect references to the automation of tests. Conceptual alignment is moderate, as CI commonly includes test automation, but the article does not explore test automation frameworks, best practices, or technical details. Depth is limited due to a lack of detailed discussion about test automation itself. Intent is aligned insofar as CI supports test automation, but the content is not dedicated to it. The audience is technical, matching the category, and the content is clear and focused. No penalties were applied, as there is no outdated or contradictory information. The confidence score reflects that while test automation is contextually relevant, it is not substantively or explicitly covered.",
    "level": "Tertiary"
  },
  "Technical Excellence": {
    "resourceId": "Continuous Integration",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 80.4,
    "ai_mentions": 6.4,
    "ai_alignment": 8.6,
    "ai_depth": 8.8,
    "ai_intent": 8.0,
    "ai_audience": 8.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content directly discusses Continuous Integration (CI), one of the core engineering practices explicitly listed under Technical Excellence. It mentions CI repeatedly and ties the practice to outcomes like early error detection, quality, collaboration, and reduced technical debt—all aligning directly with the category’s definition and key topics. The discussion goes beyond mere tool usage, addressing cultural impacts and systemic quality. However, the piece does not mention 'Technical Excellence' verbatim and stays narrowly focused on CI, with limited explicit connection to other practices (such as TDD, modular architecture, or emergent design). The depth is strong within the CI sphere, explaining both mechanics and value. The intent is clearly to inform software engineering practitioners, matching the ideal audience and purpose. While the text is focused and delivers minimal filler, it earns a slightly lower 'mentions' score for not naming the broader category. No penalties regarding outdated or contradictory information were warranted. The final confidence reflects strong—but not perfect—coverage of Technical Excellence as it relates to CI, resulting in a robust but not maximal score.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the Technical Excellence category, as it thoroughly explores Continuous Integration—a key practice within this area. It explains both the practical and cultural benefits of CI, aligning well with the category’s focus. While it doesn’t reference other technical practices or use the term ‘Technical Excellence’ directly, its depth and relevance to engineering quality make it a solid match for the intended audience."
  },
  "Behaviour Driven Development": {
    "resourceId": "Continuous Integration",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-06T20:57:28",
    "ai_confidence": 7.04,
    "ai_mentions": 0.2,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.4,
    "ai_audience": 2.0,
    "ai_signal": 0.15,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI), outlining its principles, benefits, and impact on software development workflows. There are no direct mentions of Behaviour Driven Development (BDD), its principles, stakeholders, tools, or practices. The conceptual alignment is very weak, as CI, while sometimes used alongside BDD, is an independent methodology with different goals. There is no substantial exploration of BDD concepts such as collaboration around requirements, user stories, acceptance criteria, or frameworks like Cucumber. The main intent and purpose are to inform the audience about CI, not BDD, though the audience (software developers and teams) might overlap somewhat. The content remains fully focused on CI, with no off-topic filler, but this still offers no relevance to BDD, resulting in a very low signal. No penalties are applied, as the content is current and respectful, but the alignment is near zero and confidence is extremely low for categorization under Behaviour Driven Development.",
    "level": "Ignored"
  },
  "Mentoring": {
    "resourceId": "Continuous Integration",
    "category": "Mentoring",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 13.28,
    "ai_mentions": 0.1,
    "ai_alignment": 1.0,
    "ai_depth": 1.25,
    "ai_intent": 0.95,
    "ai_audience": 1.1,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses exclusively on the practice and benefits of Continuous Integration (CI), such as early error detection, automation, collaboration, and technical debt reduction. There are no direct mentions of mentoring, coaching, leadership development, or guidance related to Agile skill-building. The alignment with 'Mentoring' is minimal and limited only to very broad concepts like collaboration and feedback, both of which are not tied to the mentoring process itself. The text is technical and process-oriented, targeting software practitioners interested in development workflow rather than those seeking mentoring guidance. No in-depth discussion or examples of mentoring, coaching, or professional growth are present. Therefore, all dimension scores are very low, with only slight consideration for the tangential mention of feedback and team morale. No penalties were necessary, as the content does not contradict or satirize mentoring nor is it outdated. Overall, CI is an important Agile practice, but its discussion here does not fit the 'Mentoring' category in any substantial way.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "Continuous Integration",
    "category": "Coaching",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 13.81,
    "ai_mentions": 0.3,
    "ai_alignment": 1.9,
    "ai_depth": 2.1,
    "ai_intent": 1.4,
    "ai_audience": 2.3,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI) as a technical software development practice, detailing its role in code merging, early error detection, and process automation. Coaching, as defined, involves facilitating growth and development via guidance and feedback with an Agile, collaborative focus. There is no explicit mention of coaching, mentorship, or facilitative techniques. While the piece references team collaboration and feedback at a very superficial level, it strictly relates to the mechanics of CI rather than the interpersonal guidance and development emphasized by the Coaching category. Depth is low, as there is no discussion of coaching frameworks, mindsets, or roles; audience is more technical-practitioner than coaching-oriented. Overall, relevance to Coaching is minimal, justifying the low confidence score.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "Continuous Integration",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 36.07,
    "ai_mentions": 0.2,
    "ai_alignment": 3.1,
    "ai_depth": 3.5,
    "ai_intent": 3.4,
    "ai_audience": 5.3,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content introduces Continuous Integration (CI) and provides a clear overview of its practices and benefits for software development teams. However, there are no direct mentions of 'Evidence Based Management' or its key concepts (such as empirical decision-making, value metrics, or outcome management). CI is positioned as a practice that helps teams deliver value and innovate, but the description does not tie these results to measurement, analytics, or empirical evidence—instead, it remains at an operational level. The depth is moderate, explaining multiple facets of CI (technical debt, morale, collaboration), but there's minimal conceptual alignment with the specific principles of Evidence Based Management, such as data-driven management or metrics-driven outcome evaluation. The intent is primarily to inform about the operational benefits of CI for developers, not to discuss management by evidence. Audience alignment is average (technical practitioner focus), and the signal-to-noise ratio is acceptable since the content is focused. No penalties are applied, as the tone and timeframe are current and neutral. Overall, the confidence score reflects that while parts of the content could be tangentially relevant (discussing value delivery and innovation), it lacks explicit, foundational connection to Evidence Based Management.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "Continuous Integration",
    "category": "Product Development",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 79.55,
    "ai_mentions": 4.7,
    "ai_alignment": 8.5,
    "ai_depth": 7.8,
    "ai_intent": 8.3,
    "ai_audience": 7.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content directly discusses Continuous Integration, a practice often associated with product development but more specifically belonging to the sphere of software engineering and DevOps. The text makes several indirect references to key tenets of product development, such as continuous improvement, iteration, early feedback, and enabling sustainable delivery, but rarely uses the explicit language of the provided category definition. There are occasional references to delivering value, adapting to customer needs, and supporting a culture of continuous improvement, which enhance conceptual alignment. However, the overall focus is on the technical practice and its benefits at the engineering and team level, not on product strategy, discovery, or product management methodologies. The depth of discussion is solid regarding CI's processes and value, though it only links weakly to broader product development frameworks. The intent of the piece is to inform practitioners (developers, technical leads) about CI, which overlaps with but does not perfectly match the executive and strategy-focused product development audience. Signal-to-noise is high, as the content is focused and relevant within its scope. No evidence was found of outdated practices or contrarian tone; thus, no penalties were applied. The final confidence score reflects moderate but not strong alignment due to the technical rather than strictly product-methodological emphasis.",
    "level": "Secondary",
    "reasoning_summary": "This content mainly centres on Continuous Integration, highlighting its technical benefits for engineering teams rather than focusing on product development strategy or methodologies. While it touches on themes like continuous improvement and value delivery, its primary audience and intent are more aligned with software engineering than with product management, resulting in only moderate fit for the product development category."
  },
  "Trend Analysis": {
    "resourceId": "Continuous Integration",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 38.25,
    "ai_mentions": 0.6,
    "ai_alignment": 4.0,
    "ai_depth": 3.9,
    "ai_intent": 4.2,
    "ai_audience": 5.1,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content provides an overview of Continuous Integration (CI), its benefits, and its role in software development. However, it does not directly mention trend analysis, nor does it frame the discussion around identifying or examining emerging trends, shifts in practice, or analysis of patterns within Agile or DevOps. The conceptual alignment is limited, as it focuses more on the operational aspects and impact of CI rather than how CI practices are changing or being analyzed over time. Depth is moderate, as the discussion remains at a high level and does not delve into evidence-based trend examination, data-driven insights, or strategic outcomes from trend analysis. The intent is informative, but not specifically tailored to trend analysis audiences (executives, strategists, or those seeking insight on trend impacts). The audience and signal scores are slightly higher, as the explanation would appeal to practitioners or team leads interested in CI, but the proportion of relevant content directly tied to Trend Analysis is low. Overall, the content does not meet the core requirements for the Trend Analysis category, resulting in a lower confidence score.",
    "level": "Ignored"
  },
  "Agile Frameworks": {
    "resourceId": "Continuous Integration",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 27.81,
    "ai_mentions": 0.5,
    "ai_alignment": 3.8,
    "ai_depth": 4.1,
    "ai_intent": 3.5,
    "ai_audience": 6.3,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on Continuous Integration (CI), detailing its process, benefits, and how it fosters collaboration, rapid error detection, and continuous improvement. However, CI is not an Agile framework itself but a supporting technical practice often used within Agile environments. There are no explicit references to any Agile framework (e.g., Scrum, Kanban), the Agile Manifesto, or comparative framework analysis. The conceptual alignment exists tangentially; CI supports Agile principles but is not a framework discussion. The depth is limited to describing the mechanics and benefits of CI, without tying practices back to Agile frameworks or discussing their implementation or impact in an organisational context. The intent is mainly to inform about CI, not Agile frameworks specifically. The likely audience (practitioners) overlaps somewhat with Agile content, but the signal is diluted as discussion of frameworks or their principles is absent.",
    "level": "Ignored"
  },
  "GitHub": {
    "resourceId": "Continuous Integration",
    "category": "GitHub",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 14.95,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.8,
    "ai_intent": 2.0,
    "ai_audience": 2.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content provides a general overview of Continuous Integration (CI) practices, focusing on their benefits and implementation in software development teams. However, there is no explicit mention of GitHub, nor any references to its specific services, features, or workflows as outlined in the category definition. While CI is a key capability supported by GitHub (especially via GitHub Actions), the content does not discuss integration with GitHub or any GitHub-specific methodologies. It lacks detail regarding repositories, CI/CD pipelines within GitHub, or collaboration and project management features unique to the platform. The target audience overlaps with GitHub's user base (software practitioners), but this is incidental. Overall, the reasoning for low confidence reflects minimal direct category relevance.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "Continuous Integration",
    "category": "Competence",
    "calculated_at": "2025-05-06T20:57:22",
    "ai_confidence": 41.25,
    "ai_mentions": 1.8,
    "ai_alignment": 4.7,
    "ai_depth": 4.0,
    "ai_intent": 4.9,
    "ai_audience": 5.2,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on describing the practice of Continuous Integration (CI), highlighting its benefits for collaboration, early error detection, technical debt reduction, and delivery pace. While these are important professional practices, the content does not directly address competence as defined—there are no explicit or frequent mentions of continuous learning, skill mastery, or competence as a foundational principle. Conceptual alignment is partial, as CI can contribute to an environment that enables competence, but the article does not substantively discuss competence, skill development, or strategies for building capability. The depth is moderate, with a thorough discussion of CI benefits but only indirect connection to competence. The intent is broadly about improving development practices, not specifically about fostering competence as defined in the classification. Audience alignment and signal are moderate—developers and practitioners are addressed, but the focus is on process rather than professional capability. No penalties apply, as the information is current and the tone is neutral/professional. The overall confidence score reflects this indirect, partial alignment.",
    "level": "Tertiary"
  },
  "Organisational Change": {
    "resourceId": "Continuous Integration",
    "category": "Organisational Change",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 26.25,
    "ai_mentions": 0.9,
    "ai_alignment": 2.4,
    "ai_depth": 2.8,
    "ai_intent": 3.1,
    "ai_audience": 4.7,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content focuses on Continuous Integration (CI), a technical software development practice centered around code merging and build automation. Direct mentions of 'Organisational Change' are absent (mentions: 0.9). The conceptual alignment is weak (2.4) as the discussion revolves around development workflow efficiency, not organisational transformation or change management frameworks. Depth of discussion (2.8) relates to technical implications of CI rather than examining agility or organisational practices. The intent is to inform about CI (3.1), but it does not align closely with the main purpose of the Organisational Change category. The audience (4.7) skews technical (developers/engineers) instead of organisational strategists or change leaders. Signal-to-noise ratio (3.0) is moderate: while the content is focused, it is not relevant to the category's scope. No penalties were applied since the content is current and not satirical or critical of the category.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "Continuous Integration",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 67.53,
    "ai_mentions": 3.2,
    "ai_alignment": 7.8,
    "ai_depth": 6.7,
    "ai_intent": 7.5,
    "ai_audience": 9.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content focuses heavily on Continuous Integration (CI), repeatedly mentioning it by name and explaining its practices, such as frequent merging, early error detection, and automation. While CI itself is foundational to enabling frequent releases, the article does not explicitly discuss topics like continuous delivery/deployment, automated release processes, or release frequency metrics, resulting in a moderate mentions and depth score (3.2 and 6.7). Conceptual alignment is high (7.8) because frequent integration is a necessary precondition for frequent software releases. The intent is clearly informative and targeted toward practitioners wanting reliable and rapid development cycles (intent: 7.5, audience: 9.1), with very little off-topic content (signal: 8.3). No penalties were applied as the content is recent and completely aligned with the current understanding of CI in agile/DevOps contexts. The confidence score is moderate-to-high, appropriately reflecting that while CI is relevant and foundational to frequent releases, the content does not dig deep into the release-specific aspects, tools, or strategies outlined in the category.",
    "level": "Secondary"
  },
  "Team Motivation": {
    "resourceId": "Continuous Integration",
    "category": "Team Motivation",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 57.6,
    "ai_mentions": 1.1,
    "ai_alignment": 6.6,
    "ai_depth": 6.4,
    "ai_intent": 7.3,
    "ai_audience": 8.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content primarily focuses on the technical and process aspects of Continuous Integration (CI), emphasizing practices like frequent code merging, error detection, and automation. While it does touch on some motivational elements, such as enhancing team morale, fostering collaboration, and supporting a culture of continuous improvement, these are secondary to the main thrust of technical enablement. Direct mentions of 'team motivation' are absent, and the discussion of motivation is peripheral to CI’s technical benefits. The alignment and depth scores are moderate, reflecting substantial but not central relevance to team motivation. The intent aligns somewhat with the category since CI can contribute to a positive team dynamic, but the main audience is practitioners interested in software process efficiency rather than motivation per se. Signal-to-noise is fairly high since most of the content is on-topic, but not centrally focused on motivational strategy. No penalties are applied as the content is current and not critical of the topic. The resulting confidence score accurately reflects moderate but not strong fit with the 'Team Motivation' category.",
    "level": "Tertiary"
  },
  "Metrics and Learning": {
    "resourceId": "Continuous Integration",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 60.24,
    "ai_mentions": 2.8,
    "ai_alignment": 6.6,
    "ai_depth": 6.9,
    "ai_intent": 7.4,
    "ai_audience": 7.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content provides a thorough overview of Continuous Integration (CI), highlighting its practices, benefits, and impact on team dynamics and product quality. While CI is closely related to Agile and DevOps, and the discussion touches on feedback, continuous improvement, and collaboration, the explicit focus is on CI mechanics and team impact rather than on metrics, data collection, or measurement frameworks themselves. There are implicit connections to metrics and learning—such as references to detecting errors, improving code quality, enhancing collaboration, and fostering continuous improvement—but there are no direct mentions of metrics, data analysis, evidence-based decision-making, or feedback loops rooted in measurement. The content aligns with the target audience (practitioners in Agile/DevOps), and maintains a high signal-to-noise ratio, with all statements relevant to improving development processes. No penalties were necessary as the content is up-to-date and constructively framed, yet the moderate confidence score reflects the secondary role that 'metrics and learning' concepts play in this article.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "resourceId": "Continuous Integration",
    "category": "Product Discovery",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 13.68,
    "ai_mentions": 0.2,
    "ai_alignment": 2.9,
    "ai_depth": 2.6,
    "ai_intent": 2.4,
    "ai_audience": 2.1,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content is focused entirely on Continuous Integration (CI), a software engineering practice centered on frequent code merges, automated testing, and fostering healthy codebases. There are no direct mentions or references to 'Product Discovery,' and the main theme is not aligned with methodologies for understanding user needs or defining product features. The discussion goes in depth on the benefits and workflow improvements of CI, but does not cover user research, idea validation, or feature prioritization. The intent is technical enablement and workflow improvement, primarily targeting developers and engineering teams, not the typical product discovery audience of product managers or strategists. While the content mentions 'responding to customer needs,' these are passing references rather than a substantive alignment with discovery methodologies. Most of the content is off-topic for the Product Discovery category, resulting in low signal-to-noise. There are no deductions required as the tone is neutral and the content is current, but overall, the overlap with Product Discovery is negligible, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "Continuous Integration",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 92.4,
    "ai_mentions": 8.4,
    "ai_alignment": 9.7,
    "ai_depth": 9.3,
    "ai_intent": 9.0,
    "ai_audience": 9.2,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content directly focuses on the engineering practice of Continuous Integration (CI), which is one of the category's core key topics. CI is explicitly mentioned multiple times and described thoroughly, stressing its role in merging code, automating builds/tests, improving codebase health, and reducing technical debt. The discussion dives into how CI fosters collaboration, rapid feedback, sustainable development, and quality—reflecting the conceptual goals in the Engineering Practices category. The purpose is informative and intent on educating practitioners on why CI matters in Agile contexts. The audience is technical, targeting software development teams and practitioners, which closely matches the category's intended readership. There is minimal off-topic content: nearly every sentence adds relevant detail or justification for adopting CI. While the content is focused mainly on a single engineering practice, it thoroughly explains its benefits, processes, and outcomes, providing substantial depth. All scores reflect this strong relevance, with minor variations to acknowledge that topics like pair programming or TDD are not discussed, slightly reducing the exhaustive breadth but not the quality. There are no penalties since the tone is positive, current, and fully aligned with established practice.",
    "level": "Primary",
    "reasoning_summary": "This content is an excellent fit for the Engineering Practices category, as it thoroughly explores Continuous Integration—a core topic in this area. It clearly explains CI’s benefits, processes, and impact on software teams, offering practical insights for technical audiences. The focus remains highly relevant throughout, making it a valuable resource for practitioners interested in Agile and modern development workflows."
  },
  "Organisational Culture": {
    "resourceId": "Continuous Integration",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 60.1,
    "ai_mentions": 2.8,
    "ai_alignment": 7.3,
    "ai_depth": 7.2,
    "ai_intent": 6.7,
    "ai_audience": 8.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content on Continuous Integration (CI) primarily presents it as a technical practice, focusing on its benefits such as early error detection, code quality, and workflow smoothing. There are limited direct mentions of 'organisational culture'; the reference to 'a culture of continuous improvement' provides some alignment but is not explored in depth. Conceptual alignment (7.3) is relatively high because the content illustrates how CI supports collaborative practices and improves team dynamics, which are elements of the Organisational Culture category. Depth (7.2) is moderate since the article discusses team morale and collaboration, touching on cultural implications, but does not go deep into how organisational culture shapes or is shaped by CI practices. Intent (6.7) is slightly lower; while the piece is meant to inform about CI benefits (including cultural ones), its primary purpose is not exploring culture. Audience alignment (8.1) and signal (8.2) are high, as the content is relevant to Agile/DevOps practitioners, though the focus is more technical than cultural. No penalties apply; the content is current and neutral in tone. The calculated confidence score of 60.1 reflects that while there are meaningful references to cultural aspects, the piece is primarily about CI practice rather than an in-depth discussion of Organisational Culture.",
    "level": "Tertiary"
  },
  "Agile Planning": {
    "resourceId": "Continuous Integration",
    "category": "Agile Planning",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 37.2,
    "ai_mentions": 1.4,
    "ai_alignment": 4.5,
    "ai_depth": 4.2,
    "ai_intent": 3.8,
    "ai_audience": 6.2,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content centers on Continuous Integration (CI) as a software development best practice. While CI is related to Agile in spirit—emphasizing frequent feedback, team collaboration, and adaptability—it is not explicitly a planning technique or practice as defined by the Agile Planning category. The content does not mention 'Agile Planning', user stories, sprints, backlogs, scrum, or Kanban. Its main focus is on tools and automation (builds, tests, merges) rather than planning processes, meetings, or methods of organizing and delivering work. The conceptual alignment is moderate, as rapid iteration and continuous improvement are Agile-aligned, but the depth and intent with respect to planning are more peripheral: the content aims to educate on CI for development reliability, not explicitly for Agile Planning. Audience alignment is slightly above neutral, appealing to technical practitioners, but the bulk of detail is about CI implementation, not planning strategy or stakeholder coordination. Nearly all content is relevant to software development teams, but only some is tangentially relevant for those interested specifically in Agile Planning, lowering the signal score.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "Continuous Integration",
    "category": "Organisational Psychology",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 21.06,
    "ai_mentions": 0.15,
    "ai_alignment": 2.85,
    "ai_depth": 2.6,
    "ai_intent": 2.5,
    "ai_audience": 7.75,
    "ai_signal": 6.52,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses almost exclusively on the technical methodology of Continuous Integration (CI), outlining the processes, benefits for codebase health, and impacts on software delivery efficiency. There are only indirect references that slightly overlap with Organisational Psychology, such as fostering collaboration or supporting a culture of continuous improvement. However, these are not explored in a psychological framework (e.g., the psychological drivers of team dynamics, motivations, or leadership influences). The main themes do not discuss psychological theories or concepts, and there are no explicit references to core Organisational Psychology topics such as motivational theory, psychological safety, or organisational culture. The audience, likely software developers and technical leads, moderately overlaps with those interested in organisational dynamics, as software teams often care about collaboration, but the primary focus is still technical practice. Signal-to-noise ratio is relatively high, as the content is focused and relevant to CI, but not to Organisational Psychology. Overall, the evidence for this content fitting under Organisational Psychology is very weak, and the low confidence score reflects that.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "Continuous Integration",
    "category": "Personal",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 21.65,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 2.0,
    "ai_intent": 1.4,
    "ai_audience": 6.5,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content provides a high-level overview of Continuous Integration (CI), explaining its practices, benefits, and impacts on team development. However, it does not include personal reflections, anecdotes, or subjective interpretations, which are required to fit the 'Personal' category. There are no individual experiences or stories illustrating the personal or team journey with CI, nor does the content present unique perspectives. Most of the discussion is generalized and focused on the general significance, process, and results of CI, fitting more appropriately under technical or instructional categories. Scores for mentions, alignment, depth, and intent are low because the text lacks direct or explicit references to personal perspectives, and the main intent is to inform broadly rather than reflect individually. Audience and signal scores are relatively higher as the text does stay focused and is relevant to practitioners, but not particularly personalized. No penalties were needed, as there is no outdated or contradictory material.",
    "level": "Ignored"
  },
  "DevOps": {
    "resourceId": "Continuous Integration",
    "category": "DevOps",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 71.89,
    "ai_mentions": 2.4,
    "ai_alignment": 8.0,
    "ai_depth": 7.8,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content centers on Continuous Integration (CI) as a practice that encourages automation, collaboration, continuous improvement, and fast feedback—all key principles within the DevOps philosophy. It explicitly discusses how CI enables frequent code merges, automated testing, early error detection, and fosters a healthy codebase, aligning strongly with DevOps goals such as reducing risk, accelerating delivery, and improving software quality. While the term 'DevOps' is not directly referenced, the conceptual alignment is high: automation, shared responsibility, a culture of improvement, and value delivery are emphasized throughout. The discussion is substantial (depth), covering benefits, process, and outcome, though it does not venture into related DevOps topics like deployment, monitoring, or security integration. The audience clearly targets practitioners interested in software delivery improvement—matching the DevOps audience—but the focus is CI itself rather than DevOps broadly. Signal-to-noise is strong, with concise, relevant content. No penalties are warranted as the material is current, positive, and accurate. The low score for direct mentions appropriately reflects the absence of explicit reference to 'DevOps,' which is offset by the clear philosophical and practical alignment seen in the other scoring dimensions.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the DevOps category, as it thoroughly explores Continuous Integration—a core DevOps practice—highlighting automation, collaboration, and rapid feedback. While it doesn’t mention 'DevOps' directly, its focus on shared responsibility and process improvement clearly aligns with DevOps principles, making it highly relevant for practitioners seeking to enhance software delivery."
  },
  "Complexity Thinking": {
    "resourceId": "Continuous Integration",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 13.67,
    "ai_mentions": 0.3,
    "ai_alignment": 1.4,
    "ai_depth": 1.2,
    "ai_intent": 2.2,
    "ai_audience": 2.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content 'Continuous Integration' discusses best practices in software development such as CI, merging code frequently, automating testing, and improving code quality and collaboration. Nowhere does it mention key complexity science concepts, frameworks like Cynefin, or ideas such as non-linear dynamics, emergence, or adaptive systems. Its core focus is linear improvement of development practices, not the management of complexity or uncertainty in systems. Any potential audience overlap with those interested in complexity thinking (e.g., technical leadership) is incidental and not leveraged through content. Thoroughness and alignment to Complexity Thinking are both very low; most of the content is relevant only to standard Agile/DevOps/CI practices without explicit or implicit complexity framing. Therefore, the confidence score is very low.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "Continuous Integration",
    "category": "Automated Testing",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 47.46,
    "ai_mentions": 2.4,
    "ai_alignment": 5.8,
    "ai_depth": 4.9,
    "ai_intent": 5.9,
    "ai_audience": 6.3,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content centers on Continuous Integration (CI), which is adjacent to automated testing and often includes automation in real-world practice. The text references automating build and testing processes, indicating some direct overlap with automated testing. However, most of the discussion is on broader CI concepts: merging code, collaboration, technical debt, and workflow improvements—with only brief mention of the actual automation of tests. Explicit, detailed discussion of automated testing principles, types, tools, or methodologies is absent. The alignment and depth are moderate due to some relevant overlaps but are limited because automated testing is not the main focus. The audience is correctly targeted toward development practitioners, and the content remains mostly relevant, though much of it is about general CI rather than automated testing specifically. No penalties are applied as the content is current and neutral. Final confidence reflects moderate overlap but not strong, direct coverage of the Automated Testing category.",
    "level": "Tertiary"
  },
  "Unrealised Value": {
    "resourceId": "Continuous Integration",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 17.29,
    "ai_mentions": 0.5,
    "ai_alignment": 1.8,
    "ai_depth": 2.2,
    "ai_intent": 2.0,
    "ai_audience": 6.0,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content is exclusively about Continuous Integration (CI) as a software development practice, focusing on efficient code integration, error reduction, team collaboration, and reducing technical debt. There is no direct mention of 'Unrealised Value' or its definition within Evidence-Based Management, and the core concepts (identification, measurement, or strategic use of untapped value) are absent. Alignment is minimal—the closest link is the mention of driving innovation and continuous improvement, but these are framed generally in terms of CI benefits rather than as part of a value assessment framework. The audience (development teams) slightly overlaps with those interested in organisational value discussions, but this is incidental. No penalties were necessary since the content is not outdated or sarcastic, but it remains largely irrelevant to the category, resulting in very low confidence.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "Continuous Integration",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 19.62,
    "ai_mentions": 0.7,
    "ai_alignment": 2.3,
    "ai_depth": 2.2,
    "ai_intent": 2.8,
    "ai_audience": 5.2,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI), a general software development practice. There are no direct references to Internal Developer Platforms (IDP) or any key concepts, such as controlled environments for streamlining development, or the architectural components specific to IDPs. While the description touches on themes like automation and collaboration, these are broadly applicable to many modern development approaches and not explicitly tied to the IDP concept. The audience is general software developers, which partially aligns, but both the depth and conceptual alignment with IDP are minimal. There are no penalties as the content is recent and not critical in tone; low scores mostly reflect irrelevance to the explicit IDP topic.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "Continuous Integration",
    "category": "Social Technologies",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 63.475,
    "ai_mentions": 2.8,
    "ai_alignment": 7.5,
    "ai_depth": 6.9,
    "ai_intent": 6.8,
    "ai_audience": 8.2,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content centers on Continuous Integration (CI), a technical software development practice. While it does not explicitly mention 'Social Technologies' or directly reference frameworks such as Agile or DevOps, the description and content emphasize aspects that align with the category: enhancing collaboration, supporting a culture of continuous improvement, and fostering team communication. The piece discusses how CI encourages regular feedback, adaptability, value delivery, and a proactive culture—all elements resonant with social technology methodologies—even if the primary lens is technical. However, the discussion is mostly focused on CI as a practice, not the broader frameworks of social technologies, resulting in mid-to-high scores for conceptual alignment and depth. The audience is primarily practitioners and teams (a close match to the category's audience), and the signal-to-noise ratio is high due to the content’s focused and relevant nature. A low score is given for direct mentions due to the absence of explicit reference to 'Social Technologies.' No penalties are applicable, as the content is neither outdated nor contradictory. The resulting confidence score is moderate, reflecting clear thematic overlap but limited explicit framing in terms of 'Social Technologies.'",
    "level": "Secondary"
  },
  "Product Delivery": {
    "resourceId": "Continuous Integration",
    "category": "Product Delivery",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 79.55,
    "ai_mentions": 4.8,
    "ai_alignment": 8.4,
    "ai_depth": 8.2,
    "ai_intent": 8.0,
    "ai_audience": 8.9,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content directly discusses Continuous Integration (CI), a major area within Product Delivery, and explores its processes, team benefits, and its value to the product lifecycle. The term 'product delivery' is not explicitly mentioned, so the direct mentions score is moderate, but the conceptual alignment is strong—CI is highlighted as foundational to delivering robust software. The content thoroughly addresses the advantages of frequent code merging, early error detection, automation, and the importance of team collaboration, which map closely to key product delivery themes such as CI/CD, quality assurance, and feedback loops. The audience is developers and teams involved in software delivery, precisely matching the category's target. The depth is greater than surface-level, discussing positive team effects and workflow, but it doesn’t go into intricate mechanics or case studies, slightly tempering the score. Signal-to-noise is high—the text is focused on CI without significant tangents. No penalties are warranted; the content is current, not critical in tone, and references best practices. Overall, the confidence reflects a strong alignment with the category, though limited in breadth to just one primary practice.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the Product Delivery category, as it centres on Continuous Integration—a core practice in delivering quality software. It clearly explains CI’s benefits for teams and workflows, aligning well with the category’s focus. While it doesn’t cover every aspect of product delivery, its depth and relevance to software teams make it highly suitable for this classification."
  },
  "Agile Product Management": {
    "resourceId": "Continuous Integration",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 48.45,
    "ai_mentions": 0.7,
    "ai_alignment": 5.6,
    "ai_depth": 5.2,
    "ai_intent": 5.1,
    "ai_audience": 4.5,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content focuses on Continuous Integration (CI), a practice associated with Agile and DevOps, but its primary emphasis is on technical benefits: merging code frequently, automating tests, and maintaining a healthy codebase. There is indirect conceptual alignment with Agile Product Management, as CI contributes to fast delivery, responsiveness, and potentially better product outcomes. However, explicit connections to the category's core—such as product ownership, backlog prioritization, or stakeholder engagement—are not present. The depth of discussion remains technical, discussing team workflow, technical debt, and development cadence, but lacks substantive exploration of product management angles (e.g., maximizing product value, alignment with strategy, or customer feedback loops). The intent appears mainly technical, targeting developers or engineering teams rather than product managers. Signal-to-noise is reasonably high, as the content stays on topic for CI. No penalty is required, as the material is current and does not contradict Agile principles, but its direct relevance to Agile Product Management is limited.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "resourceId": "Continuous Integration",
    "category": "Product Strategy",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 18.84,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.6,
    "ai_intent": 2.2,
    "ai_audience": 6.0,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content is focused entirely on Continuous Integration (CI) as a technical and process-oriented practice. There is no explicit mention of 'Product Strategy' or direct reference to strategic product themes such as vision formulation, roadmapping, or competitive analysis. The alignment is low, as the main ideas revolve around development efficiency, code quality, and team workflow, which are adjacent but not central to product strategy. Depth briefly covers benefits and best practices of CI, not the methodologies or frameworks that inform product vision or strategic planning. The intent is technical/how-to and aimed primarily at developers and engineering teams, not product strategists or executives. Signal-to-noise is low due to the focused nature on CI implementation rather than product strategy. No penalties applied since there are no outdated practices or negative tones. Overall, the confidence score is low because, although CI can support product delivery, the content does not meaningfully explore or align with the core definition or scope of the Product Strategy category.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "Continuous Integration",
    "category": "Continuous Delivery",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 37.7,
    "ai_mentions": 1.2,
    "ai_alignment": 4.3,
    "ai_depth": 4.6,
    "ai_intent": 4.1,
    "ai_audience": 7.0,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content provides a full and accurate overview of Continuous Integration (CI), emphasizing frequent code merges, early error detection, automation in build and testing, collaboration, and improvement of code quality. However, Continuous Delivery (CD) is only indirectly referenced, with no explicit mention or substantive exploration. While CI is a foundational aspect of CD and they share overlapping audiences (developers, technical leads), the article's main purpose is confined to explaining CI, not the broader principles, practices, or benefits of Continuous Delivery. Depth of discussion is good for CI but not for CD. There is no outdated information or undermining tone. Scores reflect a low level of direct mention (mentions: 1.2), some conceptual overlap (alignment: 4.3), modest depth on CD itself (depth: 4.6), fair alignment of intent (intent: 4.1), but strong audience and signal scores (audience: 7.0, signal: 7.2) since CI practitioners are often interested in CD as a next step. Final confidence is low, reflecting only partial and indirect relevance.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "Continuous Integration",
    "category": "Change Management",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 25.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.8,
    "ai_intent": 2.9,
    "ai_audience": 8.9,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content is focused on Continuous Integration (CI), highlighting its technical benefits, process improvements, and its role in supporting continuous improvement within development teams. However, there are no direct or frequent mentions of 'Change Management.' Conceptually, while CI can contribute to organizational adaptability and a continuous improvement mindset, the principal discussion is around software engineering practices, not strategies or frameworks directly facilitating organizational change as defined in the category. The depth of discussion on actual change management topics—such as leadership, stakeholder engagement, resistance management, or aligning change with organizational values—is minimal or absent. The author's intent is technical/process improvement rather than change management. The audience (technical teams, developers) aligns moderately with the category but isn't tailored to change management practitioners or strategists. Signal-to-noise ratio is high since the content is well-focused but just tangentially relevant to 'Change Management.' No penalties are applied as the content isn't outdated or critical; it's simply not well-aligned with the category purpose. The low confidence score reflects this: though some themes relate to fostering adaptability, the core topics and intent do not meet the definition's threshold for proper classification under 'Change Management.'",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "Continuous Integration",
    "category": "Release Management",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 54.6,
    "ai_mentions": 2.1,
    "ai_alignment": 6.7,
    "ai_depth": 6.4,
    "ai_intent": 5.9,
    "ai_audience": 7.3,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content provides a focused and detailed overview of Continuous Integration (CI), emphasizing its benefits for code quality, collaboration, and development workflow. CI is listed in the key topics of Release Management and represents a relevant practice within that field. However, the main thrust of the material is educating readers on CI—its purpose, workflow, and advantages—rather than engaging deeply with Release Management strategies, such as release planning, coordination between stakeholders, risk management, or metrics for release success. Direct mentions are low, with no explicit reference to 'Release Management,' and while conceptual alignment exists (since CI supports release goals), the content is not primarily about release scheduling, control, or deployment. The target audience (developers, technical teams) matches, and the explanations are substantial, but most of the discussion is still on CI itself rather than on broader Release Management processes. Therefore, while the fit is clear, the confidence is moderate as the overlap is more supportive than central.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "resourceId": "Continuous Integration",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 24.19,
    "ai_mentions": 0.8,
    "ai_alignment": 2.3,
    "ai_depth": 2.5,
    "ai_intent": 2.6,
    "ai_audience": 3.4,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content centers entirely on Continuous Integration (CI), describing its processes, benefits, and impact on development teams. Direct references to cross-functional teams are absent; the only slight overlap is in mentions of 'collaboration among team members.' However, no explicit or in-depth discussion of cross-functional team structure, diversity of skills, or their management is present. The alignment, depth, and intent scores remain low since the core focus is on CI methods rather than team composition according to the given category definition. The audience appears to be practitioners working in software development, which could overlap with agile teams in general, thus a modest audience and signal score. There is no contradiction or outdated information, so no penalties are applied. The confidence score reflects that while there are minimal conceptual touchpoints, the content largely deviates from the category requirements.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "Continuous Integration",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 42.55,
    "ai_mentions": 1.7,
    "ai_alignment": 4.6,
    "ai_depth": 4.3,
    "ai_intent": 6.4,
    "ai_audience": 7.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content provides a thorough overview of Continuous Integration (CI) and its benefits, such as frequent code integration, early error detection, and fostering a culture of continuous improvement. However, it does not directly mention or explicitly focus on 'Flow Efficiency.' It touches upon adjacent themes—like maintaining a healthy codebase, reducing disruptions, and enabling sustainable delivery speed—but stops short of explicitly discussing value stream bottlenecks, flow metrics, or Lean/Agile flow concepts. The alignment is partial; while CI can improve flow as a byproduct, the main thrust is about development practice and quality, not specifically throughput optimization. The depth is moderate, focused specifically on CI, and the intent is supportive, targeting practitioners and teams. Signal is relatively high as the discussion is focused, but the core category is not central. No penalties were required as the information is current, accurate, and not critical of the category, though it would be misleading to overstate alignment with Flow Efficiency.",
    "level": "Tertiary"
  },
  "Remote Working": {
    "resourceId": "Continuous Integration",
    "category": "Remote Working",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 8.7,
    "ai_mentions": 0.1,
    "ai_alignment": 0.6,
    "ai_depth": 0.2,
    "ai_intent": 0.6,
    "ai_audience": 2.3,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI) as a software development practice, focusing on code merging, automation, and error detection. There are no explicit or implicit references to remote working, distributed teams, or remote Agile challenges. While it briefly mentions team collaboration and morale, these points are generic and not specifically tied to remote contexts. The main topics (automation, code quality, technical debt) do not align with the defined Remote Working category. The intended audience may overlap with Agile remote teams, but the piece is squarely targeted at teams interested in CI practices in general, regardless of their work setting. Consequently, all dimension scores are extremely low, reflecting minimal relevance, with only slight audience intersection. No penalties were necessary as the content is neither outdated nor negative. The final confidence score is very low—appropriately reflecting the near-total lack of fit.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "resourceId": "Continuous Integration",
    "category": "Large Scale Agility",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 26.85,
    "ai_mentions": 0.3,
    "ai_alignment": 2.15,
    "ai_depth": 2.1,
    "ai_intent": 2.6,
    "ai_audience": 2.5,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI) as a development practice, focusing on team-level benefits such as frequent code merges, early error detection, and maintaining a healthy codebase. There are no explicit mentions of Large Scale Agility, scaling Agile practices, frameworks like SAFe or LeSS, or enterprise-level considerations. Conceptual alignment is weak, as improving collaboration and reducing technical debt are discussed only within the context of a single team. Depth is limited to CI practices and does not explore large-scale, organizational agility. The intent is instructive for development teams rather than organizations seeking to scale Agile. Audience targeting is toward practitioners/developers, not enterprise leaders or Agile strategists. Signal-to-noise is low, as all substantial discussion centers on CI rather than large-scale agility. No penalties were applied since the content is current and not overtly contradictory, but relevance to the evaluated category is minimal.",
    "level": "Ignored"
  },
  "Product Owner": {
    "resourceId": "Continuous Integration",
    "category": "Product Owner",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 8.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 0.4,
    "ai_audience": 1.0,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI), describing its benefits for code quality, collaboration, and workflow among software teams. There are no explicit mentions of the Product Owner role or its accountability. Conceptual alignment is minimal, as CI is a technical practice usually managed by developers or engineers rather than the Product Owner. The depth and intent of the piece are centered on engineering practices, not on strategic decision-making, backlog prioritization, or stakeholder communication. Although it briefly mentions delivering value, it is in the context of development practices, not Product Owner accountability. The target audience is more likely technical (developers/engineers) than Product Owners or those interested in Product Owner responsibilities. The content remains focused and relevant to CI, but this focus is not aligned with the Product Owner category. No penalties were applied, as the tone and content are current and neutral.",
    "level": "Ignored"
  },
  "Transparency": {
    "resourceId": "Continuous Integration",
    "category": "Transparency",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 20.65,
    "ai_mentions": 1.2,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 2.5,
    "ai_audience": 6.1,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content on Continuous Integration (CI) focuses almost exclusively on CI as a practice for rapid code integration, error detection, collaboration, and code quality. There are no direct mentions of transparency or explicit discussions about openness, visibility, or accountability—key aspects of the 'Transparency' category. While the text broadly touches upon collaboration and communication, it does not explore the concept of work visibility, transparency tools, or transparency in Agile, nor does it provide any examples or case studies relevant to the definition. The audience (software practitioners) aligns moderately with those who would care about transparency, but the majority of the content is off-topic for this category. No penalties are applied, as the tone, content, and practices are current and not contradictory. The overall confidence is low and proportionate to the minimal alignment and negligible direct coverage of transparency.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "Continuous Integration",
    "category": "Experimentation",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 17.6,
    "ai_mentions": 0.4,
    "ai_alignment": 1.1,
    "ai_depth": 1.0,
    "ai_intent": 0.8,
    "ai_audience": 7.2,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content discusses Continuous Integration (CI) within Agile workflows, focusing on merging code frequently, automating builds/tests, and enhancing collaboration. However, there are no explicit mentions of experimentation or hypothesis-driven approaches. The core concepts—like frequent iteration, feedback, and continuous improvement—are conceptually adjacent but do not align with systematic testing of ideas or validating assumptions. The discussion is thorough for CI, but depth and alignment with the 'Experimentation' category are very low. The intended audience (Agile practitioners, developers) and relevance (high signal-to-noise) receive higher scores, but the purpose and conceptual fit are off-target. There are no penalties; the confidence score is proportionately very low based on the evidence.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "Continuous Integration",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 3.87,
    "ai_mentions": 0.2,
    "ai_alignment": 0.4,
    "ai_depth": 0.0,
    "ai_intent": 0.6,
    "ai_audience": 8.8,
    "ai_signal": 10.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses exclusively on the concept and benefits of Continuous Integration (CI), with no mention—direct or indirect—of Service Level Expectation (SLE), its calculation, purpose, or relevance within Agile, Scrum, or Kanban contexts. There is no reference to time forecasts, probability, cycle times, or authoritative sources connected to SLE. The conceptual alignment is nearly absent, as the content's main themes (code merging, automated builds, error detection) do not overlap with the definition or application of SLE. The intent is to inform about CI, targeting software practitioners, but not those specifically interested in SLE. Signal-to-noise is high because the content is tightly focused, but irrelevant to SLE. No penalties for outdated or contradictory tone are warranted. Thus, the overall confidence that this content belongs in the Service Level Expectation category is extremely low.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "Continuous Integration",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 96.12,
    "ai_mentions": 9.6,
    "ai_alignment": 10.0,
    "ai_depth": 9.7,
    "ai_intent": 9.8,
    "ai_audience": 9.9,
    "ai_signal": 9.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 96.0,
    "reasoning": "The content repeatedly and explicitly references Continuous Integration (CI), clearly explaining its definition, principles, and core benefits in software development. Direct mentions are frequent and always contextually appropriate. Conceptual alignment is perfect: the entire theme revolves around what CI is, why it matters, and its impact on code quality, collaboration, technical debt, and agile workflows—matching the provided classification precisely. Depth of discussion is high: the text goes beyond a surface definition to discuss build automation, testing, workflow enhancements, team culture, technical debt, and long-term business impact, but it stops short of listing specific tools or giving extensive implementation case studies, which keeps the depth slightly below a perfect 10. The intent is highly informative, aiming to educate and advocate for CI practices. The intended audience is developers and teams interested in software delivery best practices, which fits the category perfectly. Signal-to-noise is very high; nearly every sentence is relevant, concise, and focused, with no unrelated tangents. There are no outdated references or criticisms, necessitating no penalties. The confidence score closely approaches the maximum, reflecting thorough and focused coverage of the Continuous Integration topic.",
    "level": "Primary",
    "reasoning_summary": "This content is an excellent fit for the Continuous Integration category. It thoroughly explains CI’s definition, principles, and benefits, consistently referencing relevant concepts like build automation and agile workflows. The discussion is focused, informative, and tailored to developers, ensuring high relevance and clarity without unnecessary digressions or outdated information."
  },
  "Decision Theory": {
    "resourceId": "Continuous Integration",
    "category": "Decision Theory",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 11.09,
    "ai_mentions": 0.15,
    "ai_alignment": 1.1,
    "ai_depth": 1.05,
    "ai_intent": 0.9,
    "ai_audience": 4.0,
    "ai_signal": 2.23,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content provides an overview of Continuous Integration (CI), focusing primarily on its technical and process-oriented benefits within software development. There are no explicit references to Decision Theory or its associated concepts (heuristics, probability, behavioral economics, frameworks for making decisions under uncertainty, or cognitive psychology). While the material discusses making code integration decisions to ensure code quality and team workflow, these are operational and not analyzed through a Decision Theory lens. The depth of discussion is focused on CI as a software engineering practice rather than any theoretical, probabilistic, or behavioral decision-making processes. The intent is to inform technical audiences about CI's practical benefits, not about improving or structuring decisions under uncertainty. The audience aligns somewhat with Decision Theory's potential audience (e.g., developers, teams considering process improvements), but the relevance is indirect at best. Most of the content is signal for operational best practices in CI, not relevant to Decision Theory. Consequently, the confidence score is very low, reflecting that the content is almost entirely outside the target category.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "Continuous Integration",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 2.4,
    "ai_mentions": 0.1,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 1.0,
    "ai_audience": 3.5,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI), its process, benefits, and impact on development teams. There is no direct mention of the Definition of Ready (DoR), nor are there discussions on backlog item readiness, refinement, or associated Agile criteria. While both CI and DoR are Agile-related, the content does not conceptually overlap with the key themes of DoR such as backlog preparation for sprints. The intended audience is marginally relevant as both topics appeal to development teams, but the substance and purpose are not a fit for DoR. Minimal scores reflect the marginal possibility that a CI-aware audience would care about readiness, but this is not leveraged in the actual content, which remains entirely focused on CI practices.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "Continuous Integration",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 5.52,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 1.4,
    "ai_intent": 1.2,
    "ai_audience": 1.1,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses exclusively on continuous integration (CI) as a software development practice, elaborating on its process benefits, collaboration improvements, and technical debt reduction. There are no explicit mentions of Artificial Intelligence, nor are there implicit references to AI applications, automation using AI, or any related technologies. The themes, depth, and intent are entirely centered around CI and its process value, not on AI’s role within these methodologies. The primary audience is likely software developers and Agile/DevOps practitioners, but the content does not serve the specific interests of those exploring AI integration. Overall, there is minimal to no alignment with the Artificial Intelligence category as strictly defined.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "Continuous Integration",
    "category": "Product Management",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 44.45,
    "ai_mentions": 0.3,
    "ai_alignment": 5.3,
    "ai_depth": 4.7,
    "ai_intent": 4.2,
    "ai_audience": 5.15,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content provides a solid and accurate overview of Continuous Integration (CI), emphasizing its benefits for software development teams, such as early error detection, improved code quality, and enhanced collaboration. However, it does not explicitly mention 'Product Management' or its associated frameworks, methodologies, or strategic concerns. The content is directed at practitioners involved with software engineering and development workflow, which may overlap loosely with product managers but isn't tailored for a product management audience. The alignment and depth scores are moderate because the discussion alludes to delivery of value and responding to customer needs, minor elements of product management concerns, but it does not discuss the strategic aspects, stakeholder alignment, prioritization, or product success metrics required to fit strongly in the category. The intent and signal scores reflect that while the content is valuable and focused, it is not primarily geared toward product management best practices or decision-making. No penalties were applied, since the content is current and not critical or satirical relative to the category. Overall, the confidence reflects a marginal fit: the themes are adjacent to product management but do not directly address its core concerns.",
    "level": "Tertiary"
  },
  "Customer Retention": {
    "resourceId": "Continuous Integration",
    "category": "Customer Retention",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 43.13,
    "ai_mentions": 0.55,
    "ai_alignment": 4.05,
    "ai_depth": 4.95,
    "ai_intent": 2.55,
    "ai_audience": 6.2,
    "ai_signal": 7.15,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content focuses explicitly on the principles, benefits, and workflow of Continuous Integration (CI) as a technical practice to improve code quality and promote smooth software delivery. There are zero direct mentions of customer retention, and no clear reference to any of the key topics such as measuring engagement, feedback loops, or retention strategies. Conceptually, the content aligns partially with the category by briefly noting that CI 'empowers teams to innovate and respond to customer needs effectively'—but this is an indirect and minor connection, not a substantive exploration of retention. The majority of the discussion is on technical implementation and developer collaboration, not on customer-centric strategies. The intent is to inform practitioners about CI, not about methods to retain users. The audience does align in part (mid-level technical practitioners could care about retention indirectly), and the signal-to-noise ratio is high (the content is focused, consistent, and relevant to its topic). No penalties were applied, as the information is current and not contrary or satirical. Thus, the overall confidence this fits under 'Customer Retention' is low, and the score reflects the largely tangential relationship.",
    "level": "Tertiary"
  },
  "Minimum Viable Product": {
    "resourceId": "Continuous Integration",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-06T20:57:17",
    "ai_confidence": 13.05,
    "ai_mentions": 0.2,
    "ai_alignment": 1.15,
    "ai_depth": 1.3,
    "ai_intent": 2.4,
    "ai_audience": 4.0,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI) — its practices, benefits, and how it enhances software development through frequent code integration and automated testing. There is no direct mention of Minimum Viable Product (MVP), nor are its concepts (such as hypothesis validation or early product iteration) explored. The conceptual alignment is minimal; while CI is a software development best practice that could theoretically support MVP processes, the content does not make this link or address MVP-specific topics as outlined in the classification definition. The depth is low with respect to MVP, since all substantive discussion pertains to CI. The intent is to inform developers about CI, not MVP, but the audience (development teams) could potentially overlap. The content is thematically focused (good signal-to-noise), but none of it is on MVP. No penalties were required, as the content is not outdated or contradictory. Overall, the confidence score is low and reflects the fact that this content does not fit the MVP category.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "Continuous Integration",
    "category": "Beta Codex",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 14.35,
    "ai_mentions": 0.15,
    "ai_alignment": 1.9,
    "ai_depth": 2.4,
    "ai_intent": 1.8,
    "ai_audience": 2.2,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content is entirely focused on Continuous Integration (CI) within software development and does not mention Beta Codex directly or indirectly. There is no explicit or implicit discussion of decentralised, human-centric organisational design, decentralisation, or adaptive cultures that are core to Beta Codex. While concepts such as collaboration, proactive improvement, and team morale are mentioned, they do not connect to the systemic, organisational shifts or foundational theories unique to Beta Codex. The intended audience appears to be software developers or dev team leads interested in code integration practices, not practitioners of organizational design or change. Content stays tightly scoped to CI with nearly no topical overlap to Beta Codex—hence the very low confidence score.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "Continuous Integration",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 36.26,
    "ai_mentions": 1.1,
    "ai_alignment": 4.0,
    "ai_depth": 3.6,
    "ai_intent": 3.9,
    "ai_audience": 7.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI), describing best practices like frequent code merging, automated testing, and early error detection. While CI is relevant to Lean Thinking's themes of continuous improvement and efficient workflows, there are no direct mentions of 'Lean Thinking' or its specific principles (such as waste elimination, value stream mapping, or Lean tools like 5S or Kanban). The alignment is modest, as the article does reference culture, improvement, and efficiency, but it lacks explicit and deep integration of Lean Thinking concepts. The depth of discussion is primarily around CI mechanics rather than Lean application. The intent is informative and relevant to practitioners (high audience alignment), while the signal-to-noise ratio is strong since the content avoids unnecessary tangents. No penalties are applied, as the content is current and on-topic, though only tangentially related to Lean. The final confidence score reflects weak but nonzero relevance: CI is tangentially adjacent to Lean practices in DevOps, but this content doesn’t thoroughly connect those dots.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "Continuous Integration",
    "category": "Lean Startup",
    "calculated_at": "2025-05-06T20:57:16",
    "ai_confidence": 13.674,
    "ai_mentions": 0.1,
    "ai_alignment": 1.6,
    "ai_depth": 1.4,
    "ai_intent": 1.5,
    "ai_audience": 4.0,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content is a focused discussion of Continuous Integration (CI), a software engineering methodology. There is only a single, vague indirect connection to Lean Startup principles: both emphasize iterative improvement and feedback, but the content never directly mentions Lean Startup methods, terminology (e.g. MVP, Build-Measure-Learn), or core themes like validated learning or customer development. There are no references to startup contexts or the application of Lean principles in business or innovation. The depth and alignment scores are low because, although CI can facilitate faster iteration, the discussion is entirely technical/developer-focused and does not address business learning cycles central to Lean Startup. Thus, confidence is very low: the content is not a fit for the 'Lean Startup' category.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "resourceId": "Continuous Integration",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 13.55,
    "ai_mentions": 0.25,
    "ai_alignment": 1.8,
    "ai_depth": 2.0,
    "ai_intent": 2.0,
    "ai_audience": 2.1,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI), which, while relevant to Agile development more broadly, is not an Agile Planning Tool nor is it discussed in the context of supporting Agile planning processes. There are no direct mentions of Agile Planning Tools, such as backlog management platforms or sprint planning software. The alignment is minimal; the content focuses on software quality and development workflow improvements, not planning or tool support for Agile practices. The depth and intent showcase thorough coverage of CI as a development practice, but this is tangential to the category. The presumptive audience (developers, technical teams) slightly overlaps with users of Agile Planning Tools, but the content is not focused on planning or tooling aspects. Signal is also low, as the content is generally informative about CI, not Agile planning or tools for it. No penalties were applied since the content is up-to-date and does not undermine the category definition.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "Continuous Integration",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 37.24,
    "ai_mentions": 0.2,
    "ai_alignment": 4.8,
    "ai_depth": 4.5,
    "ai_intent": 3.75,
    "ai_audience": 4.9,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content strongly focuses on the concept and benefits of Continuous Integration (CI), highlighting frequent code integration, detection of errors, and sustaining high code quality. While these elements relate to some tenets of Professional Scrum—such as technical excellence, cooperation, and delivering value—they do so implicitly rather than framing them within Professional Scrum's ethos, terminology, or holistic philosophy. There are no explicit references to Scrum, Professional Scrum, Scrum values, empiricism, roles, or evidence-based management. The main purpose is technical process improvement, not specifically the disciplined, value-driven, and professional approach that defines Professional Scrum. The audience appears to be technical practitioners (developers), which overlaps somewhat with the Professional Scrum space, but the missing professional, accountability, and team-based context causes some misalignment. Although the discussion is practical and free of tangential content, the absence of direct mention or sustained focus on Professional Scrum keeps the overall signal moderate and the confidence moderate-low. No penalties were assessed, as the content is current and not contradictory; the low mention score significantly suppresses the final confidence.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "resourceId": "Continuous Integration",
    "category": "Cycle Time",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 23.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.2,
    "ai_intent": 2.3,
    "ai_audience": 8.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content discusses Continuous Integration (CI), focusing on its benefits for software development: frequent code merges, early error detection, healthy codebase, collaboration, and technical debt reduction. However, there are no direct mentions or explicit references to Cycle Time, nor is Cycle Time discussed as a central or supporting theme. The conceptual alignment is low—Cycle Time might indirectly benefit from CI practices, such as faster integrations leading to quicker delivery, but this connection is neither mentioned nor explored. There is no depth regarding Cycle Time or related metrics, measurement, or improvement strategies. The main intent is to promote CI in general, not workflow metrics. The audience aligns broadly with Agile/DevOps teams, but the signal-to-noise ratio reflects that while on-topic for development practices, the Cycle Time focus is very limited. No penalties are applied, as there is no outdated information or tone contradiction.",
    "level": "Ignored"
  },
  "Increment": {
    "resourceId": "Continuous Integration",
    "category": "Increment",
    "calculated_at": "2025-05-06T20:57:17",
    "ai_confidence": 22.6,
    "ai_mentions": 0.0,
    "ai_alignment": 2.4,
    "ai_depth": 3.1,
    "ai_intent": 3.7,
    "ai_audience": 7.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content discusses Continuous Integration (CI) practices, focusing on the frequent merging of code, error detection, automation, collaboration, and code quality. There are zero direct mentions or references to 'Increment' or to the tangible, usable output at the end of an Agile iteration. Instead, the main theme centers on process and tooling that may support delivery of increments, but does not itself represent or discuss the definition or best practices of the Increment in Scrum/Agile. While some ideas (value, sustainability, team collaboration, etc.) tangentially overlap with Increment’s broader context, there is no meaningful conceptual alignment and no depth of discussion around delivering working software increments or any Scrum artifact relationships. The audience (software development practitioners) partially aligns, and the content is strongly focused, with little off-topic material, hence higher 'audience' and 'signal' scores. Overall confidence is low and accurately reflects that the content does not fit the 'Increment' category definition.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "Continuous Integration",
    "category": "Product Backlog",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 9.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.3,
    "ai_intent": 0.2,
    "ai_audience": 2.1,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI), focusing on frequent code merges, early error detection, automation, collaboration, and technical debt reduction. There are no direct mentions or references to the Product Backlog or any backlog-related practices. The conceptual alignment is minimal as the themes revolve around CI as a development practice rather than backlog management. Depth is nearly nonexistent; the content does not discuss features, prioritisation, backlog refinement, the Product Owner role, or user stories. The intent is to inform about CI, not the Product Backlog, indicating an off-category purpose. The audience appears to be agile developers or teams, which only partially overlaps with those concerned about backlog management. Signal-to-noise ratio is quite low, as virtually none of the content is relevant to Product Backlog. No penalties were applied, as the tone is neutral and the practices discussed are current.",
    "level": "Ignored"
  },
  "Software Development": {
    "resourceId": "Continuous Integration",
    "category": "Software Development",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 97.2,
    "ai_mentions": 9.5,
    "ai_alignment": 9.9,
    "ai_depth": 9.7,
    "ai_intent": 9.6,
    "ai_audience": 9.3,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 97.0,
    "reasoning": "The content names 'Continuous Integration (CI)' both in the title and throughout, explicitly connecting it to software development practices and highlighting its role in the engineering workflow. The primary focus is on the value, process, and impact of CI, which is a key topic under Software Development as defined. It thoroughly describes the mechanisms (frequent merging, automated builds/tests), benefits (reducing technical debt, code quality, team morale), and cultural aspects (collaboration, continuous improvement), showing deep conceptual and practical alignment. The purpose is squarely to inform and support practitioners of software development, using clear technical language and orientation toward engineering teams. Nearly all of the content is on-topic, relevant, and detailed, with no filler or tangential discussion. Minor deductions are made in audience and signal due to a generally inclusive tone that could also appeal to non-practitioner stakeholders, but this does not detract from the confidence in categorizing this as Software Development.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the Software Development category, as it centres on Continuous Integration—a core software engineering practice. It clearly explains CI’s processes, benefits, and cultural impact, using technical language aimed at development teams. While the tone is accessible to a wider audience, the focus remains on informing and supporting software practitioners."
  },
  "Hypothesis Driven Development": {
    "resourceId": "Continuous Integration",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-05-06T20:57:17",
    "ai_confidence": 6.5,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.5,
    "ai_intent": 0.7,
    "ai_audience": 2.3,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI), focusing on code merging, automated testing, and fostering a healthy codebase. There are no direct mentions or references to Hypothesis Driven Development or its key practices, such as experimental testing, hypothesis formulation, or validated learning. Conceptual overlap is minimal: while both CI and Hypothesis Driven Development value rapid feedback, the text does not connect CI to experimentation or data-driven learning. The depth remains superficial regarding the evaluated category, only discussing CI in isolation. The intent and audience are misaligned, as the text serves developers or engineering teams focused on integration workflows rather than practitioners of experimentation or hypothesis-driven processes. The content is highly focused, with little irrelevant material, but nearly none of it pertains to Hypothesis Driven Development per se. Thus, per the detailed instructions, all scores are very low, and the resulting confidence score is justifiably minimal.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "Continuous Integration",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 14.4,
    "ai_mentions": 0.4,
    "ai_alignment": 1.9,
    "ai_depth": 2.0,
    "ai_intent": 1.1,
    "ai_audience": 4.0,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content is centered on the technical practice of Continuous Integration (CI), describing its benefits for code quality, team collaboration, and workflow efficiency. However, it contains no explicit or implicit reference to evidence-based leadership, decision-making, empirical evidence, or leadership practices supported by data. The audience is technical practitioners (developers/engineers), not leaders or executives focused on evidence-based approaches. The only tenuous alignment is the mention of teams and improvement cultures, but these are not connected to leadership, evidence, or organizational decision-making. Therefore, confidence is very low, with minimal scores across all dimensions except for audience (slightly higher as managers may be interested) and signal-to-noise (the content is focused but not on the category). No penalties are applied, as the content is current and respectful, but alignment to the category is weak.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "Continuous Integration",
    "category": "Working Agreements",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 21.36,
    "ai_mentions": 0.5,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 3.8,
    "ai_audience": 7.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content primarily focuses on Continuous Integration (CI) as a software development and DevOps practice, emphasizing frequent code merges, early error detection, and maintaining a healthy codebase. While there are brief references to team collaboration and communication, these are described as beneficial side effects of CI, not as elements of structured working agreements. The text does not directly mention 'working agreements,' nor does it provide examples, definitions, creation techniques, or the role of such agreements within teams. Its intent centers on promoting CI practices, not on codifying team norms or principles vital to working agreements. The audience—software engineers and teams—somewhat overlaps, but the signal is diluted by a focus on process rather than foundational team agreements. There is minimal conceptual alignment and depth concerning working agreements, so confidence in this content fitting the 'Working Agreements' category is very low.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "Continuous Integration",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 20.8,
    "ai_mentions": 0.5,
    "ai_alignment": 1.2,
    "ai_depth": 2.3,
    "ai_intent": 1.5,
    "ai_audience": 7.0,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses specifically on Continuous Integration (CI), a recognized software development practice with deep ties to Agile and DevOps philosophies. Although the article does not explicitly reference Agile, Scrum, DevOps, or Lean by name, the entire theme and context of CI are directly derived from modern technical practices within these frameworks. This excludes it from being classified as 'Miscellaneous,' per the exclusion criteria. Direct mentions of the Miscellaneous category are absent (mentions: 0.5, only slight indirect fit). Conceptual alignment is very low (1.2), as the material is not anecdotal, non-specific, or general, but instead a technical overview of an established practice. The depth score (2.3) reflects that the discussion goes beyond surface level but remains tethered to CI rather than anything miscellaneous. The intent is informative about a technical, framework-specific practice (intent: 1.5). Audience alignment (7.0) and signal-to-noise ratio (7.4) are higher, as the content is well-written, on-topic, and would likely interest the broad audience looking for business agility content. No penalties were applied, as the material is current and does not undermine the category tone. The final low confidence score reflects the article’s explicit alignment with established frameworks and practices, disqualifying it from fitting under 'Miscellaneous.'",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "Continuous Integration",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 36.65,
    "ai_mentions": 1.8,
    "ai_alignment": 4.0,
    "ai_depth": 4.7,
    "ai_intent": 3.9,
    "ai_audience": 4.2,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content focuses extensively on Continuous Integration (CI) as a software development practice. While CI is a common technical practice within Agile frameworks, the discussion remains firmly centered on CI's operational and team benefits such as fast feedback, automatic testing, improved code quality, and reduced technical debt. There are indirect links to Agile principles (continuous improvement, delivering value, collaboration), but the article does not discuss Agile Transformation explicitly—it does not mention transformation initiatives, cultural shifts, change management, Agile frameworks, or organisational agility. There are no direct references to the 'Agile Transformation' category or associated terminology. The depth is moderately substantial for CI but shallow for Agile Transformation as a topic. The intent appears informative and helpful for development teams but is not aimed at leaders or strategists managing organizational Agile change. The signal-to-noise ratio is good but the focus remains technical and implementation-level, relevant mostly for practitioners rather than for those leading Agile Transformation. Overall, while relevant as a practice within Agile, this content does not substantially or explicitly fit the core of 'Agile Transformation'.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "resourceId": "Continuous Integration",
    "category": "Operational Practices",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 88.4,
    "ai_mentions": 8.2,
    "ai_alignment": 9.2,
    "ai_depth": 8.9,
    "ai_intent": 9.0,
    "ai_audience": 8.6,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content centers on Continuous Integration (CI), a core operational practice within Agile and DevOps frameworks. Direct mentions of operational practices are not explicit (e.g., 'operational efficiency' isn't named), so the mentions score is strong but not perfect. Conceptual alignment is very high: CI directly addresses process optimization, reduction of technical debt, early error detection, and automation—each mapping closely to category criteria. Depth is also strong, as the discussion moves beyond definitions, elaborating on CI's impact on collaboration, workflow, and value delivery. The main intent is to inform practitioners about CI's benefits and principles—matching the category purpose. The audience is clearly technical and operational (developers, agile practitioners), but without niche targeting, so the audience score stops slightly short of a perfect 10. Content focus is almost entirely on CI's operational value, with minimal filler. No outdated practices are referenced and the tone is fully in alignment, so no penalties are warranted. Overall, the confidence is high and well-justified by the content's substance and direct relevance to operational efficiency within Agile/DevOps paradigms.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the category, as it thoroughly explores Continuous Integration within Agile and DevOps, highlighting its role in process improvement, automation, and collaboration. While it doesn’t explicitly mention every operational term, its focus and depth clearly align with operational efficiency, making it highly relevant for technical and operational audiences seeking practical insights."
  },
  "Sociotechnical Systems": {
    "resourceId": "Continuous Integration",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 64.13,
    "ai_mentions": 2.3,
    "ai_alignment": 7.8,
    "ai_depth": 7.6,
    "ai_intent": 8.1,
    "ai_audience": 8.4,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content on Continuous Integration primarily focuses on the software development practice, emphasizing frequent code integration, automation, and error detection. There is a modest but not explicit mention of sociotechnical elements, such as team collaboration, communication, and a culture of continuous improvement, but it does not directly reference 'Sociotechnical Systems' or its theoretical frameworks. The discussion touches on how CI impacts team morale and workflow, which aligns with the interplay between social and technical systems. Depth is moderate as it explains CI's influence on collaboration and culture without delving into case studies or the structural aspects of sociotechnical systems. The intent is closely related, seeking to explain the team and process benefits of CI rather than exploring organizational or strategic integration in depth. The intended audience—developers and software teams—is well-aligned with those interested in sociotechnical systems, and the content remains focused without much filler. No penalties are warranted as the tone is positive, current, and does not reference obsolete practices. Overall, the confidence score is above moderate due to reasonable alignment and depth, but not high, as the categorization would be secondary rather than primary.",
    "level": "Secondary"
  },
  "Open Space Agile": {
    "resourceId": "Continuous Integration",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 12.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.2,
    "ai_intent": 1.6,
    "ai_audience": 2.7,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "This content is focused exclusively on Continuous Integration (CI), a software engineering practice, with no explicit or implicit reference to Open Space Agile or its associated principles. Direct mentions are almost nonexistent, with CI being the only topic discussed. The conceptual alignment is minimal, as while CI does encourage collaboration and continuous improvement, it does not address co-creation, psychological safety, shared ownership in Agile transformations, emergence, or any mechanisms unique to Open Space Agile. The depth is limited to CI processes and benefits, without any exploration of Open Space Technology, iterative dialogue in organisational change, or complexity theory. The intent is to inform developers about CI and its advantages, which is tangential to the Open Space Agile category. The likely audience is technical (developers, engineering teams), whereas Open Space Agile often targets a broader range of organisational change agents; slight overlap exists but it is minimal. The signal-to-noise ratio is moderate since the piece is on-topic for CI but completely off-topic for Open Space Agile. There are no outdated references or contradictory tone, so no penalties have been applied. Given the lack of relevance to the category, the resulting confidence score is appropriately very low.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "Continuous Integration",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 22.7,
    "ai_mentions": 0.1,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 2.3,
    "ai_audience": 7.4,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content provides a thorough overview of Continuous Integration (CI) concepts, emphasizing their importance in software development. However, it never directly mentions Azure DevOps or any Azure DevOps-specific services, tools, or practices. The alignment score is low because, while CI is a core functionality within Azure DevOps, the discussion is at a generalized level and would apply to any modern CI tool or methodology. The depth score reflects a detailed explanation of CI practices but not within the Azure DevOps context. Intent and signal are moderate, given the lack of Azure DevOps-specific focus, while the audience is likely relevant (developers, DevOps practitioners). No penalties were applied as the content is current, accurate, and does not contradict the category's framing. These factors result in a low overall confidence score for the Azure DevOps category, reflecting that the content is about CI itself and not specifically about Azure DevOps.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "Continuous Integration",
    "category": "Lean Principles",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 54.38,
    "ai_mentions": 1.05,
    "ai_alignment": 7.35,
    "ai_depth": 6.95,
    "ai_intent": 6.35,
    "ai_audience": 8.05,
    "ai_signal": 8.23,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on Continuous Integration (CI), describing how it enables frequent merging, early error detection, automation, and continuous improvement. While CI is not a Lean Principle per se, many of its benefits (waste reduction, rapid feedback, continuous improvement) are conceptually aligned with Lean thinking. However, explicit direct mentions of Lean or its dedicated terminology (waste reduction, 5S, value stream mapping, etc.) are absent, resulting in a low Direct Mentions score. The content aligns well with the Lean Principle of continuous improvement but stops short of explicitly engaging Lean frameworks or naming Lean processes. The depth is moderate: it explores CI practices, team impact, and outcomes, but not in the context of Lean tools/methodologies. The intent and purpose fit is credible but secondary—Lean is implicit, not central. The audience (developers, teams focused on process improvement) is close to the likely Lean audience, as is the focus and signal-to-noise ratio (very little filler or distraction). No penalties for outdated content or negative tone. Ultimately, while there is reasonable conceptual overlap, the absence of explicit Lean framing and surface-level coverage make this a moderately confident match.",
    "level": "Tertiary"
  },
  "Definition of Done": {
    "resourceId": "Continuous Integration",
    "category": "Definition of Done",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 8.5,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 1.0,
    "ai_intent": 0.4,
    "ai_audience": 1.0,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on Continuous Integration (CI) and does not mention or reference the Definition of Done (DoD) either directly or indirectly. There is no exploration of the criteria, purpose, or best practices related to DoD. While some concepts—such as maintaining product quality and reducing technical debt—can be indirectly linked to elements that appear in a DoD, the main topics, examples, and intent of the content are entirely aligned to CI practices and philosophy, not with the Definition of Done. The target audience (software development teams) could overlap with those interested in DoD, but the subject matter, depth, and intent are wholly unrelated to the explicit requirements for the DoD category. As such, all scores are at or near the minimum, and the calculated confidence is extremely low, appropriately reflecting the near-total absence of any DoD-focused signal.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "Continuous Integration",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 80.25,
    "ai_mentions": 1.8,
    "ai_alignment": 8.2,
    "ai_depth": 8.5,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content directly discusses Continuous Integration (CI) and its practical benefits but does not explicitly mention 'Pragmatic Thinking' or related frameworks like Agile, Scrum, or DevOps by name. However, the themes align closely with Pragmatic Thinking by emphasizing real-world application, adaptability, and problem-solving within a development context. It highlights practical team strategies such as collaboration, early error detection, and sustained delivery, which are key to the category. The discussion goes beyond surface-level explanation, detailing how CI supports code quality, reduces technical debt, and fosters a culture of continuous improvement. The main intent is to inform technical practitioners of how to work effectively using CI, meeting the target audience expectations. The content remains focused, with negligible filler. Confidence is strong but not maximal; direct naming and references to Agile, Scrum, or DevOps are missing, which moderately impacts certain scores—the overall output is well-aligned with Pragmatic Thinking’s aims.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the Pragmatic Thinking category, as it explores the practical use of Continuous Integration in development teams. While it doesn’t name frameworks like Agile or DevOps, it clearly demonstrates real-world problem-solving, adaptability, and continuous improvement—core aspects of Pragmatic Thinking. The focus on actionable strategies and team collaboration makes it highly relevant for technical practitioners."
  },
  "Employee Engagement": {
    "resourceId": "Continuous Integration",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 19.0,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 1.8,
    "ai_audience": 6.4,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on Continuous Integration (CI), which is a technical practice for improving software quality and development workflow. While there are fleeting mentions of improved collaboration, team morale, and regular communication, these are described as byproducts of CI rather than direct discussions of strategies, practices, or theories around employee engagement. The core of the content centers on technical processes (code merging, automated testing, reducing technical debt), not on cultivating motivation, commitment, or other psychological/social factors central to employee engagement. The intent and purpose are clearly to inform practitioners about CI's process benefits rather than directly address employee engagement, resulting in low scores for direct mentions, alignment, and depth. The audience is technical (developers), and though signal quality is decent, the relevant content to employee engagement is mostly tangential.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "Continuous Integration",
    "category": "System Configuration",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 22.35,
    "ai_mentions": 0.6,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.4,
    "ai_audience": 6.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on Continuous Integration (CI) as a software development practice for frequent code merging, early error detection, and improved codebase health. There are no direct references to system configuration, configuration management tools, automation of system setup, integration of hardware/software, or related best practices. While CI pipelines may automate some environmental checks, the main discussion does not delve into system configuration concerns but rather centers on code integration, collaboration, technical debt, and product development. The audience is somewhat aligned as practitioners, but the depth and alignment to system configuration as defined are both minimal. No penalties are applied since the tone and references are contemporary. Confidence is low due to minimal conceptual and topical overlap.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "Continuous Integration",
    "category": "Leadership",
    "calculated_at": "2025-05-06T20:57:29",
    "ai_confidence": 32.5,
    "ai_mentions": 0.8,
    "ai_alignment": 3.7,
    "ai_depth": 3.6,
    "ai_intent": 3.1,
    "ai_audience": 7.7,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content primarily discusses Continuous Integration (CI) as a technical and team-based practice for improving software quality, supporting collaboration, and reducing technical debt. There are indirect allusions to team collaboration, healthy culture, and morale—which can be enabled by leadership—but there is no explicit reference to leadership roles, leadership strategies, or approaches to fostering leadership within Agile or DevOps contexts. The Direct Mentions score is very low as 'leadership' is never named or directly referenced. The Conceptual Alignment and Depth scores are low because the focus is on CI practices themselves rather than leadership behavior or models. Intent is somewhat relevant only because team dynamics and culture are discussed, but the main intent is to inform about CI rather than leadership. Audience Alignment and Signal-to-Noise Ratio are higher because the content is clearly aimed at Agile/DevOps practitioners, who may overlap with leadership audiences, and there is little off-topic material. No penalties were applied as the content is not outdated nor does it contradict the Leadership category. The overall confidence appropriately reflects that this is a technical process piece with minimal, indirect connection to leadership topics.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "Continuous Integration",
    "category": "Throughput",
    "calculated_at": "2025-05-06T20:57:29",
    "ai_confidence": 9.6,
    "ai_mentions": 0.5,
    "ai_alignment": 0.9,
    "ai_depth": 0.8,
    "ai_intent": 1.2,
    "ai_audience": 2.0,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses solely on Continuous Integration (CI) as a practice for improving software development, without mentioning or analyzing throughput as a delivery metric. While the text describes benefits of CI—such as frequent code merging, early error detection, healthier code base, and sustainable delivery pace—it never explicitly references throughput, discusses its calculation, visualisation, or usage for delivery health. There is conceptual proximity in the mention of 'more predictable and sustainable delivery of features,' but this is too generic for strong alignment. All main points are about workflow and code quality improvement, not throughput measurement. The content is aimed at developers and technical teams (good audience match for throughput discussions), but the signal-to-noise remains very low for the specific category. No penalties were applied as the content is current, neutral, and not satirical or critical toward throughput. The confidence is extremely low, as the content is off-topic per the strict category definition.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "Continuous Integration",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 16.17,
    "ai_mentions": 1.0,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 3.5,
    "ai_audience": 3.0,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content is entirely focused on Continuous Integration (CI), which is a software development practice emphasizing frequent code merges, automated testing, and maintaining a healthy codebase. There are no explicit or implicit references to asynchronous development principles, such as distributed teams, decoupled workflows, or asynchronous collaboration tools. The intent, audience, and depth are all aligned with best practices in CI, which typically involves synchronous coordination and rapid feedback cycles, not asynchronous methodologies. The signal-to-noise ratio is low for asynchronous development as none of the main discussion points overlap with the provided category definition. Consequently, the confidence score is very low, reflecting a poor fit for categorization under Asynchronous Development.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "Continuous Integration",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 7.2,
    "ai_mentions": 0.0,
    "ai_alignment": 0.6,
    "ai_depth": 0.4,
    "ai_intent": 0.5,
    "ai_audience": 2.0,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI), a software engineering practice focused on code integration and testing automation. There are no direct mentions, terminology, or conceptual overlaps with Cell Structure Design, the Beta Codex, networked organisations, self-managed cells, decentralisation, or complexity theory. While phrases like 'empowers teams' and 'collaboration' appear, they are framed purely in a technical software context and do not reflect the core organisational design principles of Cell Structure Design. The intent and audience are centered around software developers and technical practitioners, rather than organisational strategists or those interested in decentralised/autonomous organisational models. Discussion is focused and relevant to CI only, with no substantive or tangential reference to Cell Structure Design concepts. Therefore, the confidence score is extremely low, accurately reflecting the exclusion of this content from the 'Cell Structure Design' category.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "Continuous Integration",
    "category": "Azure Boards",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 6.8,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.8,
    "ai_intent": 0.8,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is entirely focused on Continuous Integration (CI)—defining the practice, its benefits, and its impact on team workflows and development. At no point does the content mention Azure Boards directly or indirectly, nor does it discuss Agile project management tooling, work item tracking, backlog management, board customization, or any other elements outlined in the definition for the 'Azure Boards' category. The audience is broadly engineering-focused, matching somewhat with the practitioner audience of Azure Boards, but the subject is off-topic for the specified category. Thus, extremely low scores are given for mention, alignment, depth, and intent, and slightly higher for audience and signal due to general relevance to development team practices. No penalties were applied because the content is not outdated or contradictory, but the confidence is near zero due to total misalignment with the Azure Boards category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "Continuous Integration",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 3.3,
    "ai_mentions": 0.0,
    "ai_alignment": 1.1,
    "ai_depth": 0.95,
    "ai_intent": 0.85,
    "ai_audience": 0.2,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content discusses practices and benefits of Continuous Integration (CI) in software development, focusing on code merging, early error detection, automated building/testing, and team collaboration. There are no explicit or implied mentions of Liberating Structures or any facilitation methods associated with it. Conceptual alignment is very low since CI is a technical software engineering practice, not a facilitation structure or toolkit. The depth dimension is below 1 because no Liberating Structures concepts, examples, or terms are explored. Intent and signal are also extremely low, as the main purpose is incompatible with the Liberating Structures category definition. The only overlap is the general concept of improving collaboration, but this is in a coding context, not in facilitation structures for group processes. Audience alignment is almost zero, as the target is developers and technical teams focused on code, not facilitators or Agile coaches seeking Liberating Structures. Thus, the overall confidence that this content fits 'Liberating Structures' is extremely low.",
    "level": "Ignored"
  },
  "Scrum Values": {
    "resourceId": "Continuous Integration",
    "category": "Scrum Values",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 11.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 1.0,
    "ai_audience": 4.7,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content does not directly mention Scrum Values or reference the Scrum framework. While there are tangential themes such as collaboration, improvement, and team morale, these are general agile or development practices and not framed within the context of Scrum Values (commitment, courage, focus, openness, respect). The depth of discussion remains strictly around Continuous Integration practices and their benefits rather than principles or values underpinning Scrum. The audience is partially aligned as both practitioners of agile methods and developers would overlap, but the core content remains focused on technical process, not values or team behaviors. Signal-to-noise ratio is slightly higher due to tight writing, but nearly all content is off-target for the given category. No penalties applied as there is no overt contradiction or outdatedness—merely lack of relevance.",
    "level": "Ignored"
  },
  "Troubleshooting": {
    "resourceId": "Continuous Integration",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 34.33,
    "ai_mentions": 1.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 3.6,
    "ai_audience": 7.5,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content briefly references troubleshooting in the context of continuous integration (CI), specifically when mentioning that CI helps 'detect errors early' and 'enables developers to focus on delivering value rather than troubleshooting integration problems.' However, the primary focus of the content is an overview of CI benefits, processes, and impact on team collaboration and code quality, rather than on the explicit identification and resolution of technical issues. There are no direct or repeated mentions of troubleshooting itself, nor does the discussion delve into specific troubleshooting techniques, tools, or detailed case studies. The content is relevant to a technical audience but is largely general and descriptive rather than practical or solution-focused. The signal-to-noise ratio is moderate, as only a small portion directly relates to troubleshooting. No penalties were applied as the content is recent and does not contradict the category's framing. The confidence score is low, reflecting that troubleshooting is an ancillary rather than central theme.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "Continuous Integration",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-06T20:57:20",
    "ai_confidence": 53.135,
    "ai_mentions": 2.5,
    "ai_alignment": 5.9,
    "ai_depth": 5.7,
    "ai_intent": 5.1,
    "ai_audience": 7.3,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content centers on Continuous Integration (CI) as a development practice, discussing its benefits in code quality, collaboration, and technical debt reduction. There are implicit connections to Agile Philosophy themes—such as continuous improvement, collaboration, and responding to change—but explicit references to Agile philosophy, its manifesto, or foundational values are absent. The content goes beyond mere technical explanation by touching on culture and team dynamics, aligning to some extent with Agile Philosophy, though its main emphasis remains on CI's practical application. The audience is technical teams and practitioners, overlapping with Agile Philosophy's target audience but not exclusively so. The signal-to-noise ratio is high, as the majority of the content is relevant to best practices rather than filler. However, the lack of direct mention of Agile Philosophy and limited exploration of philosophy versus practice lower the direct mention and depth scores. No penalties were necessary, as the content is neither outdated nor critical of Agile Philosophy.",
    "level": "Tertiary"
  },
  "Lean": {
    "resourceId": "Continuous Integration",
    "category": "Lean",
    "calculated_at": "2025-05-06T20:57:21",
    "ai_confidence": 43.05,
    "ai_mentions": 0.3,
    "ai_alignment": 4.9,
    "ai_depth": 4.4,
    "ai_intent": 4.7,
    "ai_audience": 6.4,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content discusses Continuous Integration (CI), focusing on frequent merging, error detection, automation in building/testing, and the benefits for development teams. While concepts like continuous improvement, reducing waste (in terms of technical debt), and supporting a culture of quality overlap conceptually with Lean principles, there are no direct or explicit references to Lean methodologies, tools (such as 5S, Kanban, or value stream mapping), or Lean terminology. The main thrust is software engineering practice, not process improvement from a Lean viewpoint. The audience, being developers and teams interested in workflow efficiency and quality, partially overlaps with a Lean audience but is not specific. Content is focused and relevant for CI, with a moderate signal-to-noise ratio; however, it does not explore Lean principles in depth or tie CI back to Lean in any direct way. No penalties applied since there is no evidence of outdated practice or contradiction. The final confidence reflects moderate conceptual alignment but low direct connection.",
    "level": "Tertiary"
  },
  "Azure Pipelines": {
    "resourceId": "Continuous Integration",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-06T20:57:21",
    "ai_confidence": 16.5,
    "ai_mentions": 0.8,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 3.9,
    "ai_audience": 4.2,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content is a generic overview of continuous integration (CI) concepts without any direct mention of Azure Pipelines or even Azure DevOps. While the ideas described—such as merging code frequently, running automated builds, and detecting errors early—are thematically compatible with what Azure Pipelines helps implement, the article never references any tools, products, or services. There is no discussion of build or release pipelines, YAML configurations, or Azure-specific practices. The intended audience appears broadly technical but is not specifically targeted to Azure practitioners or users. The signal-to-noise ratio is moderate: though the discussion is clear and technical, it would apply equally to any CI platform. The overall confidence is therefore quite low, as there is no explicit or implicit evidence aligning this content specifically to Azure Pipelines.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "Continuous Integration",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-06T20:57:21",
    "ai_confidence": 24.71,
    "ai_mentions": 0.2,
    "ai_alignment": 2.4,
    "ai_depth": 2.3,
    "ai_intent": 2.5,
    "ai_audience": 8.6,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on Continuous Integration (CI) practices, emphasizing benefits such as early error detection, code quality, and enabling efficient team collaboration. While concepts like enhanced collaboration, feedback, and team morale are touched upon, these are framed in the context of CI's technical and workflow advantages rather than a psychologically safe environment. There are no explicit or substantial references to psychological safety, its core themes, or strategies for fostering it. The audience—software engineers and technical practitioners—might overlap with those interested in psychological safety, but the content's intent, depth, and alignment are off-purpose; it centers on technical best practices, not cultural or interpersonal safeness. Signal-to-noise is moderately high due to clear focus on CI, but relevance to psychological safety is very low, resulting in a low overall confidence score for this category.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "Continuous Integration",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 90.0,
    "ai_mentions": 8.8,
    "ai_alignment": 9.6,
    "ai_depth": 8.9,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content provides a focused discussion on Continuous Integration (CI), which is central to Technical Mastery. CI is directly referenced multiple times, and the description thoroughly covers its practices—frequent code merges, automated testing, fast feedback cycles, maintaining code quality, and reducing technical debt—all of which are key technical mastery principles. The intent is clearly to inform and advocate for CI as a best practice for technical excellence. The target audience is practitioners interested in improving delivery quality, which aligns with the category. While the depth is substantial for a short article (discussing both process and impact), it remains at a general level, with no deep dive into specific frameworks or tooling, which slightly lowers the depth and signal-to-noise scores. Nevertheless, there are no off-topic digressions or outdated references. The confidence score reflects strong but not absolute fit, mainly due to concise format limiting technical depth.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the Technical Mastery category, as it centres on Continuous Integration—a core technical practice. It clearly explains CI’s principles and benefits, targeting professionals aiming to enhance code quality and delivery. While the overview is concise and doesn’t delve into specific tools, it remains focused and relevant, making it well-suited for readers seeking technical best practices."
  },
  "Common Goals": {
    "resourceId": "Continuous Integration",
    "category": "Common Goals",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 28.35,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.6,
    "ai_intent": 1.7,
    "ai_audience": 9.2,
    "ai_signal": 9.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content thoroughly discusses Continuous Integration (CI) within the context of software development practices, focusing on its benefits related to code quality, team collaboration, and workflow efficiency. However, it does not directly mention or explicitly reference the concept of 'Common Goals.' The main focus is on the technical and operational aspects of CI rather than aligning strategy with execution or discussing shared objectives as foundational principles. While there are light references to collaboration and shared purpose, these do not rise to the explicit or in-depth discussion required by the Common Goals category. The audience is clearly technical, matching the likely audience for Common Goals content, and the signal-to-noise ratio is high, with clear and relevant content throughout. However, due to the weak direct and conceptual alignment with Common Goals, the confidence score is low.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "Continuous Integration",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 38.85,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 5.1,
    "ai_intent": 4.5,
    "ai_audience": 6.6,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content discusses Continuous Integration (CI) as a development practice and covers topics such as code quality, team morale, collaboration, and proactive error detection. However, it only briefly references benefiting the delivery of value to customers and responding to customer needs in a general sense, without exploring customer satisfaction directly or mentioning its measurement, theories, or frameworks from Agile, Lean, or DevOps specific to customer experience. There are no explicit mentions of customer satisfaction as a goal or methodology, nor does the discussion engage deeply with techniques to improve or measure customer happiness. The indirect connection (faster delivery, higher code quality helping the customer) provides minimal conceptual alignment. The primary audience (developers/technical leads) may overlap somewhat with customer-focused roles, but the content is not focused on customer satisfaction as defined. Signal-to-noise is decent (discussion is focused on CI), but it is relevant to the category mostly by implication, not by direct exploration. No penalties were applied as the content is not outdated, nor does it contradict the category’s values.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "Continuous Integration",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 37.48,
    "ai_mentions": 3.7,
    "ai_alignment": 4.8,
    "ai_depth": 4.4,
    "ai_intent": 4.6,
    "ai_audience": 4.0,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content describes the practice of Continuous Integration (CI) in depth, focusing on its impact on early error detection, healthy codebases, collaboration, and sustainable development practices. There is a brief nod to empowering teams to innovate in the final sentence; however, CI is primarily positioned as a supporting Agile/DevOps practice rather than the central mechanism for fostering or measuring innovation. The text does not discuss specific innovation metrics, frameworks, learning cycles, or targeted strategies for improving innovation capacity. Mentions of innovation are indirect, and the alignment is partial—CI may empower innovation but is not explored as an innovation mechanism itself. The audience is practitioners interested in process improvement but not necessarily those focused on innovation measurement. The discussion is reasonably focused but lacks depth in connecting CI to evidence-based management's innovation framework. No penalties are applied, as the content is current and not critical or satirical. The resulting confidence is above low but not strong due to limited direct fit with the category.",
    "level": "Ignored"
  },
  "Continuous Learning": {
    "resourceId": "Continuous Integration",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-06T20:57:24",
    "ai_confidence": 68.9,
    "ai_mentions": 1.3,
    "ai_alignment": 7.6,
    "ai_depth": 7.1,
    "ai_intent": 7.2,
    "ai_audience": 8.3,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content focuses primarily on Continuous Integration (CI), detailing its technical benefits, such as frequent code merging, early error detection, and reduction of technical debt. While CI is an integral DevOps practice and is tangentially related to continuous learning (especially via mechanisms like fast feedback and fostering improvement), the piece does not directly mention 'Continuous Learning' or discuss growth mindset, intentional knowledge sharing, or ongoing education. There are mild links to continuous improvement and culture (e.g., collaboration, adapting to requirements, and team morale), which align conceptually with Continuous Learning but stop short of explicit discussion. The depth and intent scores reflect substantial coverage of improvement practices relevant to the category's spirit, but the absence of direct terminology, frameworks, or continuous learning-centric recommendations limits the top-end scores. The audience (technical/practitioner) aligns closely with the category. Signal is high, as the content is focused and without tangents; however, the degree to which it is truly about 'Continuous Learning' rather than just CI is moderate. No penalties were applied, as the content is current and does not undermine the category's framing.",
    "level": "Secondary"
  },
  "Working Software": {
    "resourceId": "Continuous Integration",
    "category": "Working Software",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 27.52,
    "ai_mentions": 1.2,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 3.5,
    "ai_audience": 8.0,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content thoroughly describes the practice of Continuous Integration (CI), its benefits, and its impact on software development teams. However, it does not explicitly mention 'working software' as an output or artifact in Agile/Scrum, nor does it discuss working software as a deliverable. The discussion focuses on workflows, collaboration, code quality, and continuous improvement through CI, rather than on the specific concept of working software as defined by the category. While the audience alignment and signal-to-noise ratio are strong—targeting practitioners interested in process improvement—the core conceptual match and depth related to 'working software' are weak. The mention of delivering value and responding to customer needs only tangentially relates to the delivery of working software and does not bridge the gap to categorize CI as producing that artifact directly. No penalties were applied, as the content is contemporary, supportive, and not critical or outdated.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "Continuous Integration",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 35.18,
    "ai_mentions": 0.5,
    "ai_alignment": 3.1,
    "ai_depth": 3.6,
    "ai_intent": 3.3,
    "ai_audience": 7.4,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses exclusively on Continuous Integration (CI) as a software engineering practice. While CI is a facilitator for agility and supports iterative delivery, the discussion does not explicitly mention the Agile Product Operating Model or explore its unique principles such as transitioning from projects to products, integrating professional scrum with product management, governance, organizational structures, or evidence-based management. Direct mentions of the category are absent, resulting in a very low 'mentions' score. The conceptual alignment is weak since the article is narrowly about CI and only tangentially relevant to the broader topic of Agile Product Operating Model. The depth score reflects that the content thoroughly discusses CI’s processes and benefits but does not extend this depth to APOM-lit topics. Intent and purpose are not closely tied to APOM; the content aims to inform about CI, not specifically about product-centric operating models. The audience (software delivery teams, developers) overlaps with those interested in APOM, so the score here is relatively high. The signal-to-noise ratio is solid as the content is focused and free from tangents, but given the required category, a significant portion is off-topic for APOM, so the score is moderate. No penalties were warranted as the content is neither outdated nor negative regarding APOM-related practices. The resulting confidence score is low, accurately reflecting the fact that while related, the content is not about the Agile Product Operating Model itself.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "Continuous Integration",
    "category": "Scrum Master",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 10.1,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.9,
    "ai_intent": 0.9,
    "ai_audience": 2.7,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content is focused solely on Continuous Integration (CI) as a technical practice for software development. There are no direct or indirect mentions of the Scrum Master role, its accountabilities, or systemic responsibilities within Scrum. Key concepts such as enabling empiricism, removing impediments, team effectiveness, or organizational impact relevant to the Scrum Master are completely absent. While the content does reference team collaboration and continuous improvement, these are generic development outcomes and are not attributed to Scrum or its accountabilities. The audience appears to be development practitioners interested in CI rather than Scrum Masters or those seeking understanding of Scrum Mastery as an accountability. The signal-to-noise ratio is low from a Scrum Master category perspective, as all content is CI-specific with no overlap. Overall, the evidence gives this content a very low confidence for the 'Scrum Master' category.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "resourceId": "Continuous Integration",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 66.35,
    "ai_mentions": 2.8,
    "ai_alignment": 7.6,
    "ai_depth": 7.2,
    "ai_intent": 6.6,
    "ai_audience": 7.1,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 66.0,
    "reasoning": "The content centers explicitly around Continuous Integration (CI) and describes its benefits in software development. While 'continuous improvement' is directly mentioned once and alluded to conceptually when discussing feedback, adaptation, and incremental enhancements, the document primarily focuses on CI as a technical practice rather than on the broader organizational philosophy of Continuous Improvement. There is conceptual overlap, particularly where CI's promotion of a feedback-rich, adaptive environment is linked to team effectiveness and sustainable business agility. However, the discussion does not substantially enter into topics like empirical evidence, data-driven process improvements, cultural transformation, agile/lean frameworks, or strategic integration of continuous improvement beyond the confines of software delivery pipelines. The main audience is technical practitioners, which partially overlaps the Continuous Improvement audience, though not completely. The discussion stays on topic but doesn't delve deeply into the Continuous Improvement domain; therefore, the confidence score reflects strong relevance but stops well short of full alignment.",
    "level": "Secondary"
  },
  "Forecasting": {
    "resourceId": "Continuous Integration",
    "category": "Forecasting",
    "calculated_at": "2025-05-06T20:57:27",
    "ai_confidence": 13.13,
    "ai_mentions": 0.1,
    "ai_alignment": 1.3,
    "ai_depth": 1.9,
    "ai_intent": 2.05,
    "ai_audience": 2.05,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content is focused on Continuous Integration (CI) as a practice to improve codebase quality and developer workflow, with no explicit mention of forecasting or the use of empirical data to predict delivery timelines. There are no direct references to Agile forecasting methodologies or metrics like burndown charts, velocity, risk management, or value optimisation via forecasted outcomes. Conceptual alignment is minimal, as the discussion orbits around quality assurance and efficiency, not prediction or planning. The depth and audience scores are higher than the mentions/alignment because the content targets Agile practitioners and discusses continuous improvement, which is tangentially related to Agile forecasting audiences and goals, but not directly relevant. No penalties are needed, as the content doesn't contradict the category nor reference outdated or obsolete practices. The overall confidence that this fits under Forecasting is very low.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "Continuous Integration",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 4.5,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.2,
    "ai_intent": 0.5,
    "ai_audience": 1.5,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content is entirely focused on Continuous Integration (CI) without any mention or discussion of Acceptance Test Driven Development (ATDD) or its principles. There are no explicit references to acceptance criteria, collaborative definition of tests, stakeholder involvement, or any other aspect defining ATDD. The main ideas, intent, and targeted audience are centered on general software development practices, particularly the technical workflow improvements and team collaboration benefits of CI, not the collaborative requirements clarification or acceptance testing phase integral to ATDD. Thus, the content is off-topic with only tangential or potential indirect relevance to ATDD (e.g., both being Agile-related practices), resulting in very low scores for all dimensions.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "resourceId": "Continuous Integration",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 32.65,
    "ai_mentions": 0.3,
    "ai_alignment": 3.8,
    "ai_depth": 3.4,
    "ai_intent": 3.7,
    "ai_audience": 6.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses exclusively on Continuous Integration (CI) as a software engineering and development practice. While there are indirect references to team collaboration, feedback, and a culture of improvement, these are discussed in the context of software quality and workflow, not through the lens of systems thinking or organisational dynamics as defined by Organisational Physics. There is no explicit or direct mention of Organisational Physics, systems thinking, feedback loops within organisational structures, or analysis of organisational complexity. The depth of discussion is solid for CI but superficial regarding organisational-level dynamics. The intent is to inform practitioners (primarily developers and engineering teams) about the benefits of CI, not to explore or analyse organisational systems. The audience overlap is limited—engineers could have peripheral interest in organisational concepts, but the content is not designed for those specifically seeking Organisational Physics insights. The signal is relatively high because the message is focused, but it is decidedly off-topic for the evaluated category. No penalties are applied as the content is up-to-date and does not contradict the category, it simply does not align. The overall confidence score is low, reflecting substantial mismatch on most evaluation dimensions.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "Continuous Integration",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 37.09,
    "ai_mentions": 0.15,
    "ai_alignment": 3.85,
    "ai_depth": 4.65,
    "ai_intent": 3.42,
    "ai_audience": 6.05,
    "ai_signal": 6.85,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content does not explicitly mention 'entrepreneurship' or associated terminology (mentions: 0.15). Its primary focus is on software engineering practices, discussing Continuous Integration (CI) in detail, including technical implementation, code quality, and team collaboration. While some concepts—such as innovation, value delivery, and responding to customer needs—mildly overlap with entrepreneurial principles, they are framed in a technical, developer-oriented context rather than within the scope of entrepreneurial process, risk-taking, or startup strategy. Depth of discussion is moderate but remains strictly within CI practices (depth: 4.65). The intent is informative for technical teams, not specifically for entrepreneurs or those interested in the entrepreneurial journey (intent: 3.42). The target audience is technical practitioners, and not decision-makers or entrepreneurial audiences (audience: 6.05). Most of the content remains tightly focused on CI, with minimal tangential information (signal: 6.85). No penalties were applicable, as the material is contemporary and not critical or satirical. Overall, the confidence score is low, reflecting only slight tangential relevance to entrepreneurship via references to innovation and value, but not direct alignment or depth.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "resourceId": "Continuous Integration",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 32.31,
    "ai_mentions": 0.8,
    "ai_alignment": 3.9,
    "ai_depth": 3.6,
    "ai_intent": 2.5,
    "ai_audience": 8.1,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses almost entirely on the technical and team-level benefits of Continuous Integration. Direct mentions of strategic goals are absent; the discussion orbits operational efficiency, code health, collaboration, and continuous improvement at a local level. While there is a passing mention of 'long-term success in product development,' there is no articulation or framework relating CI to broader organisational strategic objectives, business agility, or competitive advantage. The main intent is to inform readers about the value and mechanics of CI—not to connect it to the high-level, organisational context required by the Strategic Goals category. The audience is developers and technical team members rather than executives or strategists. The content is focused and high-quality for its purpose, but it is largely outside the scope of Strategic Goals as defined.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "Continuous Integration",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-06T20:57:18",
    "ai_confidence": 70.95,
    "ai_mentions": 4.0,
    "ai_alignment": 7.9,
    "ai_depth": 7.3,
    "ai_intent": 6.6,
    "ai_audience": 7.5,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "The content on 'Continuous Integration' primarily discusses software development practices, with a strong focus on CI processes such as code merging, error detection, and test automation. While it does make explicit references to team collaboration (e.g., 'enhance collaboration among team members', 'encourages regular communication and feedback', 'supports a culture of continuous improvement'), these points are secondary and serve to highlight the benefits of CI rather than focusing in depth on the mechanics or strategies of team collaboration itself. The conceptual alignment is solid given that CI often requires and benefits from team collaboration, but the depth of discussion regarding collaborative techniques, shared ownership, or Agile/DevOps team dynamics is moderate—the main content centers on CI itself. The intent is partially aligned as the piece does address how CI can foster team effectiveness, but the primary purpose is informative about CI rather than explicitly about team collaboration. The likely audience (developers, technical team members) is an appropriate overlap. The signal-to-noise ratio is high, as the content is clear and compactly relevant, though only a fraction specifically addresses collaboration as per the category definition. There are no penalties for outdated content or negative tone. Overall, the confidence score is moderate, reflecting a clear connection but not a sole, central focus on team collaboration.",
    "level": "Secondary",
    "reasoning_summary": "The content fits the category to some extent, as it highlights how Continuous Integration can support team collaboration and effectiveness. However, its main focus is on explaining CI processes rather than delving deeply into collaborative methods or team dynamics. While relevant, the discussion of collaboration is secondary, making the alignment with the category moderate rather than central."
  },
  "Hybrid Agile": {
    "resourceId": "Continuous Integration",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-06T20:57:21",
    "ai_confidence": 10.0,
    "ai_mentions": 0.2,
    "ai_alignment": 0.3,
    "ai_depth": 0.3,
    "ai_intent": 0.5,
    "ai_audience": 4.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses exclusively on explaining Continuous Integration (CI) as a standalone software development practice. There are no direct mentions of Hybrid Agile or related themes such as integrating traditional project management with agile methods, the associated dysfunctions, failed case studies, or analysis of hybrid frameworks. The conceptual alignment and depth of discussion related to Hybrid Agile are minimal to nonexistent. The intent is purely educational about CI techniques and benefits, with no reference to project management methodologies or hybrid models. The likely audience, while including technical practitioners, does not specifically target those interested in critical examinations of Hybrid Agile. The signal-to-noise ratio is moderate, as the content is on-topic for CI, but not for Hybrid Agile. Therefore, the overall confidence that this content belongs in the 'Hybrid Agile' category is extremely low.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "Continuous Integration",
    "category": "Revenue per Employee",
    "calculated_at": "2025-05-06T20:57:21",
    "ai_confidence": 6.34,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.3,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses entirely on Continuous Integration (CI) in software development, emphasizing code quality, developer workflow, collaboration, and delivery speed. There are no direct mentions or discussions of Revenue per Employee, nor any exploration of financial observability metrics, empirical data, or workforce efficiency as measured by revenue. The intended audience appears to be developers or engineering teams, not financial analysts or executives concerned with systemic financial performance. While there is a general connection to productivity, this is never quantified or linked to financial outcomes. The signal-to-noise ratio is low with respect to the category, as all content is off-topic for Revenue per Employee. These factors result in extremely low dimension scores and an overall confidence score that reflects an absence of both relevance and explicit connection.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "Continuous Integration",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-06T20:57:21",
    "ai_confidence": 18.8,
    "ai_mentions": 0.0,
    "ai_alignment": 2.8,
    "ai_depth": 2.2,
    "ai_intent": 2.1,
    "ai_audience": 5.1,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content thoroughly explains Continuous Integration as a software engineering practice, emphasizing collaborative development, early error detection, and value delivery. However, there are no direct mentions of Agnostic Agile, its principles, or its thought leaders. The conceptual alignment is very limited, as the text focuses exclusively on CI without reference to context-driven agility, ethical considerations, or pragmatic adaptation of methods. The depth is low regarding Agnostic Agile, as the discussion revolves solely around CI's mechanics and benefits. The main intent is educational around CI, not exploring Agnostic Agile philosophy. The audience may align somewhat with Agnostic Agile practitioners interested in process improvement, resulting in a moderate audience score. The signal-to-noise ratio is high because the content stays on topic about CI, but this topic itself is only tangentially relevant to Agnostic Agile. Thus, the overall confidence that this content belongs in the Agnostic Agile category is very low.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "Continuous Integration",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-06T20:57:22",
    "ai_confidence": 92.4,
    "ai_mentions": 7.7,
    "ai_alignment": 9.3,
    "ai_depth": 9.0,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "The content explicitly and thoroughly discusses Continuous Integration (CI) as a core practice within the realm of Engineering Excellence. CI is described as a software development practice that enhances code quality, promotes collaboration, enables early error detection, and reduces technical debt. These themes are entirely aligned with the provided classification definition, hitting key topics such as best practices, automation, team collaboration, technical debt management, and the impact on business agility. While the term 'engineering excellence' is not directly mentioned, CI as described here is presented as foundational to achieving excellence in software development. The discussion goes beyond surface level, explaining both how CI works and why it matters, demonstrating substantial depth. The intent is clearly instructive and supportive, aimed at technical audiences (engineers, developers, and teams) focused on improving their engineering practices. The content stays focused with minimal off-topic information (high signal-to-noise ratio). No outdated practices or negative tone are present, so no penalties were applied. The final score reflects both the high relevance and the small gap in direct category mentions.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the category, as it thoroughly explores Continuous Integration—a key aspect of Engineering Excellence. It clearly explains CI’s benefits, such as improved code quality and collaboration, and is aimed at helping technical teams enhance their practices. While the exact term isn’t used, the depth and focus on best practices make it highly relevant."
  },
  "Deployment Frequency": {
    "resourceId": "Continuous Integration",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-06T20:57:23",
    "ai_confidence": 34.45,
    "ai_mentions": 1.8,
    "ai_alignment": 3.6,
    "ai_depth": 3.4,
    "ai_intent": 3.8,
    "ai_audience": 4.2,
    "ai_signal": 3.95,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content primarily focuses on Continuous Integration (CI), describing its principles, benefits, and impact on code quality and team workflow. There are indirect references to practices that can enable frequent deployments (e.g., frequent merges, automation, rapid development, quick iteration), but the concept of 'Deployment Frequency' is never directly mentioned or explicitly framed as a core topic. Discussion of deployment intervals, release cadence, or direct optimization strategies for increasing deployment frequency is absent. While CI is certainly a foundational element that facilitates higher deployment frequency, the content does not explore this relationship in depth; rather, it discusses CI's role in collaboration, code quality, and continuous improvement more generally. The audience appears to be technical practitioners, which matches the intended category audience. Signal-to-noise is moderate, as most content is relevant but only tangentially addresses the classification's scope.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "Continuous Integration",
    "category": "Value Delivery",
    "calculated_at": "2025-05-06T20:57:25",
    "ai_confidence": 82.35,
    "ai_mentions": 6.7,
    "ai_alignment": 8.8,
    "ai_depth": 8.4,
    "ai_intent": 8.0,
    "ai_audience": 8.3,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly discusses Continuous Integration (CI), which is listed as a key topic under Value Delivery. CI is explained as a methodology for frequent code integration, automation, and error detection—concepts closely aligned with iterative, incremental delivery and maximising customer value. The description references how CI enables a healthier codebase, improved collaboration, faster feedback, and adaptability to customer needs, all of which fit the value delivery rubric. The depth is substantial given the description’s coverage of technical and team benefits, though it could have included more explicit references to customer satisfaction or business agility for a perfect score. The intended audience is developers or team leaders interested in Agile/DevOps practices, matching well with the category. Minimal irrelevant content or filler is present. There are no outdated concepts or contradictory tones. Direct naming of ‘Value Delivery’ is only implied via delivery outcomes and not explicitly stated, accounting for a moderate 'mentions' score. Each dimension is uniquely scored reflecting these nuances. Final confidence is strong, proportionate to the evidence of conceptual and practical alignment.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the Value Delivery category, as it thoroughly explores Continuous Integration—a core practice for delivering value through frequent, automated code changes. It highlights both technical and team benefits, aligning with Agile and DevOps principles. While it could mention customer outcomes more explicitly, its focus on improving delivery processes makes it highly relevant for this category."
  },
  "Market Share": {
    "resourceId": "Continuous Integration",
    "category": "Market Share",
    "calculated_at": "2025-05-06T20:57:25",
    "ai_confidence": 6.9,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 1.2,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is focused on explaining the software practice of Continuous Integration (CI), its benefits for code quality, team collaboration, and development workflow. There are no direct mentions of 'market share,' nor does the content discuss strategies, methodologies, or analysis directly related to increasing a product's presence or competitive positioning in the market. The conceptual alignment is minimal, as there is no explicit link between CI practices and market share expansion, competitive analysis, or related metrics. The depth of discussion is robust for CI as a technical topic, but entirely off-topic regarding market share. The intention is educational for technical practitioners, not for strategists seeking market share insights. The audience is mismatched, as it targets developers and engineering teams. While the content is coherent and on-topic for CI, nearly all of it is irrelevant to the category of Market Share, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "Continuous Integration",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-06T20:57:25",
    "ai_confidence": 21.67,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 7.1,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content is exclusively focused on the software development practice of Continuous Integration (CI) and does not directly mention or discuss Systems Thinking, its foundational principles, or its methodologies. While there are vague connections to concepts like feedback (in terms of early error detection) and team collaboration, the core themes are limited to best practices for CI and codebase health. There is no explicit or implicit discussion of mapping complex systems, holistic analysis, interdependencies, or any of the frameworks and tools outlined in the Systems Thinking category. The intent is to inform technical audiences on CI, which only incidentally overlaps in audience with Systems Thinking. Most of the content is highly relevant within its own scope (signal), but not to Systems Thinking. There are no outdated practices or oppositional tone present, so no penalties are applied. Given the extremely tenuous alignment, low mention, and lack of substantive Systems Thinking discussion, the confidence score is appropriately quite low.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "Continuous Integration",
    "category": "Agentic Agility",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 22.05,
    "ai_mentions": 0.4,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 3.2,
    "ai_audience": 8.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content exclusively discusses Continuous Integration (CI) as a software development practice. It highlights benefits such as early error detection, collaboration, faster feedback, reduced technical debt, and sustainable pace. However, it does not directly mention or define fundamental concepts like agency, intentionality, self-management, or adaptive actions within Agile, Scrum, or DevOps, which are central to the category of Agentic Agility. The main ideas are about workflow efficiency and code quality rather than the capacity for intentional, adaptive action linked to agency. The depth remains superficial concerning agentic agility as there is no exploration of autonomy, accountability, or the mechanisms enabling adaptive change in teams or systems. The purpose aligns at best tangentially, focusing on technical process improvement rather than agency-driven adaptability. The target audience aligns with technical implementers (developers, DevOps), somewhat similar to the category but not wholly focused on agency concepts. The signal-to-noise ratio is strong for CI but weakly relevant to Agentic Agility. No outdated practices or contradictory tones are present, so no penalties are applied. Overall, the confidence is very low as there is almost no substantive connection to the Agentic Agility category beyond the distant, implied enabling of adaptability by CI.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "Continuous Integration",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-06T20:57:26",
    "ai_confidence": 59.6,
    "ai_mentions": 1.9,
    "ai_alignment": 6.8,
    "ai_depth": 5.6,
    "ai_intent": 5.7,
    "ai_audience": 6.4,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content primarily addresses Continuous Integration as a development practice, with a focus on technical benefits such as early error detection, maintaining a healthy codebase, and reducing technical debt. There are some indirect references to Agile values, like fostering collaboration, supporting continuous improvement, and enabling teams to adapt to changing requirements. However, the Agile Manifesto, its core values, or the explicit principles are not directly mentioned. The document aligns notionally with Agile philosophy by emphasizing collaboration and responsiveness to change, but its main purpose is to promote CI as a technical practice rather than to explore Agile Values and Principles in depth. The depth of discussion on Agile philosophy is moderate—it goes beyond surface-level but stops short of a thorough exploration of the underlying values. The target audience (developers and technical teams) overlaps somewhat with those interested in Agile practices. The content maintains moderate relevance with little off-topic discussion. No penalties were applied, as the tone is neutral and there is no sign of outdated practices or contradiction. Therefore, confidence is moderate, reflecting relevant but indirect conceptual alignment.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "resourceId": "Continuous Integration",
    "category": "Azure Repos",
    "calculated_at": "2025-05-06T20:57:28",
    "ai_confidence": 18.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.7,
    "ai_intent": 1.0,
    "ai_audience": 7.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content exclusively discusses general principles and benefits of Continuous Integration (CI), with no explicit reference to Azure Repos or its core functionalities, such as source control, workflows, or integration with CI/CD pipelines in the Azure Repos context. 'Mentions' score is almost zero as neither Azure Repos nor associated features are named. 'Conceptual alignment' and 'depth' are very low—the discussion is fully generic, with no detail on Azure Repos, Git, TFVC, branching, pull requests, or Azure ecosystem specifics. 'Intent' remains low, as the purpose is to inform about CI broadly, not within the confines of Azure Repos. 'Audience alignment' is somewhat higher because the topic would interest technical practitioners—the same audience that would gravitate to Azure Repos discussions—but it's still not targeted. 'Signal-to-noise' is diminished: the content is on CI, but off-topic regarding Azure Repos. No penalties were applied, as the tone is neutral and the information is not outdated.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "Continuous Integration",
    "category": "Technical Debt",
    "calculated_at": "2025-05-06T20:57:28",
    "ai_confidence": 53.85,
    "ai_mentions": 2.3,
    "ai_alignment": 6.9,
    "ai_depth": 5.7,
    "ai_intent": 5.9,
    "ai_audience": 7.2,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content primarily presents Continuous Integration (CI) as a practice for improving code quality, collaboration, and team workflow rather than focusing on technical debt itself. Technical debt is mentioned only briefly: 'CI also plays a crucial role in reducing technical debt, as it encourages developers to address issues as they arise.' However, the main theme is not centered around managing or discussing technical debt in depth. The conceptual alignment is moderate since proactive CI practices do contribute to reducing the accumulation of technical debt and align with sustainable development, but the content discusses technical debt only as a secondary benefit of CI. There is some depth in explaining how CI can help prevent issues leading to technical debt, but there are no substantial strategies, measurement techniques, or case studies about technical debt. The audience is technical, matching the category's targets. The signal-to-noise ratio is relatively high—in that nearly all content is relevant—but the main focus is CI. As the sole explicit mention of technical debt is brief and not explored in detail, the confidence score reflects only a moderate fit for the Technical Debt category.",
    "level": "Tertiary"
  },
  "Test Driven Development": {
    "resourceId": "Continuous Integration",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-06T20:57:28",
    "ai_confidence": 13.17,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.5,
    "ai_intent": 0.9,
    "ai_audience": 5.1,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content primarily discusses Continuous Integration (CI) and its benefits for software development, such as frequent code merging, automated builds, early error detection, and improved collaboration. There is no mention—explicit or implicit—of Test Driven Development (TDD), nor does the content touch on any TDD-specific principles such as the Red-Green-Refactor cycle, writing tests before code, or particular TDD practices and tools. The main themes align with software quality and workflow but are not unique or specific to TDD. Depth is minimal for TDD since the content delves into CI only, and the intent is focused on promoting CI, not TDD. The audience is technical and overlaps somewhat with TDD practitioners, but the signal-to-noise is low as almost none of the discussion concerns TDD. Accordingly, confidence in this content fitting the TDD category is very low, with no penalties being applicable.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "Continuous Integration",
    "category": "Ethos",
    "calculated_at": "2025-05-13T21:57:40",
    "ai_confidence": 42.35,
    "ai_mentions": 0.8,
    "ai_alignment": 4.5,
    "ai_depth": 4.6,
    "ai_intent": 4.4,
    "ai_audience": 4.1,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content describes Continuous Integration as a development practice that improves software delivery, emphasizing collaboration, early error detection, and sustainable workflows. While it touches on cultural aspects (such as collaboration and continuous improvement), it never directly explores the foundational, demonstrable convictions or the deep system-level ethos underpinning why and how CI sustains authentic transformation. Most of the focus is on process, outcomes, and benefits rather than core beliefs or disciplined stances shaping the system. It lacks explicit mention of ethos and evidence of deep system convictions; thus, confidence is moderate but not high for fit to the Ethos category.",
    "reasoning_summary": "This content highlights the importance and benefits of Continuous Integration but only lightly hints at underlying values or ethos. It doesn't explicitly connect CI to the foundational beliefs or system-level convictions central to the Ethos category, so the fit is moderate and mostly indirect.",
    "level": "Tertiary"
  },
  "Customer Focus": {
    "resourceId": "Continuous Integration",
    "category": "Customer Focus",
    "calculated_at": "2025-05-13T21:57:39",
    "ai_confidence": 41.78,
    "ai_mentions": 1.3,
    "ai_alignment": 4.2,
    "ai_depth": 3.7,
    "ai_intent": 4.1,
    "ai_audience": 6.6,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content primarily describes Continuous Integration practices, focusing on technical benefits such as code merging, error detection, and workflow efficiency. There is only a brief, indirect link in the last paragraph to 'responding to customer needs effectively,' but it lacks specific examples or structured discussion about defining, measuring, or acting on customer outcomes. Discussion does not cover core customer value alignment, evidence-based feedback with real users, or prioritisation based on customer insights. Therefore, confidence in strong relevance to Customer Focus is low.",
    "reasoning_summary": "While the article highlights Continuous Integration's process improvements, direct linkage to customer-focused practices is minimal. Customer value is mentioned only superficially, with no substantial discussion of measuring, validating, or prioritising based on customer outcomes.",
    "level": "Tertiary"
  },
  "Project Management": {
    "resourceId": "Continuous Integration",
    "category": "Project Management",
    "calculated_at": "2025-05-13T21:57:34",
    "ai_confidence": 36.05,
    "ai_mentions": 1.45,
    "ai_alignment": 3.15,
    "ai_depth": 3.05,
    "ai_intent": 2.2,
    "ai_audience": 3.6,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content thoroughly discusses Continuous Integration (CI), focusing on software development practices such as code merging, automation, and error reduction. While there are some peripheral connections to project management (e.g., collaboration, delivery pace, continuous improvement), core project management elements—like methodologies, lifecycle phases, tools for risk/ resource/ stakeholder management, governance, or project roles—are absent. The intended audience seems to be developers and engineering teams, not project managers. Thus, coverage is tangential, with low direct relevance to project management.",
    "reasoning_summary": "While CI supports team collaboration and delivery, this content centers on software development practices—not project management principles, tools, or frameworks. It's only marginally relevant to the category, so the confidence score is justifiably low.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "resourceId": "Continuous Integration",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-05-13T21:57:41",
    "ai_confidence": 45.35,
    "ai_mentions": 1.1,
    "ai_alignment": 4.9,
    "ai_depth": 4.7,
    "ai_intent": 5.0,
    "ai_audience": 7.6,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content directly focuses on Continuous Integration (CI), emphasizing early error detection and gradual integration, which aligns somewhat with Shift Left principles—specifically, catching issues sooner in development. However, 'Shift Left Strategy' as defined involves early integration of testing, security, and compliance. This article does not explicitly mention Shift Left, nor does it discuss broader Shift Left methodologies, compliance, or security integration. The audience—development teams—matches the category, but the treatment is not deep or explicit enough on the Shift Left theme to score highly.",
    "reasoning_summary": "While this content promotes early problem detection and frequent integration—a partial fit with Shift Left—it's focused solely on CI and lacks explicit discussion or depth on the broader Shift Left Strategy, so confidence is moderate.",
    "level": "Tertiary"
  },
  "First Principal": {
    "resourceId": "Continuous Integration",
    "category": "First Principal",
    "calculated_at": "2025-05-13T21:57:38",
    "ai_confidence": 19.2,
    "ai_mentions": 0.6,
    "ai_alignment": 1.9,
    "ai_depth": 1.5,
    "ai_intent": 1.3,
    "ai_audience": 7.3,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content describes the practice, benefits, and culture of Continuous Integration but does not identify, explain, or apply first principles as foundational and immutable constraints. There is no discussion of irreducible truths or their role; instead, the focus is on practical advice and outcomes. Although relevant for DevOps practitioners, it treats CI as a valuable method, not as a first principle itself.",
    "reasoning_summary": "This content offers a practical description of Continuous Integration, focusing on its benefits and practices. It does not address first principles or foundational constraints, so confidence in matching the 'First Principal' category is very low.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "Continuous Integration",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-13T21:57:41",
    "ai_confidence": 15.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.6,
    "ai_intent": 1.8,
    "ai_audience": 5.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses entirely on Continuous Integration—a team-level software development practice. There are no direct or indirect references to portfolio management concepts such as project prioritization, strategic alignment, or value stream optimization. The discussion remains at the process and team execution level without connecting to management of a portfolio of initiatives, thus offering negligible conceptual alignment and relevance. The target audience is more technical (developers), not portfolio managers.",
    "reasoning_summary": "This content centers on Continuous Integration for developers and doesn't cover portfolio management concepts like strategic alignment, investment decisions, or value streams, making it only marginally relevant to the category.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "Continuous Integration",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-13T21:57:40",
    "ai_confidence": 37.35,
    "ai_mentions": 1.2,
    "ai_alignment": 3.2,
    "ai_depth": 3.6,
    "ai_intent": 4.3,
    "ai_audience": 6.5,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content explains Continuous Integration (CI) as a development practice focused on frequent code integration, early error detection, and automation of build and test processes. While CI is foundational to deployment pipelines and may indirectly support deployment strategies, the discussion here centers on development workflow and code health—not the methodologies or best practices for deploying software to production. There are no direct mentions or in-depth exploration of deployment techniques like blue-green, canary releases, or risk mitigation in deployments. The primary audience (developers/teams) overlaps with deployment strategy topics, but the relevance to the category is secondary and not direct.",
    "reasoning_summary": "The content mainly covers software development practices related to merging and testing code, with only indirect relevance to deployment strategies. It lacks direct discussion of deployment methods, so the fit with the category is limited.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "Continuous Integration",
    "category": "Test First Development",
    "calculated_at": "2025-05-13T21:57:42",
    "ai_confidence": 32.53,
    "ai_mentions": 0.7,
    "ai_alignment": 3.2,
    "ai_depth": 3.7,
    "ai_intent": 4.0,
    "ai_audience": 6.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses directly on Continuous Integration (CI)—its benefits, practices, and impact—without explicitly discussing Test First Development. While CI is adjacent to Test First, the core Test First concepts (defining criteria pre-implementation, Test-Driven Development, acceptance criteria, the focus on tests guiding software, manual-to-automated transitions) are absent. There is superficial alignment since CI often supports practices like TDD, but the material does not genuinely address Test First principles, intent, or techniques, hence low to moderate scores in mentions, alignment, and depth. The content does target a technical audience and is mostly on-topic regarding modern dev practices, but not sufficiently focused on Test First Development.",
    "reasoning_summary": "This resource discusses Continuous Integration, not Test First Development. While related, it lacks core Test First principles like defining success criteria and leading with tests. CI supports some similar aims, but this content doesn’t cover the category’s central themes, so confidence is low.",
    "level": "Ignored"
  },
  "Business Agility": {
    "resourceId": "Continuous Integration",
    "category": "Business Agility",
    "calculated_at": "2025-05-13T21:57:42",
    "ai_confidence": 60.8,
    "ai_mentions": 2.2,
    "ai_alignment": 7.4,
    "ai_depth": 6.8,
    "ai_intent": 5.8,
    "ai_audience": 7.2,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content discusses Continuous Integration (CI), focusing on its technical benefits for development teams: early error detection, codebase health, and sustainable delivery. While it touches on themes like collaboration, adaptability, and value delivery, it does not explicitly reference business agility and frames CI primarily as a technical/team enabler rather than as a holistic organisational capability. There is limited discussion on leadership, metrics, or wider organisational transformation. Audience is primarily developers, not executive or strategic roles. No penalties applied.",
    "reasoning_summary": "While the content covers CI's benefits—adaptability, value delivery, collaboration—its focus is largely technical. It aligns with agility principles but does not directly address business agility as an organisational transformation. Thus, confidence is moderate.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "resourceId": "Continuous Integration",
    "category": "One Engineering System",
    "calculated_at": "2025-05-13T21:57:40",
    "ai_confidence": 27.85,
    "ai_mentions": 0.3,
    "ai_alignment": 2.9,
    "ai_depth": 2.7,
    "ai_intent": 3.8,
    "ai_audience": 7.3,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content strictly focuses on Continuous Integration (CI) as a software development practice. Although CI can be a component of the One Engineering System framework, there is no direct mention or substantial tie-in to 1ES itself. The content does not discuss 1ES principles, frameworks, tools, or its integration across teams but instead discusses CI's general benefits for software teams. Audience and signal remain higher due to the technical focus and clarity, but overall, the content is only tangentially related to the category, primarily through the concept of integrated practices.",
    "reasoning_summary": "This content covers the principles and benefits of Continuous Integration, which is relevant to engineering practice but does not explicitly address the One Engineering System framework, its unique principles, or its use as a unifying approach. It only indirectly relates to the category.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "resourceId": "Continuous Integration",
    "category": "Self Organisation",
    "calculated_at": "2025-05-13T21:57:40",
    "ai_confidence": 46.3,
    "ai_mentions": 1.3,
    "ai_alignment": 4.7,
    "ai_depth": 4.2,
    "ai_intent": 5.1,
    "ai_audience": 6.2,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content thoroughly covers Continuous Integration (CI), emphasizing collaboration and continuous improvement within development teams. While CI practices can support self-organisation indirectly by encouraging team communication and shared responsibility, the text does not mention self-organisation or Agile concepts directly. There is little discussion of autonomy, empowerment, or the specific dynamics of self-organising teams. Instead, the focus is on the technical and procedural benefits of CI—code merging, error detection, and workflow quality—rather than core principles of self-organisation. The audience (developers and teams) overlaps somewhat, and there's moderate relevance because self-organisation is often present in teams that practice CI, but overall the alignment and depth concerning the specific category are limited.",
    "reasoning_summary": "This content describes CI and its value in code quality and collaboration. While it overlaps with themes of teamwork and improvement, it doesn't directly address or explore the principles of self-organisation, resulting in low to moderate category confidence.",
    "level": "Tertiary"
  },
  "Application Lifecycle Management": {
    "resourceId": "Continuous Integration",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-13T21:57:40",
    "ai_confidence": 61.1,
    "ai_mentions": 1.2,
    "ai_alignment": 7.4,
    "ai_depth": 6.8,
    "ai_intent": 7.3,
    "ai_audience": 8.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content thoroughly covers Continuous Integration, including its benefits, practices, and team impact. While CI is a crucial component in modern application development lifecycles, the content does not explicitly mention Application Lifecycle Management, nor does it address the full application lifecycle or governance aspects. The focus remains on CI's role in development and code quality, aligning moderately with ALM but lacking comprehensive coverage of other lifecycle stages, tools, or governance frameworks.",
    "reasoning_summary": "This content offers a thoughtful exploration of Continuous Integration and its impact on development workflows, which aligns partially with Application Lifecycle Management. However, it focuses solely on CI and does not address the broader ALM scope, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Modern Source Control": {
    "resourceId": "Continuous Integration",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-13T21:57:34",
    "ai_confidence": 74.2,
    "ai_mentions": 2.8,
    "ai_alignment": 7.6,
    "ai_depth": 7.9,
    "ai_intent": 7.5,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content provides an in-depth overview of Continuous Integration (CI), emphasizing collaboration, frequent merges, early error detection, and automated testing. These relate to themes of modern source control, especially integration practices and workflows. However, there are only indirect references to source control concepts like merging and shared repositories, with no direct mention of version control systems, branching, or specific source control tools. The principal alignment is via discussion of merging and codebase health, which are adjacent to source control best practices but not the central focus of the content. Therefore, while CI is a critical DevOps and modern software engineering practice intersecting with source control, the main topic is broader CI processes, not strictly modern source control. This warrants strong but not maximal alignment and depth scores, with no penalties applied.",
    "reasoning_summary": "The content focuses on Continuous Integration and overlaps with modern source control practices through discussions of merging, shared repositories, and collaboration. While not directly about version control systems, its themes align well, resulting in a strong but not perfect category fit.",
    "level": "Secondary"
  },
  "Definition of Workflow": {
    "resourceId": "Continuous Integration",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:44",
    "ai_confidence": 15.2,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.0,
    "ai_intent": 2.2,
    "ai_audience": 4.0,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses exclusively on Continuous Integration—its purpose, benefits, and how it supports agile development. There are no direct references or discussions about the Definition of Workflow or related Kanban/agile workflow concepts (no mention of policies, entry/exit criteria, WIP limits, or explicit agreements). The alignment and depth are minimal, as the primary discussion centers on CI practices. The intended audience is developers and agile teams, which slightly overlaps with the category, but the core topic remains outside the strict scope, so low scores are applied across most dimensions and a very low overall confidence is warranted.",
    "reasoning_summary": "This content discusses Continuous Integration practices without referencing the Definition of Workflow or related Kanban policies. Its focus is on CI processes and benefits, not explicit workflow definitions, resulting in very low alignment with the specified category.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "resourceId": "Continuous Integration",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-23T22:06:49",
    "ai_confidence": 12.3,
    "ai_mentions": 0.5,
    "ai_alignment": 1.6,
    "ai_depth": 2.0,
    "ai_intent": 1.3,
    "ai_audience": 2.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content does not discuss installation or configuration of CI tools; it focuses on conceptual and cultural aspects of Continuous Integration. There are no direct instructions, step-by-step guides, or references to implementing or configuring any specific CI tools or environments. The audience seems targeted toward understanding CI principles, not those seeking technical installation help. Only a few implicit mentions may touch on CI's role in workflows, but nothing technical or actionable regarding setup. No penalties required.",
    "reasoning_summary": "This content outlines the principles and benefits of Continuous Integration but lacks any discussion of installation or configuration steps, making it poorly aligned with the 'Install and Configuration' category.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "Continuous Integration",
    "category": "Objective Key Results",
    "calculated_at": "2025-07-23T12:08:07",
    "ai_confidence": 3.9,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.8,
    "ai_intent": 1.2,
    "ai_audience": 1.6,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses exclusively on Continuous Integration (CI), describing its principles, benefits, and implementation in software development teams. There is no direct mention, explanation, or exploration of Objective Key Results (OKRs), nor is there reference to outcome-based measurement, strategic intent, or the OKR framework as defined by John Doerr. The content's intent is to inform about CI practices and benefits for agile software delivery, not OKRs. The audience, while possibly overlapping with OKR practitioners (e.g., technical teams, Agile practitioners), is targeted via the technical lens of software quality, not goal-setting frameworks. There is minimal thematic overlap (such as continuous improvement), but these aspects are not in the context of OKRs. The content maintains strong focus on CI with little noise, but is tangential or unrelated to the OKR category per classification definition.",
    "reasoning_summary": "This content discusses Continuous Integration practices and benefits, but does not mention or align with OKRs or their theoretical framework. It is not relevant to the Objective Key Results category as per the definition provided.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "Continuous Integration",
    "category": "Product Developer",
    "calculated_at": "2025-07-23T12:08:18",
    "ai_confidence": 35.65,
    "ai_mentions": 0.6,
    "ai_alignment": 4.7,
    "ai_depth": 4.4,
    "ai_intent": 4.1,
    "ai_audience": 5.3,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content thoroughly describes Continuous Integration, its practices, and its benefits for development teams. However, it does not explicitly mention 'Product Developer' or directly address their specific accountability as defined by the category. While CI practices can be crucial for Product Developers, the content maintains a generic focus on software team practices rather than detailing how these practices relate to the Product Developer role, collective accountability, or integration with formal frameworks like Scrum. The depth, alignment, and mentions scores are moderate as the discussion is tangential to the category's core meaning. No penalties were applied, as tone and references are current and non-contradictory.",
    "reasoning_summary": "This content explains Continuous Integration practices in depth, focusing on general software team benefits rather than directly addressing Product Developer roles or accountabilities. Alignment with the category is partial but lacks direct connection to Product Developer-specific frameworks.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "Continuous Integration",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:08:44",
    "ai_confidence": 37.65,
    "ai_mentions": 0.0,
    "ai_alignment": 3.4,
    "ai_depth": 3.8,
    "ai_intent": 4.2,
    "ai_audience": 6.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content provides an overview of Continuous Integration (CI), highlighting themes of automation, team collaboration, rapid feedback, and continuous improvement—concepts that vaguely relate to Agentic Engineering. However, it never directly references Agency, Agentic Engineering, human/AI autonomy, ethical AI integration, or decision-making decentralisation. The primary focus stays on CI as a foundational practice in software engineering, not on deliberately maximising the agency of humans or intelligent systems. Depth and alignment to the category are low, with surface-level references to related cultural or process outcomes but lacking explicit agentic framing. No mention of intelligent systems, ethical considerations, or frameworks that augment agency. Audience and signal are moderate, as the piece targets practitioners and stays largely on topic. No penalties were applied.",
    "reasoning_summary": "This content thoroughly explains Continuous Integration but does not engage with the agentic, autonomy-maximising, or human/AI collaborative themes outlined in Agentic Engineering. While thematically adjacent, it lacks explicit intent or depth tying it to the category.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "Continuous Integration",
    "category": "Collective Intelligence",
    "calculated_at": "2025-07-23T12:08:50",
    "ai_confidence": 14.85,
    "ai_mentions": 0.4,
    "ai_alignment": 1.7,
    "ai_depth": 2.1,
    "ai_intent": 2.3,
    "ai_audience": 4.3,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses exclusively on Continuous Integration as a software engineering practice. Although it discusses human collaboration and automation, it does not address AI participation, human-AI team dynamics, or any notion of humans and AI collaborating as team members—a central requirement for the Collective Intelligence category. The audience overlaps somewhat (tech practitioners), but the main ideas, terminology, and examples remain outside the intended scope. No penalties were applied—there is no evidence of obsolescence or contradiction.",
    "reasoning_summary": "This content centers on developer collaboration via CI practices but lacks any discussion of human-AI team dynamics, which is essential for Collective Intelligence. The focus remains purely on human teamwork and automation, not on human-AI collaboration or emergent joint capabilities.",
    "level": "Ignored"
  },
  "Agentic Software Delivery": {
    "resourceId": "Continuous Integration",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:12:00",
    "ai_confidence": 22.2,
    "ai_mentions": 0.4,
    "ai_alignment": 2.5,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 6.3,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content discusses Continuous Integration (CI) as an engineering practice for improving software delivery: frequent code integration, automated testing, and rapid feedback. It aligns with one enabler (modern practices) for Agentic Software Delivery but does not mention or imply integration of autonomous AI agents, human-AI synergy, contextual intelligence, or agency themes. The main intent is educational about CI itself—audience is technical and content is focused, but no agency or agentic principles are described or alluded to.",
    "reasoning_summary": "This content explains CI, aligning it only partially with Agentic Software Delivery (as a supporting practice), but lacks discussion of AI agents, agency, or agentic principles. Fit is peripheral and conceptual alignment is weak.",
    "level": "Ignored"
  }
}