{
  "Tool": {
    "category": "Tool",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) as a practice rather than focusing on specific tools that facilitate this methodology. While it touches on collaboration and quality assurance, it does not explicitly mention any tools or their integration within Agile frameworks, which is essential for a stronger alignment with the 'Tool' category.",
    "level": "Ignored"
  },
  "Accountability": {
    "category": "Accountability",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 32.0,
    "ai_mentions": 15.0,
    "ai_alignment": 25.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) and its role in aligning development efforts with business needs, which touches on accountability in terms of shared understanding among stakeholders. However, it does not explicitly focus on accountability as a structural construct or discuss specific roles like Product Owner or Scrum Master. The discussion is more about collaboration and quality assurance rather than clearly defined outcome ownership, which is central to the accountability category.",
    "level": "Ignored"
  },
  "Framework": {
    "category": "Framework",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) as a methodology that enhances collaboration and quality in software development. While it touches on principles that align with Agile practices, such as collaboration and continuous improvement, it does not explicitly mention any specific frameworks like Scrum or Kanban. The focus is more on the ATDD practice itself rather than a structured framework, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Values": {
    "category": "Value",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 50,
    "final_score": 32.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) primarily in terms of its practical application and benefits for software development, focusing on alignment with business needs and value delivery. While it mentions collaboration and a culture of shared responsibility, which are related to values, the primary focus is on the methodology and outcomes rather than the underlying values that guide behaviour and decision-making. The discussion lacks depth in exploring the philosophical foundations or ethical implications of these practices, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Tenet": {
    "category": "Tenet",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 22,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) in detail, highlighting its role in aligning development efforts with business needs and fostering collaboration among stakeholders. While it does not explicitly mention Agile or Lean tenets, it embodies principles such as continuous improvement and collaboration, which are core to these methodologies. The depth of discussion on how ATDD enhances predictability and quality in software development contributes to a strong alignment with the category, though it lacks direct references to specific tenets.",
    "level": "Secondary"
  },
  "Method": {
    "category": "Method",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 82.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content provides a detailed discussion on Acceptance Test Driven Development (ATDD), which is a specific method used in software development. It explicitly mentions the structured approach of defining acceptance criteria before implementation, aligning closely with the core themes of the 'Method' category. The depth of discussion is significant, covering the collaborative nature of ATDD, its benefits in terms of quality and predictability, and its role in fostering a culture of continuous improvement. Overall, the content aligns well with the category, focusing on procedural aspects rather than broader philosophies or tools.",
    "level": "Primary"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 28,
    "ai_depth": 22,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) and its role in aligning development efforts with business needs, which ties into strategic alignment. However, it primarily focuses on the practice itself rather than a broader strategic framework. While it mentions collaboration and alignment, it lacks a comprehensive discussion on high-level strategic planning or decision-making, which limits its overall alignment with the Strategy category.",
    "level": "Secondary"
  },
  "Practice": {
    "category": "Practice",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 50,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses Acceptance Test Driven Development (ATDD) as a practice, detailing its collaborative nature and the importance of defining acceptance criteria. It aligns well with the core themes of the 'Practice' category by focusing on actionable techniques that enhance team performance and value delivery. The depth of discussion is significant, covering the benefits of ATDD, its impact on quality, and fostering a culture of collaboration, which are all essential aspects of effective practices in software development.",
    "level": "Primary"
  },
  "Philosophy": {
    "category": "Philosophy",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 25.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 40.0,
    "non_ai_confidence": 0,
    "final_score": 25.0,
    "reasoning": "The content primarily focuses on the practice of Acceptance Test Driven Development (ATDD) and its implementation details, which are not aligned with the philosophical discussions expected in this category. While it touches on collaboration and alignment with business needs, these aspects are more about the 'how' rather than the 'why' and 'what' behind the practices. The discussion lacks a deeper exploration of the philosophical foundations that guide these methodologies.",
    "level": "Ignored"
  },
  "Observability": {
    "category": "Observability",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily focuses on Acceptance Test Driven Development (ATDD) and its benefits for software quality and team collaboration. While it touches on aspects of alignment with business needs and quality assurance, it does not explicitly discuss observability, metrics, logs, or traces, nor does it delve into the principles or tools associated with observability. Therefore, the content does not align well with the category.",
    "level": "Ignored"
  },
  "Capability": {
    "category": "Capability",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) in a way that aligns with the concept of capability by emphasising the importance of defining clear acceptance criteria and fostering collaboration among stakeholders. It highlights how ATDD enhances predictability and sustainability in value delivery, which are key characteristics of capabilities. The discussion on embedding quality and supporting continuous improvement practices further strengthens its alignment with the category. However, the focus on ATDD as a specific practice and its procedural aspects slightly detracts from a broader discussion on capabilities, leading to a high but not perfect confidence score.",
    "level": "Secondary"
  },
  "Model": {
    "category": "Model",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 32.0,
    "ai_mentions": 10,
    "ai_alignment": 15,
    "ai_depth": 20,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) and its role in aligning development efforts with business needs, which touches on aspects of models in terms of frameworks for understanding and managing complexity. However, it does not explicitly mention any of the key models or frameworks outlined in the category description, such as the Cynefin Framework or Lean Startup principles. The discussion is more focused on a specific practice rather than a broader conceptual model, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Principle": {
    "category": "Principle",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) in detail, highlighting its role in aligning development efforts with business needs and fostering collaboration among stakeholders. It explicitly mentions principles such as value delivery and continuous improvement, which are core themes of the category. The depth of discussion is significant, as it explains how ATDD enhances predictability and quality, supporting a systematic approach to development. However, while it touches on principles, it primarily focuses on a specific practice rather than a broader discussion of principles themselves.",
    "level": "Secondary"
  },
  "Artifact": {
    "category": "Artifact",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) and its role in defining acceptance criteria, which indirectly relates to the concept of artifacts in Agile. However, it does not explicitly mention specific artifacts or their structure, purpose, or management. The focus is more on the process and collaboration rather than on tangible artifacts themselves, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Discipline": {
    "category": "Discipline",
    "calculated_at": "2025-04-10T13:21:15",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) in detail, focusing on its role in ensuring quality and alignment with business needs. While it does not explicitly mention 'discipline', the principles of ATDD promote a disciplined approach to software development through clear criteria and collaboration. The depth of discussion on how ATDD fosters a systematic way of working contributes to a strong alignment with the concept of discipline, though it is not the primary focus.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Scrum Values",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 33.367,
    "ai_mentions": 0.7,
    "ai_alignment": 3.2,
    "ai_depth": 3.4,
    "ai_intent": 3.1,
    "ai_audience": 6.6,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content provides an overview of Acceptance Test Driven Development (ATDD), focusing on its process, benefits, and impact on collaboration and quality in software delivery. While there are indirect resonances with Scrum Values—such as collaboration and shared responsibility (which touch on respect, openness, and commitment)—there is no direct mention of Scrum, the Scrum Values, or explicit alignment to the principles of commitment, courage, focus, openness, or respect as defined in the Scrum Guide. \n\n- Mentions (0.7): 'Scrum' or 'Scrum Values' are not mentioned at all; only very generic language could be weakly mapped.\n- Alignment (3.2): The focus is on ATDD practices and their benefits, not on articulating, teaching, or exploring Scrum Values themselves. There is minor, indirect conceptual overlap where shared responsibility and collaboration are described, but this is incidental rather than intentional alignment.\n- Depth (3.4): The discussion is moderately thorough regarding ATDD as a practice but does not discuss the definition, role, or application of Scrum Values.\n- Intent (3.1): The primary intent is to inform and advocate for ATDD, not to educate about Scrum Values.\n- Audience (6.6): The audience for this content (practitioners, developers, and stakeholders in Agile teams) can overlap with the usual Scrum Values audience, but it is not guaranteed; the framing is process/tool focused, not values/principles focused.\n- Signal (6.2): The piece is well-focused on ATDD, with little filler or off-topic material, although most of the signal relates to testing practice rather than Scrum principles.\n\nNo penalties were applied because the tone was neutral/supportive and the information is current. Overall, while there are minor indirect connections to Scrum Values (collaboration, shared understanding, focus), the content does not address or discuss them explicitly or in depth. Thus, the assignment to 'Scrum Values' is quite weak, and the confidence level reflects an appropriate tertiary alignment.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 60.359,
    "ai_mentions": 1.7,
    "ai_alignment": 7.4,
    "ai_depth": 6.9,
    "ai_intent": 7.6,
    "ai_audience": 8.1,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "This content discusses Acceptance Test Driven Development (ATDD), which is adjacent to the 'Metrics and Learning' category but not a core fit. \n\nMentions: The text never directly references 'metrics,' 'learning,' or related terms. There are no explicit mentions of metrics, data, measurement, or feedback loops. Thus, the 'Direct Mentions' score is very low (1.7).\n\nAlignment: There is moderate conceptual alignment. ATDD touches on continuous improvement, shared understanding, and learning, but it is primarily a development/testing practice, not a metrics or evidence-driven one by itself. There are hints of iterative learning and process improvement, resulting in a fairly strong, but not perfect, alignment (7.4).\n\nDepth: The text explores ATDD in detail, emphasizing collaboration, clarity, and process improvement, but stops short of deeply discussing how metrics or feedback loops drive learning. There is some exploration of systematic processes and continuous improvement, so depth is moderate-high (6.9).\n\nIntent: The main intent is to promote ATDD for quality and alignment, with secondary nods to continuous improvement and learning. The intent fits the Agile/DevOps mindset, but metrics and data are not the core focus, yielding a solid (7.6).\n\nAudience: The target audience is Agile teams, product owners, developers, and testers—broadly overlapping with the intended readers of 'Metrics and Learning' content. Very strong alignment, but just slightly imperfect as it may also appeal to QA specialists outside the metrics/learning sphere (8.1).\n\nSignal: The content is focused and relevant with little noise or off-topic material, though its relevance to 'Metrics and Learning' is not direct but adjacent; thus, a high but not perfect score (8.3).\n\nNo penalties are applied as the content is current, respectful of the category frame, and contains no outdated or contradictory elements.\n\nLevel: 'Secondary'—ATDD is not itself a metrics practice but supports continuous improvement and learning indirectly, making metrics and learning an important, but not primary, effect of the practice.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 37.896,
    "ai_mentions": 0.1,
    "ai_alignment": 5.2,
    "ai_depth": 3.9,
    "ai_intent": 4.3,
    "ai_audience": 7.0,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "1. Direct Mentions: The content never mentions 'Value Stream Management' or related terminology explicitly; it focuses exclusively on 'Acceptance Test Driven Development' (ATDD), which is a distinct (though related) practice. Score: 0.100.\n\n2. Conceptual Alignment: The text aligns with VSM only tangentially—as ATDD can contribute to improved value delivery and efficiency. However, it does not discuss value stream mapping, optimising flow, identifying waste, or other core VSM concepts. It addresses alignment with business needs and efficient value delivery, but without explicit VSM strategies or principles. Score: 5.200.\n\n3. Depth of Discussion: The discussion is in-depth about ATDD processes, benefits, and practices but does not delve into VSM frameworks, tools, or implementation detailedly. VSM is not explored beyond general comments about value delivery. Score: 3.900.\n\n4. Intent / Purpose Fit: The main intent is to educate about ATDD, not VSM. While the content highlights delivering value efficiently and aligning with business needs, VSM is not a central purpose. Score: 4.300.\n\n5. Audience Alignment: The audience would generally be practitioners and strategists interested in improving software development processes—a partial overlap with a VSM audience. Score: 7.000.\n\n6. Signal-to-Noise Ratio: The content is focused, but only incidentally relevant to Value Stream Management. Most of the text is about ATDD without explicit ties to the VSM category. Score: 5.300.\n\nNo penalty adjustments were needed: The content is current, not satirical or critical, and does not reference obsolete practices.\n\nIn summary, this resource is only tangentially relevant to Value Stream Management. It belongs at the 'Tertiary' level, as ATDD may support some VSM goals (efficient value delivery, alignment with business outcomes), but the discussion is not about VSM directly. The confidence score reflects this limited but partial connection.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Lean Principles",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 57.583,
    "ai_mentions": 1.43,
    "ai_alignment": 7.06,
    "ai_depth": 6.925,
    "ai_intent": 7.095,
    "ai_audience": 5.74,
    "ai_signal": 6.45,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content focuses fully on Acceptance Test Driven Development (ATDD), discussing its collaborative nature, emphasis on early and shared acceptance criteria, and connection to quality, predictability, and value delivery. However, Lean Principles are not directly mentioned, nor are classic Lean tools or terminology (e.g., Muda, Kaizen, Value Stream Mapping, 5S, pull systems). ATDD does have conceptual overlap with Lean, especially regarding iterative learning, reducing rework and waste, and continuous improvement, positioning its alignment score as above average. The depth describes ATDD’s philosophy, process implications, and cultural impact, but it does not examine the broader Lean framework or deeply tie ATDD back to Lean principles. The intent is closely aligned since the content aims to maximize value and reduce waste (core Lean concerns), but by focusing on a specific agile/testing practice rather than Lean overall, the fit is not perfect. The audience fits reasonably (technical/development teams interested in process improvement overlap with Lean’s practitioners), but may not appeal directly to Lean strategists or enterprise Lean facilitators. Signal is fairly strong, as the content is focused, but it remains primarily about ATDD—not Lean itself—so tangential for this category. No penalties apply, as the content is current, constructive, and not critical toward Lean. The overall confidence score thus sits at a moderate secondary level, reflecting that while ATDD embodies Lean-adjacent values and enables some Lean outcomes, it does not explicitly teach or discuss Lean Principles as such.",
    "level": "Tertiary"
  },
  "Market Adaptability": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 65.985,
    "ai_mentions": 2.7,
    "ai_alignment": 7.9,
    "ai_depth": 7.8,
    "ai_intent": 6.5,
    "ai_audience": 7.3,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 66.0,
    "reasoning": "The content centers on Acceptance Test Driven Development (ATDD), emphasizing collaboration, quality assurance, and alignment with business needs. \n\n1. **Direct Mentions (2.7):** The text does not use the phrase 'Market Adaptability' or specifically reference Agile, DevOps, or Lean by name. However, it does discuss agility and adapting to changing requirements, implicitly referencing adaptability-related concepts, but without explicit mention of the category or its core frameworks—hence a low score here.\n\n2. **Conceptual Alignment (7.9):** The core ideas — fostering collaboration, aligning development with business needs, proactively addressing change, and encouraging learning — are well-aligned with the principles behind market adaptability. ATDD supports adaptability by enabling rapid response to changing requirements, though the connection is indirect (the focus is more on quality and alignment than explicit market responsiveness).\n\n3. **Depth of Discussion (7.8):** The content provides a thorough overview of ATDD, discussing its collaborative practices, process improvements, shift-left approaches, and long-term benefits. However, it doesn’t directly tie these to market dynamics or describe how ATDD specifically addresses market shifts or competitive pressures.\n\n4. **Intent / Purpose Fit (6.5):** The primary intent is to inform about ATDD as a methodology for better software development. While this supports adaptability in a general sense, the content’s main purpose is aligned with process quality rather than directly enabling market adaptability, so the fit is partial.\n\n5. **Audience Alignment (7.3):** The article targets practitioners (developers, testers, product owners) — generally the audience for market adaptability discussions, though it doesn't specifically address strategists or executives who are often key in market adaptation decisions.\n\n6. **Signal-to-Noise Ratio (7.1):** The text stays strongly focused on ATDD and its process value, with little off-topic material. However, since it does not ground its discussion in the specific context of responding to market or competitive change, some of its focus is just slightly tangential to the strict definition of the category.\n\n**Level: Secondary:** ATDD is a practice that bolsters organisational agility and adaptability, but the article does not explicitly frame it within the context of market adaptability, nor does it detail strategies for market responsiveness using Agile, DevOps, or Lean principles. Its relevance is indirect, supporting but not driving the category's core meaning.\n\n**No penalties applied:** The information is current, constructive, and does not critique or undermine the underlying principles.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 42.567,
    "ai_mentions": 0.7,
    "ai_alignment": 4.9,
    "ai_depth": 4.4,
    "ai_intent": 6.2,
    "ai_audience": 7.3,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content thoroughly explains Acceptance Test Driven Development (ATDD) as a collaborative, quality-focused software development practice. However, there are no direct or explicit mentions of 'Evidence Based Management' (EBM) or any EBM-specific concepts by name, resulting in a low score for direct mentions (0.7). Conceptual alignment is moderate (4.9): ATDD's emphasis on aligning with business needs, collaboration, quality, and value delivery touches tangentially on EBM's focus on empirical, value-driven management but does not directly address EBM's distinctive dimensions such as Current Value, Time to Market, Ability to Innovate, Unrealised Value, or empirical outcome measurement. Depth (4.4) is fair—the article explores ATDD in substantive detail but does not connect it to management, empirical metrics, or outcome-based improvement. The intent seems partially aligned (6.2): the content is meant to improve business alignment and value delivery, echoing EBM's goals, but stops short of positioning ATDD as a tool for evidence-based strategic management. Audience alignment (7.3) is high as it targets product owners, developers, and testers—roles often involved in evidence-based management conversations—although it’s more operational/technical than management/strategic. Signal-to-noise (8.2) is high as the content is focused on ATDD throughout with minimal distraction. No penalties are applied, as there is no outdated or contradictory material. The overall confidence score is low, and the level is Tertiary, since ATDD is related as a possible enabling practice but is not directly, explicitly, or thoroughly positioned within the Evidence Based Management framework.",
    "level": "Tertiary"
  },
  "One Engineering System": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "One Engineering System",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 23.15,
    "ai_mentions": 0.5,
    "ai_alignment": 2.0,
    "ai_depth": 2.1,
    "ai_intent": 3.1,
    "ai_audience": 3.4,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content is focused on Acceptance Test Driven Development (ATDD), a practice within software development, but does not mention the 'One Engineering System' (1ES) explicitly or implicitly refer to its core framework, principles, or goals. \n\n1. Mentions (0.5): There is no direct reference to 'One Engineering System' or 1ES. The term does not appear nor is the concept referenced. This warrants a score near the minimum.\n\n2. Alignment (2.0): While ATDD is a practice that may feature within aspects of an engineering system, the writeup is narrowly focused on ATDD. It barely aligns with 1ES’s emphasis on broad tool/process standardisation and integration. ATDD adoption could be discussed as part of 1ES, but that is not reflected here, so alignment is weak.\n\n3. Depth (2.1): The discussion is solely about ATDD’s benefits, principles, and process. There is no exploration of broader frameworks, integrated systems, or the challenges of standardising engineering practices at scale. The treatment of the topic is moderate only within the ATDD scope and shallow with respect to 1ES.\n\n4. Intent (3.1): The intent is clearly to inform practitioners about ATDD, not 1ES. While both target development process improvement, the piece is not tailored for 1ES’s integration and standardisation mission. However, the helpful tone just barely raises the score.\n\n5. Audience (3.4): The audience is primarily practitioners and possibly technical team leads interested in ATDD. This partially matches the 1ES audience (which includes technical leaders), but is still too narrow, as there’s no evidence of broader appeal to the cross-team, systems-level engineering audience of 1ES.\n\n6. Signal (2.8): The content is focused and relevant to ATDD, but most of this is noise with respect to the 'One Engineering System' category—none of it directly touches on standardisation or integration at the system level, which is the main subject of the category.\n\nNo penalties applied as the discussion is current, neutral-positive, and not outdated or satirical. \n\nThis is a textbook example of tertiary relevance: ATDD as a concept might be implemented within 1ES, but nothing in this content makes that connection nor situates ATDD within the 1ES framework. Thus, the confidence is very low and only above zero because the concept could theoretically intersect.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 16.933,
    "ai_mentions": 0.6,
    "ai_alignment": 2.9,
    "ai_depth": 2.7,
    "ai_intent": 2.2,
    "ai_audience": 4.7,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content primarily discusses Acceptance Test Driven Development (ATDD), focusing on defining clear acceptance criteria, aligning development with business needs, and fostering team collaboration. \n\n- Mentions (0.600): The content does not explicitly mention portfolio management or related terminology but includes marginal references to business alignment at the team level.\n- Alignment (2.900): There is some conceptual overlap with a broader business alignment philosophy, but the core of portfolio management—strategic alignment of initiatives, prioritisation, metrics, or risk at a portfolio level—is not present.\n- Depth (2.700): The discussion is limited to the practice and benefits of ATDD; it does not explore or even tangentially discuss methodologies or processes for managing a project portfolio.\n- Intent (2.200): The primary purpose is to inform practitioners about ATDD techniques, not about portfolio management or its strategic concerns.\n- Audience (4.700): The content targets practitioners (developers, testers, product owners), which is adjacent to but not central to the executive/strategic audience of portfolio management.\n- Signal (3.800): The content is focused and relevant to ATDD and software development, but largely irrelevant to portfolio management, with only minor allusions to aligning with business goals.\n\nNo penalties are applied since the content does not reference outdated practices or demonstrate an inappropriate tone. However, the overall confidence is very low, and the classification as 'Portfolio Management' would only be considered at a tertiary, tangential level due to minor conceptual overlap.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Self Organisation",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 56.33,
    "ai_mentions": 0.45,
    "ai_alignment": 7.65,
    "ai_depth": 6.6,
    "ai_intent": 7.1,
    "ai_audience": 7.35,
    "ai_signal": 7.95,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "Direct Mentions (0.45): The content does not mention 'self-organisation' by name or make explicit references to it or closely allied terms; it only implicitly touches related ideas of 'shared responsibility' and 'collaboration.'\n\nConceptual Alignment (7.65): While the core of the article is about ATDD, several underlying themes—team collaboration, shared responsibility, and proactive quality—align indirectly with self-organisation principles such as team autonomy and accountability. However, the emphasis is not explicitly on self-organisation as defined in the classification.\n\nDepth of Discussion (6.6): The content offers a solid, if indirect, exploration of team dynamics that support autonomy (shared understanding, collaboration), but focuses primarily on the ATDD technique. Discussion of how ATDD supports self-organisation is underdeveloped.\n\nIntent / Purpose Fit (7.1): The content's main purpose is to promote ATDD for quality improvement and collaboration, which tangentially supports self-organisation but is not centered on it. The fit is supportive but not intentional.\n\nAudience Alignment (7.35): The audience is Agile practitioners, teams, and technical roles—aligned with those interested in self-organisation, although not exclusively targeting them.\n\nSignal-to-Noise Ratio (7.95): Most of the content is highly relevant to improving team practices and collaboration, with little off-topic or filler material, but the specific signal towards self-organisation is diffuse.\n\nNo penalties have been applied: The content is current, constructive, and does not contradict the core framing of self-organisation.\n\nOverall, the article is a Secondary fit—it reinforces some aspects of self-organisation (collaboration, shared responsibility, continuous improvement) as indirect effects of ATDD, but does not address or explore self-organisation as its focus. The confidence score reflects moderate but not strong alignment.",
    "level": "Tertiary"
  },
  "Remote Working": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Remote Working",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 3.84,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 1.2,
    "ai_intent": 0.7,
    "ai_audience": 0.7,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content is focused entirely on Acceptance Test Driven Development (ATDD), explaining its principles, collaborative approach, benefits, and alignment with Agile processes. There are no direct or even tangential references to remote working or distributed Agile teams. The themes, terminology, and audience are aligned with general Agile practitioners interested in software quality practices, but not with remote work challenges, tools, or strategies. There is no discussion or example involving remote teams, remote ceremonies, distributed collaboration, or technology supporting remote Agile work. While the content mentions 'collaboration' and 'team members', these are generic and not tied to the context of remote or distributed teams—instead, the focus is universal best practices for Agile and ATDD. Consequently, the scores reflect near-absence of category relevance: extremely minimal mention, weak conceptual alignment, and depth, off-intent, and non-targeted audience. There is no outdated or contradictory information, so no penalties are applied. The confidence score is low and proportionate as per the formula. The relevance to 'Remote Working' is tertiary at best—only in that remote teams might also practice ATDD, though this is never mentioned directly or implied.",
    "level": "Ignored"
  },
  "Scaling": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Scaling",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 13.383,
    "ai_mentions": 0.0,
    "ai_alignment": 2.1,
    "ai_depth": 2.3,
    "ai_intent": 2.5,
    "ai_audience": 3.2,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD) as a collaborative practice within software development teams. \n\n(1) Direct Mentions (0.0): At no point does the content directly reference 'Scaling' or any scaling frameworks (such as SAFe, LeSS, Nexus), nor does it address multi-team or enterprise-scale coordination. \n\n(2) Conceptual Alignment (2.1): While the content briefly touches on alignment with business needs and mentions 'organisations' and 'teams', its emphasis is strictly on improving quality and collaboration within a team context. There is no exploration of methodologies, frameworks, or techniques for coordinating multiple teams or delivering complex products at scale. The only tangential connection is the notion of agility and value delivery, but these are not discussed in a scaling context.\n\n(3) Depth of Discussion (2.3): The discussion is deep and accurate regarding ATDD itself but does not progress into scaling topics. There are no references to cross-team collaboration, management of dependencies, or enterprise-level alignment discussed in the classification definition.\n\n(4) Intent / Purpose Fit (2.5): The primary intent is to inform about ATDD for individual/team-level improvement. There is little to no relevance to enterprise scaling, and the purposes described in the category’s definition (optimising flow across multiple teams, lean principles at scale) are not addressed.\n\n(5) Audience Alignment (3.2): The audience is likely technical practitioners focused on team-level quality and collaboration, not those dealing with the complexities of coordinating multiple agile teams or roles at the enterprise scale. \n\n(6) Signal-to-Noise Ratio (3.9): The content is highly focused but not on the 'Scaling' domain; it is relevant and non-tangential for ATDD but not for scaling, which limits its signal for this particular category.\n\nNo penalties were applied as the content is not outdated and maintains a neutral, informative tone without contradicting the category framing. \n\nOverall, the content maintains minimal overlap with 'Scaling' as strictly defined by the guidelines, earning it a low confidence score and a 'Tertiary' level of relevance.",
    "level": "Ignored"
  },
  "GitHub": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "GitHub",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 9.6,
    "ai_mentions": 0.3,
    "ai_alignment": 1.0,
    "ai_depth": 1.1,
    "ai_intent": 0.6,
    "ai_audience": 2.8,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content thoroughly introduces Acceptance Test Driven Development (ATDD), emphasizing its collaborative nature, its alignment with business needs, and the benefits it brings to development teams. However, there are no mentions of GitHub, its functionalities, services, or practices. The content does not reference version control, repositories, GitHub Actions, or any code collaboration features. While the audience (developers, testers, and product owners) overlaps somewhat with those using GitHub, all discussion here is centered on ATDD methodology in a general, tool-agnostic sense. The main ideas and depth are about software quality and process improvement through ATDD, not about GitHub tooling or implementation. Thus, there is minimal conceptual alignment and depth regarding GitHub, and the content would not meaningfully satisfy users searching for GitHub-specific guidance or discussion. This positions the content at the most peripheral (tertiary) level of category fit. No penalties for outdated or undermining tone were warranted.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 71.775,
    "ai_mentions": 2.8,
    "ai_alignment": 7.7,
    "ai_depth": 8.0,
    "ai_intent": 7.2,
    "ai_audience": 7.8,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "Direct Mentions (2.8): The content does not directly mention 'Agile Product Management'. It references Agile-adjacent concepts like 'product owners', 'stakeholders', and 'value delivery', but primarily discusses ATDD without explicitly tying it to Agile Product Management. Conceptual Alignment (7.7): The main ideas—collaboration with stakeholders, alignment with business needs, continuous improvement, and customer value—are conceptually aligned with Agile Product Management. The mention of 'product owners' as collaborators is a key point, as Product Owner is a central Agile role. Depth of Discussion (8.0): The content thoroughly discusses ATDD’s purpose, process, and outcomes, explaining the benefits and its impact on delivery value and organizational agility. However, the primary focus is still on ATDD as a practice and not the broader scope of product management in Agile contexts. Intent/Purpose Fit (7.2): The intent is instructional and aligned with Agile methods that support customer value and product quality but does not focus on product management frameworks, backlog management, or product vision directly. Audience Alignment (7.8): The content addresses cross-functional Agile teams, including product owners (who are the core Agile Product Management audience), but is equally directed toward developers and testers. Signal-to-Noise Ratio (8.2): Most of the content is tightly focused on ATDD’s rationale and value, relevant to Agile Product Management practitioners. No penalties are applied as the content is current and supportive of Agile values. Level: Secondary—while strong alignment and application exist, the primary focus is on an engineering/test technique as opposed to end-to-end Agile Product Management practices.",
    "level": "Secondary"
  },
  "Social Technologies": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Social Technologies",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 87.09,
    "ai_mentions": 5.3,
    "ai_alignment": 9.4,
    "ai_depth": 8.7,
    "ai_intent": 8.4,
    "ai_audience": 8.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content directly discusses Acceptance Test Driven Development as a collaborative, team-oriented framework, focusing on alignment with business needs, shared understanding of acceptance criteria, and value delivery—core aspects of Social Technologies. \n\n(1) Direct Mentions: The term 'Social Technologies' is not named explicitly, nor are related methodologies like Agile or DevOps, but the phrasing 'collaborative approach,' 'shared responsibility,' and 'continuous improvement' implicitly anchor it within that sphere, resulting in a moderate score of 5.3.\n\n(2) Conceptual Alignment: The main ideas—collaboration between stakeholders, value delivery, continuous improvement, shift-left quality, and adaptability—closely match the definition. The content demonstrates a strong conceptual fit (9.4).\n\n(3) Depth of Discussion: The text goes beyond surface-level description, offering multiple rationales for the practice, discussing both immediate and long-term benefits, and embedding cultural aspects ('fosters a culture of collaboration'), thus scoring 8.7.\n\n(4) Intent / Purpose Fit: The purpose is to inform and advocate for ATDD as an effective, collaborative methodology that improves business outcomes via better teamwork and processes. This is strongly, though not perfectly, aligned (8.4).\n\n(5) Audience Alignment: The content targets practitioners, product owners, and teams involved in software development—typical audiences for Social Technologies—earning an 8.0.\n\n(6) Signal-to-Noise Ratio: There is minimal filler or off-topic discussion; nearly every sentence relates to collaboration, decision-making, value delivery, or continuous improvement (8.2).\n\nNo penalties apply as the content is current, supportive, and aligns tonally and conceptually.\n\nLevel: This content is 'Primary' because it positions ATDD explicitly as a collaborative, value-driven social technology, not as a mere technical tool.",
    "level": "Primary"
  },
  "Test Automation": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Test Automation",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 53.966,
    "ai_mentions": 1.7,
    "ai_alignment": 6.3,
    "ai_depth": 5.8,
    "ai_intent": 6.2,
    "ai_audience": 7.4,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), emphasizing the definition of testable acceptance criteria, stakeholder collaboration, and early testing—a 'shift-left' mindset. These are highly relevant to quality assurance and some automated testing philosophies but not explicitly about Test Automation itself. \n\n1. Direct Mentions (1.7): The text never directly mentions 'test automation', frameworks, tools, or automation technologies. The closest overlap is reference to 'testable acceptance criteria' and 'testing is integrated early', which may be automated but isn't specified as such. Explicit references are absent, justifying the low score, slightly above 1 as there’s indirect conceptual overlap.\n\n2. Conceptual Alignment (6.3): ATDD is closely related to the preconditions and practices that can enable or benefit from automation. Yet, the main thrust of this content is process and collaboration, not automation tools or techniques. Alignment is meaningful (since Test Automation is a natural fit for automating acceptance criteria) but not direct or thematic; the core category is adjacent, so the score should be in the moderate-high range but clearly not full.\n\n3. Depth of Discussion (5.8): The content provides detailed insights into ATDD process, its benefits, and cultural impact, but doesn’t dig into any automation-specific subject matter (frameworks, tools, integration into CI/CD), nor does it discuss types of automated tests or techniques. The connection to Test Automation is implied but not explored as a major topic, so depth is moderate, slightly higher than mid due to the contextual relevance.\n\n4. Intent / Purpose Fit (6.2): The purpose is to inform and advocate for ATDD as a quality-enhancing, collaborative development practice. Test Automation may be a consequence or supporting feature of ATDD, but it is not the explicit purpose of the content. The fit is moderate because automated acceptance testing is a frequent implementation of ATDD, but not inevitable nor center stage here.\n\n5. Audience Alignment (7.4): The content targets technically oriented stakeholders (developers, testers, product owners) involved in quality assurance and process improvement—aligned with much of the Test Automation audience. However, it also speaks to process and collaboration more generally, slightly lowering the score relative to pure technical practitioner focus.\n\n6. Signal-to-Noise Ratio (6.6): The content is focused and relevant to software development quality practices. Nonetheless, most of the messaging revolves around process and collaboration, leaving test automation as a secondary or implied topic. Thus, the ratio is solid but not top-marked for automation focus.\n\nNo penalties were required because the content is modern, appropriate in tone, and not outdated or contradictory. Considering all the above, the category fit is 'Secondary': this content is closely related to (and often implemented with) Test Automation, but Test Automation is not its main theme.",
    "level": "Tertiary"
  },
  "Cell Structure Design": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 8.325,
    "ai_mentions": 0,
    "ai_alignment": 1.7,
    "ai_depth": 0.8,
    "ai_intent": 1.1,
    "ai_audience": 2.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content exclusively discusses Acceptance Test Driven Development (ATDD), a software development methodology focused on defining testable acceptance criteria upfront to enhance quality and align with business needs. There are zero direct mentions of 'Cell Structure Design,' the Beta Codex, Niels Pfläging, or associated terminology. For conceptual alignment, the text is entirely about quality assurance in software engineering and does not touch on decentralised organisational design, autonomous cells, or complexity theory. At most, there are marginal indirect resonances, such as collaboration and shared responsibility, but these are generic and unrelated to the network-based, decentralised model of Cell Structure Design. Depth is low, as there is no exploration of cell structures or related frameworks. The intent and purpose are about driving software quality—not about organisational design or its transformation. Audience is software engineers, testers, and product owners, not strategists or change leaders grappling with organisation structure. Signal-to-noise ratio is low because all content is tightly focused on ATDD, not Cell Structure Design, resulting in a tertiary relation at best. There are no penalties because the tone is factual and current. Overall, this content is almost entirely unrelated to Cell Structure Design, hence the very low confidence score.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Change Management",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 57.664,
    "ai_mentions": 1.1,
    "ai_alignment": 6.6,
    "ai_depth": 5.9,
    "ai_intent": 6.8,
    "ai_audience": 7.4,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "Direct Mentions: The content does not explicitly mention 'Change Management' or terms like 'organizational transformation.' The focus is squarely on Acceptance Test Driven Development (ATDD), with only indirect ties to change management concepts such as 'culture of collaboration' and 'continuous improvement.' Hence, a low score of 1.1.\nConceptual Alignment: ATDD supports continuous improvement and adaptability, themes that relate to change management in Agile environments. However, the discussion frames these concepts in the context of software quality and team alignment rather than organizational transition or change management strategies. Thus, a moderate score of 6.6 reflects that alignment is secondary, not primary.\nDepth of Discussion: The exploration of organizational or cultural change is relatively superficial; the depth lies in promoting ATDD rather than explicating change management practices or transitions. For example, while fostering 'a culture of collaboration' is noted, no concrete change strategies, leadership roles, or stakeholder engagement techniques are explored. A depth score of 5.9 reflects this.\nIntent/Purpose Fit: The primary intent is to inform about ATDD and its benefits for software quality and team alignment, not to guide change management initiatives, making this tangential to the category. The score (6.8) is slightly above average, acknowledging indirect relevance through improvement and adaptation.\nAudience Alignment: The target audience consists mainly of software developers, testers, and product owners—practitioners engaged in implementation rather than organizational strategists or change leaders. This partially aligns with a change management audience but does not fully match, hence a moderate score (7.4).\nSignal-to-Noise Ratio: The content is focused and relevant to ATDD and software delivery, with very little filler or tangential discussion. Nearly all the content supports some aspect relevant to process improvement, so a higher score (8.2) is warranted. \nLevel: Tertiary. The relationship to change management is indirect—the topic supports an agile culture and continuous improvement, but it is not an explicit or deep dive into change management processes, strategies, or leadership in Agile/DevOps contexts.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 54.43,
    "ai_mentions": 1.5,
    "ai_alignment": 6.14,
    "ai_depth": 6.41,
    "ai_intent": 5.6,
    "ai_audience": 6.36,
    "ai_signal": 6.19,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content directly and thoroughly discusses Acceptance Test Driven Development (ATDD), focusing on the collaborative and quality-focused aspects relevant to modern software teams. However, ATDD is a practice or technique commonly used within Agile teams, not itself an Agile framework. The content does reference outcomes beneficial to Agile—stakeholder alignment, continuous improvement, value delivery—but does not mention frameworks like Scrum, Kanban, Lean, or the Agile Manifesto. \n\nMentions (1.50): There are no explicit references to 'Agile frameworks' or their names; only indirect connections to Agile practices.\nAlignment (6.14): The focus on collaboration, business alignment, and adaptability aligns with Agile values, but not specifically with frameworks.\nDepth (6.41): The discussion is relatively deep regarding ATDD's benefits and implementation but does not expand into framework-level analysis or comparative context.\nIntent (5.60): The main purpose is educational about ATDD, not about Agile frameworks; intent overlaps only where ATDD supports agility in general.\nAudience (6.36): While the intended audience (teams interested in process improvement and value delivery) overlaps with Agile framework practitioners, it is broader.\nSignal (6.19): Content is focused and relevant to agile-adjacent practice, with little off-topic material, but not closely aligned with the category’s scope.\n\nNo penalties were applied as the content is current, not critical or satirical, and not referencing obsolete practices. The final result is tertiary fit: ATDD is a supporting Agile practice, not a framework, so the confidence is moderate but not strong.",
    "level": "Tertiary"
  },
  "Product Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Product Development",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 89.816,
    "ai_mentions": 7.6,
    "ai_alignment": 9.2,
    "ai_depth": 8.8,
    "ai_intent": 8.7,
    "ai_audience": 8.9,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 90.0,
    "reasoning": "The content directly discusses Acceptance Test Driven Development (ATDD), a methodology that sits squarely within the domain of Product Development as defined. \n\n- Mentions (7.6): 'Product development' and related terms are referenced through explicit mentions of alignment with business needs, value delivery, and collaboration across product owners, developers, and testers, though the exact phrase 'product development' is not used multiple times.\n\n- Conceptual Alignment (9.2): The main ideas—defining clear acceptance criteria upfront, collaboration between cross-functional teams, focus on value, and iterative improvement—are tightly aligned with the key topics listed in the Product Development definition (e.g., minimizing risk, continuous improvement, evidence-based decision-making).\n\n- Depth (8.8): The discussion explores beyond basics, explaining benefits such as increased predictability, fostering quality, a shift-left mindset, and cultural transformation within teams. It doesn't delve into detailed case studies or comparative methodologies, but it discusses both immediate and long-term impacts.\n\n- Intent (8.7): The content is clearly aimed at informing and supporting practitioners in adopting ATDD as a product development practice. It is not tangential or off-purpose.\n\n- Audience (8.9): The text is relevant to both technical and business audiences—product owners, devs, and testers are addressed, closely matching the intended Product Development audience.\n\n- Signal (8.6): Almost all of the content is pertinent to Product Development, with no extraneous or filler material.\n\nNo penalties are applied: The content is current (shift-left testing and ATDD remain industry standards), and the tone is supportive, not critical or satirical.\n\nThe confidence score (89.816) is appropriately high, reflecting strong alignment with the category, thorough coverage, and direct applicability, but slightly less than a perfect score because it doesn't use the exact phrase 'product development' repeatedly and lacks highly technical depth or cross-analysis.",
    "level": "Primary"
  },
  "Empirical Process Control": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 53.87,
    "ai_mentions": 1.4,
    "ai_alignment": 6.7,
    "ai_depth": 5.5,
    "ai_intent": 5.9,
    "ai_audience": 7.2,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "Mentions (1.4): The content never directly mentions 'Empirical Process Control.' References to empirical evidence or the terms 'transparency, inspection, adaptation' are absent; thus, explicit mentions are minimal.\n\nAlignment (6.7): There is conceptual overlap—ATDD involves feedback, continuous improvement, and supports agility, which are related to empirical approaches. However, ATDD is more about a specific development/test technique than the broader philosophy of empirical process control. The alignment exists but is moderate rather than strong.\n\nDepth (5.5): The content describes ATDD principles, collaboration, and continuous improvement. It lacks in-depth discussion of empirical foundations, mechanisms of transparency, inspection, or adaptation as core subjects. There are indirect links (e.g., continuous improvement, alignment, adaptation), but no substantial exploration dedicated to empirical process control.\n\nIntent (5.9): The main purpose is to inform about ATDD, its benefits, and its role in agility. While there’s relevance to empirical ways of working (especially via feedback and learning), empirical process control is not the central topic—the focus is ATDD itself.\n\nAudience (7.2): The audience is practitioners—developers, testers, product owners—very similar to those reached by empirical process control materials; this is a good fit.\n\nSignal (7.1): The content is focused and not distractive, but the primary focus is not on empirical process control itself. The relevance is reasonable—near all content is at least tangentially related to agile empirical practices, but not exclusively so.\n\nLevel: Secondary—ATDD supports empirical process control principles but is itself a technique within broader agile practice. The content does not foreground empirical process control as the main topic, but it does support related fundamentals (feedback, adaptation, learning).",
    "level": "Tertiary"
  },
  "Flow Efficiency": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 26.3,
    "ai_mentions": 0.3,
    "ai_alignment": 2.7,
    "ai_depth": 2.8,
    "ai_intent": 3.0,
    "ai_audience": 3.1,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content focuses almost exclusively on ATDD, a practice concerned with software quality, requirements alignment, and collaboration. There is no direct mention of 'flow efficiency' or its associated terminology. \n\n- Mentions (0.3): Flow efficiency is not mentioned by name, nor are its typical terms (e.g., cycle time, lead time, throughput, bottlenecks) referenced. The closest indirect mention is 'value delivery efficiency' and 'deliver higher value ... more efficiently,' but these are general statements rather than explicit references.\n\n- Alignment (2.7): Thematically, the content aligns more with quality-centric practices, requirements clarity, and collaborative development, rather than the optimisation of throughput or the management of workflow. While there's implication that efficiency increases, it is not with respect to flow, but rather to quality and business alignment.\n\n- Depth (2.8): There is some discussion of impacting 'delivery efficiency' and how teams 'remain focused on delivering what truly matters,' but there is no detailed treatment of flow, work-in-progress limits, value stream mapping, or bottleneck analysis — all core to flow efficiency.\n\n- Intent (3.0): The primary intent relates to software quality and aligned development, with minor, tangential relevance to improving efficiency generally. The content does not suggest an intent to optimise flow across the value stream or to guide on throughput optimisation.\n\n- Audience (3.1): The intended audience are practitioners interested in quality methodologies and delivering value, which marginally overlaps with those looking for flow efficiency optimisations (namely Agile/Lean practitioners), but it’s not targeted specifically to them.\n\n- Signal-to-Noise (2.5): The content is focused, but nearly all is off-topic for the specific definition of Flow Efficiency. Little of it is relevant to optimizing throughput, identifying/removing bottlenecks, or flow metrics.\n\nNo penalties were applied; there is no obsolete practice or contradicting tone. Based on the scoring and negligible presence of core flow efficiency themes or terminology, this content only tangentially relates to the Flow Efficiency category at a tertiary level. The calculated confidence score accurately reflects this minimal alignment.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 62.45,
    "ai_mentions": 3.1,
    "ai_alignment": 7.4,
    "ai_depth": 6.7,
    "ai_intent": 6.3,
    "ai_audience": 6.6,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "Direct Mentions (3.1): The content never explicitly names 'Agile Philosophy,' nor the Agile Manifesto or its principles. It focuses solely on Acceptance Test Driven Development (ATDD) and related quality/collaboration values, with no overt reference to Agile itself, earning a low—but nonzero due to indirect thematic language—score. Conceptual Alignment (7.4): The text highlights collaboration, value delivery, adaptability, continuous improvement, and a culture shift—core Agile philosophical values. However, it does not directly frame them as such, and always relates them back to ATDD specifically, not the Agile philosophy as a whole. Depth of Discussion (6.7): The discussion of ATDD is moderately deep, touching on cultural shifts and long-term organizational benefits, not just technique. However, it does not substantially explore or compare the larger Agile mindset. Intent/Purpose Fit (6.3): The content aims to inform and persuade about ATDD. While it relates to Agile's philosophical underpinnings (collaboration, shared responsibility, adaptability), its primary purpose is to advocate for ATDD, not to discuss Agile Philosophy broadly. Audience Alignment (6.6): The target audience (practitioners interested in ATDD) overlaps with some Agile Philosophy audiences, but is somewhat more tactical than strategic or philosophical. Signal-to-Noise Ratio (7.2): The content is focused and relevant to development process improvement, but not to Agile Philosophy as a category per se. There is little filler, but also little focus on the 'philosophy' as a distinct theme. No penalties were applied since the content is neither outdated nor negative in tone. Overall, while ATDD embodies several Agile principles, the discussion centers on a specific practice and its benefits, referencing Agile philosophy tangentially but not as the core subject. Thus, the resource is best classified as 'Secondary' to Agile Philosophy.",
    "level": "Secondary"
  },
  "Collaboration Tools": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Collaboration Tools",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 36.92,
    "ai_mentions": 1.7,
    "ai_alignment": 3.1,
    "ai_depth": 4.2,
    "ai_intent": 2.2,
    "ai_audience": 6.4,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content on Acceptance Test Driven Development (ATDD) does reference collaboration (highlighting that ATDD requires stakeholders to work together), but it focuses primarily on a software development practice, not on tools explicitly designed to enhance Agile team collaboration. \n\nMentions (1.7): The term 'collaborative' is used once, and there are allusions to stakeholders sharing understanding. However, no specific collaboration tools or platforms (e.g., Slack, Jira) are named, nor are software aids for collaboration discussed—only the general principle of collaboration.\n\nAlignment (3.1): The practice of ATDD does support collaboration, but the content sits outside the direct classification of 'Collaboration Tools' as defined, as the main theme is process methodology. The alignment exists only in that ATDD fosters a collaborative culture, but not via tools, platforms, or supporting technology.\n\nDepth (4.2): There is a solid discussion of collaboration benefits within ATDD and opportunities for shared responsibility, but with no actionable or detailed exploration of tools or even recommendations for facilitating ATDD via collaboration technology—so this dimension is low-moderate.\n\nIntent (2.2): The main purpose is to introduce and advocate for ATDD as a development practice, not to discuss or inform about tools enhancing collaboration, nor about integrating such tools into Agile life cycles. Collaboration is a secondary effect, not the core reason for the content.\n\nAudience (6.4): The intended audience could include Agile practitioners, Scrum teams, or others likely to use collaboration tools, so audience overlap is moderate-high, but not exclusive to tool users (developers, business owners, and testers).\n\nSignal (7.3): The content is focused, relevant, avoids unrelated topics, and consistently addresses the core topic (ATDD and its benefits, especially around collaboration), but lacks focused discussion on collaboration tools themselves. Nevertheless, off-topic noise is minimized.\n\nNo penalty was applied, as the content is current, does not undermine the 'Collaboration Tools' premise, and does not reference obsolete practices.\n\nOverall, the confidence is low because the content aligns only peripherally with the 'Collaboration Tools' category, touching on collaboration as a principle but without discussion of any specific tools, features, or implementation in tool-based Agile environments.",
    "level": "Ignored"
  },
  "Transparency": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Transparency",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 58.875,
    "ai_mentions": 2.6,
    "ai_alignment": 6.8,
    "ai_depth": 6.7,
    "ai_intent": 7.1,
    "ai_audience": 7.8,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content centers around Acceptance Test Driven Development (ATDD), with its primary focus on defining clear, testable acceptance criteria—an element tangentially related to transparency (clear communication and shared understanding), but not a direct discussion of transparency as an Agile principle. \n\nMentions (2.6): The word 'transparency' and its direct variants are not explicitly used. However, there is implicit reference to shared understanding and clear criteria, which are conceptually close to transparency.\n\nConceptual Alignment (6.8): ATDD aligns moderately with transparency by promoting shared understanding and reducing miscommunication. However, transparency is not the central focus—it's an indirect benefit of the described practices.\n\nDepth of Discussion (6.7): The discussion deeply addresses the benefits and process of ATDD itself, but does not go deeply into transparency as a thematic topic, nor does it explore tools, measurement, or team trust-building aspects typical of the transparency category.\n\nIntent/Purpose Fit (7.1): The intent is to inform and advocate for ATDD, which aligns in part with transparency-related goals (shared understanding, alignment), but the core purpose is quality and collaboration, not transparency for its own sake.\n\nAudience (7.8): The target audience is Agile practitioners and stakeholders—consistent with the transparency category. The language is suitable for both technical and business audiences engaged in Agile delivery.\n\nSignal-to-Noise Ratio (8.2): The content is focused and coherent with very little off-topic discussion. However, as transparency is a secondary benefit rather than the core topic, this score does not reach the maximum.\n\nNo penalties are applied because the content is current, appropriate in tone, and does not contradict the transparency principle. Overall, this resource is categorized as 'Secondary' for transparency: transparency is an important and positive outcome, but not the article's direct subject.",
    "level": "Tertiary"
  },
  "Continuous Improvement": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 72.083,
    "ai_mentions": 3.6,
    "ai_alignment": 7.8,
    "ai_depth": 6.7,
    "ai_intent": 7.1,
    "ai_audience": 7.3,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0.0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "Mentions (3.6): The content references 'continuous improvement' once explicitly and alludes to fostering a culture of improvement and learning elsewhere, but ATDD itself is the primary focus. Alignment (7.8): ATDD is well-aligned with practices that support continuous improvement—especially in cultivating systematic, repeatable enhancements and learning through feedback loops, yet its emphasis is on requirements and collaboration rather than empirical adaptation or ongoing experimentation. Depth (6.7): The content delves into how ATDD promotes systematic work and learning, referring to improvements in process and team effectiveness, but these links to continuous improvement are explored in a secondary and supporting manner, not as the main subject. Intent (7.1): The article's primary intent is to promote ATDD for higher quality, collaboration, and alignment, with clear supportive implications for continuous improvement, though it's not the central purpose. Audience (7.3): It targets practitioners—developers, testers, product owners—who are likely to be interested in continuous improvement as part of modern Agile/Lean delivery, but the targeting is not exclusive to CI. Signal (8.2): Most of the content is relevant to overarching improvement and process quality, with minimal off-topic material or filler. No penalties are applied, as the text is current, positive, and supports the core philosophies without contradiction. Level: Secondary—continuous improvement is discussed as a benefit and foundational context, while the article is primarily about ATDD as a practice.",
    "level": "Secondary"
  },
  "Common Goals": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Common Goals",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 68.239,
    "ai_mentions": 4.2,
    "ai_alignment": 7.7,
    "ai_depth": 7.3,
    "ai_intent": 7.9,
    "ai_audience": 7.6,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content describes Acceptance Test Driven Development (ATDD) as a practice that supports collaboration, shared understanding, and alignment between stakeholders. It specifically addresses how defining clear, testable acceptance criteria in advance helps ensure development aligns with business needs, which ties conceptually to the spirit of Common Goals. There are explicit references to alignment, shared understanding, and collaboration—key elements of Common Goals in Agile/DevOps context. However, the term 'Common Goals' is not directly mentioned, nor is there a deep dive into frameworks (like OKRs) or the broader strategic-to-tactical link expressed in the classification definition. The discussion centers on ATDD as a technique, exploring its benefits and organizational impact in a manner adjacent to Common Goals, but does not make Common Goals its primary theme. The main intent is educational for practitioners or agile team members, aligns reasonably well with the audience for the category, and the discussion remains relevant and focused throughout. No penalties were applied as the content is current, relevant, and does not undermine the category. Ultimately, while the content illustrates principles similar to those found in Common Goals, it does so using ATDD as a vehicle, earning it a 'Secondary' level of fit.",
    "level": "Secondary"
  },
  "Technical Mastery": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Technical Mastery",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 86.64,
    "ai_mentions": 6.6,
    "ai_alignment": 9.2,
    "ai_depth": 8.7,
    "ai_intent": 8.4,
    "ai_audience": 9.1,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 87.0,
    "reasoning": "The content directly discusses Acceptance Test Driven Development (ATDD), which is a technical practice deeply linked to software craftsmanship, code quality, and the integration of testing early in the development lifecycle. \n\nMentions (6.6): ATDD is explicitly named and explained, but the term 'Technical Mastery' itself is not directly mentioned. There is, however, repeated reference to technical practices and quality.\n\nAlignment (9.2): The main ideas—defining acceptance criteria, embedding quality early, reducing miscommunication, and fostering engineering discipline—strongly align with the category's definition and scope.\n\nDepth (8.7): The content goes beyond a surface mention, discussing the collaborative process, long-term benefits, and organizational outcomes (systematic improvement, agility, etc.), but does not delve into detailed techniques or tooling specifics.\n\nIntent (8.4): The piece aims to advocate for and explain ATDD as a way to achieve high-quality software, so the intent is highly, though not perfectly, aligned (it's more explanatory and motivational than instructional).\n\nAudience (9.1): The target readers are technical practitioners—developers, testers, and technical leads—matching the Technical Mastery audience.\n\nSignal (8.7): The content remains focused on ATDD's role in delivering quality software through technical practices, with minimal digression. It does not stray into irrelevant team or business topics.\n\nNo penalties were applied: the content is contemporary, serious in tone, and supportive of technical excellence. Overall, 'ATDD' is presented as a core technical discipline, justifying a Primary level and high confidence.",
    "level": "Primary"
  },
  "Agile Strategy": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 59.82,
    "ai_mentions": 1.7,
    "ai_alignment": 6.6,
    "ai_depth": 6.3,
    "ai_intent": 7.1,
    "ai_audience": 7.5,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD) as a practice that aligns development with business needs and enhances predictability, value delivery, and collaboration. While these are broadly in line with Agile principles, the discussion is centered almost entirely on ATDD—a technical and team-level practice—rather than Agile Strategy in the organizational or strategic sense (e.g., integration into enterprise-wide strategic planning, leadership, or large-scale organizational adaptability). \n\nMentions (1.7): The term 'Agile Strategy' and related direct strategic language are not explicitly referenced; the linkage is mostly implied through mentions of values that overlap with Agile (e.g., business alignment, adaptability).\n\nAlignment (6.6): The content's focus on aligning work with business needs and continuous improvement loosely aligns with Agile Strategy, though the scope is limited to team and technical practices.\n\nDepth (6.3): There's modest depth detailing how ATDD enables value delivery and collaboration, but it doesn't deeply explore strategic organizational themes, decision-making, or leadership at scale.\n\nIntent (7.1): The content is intended to inform and promote practices that support Agile principles (alignment, value), but its purpose is to explain ATDD rather than discuss Agile Strategy as such.\n\nAudience (7.5): The primary audience is teams/practitioners, but there is some appeal to organizational stakeholders via business alignment and value focus.\n\nSignal (8.2): The content is focused and relevant, with little noise or off-topic material, though it is confined to the ATDD practice.\n\nNo penalties were applied because there is nothing outdated or overtly contradictory; however, the piece falls short of being a 'primary' Agile Strategy exemplar due to its technical/practitioner focus and lack of explicit engagement with strategy at scale. Safeguards observed: the confidence score properly reflects a secondary relationship, with detailed rationale and non-uniform scoring across dimensions.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 55.97,
    "ai_mentions": 0.5,
    "ai_alignment": 6.0,
    "ai_depth": 5.8,
    "ai_intent": 6.5,
    "ai_audience": 7.4,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "While the content thoroughly discusses collaborative practices and aligning development with business needs—topics closely related to Behaviour Driven Development (BDD)—it is specifically about Acceptance Test Driven Development (ATDD). The term 'Behaviour Driven Development' is neither mentioned explicitly nor referenced, resulting in a low Direct Mentions score (0.5). \n\nConceptually, there is moderate alignment (6.0) since ATDD and BDD share principles such as defining acceptance criteria collaboratively, stakeholder involvement, and focus on clear requirements. However, the content never draws a direct line to BDD, nor does it discuss unique aspects like ubiquitous language or specific BDD tools (e.g., Cucumber, SpecFlow).\n\nDepth of discussion (5.8) is fair—the article covers the rationale and benefits of ATDD but doesn't go into technical or process details specific to BDD (such as scenario syntax or examples). The Intent score is moderate (6.5), as the content aligns with the purpose of BDD insofar as improving collaboration and business alignment, but it is ultimately ATDD-centric and does not intend to teach or advocate BDD directly.\n\nAudience Alignment (7.4) is somewhat high, reflecting the targeting of practitioners and stakeholders typical of BDD discussions. The Signal-to-Noise ratio (8.3) is quite strong since the piece is focused, relevant to test-driven practices, and avoids tangents. \n\nNo penalties were applied because the content is up-to-date, has a neutral-to-supportive tone, and doesn't reference obsolete practices. In total, the piece does not qualify as a primary BDD resource but would be suitable as a secondary resource in a BDD context due to the conceptual overlap and shared collaborative test definition framework.",
    "level": "Tertiary"
  },
  "Scrum Team": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Scrum Team",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 27.46,
    "ai_mentions": 1.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.1,
    "ai_audience": 7.5,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content describes Acceptance Test Driven Development (ATDD), focusing on its practice, collaborative nature, and benefits. While it makes general references to 'product owners' and 'developers', it never directly mentions Scrum Teams or frames ATDD within the specific accountability or structure of a Scrum Team as defined in the Scrum Guide. \n\nScoring rationale:\n- Mentions (1.2): There are only very indirect references to roles ('product owners', 'developers'), and the term 'Scrum Team' or its accountability is never used.\n- Conceptual Alignment (2.6): The themes of collaboration and shared responsibility are somewhat compatible with Scrum Team values, but ATDD is presented as a generic practice and not tied to the Scrum Team accountability.\n- Depth (2.2): The discussion is thorough on ATDD itself, but not on the structure, responsibilities, or essence of the Scrum Team. There's no exploration of self-management, cross-functionality, or team-level accountability beyond broad allusions.\n- Intent (2.1): The content aims to instruct on ATDD as a quality practice, not to explain or support the Scrum Team accountability.\n- Audience Alignment (7.5): The audience includes developers, product owners, and testers, which may overlap with Scrum Team practitioners, but this is incidental, not a direct targeting of Scrum Teams specifically.\n- Signal (7.3): Content is focused and relevant for ATDD and collaboration, with little to no off-topic information, but this is not sufficiently relevant to the 'Scrum Team' category.\n\nNo penalties were applied, as the content is not outdated, nor does it contradict the Scrum Team framing; it simply does not align with it. Overall, the confidence score is low, reflecting that this content is only tangentially related to the Scrum Team as an accountability in Scrum, falling into the 'Tertiary' level.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-06T20:43:22",
    "ai_confidence": 89.4,
    "ai_mentions": 6.4,
    "ai_alignment": 9.3,
    "ai_depth": 8.8,
    "ai_intent": 9.0,
    "ai_audience": 8.7,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 89.0,
    "reasoning": "This content focuses directly on Acceptance Test Driven Development, a practice closely associated with engineering excellence through its emphasis on quality, clear requirements, and collaboration. \n\n- Mentions (6.4): ATDD is not named as 'engineering excellence' per se, but the discussion explicitly describes practices (ATDD) integral to the category. There are multiple direct references to quality and improvement practices, though not using the exact category name—hence, a solid but non-maximal score.\n\n- Alignment (9.3): The content strongly aligns with the category definition, discussing quality assurance, coding standards (via acceptance criteria), collaboration, early testing, and continuous improvement. It matches numerous key topics (quality, testing methodologies, collaboration, business agility) nearly perfectly.\n\n- Depth (8.8): The overview moves beyond a superficial mention, explaining rationale, process, and organizational impact for ATDD, connecting individual practices to broader engineering outcomes (ex: value delivery, sustainability, culture, agility). It could be deeper with more technical implementation details or extended analysis, so not a perfect 10.\n\n- Intent (9.0): The purpose is clearly to inform, coach, and promote adoption of a best practice that embodies engineering excellence. It's highly relevant to the category intent and not tangential at all.\n\n- Audience (8.7): The content addresses practitioners and teams (developers, testers, product owners) within the software development space—matching the expected audience for engineering excellence, though the language is general rather than deeply technical.\n\n- Signal (9.2): Nearly all the discussion is on-topic, tightly focused on ATDD in the context of development quality and process, with minimal filler. \n\nNo penalties are applied: The information is up to date, not satirical, nor undermining. All statements are supportive of, and deeply tied to, established engineering excellence concepts.\n\nOverall, the confidence score reflects that this resource fits 'Engineering Excellence' as a primary entry, well above the threshold, though not at 100 given slight room for deeper technical detail and more explicit category labeling.",
    "level": "Primary"
  },
  "Release Management": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Release Management",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 37.4,
    "ai_mentions": 0.6,
    "ai_alignment": 3.7,
    "ai_depth": 3.5,
    "ai_intent": 3.8,
    "ai_audience": 6.6,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "Direct Mentions (0.6)—There is no explicit mention of 'release management' or its key terms; the content is focused solely on ATDD. \nConceptual Alignment (3.7)—Although ATDD supports practices that may indirectly benefit release management (improving alignment, embedding quality, reducing rework), it is fundamentally a requirements and testing methodology, not release planning, scheduling, or control. \nDepth of Discussion (3.5)—The discussion is substantial but centers exclusively on ATDD, its benefits, and effects on development quality and collaboration, without going into any release processes, versioning, or CI/CD topics. \nIntent/Purpose Fit (3.8)—The intent is to promote ATDD for high-quality software development, not to instruct or recommend on release strategies or processes. Any connection to release management is indirect at best. \nAudience Alignment (6.6)—The content targets developers, testers, and product owners, who may also be relevant stakeholders in release management discussions, but the focus on ATDD reduces the direct overlap with a release management audience. \nSignal-to-Noise Ratio (8.0)—The content is highly focused on its topic without digressions. However, most of the signal pertains to ATDD, not release management. \nNo penalties are applied since the content is current, accurate, and not contradictory in tone. \nOverall, the content is at best tertiary to Release Management: it supports quality processes that may make releases more reliable, but it does not discuss release management itself or its core practices.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 85.19,
    "ai_mentions": 7.5,
    "ai_alignment": 9.2,
    "ai_depth": 8.5,
    "ai_intent": 8.6,
    "ai_audience": 8.0,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "Direct Mentions (7.5): The content explicitly discusses Acceptance Test Driven Development (ATDD), a named engineering practice, but does not mention other specific core practices from the definition (e.g. TDD, Clean Code, CI/CD). The acronym 'ATDD' and the practice itself are referenced repeatedly and form the core focus. Conceptual Alignment (9.2): The main ideas align strongly with the category—ATDD sits firmly within Agile engineering practices, emphasizing test-first development, early quality, collaboration, and alignment with business needs. Depth of Discussion (8.5): The article goes beyond surface-level description, discussing the rationale, effects on team collaboration and continuous improvement, and the cultural implications of ATDD. However, it does not dive into implementation details or compare ATDD with other practices such as TDD or BDD, which limits maximal depth. Intent/Purpose Fit (8.6): The piece's intent is to promote, explain, and advocate for a core engineering practice, directly supporting the purpose of the category. Audience Alignment (8.0): The language and focus assume a technical and practitioner audience (developers, testers, product owners within Agile teams), though it could be accessible to non-engineers involved in software delivery. Signal-to-Noise (8.3): The content is consistently on-topic, focused on ATDD and its benefits, without digression or filler. There are no penalties, as the content is timely, positive, and consistent with the framing of the category. Overall, the confidence score reflects that ATDD is a recognized agile engineering practice and the content fits primarily within the category with high—though not perfect—confidence given its focused but somewhat narrower emphasis.",
    "level": "Primary"
  },
  "Technical Debt": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Technical Debt",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 22.4,
    "ai_mentions": 0.0,
    "ai_alignment": 2.9,
    "ai_depth": 2.7,
    "ai_intent": 2.8,
    "ai_audience": 7.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD), its principles, and its benefits in promoting collaboration, defining acceptance criteria, and embedding quality early in the development process. Direct Mentions (0.0): The term 'Technical Debt' is never mentioned, nor is there any discussion that is explicitly framed as about technical debt. Conceptual Alignment (2.9): While ATDD can indirectly help prevent technical debt by fostering clarity and early defect detection, the content does not connect these practices to any technical debt concepts, definitions, or management approaches. Depth of Discussion (2.7): The discussion is in-depth about ATDD, but entirely omits technical debt as a theme, not exploring types, measurement, or remediation of technical debt. Intent / Purpose Fit (2.8): The main intent is to inform about ATDD, not technical debt management. Any connection to technical debt is at best an indirect, background benefit rather than an explicit or intentional focus. Audience Alignment (7.1): The audience (software practitioners and teams) is aligned with those who might care about technical debt, but here they're clearly being targeted as interested in improving requirements and testing practices, not debt reduction. Signal-to-Noise Ratio (7.4): The content is focused, relevant, and coherent for its topic, but its topic is only weakly related to technical debt. No penalties are applied, as the content is current, non-contradictory, and not satirical or obsolete. The overall confidence score is appropriately low, reflecting the very limited (and purely incidental) relationship of this content to technical debt.",
    "level": "Ignored"
  },
  "Time to Market": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Time to Market",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 55.54,
    "ai_mentions": 0.8,
    "ai_alignment": 5.4,
    "ai_depth": 6.3,
    "ai_intent": 5.6,
    "ai_audience": 7.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD) and its ability to drive quality and alignment with business needs. There is no direct mention of 'Time to Market', nor are classic metrics around speed of delivery (lead/cycle time) explicitly discussed, resulting in a low score for 'Direct Mentions' (0.8). However, ATDD is frequently justified by its ability to reduce miscommunication and rework, and foster agility—ideas that conceptually align, to some extent, with factors that improve Time to Market (alignment 5.4). On 'Depth', the discussion unpacks mechanisms and benefits of ATDD thoroughly but does not relate these details directly to Time to Market (6.3). The 'Intent' appears to promote better software delivery through ATDD, with indirect relevance to Time to Market, so a moderate score is given (5.6). The 'Audience' (7.2) is well-matched to those interested in Agile/DevOps, which could overlap with Time to Market stakeholders. 'Signal-to-Noise' is high (8.0) since the content stays focused on ATDD benefits; however, as most benefits center on quality and process alignment rather than speed or efficiency of delivery, the secondary connection limits primary fit. No penalties were applied, as the content is current, relevant, and not satirical or critical in tone. Overall, the content serves as a tertiary (indirect) resource for Time to Market, with connections present but not central.",
    "level": "Tertiary"
  },
  "Large Scale Agility": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Large Scale Agility",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 24.62,
    "ai_mentions": 0.8,
    "ai_alignment": 2.2,
    "ai_depth": 2.1,
    "ai_intent": 3.0,
    "ai_audience": 5.3,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content is a detailed, clear overview of Acceptance Test Driven Development (ATDD), focusing on its principles, stakeholder collaboration, and benefits to software delivery. \n\n1. Direct Mentions (0.8): The text does not directly mention 'Large Scale Agility,' any scaling frameworks (like SAFe, LeSS), or the enterprise context. The only vague alignment is the mention of 'organisations' in the third paragraph, but this is generic.\n\n2. Conceptual Alignment (2.2): The main ideas (collaboration, shared understanding, aligning development with business needs) are relevant to good Agile practices but are written exclusively at the team and project level. There is no explicit discussion of scaling, enterprise agility, or multi-team coordination. \n\n3. Depth of Discussion (2.1): The discussion is thorough regarding ATDD but focuses on how teams collaborate and deliver value. It does not explore scaling concerns, frameworks for large organisations, or enterprise-level challenges. Depth on 'Large Scale Agility' is minimal. \n\n4. Intent / Purpose Fit (3.0): The piece is meant to inform about ATDD and how it benefits development teams. It is not off-purpose, but neither is it intended as a guide to scaling Agile across organisations—Large Scale Agility is, at best, a side effect if ATDD principles are widely adopted, not the core purpose.\n\n5. Audience Alignment (5.3): The article targets practitioners involved in delivery (developers, testers, product owners), not executives or change agents driving enterprise agility. However, generalized mentions of organisational value give it minor, indirect relevance to broader audiences.\n\n6. Signal-to-Noise Ratio (8.2): The content is highly focused with little filler or unrelated information—but this focus is all on ATDD, not large-scale agility.\n\nNo penalties are applied because the article is current and not critical or satirical. Overall, the fit for Large Scale Agility is tertiary at best; the material is strongly suited for team-level Agile practices and only obliquely, minimally relevant to scaled Agile concerns.",
    "level": "Ignored"
  },
  "Lean": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Lean",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 31.88,
    "ai_mentions": 0.4,
    "ai_alignment": 4.8,
    "ai_depth": 3.9,
    "ai_intent": 4.7,
    "ai_audience": 5.1,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD) as a software development technique. There are no direct or explicit mentions of Lean, its principles, or related frameworks (score 0.4 for mentions). Some indirect conceptual alignment exists around value delivery, efficiency, and continuous improvement, which are foundational to Lean, but this is generic and not tied to Lean theory (alignment 4.8). Depth is moderate concerning ATDD, explaining motivation, benefits, and process specifics, but does not engage with Lean tools, waste reduction, or Lean case studies (depth 3.9). The primary intent is instructive—to promote ATDD for software quality and business alignment, which is partly compatible with Lean's value focus but not aimed at Lean practitioners or discussing Lean methodologies directly (intent 4.7). Audience alignment is moderate, as it targets technical practitioners who might intersect with Lean if they practice Lean-Agile, but the discussion is ATDD-centric (audience 5.1). Signal-to-noise ratio is fair; content is focused on ATDD with little to no unrelated material, though its relevance to Lean is low (signal 3.6). No penalties were applied since the tone is neutral, current, and does not contradict the Lean category. The overall confidence is low—ATDD shares some Lean-adjacent characteristics but is not Lean-specific and does not engage Lean methodology, tools, or culture directly, making this a tertiary fit at best.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agentic Agility",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 36.7,
    "ai_mentions": 0.7,
    "ai_alignment": 3.8,
    "ai_depth": 3.4,
    "ai_intent": 5.3,
    "ai_audience": 7.5,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD) as a collaborative, quality-focused practice that aligns teams with business objectives and supports Agile development. However, there are no direct mentions or explicit references to 'Agentic Agility,' agency, or intentional, adaptive action at the system or team level. While the concepts of collaboration, shared responsibility, and adaptation to changing requirements lightly touch upon aspects of agentic behavior, the content remains focused on ATDD as a method rather than on the properties of agency itself. Depth of discussion is modest, focusing on the immediate benefits of ATDD rather than on the mechanisms, importance, or cultivation of agency within Agile or DevOps frameworks. The intent (informing about ATDD for improving alignment and quality) is tangentially supportive but not directly aligned with exploring Agentic Agility. The audience (Agile practitioners, developers) somewhat overlaps but is not specifically aimed at those interested in agency within Agile. Most of the content is topical and well-focused on ATDD, granting a good signal-to-noise ratio, but the lack of Agentic Agility framing or direct linkage makes this a tertiary fit. There are no penalty triggers; the tone is current and constructive.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 63.375,
    "ai_mentions": 2.2,
    "ai_alignment": 7.5,
    "ai_depth": 6.6,
    "ai_intent": 6.9,
    "ai_audience": 7.9,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content primarily focuses on Acceptance Test Driven Development (ATDD) as a practice to improve software development quality. While it touches on themes related to Agile mindsets (collaboration, shift-left, continuous improvement, stakeholder alignment) and briefly mentions agility at the organizational level, it does not directly discuss Agile Transformation, its frameworks, or organizational-scale change strategies. \n\n- Direct Mentions (2.2): The content does not explicitly mention 'Agile Transformation', Agile Manifesto, nor frameworks such as Scrum, Kanban, or Lean, but contains some implicit references to agility and collaborative practices. \n- Conceptual Alignment (7.5): ATDD is conceptually aligned with Agile principles (collaboration, quality, continuous improvement), but the main focus is a specific software development technique rather than enterprise-wide transformation. \n- Depth of Discussion (6.6): The explanation goes beyond surface-level by explaining benefits, collaboration, shift-left, and overall impact, but lacks depth on Agile Transformation methodologies, strategies, or metrics.\n- Intent/Purpose Fit (6.9): The clear intent is to promote high-quality, collaborative practice (ATDD), which aligns with Agile team practices, but not fully with organization-level transformation goals.\n- Audience Alignment (7.9): Target audience appears to be both practitioners and those interested in process improvement (possibly technical leaders), which has overlap with Agile Transformation stakeholders, but is slightly more practitioner-focused.\n- Signal-to-Noise Ratio (8.2): The entire content is relevant to its stated topic, with little to no filler. \n\nNo penalties are applied, as the content does not reference outdated or obsolete practices and maintains a positive, informative tone. \n\nOverall, the content fits as 'Secondary' level under Agile Transformation: it supports and underpins concepts relevant to transformation (collaboration, alignment, agility), but is not explicitly about leading, managing, or strategizing for Agile Transformation at the organizational level.",
    "level": "Secondary"
  },
  "Service Level Expectation": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 58.3,
    "ai_mentions": 2.5,
    "ai_alignment": 6.9,
    "ai_depth": 6.7,
    "ai_intent": 5.8,
    "ai_audience": 7.2,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "This content focuses on Acceptance Test Driven Development (ATDD) and the establishment of clear, testable acceptance criteria prior to implementation. While it repeatedly discusses quality, alignment to business needs, collaboration, and predictability—all important adjacent concepts—it does not directly reference the term 'Service Level Expectation' (SLE) or discuss formal measurement or explicit commitments/thresholds typically associated with SLEs. \n\n- Direct Mentions (2.5): There are no direct references to 'Service Level Expectation' or equivalent terminology; the link to SLEs is only present via the underlying practices (e.g., clear criteria), warranting a score above zero but still low.\n- Conceptual Alignment (6.9): The themes of clear criteria, predictability, stakeholder alignment, and quality echo elements of SLEs, but the focus is on process improvement and delivery alignment rather than explicit service-level targets.\n- Depth of Discussion (6.7): The exploration of ATDD’s mechanisms and benefits is moderately deep, discussing collaboration, sustainability, and predictability, but never dives into SLE frameworks or specifics.\n- Intent/Purpose Fit (5.8): The primary intent is to inform about ATDD rather than service level management; thus, the fit is tangential, though not irrelevant.\n- Audience Alignment (7.2): Targeted at practitioners (developers, testers, product owners)—an audience overlapping with, but not exclusive to, SLE-specific guidance, since process improvement often goes hand in hand with service level discussions.\n- Signal-to-Noise Ratio (6.4): The content is coherent and relevant to ATDD with minimal filler, but SLE relevance comprises only a portion of the focus.\n\nNo penalties were applied, as the content is current and neutral in tone. Ultimately, ATDD supports greater alignment with service expectations but is not an SLE-centric topic; thus, SLE coverage is secondary, resulting in a mid-tier confidence score in this mapping.",
    "level": "Tertiary"
  },
  "Team Performance": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Team Performance",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 78.6,
    "ai_mentions": 3.7,
    "ai_alignment": 8.9,
    "ai_depth": 7.5,
    "ai_intent": 8.4,
    "ai_audience": 7.8,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content is focused on Acceptance Test Driven Development (ATDD) as a practice that teams can use to improve their delivery effectiveness. \n\nMentions (3.7): The content does not directly mention 'team performance' or related delivery metrics by name, but it implicitly references team functioning and outcomes through terms like 'teams,' 'value delivery,' and 'shared responsibility.' The focus remains on the technique itself and its collaborative nature.\n\nAlignment (8.9): There is strong conceptual alignment. ATDD is presented as a systematic, collaborative process that enhances team predictability, sustainability, and agility—all core concerns of team performance. However, it does not discuss metrics, throughput, or system behaviors directly, which slightly lowers the score from perfect alignment.\n\nDepth (7.5): The discussion explains both the collaborative mechanics of ATDD and its organizational impact, including continuous improvement and adaptability. However, there is limited exploration of actual performance metrics, sustained patterns/trends, or system-level constraints, so the depth is substantial but not exhaustive relative to the category definition.\n\nIntent (8.4): The main intent is to advocate for ATDD as a means for teams to deliver value sustainably and predictably, matching the category's purpose of improving team capability. It's informative and practically oriented, though the focus is on the ATDD practice rather than team performance per se.\n\nAudience (7.8): The piece appears aimed at people involved in software delivery practices—teams, leaders, and technical practitioners—matching the audience for team performance content, though it skews slightly towards practitioners who may be evaluating or implementing ATDD, rather than strategists or executives interested in performance metrics.\n\nSignal-to-noise (7.1): Most of the discussion is relevant to delivery at the team level using ATDD, with very little superfluous or off-topic content. However, since systemic measurement and delivery metrics are not the main focus, some of the signal is indirect in relation to team performance.\n\nNo penalties were applied as the content is current, supportive, and matches the framing of team performance without any outdated or undermining elements.\n\nOverall, the content is a strong secondary resource for 'Team Performance.' Its main value is as an example of a practice (ATDD) that can enhance team outcomes, rather than an explicit or holistic evaluation of how teams perform using measurable system metrics.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Lean Startup",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 14.37,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 2.3,
    "ai_intent": 2.7,
    "ai_audience": 4.6,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content is focused exclusively on Acceptance Test Driven Development (ATDD), a software engineering collaboration practice emphasizing early definition of acceptance criteria. \n\n1. Mentions (0.2): The Lean Startup category is never directly named or referenced, nor are its signature concepts (MVP, Build-Measure-Learn, etc.) mentioned.\n2. Alignment (1.8): Some minor alignment exists conceptually, as ATDD's focus on continuous improvement and learning loosely relates to iterative cycles in Lean Startup; however, ATDD is an engineering practice not inherently tied to validating business hypotheses, nor is there a clear connection to Lean Startup frameworks or metrics.\n3. Depth (2.3): The discussion is thorough about ATDD but offers only surface-level (incidental) links to Lean Startup thinking (e.g., maximizing learning and reducing risk), with no substantial exploration of Lean Startup principles.\n4. Intent (2.7): The primary intent is to inform practitioners about the benefits and mechanics of ATDD, with no focus on Lean Startup's core cycle or innovation risk minimization. Any fit is tangential rather than deliberate.\n5. Audience (4.6): The content targets software practitioners (testers, developers, product owners), which can overlap with Lean Startup’s practitioner audience, but the overall topic is different.\n6. Signal (3.9): Content is focused and relevant to ATDD, but almost none of it is germane to Lean Startup specifically, so the 'signal' for that category is very weak.\n\nNo penalties are applied as the content is not outdated or satirical/critical. Overall, the content is at best 'Tertiary' relevance. It does not meet the narrowly defined scope of Lean Startup, beyond a few peripheral thematic links around agility, learning, or value delivery.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Test First Development",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 93.77,
    "ai_mentions": 8.7,
    "ai_alignment": 9.5,
    "ai_depth": 9.2,
    "ai_intent": 9.1,
    "ai_audience": 9.0,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "This content provides a focused and in-depth discussion of Acceptance Test Driven Development (ATDD), which is a prominent automated Test First Development practice. \n\nDirect mentions are strong: ATDD is named, and the core definition of Test First (defining explicit success criteria before implementation) is repeated throughout, though the phrase 'Test First Development' itself is not used verbatim (hence not a perfect 10). \n\nConceptual alignment is very high because ATDD is explicitly a Test First approach that deeply aligns with the category's focus on defining criteria pre-implementation, emphasizing automation, collaboration, and shifting testing left. \n\nDepth is substantial: it discusses ATDD’s collaborative nature, benefits to quality and predictability, mindset shift, and positive impact on the software delivery process and team culture.\n\nThe intent is tightly aligned—it's clearly an informative and supportive piece for practitioners interested in Test First principles. The audience is technical/product-focused (developers, testers, product owners), exactly in line with the category definition.\n\nSignal-to-noise remains high; all paragraphs stay directly on-point with no digressions or filler; however, a small deduction is made for not covering Manual Test First or other related techniques, as the content narrowly focuses on ATDD specifically.\n\nNo penalties are warranted: the content is current, positive, and fully embraces the concepts and framing of Test First Development. As the focus is on ATDD—a canonical Test First practice—the content sits as a Primary fit.\n\nAll scores are differentiated by at least 0.1 to comply with calibration safeguards.",
    "level": "Primary"
  },
  "Miscellaneous": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 22.533,
    "ai_mentions": 0.4,
    "ai_alignment": 1.7,
    "ai_depth": 2.2,
    "ai_intent": 2.1,
    "ai_audience": 5.1,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content is an explanatory overview of Acceptance Test Driven Development (ATDD), which is a well-recognized software development practice often associated with Agile and Lean approaches due to its focus on collaboration, testable requirements, and quality-driven delivery. \n\n- Mentions (0.4) — The content never mentions the word 'Miscellaneous' or suggests it belongs in a general or catch-all discussion; it is narrowly focused on ATDD.\n- Alignment (1.7) — The main ideas strongly align with recognized Agile and quality-driven development practices, specifically ATDD. This is not a general, unfocused discussion nor does it stray from established frameworks or philosophies. It only loosely fits as 'Miscellaneous' in the sense that it doesn't name Scrum or DevOps directly, but the techniques described are core to Agile/Lean thinking.\n- Depth (2.2) — The content is fairly in-depth about ATDD itself, but it does not elaborate on a wide landscape of 'Miscellaneous' topics — it is focused, not a general overview.\n- Intent (2.1) — The primary intent is educational and informative about ATDD as a practice, not to address purely miscellaneous or anecdotal content. The purpose is to share a best practice, not a tangential opinion or reflection.\n- Audience (5.1) — The audience is technical practitioners (developers, product owners, testers), which partially aligns with those who might browse Miscellaneous topics in a business agility context, though typically they would be seeking broader, less technical discussions.\n- Signal (6.0) — The content is highly focused and relevant to ATDD, though it's not relevant to 'Miscellaneous' except by the absence of direct reference to Scrum, DevOps, etc.\n\nNo penalties apply—content is current, factual, and not undermining or satirical. Because ATDD is a respected, defined practice, it doesn't fit with the spirit of the Miscellaneous category, which is explicitly for non-framework, non-practitioner, offbeat, or anecdotal content. Thus, confidence is very low for 'Miscellaneous', and this content likely belongs under a more specific category related to engineering practices or Agile/Lean techniques.",
    "level": "Ignored"
  },
  "DevOps": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "DevOps",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 59.375,
    "ai_mentions": 1.6,
    "ai_alignment": 6.1,
    "ai_depth": 5.8,
    "ai_intent": 6.6,
    "ai_audience": 7.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content is primarily focused on Acceptance Test Driven Development (ATDD), not DevOps as such. There are no explicit mentions of 'DevOps'. However, several concepts discussed — such as collaboration among multiple stakeholders, shared understanding, alignment with business needs, shift-left practices (integrating testing early), fostering a culture of collaboration and shared responsibility, and continuous improvement — do align with key DevOps principles. Alignment is moderate because the content embodies DevOps-friendly practices (automation, quality, culture) but does not articulate them as part of a DevOps philosophy or transformation. The depth is modest, as the text stays at the level of general benefits and workflows associated with ATDD, discussing process and impact on culture but without deep exploration of DevOps or its implementation. The intent and purpose somewhat fit: the content supports a relevant DevOps-aligned mindset, but its main goal is educating on ATDD specifically, rather than DevOps at large. Audience alignment is fair, as the content targets cross-functional technical and business teams—typical of a DevOps audience—but is most relevant to practitioners seeking quality and process improvement. Signal-to-noise ratio is high, as the content remains focused on ATDD's value, with little to no filler, and all examples and points relate to processes and outcomes relevant to DevOps-aware teams. No penalties apply: the approach is current, not satirical or critical of DevOps. In summary, this content fits 'DevOps' enough for a secondary classification; it is related and supportive of DevOps values but would not be a primary DevOps resource due to its ATDD-first perspective and lack of explicit DevOps framing.",
    "level": "Tertiary"
  },
  "Operational Practices": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Operational Practices",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 84.72,
    "ai_mentions": 7.4,
    "ai_alignment": 9.2,
    "ai_depth": 8.8,
    "ai_intent": 9.0,
    "ai_audience": 8.3,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content provides a practical overview of Acceptance Test Driven Development (ATDD) with clear focus on its role in improving software development workflows—a core concern of 'Operational Practices.'\n\n— Mentions (7.4): The term 'practice' is explicit, and ATDD is clearly framed as a technique, but the phrase 'operational practices' is not used verbatim. ATDD is positioned as a specific operational method, and supporting terminology includes 'practice,' 'systematic way of working,' and 'development process.'\n\n— Conceptual Alignment (9.2): The content strongly aligns with the category definition—ATDD is an applied, process-enhancing approach used within Agile and Lean frameworks. It directly addresses operational efficiency by focusing on reducing waste (miscommunication, rework), embedding quality, and promoting collaboration.\n\n— Depth (8.8): The description goes beyond surface-level, explaining not just what ATDD is but also how it works, its collaborative nature, its shift-left orientation, and its long-term organisational effects. While thorough, there is a slight deduction for not delving into specific ATDD techniques, metrics, or concrete examples in more detail.\n\n— Intent (9.0): The intent is to inform and advocate for adopting ATDD to improve operational effectiveness, squarely within the purpose defined. There is no tangential or off-purpose content.\n\n— Audience (8.3): The content is geared toward practitioners—developers, product owners, testers—matching the typical audience for operational best practices, although it is slightly generalist rather than targeting deeply technical or specialist audiences.\n\n— Signal-to-Noise (8.1): The content is very focused, with minimal filler. Every paragraph ties back to operational enhancement, though some sentences are broader (e.g., 'delivering what truly matters'), slightly lowering the score.\n\nNo penalties are applied: the content is current, promotes accepted modern practices, and maintains a supportive, factual tone.\n\nOverall, the piece is best classified as 'Primary' to the 'Operational Practices' category as its main theme and discussion are rooted firmly in improving processes within Agile and Lean contexts.",
    "level": "Primary"
  },
  "Employee Engagement": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 26.534,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.3,
    "ai_intent": 1.6,
    "ai_audience": 7.1,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content centers on Acceptance Test Driven Development (ATDD), a technical methodology for improving software quality. There is minimal direct mention of employee engagement concepts or terminology; 'collaboration' and 'shared responsibility' are referenced, but only in the context of the software development process. The main ideas focus on aligning development efforts, quality, and value delivery—not on the psychological or motivational drivers of engagement as defined in the classification. Depth of discussion regarding engagement is shallow; ATDD's benefits to teamwork and communication are mentioned, but not explored in relation to motivation, recognition, or satisfaction. The content's intent is largely technical (process/practice improvement), rather than exploring theories or strategies for enhancing engagement. The audience (software practitioners, possibly leads) somewhat overlaps with employee engagement patricipants, but the focus is not HR, people management, or engagement. The signal-to-noise ratio is low for engagement (only very tangentially related), with primary focus given to technical methodology. No penalties were applied as content was not outdated or tone-contradicting. Overall, ATDD contributes indirectly by fostering collaboration, but does not align with the core meaning, practices, or strategic discussions of Employee Engagement. Confidence is low, and the category is only weakly relevant at a tertiary level.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 50.08,
    "ai_mentions": 1.5,
    "ai_alignment": 5.6,
    "ai_depth": 5.9,
    "ai_intent": 5.8,
    "ai_audience": 6.0,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 50.0,
    "reasoning": "The content focuses primarily on the practice of Acceptance Test Driven Development (ATDD), with strong emphasis on alignment with business needs, collaboration among roles, and ensuring quality through clear acceptance criteria. \n\n1. **Mentions (1.50)**: The category of frequent releases is not directly mentioned, nor are there explicit references to release frequency, continuous delivery, or deployment. Only tangential connections can be inferred (e.g., supporting agility).\n2. **Conceptual Alignment (5.60)**: There is indirect alignment with frequent releases in that ATDD promotes predictability, collaboration, and agility, which can support practices like continuous delivery. However, the main thrust is about development quality and shared understanding, not release cadence, automation, or related tooling.\n3. **Depth of Discussion (5.90)**: The content discusses ATDD in moderate depth, exploring its benefits and the mindset it fosters. There is no specific exploration of release practices, automation, or metrics relating to release frequency. Any relevance to frequent releases is inferred rather than explicit or explored in depth.\n4. **Intent / Purpose Fit (5.80)**: The intent is to inform and advocate for ATDD, which can be part of an overall agile or DevOps strategy, but frequent releases are not the central or explicit purpose. The relevance is supportive at best, not primary.\n5. **Audience Alignment (6.00)**: The content targets software practitioners, product owners, and testers—all groups involved in release cycles. While not specifically aimed at release engineering or DevOps roles, there is some overlap in audience.\n6. **Signal-to-Noise Ratio (6.10)**: The content is focused and relevant to software quality and delivery, but only tangentially to frequent releases. There is no filler, but a lack of core focus on frequent release practices.\n\nNo penalties have been applied as the content is current, neutral in tone, and does not contradict the principles of frequent releases, though it only indirectly supports them. The confidence score reflects a tertiary connection: while ATDD can be a supporting practice for frequent releases, the topic itself is neither directly nor deeply about frequent release strategies, techniques, or measurements.",
    "level": "Tertiary"
  },
  "Agile Planning": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Planning",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 57.195,
    "ai_mentions": 1.1,
    "ai_alignment": 7.8,
    "ai_depth": 6.4,
    "ai_intent": 5.5,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), which is a collaborative practice often used in Agile contexts. The discussion on defining acceptance criteria and aligning stakeholders reflects concepts present in Agile Planning (alignment, shared understanding, quality upfront). However, it does not mention Agile Planning explicitly and does not discuss core Agile Planning artifacts such as user stories, sprints, or backlogs. The depth is moderate—it goes beyond surface-level by discussing collaboration, predictability, and continuous improvement, but its main topic is an Agile quality practice, not planning methodology per se. \n\nDirect Mentions (1.1): 'Agile Planning' is not mentioned at all. 'Agility' and other adjacent terms are referenced, but never the category directly, resulting in a very low score here, just above the minimum. \n\nConceptual Alignment (7.8): ATDD aligns with Agile values such as flexibility, collaboration, and responding to change, which are key in Agile Planning, but the main thrust is test specification/practices, not planning techniques. The overlap is significant but not complete.\n\nDepth (6.4): The content goes into some depth describing the benefits and practice of ATDD, but does not significantly explore Agile Planning processes, rituals, or frameworks. Some planning implications are discussed (alignment with business needs, reducing rework) but planning is not the primary focus.\n\nIntent (5.5): The intent is educational/informative and related to improving project delivery, which is tangentially connected to Agile Planning. However, its core intent is not Agile Planning per se.\n\nAudience (7.2): The discussion targets technical practitioners—the same core audience as for Agile Planning (e.g., teams adopting Agile, product owners, testers), so this is high.\n\nSignal-to-Noise (8.1): The content is focused on high-value and relevant discussion for Agile and related audiences, with little off-topic material. \n\nPenalty analysis: The content is current and constructive, with no criticism or satire, so no penalties are applied.\n\nLevel: Secondary. ATDD is not the core of Agile Planning but intersects strongly, supporting Agile Planning efforts through testable definitions and improved collaboration.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 66.82,
    "ai_mentions": 2.7,
    "ai_alignment": 7.8,
    "ai_depth": 7.5,
    "ai_intent": 6.6,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), a collaborative software development practice. The core discussion revolves around defining clear acceptance criteria, fostering alignment with business needs, and promoting collaboration across stakeholders—a theme that touches on several Agile principles, such as customer collaboration, shared responsibility, and continuous delivery of value. \n\n- Direct Mentions (2.7): The content does not explicitly mention 'Agile', the Agile Manifesto, or its values/principles. Terms like 'collaboration', 'continuous improvement', and 'agility' are present but indirect. Hence, the score is moderately low, just for implicit references. \n- Conceptual Alignment (7.8): ATDD reinforces collaboration, shared understanding, and adaptability—hallmark Agile values. It discusses how testing early (shift-left), quality, and customer-focused criteria intersect with Agile principles. However, it’s more about a practice that supports these values rather than discussing the values directly, so a fractional deduction keeps it below 8. \n- Depth of Discussion (7.5): The piece explores why ATDD fosters collaboration, alignment, and continuous improvement, but does not examine Agile values or principles in detail (e.g., it never reviews the four values or twelve principles point-by-point). The depth comes from connecting the practice to outcomes reflective of Agile thinking. \n- Intent / Purpose Fit (6.6): The intent is informative, highlighting how ATDD benefits teams in alignment and agility. However, the primary focus is the ATDD practice, not an in-depth exploration of Agile values or principles as such.\n- Audience Alignment (7.2): The language and topics target software professionals and teams, overlapping with the target audience for Agile principles, particularly practitioners and those interested in process improvement. There is no deviation from this focus, so a moderately high score is justified.\n- Signal-to-Noise Ratio (8.1): The content is focused, concise, and aligned with the topic, with almost no filler or tangential material—most information is relevant to software quality, collaboration, and improvement (all aligning with Agile values, even if not named outright).\n\nNo penalties were applied, as the content is current in tone, makes no outdated claims, and does not contradict Agile values. Overall, this is rated 'Secondary' because the piece illustrates how ATDD supports/agrees with Agile values and principles, but does not explicitly teach or dissect them.",
    "level": "Secondary"
  },
  "Continuous Integration": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 22.147,
    "ai_mentions": 0.4,
    "ai_alignment": 1.6,
    "ai_depth": 2.1,
    "ai_intent": 3.7,
    "ai_audience": 6.3,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content is a focused, substantive overview of Acceptance Test Driven Development (ATDD), emphasizing stakeholder collaboration, early criteria definition, and fostering quality in development. There are no direct mentions of Continuous Integration (CI); the term is not cited anywhere (mentions: 0.4), and the overlap with CI concepts is indirect. Conceptually, while the material discusses practices (like shift-left testing and collaboration) that are compatible with CI, it does not articulate or explicitly tie these themes to the principles, problems, or workflows of continuous integration itself (alignment: 1.6). In terms of depth, the discussion centers on ATDD—its motivations, process, and outcomes—without ever branching into a substantial exploration of CI-specific implementation, tools, automated builds, or code integration workflows (depth: 2.1). The main intent is educational and supportive but aimed strictly at ATDD, not CI; while the relevance is adjacent, CI is not the focal purpose (intent: 3.7). The target audience—technical developers, product owners, and testers—has partial overlap with the CI audience (audience: 6.3), but the framing and terminology are about ATDD. Signal-to-noise is high with little filler (signal: 5.9), but all of it is about ATDD. No penalties were applied because the content is up-to-date and factual, with no satire or critical tone. Based on the strict category definition, this content is tertiary for CI and earns a low confidence score, as the core focus consistently remains on ATDD, not CI.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Customer Retention",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 54.35,
    "ai_mentions": 1.8,
    "ai_alignment": 5.9,
    "ai_depth": 6.65,
    "ai_intent": 6.2,
    "ai_audience": 7.1,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "1. Direct Mentions (1.8): The content does not explicitly mention 'customer retention,' nor does it use direct synonyms (e.g., 'churn,' 'user engagement,' 'customer loyalty'). References to 'customers' and 'value delivery' are implicit and secondary to the main message about ATDD.\n\n2. Conceptual Alignment (5.9): There is peripheral but not primary alignment. ATDD's emphasis on clear requirements and quality can, in a broad sense, support continuous value delivery to customers—a core plank of customer retention—but the discussion does not delve into engagement, satisfaction, or loyalty strategies. The content hints at enhancing customer value and adapting to requirements, but it is not focused on retaining customers as a central theme.\n\n3. Depth of Discussion (6.65): The article thoroughly explores ATDD as a software development practice, discussing concepts like collaboration, shift-left testing, and long-term value. However, there is no in-depth exploration of customer retention methods, metrics, or direct outcomes. The depth about ATDD itself is high, but it's only tangentially related to customer retention.\n\n4. Intent / Purpose Fit (6.2): The intent is to explain and advocate for ATDD for development quality and efficiency. While it acknowledges potential benefits to customers, the aim is not specifically customer retention. The purpose is educational for technical practitioners, not to address retention strategy.\n\n5. Audience Alignment (7.1): The content is targeted at technical professionals (developers, testers, product owners) who could also be an audience for customer retention discussions in a DevOps/Agile context, but the main audience is not retention strategists or CX leaders.\n\n6. Signal-to-Noise Ratio (6.5): The content is focused and relevant to ATDD as a methodology, with little filler. However, the proportion of content directly relevant to customer retention (beyond very general implications about customer value) is limited.\n\nNo penalties were applied, as the content is current, not satirical or dismissive, and does not reference obsolete or debunked practices.\n\nLevel: Tertiary. While the quality and predictability gained from ATDD can be foundational to delivering consistent value (which is important for customer retention), the article never addresses retention directly or discusses specific strategies for it. ATDD could play a supporting role in an overall retention framework, but this connection remains indirect and inferential within the present content.",
    "level": "Tertiary"
  },
  "Lean Product Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 63.304,
    "ai_mentions": 1.7,
    "ai_alignment": 7.1,
    "ai_depth": 7.5,
    "ai_intent": 7.6,
    "ai_audience": 7.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "Direct Mentions (1.7): The content does not explicitly mention 'Lean Product Development' or lean concepts by name, but there are indirect references. For example, phrases like 'continuous improvement', 'value delivery', and 'efficiency' are conceptually adjacent, but 'Lean' or related frameworks/tools are never cited. \n\nConceptual Alignment (7.1): The main ideas — reducing rework, embedding quality, aligning development with business value, continuous improvement — are thematically linked to Lean Product Development principles. However, the content does not overtly frame ATDD through a Lean lens, and discussion is primarily around software quality and collaboration.\n\nDepth of Discussion (7.5): While the discussion of ATDD is robust and extends to teamwork and process impact, it generally remains focused on ATDD methodology, not the full spectrum of Lean Product Development (e.g., waste elimination strategies, Lean tools like Value Stream Mapping aren't touched).\n\nIntent/Purpose Fit (7.6): The content’s intent is to promote ATDD for value delivery and quality, which partially aligns with Lean’s goal of maximizing value and minimizing waste through better processes. It supports continuous improvement, but Lean Product Development is not the primary or exclusive intent.\n\nAudience Alignment (7.1): The target audience (development teams, stakeholders, product owners) would overlap considerably with Lean Product Development practitioners, but the discussion is more tailored to technical implementers than Lean strategists or process engineers. \n\nSignal-to-Noise Ratio (7.3): The content remains focused on quality, alignment, and systematic improvement, and does not stray into unrelated methodologies. Minor off-topic by mentioning agility more generally, but maintains strong topical signal.\n\nNo penalties were applied, as the content is current, neutral, and not misleading.\n\nOverall, the content is best classified as 'Secondary' to Lean Product Development — ATDD can be one tactic within Lean Product Development, and the content does align with several Lean principles. But it is not primarily, nor thoroughly, a Lean Product Development discussion.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 12.4,
    "ai_mentions": 0.2,
    "ai_alignment": 0.6,
    "ai_depth": 0.3,
    "ai_intent": 0.6,
    "ai_audience": 6.8,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content exclusively discusses Acceptance Test Driven Development (ATDD), focusing on its principles, benefits, and collaborative practices. There are no direct mentions of Value Stream Mapping (VSM) or closely related Lean visualisation techniques (Mentions: 0.2). Conceptual alignment is extremely low, as ATDD is centered on testing and requirements alignment, not process mapping, material/information flow or direct Lean workflow visualisation (Alignment: 0.6). The discussion lacks any reference or exploration of VSM steps, principles, or tools (Depth: 0.3). The primary intent is to inform and advocate for ATDD, not VSM or Lean mapping (Intent: 0.6). The audience (Audience: 6.8) is somewhat relevant, as both VSM and ATDD target practitioners focused on process improvement and product quality in technical teams, but the focus here is on testers and developers. The signal-to-noise ratio is low for VSM categorisation (Signal: 1.1), as all major content is off-topic for VSM. No penalties were applied: the content is current and does not contradict or satirize VSM, but it is simply unrelated. The overall confidence score is very low, signifying that this content does not fit the Value Stream Mapping category, and if classified it should only appear at a tertiary or very peripheral level, if at all.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 42.087,
    "ai_mentions": 1.6,
    "ai_alignment": 3.9,
    "ai_depth": 4.3,
    "ai_intent": 4.2,
    "ai_audience": 8.6,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content primarily introduces Acceptance Test Driven Development (ATDD) as a collaborative, quality-focused software development approach. \n\nMentions (1.6): The phrase 'Ability to Innovate' or direct references to innovation are absent. There is only a minor, indirect suggestion that ATDD may encourage learning and improvement, which could foster innovation, but this is not made explicit.\n\nConceptual Alignment (3.9): While the article emphasizes collaboration, early testing, and continuous improvement, it does not specifically discuss innovation mechanisms, practices, or metrics as described in the category definition. The alignment is partial—some foundational aspects of innovation (learning, adaptability, improvement) are present, but innovation itself is not the focus.\n\nDepth (4.3): The discussion of ATDD is moderately deep, exploring collaboration, predictability, and value delivery. However, it does not deeply explore the innovation process, organizational innovation capability, or related metrics and case studies.\n\nIntent/Purpose Fit (4.2): The primary intent is to advocate for and explain ATDD to a practitioner audience, emphasizing quality and alignment with business needs. The connection to 'Ability to Innovate' is indirect—the intent is more about improving basic delivery practices than specifically enhancing innovation.\n\nAudience Alignment (8.6): The content is targeted at Agile, DevOps, or Lean practitioners and teams, which matches the target audience for 'Ability to Innovate,' though its focus is on process quality rather than innovation per se.\n\nSignal-to-Noise Ratio (7.4): The content is concise and relevant to the topic of ATDD, with little off-topic material, though much of it is not about innovation itself.\n\nNo penalties were applied as the content is not out-of-date, nor does it contradict the category or use a negative tone. However, the overall confidence is at the lower end due to ATDD being primarily a quality and collaboration practice rather than an explicit innovation enabler. Considered as 'Tertiary' relevance, since innovation is, at best, an implied benefit and not a dominant theme.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Sprint Review",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 6.78,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.4,
    "ai_intent": 1.6,
    "ai_audience": 1.7,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD), explaining its collaborative nature, benefits, and how it supports quality development, alignment, and stakeholder understanding. However, it does not mention Sprint Review, Scrum, or adjacent topics such as reviewing increments or incorporating stakeholder feedback during a review event. There is no direct mention of Sprint Review (mentions: 0.2), and only the broader concept of stakeholder collaboration and feedback is present (alignment: 1.3). The discussion remains at the ATDD methodology level and never delves into the mechanisms or practices of Sprint Review itself (depth: 1.4). The intent of the article is to inform about ATDD in general—there is no explicit or implied focus on Sprint Reviews (intent: 1.6). The likely audience comprises technical team members and stakeholders, but not specifically those seeking insight into Sprint Review practices (audience: 1.7). Most content is related to ATDD, resulting in a modest signal-to-noise ratio regarding the Sprint Review category (signal: 1.8). No outdated or misleading information or critical tone is present, so no penalties are applied. The low scores across all dimensions and a final confidence of 6.780 reflect that this content is only tangentially related (tertiary) to Sprint Review, possibly offering lessons on stakeholder alignment but not addressing the review event as defined by the category.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 24.35,
    "ai_mentions": 0.4,
    "ai_alignment": 2.8,
    "ai_depth": 2.35,
    "ai_intent": 2.9,
    "ai_audience": 3.3,
    "ai_signal": 2.25,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "Direct Mentions (0.40): The content does not mention 'evidence-based leadership', 'evidence-based management', or related terms. The closest connection is the use of systematic, testable criteria, but no explicit reference to evidence-based leadership is made. \n\nConceptual Alignment (2.80): The content focuses on implementing ATDD to improve alignment, collaboration, and quality in software development. While ATDD is an empirical practice, the emphasis is on process discipline and quality assurance rather than leadership decisions or management approaches based on data or metrics.\n\nDepth of Discussion (2.35): The discussion is centred on the technical and process aspects of ATDD, not exploring empirical leadership, organisational metrics, or data-driven decision-making in any significant detail. There is a brief nod to broader organisational benefits but not from a leadership-evidence standpoint.\n\nIntent/Purpose Fit (2.90): The primary intent is to inform about ATDD as a technical practice for developers and teams, not to provide leadership insights or guide leaders on evidence-based approaches. Any impact on leadership is heavily implicit and secondary at best.\n\nAudience Alignment (3.30): The target audience appears to be practitioners in software development—developers, testers, product owners—not executive or leadership audiences. Some overlap exists for those with cross-functional roles, but it is not clear the content is directly addressing leaders.\n\nSignal-to-Noise (2.25): Content is focused, but nearly all of its focus is technical/process ATDD without relating to evidence-based leadership, so the signal for the category is low.\n\nNo penalties were applied, as the tone is neutral, up-to-date, and does not contradict or undermine the category framing.\n\nOverall, while the topic (ATDD) is aligned with systematic and empirical ways of working, and there is some distant conceptual overlap with organisational improvement, the content does not substantively engage with evidence-based leadership or provide material directly relevant to leadership decision-making based on empirical data. Thus, classification confidence is low and only tertiary.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Throughput",
    "calculated_at": "2025-05-06T20:43:23",
    "ai_confidence": 8.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.8,
    "ai_intent": 0.7,
    "ai_audience": 1.1,
    "ai_signal": 1.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content exclusively discusses Acceptance Test Driven Development (ATDD), emphasizing testing practices, collaboration, clear acceptance criteria, and early verification within software development cycles. There is no direct mention or discussion of throughput as a delivery metric – it is neither named nor analyzed. The thematic focus is on quality, predictability, and collaboration, not on measuring work items completed over time.\n\n(1) Direct Mentions: Throughput is not named or even indirectly referenced, thus a very low score (0.2).\n(2) Conceptual Alignment: The main idea relates to improving predictability and delivery quality but not to throughput measurement, so minimal alignment (1.4).\n(3) Depth: While thorough about ATDD, there is no substantive treatment of throughput concepts (1.8).\n(4) Intent/Purpose Fit: The article’s intent is to promote quality via ATDD, not to analyze delivery performance via throughput (0.7).\n(5) Audience: Likely targets software practitioners, which could overlap with throughput users, but the framing is not for this metric (1.1).\n(6) Signal-to-Noise Ratio: The content is highly focused, though entirely off-topic for throughput (1.4).\n\nNo penalty points are warranted, as there are no outdated practices or tone issues. Overall, throughput is at best an extremely tangential theme, qualifying at only a tertiary level.",
    "level": "Ignored"
  },
  "Software Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Software Development",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 92.05,
    "ai_mentions": 8.6,
    "ai_alignment": 9.7,
    "ai_depth": 8.9,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 92.0,
    "reasoning": "This content is an in-depth, focused discussion of Acceptance Test Driven Development (ATDD), which is listed among the core example methodologies in software development. \n\nMentions (8.6): The topic 'Acceptance Test Driven Development' is named in the title and referenced explicitly several times; there are frequent and direct mentions of ATDD throughout the text, but generic terms like 'software development' are not used repeatedly.\n\nAlignment (9.7): The featured concepts—defining acceptance criteria, collaboration between product owners, developers, and testers, integrating quality early, shift-left mindset, and process improvement—are precisely aligned with software development methodologies and practices as defined in the classification. The focus is consistently methodological and process-oriented.\n\nDepth (8.9): The discussion is substantial, elaborating on process, benefits, collaboration, and long-term impact. It explains how ATDD works, its collaborative nature, and its systemic impact, with examples of who is involved and why the method matters.\n\nIntent (9.2): The main purpose is highly aligned—it's to educate and advocate for ATDD as a best practice in software development, fitting strongly within the category's intent.\n\nAudience (9.0): The content is targeted at practitioners or teams involved in software development (developers, testers, product owners), matching the intended audience (technical and practitioner-focused).\n\nSignal-to-Noise Ratio (8.7): The content is almost entirely focused on software engineering practices, with minimal digression. The only minor reduction comes from some higher-level statements about organizational benefits, though these are still directly tied to development processes.\n\nNo penalties were applied, as the content is current, positive, precise, and not critical, satirical, or obsolete. Final confidence score is proportionate to the extent of alignment, thoroughness, and focus.",
    "level": "Primary"
  },
  "Asynchronous Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 7.75,
    "ai_mentions": 0.3,
    "ai_alignment": 1.15,
    "ai_depth": 1.05,
    "ai_intent": 0.75,
    "ai_audience": 2.9,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "Direct Mentions (0.30): The term 'asynchronous' is never mentioned, nor are any clearly related concepts or synonymous practices explicitly named. The focus is strictly on Acceptance Test Driven Development (ATDD).\n\nConceptual Alignment (1.15): ATDD is primarily a development methodology focused on aligning development with business acceptance criteria. While increased collaboration and reduction of miscommunication are highlighted, these align with general team collaboration and quality principles, not specifically asynchronous workflows, remote work, or time zone independence.\n\nDepth of Discussion (1.05): The content thoroughly describes ATDD, its principles and benefits, and how it embeds quality and collaboration, but makes no reference to any asynchronous practices, asynchronous communication, or relevant tools. There is no exploration of distributed team management, asynchronous coordination, or the use of asynchronous methods.\n\nIntent / Purpose Fit (0.75): The piece is structured to educate about ATDD and its value in driving quality and alignment, not about asynchronous development. There is no intent or purpose directly serving practitioners or stakeholders interested specifically in asynchronous development methodologies or challenges.\n\nAudience Alignment (2.90): The content is tailored towards software development practitioners, product owners, testers, and those interested in collaborative quality assurance—groups that may overlap with asynchronous teams, but this is incidental rather than deliberate.\n\nSignal-to-Noise Ratio (2.00): The content is highly focused and relevant within its own scope, but that scope is not asynchronous collaboration. There is no off-topic material in the sense of irrelevance to ATDD, but it is almost entirely off-topic for asynchronous development per the strict category definition. No penalties are applied as the information is not obsolete, satirical, nor does it contradict the assigned category's framing; it is simply irrelevant to it.\n\nOverall, this resource only aligns with 'Asynchronous Development' on the most remote, generic level of team collaboration and quality process, without any direct or indirect (by example or application) connection to asynchronous workflows. This makes it fall under the 'Tertiary' level, indicating minimal confidence.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 24.7,
    "ai_mentions": 0.6,
    "ai_alignment": 2.4,
    "ai_depth": 2.3,
    "ai_intent": 2.8,
    "ai_audience": 6.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content is centered entirely around Acceptance Test Driven Development (ATDD), with a consistent focus on acceptance criteria, collaboration, and quality assurance practices. However, there is no direct mention of the Definition of Ready (DoR) or its checklist or readiness criteria. \n\n- **Direct Mentions (0.6):** The term 'Definition of Ready' is not stated even once—only acceptance criteria (a related but separate concept) is discussed, resulting in an extremely low score.\n- **Conceptual Alignment (2.4):** There is partial overlap because clear acceptance criteria can be a component within DoR discussions, but the main ideas are centered on ATDD as a testing and requirements alignment practice, not on readiness for sprint planning per se.\n- **Depth of Discussion (2.3):** While ATDD is explored deeply, there is nearly no exploration of DoR, its checklist, or agile readiness per se—discussion about how ready backlog items must be is absent beyond the indirect topic of having acceptance criteria agreed upon.\n- **Intent / Purpose Fit (2.8):** The purpose is to inform about ATDD and its value, not to educate or establish DoR. The content is tangential to the category at best.\n- **Audience Alignment (6.1):** The audience (agile practitioners, product owners, developers) is partially aligned with those interested in DoR, since both topics are relevant for agile teams. However, the content is targeted at those seeking to enhance quality practices rather than those focused specifically on backlog readiness.\n- **Signal-to-Noise Ratio (6.9):** The writing is clear, direct, and relevant to agile practices, with little filler. Nearly all content is focused, though not specifically on DoR.\n\nNo penalties are applied since the content is relevant, contemporary, and not contradictory. Level: Tertiary, as DoR is only indirectly related via the notion of having clear acceptance criteria.",
    "level": "Ignored"
  },
  "Organisational Physics": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 23.524,
    "ai_mentions": 0.1,
    "ai_alignment": 1.25,
    "ai_depth": 1.05,
    "ai_intent": 0.8,
    "ai_audience": 9.4,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "Direct Mentions (0.100): The content makes no mention of 'Organisational Physics,' systems thinking, or related terms. The focus is entirely on acceptance test driven development.\n\nConceptual Alignment (1.250): While there is some very indirect alignment through the mention of team collaboration, shared understanding, and systematic ways of working, the content does not engage with systems thinking, organisational dynamics, feedback loops, or complexity—core to Organisational Physics. Alignment is thus very weak.\n\nDepth of Discussion (1.050): There is a fair explanation of ATDD from a process perspective, but the discussion does not extend into holistic organisational analysis, systems, or dynamics. The exploration remains at the level of software project practices and team collaboration.\n\nIntent / Purpose Fit (0.800): The content’s primary intent is to promote understanding and adoption of ATDD for higher software quality. It is not oriented toward applying systems thinking or analysing organisational behaviour; any touches on organisational benefit are incidental rather than primary.\n\nAudience Alignment (9.400): The piece targets professionals interested in process and quality improvement in organisations, which tangentially overlaps with the audience for Organisational Physics (organisational improvement, leaders, practitioners). This dimension scores higher due to the general professional/organisational context.\n\nSignal-to-Noise Ratio (9.200): The content is concise, focused, and free of filler or irrelevant material; nearly every sentence is on point for its stated topic (ATDD), but not for Organisational Physics.\n\nNo penalty deductions were applied, as the content is neither outdated nor does it contradict the framing of Organisational Physics—it simply fails to address it in substance. The result is a low, but nonzero confidence that reflects some indirect, tertiary relationships with the category but a lack of direct thematic overlap.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Leadership",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 29.6,
    "ai_mentions": 1.2,
    "ai_alignment": 3.8,
    "ai_depth": 4.1,
    "ai_intent": 2.6,
    "ai_audience": 6.4,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "Direct Mentions (1.2): The content does not explicitly mention 'leadership' or related terms; its focus is on a development methodology, not on leadership roles or principles. \n\nConceptual Alignment (3.8): While there are hints at collaboration, shared responsibility, and fostering a culture of improvement, these are framed strictly within the context of the ATDD process itself—not leadership approaches or frameworks. The reference to 'shifting-left' and 'collaboration' resonates somewhat with leadership influence on culture, but does not discuss actions or roles of leaders.\n\nDepth of Discussion (4.1): The piece details the practice of ATDD at process and team levels, referencing some supporting culture and collaboration, but does not analyze or deeply explore leadership's essential role in enabling or guiding these outcomes.\n\nIntent / Purpose Fit (2.6): The main purpose is to explain and advocate for ATDD as a software development technique, with secondary references to team culture. It is not aimed at instructing or inspiring leaders or prospective leaders; thus the intent is only tangentially (at best) aligned with the leadership category.\n\nAudience Alignment (6.4): The audience is primarily practitioners (developers, testers, product owners), but with some overlap to team leads or facilitators; it is not targeted at senior leadership, transformation leads, or those focused on leadership philosophy.\n\nSignal-to-Noise Ratio (5.5): The content is focused and on-topic in terms of ATDD, but from a leadership perspective, much of the detail is noise. Some points about shared responsibility and continuous improvement have limited indirect relevance.\n\nLevel: Tertiary – leadership is not the primary or secondary focus, but some indirect relevance exists through references to team culture and collaboration. \n\nCalibration: The calculated confidence (29.600) matches the lightly tangential connection to leadership, being proportionate and significantly below medium certainty. All scores are non-identical per dimension, as required.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Project Management",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 58.996,
    "ai_mentions": 1.6,
    "ai_alignment": 7.3,
    "ai_depth": 5.4,
    "ai_intent": 6.3,
    "ai_audience": 5.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "Direct Mentions: The content does not explicitly reference 'project management' or its core terminologies; its focus is on Acceptance Test Driven Development (ATDD) as a software engineering practice. Brief allusions to 'team members,' 'stakeholders,' and 'project outcomes' slightly raise the score, but not by much. Conceptual Alignment: ATDD relates tangentially to project management concepts, mainly through collaboration, requirement alignment, and risk reduction (miscommunication, rework). However, the main subject is about software quality and development practices, not core project management topics like lifecycle phases or methodologies. Depth of Discussion: The content goes into moderate detail on the philosophy, benefits, and implementation of ATDD, discussing collaboration and continuous improvement. Nonetheless, it lacks substantive discussion of project management frameworks, roles, tools, or project-level governance. Intent Fit: The purpose of the content is to promote ATDD as a quality and collaboration practice, which can influence successful project delivery but is not primarily targeted at project management methods or strategy; it’s supportive, but tangential. Audience Alignment: The target audience appears to be developers, testers, and possibly product owners interested in modern development practices — adjacent but not identical to the typical project management community. Signal-to-Noise: The entire content is focused on ATDD; there is no obvious filler, but relevance to core project management topics is inconsistent and generally indirect. Penalties: No outdated material or contradictory tone present, so no penalties applied. Level: Secondary, as the content is related to but not primarily about Project Management.",
    "level": "Tertiary"
  },
  "Psychological Safety": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 18.783,
    "ai_mentions": 0.5,
    "ai_alignment": 2.7,
    "ai_depth": 2.3,
    "ai_intent": 1.9,
    "ai_audience": 6.2,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), highlighting its advantages for software quality, alignment, and collaboration. However, it does not explicitly mention 'psychological safety' or discuss themes such as risk-taking, speaking up, or creating a supportive environment where team members feel safe to make mistakes. \n\n- Direct Mentions: Scored extremely low (0.5). No mention of psychological safety or its synonyms; only indirect suggestions through mentions of collaboration and shared responsibility.\n- Conceptual Alignment: Low-to-moderate (2.7). The piece touches on collaboration and shared understanding — factors that could contribute to psychological safety — but only as secondary effects, not as focal points.\n- Depth of Discussion: Low (2.3). The material does not delve into the psychological/emotional aspects, team safety dynamics, or specific techniques to foster psychological safety. It remains technical and process-oriented, centered strictly on ATDD practices.\n- Intent / Purpose Fit: Very low (1.9). The primary intent is to advocate for ATDD as a methodology to improve workflow and alignment, not to foster or educate about psychological safety.\n- Audience Alignment: Moderate (6.2). The piece targets practitioners (developers, product owners, testers) similar to the category audience, though it is not tailored to psychological safety specifically.\n- Signal-to-Noise: Low-to-moderate (4.6). Most of the content is tightly focused on ATDD and its mechanics rather than psychological safety.\n\nNo penalties are applied as the information is current, neutral in tone, and does not undermine the topic. Overall, any fit with 'Psychological Safety' is quite distant, indirect, and should be considered tertiary; the score reflects very low confidence in placement within this category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 16.89,
    "ai_mentions": 0.55,
    "ai_alignment": 2.35,
    "ai_depth": 2.25,
    "ai_intent": 1.7,
    "ai_audience": 5.25,
    "ai_signal": 6.39,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content solely discusses Acceptance Test Driven Development (ATDD), describing its benefits, collaborative nature, and impact on agile software development. \n\n- **Mentions (0.55):** The term 'Open Space Agile' is never directly mentioned; neither is Open Space Technology. The content references collaboration, but only in the context of aligning developers, testers, and product owners, not in the collective organisational participation sense specific to Open Space Agile.\n\n- **Alignment (2.35):** Some concepts (collaboration, shared understanding, agility) appear superficially similar to Open Space Agile principles, but there's no meaningful alignment with Open Space Technology’s core practices (e.g., large-scale emergent dialogue, shared ownership at an organisational level). The focus is clearly on a specific agile engineering practice, not organisational transformation.\n\n- **Depth (2.25):** The discussion is a generic overview of ATDD; it doesn't explore Open Space Agile concepts, practices, or case studies at any depth.\n\n- **Intent (1.70):** The purpose is instructive about ATDD and its value in achieving quality and business alignment. It is not aligned with informing or advancing Open Space Agile or its audience specifically, though the tone is positive towards agility in general.\n\n- **Audience (5.25):** The content targets agile practitioners (developers, product owners, testers), which overlaps with but is broader than the likely Open Space Agile audience (which would include change leaders, facilitators, and whole-organisation transformation stakeholders).\n\n- **Signal-to-Noise (6.39):** The content is focused and on-topic for ATDD, with little irrelevant information, but substantially off-topic for Open Space Agile, resulting in only partial score retention.\n\n- **Penalties:** No penalties were applied—the content is current, respectful of agile principles, and not satirical or undermining.\n\n**Assignment: Level 'Tertiary'** because Open Space Agile concepts only appear tangentially (if at all), through generic mentions of collaboration and agility. There is no direct or significant secondary connection. The confidence score is very low and appropriate given the content’s lack of focus on the category, despite some agile principle overlaps.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 68.61,
    "ai_mentions": 1.05,
    "ai_alignment": 7.7,
    "ai_depth": 7.95,
    "ai_intent": 7.05,
    "ai_audience": 7.85,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0.0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "Direct Mentions (1.050): The content does not explicitly mention 'Professional Scrum', Scrum values, or related terminology; the only reference to Scrum is via roles (product owner, developer), but without naming Scrum itself. This dimension is therefore scored very low. \n\nConceptual Alignment (7.700): The content strongly aligns with key elements of Professional Scrum's ethos: collaborative work, early quality assurance (shift-left), accountability/shared responsibility, and a learning culture. However, it does not directly connect these practices to the explicit principles of Professional Scrum such as empiricism, transparency, or Scrum values, hence a high but not perfect alignment. \n\nDepth of Discussion (7.950): The discussion of ATDD is thorough, touching on collaboration, long-term benefits, alignment with business needs, predictability, and continuous improvement. While depth is strong, the discussion does not directly overlay this depth onto the Professional Scrum context or use its language, limiting maximal marks. \n\nIntent/Purpose Fit (7.050): The clear purpose is to inform and promote ATDD as a professional practice for high-quality software. This resonates strongly with Professional Scrum's disciplined application ideals, though it is not tailored specifically to Scrum practitioners, slightly reducing the fit. \n\nAudience Alignment (7.850): The intended audience includes professionals involved in software development (developers, testers, product owners). This matches the typical Scrum practitioner audience. However, there is some ambiguity: the description does not confirm a specific Scrum/Agile or general technical audience, so the alignment is not perfect. \n\nSignal-to-Noise Ratio (6.900): The content is focused, relevant, and nearly free of filler. It avoids off-topic material but does contain some generic claims (e.g., 'not merely a technique but a foundational element...'), which slightly dilute the strict Professional Scrum tie-in. \n\nLevel: Secondary. While the principles discussed strongly underpin Professional Scrum, and would elevate any Scrum team's practice, the content itself is not directly about Professional Scrum, but about ATDD's professional/purposeful application. Its value to Professional Scrum comes through its contribution to technical excellence and shared understanding, key to Professional Scrum's ethos, but it is not the central subject.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 12.26,
    "ai_mentions": 0.4,
    "ai_alignment": 1.6,
    "ai_depth": 1.7,
    "ai_intent": 1.2,
    "ai_audience": 1.7,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content describes Acceptance Test Driven Development (ATDD), which is a general software development practice aimed at aligning requirements, acceptance criteria, and testing. \n\n1. **Mentions (0.4)**: There is no explicit reference to Site Reliability Engineering, SRE, or its associated concepts (such as SLOs, SLIs, monitoring, or incident response). The content focuses exclusively on ATDD.\n\n2. **Conceptual Alignment (1.6)**: The main themes—quality assurance, stakeholder alignment, and early testing—are generally beneficial in any software context, including production systems, but ATDD as presented here is not specifically related to SRE principles like reliability, scaling production systems, or operational excellence. The only very slight overlap is that both SRE and ATDD value quality and clarity, but this is tangential and not direct.\n\n3. **Depth of Discussion (1.7)**: The content provides a solid, detailed overview of ATDD but does not touch on any SRE practices or deep-dive into site reliability, monitoring, automation, or resilience as defined by the SRE discipline.\n\n4. **Intent / Purpose Fit (1.2)**: The intent is to inform about ATDD as a development methodology to improve communication and software quality. There is no intent to address SRE concerns or bridge development and operations for reliable production systems.\n\n5. **Audience Alignment (1.7)**: The primary audience appears to be developers, testers, and product owners interested in software quality practices. SRE practitioners might find this of peripheral interest, but it is not aimed at those focused on reliability engineering in production.\n\n6. **Signal-to-Noise (1.0)**: The entire content is on ATDD—efficient and informative for that topic, but almost entirely off-signal for Site Reliability Engineering per the strict category definition (no case studies, SRE principles, or SRE tools discussed).\n\nThus, this resource is classified as 'Tertiary' relevance: it may have some distant peripheral benefits for SRE if adapted, but it does not directly or meaningfully fit the SRE category as defined. No penalties were applied, as the resource is up-to-date and not critical or satirical towards SRE.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 81.16,
    "ai_mentions": 6.8,
    "ai_alignment": 8.7,
    "ai_depth": 8.5,
    "ai_intent": 8.3,
    "ai_audience": 7.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "Direct Mentions (6.8): The content explicitly discusses Acceptance Test Driven Development (ATDD) throughout, but does not directly reference the phrase 'Technical Excellence' or its synonyms. However, key phrases like 'high-quality software', 'sustainability', 'continuous improvement', and 'systematic way of working' are present, showing some alignment in language but not in labels. Conceptual Alignment (8.7): The theme is strongly aligned with Technical Excellence—ATDD is presented as a high-level engineering practice ensuring quality, continuous improvement, and adaptability. The focus is on proactive quality, collaboration, and integrating business needs, which matches the definition's intention. Depth of Discussion (8.5): The piece goes beyond surface-level explanation by describing ATDD's process, benefits, and cultural changes. It discusses both immediate and long-term impacts but could be improved with deeper technical specifics or examples. Intent/Purpose Fit (8.3): The main purpose is to inform and advocate for ATDD as foundational for delivering high-quality, adaptive software—directly supporting Technical Excellence's purpose. Audience Alignment (7.2): The audience seems to include developers, testers, and product owners—a good but slightly broad match, as it also targets stakeholders beyond engineering practitioners. Signal-to-Noise (7.8): The content is tightly focused on ATDD and its benefits for technical excellence; there is very little irrelevant filler. No Penalties: The practices discussed are current and the tone is earnest and supportive, so no deductions are warranted. Overall, the confidence is high that this content falls under Technical Excellence, primarily by illustrating how a listed practice (ATDD) empowers teams to deliver and improve high-quality software aligned with key business objectives.",
    "level": "Primary"
  },
  "Product Validation": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Product Validation",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 54.95,
    "ai_mentions": 2.1,
    "ai_alignment": 6.9,
    "ai_depth": 6.7,
    "ai_intent": 6.6,
    "ai_audience": 5.5,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content centers on Acceptance Test Driven Development (ATDD), focusing on defining testable acceptance criteria before implementation, fostering alignment with business needs, and improving quality and collaboration. While these are adjacent to themes in product validation—such as ensuring deliverables meet stakeholder needs and facilitating feedback—they are not directly about validating product ideas with real users nor do they describe iterative market or user testing. \n\nMentions: ATDD is referenced throughout, but 'Product Validation' and its key terminology are not directly mentioned (2.1). \n\nAlignment: The main ideas connect to ensuring what is built aligns with stakeholder/business needs and embed feedback loops within the development team, which overlaps with conceptual aspects of product validation, but does not address validating assumptions with actual users or markets (6.9). \n\nDepth: The discussion is solid for ATDD as a process, but it does not substantially explore user testing, market fit analysis, or prototyping as primary practices of product validation (6.7). \n\nIntent: The intent is to inform about ATDD's process for quality delivery and alignment with business needs, partially in service to delivering customer value, but not with a focus on validating new ideas with users before or during development (6.6). \n\nAudience: The content primarily targets agile practitioners, developers, and perhaps product owners—not explicitly product validation professionals or those concerned with early-stage idea testing with users (5.5). \n\nSignal: The content is highly focused, but its focus is somewhat tangential to core product validation, centering on engineering/coordination ‘done’ criteria, not on concept or market validation; hence signal-to-noise is moderate (5.1).\n\nNo penalties were applied as the content is up-to-date and not critical of the category. \n\nOverall, the content aligns with the PRODUCT QUALITY/requirements-alignment aspect of the product process, but only secondarily touches on direct product validation as defined (Secondary).",
    "level": "Tertiary"
  },
  "Experimentation": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Experimentation",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 36.215,
    "ai_mentions": 0.5,
    "ai_alignment": 3.2,
    "ai_depth": 3.6,
    "ai_intent": 3.9,
    "ai_audience": 7.8,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), which is a quality assurance practice emphasizing definition of acceptance criteria prior to feature implementation. While ATDD shares some principles with experimentation—namely, the use of testable criteria and collaborative approaches—the content does not directly mention or discuss hypothesis-driven experimentation, systematic testing of ideas for innovation, or iterative validation of assumptions within Agile as defined in the Experimentation category. \n\n1. Mentions (0.5/10): The content does not mention 'experimentation,' 'hypothesis,' or related terms. Any link to experimentation is inferential rather than explicit.\n\n2. Alignment (3.2/10): Thematically, ATDD supports continuous improvement and learning, which aligns modestly with the goals of experimentation, but the focus is on specification and alignment with business needs, not hypothesis-driven testing or validation of assumptions.\n\n3. Depth (3.6/10): The discussion is thorough regarding ATDD as a process but does not substantially explore experimentation methodologies or continuous improvement via experimental validation. It stays focused on stakeholder alignment, criteria definition, and quality assurance.\n\n4. Intent (3.9/10): The purpose is to inform and promote ATDD, not experimentation—it is supportive of Agile practitioners but not for hypothesis-driven experimentation practices.\n\n5. Audience (7.8/10): The intended audience—Agile teams, developers, product owners—is similar to those interested in experimentation, hence the comparatively high alignment here.\n\n6. Signal (7.1/10): Nearly all content is relevant to ATDD and its audience, with minimal unrelated material, so the signal-to-noise ratio is strong within its own topic but not for experimentation.\n\nNo penalties are applicable: The content is current, constructive in tone, and does not contradict the target framing.\n\nOverall, while some aspects of ATDD could be components in broader experimentation frameworks, the content falls at the 'Tertiary' level for the Experimentation category as it lacks direct relevance to experimentation per the strict definitions, focusing primarily on requirements alignment and quality embedding without hypothesis-driven or idea-testing processes.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Azure Repos",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 2.8,
    "ai_mentions": 0.4,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 0.9,
    "ai_audience": 3.1,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content exclusively discusses Acceptance Test Driven Development (ATDD) as a general software development and collaboration practice. There is no direct mention of Azure Repos, nor any reference to source control, Git/TFVC, pull requests, branching, or any particular feature set specific to Azure Repos. Therefore, the 'Direct Mentions' score is at a near-minimum (0.4), reflecting the absence of explicit references.\n\nConceptual Alignment is marginal (1.5), as ATDD is a development process, not a source control practice. There is a broad, indirect connection in the sense that ATDD might be employed by teams who use Azure Repos, but that linkage is neither discussed nor implied in the content. \n\nDepth is low (1.2); the content does not explore source control or repository-related topics. It stays on the higher-level process (ATDD) and does not touch on specific integrations (e.g., with Azure Repos), technical challenges, or best practices as relevant to Azure Repos.\n\nIntent/Purpose Fit is minimal (0.9); the main intent is explaining or promoting ATDD, not source control management, DevOps tool usage, or Azure Repos. \n\nAudience Alignment rates higher (3.1) simply because the target audience—developers and testers using modern SDLC approaches—does overlap with the likely audience for Azure Repos, but this is circumstantial, not explicit.\n\nSignal-to-noise (2.7) is higher than other dimensions because the piece is focused on ATDD, not off-topic or ambiguous—but none of that signal is relevant for Azure Repos, so while not 'noisy' in a general sense, it's irrelevant in the classification context. No penalties applied as the content is current and neutral in tone. Overall, this is a tertiary, highly tangential fit with almost no relevance to Azure Repos.",
    "level": "Ignored"
  },
  "Business Agility": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Business Agility",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 67.65,
    "ai_mentions": 2.6,
    "ai_alignment": 7.2,
    "ai_depth": 6.8,
    "ai_intent": 7.0,
    "ai_audience": 7.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content primarily discusses Acceptance Test Driven Development (ATDD), a software development practice focused on quality, collaboration, and aligning development with business needs. \n\n- **Mentions (2.6):** There are no explicit, direct references to 'business agility' by name. However, agility and adaptability are discussed in more general terms, particularly in the statement 'organisations can enhance their agility...'. This is largely indirect, so the mentions score is low but above zero due to some conceptual connection. \n- **Alignment (7.2):** There is strong conceptual alignment with business agility principles, notably in the focus on adaptation to changing requirements, delivering value efficiently, collaboration, and continuous improvement. However, the content is practice-specific (ATDD) and does not directly address core business agility frameworks, broad organisational transformation, or enterprise-level agility.\n- **Depth (6.8):** The analysis of ATDD is moderately deep—explaining not only what it is but also how it impacts team collaboration, alignment with business needs, and value delivery. Still, it remains mostly focused on process and team-level impacts instead of fully exploring business agility at an organisational scale.\n- **Intent (7.0):** The content’s intent is educational and supportive of concepts closely aligned with business agility—helping teams deliver business value more effectively. However, the main purpose centers on improving software development practice (ATDD), not on explaining or advocating business agility itself.\n- **Audience (7.4):** The target audience seems to be technical practitioners, team leads, and possibly product owners—overlapping with, but not limited to, those directly seeking organisational or strategic business agility content (e.g., executives, change agents). The technical details may slightly limit its appeal to general business agility strategists.\n- **Signal (7.1):** The discussion is focused and relevant, relating ATDD to value delivery, adaptability, and collaboration, which are all important for business agility. However, substantial portions remain narrowly about ATDD itself, rather than the broader category.\n\n**Level:** Secondary — The content supports principles underpinning business agility and references increased organisational agility as a benefit, but it is not a primary discussion focused squarely on business agility as a holistic organisational capability.\n\n**Calibration Check:** The confidence score is moderate but not high, reflecting that while the content supports business agility, it is primarily about a supporting technique rather than the category itself.",
    "level": "Secondary"
  },
  "Forecasting": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Forecasting",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 22.35,
    "ai_mentions": 0.7,
    "ai_alignment": 1.2,
    "ai_depth": 1.6,
    "ai_intent": 1.1,
    "ai_audience": 7.3,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "Direct Mentions (0.7): The content does not directly mention 'forecasting', nor does it use forecasting-related terms. Only indirect association via terms like 'predictability' is present, but no explicit reference is made.\n\nConceptual Alignment (1.2): The core theme is ATDD and how it promotes collaboration and clear acceptance criteria. While there is a mention of 'predictability and sustainability of value delivery', this is not linked to empirical data, specific forecasting practices, or forecasting methodologies within Agile or Scrum. Alignment is minimal and only tangential.\n\nDepth of Discussion (1.6): The discussion is thorough regarding ATDD, but not about forecasting. Mention of 'predictability' is brief and not explored; there is no substantial treatment of empirical forecasting, delivery prediction, risk management, metrics, or related topics.\n\nIntent / Purpose Fit (1.1): The main intent is to educate about ATDD and its benefits, not to discuss forecasting methods, techniques, or applications in Agile or Scrum. Any fit to forecasting is incidental and not purposeful.\n\nAudience Alignment (7.3): The content addresses Agile practitioners (developers, testers, product owners), overlapping with the target audience for forecasting within Agile/Scrum, hence a higher score here.\n\nSignal-to-Noise Ratio (9.4): The content is strongly focused on its topic (ATDD), is relevant within the Agile domain, and does not meander or include unrelated material. However, most of the signal is unrelated to Forecasting specifically—almost all content is devoted to ATDD.\n\nNo penalties applied: The content is current, neutral in tone, and does not reference obsolete practices.\n\nLevel: Tertiary — ATDD may partially support better forecasting in practice, but the content itself contains only weak, indirect relevance to the Forecasting category and does not explore any forecasting methods, data, or metrics.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Working Agreements",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 33.314,
    "ai_mentions": 0.4,
    "ai_alignment": 3.8,
    "ai_depth": 3.6,
    "ai_intent": 5.0,
    "ai_audience": 8.2,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD), describing its benefits, practices, and outcomes. It explicitly discusses collaboration, shared understanding of criteria, and improved communication among product owners, developers, and testers. However, while ATDD indirectly touches on team norms and collaborative principles, it does not directly address or mention 'working agreements,' nor does it define, describe, or guide the creation of such agreements as referred to in the category definition. \n\nMentions (0.4): No explicit or direct reference to 'working agreements.' The closest overlap is the mention of shared understanding and collaboration, but these are intrinsic to ATDD, not positioned as norms or team agreements. \n\nAlignment (3.8): While there is a conceptual link to some goals of working agreements (team alignment, collaboration), the content's main thrust is about a technical practice, not the meta-process of establishing norms and agreements for teamwork. \n\nDepth (3.6): The discussion is thorough regarding ATDD itself, but doesn't cover working agreements approaches, techniques, or reflections. There’s minimal exploration of the mechanisms teams use to intentionally create collaborative environments beyond adopting ATDD as a practice. \n\nIntent (5.0): The piece aims to inform and advocate for ATDD—its intent partially overlaps with fostering collaboration, but working agreements are not its central focus nor stated purpose. \n\nAudience (8.2): The primary audience is software teams and practitioners—this matches the likely audience for working agreements content, so the score is high here. \n\nSignal (7.9): The content is focused, non-tangential, and relevant to Agile process improvement. However, only a fraction of the information is germane to the 'working agreements' topic per se. \n\nNo penalty points are deducted, as the tone is positive, the information is current, and there is no contradiction to category framing. \n\nOverall, the confidence score reflects tertiary or incidental relevance—the content may be useful in a broader team collaboration context, but it does not primarily fit under 'Working Agreements' as strictly defined.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 25.16,
    "ai_mentions": 1.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.7,
    "ai_intent": 2.4,
    "ai_audience": 2.9,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), a software engineering practice aimed at improving collaborative alignment and quality in software development. Direct terminology such as 'entrepreneur(s)' or 'entrepreneurship' is absent, resulting in a low direct mentions score (1.2). Conceptual alignment with entrepreneurship is weak (2.8); although ATDD supports alignment with business needs and value delivery—concepts tangential to value creation—the primary emphasis is on engineering process and team collaboration, not risk-taking, innovation, or entrepreneurial strategy. The discussion has limited depth regarding entrepreneurship (2.7), as it explores ATDD thoroughly but only marginally connects to entrepreneurial principles. The intent of the article is to inform practitioners about ATDD for quality software delivery rather than to educate about entrepreneurship (2.4). Audience is technical or process-focused, targeting software teams, which is only indirectly connected to entrepreneurial audiences (2.9). The signal-to-noise ratio is moderate (3.6), since the content is highly relevant to ATDD but not tightly focused on entrepreneurship. No penalties are applied; content is neither outdated nor contrary in tone. The overall confidence score and classification level reflect that any connection to entrepreneurship is extremely indirect, resting solely on generalized concepts of value/need alignment and continuous improvement, which are insufficient for primary or even secondary categorization.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Automated Testing",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 64.07,
    "ai_mentions": 2.1,
    "ai_alignment": 6.3,
    "ai_depth": 6.5,
    "ai_intent": 7.4,
    "ai_audience": 8.0,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), highlighting the definition, principles, and collaborative benefits of ATDD in the software development process. It clearly outlines the intent—aligning software features with business needs via clear, testable acceptance criteria set before implementation. This aligns with automated testing principles conceptually (score: 6.3), as ATDD frequently involves automation; however, the text itself does not explicitly link ATDD to automated tools, test suites, CI/CD, or popular frameworks. The term 'automated testing' is not directly mentioned and the descriptions remain somewhat generic (mentions: 2.1). While depth is moderate (6.5)—it discusses ATDD's process and benefits, it doesn't elaborate on the technical implementation, tools, or specific automation strategies, so it does not cover key technical details emphasized in the classification definition. The intent is strongly aligned (7.4), as the purpose is to support quality through test-driven practices but is not aimed squarely at automation. The audience fit is good (8.0): targeted at cross-functional Agile software delivery teams. Signal-to-noise ratio is also high (7.9), as all content is on-topic though focused more on collaborative and process aspects versus technical implementation. There are no penalties for obsolete information, critique, or satirical tone. While ATDD often leads to automated tests, the connection is implied but not explicit; thus, this content is best categorized as Secondary to Automated Testing, suitable for readers interested in testing methodologies that may become automated but not guaranteed so in the description.",
    "level": "Secondary"
  },
  "Complexity Thinking": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-06T20:43:24",
    "ai_confidence": 19.46,
    "ai_mentions": 0.1,
    "ai_alignment": 1.7,
    "ai_depth": 1.2,
    "ai_intent": 2.3,
    "ai_audience": 2.0,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD) as a software engineering practice. \n\n1. Direct Mentions (0.1): There are no explicit mentions of 'Complexity Thinking', complexity science, or related frameworks (Cynefin, Stacey Matrix, etc.). The only connection may be some overlap in broader Agile conversations, but this is not referenced.\n\n2. Conceptual Alignment (1.7): While ATDD involves cross-functional collaboration, alignment with business needs, and adapting to requirements change, these are standard Agile themes and do not directly engage with complexity principles like emergence, non-linearity, or self-organisation as complexity theory frames them. The content does not discuss managing uncertainty in the sense of complexity thinking but rather aims for predictability and alignment.\n\n3. Depth of Discussion (1.2): There is no depth regarding complexity concepts. The exploration is wholly about ATDD's process and benefits within software engineering, focusing on quality, collaboration, and early testing.\n\n4. Intent/Purpose Fit (2.3): The primary intent is educational and practical—on implementing ATDD for software quality and business alignment. There is no intent to discuss or analyze complexity as a management science.\n\n5. Audience Alignment (2.0): The audience is practitioners of software development—testers, developers, and product owners. Complexity Thinking typically targets decision-makers, leaders, strategists, or those interested in organisational adaptability and management science, indicating a mismatch.\n\n6. Signal-to-Noise Ratio (2.1): The content is focused and clear, with little unrelated content, but what is 'signal' is not relevant to Complexity Thinking as defined. \n\nNo penalties applied as the content is neither outdated nor critical/satirical, just off-category. Tertiary level is used; while ATDD could be adjacent to topics considered in complexity-informed Agile/DevOps practices, there are no explicit links or advanced discussions of complexity itself. The confidence score is low, reflecting the absence of conceptual, terminological, and audience alignment.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 19.983,
    "ai_mentions": 0.2,
    "ai_alignment": 2.258,
    "ai_depth": 2.116,
    "ai_intent": 2.174,
    "ai_audience": 7.168,
    "ai_signal": 2.103,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses entirely on Acceptance Test Driven Development (ATDD) as a collaborative approach for defining and verifying software acceptance criteria. \n\nMentions (0.2): The term 'Minimum Viable Product' is never mentioned directly or indirectly. There is no language referencing MVP concepts, and all terminology is specific to ATDD and quality practices.\n\nAlignment (2.258): ATDD supports agile and quality goals, which are tangentially relevant to product development practices (and by extension could help an MVP process), but there is no discussion of MVP principles: minimalism, market testing, or hypothesis validation with minimal resources. The alignment is only indirect, through shared values of agility and learning.\n\nDepth (2.116): The content discusses ATDD in moderate detail, including benefits, practices, and mindsets. However, there is no depth regarding MVP—no application to MVP creation or iteration, nor exploration of how ATDD aids in market validation. Any such implication is left unstated and would be inferred only by experienced practitioners.\n\nIntent (2.174): The intent is to inform on ATDD as a technique for high-quality software delivery. It does not aim to inform about MVP development or market-driven experimentation, making its relevance to MVP only tangential.\n\nAudience (7.168): The target audience—technical and delivery teams—is partly overlapping with the MVP audience, as practitioners involved in product development might draw parallels or apply ATDD within an MVP workflow. However, the primary focus is not on MVP teams but general agile technical teams.\n\nSignal (2.103): The content is on-topic for ATDD and technical agile practices but not focused at all on MVP concerns. Most of its signal is relevant to quality practices rather than MVP discipline.\n\nNo penalties were applied, as the content is not outdated, irrelevant, or contradictory to the MVP framing (just unrelated).\n\nOverall, the content warrants only a tertiary categorization with very low confidence. It does not fit the category definition or key topics for Minimum Viable Product beyond indirect alignment through agile principles.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Beta Codex",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 28.93,
    "ai_mentions": 0.45,
    "ai_alignment": 2.05,
    "ai_depth": 2.25,
    "ai_intent": 2.93,
    "ai_audience": 7.2,
    "ai_signal": 4.54,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD) as a practice to improve software engineering quality and collaboration. \n\nMentions (0.45): The category Beta Codex is never mentioned directly or indirectly; the closest reference is to team collaboration, but not to organisational design.\n\nAlignment (2.05): Some minor conceptual overlap exists, for example, the discussion of team collaboration, shared responsibility, and increased agility. However, these references do not directly connect to Beta Codex core theories such as decentralisation, adaptive organisational culture, or human-centric design on an organisational level. \n\nDepth (2.25): The discussion is thorough about ATDD, its workflow impact, and collaborative elements, but makes no effort to relate these to Beta Codex principles or broader organisational transformation.\n\nIntent (2.93): The main intent is educational—informing about ATDD implementation rather than advocating for, comparing to, or demonstrating Beta Codex practices. Any relevance to Beta Codex is incidental and not the purpose of the article.\n\nAudience (7.20): The content is aimed at practitioners in software development—mainly developers, testers, product owners. This audience could overlap in interest with those seeking decentralised and agile approaches, but there's no direct alignment with Beta Codex's focus on organisational strategists or transformation leaders.\n\nSignal (4.54): The content is focused and stays on topic for ATDD but provides little to no information directly relevant to the Beta Codex category. The ATDD discussion is not a Beta Codex implementation or case study, nor does it critique or reference traditional hierarchies.\n\nNo penalties were applicable—the piece is neither outdated, nor does it contradict Beta Codex intentionally; it is simply out of scope.\n\nLevel: Tertiary—any potential relevance to Beta Codex comes as an extreme indirect influence (e.g., through cultural agility), not as a primary or secondary theme.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 7.36,
    "ai_mentions": 0.15,
    "ai_alignment": 1.25,
    "ai_depth": 1.4,
    "ai_intent": 0.9,
    "ai_audience": 1.1,
    "ai_signal": 1.08,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD) – its definitions, benefits, and impact on software development quality and collaboration. There are no direct mentions of 'Hybrid Agile,' nor references to hybrid project management or the challenges of mixing agile and traditional approaches. In terms of conceptual alignment, the content centers on ATDD as an agile practice, not the analysis or critique of hybrid frameworks or associated dysfunctions, which limits its relevance. The depth is limited to ATDD process explanation and its positive outcomes; it does not discuss Hybrid Agile implications, pitfalls, or command-and-control remnants. Intent and purpose are clearly around advocating good agile testing practice, not critically examining hybrid models. The audience (software development teams interested in ATDD) is related but not directly matched to the critical or strategic audience for Hybrid Agile discussions. The content stays on topic for ATDD, but that topic is only loosely related to Hybrid Agile and does not reference it explicitly or implicitly. As such, the confidence that this fits under 'Hybrid Agile' is very low and classified as Tertiary — the link is indirect at best.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 52.437,
    "ai_mentions": 0.2,
    "ai_alignment": 6.1,
    "ai_depth": 5.6,
    "ai_intent": 6.5,
    "ai_audience": 6.8,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "Direct Mentions (0.2): The content makes no direct mention of Lean Thinking or its core principles; all references are implicit and not by name. Conceptual Alignment (6.1): While the focus on clarity, reducing rework, and maximizing value delivery has conceptual ties to Lean principles (waste reduction, value creation), the alignment is indirect. Lean is neither referenced as a methodology nor are tools like Value Stream Mapping, 5S, or Kanban addressed; the lean mindset is present in 'delivering higher value… more efficiently' and 'continuous improvement', but without explicit Lean terminology. Depth of Discussion (5.6): There is moderate depth in exploring ATDD, providing context, benefits, and outcomes relating to collaboration, reduced miscommunication, and systematic working. However, Lean topics are not explored—instead, they are touched upon through shared language (e.g., efficiency, value delivery, continuous improvement), rather than actual Lean frameworks or techniques. Intent/Purpose Fit (6.5): The intent is to improve quality and value alignment in software, which is sympathetic to Lean goals, but Lean Thinking itself is not the main purpose—it is a side effect rather than a driver. Audience Alignment (6.8): The target audience appears to be practitioners and technical leads in software development—an audience that overlaps with those interested in Lean, but not with exclusive focus. Signal-to-Noise Ratio (7.9): The content is focused with little extraneous material, but relates primarily to ATDD, with only tangential Lean relevance. No penalties apply, as the content is current, constructive, and not critical of Lean. This positions the content at a 'Tertiary' relevance: it is somewhat related conceptually to Lean Thinking but is not about Lean Thinking per se, nor does it reference or teach its principles distinctly.",
    "level": "Tertiary"
  },
  "Product Discovery": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Product Discovery",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 37.2,
    "ai_mentions": 1.2,
    "ai_alignment": 4.3,
    "ai_depth": 3.6,
    "ai_intent": 4.1,
    "ai_audience": 6.2,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content on Acceptance Test Driven Development (ATDD) primarily focuses on the collaborative definition of acceptance criteria, early testing, and team communication within the software development process. \n\n1. **Direct Mentions (1.2):** 'Product Discovery' is not mentioned directly, nor are its key terms (e.g., user research, feature validation, MVP, ideation). ATDD and its associated terms dominate the text.\n\n2. **Conceptual Alignment (4.3):** The closest overlap with Product Discovery is the alignment around defining features with acceptance criteria before development, which tangentially relates to clarifying requirements. However, the main thrust is process quality and collaboration, not discovery methodologies or validation.\n\n3. **Depth of Discussion (3.6):** Depth is mostly on development practice, quality assurance, and team collaboration. There's discussion of aligning on 'what truly matters to the business and users,' but little to no exploration of discovery-specific tools (user interviews, feedback analysis, MVPs).\n\n4. **Intent/Purpose Fit (4.1):** The primary purpose is to guide high-quality technical delivery, not to help teams uncover user needs or validate ideas. ATDD supports building the right software, but as an implementation alignment methodology, not a discovery process.\n\n5. **Audience Alignment (6.2):** The audience overlaps with that of Product Discovery—cross-functional, including product owners and business stakeholders—but leans strongly toward technical practitioners (devs, testers) over product strategists or UX researchers.\n\n6. **Signal-to-Noise Ratio (5.9):** The content is focused, but almost all of it is directly about ATDD practice and software quality—only a small portion connects to discovery themes such as business value or stakeholder alignment.\n\nNo penalties are assessed: ATDD is current, the tone is neutral-positive, and there are no setbacks according to the provided penalty guidelines.\n\nOverall, ATDD is related to quality assurance and feature alignment, which can support effective product delivery, but the content here does not focus on the explicit methodologies, practices, or mindset involved in Product Discovery. Its fit is weak and best described as tertiary—remotely relevant but neither central nor aligned to the core purpose of the category.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 12.75,
    "ai_mentions": 0.6,
    "ai_alignment": 1.25,
    "ai_depth": 1.8,
    "ai_intent": 1.05,
    "ai_audience": 4.25,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "Direct Mentions (0.60): The text makes no explicit mention of Deployment Strategies or their keywords (e.g., blue-green, canary release, deployment, rollout). Only the concept of 'delivery' and 'value delivery' is tangentially related. \n\nConceptual Alignment (1.25): The core focus is on ATDD, which concerns aligning development with business needs through clear acceptance criteria and early testing. This falls under development practices, not deployment strategies. No deployment methodologies are discussed or implied.\n\nDepth of Discussion (1.80): The discussion is substantive—detailing benefits, collaboration, and approach—but all depth is confined to ATDD, with no treatment of deployment processes, strategies, or risk management in software releases.\n\nIntent/Purpose Fit (1.05): The content is intended to support high-quality software development through ATDD, not deployment methodologies. There is no direct or indirect intent to inform about deployment or its strategies.\n\nAudience Alignment (4.25): The piece is aimed at practitioners (developers, testers, product owners), which partially overlaps with the deployment strategy audience, but the focus is not on deployment architects or release engineers. Hence, it's somewhat relevant but not closely aligned.\n\nSignal-to-Noise Ratio (2.70): The text is focused and coherent but entirely off-topic for Deployment Strategies, with all signal relating to a different phase of the software lifecycle (development/testing, not deployment).\n\nNo penalties were warranted, as there are no obsolete references or satirical/critical tones. The determined level is 'Tertiary', as the subject matter is at least within the software delivery space but is not directly or secondarily related to the deployment strategies category.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Azure Boards",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 13.37,
    "ai_mentions": 0.25,
    "ai_alignment": 1.3,
    "ai_depth": 1.4,
    "ai_intent": 2.9,
    "ai_audience": 3.1,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content exclusively discusses Acceptance Test Driven Development (ATDD) in an Agile context. It makes no direct reference to Azure Boards, nor does it mention Azure DevOps, Microsoft, or any other related tooling. \n\nDirect Mentions (0.25): Azure Boards is not mentioned at all—there is zero explicit reference. \n\nConceptual Alignment (1.30): While ATDD is relevant for Agile teams and could conceivably be applied with Azure Boards (since Boards supports Agile work item tracking and processes), this association is not made in the content. The main ideas relate to test practices, not boards or work item management. \n\nDepth of Discussion (1.40): The depth is focused purely on discussing ATDD—processes, benefits, and cultural shifts—without any detail on features, customization, or reporting relevant to Azure Boards. \n\nIntent/Purpose Fit (2.90): The purpose is educational about ATDD. It's supportive of Agile but not at all targeted to Azure Boards or tooling; thus, the fit is incidental rather than aligned. \n\nAudience Alignment (3.10): The content is meant for Agile practitioners and teams, which would overlap with Azure Boards’ intended audience, but the focus is methodological rather than tooling/practices. \n\nSignal-to-Noise (2.70): Content is highly focused and relevant to ATDD and Agile best practices, but nothing ties it concretely to Azure Boards or project management tooling. \n\nThere are no outdated references or negative tones, so no penalties are applied. The score is very low, at the low end of tertiary, strictly due to high-level, tangential overlap with the intended audience and Agile context but no substantive or explicit connection with Azure Boards.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Value Delivery",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 86.43,
    "ai_mentions": 6.6,
    "ai_alignment": 9.0,
    "ai_depth": 8.7,
    "ai_intent": 9.5,
    "ai_audience": 8.7,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content directly links Acceptance Test Driven Development (ATDD) with the concept of value delivery, particularly in Agile environments. \n\nDirect Mentions (6.6): While 'value delivery' is specifically mentioned once ('ATDD enhances the predictability and sustainability of value delivery'), most discussion is around related concepts. Terms like 'alignment with business needs,' 'delivering higher value to customers,' and 'development focused on delivering what matters' reinforce the theme but do not replace explicit usage. \n\nConceptual Alignment (9.0): The main ideas precisely align with the philosophy of Value Delivery as defined. ATDD is presented as a means to align development with business/customer value, reduce rework, foster collaboration, and ensure delivery of relevant features—all core to the category definition.\n\nDepth (8.7): The discussion goes beyond a superficial overview—explaining how ATDD changes team dynamics ('collaborative approach,' 'shared responsibility'), embeds quality early (shift-left), and connects actions to customer value. However, it does not explicitly discuss supporting practices such as CI/CD, value stream mapping, or specific metrics, leaving modest room for greater depth.\n\nIntent (9.5): The piece's intent is strongly aligned; its clear goal is to advocate for a practice that tightly links development to value delivery, matching the category's informative and supportive focus.\n\nAudience (8.7): The content addresses practitioners (developers, product owners, testers) in Agile teams—precisely the intended audience for Value Delivery discussions. There is a minor broadness suitable for managers, but it remains mostly technical.\n\nSignal-to-Noise (8.8): The text is focused, concise, and highly relevant. There is negligible filler or off-topic material.\n\nNo penalties are warranted: the content is current, positive, and directly supports the Value Delivery framework with no satire or contradictions. \n\nLevel: Primary, because Value Delivery is fundamental to the argument and not just a secondary consequence. \n\nThe computed confidence score (86.43) accurately reflects strong but not absolute alignment, proportional to the weight of conceptual and purposeful fit.",
    "level": "Primary"
  },
  "Sociotechnical Systems": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 68.5,
    "ai_mentions": 2.4,
    "ai_alignment": 7.9,
    "ai_depth": 7.5,
    "ai_intent": 7.4,
    "ai_audience": 7.0,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "While this content does not directly mention 'sociotechnical systems' by name (low 'mentions' score: 2.4), it consistently highlights key sociotechnical concepts. There is explicit reference to collaboration among roles (product owners, developers, testers), alignment with business needs, fostering a culture of collaboration, and integrating practices for overall team effectiveness—all of which align well with the interplay of social and technical concerns (alignment: 7.9). The discussion goes somewhat beyond surface-level by describing ATDD as not just a technical technique but as a culture- and process-shaping practice affecting team dynamics and business alignment (depth: 7.5). The intent is largely to highlight the organizational and behavioral impact of ATDD, fitting the 'sociotechnical systems' purpose more than just a pure tech focus (intent: 7.4). The audience seems to include both practitioners and organizational leaders interested in process improvement (audience: 7.0), and there is minimal off-topic or filler material (signal: 7.3). No penalties were applied, as the content is current and does not contradict sociotechnical framing. However, as the focus remains on a single methodology (ATDD) rather than an explicit exploration of sociotechnical systems theory or a broader set of sociotechnical practices, the categorization is best considered 'Secondary'. The final confidence score appropriately reflects that this piece is a strong example of sociotechnical content in practice, though it does not explicitly foreground the category or cover its full theoretical scope.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 32.907,
    "ai_mentions": 0.4,
    "ai_alignment": 3.7,
    "ai_depth": 5.2,
    "ai_intent": 2.5,
    "ai_audience": 8.2,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content covers Acceptance Test Driven Development (ATDD), which is related to agile methodologies but does not specifically address Agile Planning Tools as defined. \n\n- Mentions (0.4): There is no direct mention of 'Agile Planning Tools', nor any tool names (e.g., Jira, Trello, Asana), nor explicit reference to backlog management or sprint planning tools. The only indirect connection is the allusion to stakeholder collaboration and aligning development with business needs, which are adjacent concepts in agile but not direct references to planning tools. \n\n- Alignment (3.7): The broader concepts align with the agile approach but not specifically with Agile Planning Tools. While ATDD supports collaboration and shared understanding—values central to agile—the discussion remains at the practice/process level, not tools or tool-led methodologies for planning. \n\n- Depth (5.2): There is a substantive discussion on ATDD, including stakeholder roles and business alignment, but this is depth about ATDD, not about agile planning tools or technical features/properties of tools. \n\n- Intent (2.5): The primary intent is to inform about ATDD as a collaborative development practice, not to provide information, guidance, or analysis on Agile Planning Tools. While it indirectly supports agile outcomes, it is not tool-oriented. \n\n- Audience (8.2): The content is targeted at practitioners and teams operating in an agile context, overlapping somewhat with the planning tools audience, though slightly more generally targeted. \n\n- Signal (8.6): The content is focused, relevant, and substantial regarding ATDD. It stays on-topic without filler but is not substantially about planning tools. \n\nNo penalties are applied—there are no outdated references nor a contradictory tone. \n\nOverall, the content is at best tangential to the 'Agile Planning Tools' category. ATDD is a methodology supporting agile values, but it is not a planning tool or system as required by the classification definition. Its relevance is tertiary; it might be referenced alongside planning tools as a complementary practice, but it should not be classified primarily or secondarily under this category.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Company as a Product",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 38.131,
    "ai_mentions": 0.1,
    "ai_alignment": 3.4,
    "ai_depth": 3.6,
    "ai_intent": 4.3,
    "ai_audience": 8.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD), detailing its benefits for software development teams, but does not explicitly mention or discuss the 'Company as a Product' (CaaP) paradigm. \n- Direct Mentions (0.1): CaaP is not mentioned or referenced at all; the content is strictly about ATDD, a software engineering practice. \n- Conceptual Alignment (3.4): There is partial conceptual overlap concerning customer value, alignment with business needs, and fostering cross-functional collaboration. These are themes within CaaP, but they are addressed here only through the lens of ATDD for software delivery, not as an organisational strategy. \n- Depth of Discussion (3.6): The article provides some depth about ATDD, including processes, impacts, and benefits, but does not delve into organisational design, company-wide product thinking, or CaaP frameworks. The primary depth is on development team practices rather than organisation-wide principles. \n- Intent/Purpose Fit (4.3): The primary intent is to educate practitioners about ATDD to improve software development, which is adjacent to but not centered on CaaP. There is some relevance where quality, customer value, and cross-functional collaboration are discussed. \n- Audience Alignment (8.0): The audience appears to be practitioners (software developers, testers, product owners), not executives or strategists focused on company-wide organisational design, but there is an indirect fit for those seeking modern, customer-centric delivery models. \n- Signal-to-Noise Ratio (8.7): The content is highly focused, clearly written, and contains no off-topic or filler material, but the focus is narrow (on ATDD). \nNO penalties: The content is current, accurate, neutral, and does not contradict the CaaP framing; it is simply not directly about CaaP. \nOverall, the content is tangentially related through themes of collaboration and customer value, but it does not substantially or explicitly fit the 'Company as a Product' category. Assigning a 'Tertiary' level of fit reflects the peripheral connection.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Personal",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 16.493,
    "ai_mentions": 1.4,
    "ai_alignment": 2.6,
    "ai_depth": 2.5,
    "ai_intent": 2.1,
    "ai_audience": 4.1,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content is a general, informative overview of Acceptance Test Driven Development (ATDD). It describes the practice, its benefits, and its impact at a high level, but does not share any personal anecdotes, individual reflections, or subjective experiences. There are zero direct mentions of the 'Personal' category or explicit discussion of personal insights. The alignment with the 'Personal' category is weak, as the main ideas revolve around process improvement and team collaboration from a neutral, instructional point of view rather than a personal lens. The depth of the discussion is reasonable for a technical/practice overview but lacks any exploration of personal viewpoints or stories. The intent is clearly informational, targeted at practitioners interested in ATDD's value, not to share personal experiences or insights. The audience alignment is somewhat higher (4.1) because professionals working in Agile environments overlap with the intended audience for 'Personal' insights, but the focus is technical/process guidance. The signal-to-noise ratio is moderate, as the content remains on-topic but not inherently personal or subjective. No penalties are applied, as the content is current and does not undermine the 'Personal' framing. Overall, while related themes (collaboration, culture, teamwork) are present, the lack of personal context places this content at Tertiary level within the 'Personal' category, with very low confidence.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 4.447,
    "ai_mentions": 0.8,
    "ai_alignment": 0.9,
    "ai_depth": 1.0,
    "ai_intent": 0.6,
    "ai_audience": 0.7,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content is focused exclusively on Acceptance Test Driven Development (ATDD), outlining its practices, benefits, and rationale, but does not mention or allude to source control systems, version control concepts, or collaborative code management practices in any form. \n\n1. Mentions (0.8): There is no direct reference to modern source control, version control systems, branching, or related practices; any association would require significant inference.\n2. Alignment (0.9): ATDD is a software development methodology. Though sometimes used alongside source control, the material’s primary concepts are only tangentially related to version control methodologies, lacking direct conceptual overlap.\n3. Depth (1.0): The discussion is thorough and detailed about ATDD principles but offers no exploration or depth regarding source control topics.\n4. Intent (0.6): The purpose is to inform about ATDD and its benefits for software quality, not version control practices.\n5. Audience (0.7): The intended audience seems to be software practitioners, which partially overlaps with the source control category’s target, but the focus is not on those interested in version control per se.\n6. Signal (0.9): All content is relevant to ATDD with no extraneous information, but none is about source control; thus, the 'signal' for this category is low.\n\nOverall, the content does not fit under the 'Modern Source Control' category except in the broadest sense of being related to development process quality. No penalty deductions are made since the content is current and does not contradict the source control framing, but relevance is minimal. The confidence score reflects a very tenuous, tertiary association.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 93.76,
    "ai_mentions": 9.6,
    "ai_alignment": 9.8,
    "ai_depth": 9.3,
    "ai_intent": 9.5,
    "ai_audience": 9.1,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 94.0,
    "reasoning": "The content explicitly and repeatedly references ATDD both in the title and throughout, scoring 9.6 for direct mentions. Conceptually, it perfectly aligns with the definition, addressing principles, collaborative aspects, and the importance of acceptance criteria, hence a 9.8 for alignment. Depth is strong, though not exhaustive on technical techniques or toolsets, so it's assessed at 9.3. Intent is clearly to inform and advocate for ATDD, directly targeting practitioners and stakeholders (9.5). Audience alignment is well-matched for technical/development teams and stakeholders (9.1). The content is highly focused, with very minimal tangent, thus signal-to-noise is 9.2. There are no outdated references or negative tones warranting penalty. The level is Primary, as this is a core, unequivocal discussion of ATDD. This justifies the high overall confidence score.",
    "level": "Primary"
  },
  "Working Software": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Working Software",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 59.82,
    "ai_mentions": 2.7,
    "ai_alignment": 7.1,
    "ai_depth": 6.9,
    "ai_intent": 3.6,
    "ai_audience": 6.0,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), describing its collaborative method and benefits for delivering higher-quality software that aligns with business needs. \n\nScoring:\n- Mentions (2.7): The phrase 'working software' is not directly mentioned, nor are direct references to Scrum or Agile increments as deliverable artifacts. The relationship is more implied through terms like 'software', 'value delivery', 'implementation', and 'business needs', rather than explicit labeling.\n- Alignment (7.1): The content aligns conceptually with the 'Working Software' category, discussing practices (ATDD) that help ensure delivered software meets requirements and business objectives. However, it frames ATDD primarily as a quality/process enhancement, not focusing directly on 'working software' as an output.\n- Depth (6.9): There is meaningful exploration of ATDD's process, benefits, and impact on delivery and quality. However, discussion does not deeply explore the artifact nature, lifecycle, or characteristics of working software as defined in Agile frameworks; instead, it concentrates on the development phase.\n- Intent (3.6): The main intent is to promote ATDD as a practice to ensure quality and alignment. While it suggests working software as an outcome, promoting ATDD is the core purpose – not discussion of working software itself. This makes the fit tangential.\n- Audience (6.0): The piece targets practitioners and stakeholders in software development, including both technical and business audiences, which aligns broadly with the 'Working Software' category but isn’t focused specifically on audiences seeking guidance on working software as a core artifact.\n- Signal (8.3): The content remains tightly focused on ATDD, process, and quality with little irrelevant material, resulting in a strong, on-topic signal.\n\nNo penalties were applied: The content is current, advocates industry best practices, and maintains a constructive, relevant tone.\n\nAssessment: The content is classified as 'Secondary' for the category. It substantially discusses the conditions and practices that help teams deliver working software but stops short of directly exploring working software as a tangible, primary artifact in Agile frameworks. The confidence score reflects the strong association with process and outcomes, but limited direct discussion of the category's core definition.",
    "level": "Tertiary"
  },
  "Organisational Culture": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-06T20:43:25",
    "ai_confidence": 75.05,
    "ai_mentions": 2.2,
    "ai_alignment": 8.1,
    "ai_depth": 7.8,
    "ai_intent": 7.0,
    "ai_audience": 7.4,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content primarily focuses on Acceptance Test Driven Development (ATDD) as a software development practice. While its core is methodology, the content does make several direct and indirect references to cultural elements—such as collaboration ('shared understanding,' 'culture of collaboration and shared responsibility'), continuous improvement, and the impact on agility. However, the explicit direct mention and focus on 'organisational culture' is very limited (mentions=2.2), as the term itself doesn't appear and only a few sentences are dedicated to culture and its influence. Conceptual alignment is strong (8.1), since ATDD is positioned as reinforcing cultural values (e.g., collaboration, alignment with business, continuous improvement), which supports the adoption of Agile ways of working. The depth of discussion is solid (7.8), exploring how ATDD impacts culture and team dynamics but does not provide case studies or a broader systematic view as would a primary culture-centric piece. The intent is generally aligned (7.0), as the article is informative and supportive of the importance of culture but mainly uses cultural points as supporting arguments rather than the focus. Audience alignment (7.4) is strong; since ATDD concerns both technical and stakeholder roles, it suits both practitioners and those interested in transformation. The signal-to-noise ratio is high (8.3), with nearly all content relevant either to methodology or its cultural side-effects; very little, if any, is off-topic. No penalties were applied as the content is current, supports the category's framing, and is not critical of culture. Overall, the piece fits as a secondary resource for the Organisational Culture category: it is not culture-centric but makes meaningful and clear connections between culture and the adoption of ATDD.",
    "level": "Secondary"
  },
  "Kanban": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Kanban",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 8.75,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 1.0,
    "ai_audience": 1.0,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content exclusively focuses on Acceptance Test Driven Development (ATDD), explaining its principles, stakeholder involvement, and its impact on quality and continuous improvement. However, there are no direct mentions of Kanban or its terminology (e.g., visualisation, WIP, flow, metrics, Kanban boards), and the organizational context aligns more with generic Agile or Lean practices rather than Kanban methodology as strictly defined. The conceptual alignment is minimal (score: 0.7), as ATDD's emphasis on clear criteria and collaboration is tangentially relevant to Kanban's pursuit of continuous improvement and value delivery, but not unique to Kanban. The depth of discussion concerning Kanban is virtually absent (score: 0.5). The intent serves quality and process improvement in broad Agile terms, not Kanban specifically (score: 1.0). The audience match (score: 1.0) and signal-to-noise (score: 0.9) are both high because the content is focused and written for Agile/Lean audiences—relevant to Kanban practitioners but not specific to their needs. There are no penalties applied as the material is current, unbiased, and not contradictory to Kanban philosophy. However, given the lack of substantive Kanban content, this is classified as 'Tertiary' level: Kanban is not a primary nor significant secondary focus.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Lead Time",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 18.65,
    "ai_mentions": 0.35,
    "ai_alignment": 2.1,
    "ai_depth": 2.25,
    "ai_intent": 2.45,
    "ai_audience": 6.05,
    "ai_signal": 8.65,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses squarely on Acceptance Test Driven Development (ATDD), outlining its collaborative nature, shift-left testing, quality, and value alignment—none of which directly reference Lead Time as defined. \n\n1. Direct Mentions (0.35): 'Lead Time' is neither mentioned nor alluded to; there is no explicit or even implicit reference.\n2. Conceptual Alignment (2.10): While ATDD may indirectly impact delivery efficiency, the content does not identify Lead Time or cycle/process duration as its core topic or outcome; its main themes are alignment, quality, and proactive testing, not metrics or observability.\n3. Depth of Discussion (2.25): All depth is devoted to ATDD; Lead Time is not discussed, explained, measured, or even referenced in passing. There's no exploration of measurement, dashboards, or comparative metrics.\n4. Intent / Purpose Fit (2.45): The primary intent is to inform about ATDD practices and benefits, not to inform, analyze, or optimize Lead Time or delivery speed.\n5. Audience Alignment (6.05): The article is tailored to practitioners interested in development process improvement, which could overlap slightly with those tracking metrics like Lead Time, hence a moderate score.\n6. Signal-to-Noise Ratio (8.65): The content is highly focused on its topic (ATDD), with virtually no tangents or filler; most content is on-topic for its stated subject, but off-topic re: Lead Time.\n\nNo penalties were applied, as the content is not outdated, incorrect, or satirical regarding Lead Time. Overall, the text only very loosely and implicitly relates to Lead Time: disciplined ATDD might eventually improve Lead Time, but the content provides no such linkage, measurement, or discussion. Therefore, the fit level is 'Tertiary' and confidence is rightly very low.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 44.414,
    "ai_mentions": 0.9,
    "ai_alignment": 4.8,
    "ai_depth": 4.9,
    "ai_intent": 5.1,
    "ai_audience": 5.4,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "Direct Mentions (0.9): The content does not mention 'Enterprise Agility' or related frameworks (e.g., SAFe, LeSS, scaling agile, etc.) directly. The only tangential link is a brief invocation of agility as an outcome of ATDD. Conceptual Alignment (4.8): The primary focus is ATDD—a team-level agile practice. The content briefly extends impact statements to organizations but doesn't explore enterprise-level agility concepts or structures, giving only limited conceptual overlap. Depth (4.9): The explanation of ATDD is relatively deep at the team practice level but only superficially connects to enterprise agility in one or two short statements ('organisations can enhance their agility'). There is no detailed exploration of scaling, leadership, or organizational transformation. Intent (5.1): The article aims to promote ATDD for quality and alignment, not expressly enterprise agility; the linkage to broader organizational agility is a secondary point, making the fit only moderate. Audience (5.4): The primary audience appears to be practitioners (developers, testers, maybe product owners). While there's an organizational mention, it's not targeted to executives or strategists engaged in enterprise-wide agility. Signal (6.2): Nearly all content is on ATDD, a relevant agile engineering practice, but not noise; however, most details aren't specific to enterprise-level agility, only incidentally so. Level: Tertiary. The resource is three degrees removed from the core definition; it's about a practice (ATDD) that could support enterprise agility if embedded in a wider context, but this linkage is marginal in the content. No penalties applied—the content is current, neutral in tone, and accurate.",
    "level": "Tertiary"
  },
  "Liberating Structures": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 7.35,
    "ai_mentions": 0.0,
    "ai_alignment": 0.7,
    "ai_depth": 0.8,
    "ai_intent": 0.5,
    "ai_audience": 2.1,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content discusses Acceptance Test Driven Development (ATDD), focusing on defining acceptance criteria, improving alignment with business needs, and fostering collaboration. However, there is no mention—direct or indirect—of Liberating Structures, their specific methods, or their use in facilitation, Scrum, or team interaction contexts. \n\n- Direct Mentions (0.0): No references to Liberating Structures or their techniques.\n- Conceptual Alignment (0.7): While both ATDD and Liberating Structures encourage collaboration and clarity, the overlap is superficial; ATDD is a development and testing practice, not a facilitation method or toolkit. No liberating structures concepts, practices, or terminology appear.\n- Depth of Discussion (0.8): The content goes in-depth into ATDD, not Liberating Structures. Structure and inclusion are discussed, but not through the lens of facilitation methods addressed by the classified category.\n- Intent/Purpose Fit (0.5): The intent is to explain ATDD, not Liberating Structures, making alignment with the classification purpose very weak.\n- Audience Alignment (2.1): ATDD targets development teams, product owners, testers—some overlap with LS audiences, but the focus is technical implementation rather than facilitation or team interaction methods. Thus, partial but weak alignment.\n- Signal-to-Noise (0.5): 100% of the content is dedicated to ATDD; none to Liberating Structures or its specific use cases.\n\nNo penalties applied as the content is recent, not critical or satirical. However, the overall confidence is extremely low. This content fits only at a tertiary level because there might be a very weak thematic link in terms of collaboration, but it is far outside the core scope of the Liberating Structures category.",
    "level": "Ignored"
  },
  "Increment": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Increment",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 40.667,
    "ai_mentions": 0.8,
    "ai_alignment": 4.8,
    "ai_depth": 5.1,
    "ai_intent": 5.7,
    "ai_audience": 7.2,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "Direct Mentions (0.8): The term 'Increment' is never explicitly used nor specifically referenced; the content is focused on ATDD, with only tangential relevance to Increment as an Agile/Scrum artifact. \n\nConceptual Alignment (4.8): While ATDD enhances value delivery and working software quality—which are adjacent to the 'Increment' concept—the content does not explicitly tie these practices to the delivery of increments at the end of iterations or Scrum’s use of Increment. Any alignment is indirect via the improvement of deliverables.\n\nDepth of Discussion (5.1): The discussion offers thoughtful detail about ATDD, touching on stakeholder alignment, quality, and value delivery. However, it does not explore increments, iteration outcomes, or Agile artifact relationships; the Increment connection is superficial.\n\nIntent/Purpose Fit (5.7): The intent is to inform about ATDD’s role in improving development process quality and value delivery, not to guide or discuss how to create or judge an Increment. Thus, the fit is partial at best.\n\nAudience Alignment (7.2): The content is clearly targeted at Agile/Scrum practitioners—developers, testers, product owners—but not specifically those looking for Increment-specific content, hence a modestly high score, but not maximum.\n\nSignal-to-Noise Ratio (7.7): The content is focused and free of filler; however, its relevance to the Increment category is not primary, so while concise, the 'signal' for Increment is only moderate.\n\nNo penalties were applied—content is current, aligns with mainstream practice, and is not contradictory or satirical toward the category. Overall, this resource is only peripherally related to Increment—it would be a tertiary fit because ATDD supports the conditions for a high-quality increment, but the primary purpose is elsewhere.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 28.42,
    "ai_mentions": 0.7,
    "ai_alignment": 2.7,
    "ai_depth": 2.3,
    "ai_intent": 1.0,
    "ai_audience": 6.2,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), emphasizing clear, testable acceptance criteria to align software with business needs. While this relates to ensuring products meet requirements, it does not discuss customer feedback collection, analysis, or integration into the product development cycle—the key aspects of 'Customer Feedback Loops.'\n\n- Direct Mentions (0.7): The content never explicitly references customer feedback loops or their mechanisms. The closest mention is 'business needs' and 'what matters to...users,' which are only indirectly related.\n- Conceptual Alignment (2.7): ATDD aims for alignment with requirements, sometimes informed by stakeholders, but does not establish processes to collect or integrate ongoing customer/user feedback. It stays at the level of initial definition, not iterative feedback.\n- Depth of Discussion (2.3): There is no substantive discussion of feedback mechanisms, loops, or post-release responsive adaptation. The discussion is deep regarding ATDD, but not the target category.\n- Intent (1.0): The content's intent is to promote ATDD as a collaborative development methodology, not to inform about or advocate for feedback integration practices.\n- Audience (6.2): The audience (software teams, developers, business stakeholders) partially overlaps with practitioners interested in feedback loops, boosting the score somewhat.\n- Signal-to-Noise (6.3): The content remains focused and relevant for its topic (ATDD), but is not noise or filler; however, very little of it is relevant to customer feedback loops.\n\nNo penalties are required as the content is up-to-date, neutral in tone, and free from satire or criticism.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 60.486,
    "ai_mentions": 1.7,
    "ai_alignment": 7.3,
    "ai_depth": 6.8,
    "ai_intent": 5.2,
    "ai_audience": 7.0,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content on 'Acceptance Test Driven Development' (ATDD) primarily discusses a collaborative software engineering practice aimed at embedding quality and fostering shared understanding in development teams. \n\n- On **Direct Mentions**, the content never directly references 'Strategic Goals,' nor terms like 'long-term objectives,' 'business agility,' or similar language, resulting in a low score (1.7). \n- For **Conceptual Alignment**, ATDD is presented as a way to align development efforts with 'business needs' and supports continuous improvement—these are tangentially related to strategic goals. However, the focus is practical rather than conceptual alignment with strategic goal-setting frameworks, so it's above neutral but not high (7.3).\n- In terms of **Depth of Discussion**, there's substantive exploration of ATDD's benefits and culture, including long-term impact and fostering agility, yielding a moderate depth score (6.8), but the discussion of strategic goals themselves is only implicit.\n- **Intent / Purpose Fit**: The main intent is to advocate for a quality-focused engineering practice, not to directly discuss how to define or measure strategic goals. The relationship to strategic goals is emergent (i.e., ATDD supports agility, which indirectly supports strategy), thus the score is on the lower side (5.2).\n- **Audience Alignment**: The content is aimed at practitioners (developers, testers, product owners), and possibly indirectly at organisations seeking agility, but not at strategy-makers or executives per se. Thus, an above-average score (7.0).\n- The **Signal-to-Noise Ratio** is fairly strong as the piece is focused on ATDD, but most of the content centers around operational techniques with only indirect references to strategy. (6.6)\n- **Penalty Adjustments**: No references were outdated or critical of strategic goals, nor was the tone inappropriate—thus, no penalties were applied.\n\nOverall, the content fits best as tertiary relevant to 'Strategic Goals'. The indirect references to business needs, agility, and continuous improvement slightly justify its inclusion as related, but it is not a primary or secondary fit.",
    "level": "Tertiary"
  },
  "Market Share": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Market Share",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 8.3,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.5,
    "ai_intent": 0.3,
    "ai_audience": 4.3,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content exclusively focuses on the methodology of Acceptance Test Driven Development (ATDD) to drive software quality and process alignment with business needs. \n\n(1) Direct Mentions (0.2): 'Market share' is not mentioned anywhere in the title, summary, or body. There are no explicit or implicit references. \n\n(2) Conceptual Alignment (0.5): The core ideas are about improving software quality, reducing miscommunication, and fostering collaboration—not about market presence, competition, or strategies for increasing market share. While higher quality can indirectly support business growth, this is far removed from active market share strategy or analysis. \n\n(3) Depth of Discussion (0.5): The discussion is deep about ATDD practices but entirely lacks detail or depth concerning market share concepts. No methodologies or metrics tied to market share are discussed. \n\n(4) Intent/Purpose Fit (0.3): The primary intent is to inform practitioners about ATDD, not to explore methods for competitive advantage, market analysis, or any explicit external positioning. \n\n(5) Audience Alignment (4.3): The audience is mainly technical practitioners (developers, testers, managers) who might benefit from ATDD, not business strategists or executives tasked with growing market share. Some overlap exists if a technical audience has business interests, so this score is higher than others, but not high enough to be a fit. \n\n(6) Signal-to-Noise Ratio (6.7): The content is highly focused on its own topic (ATDD) with little to no distracting filler. However, its high focus is irrelevant to market share, so the high signal is not beneficial in this categorization context. \n\nNo penalties are applied: the content is current, non-satirical, and does not contradict the category’s frame, but has almost no relevance to 'Market Share.' As such, this content is classified as tertiary level regarding Market Share, with almost no meaningful connection.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "System Configuration",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 10.44,
    "ai_mentions": 0.1,
    "ai_alignment": 1.7,
    "ai_depth": 1.8,
    "ai_intent": 1.2,
    "ai_audience": 2.0,
    "ai_signal": 1.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD), a software development methodology centered on collaborative acceptance criteria and test-driven delivery. \n\n1. Direct Mentions (0.1): The term 'system configuration' or related concepts are never mentioned. The language is strictly about development methodologies and quality practices.\n\n2. Conceptual Alignment (1.7): ATDD pertains to software quality and development process alignment, not to system configuration—i.e., not to setup, integration, configuration management tools, automation, or maintenance of systems.\n\n3. Depth of Discussion (1.8): The article explores ATDD in moderate depth, but this is depth about an orthogonal area (testing and requirement alignment), not system configuration practices or technology.\n\n4. Intent/Purpose Fit (1.2): The purpose of this content is to advocate for and explain ATDD, not to offer guidance or information on system configuration. There is no direct or indirect tie-in to configuration, automation, or system setup.\n\n5. Audience Alignment (2.0): The target audience for ATDD (developers, testers, product owners) does overlap with those who may care about system configuration, but the content would not speak to practitioners seeking guidance on configuring systems or infrastructure.\n\n6. Signal-to-Noise Ratio (1.6): All of the content is on-topic as far as ATDD goes, but nearly all is irrelevant for system configuration; thus, the 'signal' regarding system configuration is weak.\n\nNo penalties were applied as the content is not outdated, nor does it contradict the system configuration category overtly (it just doesn't relate to it). Overall, the confidence that this content fits under 'System Configuration' is very low—the category is purely tertiary, if at all.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 22.933,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.4,
    "ai_intent": 3.8,
    "ai_audience": 6.1,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses exclusively on Acceptance Test Driven Development (ATDD), describing its collaborative nature, emphasis on clear acceptance criteria, early testing, and alignment with business value. However, there are almost no direct or explicit mentions of Hypothesis Driven Development (HDD) or its typical concepts (e.g., hypothesis formulation, experiments, validated learning). The closest point of connection is a general focus on delivering business value and learning, but this is filtered through the ATDD lens, not HDD. Conceptual alignment is weak since ATDD is about requirements validation and communication, not empirical hypothesis testing or data-driven experiments. The depth is low for Hypothesis Driven Development—it deeply discusses ATDD, but not the key HDD topics like hypothesis testing, KPIs, or experimentation cycles. The intent is informative for ATDD, not HDD. The audience aligns moderately well (development teams, product owners), as both topics address similar roles, but the content is not targeting hypothesis-driven practitioners specifically. The signal-to-noise ratio remains fairly high since the content is focused and relevant—albeit to ATDD, not HDD. No penalties were applied, as there are no outdated practices or tone issues. Overall, this content is only tangential to 'Hypothesis Driven Development', earning a low tertiary confidence.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Continuous Delivery",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 38.9,
    "ai_mentions": 0.2,
    "ai_alignment": 3.7,
    "ai_depth": 2.4,
    "ai_intent": 3.1,
    "ai_audience": 6.0,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "This content is primarily focused on Acceptance Test Driven Development (ATDD), which is related to software quality practices but not explicitly about Continuous Delivery (CD). \n\n- **Direct Mentions (0.2):** The term 'Continuous Delivery' is not mentioned at all. Only tangentially related concepts (like 'continuous improvement') show up. \n- **Conceptual Alignment (3.7):** ATDD can support CD by improving requirements clarity and enabling quicker feedback, but the article frames ATDD as a foundational practice in software quality and collaboration, not as a technique specifically for enabling CD pipelines or deployments. \n- **Depth of Discussion (2.4):** The article delves into ATDD's benefits for collaboration, alignment, and quality, but does not explore how ATDD integrates with automation, pipelines, or other CD practices. CD-related concepts are not unpacked. \n- **Intent / Purpose Fit (3.1):** The aim is to persuade readers to use ATDD for quality and business alignment; it is not focused on continuous, reliable release cycles or deployment automation—the crux of CD. \n- **Audience Alignment (6.0):** The target audience (developers, testers, business stakeholders) overlaps with the CD community, but the context is ATDD, not CD practices specifically; this lowers the score only somewhat. \n- **Signal-to-Noise Ratio (6.9):** The content is focused and relevant to ATDD and software quality, but only a minor portion relates indirectly to CD. There is no off-topic or filler, but little direct relevance to CD. \n- **No penalties were applied**, as the content is up-to-date and not negative or satirical. \n- **Level (Tertiary):** ATDD is a related, enabling practice and can fit within the broader ecosystem supporting CD, but the discussion remains at the periphery—CD is not a primary or even secondary theme.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Competence",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 69.93,
    "ai_mentions": 2.7,
    "ai_alignment": 7.6,
    "ai_depth": 7.8,
    "ai_intent": 7.1,
    "ai_audience": 7.4,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 70.0,
    "reasoning": "The content centers on Acceptance Test Driven Development (ATDD) and its benefits for software development teams. It places strongest emphasis on process alignment, quality assurance, collaboration, and continuous improvement. \n\n- Direct Mentions (2.7): 'Competence' is not directly mentioned; there are no explicit references to skill, capability, or professionalism—as those words appear in the classification. However, the content indirectly references elements of competence (e.g., 'collaborative approach,' 'systematic way of working,' 'continuous improvement'), leading to a modest score.\n\n- Conceptual Alignment (7.6): ATDD is discussed as a practice that fosters shared understanding, aligns efforts with business needs, and embeds quality, which fit the theme of competence, especially as defined in agile/lean contexts. However, the primary focus is on the method and its process benefits, not direct advocacy or exploration of competence itself.\n\n- Depth (7.8): The explanation moves beyond the surface—discussing collaboration, responsibility, continuous improvement, and value delivery. However, it refrains from deep examination of skill-building, mastery, or explicit competence measurement.\n\n- Intent/Purpose Fit (7.1): The purpose is to inform about ATDD's benefits to quality and collaboration, tangentially serving the development of competence (e.g., continuous improvement and shared understanding), but not making it the declared aim.\n\n- Audience Alignment (7.4): The content targets practitioners in software development or Agile/Scrum environments—well-aligned with the competence audience, though also suitable for business stakeholders.\n\n- Signal-to-Noise (7.0): Nearly every sentence is relevant, with minimal filler or digression. Focus is high, but the linkage to 'competence' is implicit, not explicit.\n\nNo penalties applied: The material is current, uncritical, and presents no contradictions to the competence framing.\n\nLevel is 'Secondary' as competence is a recurrent subtext (associated with collaborative skill, quality focus, and systematic improvement), but not a primary or deeply interrogated theme.",
    "level": "Secondary"
  },
  "Product Delivery": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Product Delivery",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 82.33,
    "ai_mentions": 2.6,
    "ai_alignment": 8.4,
    "ai_depth": 8.1,
    "ai_intent": 8.2,
    "ai_audience": 8.6,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly addresses a methodology—Acceptance Test Driven Development (ATDD)—that fits squarely within the product delivery space. While the exact term 'product delivery' is not directly mentioned (hence a lower Mentions score of 2.6), there are several key conceptual alignments: the text discusses stakeholder collaboration, clear acceptance criteria, business alignment, reducing risk, and building quality in from the outset. These all map closely to core product delivery principles. The content aligns well (8.4) and covers ATDD's practical impact on predictability, sustainability, and customer value, directly supporting product delivery goals. The depth (8.1) is strong, articulating benefits, processes, and cultural shifts—much more than a superficial mention, though it could expand with real-world implementation details. The intent (8.2) is clearly supportive and informative, aimed at improving delivery practices. Audience fit (8.6) is high, as the writing targets practitioners—developers, testers, product owners—who are central to product delivery discussions. Signal-to-noise (8.7) is strong because the content stays laser-focused on ATDD’s practical application to delivering valuable software, with no filler or tangents. No penalties were applied: the information is current and constructive, with no tone or accuracy issues. In summary, the content strongly aligns with the core practices and audience of product delivery, with only the explicitness of category mention holding back a full score.",
    "level": "Primary"
  },
  "Trend Analysis": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 55.087,
    "ai_mentions": 0.5,
    "ai_alignment": 5.5,
    "ai_depth": 6.2,
    "ai_intent": 6.0,
    "ai_audience": 7.1,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content focuses on Acceptance Test Driven Development (ATDD), describing its principles, benefits, and impact on software development quality and team practices. \n\n1. Mentions (0.5): The category of 'Trend Analysis' is not mentioned explicitly anywhere in the document. There is no direct reference to trend identification, analysis, or historical or projected shifts within Agile, DevOps, or business agility.\n\n2. Alignment (5.5): Some conceptual overlap exists, as the content alludes to 'a shift-left mindset' and describes how ATDD enhances agility and adaptability—traits linked to the outcomes of trend analysis. However, the discussion is technique-focused rather than analytical of macro-level trends. \n\n3. Depth (6.2): The article gives a moderate exploration of ATDD as a methodology, its benefits, and cultural impact, but does not go into a granular analysis of trends, data, metrics, or comparative shifts across frameworks. Its depth is about practice promotion, not trend analysis.\n\n4. Intent (6.0): The primary intent is to inform about ATDD and its value for aligning teams and business goals, rather than to analyze patterns or inform strategic decision-making based on trends. There is some secondary relevance as it discusses adaptation and continuous improvement (characteristics often monitored in trend analysis), but that's not the main purpose.\n\n5. Audience (7.1): The content targets practitioners, including product owners, developers, and QA — similar to audiences for trend analysis in Agile/DevOps contexts, but with a tilt towards those interested in technique implementation rather than strategic trend identification.\n\n6. Signal (8.0): The content is tightly focused on ATDD, with little to no irrelevant material. It remains coherent and on-topic, maximizing signal over noise.\n\nNo penalty points are applied, as there is no outdated information, obsolete practice, or contradictory tone. \n\nOverall, the article only marginally relates to Trend Analysis — ATDD could form part of a trend discussion if it were specifically analyzed as an emerging or shifting practice, but the presented content does not engage in such analysis, nor does it use data or case studies to explore ATDD as a trend. Its classification under Trend Analysis is very weak (tertiary level), with most scores reflecting its distance from the core definition.",
    "level": "Tertiary"
  },
  "Organisational Change": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Organisational Change",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 49.429,
    "ai_mentions": 1.8,
    "ai_alignment": 5.6,
    "ai_depth": 5.4,
    "ai_intent": 4.9,
    "ai_audience": 6.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content is squarely focused on 'Acceptance Test Driven Development (ATDD)' as a software development practice. \n\n1. Direct Mentions (1.8/10): The content never explicitly references 'organisational change', change management frameworks, or related terms. Its closest alignment is indirectly referencing agility or continuous improvement, but no direct mentions of the category or its canonical phrases.  \n\n2. Conceptual Alignment (5.6/10): There are some touchpoints: the content briefly discusses how consistent application of ATDD could 'enhance agility', 'adapt to changing requirements', and 'foster a culture of collaboration'. However, these aspects are tied to the development process, not to broader organisational transformation or structured change management initiatives. \n\n3. Depth of Discussion (5.4/10): The discussion of agility, collaboration, and adaptation is secondary to the primary explanation of ATDD as a technical and collaborative practice. There is some depth in describing its impact on teams and value delivery, but not enough on organisational-level transformation, frameworks, or leadership. \n\n4. Intent / Purpose Fit (4.9/10): The main intent is to inform about ATDD as a best practice for software teams, rather than to guide or discuss organisational change strategies or initiatives. Any links to organisational change are implied or secondary, not primary.\n\n5. Audience Alignment (6.4/10): The target audience seems to be technical practitioners—developers, testers, teams—though there are references to product owners and 'organisations'. It's not written for organisational leaders, strategists, or change managers, but mentions of business needs and long-term value slightly extend its relevance. \n\n6. Signal-to-Noise Ratio (7.1/10): The content is focused and consistent but entirely about ATDD. There’s minimal off-topic material, but as most of it is not 'noise' but just not highly relevant to organisational change, this is scored fairly high.\n\nOverall, the content is best described as 'tertiary' to the Organisational Change category—it contains tangential references to agility and adaptation but is primarily about a technical process. There were no penalties applied for outdatedness or negative tone. The confidence score reflects the predominance of technically-focused material with only hints at broader organisational change themes.",
    "level": "Tertiary"
  },
  "Cross Functional Teams": {
    "resourceId": "Acceptance Test Driven Development",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-06T20:43:26",
    "ai_confidence": 68.54,
    "ai_mentions": 3.948,
    "ai_alignment": 7.336,
    "ai_depth": 6.962,
    "ai_intent": 7.101,
    "ai_audience": 7.788,
    "ai_signal": 8.021,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content describes Acceptance Test Driven Development (ATDD) and highlights its collaborative nature, referencing the involvement of product owners, developers, and testers. This collaboration hints at cross-functional teamwork but does not directly mention or focus on cross-functional teams as a structural or organizational concept. \n\n- Mentions (3.948): The term 'cross-functional teams' is never directly used. The content does include references to collaboration among different roles (product owners, developers, testers), which is suggestive but indirect. Thus, only partial credit is supplied here.\n- Alignment (7.336): The themes of collaboration, shared responsibility, and alignment with business needs conceptually align with the goals of cross-functional teams, but the main focus is on process (ATDD), not team structure.\n- Depth (6.962): The discussion of collaboration is moderately deep, focusing more on collective understanding and responsibility within ATDD. However, there is a lack of deeper analysis regarding forming, managing, or optimizing cross-functional teams themselves.\n- Intent (7.101): The purpose aligns moderately well, intending to share best practices that inherently foster cross-functional collaboration, though it's more about quality and requirements alignment than team structure.\n- Audience (7.788): The content aims at a practical audience (developers, product owners, testers), fitting Agile practitioners interested in process and collaboration, though not exclusively those studying cross-functional teams.\n- Signal (8.021): The content is focused and free from off-topic discussion. All parts relate to collaborative development and deliver value, albeit from an ATDD angle.\n\nLevel: Secondary — cross-functional collaboration is a subordinate theme supporting ATDD, not the main subject. No penalties were applied, as the content is current, supportive, and not critical or contradictory toward cross-functional teams. The confidence score is proportionate given that the primary content is about a process (ATDD), with cross-functional implications discussed but not foregrounded.",
    "level": "Secondary"
  }
}