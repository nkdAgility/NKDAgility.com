- id: DvW-xwxufa0
  title: 'The Limits of Self-Taught Learning: Why External Perspectives Matter'
  description: Discover the pitfalls of self-taught learning and the power of diverse insights in consulting. Embrace continuous learning for better solutions!
  captions: |-
    When we're engaging with customers, especially new customers, one of the things we try and be 100% clear on is that we're not going to solve your problem. All of the messes, all of the issues are yours to fix. But what we can do is help you see the problems and keep a little bit of focus on those problems so that you can solve them. Right? We're bringing the torches so that we can see what's going on, shine a light in those dirty corners, under the rug where we've been sweeping the dust, and point at that and say, "Look, we need to resolve this. This is causing you problems. This is slowing you down. This is costing you money." Right? 

    We help those organisations get better by helping them figure out what their options are. Quite often, I think it's really interesting how many organisations and engineers—I’m going to include engineers in this because I think it's true there too—we tend to not get a lot of training. Right? I don't see organisations sending their engineers on coding courses. I don't see them sending them on product courses. I don't see them sending them on API courses. I don't see them sending them on security courses. They don't do that. So almost every one of your engineers is self-taught. 

    Right? And when you're self-taught, you learn something within the bounds of what you looked at, and we stop looking when we find an answer. Right? It's like when you're looking for your keys in your house. Right? If you've lost your keys and you're looking for them, you don't find your keys and then keep looking. Right? You don't find them and go, "I think I'll look a little bit more in case I find more keys." No, I found them, so I'm going to stop looking. Right? So they're always in the last place you look, and that same is true for knowledge. When we find an answer, most of us stop looking and use that answer. But perhaps there are five better answers. Perhaps there are five progressively better answers that we could be finding. 

    And that's the value of bringing in sometimes somebody from the outside to look at what it is you're doing and how you can be more effective at it. It's that experience, knowledge, and experience. I've been doing DevOps—probably the best way to describe it—doing DevOps before it was called DevOps. It was called application lifecycle management before then, and I've been looking at that for 20 years. I've been a software engineer for 20 years. I've been a scrum coach and consultant for 10 years, seeing what all of these organisations out there are doing and seeing the things that work for them and the things that don't. Because not every organisation does everything well. They might do some stuff well and other stuff not so much. Right? 

    That means that we can bring a whole bunch of ideas. Have you thought about this? Have you looked over here? Here's a tool that you could use to get you started in the space. Oh, if that tool doesn't work for you, here's the type of tool you're looking for. Right? And that provokes people to go look for alternatives, look for other ways to do things, look for solutions, and perhaps they'll find their own ones that are even better than the ones that we came up with. But that process is something that you and your people have to do. 

    So when you're engaging, as for DevOps, we're going to help you understand where you are right now, help work with you to understand what direction you want to go, and help you keep moving in that direction. But it's you and your people that have to do the work because it's you and your people that have to learn the things—institutionally, you know, that institutional knowledge that an organisation gets. When you bring in new people, although they come in with their own ideas, they learn that institutional knowledge. You want that institutional knowledge to be moving in that direction. Right? The weight of progress is in the direction that you want to go, which is not building up a whole bunch of refinement and work you've not done. It's doing those things and doing it properly and not actually doing things well. 

    And we can help you keep progress in those directions.
- id: DWL0PLkFazs
  title: Why did Healthgrades choose Martin Hinshelwood
  description: Discover why Healthgrades selected Martin Hinshelwood as their trainer. Explore the importance of finding the perfect fit for your organisation!
  captions: ""
- id: DWOh_hRJ1uo
  title: What is your best advice for becoming a Scrum Master outside software engineering?
  description: "Unlock the secrets to becoming a Scrum Master beyond software! Join Martin as he shares essential tips for leading teams in any field. \U0001F30D\U0001F680 #Scrum #Agile"
  captions: ""
- id: E2aYkadJJok
  title: Kanban Boards for Campaign Success - The Ultimate Guide to Visualizing Your Workflow
  description: Unlock campaign success with Kanban! Learn to visualise your workflow, optimise processes, and boost collaboration in this ultimate guide.
  captions: |-
    Really important part of visualising your work when you're doing Kanban is having some kind of Kanban board. Okay, you want to take the way your system currently operates. You want to think about the things that move across your board, things that will move through your system, and then decide what are the columns that need to move through.

    Now, the absolutely most optimal way to do that would be single piece flow: one item at a time to do, in progress, and done. But the reality is we don't all live in that perfect world; in fact, none of us do. So you're going to have to look at how your work flows through your system. What are the columns that you currently have on your board with the stages of the work? And come up with a board that represents that.
- id: E2OBcBqZGoA
  title: 05 October 2023 Agile Leadership Webinar
  description: 'Join Martin Hinshelwood and Dr Joanna Plaskonka for insights on Agile Leadership in the 21st Century. Watch the presentation and Q&A now! #AgileLeadership #Shorts'
  captions: ""
- id: e7L0NFYUFSw
  title: Does scrum really allow you to do twice the work in half the time?
  description: 'Explore if Scrum truly enables you to achieve twice the work in half the time, as Martin Hinshelwood unpacks its real value proposition. #Scrum #Agile'
  captions: ""
- id: EfogGslFkBQ
  title: 'Avoiding Agile Banditry: Why Story Points and Velocity Are Misleading Metrics'
  description: "Discover how to escape the story point trap in Agile! Join Martin as he reveals better metrics for success and transforms your team's value delivery. \U0001F680\U0001F31F"
  captions: |-
    If you are working on an agile team and you're focused on story points and velocity, then you're probably an agile bandit. Story points and velocity have a really negative impact on our ability to deliver. For many teams, I know there are going to be lots of people that, and you're welcome to comment, that story points and velocity work great for you. I'm sure there are teams out there; I have yet to meet a team that uses story points or velocity that got a positive benefit from it. That's from observing many, many, many teams. 

    It creates lots of little negative niggles, like wanting to put things in the Sprint to get the points right. "Oh, we're going to put a bug in the Sprint; how many points is this worth?" so that we can get our points at the end of this Sprint. The point becomes the points. We don't want the point to be the points; we want the point to be the value that we deliver for our customers. The points are irrelevant. The points are just a tool to help us as developers on a team have a conversation about what we know and what we don't, and our understanding, and to gain more understanding. 

    That's the point of any estimation for complex cognitive work where you're building a brand new product that doesn't exist yet. You want to be focused on the flow of work through your system and throughput and cycle time. Those are the metrics you're looking for. Story points and velocity are terrible metrics for teams to look at. There are lots of teams, especially brand new teams who have never done anything before, that definitely get encouraged to move down the story point route, and I just think it's a bad idea. Ditch the story points from the start; focus on flow metrics, cycle time, throughput. Go there. 

    I did have a customer recently who made the biggest agile banditry mistake I have ever seen, and that was that story points were in the contract with the customer. They were mandated to do story point estimation upfront to provide that story point estimation to the customer, and the customer would measure the team based on the number of story points that they delivered. If you were out with a 15% standard deviation of the number of story points you normally deliver, then you were in trouble and potentially in breach of contract with penalties that come along with it. 

    I can't think of a better way for everybody to just make up whatever they needed in order to complete the contract. You're not going to get transparency there; you're not going to be able to see what's going on. Those story points are not going to be the story points that you want them to be. Even if you could possibly get there, which I don't think you can, ditch story points. Don't have them in contracts. Don't ever talk about story points outside of the team. 

    If you want to do planning poker and sit with a team and do planning poker, fantastic. It's a great tool to help us as a team collaborate and figure out what we don't know. But at the end of that event, at the end of that meeting, delete all the data. It is of no value whatsoever beyond our understanding of the need to break things down. That's what estimation is about. It's not about story points, and it's not about velocity. Product owners should not be using velocity to monitor teams; that way lies agile banditry. 

    So you should avoid being agile bandits. Instead of focusing on story points and velocity, subjective metrics, focus more on objective metrics like throughput and cycle time. Don't be agile bandits. If you're being ambushed by agile bandits in your organisation, then my team at Naked Agility can help you, or we can help you find a consultant or expert who can. You can set up a no-obligation consultation using the links below. Don't forget to like and subscribe if you enjoyed this video.
- id: eK8YscAACnE
  title: ' shorts 5 kinds of Agile bandits. 3rd kind'
  description: "Discover the 3rd kind of Agile bandit with Martin Hinshelwood! Uncover insights on story points and boost your team's agility. #Agile #Scrum #Shorts"
  captions: One of the most common forms of agile banditry is the use of story points and velocity. They're often used to beat the team around the head with them. They're used to ambush the team. They're used to ambush leadership as well. Story points and velocity are subjective. They are not useful out with the bounds of a conversation between team members. So please don't be an agile bandit. Don't use story points and velocity. Instead, look at cycle time and throughput and other objective measures.
- id: ekUL1oIMeAc
  title: Worst Contribution from a Product Owner that You Know Of
  description: 'Discover the worst product owner performance ever witnessed! Join Martin Hinshelwood as he shares valuable lessons from poor practices. #agile #scrum #shorts'
  captions: ""
- id: El__Y7CTcrY
  title: 'The Power of Immersive Learning in Scrum Training: Why Less Is More'
  description: 'Discover 5 reasons why Martin Hinshelwood loves immersive learning for students in Scrum. Join us for Part 1 of this insightful journey! #Agile #Scrum'
  captions: |-
    One of the reasons I love the immersive learning experience for students is the fact that they don't get indigestion. There are a lot of things that we talk about during the classes. Quite often, people talk about drinking from the fire hose. Um, but if you actually imagine a fire hose hitting somebody, they get knocked off their feet. And that's sometimes what it feels like with the amount of information in the very short space of time, um, that we have generally for the 2-day classes. 

    So what I love about the immersive classes is that there's less indigestion, there's more bite-sized pieces, and you get time to chew.
- id: eLkJ_YEhMB0
  title: Overcoming the Ghost of Agile Certifications
  description: "Transform your Agile Scrum meetings from routine to value-driven! Discover strategies to boost productivity and avoid the ghosts of Agile past. \U0001F31F"
  captions: |-
    One of the ghosts, it's actually two of the ghosts of Agile past, are the three questions you might have heard of: the three questions in relation to the Daily Scrum. What did I do yesterday? What am I doing today? And what's blocking me? Or you might be thinking of the retrospective: what went well, what didn't go well, what do we need to change, right? There's various renditions of the three questions. Three must be a good number, but the reality is that if you've got a Scrum team and you do the three questions once, maybe a couple of times, either at your daily or at your Sprint review, then that's probably okay, right? There's nothing fundamentally wrong with the three questions.

    But what is dysfunctional? What is that ghost of Agile past? It's when the three questions become the purpose of the daily or the purpose of the retrospective. You'll see that on teams; they'll come into the Daily Scrum and they will go into autopilot. It becomes a rote procedure for them to follow that they each need to answer the three questions. You'll perhaps see the project manager, sorry, Scrum Master, writing down the answers to those three questions so they can go update their project plan. That is not the purpose of the daily, certainly not the purpose of the retro.

    With the other three questions, you need to be focused on the value that we're delivering and is that value moving towards the outcome that we're trying to achieve? We're trying to be successful at delivering on the Sprint goal and potentially other stuff in the Sprint. Are we making progress towards that? Are we blocked with that as a group? 

    So what I tend to see as a more effective way to move forward is for teams to focus on the value in the Sprint. We don't need to hear from everybody, right? If Bob is working on the same task for three days in a row, it's boring to hear from Bob and really adds no value. There might be a good reason why Bob is stuck on that task for three days in a row, right? But that doesn't mean that's how we want to surface that during the Sprint, the Daily Scrum, because most people in the room don't really care, right? It's not part of their thought process.

    But what you could do is focus on the value that's being delivered. What is the next most important piece of value that we need to deliver? How are we doing with it? Well, Bob and Brenda and Billy are all working together on this item, and Brenda provides an update for the team on how we're doing on that, right? As a group, how are we doing? That might be a better way to proceed. You've just one person spoken, one piece of value, and three people have been working together on that particular item.

    Or perhaps, focusing on the value, you might be thinking about which of these items on the board have not moved in a long time, right? What are we forgetting in our daily? That's something to look at. How old are these items? Is something getting too old on this board? You've maybe seen, if you Google "banana peel daily work item aging," you'll see a board with stickies on it and actual real banana peels stuck to it. The more brown the banana peel gets, the more fruit flies there are flying around, and the older that item has been. Let's deal with it before the fruit flies come out.

    Now, that's just an arbitrary silly visual indication, but the reality is the longer things are stuck in your system, the longer things are stuck there, the longer they're going to take, right? I mean, the exponentially longer they're going to take the longer they're in there. And that's based on the data, right? You can go collect that data, look at that data, monitor the flow through your system, and you'll see that very much happening. Things that get stuck tend to get stuck.

    If you don't have clear rules on, as a team, right, our team's way of working, if you don't have a clear consensus on what do we do about those things, quite often they just get left. Because they get left, you end up getting to the end of the Sprint and there's things you haven't done and things that haven't moved and things that get left behind because we're not focusing on maximising the value that we're delivering as a team. 

    And that is a ghost of Agile past: the three questions creating dysfunctional behaviour where we're not focusing on value delivery. If you are being haunted by these ghosts of Agile past, we can help exercise them or help you find a consultant, coach, or trainer that can. Don't let these phantoms undermine the effectiveness of your value delivery, and the longer they linger, the more they will haunt your team's progress. 

    Send me an email to martin@nkdagility.com and we'll help you get to the bottom of it. If you want to have a discussion about your unique needs or situation, then please book a call or visit us at nakedagility.com. We also have our immersive and traditional public classes on our website, and we'd love to hear from you.
- id: EMJyUOy2gP4
  title: 'The Problem with Incompetent Scrum Masters: Why Lack of Skills in Team Context Results in Poor ROI'
  description: Discover the true ROI of hiring skilled Scrum Masters and learn how their competence impacts team performance, innovation, and value delivery.
  captions: |-
    Having Scrum Masters that have a lack of competence within the context of the team's work, the product owner's work, and the organisational structure means that you're going to be getting less return on your investment. I mean, that's fundamentally what it is. The team is probably going to be delivering less stuff. It's probably going to be making fewer bets on new stuff, so you're probably going to spend less time on that new stuff, and they're probably going to have higher defect rates, right? Because they don't have the modern engineering excellence and DevOps practices that are needed to build awesome products in today's world.

    There are absolutely teams out there that are doing this without Scrum Masters, right? I'm not disagreeing with that. I'm saying that if you have a Scrum Master with the capability to help a team maximise those capabilities, then you're going to be able to vastly increase your ROI for your team. But you need Scrum Masters with those competencies; otherwise, all you're going to get is teams that are happier with each other, not teams that are able to actually deliver more stuff. Both of those things are important, but delivering more stuff is where your ROI comes in.

    What I would want you to do is collect some metrics and use those metrics to measure the fundamental benefit that the Scrum Masters are bringing you, okay? Bang for their buck, right? Here are some examples. I'm going to use an example over here because I have some data around it. I would want to measure innovation rate, which is the percentage of time that your team spends working on net new functionality versus maintenance and support and augmenting existing functionality. 

    If you're Netflix, that's a new series versus a second season of an existing series, right? Or remastering some older series, right? So that's this measure. I want to measure my on-product index. I want to be measuring the percentage of time that my team members have to work on my product versus having to work on other things. What percentage of time are they actually working on my product? 

    I want to be monitoring my usage index for my product, so I'm looking at the data around how my users interact with my product, right? That's a great metric. And then perhaps, if you have an app that is installed, I maintain and support one. You have the installed version index: what percentage of people running your tool are on the latest version of the tool, and what percentage are on older versions of the tool? Because that goes to engineering excellence and various things.

    Let's say you had those metrics. I'm going to tell you the industry standard for each of those metrics, and we're going to base it on a dollar. And yeah, I'm using US dollar, pound, Euro, whatever you want. For each dollar you spend on your product, what you lose by each of these metrics. The innovation rate is about 29%. That's the average innovation rate; that's from the DORA metrics. So for every dollar that you spend on your product, you're getting about 29 cents of net new value, right? For opening up new markets, for adding new capabilities to your products, 29 cents. 

    So you're 29 cents in the dollar, right off the bat. Most teams spend about 80% of their time working on the product and 20% of their time doing other stuff for the organisation. So that could be meetings, all hands, training stuff, right? It's about, I think that's about a day a week, isn't it? Something like that. Anyway, so now you're down to 23 cents in the dollar because you've lost 20%.

    What about usage index? What do you think the metric shows? The data that I've seen, some of it's from real customers. The happy metrics are from the Chaos Report from the Standish Group in Boston, and they found that only about 35% of the features that are built are actually used by your customers. Only about 35%, right? That's because we're not changing fast enough; we're not adapting fast enough. 35%. So now we're down to 8 cents on the dollar. 

    8 cents on the dollar. Eight out of 100, right? 8 cents return on investment for a $1 input. What the heck? That is terrible. 8 cents on the dollar. And that metric is really optimistic. I did some work with a bank in the US who said that 35% usage index? That's crap. We know our customers way better than that. We understand they're using all of our features, or as much as, you know, they're, oh, we're 80%, right? 

    So we said, why don't we add some telemetry onto your product and let's see? They are cloud-based products; it was easy. So we added telemetry to the product, we gave it three months, and we looked at the data, and it was about 8% of the features in the product were actually used by their customers. And that was over a year-end. Luckily, we were just in the right time for that, so it was over a year-end. So that was a really good picture: 8%, not 35%. 8% of the features. 

    So that wouldn't be 8 cents in the dollar; that would be a lot less. And then let's say installed version index: let's say it's 70%. 70% of your users are on the latest version of your product. Now we're down to 6 cents on the dollar. Do you even know what your numbers look like? Just those metrics: innovation rate, on-product index, usage index, and installed version index. It's only four metrics. Go collect them and then measure your progress over time. 

    If you hire Scrum Masters, they should be able to change those numbers. Your Scrum Masters should be accountable for the effectiveness of the team, and you can measure the effectiveness of the team within the context of a product by some of these metrics. These are not the only metrics; I just picked four, right? Because I have some data around them. Pick some metrics that are product-based metrics, value-based metrics for you as a business, and expect those numbers to improve when you hire Scrum Masters. If they don't, you've got the wrong Scrum Masters.
- id: EoInrPvjBHo
  title: 'How to Overcome Agile Banditry: A Product Owner’s Journey'
  description: "Discover how to avoid rigid product ownership in Agile! Join Martin as he shares insights on fostering team engagement and achieving true Agile success. \U0001F680"
  captions: |-
    Have you ever encountered the product owner as an agile Bandit? I have. I worked with a product owner quite some years ago that believed that if every single person on the team just followed their detailed plan and Gantt chart with start times and end times for all of the tasks, if everybody just followed that, everything would work out perfectly. And the only reason it doesn't work out perfectly is because people don't follow his plan. 

    That is an agile Bandit. A product owner is not a project manager. They're not looking at task to time; they're focused on goals and outcomes and what is it we're trying to achieve. And we've hired these super smart people to be able to deliver these amazing products. A product owner should be focused on vision, value, and validation. Where is it we're going? What is it we get out of it? And have we managed to actually get there? 

    In order for a product owner to focus on those things, they perhaps need to let go of some of the things that they've used in the past and focus instead on enabling the team, the people around the product, to be an engaged, happy group of people. Have you ever met a sad, unhappy group of people that made amazing products or did amazing things as a team? I bet you haven't, because they don't exist. Happy, engaged people build great products. 

    If you've got a product owner who's focused, laser focused on task and work breakdown, you are not going to have a happy, engaged team that is connected to the story that we're trying to tell as a product. That person is an agile Bandit; they shouldn't be a product owner at all. It was just terrible. You should see the team. The team was just in a complete mess. They just didn't care. All they cared about was delivering stuff. 

    "I've got these things on my task list. I need to deliver these things or I'm going to be in trouble from the product owner." There was no team. So don't destroy your team with agile banditry as a product owner. Stop it. If you're being ambushed by agile bandits in your organisation, then my team at Naked Agility can help you, or we can help you find somebody who can. You can set up a no-obligation consultation using the links below. Don't forget to like and subscribe if you enjoyed the video.
- id: EOs5kZv_7tg
  title: Why is Johanna a great teacher for the Professional Agile Leadership - Essentials course?
  description: Discover why Joanna Plaskonka is the ideal guide for the Professional Agile Leadership Essentials course, empowering leaders to embrace agile transformation!
  captions: ""
- id: eykcZoUdVO8
  title: 'Part 2: Most influential people in Agile'
  description: 'Join Martin Hinshelwood as he shares his personal insights on the most influential figures in Agile. Discover the impact of Agile on teams! #agile #shorts'
  captions: ""

