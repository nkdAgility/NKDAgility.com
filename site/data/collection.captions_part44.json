[
  {
    "id": "OlzXHZihQzI",
    "title": "Unlocking the Power of Immersive Learning in Agile",
    "description": "Discover 5 reasons why immersive learning transforms Scrum training for students! Join us for insights that inspire and elevate your Agile journey. #Scrum #Agile",
    "captions": "One of the great things about immersive learning is that we specifically give students the ability to adapt their mental models. It's not something we force upon them, or we can actually, you know, you can lead a horse to water, but you can't make it drink, right? You have to want to change your mental models. But the new format, because they're doing things in their organisation, they're seeing how it works, they're seeing the benefits and the negatives. They're hopefully able to change their whole mental model so that they make different choices in the future, and they're able to assimilate these core agile practices into the way they do things."
  },
  {
    "id": "OMlLiLkCmMY",
    "title": " shorts 7 Virtues of Agile. Chastity",
    "description": "Discover the first virtue of Agile: Chastity. Join Martin Hinshelwood in this insightful #shorts video and unlock your team's potential!",
    "captions": "You need to think about how you're going to change your organisation. You need to involve the people in your organisation in that story; otherwise, they're not going to be interested in what it is you're trying to achieve. Nobody really cares about your goals; they care about their own goals. The way you get them to care about your goals is you make their goals your goals."
  },
  {
    "id": "omsEiYqX-Dk",
    "title": "How much competitive advantage does organizational agility offer versus traditional management?",
    "description": "Unlock the power of organizational agility! Discover how it outshines traditional management for swift market response and team empowerment. 🚀📈",
    "captions": ""
  },
  {
    "id": "OWvCS3xb7pQ",
    "title": "What excites you most about the PAL e immersive learning journey for delegates?",
    "description": "Join Joanna Plaskonka as she shares her excitement about the immersive 7-week PAL-E course, transforming Agile learning for delegates!",
    "captions": ""
  },
  {
    "id": "OyeZgnqESKE",
    "title": "Why Immersive Learning Keeps Scrum Students Excited and Engaged",
    "description": "Discover why immersive learning transforms Scrum training! Join us for Part 2 as we explore the second reason to love this engaging experience. #Shorts",
    "captions": "Another reason I love the immersive learning experience for students is because it maintains a level of excitement of newness. There are new things to be discovered each session, and I find that because people are able to try things in their organisation, they feel excited to come every week. It's not a trial; it's a discovery of new topics, new things. And because they get time to assimilate it, they keep coming back around for continuous learning."
  },
  {
    "id": "OZt-5iszx-I",
    "title": "Turning User Feedback into Actionable Work: A Guide to Maximizing Product Value",
    "description": "Unlock the secrets of Agile Product Management! Discover how short feedback loops can enhance product value and customer satisfaction in under a month.",
    "captions": "Is feedback from users turned into concrete work items for teams on timelines shorter than one month? We need to engage with our users. We need to take the feedback that they give us and turn it into something that we can actually action in a very short period of time. If we don't, then we're probably not very agile. \n\nHow long does it take for you to get feedback from your customers into your backlog, changing those work items that you're delivering so that you can deliver something else, something better, or more of the same? Maximise the value that you deliver in your product by collecting feedback from your users and doing something with it."
  },
  {
    "id": "P2UnYGAqJMI",
    "title": "The Pitfalls of Agile Burndowns: Stop Being Agile Bandits",
    "description": "Discover the 4th kind of Agile bandit with Martin Hinshelwood! Uncover insights on burndown charts and enhance your Agile journey. #Agile #Scrum #Shorts",
    "captions": "Burnd downs are a key indicator of agile banditry going on. Burnd downs encourage teams to plan too far in the future. Whether it's a Sprint burndown or a product burndown, we're planning too far ahead if we have enough data to understand where we currently are and where we're eventually going in number of items. This is why we talk about goals and D action in Scrum and agile. We want to be focused on those things, which means we probably don't understand the details and don't have enough information to even create a burndown. Don't be agile bandits."
  },
  {
    "id": "p3D5RjM5grA",
    "title": "Ep 006 - Live Virtual Retrospective On PAL-e with Russell Miller",
    "description": "Join Russell Miller and me as we discuss our experience co-teaching a Professional Agile Leadership class online, exploring tech choices and future improvements!",
    "captions": ""
  },
  {
    "id": "p9OhFJ5Ojy4",
    "title": "Agile in Nigeria 2020 - The Inevitability of change",
    "description": "Explore the essence of agility in Nigeria 2020: it's an evolution, not a transformation. Embrace continuous change for lasting organisational growth.",
    "captions": ""
  },
  {
    "id": "PaUciBmqCsU",
    "title": "Understanding the Power of Kanban in Scrum",
    "description": "Discover why the Kanban vs. Scrum debate is misguided! Learn how Kanban can enhance your Scrum process and optimise any workflow for superior results.",
    "captions": "If you're having a conversation about Caman v Scrum, you probably don't understand Caman very well. Caman is a strategy that you can apply to any system, any process, to gain deeper insights and understandings of that system and process so that you can optimize it to increase the flow of value through that system. \n\nSo it's not Scrum, it's Caman. It's Scrum and Caman always. If you're using another system, it's that system and Caman always. \n\nSo you can see what's going on. Caman is a tool to increase transparency for any system, for any type of work, in any situation, and it will always add value to the conversation."
  },
  {
    "id": "pazZ3mW5VHM",
    "title": "Most Common Thing You Hear in a PSPO Course?",
    "description": "Discover Simon Reindl's impact on Agile in this insightful short! Join Martin Hinshelwood as he highlights key figures in Scrum and Agile. #Agile #Scrum",
    "captions": ""
  },
  {
    "id": "pDAL84mht3Y",
    "title": "7 signs of the agile apocalypse. Plague",
    "description": "Discover the 7 signs of the #Agile apocalypse in this short video! Learn how interconnected environments can lead to disaster. #Agile #Scrum #Shorts",
    "captions": ""
  },
  {
    "id": "phv_2Bv2PrA",
    "title": "What is Agile?",
    "description": "Discover how Agile philosophy can transform your personal and professional life. Join us for insights on growth, teamwork, and continuous improvement!",
    "captions": ""
  },
  {
    "id": "PIoyu9N2QaM",
    "title": "What is the difference between a newbie scrum master and a professional Scrum Master?",
    "description": "Discover the key differences between newbie and seasoned Scrum Masters with Agile Coach Martin. Elevate your Scrum skills and insights today! 🌟🚀",
    "captions": ""
  },
  {
    "id": "PmMqrL42FUg",
    "title": "7 deadly sins of Agile - Sloth UPDATED",
    "description": "Discover the 7 deadly sins of Agile in our updated video! Don't miss the full-length version here: https://youtu.be/uCFIW_lEFuc.",
    "captions": ""
  },
  {
    "id": "Po58JnxjX7M",
    "title": "Before You Call Yourself an Agile Coach: The Importance of Real Experience",
    "description": "Discover the first of 5 essential achievements to become an #AgileCoach with Martin Hinshelwood. Elevate your coaching journey today! #shorts #agile",
    "captions": ""
  },
  {
    "id": "pP8AnHBZEXc",
    "title": "27th May 2020 - Office Hours \\ Ask Me Anything",
    "description": "Join Martin, a Scrum Trainer and Azure DevOps MVP, for an engaging AMA on DevOps and Agility. Ask your questions live or submit them privately!",
    "captions": ""
  },
  {
    "id": "Psc6nDD7Q9g",
    "title": "Maximizing Transparency and Improvement in Software Engineering with Kanban",
    "description": "Unlock the power of Kanban! Discover how it enhances software engineering processes, boosts efficiency, and fosters team collaboration. Watch now!",
    "captions": "Gaining an understanding of your existing process, the system within which you're working, is absolutely crucial in software engineering. We have really high variance between what we think is going to happen and what actually happens. \n\nUsing Kanban, it allows you to observe your system, have metrics that help you understand your system, and visualisations that show your system. This enables you, as the team, as the people using the system, to understand the different things that are going on and look for patterns, places for improvement, and places that are awesome. \n\nIt also enables you to maximise transparency of the work that you're doing and increase your ability to change, right? Because now you have agreed what all those things are and set up continuous deliveries."
  },
  {
    "id": "pU57BrP94-8",
    "title": "How will the immersive learning experience help coach people on the job?",
    "description": "Discover how immersive learning transforms #scrum training into practical on-the-job coaching, enhancing skills and boosting team performance.",
    "captions": ""
  },
  {
    "id": "Puz2wSg7UmE",
    "title": "How to Measure Your Organization's Ability to Improve Value Through Innovation",
    "description": "Discover 5 compelling reasons to integrate Evidence-Based Management (EBM) into your agile environment and unlock your organisation's innovation potential! #EBM #Agile",
    "captions": "How do you know how effective your organisation is at improving value? In order to do that, you need to understand your organisational capability, and part of that is understanding your ability to innovate. Evidence-based management has some key example metrics that you might use within the context of monitoring your ability to innovate. If you're building software products, you might be looking at your active branches, number of active branches. You might be looking at technical debt on any product. You might be looking at innovation rate, percentage of time you spend innovating rather than struggling with complexity. But there are plenty of other metrics that you might choose from in that space. You need to understand how effective your organisation is at improving value."
  },
  {
    "id": "pVPzgsemxEY",
    "title": "The Power of Kaizen: Continuous Improvement in Scrum and Beyond",
    "description": "Unlock the power of Kaizen in Kanban! Discover how continuous improvement can elevate your workflows and drive optimal results. Embrace the journey!",
    "captions": "We love taking Japanese words and using them not quite right for their meaning. But one of the key phrases that we use all the time in Kamban is Kaizen. Kaizen is really just about continuous improvement. It's keeping changing things, hopefully for the better, because you're observing improvements in the system or measuring improvements in the system. \n\nSo the idea of continuous improvement, continuous change, and continuous optimisation of your process or your system is generally referred to in the Kamban community as Kaizen. Kaizen's not limited to Kaizen; it can be used absolutely anywhere you like. We should always be continuously striving for anything that we do to be a little bit better every time we do it, and that continuous nature is what we mean by Kaizen."
  },
  {
    "id": "pw_8gbaWZC4",
    "title": "How Top Teams Use Pull Systems!",
    "description": "Unlock the power of Kanban! Discover strategies to optimise pull systems, enhance workflow, and drive continuous improvement in your team.",
    "captions": "One of the key aspects of a Caman strategy is improving the system, improving your workflow. So after you've defined what your workflow is, you've written down how you're going to work your system, and you've started actively monitoring the work that is underway, you'll hopefully start seeing patterns. If we're using the metrics from the flow metrics from a Candan strategy, then we should be able to see when things are sitting around for too long and they're too old. We should be able to see patterns of delivery. We should be able to see groupings of things that are perhaps not quite where we expect them to be on the graphs that we might use to visualize that data. \n\nAnd that allows us to ask more interesting questions. It allows us to lift the carpet and see in the dark. See in the dark, that's a great Cban strategy. It's like a torch shining the light in the darkness of your system to see where things are broken, where things aren't working as optimally as they could be, to see what's going on where it would be opaque normally. This is especially true for teams doing Scrum. Scrum has no metrics at all, and the metrics that I would always recommend would be the Caman flow metrics, right? Because Cban is designed as something that can be used to monitor any system. It's a monitoring tool; it's not the system itself. It's the tool you use to observe the system. \n\nThink about if you were building software and you wanted to understand which features of your product your customers were using so that you could choose which parts of the product to continue to invest in and which not. How would you do that? Well, you'd need to put some hooks into your application and collect a bunch of telemetry and then analyze the data, right? So you can see what's going on. You need to increase transparency, and a Candan strategy is that tool for any system. So regardless of whether Scrum is your system, that might be your starting point, or that might be where you jump to, right? You might start from over here, but you jump to Scrum, or you've got a system that you just made up, right? That's totally cool. That's what lots of people do. \n\nWe have a system that we just made up, then we can use Caman to gain insights and understanding on what's going on in this system by monitoring it, by collecting some telemetry on how our work happens so that we can see better what's going on. I don't understand why teams try and manage their system from a position of opacity, right? They can't see what's going on; they're looking into the fog of war, and they can't see the problems. A Cban strategy, and particularly the flow metrics part of a Candan strategy and the visualization of the work, remove that fog of war so you can see what's going on. You can actually see when things aren't working properly, and it's obvious. \n\nLook, here's a problem here; I can see it. It's visually triggering my brain, and I can see it. So hopefully, being able to see all these problems will encourage you to actually do something, actually make a change. And we're effectively not implementing a Candan strategy if we're not improving the workflow, right? Improving and making changes to the system in order to see the numbers change in a more positive or more likable manner, right? So Caman supports continuous improvement by giving you the torch to shine on the problem. The view through, it's your radar that lets you see through the fog of war and be able to make better decisions. \n\nIf you're struggling to create a pool-based system of work, then we can help you. We provide world-class Candan training from Pro Caman, as well as consulting and coaching for teams trying to implement a Candan strategy. If you're a Scrum team, then we always recommend bringing in flow metrics as a complimentary practice and have Cbang classes from Scrum.org as well."
  },
  {
    "id": "pyk0CfSobzM",
    "title": "How does a Scrum team estimate what can be delivered in a Sprint?",
    "description": "Master Sprint estimation in Scrum! Join Martin as he navigates the challenges of creative tasks and effective planning. Perfect for agile enthusiasts! 🚀",
    "captions": ""
  },
  {
    "id": "PZa77csy5r8",
    "title": "Technical Debt Management for Long Term Quality",
    "description": "Unlock long-term productivity by mastering technical debt! Join Martin Hinshelwood as he shares insights and strategies from Azure DevOps.",
    "captions": "Technical debt is a huge problem for organisations. I want to quickly define technical debt. Technical debt is future cost that you incur when you or your team prioritise quick short-term solutions over more robust long-term approaches. Right, so anytime you make a choice to do something fast but wrong because you need it fast, you're knowingly introducing technical debt. You can also unknowingly introduce technical debt, i.e., we made some architectural choices. They were good choices at the time, but now they're no longer good choices. Technical debt can appear over time.\n\nI'm thinking of a transactions system, and we supported X number of transactions per second, and our platform of choice was reasonably priced and was able to support well beyond what we thought we were going to transact. But now we're transacting a lot more than that, and we're reaching the limits of the system that we chose. A great example of that is the Azure DevOps team when they originally envisaged work item tracking fields. A work item was a row in a database, and fields were a column. Those of you who are software engineers have already figured out what the problem would be with that in that you can only have 1024 columns in a SQL database. \n\nSo they not quickly, but they did hit limitations on the number of columns that you could have for custom fields because who would have more than a thousand fields on a work item? But yeah, people do. They do exist, and people do that, and it was totally within the system. So they thought, \"We'll never have a thousand fields,\" or somebody made that decision, just like the two-digit date decision back in the day. So they had a lot of work to go back and refactor, not just refactor the system but write the capabilities to refactor the data on upgrade for their customers into a format where each field was a row in a database rather than in a column. \n\nSo then you have unlimited capability for fields and data, and those types of decisions, either knowingly made decisions that result in something that's not quite the way it needs to be or unknown ones, are where most technical debt comes from. There are other issues that people call technical debt which aren't necessarily technical debt, but most people lump it all together and say technical debt. I think I often do as well, and that's I've written bad code and shipped it. That's not technical debt; that's incompetence. \n\nRight, so within the context of a competent team, there's known technical debt and unknown technical debt. But there's another thing that we call technical debt, which is just shipping bad code, making poor choices, knowing that they're poor choices, and not doing anything about it. Right? Shipping bad code. Stop shipping bad code would be the way you pay that one back. But for technical debt, you need to pay it back. You need to prioritise paying back that technical debt. Think of it more as an unhedged fund rather than a debt like a credit card. \n\nMost debt is secured against something, secured against an asset. If you stop paying your mortgage, then the bank comes and repossesses your house and gets their money back, right? And maybe you get some leftovers because you paid some of your mortgage. But who's ensuring your product quality? Who's ensuring your product against your technical debt? There's no insurance; it's uninsured from that perspective. Nobody can magically come along and pay back all the debt. It's not insured at all, or sell something and pay back. We claim an asset, so it's something you're going to have to deal with, and you can't let it get out of control.\n\nAnd there's a lot of unknown technical debt. I mean, that's like, I mean, I use the Azure DevOps team a lot as an example, but they'd been a waterfall team for many years, shipping once every two years. And then they moved to a more continuous delivery three-week model, and they found that they made lots of poor decisions, right? That weren't necessarily poor decisions within the context of two years, but they couldn't really see the impact of the technical debt, the choices that they'd made, deliberate and undeliberate, right, on their ability to deliver product and their ability to deliver value.\n\nBut I have a graph of, I think it's 2010 through to 2018 for that product team, so eight years of development, and they effectively go by moving to continuous delivery, moving to three-week sprints, moving to that faster cycle from a two-yearly cycle and running into issues with that. And every issue they're running into, paying it back, right? Paying back the reason that they made those choices, which were perhaps valid reasons at the time, but you still need to pay it back. It doesn't matter whether it was a valid reason or not. \n\nAnd paying it back and doing the work, they actually went from 25 features to production each year in 2010 to something like 360 features to production in 2018. So by focusing on paying back their technical debt, enabling their engineers to close the feedback loops, then shorten the feedback loops, three ways of DevOps, right? Closing the feedback loops first, then shortening them. And that act of shortening the feedback loops can massively increase the amount of value that you can deliver long term. \n\nAnd that's the value of paying back technical debt, of managing technical debt well, is that you can go from removing those limitations to maximising the value that you deliver in your product with the same number of people. That was the Azure DevOps team literally went from 25 features to production each year in 2010, worked very hard to pay back technical debt, and were able to, even in the first year of focusing on paying back technical debt to get their new way of working up and running, they went from 25 features to production to 68 features to production within that one year. \n\nAnd they weren't even focused on delivering more features; they were focused on, \"Let's deal with our crap,\" and \"Let's figure out how we deal with those problems.\" And they still delivered more features. That's the benefit of paying back technical debt. That's the benefit of having a slick, easy system to add features to your product, and that's what everybody needs. Don't manage technical debt; pay it back."
  },
  {
    "id": "Q2Fo3sM6BVo",
    "title": "The Scrum Framework!",
    "description": "Discover the Scrum Framework with Martin Hinshelwood! Learn its core values, accountabilities, artefacts, and events to tackle complex problems effectively.",
    "captions": ""
  },
  {
    "id": "Q46T5DYVKqQ",
    "title": "What is Empiricism",
    "description": "Discover the essence of empiricism in Scrum! Join Martin Hinshelwood as he explains how it empowers teams to learn and adapt in complexity. #Agile #Scrum #Shorts",
    "captions": ""
  },
  {
    "id": "QBX7dnUBzo8",
    "title": "Addressing Systemic Issues in Agile Organizations",
    "description": "Unlock the secrets to startup success! Discover how agile techniques can transform your business and boost team performance in this must-watch video.",
    "captions": "Organisations and people are too scared to address the real problem, which is the way the system works. Right, so they're focusing on the little bits and pieces around the edge. Oh, let's push responsibility down the organisation for some things but not other things. Let's, uh, what else do they do? Let's have people run these ceremonies, right? Uh, we're going to do a daily, we're going to have a daily, that'll fix everything, right? But these are the mechanisms, not the thing that you're trying to achieve. You're measuring the wrong thing if you think that having those things is going to result in a different way of doing things. You should be measuring return on investment. You should be measuring, uh, um, a profit per team member, right? Uh, you should be looking at your feedback loops and your cost to deliver and your meantime to repair and things, your time to learn, right? Closing those feedback loops. You should be measuring, um, what you don't know, right? What does your product not do that it could do? That is a market opportunity. And where do you go looking for that information? How do you, as a business, find that? This stuff is hard, and 70% of all startups, right? 70% of all ideas that people have are going to fail. Easy. 70% of ideas are going to fail. In fact, 70% of startups, I bet it's a much higher percentage of ideas because not all ideas manage to convince somebody to give them the money to start the idea in the first place, right? Ideas are the most nebulous one, and if you're building products and you're trying to capture market, you have to be focused on what helps us as a business be as effective as we can be within the context of those markets. And that doesn't come, um, from not having the courage to admit that you need to change more things.\n\nSo the common one that I see in organisations is that an agile coach, uh, comes in. I've been, I've been, this, this, I wasn't an agile coach at the time, uh, but my biggest regret, this is my biggest regret in consulting. It's from years ago. I was still wet behind the ears. I wasn't, uh, a very sophisticated, uh, consultant at the time. Um, this was probably nearly 10 years ago, and a CEO pulled me aside and basically said, \"Look, we've just gone through a major reorganisation.\" Um, and they'd reorganised into silos, by the way, just different sort of silos. And he said, \"Um, all the things that you're talking about, I was talking about DevOps, seem to be different from the way we've organised ourselves. Do we need to throw all of that out?\" Because it was very expensive, right, to do that reorg. Reorgs are expensive, or else don't do reorgs, it's expensive. Um, and do we need to change the way we do things completely? And I said, \"No, you can change slowly and iteratively towards the thing you want to achieve.\" And that was a bad answer. The right answer would have been, \"Yeah, rip that Band-Aid off, disinfect the wound that you just created by changing your organisation to even more silos, right, in the wrong direction, and move faster and with less constant pain and suffering and haemorrhaging of money to a resolution to a different system that enabled you to be more successful.\" \n\nAnd that is the difficulty, the difficult call that lots of organisations have is that fundamentally, the reason you can't take advantage of agile, the reason agile is so difficult, the reason you've got agile atrophy in your organisation, that people are just like, \"I can't be B, what? Don't mention agile to me anymore,\" that kind of attitude is because you've not addressed the changes that need to happen in the way you do business in order for agile to be successful. It isn't just magically successful. You need to fundamentally change the way you do business at every level in your organisation in order to move towards what people are calling agility, right? This agile movement, big A agile or little a agile, but really it's about your organisation systematically and continuously improving its effectiveness in sometimes small jumps, but sometimes you need big jumps to improve that effectiveness. And do you have the courage to make that change? If you want to have a discussion about your unique needs or situation, then please book a call or visit us at Naked Agility dot com. Uh, we also have our immersive and traditional public classes on our website, and we'd love to hear from you."
  },
  {
    "id": "qEaiA_m8Vyg",
    "title": "Why have you decided to go all in on immersive learning experiences?",
    "description": "Discover how immersive learning transforms training into a journey of engagement and growth with Martin! Embrace a new way to learn. 🌱📚",
    "captions": ""
  },
  {
    "id": "QgPlMxGNIzs",
    "title": "How do you think Agile is evolving since its inception in 2001?",
    "description": "Discover the evolution of Agile since 2001, its challenges, and the future of work in dynamic environments. Join Martin on this insightful journey! 🌐🚀",
    "captions": ""
  },
  {
    "id": "QGXlCm_B5zA",
    "title": "What will you learn on the PSM II course?",
    "description": "Unlock your potential as a Scrum Master! Discover key skills and insights from the PSM II course to elevate your career and enhance team performance.",
    "captions": ""
  },
  {
    "id": "QI3oE9IUc6E",
    "title": "How effectively does an APS prepare a team to do a solid, professional Scrum?",
    "description": "Discover how the APS course empowers scrum teams to excel in professional scrum practices. Join Martin Hinshelwood for insights on effective training!",
    "captions": ""
  },
  {
    "id": "Qko_93YAV70",
    "title": "Kanban Vs Scrum",
    "description": "Explore the key differences between Kanban and Scrum in this insightful video. Discover which Agile framework suits your project best! #agile #scrum #kanban",
    "captions": "If you're having a conversation about Caman vs Scrum, you probably don't understand Caman very well. Caman is a strategy that you can apply to any system, any process, to gain deeper insights and understandings of that system and process so that you can optimize it to increase the flow of value through that system. So it's not Scrum, it's Caman. It's Scrum and Caman always. If you're using another system, it's that system and Caman always. \n\nSo you can see what's going on. Caman is a tool to increase transparency for any system, for any type of work, in any situation, and it will always add value to the conversation."
  },
  {
    "id": "qnGFctaLgVM",
    "title": "Why do you trust Russell to deliver the PSPO course for NKD Agility?",
    "description": "Discover why Martin Hinshelwood trusts Russell as a top Professional Scrum Trainer for NKD Agility's PSPO course. #Agile #Scrum #Training",
    "captions": ""
  },
  {
    "id": "qNJ2suVslzE",
    "title": "Taming Scope Creep with Agile",
    "description": "Master scope creep with Agile! Join Martin Hinshelwood as he reveals strategies to focus on value delivery and adapt to change in project management.",
    "captions": "If you're struggling with scope creep, it's probably because you're using practices and philosophies that were developed within the context of low variance. Very little changes all the time, so you can create a plan, you can create your Gantt chart, you can run the plan, and that's how you're managing risk. But when your variance—the difference between what you think's going to happen and what actually happens—is bigger than what you thought in the first place, more than 50% variance, those tools no longer work, and we start having problems with scope creep. We start to not be in control of what's going on, and that shift towards product delivery, a product operating model, is that move away from those old ideas of scope and deadlines. \n\nThere are other tools that we use to have the same outcome because the outcome you're looking for is a usable, working product in the hands of your customers so that you're delivering value, maximising the value of that item. But those old tools are no longer working for us. If you're having a conversation about scope creep, then we're probably having the wrong conversation because it needs to be okay for the scope to change. The market doesn't stay still. If you're delivering a product into your organisation or into a market, whether it's B2B or B2C or internal, then the ecosystem within which you're delivering that product is changing over time. \n\nIt's not only changing over time continuously, but that means that what you need is changing continuously, which means that what you have to do is changing continuously. It might even change in response to something you show the stakeholders. You show the customers, you show the users a capability, and they're like, \"Oh yeah, that's awesome! Don't spend any more time on that. This is the next most important thing.\" Suddenly, we're shifting direction, and maybe there's a hundred things in your list of things to do that you know you don't need. \n\nSo that scope creep is the good way where we have less scope to deal with, but also you might show them something, and they're like, \"Oh, that's not what I want. I need something completely different.\" Suddenly, you've got a whole bunch of additional work. That ebb and flow of what needs to be is the reason that Agile was created. The lean movement came out of that story of ebb and flow of delivering products. The Lean Toyota system and Agile was the adaptation of that story into the context of software delivery, which is slightly different. \n\nIt's much easier to change software; it's much easier to iterate on software. You can ship a new version. It's difficult to ship a new car to the same customer because you want to change something than it is to do it for software. So this idea, if we want to be on time and on budget, then we need to consider scope to be not the thing we're looking for. We're looking for value. The thing we're focusing on is delivering value to our customers, and if we're delivering value, we're doing the right thing. \n\nWe manage budget and time differently within the context of Agile. If we have a clear product vision, a clear direction on where we're going, and a well-defined product backlog that we know is going to change constantly, then we can much more effectively plan what we're doing and change direction as needed without worrying about scope."
  },
  {
    "id": "qnWVeumTKcE",
    "title": "A view into the PSM Training from Scrum.org",
    "description": "Explore the PSM Training from Scrum.org in this insightful video, showcasing key concepts and practices to enhance your Scrum mastery.",
    "captions": ""
  },
  {
    "id": "QpK99s9uheM",
    "title": "Is a scrum master an agile project manager?",
    "description": "Discover the difference between a Scrum Master and an Agile Project Manager in this insightful video by Martin Hinshelwood. #Agile #Scrum #Shorts",
    "captions": ""
  },
  {
    "id": "qpo4Ru1VVZE",
    "title": "DevOps Migration. Compatibility Problems",
    "description": "Navigate compatibility challenges in migrating from TFS to Azure DevOps. Learn to manage customisations, data integrity, and on-prem build agents effectively!",
    "captions": "If you're worried about compatibility problems once you've moved from TFS on-prem to Azure DevOps, I probably really wouldn't worry that much about it. Everything that works on-prem works in Azure DevOps. It's more the other way; not everything that works in Azure DevOps works on-prem, where there's more likely to be compatibility issues. \n\nBut there are certainly, if you're on an older version of Team Foundation Server, we did a migration recently for TFS 2010, and they had some customisations that they built. They had some customisations that they bought that are just no longer a thing. They're no longer a thing in newer versions of on-prem TFS, so we had to plan around what they were going to do differently when they moved to the new location. \n\nRight, because even just an upgrade of TFS, they're going to lose that functionality, and they have to upgrade. TFS 2010, I think, was out of support five years ago, maybe longer. So they were really hurting from that perspective. They need to be in compliance if you want support, data integrity. These are the systems that hold your company's IP. \n\nRight, you need the code to be able to build your product, and that needs to be safe and secure. This is your organisational asset. If you have any building of software going on, this is a very expensive asset to work on, so you need to make sure that it all works. \n\nAs you move up to the cloud, you will still have a bunch of on-prem stuff going on. You probably have on-prem build agents; you probably have other things locally. Those can largely just continue to function as is. The agents will just connect to Azure DevOps in the cloud, and it's a one-way system. So the agents talk to the cloud; the cloud never talks to the agent, so you don't need to punch any holes through your firewall. \n\nAnd then you've got to consider all of your own in-house customisations that you've created. It's very easy and has been for 14, 15 years to create extensions, plugins, and other systems that bounce off TFS. So you'll need to take into consideration what they are going to do in the new model of working with the cloud. These are all things that you can just resolve; they're not that difficult."
  },
  {
    "id": "QQA9coiM4fk",
    "title": "DevOps Consulting Overview",
    "description": "Discover how DevOps consulting can transform your software delivery with insights from expert Martin Hinshelwood. Elevate your agile journey today!",
    "captions": ""
  },
  {
    "id": "qrEqX_5FWM8",
    "title": "Overview of the 8-week Immersive learning experience",
    "description": "Discover the power of immersive learning in Scrum and project management! Join Martin as he explores real-world applications and transformative training. 🌍✨",
    "captions": ""
  },
  {
    "id": "qRHzl4PieKA",
    "title": "Are Your Teams Empowered to Change Requirements Based on User Feedback? If Not, You’re Probably Not Very Agile",
    "description": "Unlock the secrets of Agile Product Management! Discover how team empowerment and user feedback drive success in this insightful video. 💡",
    "captions": "Are teams empowered to change the requirements based on user feedback? If not, then you're probably not very agile. We need to be engaging with the people that are building the product, and as we understand the work better, as we understand different ways to do things, as we gain more knowledge and context about the product and the market and what it is we're trying to achieve, we need to be able to update the backlog, update the requirements, change them, delete them as well. If we're not doing that, then we're not going to be able to maximize the value that we deliver to our customers. The people doing the work, the people creating the product, are really important to that story, and their input is just as important as the stakeholders. Are you maximizing the value that you deliver to your customers?"
  },
  {
    "id": "Qt1Ywu_KLrc",
    "title": "Basic Work Item Migration with the Azure DevOps Migration Tools",
    "description": "Discover how to effortlessly migrate and bulk edit work items in Azure DevOps with our comprehensive guide on the Migration Tools.",
    "captions": ""
  }
]
