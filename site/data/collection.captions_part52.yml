- id: txN41c6znbE
  title: 'Where Agile Went Wrong: Understanding the Competence Crisis'
  description: "Explore the competence crisis in Agile! Discover why skilled Scrum Masters matter and how to bridge the gap for real-world success. \U0001F331\U0001F680 #AgileLeadership"
  captions: |-
    Agile went wrong fairly early on. It started to go off the rails almost right from the beginning because there were certain assumptions that were made by the folks that codified it that created the Agile manifesto. So think of those folks as they were the right people that were available at the right time. Right, so there's probably people that were around at the time that could have been in that room but weren't, right, just because they weren't available or whatever. But the people that were invited to Snowbird were the best of the best working with the best of the best. So because they were already very highly regarded in their industries, they were already working with people who were very highly regarded, and there was an assumption of competence, an assumption of capability of the people that were participating within the process that we're talking about.

    So for Agile to be successful, we have to be continuously trying to figure out whether we're doing the right thing. We have to be continuously validating. We have to be continuously learning and figuring out new ways to do things and continuously closing those learning loops so that we change our mental model of how things work. And I don't think our current systems of education and the world itself is set up to create the majority of people that are like that. I feel like the majority of people aren't really interested in all of that stuff and perhaps just want to go to work, get a paycheck, and go home. I think a lot of people can be convinced to work differently, but if we're talking about what's the current status, I would probably hazard a guess, and it is a guess, that only about 20% of people are really interested in that level of commitment of figuring things out, of trying to do things.

    Which means that the demand for folks that understand Agile, now that's quite a wide bucket, right? Folks that understand Agile within organizations, whether that's for leadership positions like Scrum Master on up through the organization or for product-focused folks, product management through the organization, or for doers, right? The I work with software teams, so generally it's the engineering team members that I'm talking about there. But the doers up through the organization, what percentage of your leaders, product people, and doers actually take the time to go read blog posts, read books, experiment, discuss, and collaborate? I participate in a number of communities, like meetups, where people gather to discuss some of these topics and learn more, and there's not that many people there compared to the number of people that are doing that type of work.

    When you sell a book on a particular topic, the well-known people, you know, they sell more copies. The new Spring Gold book has been doing awesome, but still the number of people that buy it is a tiny percentage of the people that probably need to read it. So I think that when we need to caveat when we're talking about Agile, Agile teams are like special operations teams, right? They have a distinct particular focus on maximizing the value from the work done, right? And continuously iterating on that and learning new things and practicing. They probably spend quite a high percentage of their time learning and practicing and trying new things, and that's not most teams, that's not most organizations, that's not most people.

    I read a blog post years ago, and it struck me. This was when I was brand new. It struck me very much that the first line was, "If you're reading this, you're already in the top 10%." It was about software engineers and learning and that kind of thing. If you're reading it, you're already in the top 10%. What percentage of your people actually read and learn and try to better themselves? That is the assumption that you're going to have a team of people like that that comes from Agile. There's kind of a fundamental requirement of being Agile is having folks like that, and that's kind of why I guess the Scrum Master exists to proxy some of that because you're going to have lots of people on your team who are not like that.

    So the person who's like that on your engineering team, the doer who's most focused on the effectiveness of the team, is probably the perfect choice to be the Scrum Master and then move up through the organization through leadership roles. A great example of that is Satya Nadella, right? He was a software engineer and now runs the whole show. So the thing that went wrong is Agile accelerated much more quickly than there was supply of these folks. There was an assumption that these folks had those skills and capability, and they're just not there, and they don't exist today. There's not been systemic investment in bettering people within organizations of hypothesis-driven practices, right? Of encouraging people to experiment and try things and place bets.

    If you can get that efficiency, we can spread that across the organization because it works within our context. If we don't, then we advertise the cost of running that experiment across the whole business, and that philosophy is just not fundamentally there. So when we do find people that are really good at it, that's the folks that we want to have promoted through Scrum Master through leadership in our organization. But they're so few and far between that even within that context, most people in positions as Scrum Masters, there's some data from an organization called Scrum Match. Effectively, I'm going to paraphrase this; it's not quite the way it works, but they're effectively validating Scrum Masters so that if you're going to go hire this person as a Scrum Master, you know what you're getting.

    So it's validated through a face-to-face validation process with two professional Scrum trainers who understand not just the Scrum Master's competence within Scrum, right, but their competence within enabling teams to be effective, enabling product owners to be effective, and enabling the organization to be effective. So all the way up the tree, and they give effectively a capability level based on their engagement with that person. I think it's like a two or three-hour process, right? Validation process of talking and discussing and describing scenarios and talking about the skills and what they found. Not everybody that's coming to them is looking for a job. For example, I went through their process, and I'm not looking for a job, right? But that's their intent is you have this moniker for your CV to validate for employers that you do have a certain level of skill.

    So there’s certainly going to be a bias to people who are looking for work. What they found was that 39% of the people that were coming and saying, "I'm a Scrum Master," hadn't even read the Scrum Guide, hadn't even taken the most basic learning step of reading the manual for the thing, the job that they're taking. And the Scrum Guide exists; it's there, it's been around for 14 years. These were not just new Scrum Masters; these were people who had been in role for up to 10 years. So this is somebody who's been a Scrum Master for 10 years in an organization and hasn't read the Scrum Guide. For me, that's a lack of competence. That is not capable of fulfilling the role of Scrum Master in an organization.

    I mean, it may depend on how the role of Scrum Masters is defined, right? I'm kind of separating here the idea of what the accountability for the Scrum Master is within the context of Scrum and the job title of Scrum Master, which is company-specific and will have other accountabilities. But at a fundamental level, if you're going to be a Scrum Master, you should have read the Scrum Guide. Even I think there was a further 12% that had read the Scrum Guide but had a really rudimentary understanding of Scrum, and then another few percent that probably weren't capable of applying it within the context. So what it ended up with was 61% of people who identify as Scrum Masters, perhaps currently hold jobs as Scrum Masters, are not capable of being Scrum Masters, yet they've been holding positions and have experience as Scrum Masters.

    That is systemic of what we're talking about here. That's systemic of the problem that the two things, the demand has outstripped supply. Therefore, organizational hiring practices have systematically reduced the bar to meet the demand, right? The quality of the participants that they demand has dropped so that they can fill the positions. That means that there's a lot of people who have absolutely no business being Scrum Masters in role. You may go look to hire somebody, and they're like, "I've been a Scrum Master for 10 years at XYZ," and they are still incapable of fulfilling that role.

    I just saw a comment recently. It was highlighted by one of my colleagues on LinkedIn of a Scrum Master who had been in role for two years. They'd been a Scrum Master for two years and didn't know what a release plan was, no idea what a release plan is, no idea how to create one or what one looks like. How can you possibly coach a team within the context of that organization and not understand the things that that organization needs to function? Rightly or wrongly, you might not like release plans, right? Or you might have a different idea of a release plan from what I have from a release plan. But if you've worked for two years in a company in a role for maximizing the effectiveness of teams and you don't know what the assets are that the teams need to create in order for the organization to consider them effective, you’re in trouble.

    And why? I mean, that's a specific occurrence. I'm not trying to throw them under the bus. But why do people not have this information? Why do they not understand it? Why are businesses hiring people that have no ability, absolutely no ability to do the job? For me, there's a couple of things that this comes down to. It comes down to the supply-demand issue, i.e., there are very few people who take the time and effort, who care enough about their capability to go do that stuff, to go read blog posts, watch videos, try stuff, learn. There are very few people in that category. I know lots of people in that category, right? I know lots of people who do that, but I think I probably wouldn't know the people that aren't because that's the circles that I'm in.

    So all of my colleagues are kind of like that. I do come across people who have absolutely no interest in learning anything new, none at all. So that's a big piece. But I also think a big piece is organizations' willingness to cut quality to fill roles. I can kind of understand that in certain contexts, right? If it's software engineers, people on teams, doers, right? You can train doers. I would say it's much easier to teach somebody a programming language or teach somebody a test tool or some capability that they don't have than it is to teach them a philosophy. So that fundamental philosophy of continuous lifelong learning is something you need to hire for, not teach for, because you're probably going to be very difficult to teach that.

    I think please correct me in the comments, right? But I think that's going to be very hard to teach for such a fundamental pivotal role as the coach for the team. How are they possibly going to be capable without deep knowledge and understanding of the context of that team, the context of the product, and the context of the organization? Right? Those are the three contexts that that person needs. Now, you gain context in the organization, general organization, your organization, by being in it for time, right? You gain context of the product by either working in that industry or that context for a long time and then that specific product for a while. You gain context of the type of work that the team are doing by doing that type of work for a time.

    So the most logical people to go through that promotion into Scrum Master, right, for the team, which should be a self-selection, not self-selection, I select it, but the team selects the person. They're the candidates for moving through leadership in the organization. They have empathy, they have skills in the context of the work that we're doing, they have skills in the context of the organization, and they have time in the organization, experience in understanding those things. That's who you want as Scrum Masters. You don't really want to be hiring them in because they're not going to have any of those contexts or potentially not have any of those contexts.

    This is why the financial industry, who have very specific kind of idiosyncrasies, tend to require if we're going to hire people, they need to have worked in finance before. We're not going to hire somebody who's not worked in finance because it's too much trouble to teach them, and it's too disruptive because finance is like this. So I need people who are already able to work within that environment. So why does that just apply to finance? Why doesn't that apply to other places? This fundamental lack of not just lack of initial competence, right, but our skills atrophy. I once, and this was in finance, I worked in finance many moons ago. I probably wouldn't do it again as an employee for sure, but I worked in finance, and the person sitting next to me, I just started a new job. The person that was next to me was a user experience specialist, and they were complaining that they hadn't done anything new. They'd been working there for four years, and they hadn't done anything new in four years, and they felt like they were unemployable.

    Think how sad and dejected and unhappy that person is and how much effort do you think they spend on enabling the success of the organization? None, right? They're not spending any time on that. They're biding their time. That organization actually didn't last super long after that. But that's that fundamental competence that you should be looking for, and we need to have that focus. Otherwise, we're going to continue to end up in exactly the same position, which is bringing what organizations have been doing for many years. We're going to take the most junior, unskilled person and make them the Scrum Master who's accountable for the effectiveness of the team. How the most junior, unskilled person is going to be able to do that, I do not know, because it's not deemed as a valuable thing. Therefore, there's no leaders to promote through the organization who have a fundamental background and understanding of what it is that we're doing, how we're building products, and that experimentation and ideas up through the organization.

    So I think we've kind of done it to ourselves. There are pockets of agility; there are folks out there who are really good at this stuff, but they're generally not listened to. They're generally skilled enough that they go become a consultant, right? Because of the supply-demand issue. If the supply-demand issue was different, they would maybe still be employees because they would be being successful and having fun within an organization. But they're not. They're getting frustrated that organizations can't change, and organizations can't change because they're fundamentally not addressing these core competency issues. They don't have enough momentum; they don't have enough people who have those core competencies to move forward. These folks get frustrated and go, "Screw this, I'm going to go start my own business being a consultant," and at least I get paid more for doing terrible work with these organizations.

    But there's light at the end of the tunnel if you're an organization who is already on their journey to improve the agility of their organization or you want to be. Hire for competence. Hire for lifelong learning. Hire for somebody who has the interest enough to do more than a PSM or CSM level one certification to be that thing. I really fundamentally don't understand why HR and hiring managers are expecting somebody who's done a two-day course to understand how to... I mean, I kind of do. Years ago, I worked in an organization, and the accountant was sent on an MS Project course, and when he came back, he was the new project manager, and it was the disaster that you're expecting in your head. It was the absolute unmitigated accounting-focused disaster.

    So I understand that it's happening, but if we want to be different, if we want to get the value from agility that we need, we have to change the way we approach that. We have to hire for competence within the context of the roles, and that probably means... Now, I don't know the CSMs. I'm not a Scrum Alliance trainer; I'm a Scrum.org trainer. So my understanding, my knowledge is more in that space. If I'm looking to hire Scrum Masters, I am not looking for PSM1, not even remotely looking for PSM1. I'm looking for, if I'm looking for a Scrum Master for one team in a large organization, I'm at least looking for PSM2, but realistically, I want a PSM3. PSM3 has demonstrated knowledge and capability; it's essay-based questions. We're no longer in the multiple-choice world, so it's much harder for somebody without the competence who isn't interested in lifelong learning. It's much harder, much, much harder for them to gain that certification, right? The PSM3.

    So that would be my minimum bar. I think it has to be my minimum bar. My minimum bar would be PSM3 if I'm hiring a Scrum Master and I'm bringing them into my business. Minimum PSM3. And I then want to look at what's the context of my product. Does that Scrum Master have experience within that context? So if my context is software engineering, which mine generally is, I want to hire somebody who understands software engineering, somebody who has experience and understands the philosophies of DevOps, who understands the practices and techniques that make sense to help teams be effective. Because a good coach coaches and teaches the team in practices they don't understand or aren't very good at, right? And in order to do that, you have to understand them if you want to teach those things.

    So at the very least, PSM3, then look at engineering competence, then look at product competence because they need to help coach the product owner, product management in building a better product. And then business, well, that's kind of business product/business, and then I guess it's called organizational evolutionary context, right? What skills and capabilities do they have in organizational change, in building relationships across the organization, in doing those things? These are the folks that can do it all are fairly rare, right? Folks that can do it all are absolutely fairly rare. I agree there. But if I've got somebody just for a team, I probably need mostly, if it's a new team, mostly engineering support with a little bit of business and a little bit of org.

    If I'm hiring for somebody who's looking across multiple teams, I probably have the engineering as maybe not as important, but the business context is much more important. And if I'm hiring somebody who's looking across the whole organization, then the organizational transformational mastery is the most important. But I still want business context, and I still want, I'm calling it engineering context, right? But the context, the work context on that end as well. So this is fundamentally why somebody like Satya Nadella is so hugely successful within the context and has absolutely turned a multi-million dollar business around. Because while he has engineering capability, he understands engineering, he understands the practices, he understands how important it is to spend time on learning and those practices and those things. He also understands business, which is how he made it up through management in the organization, and he understands organizational transformational context, right? How do you change an organization? How do you adapt it towards a new outcome that opens up new markets and new capabilities? And that's why he's the CEO, right? And he's been hugely successful at it. He's got a book, "Hit Refresh," definitely worth a read.

    This is what we're talking about. This level of competence is what's not there, and this level of competence is what we need to fix.
- id: tYDWv--taWI
  title: Story Points Velocity Martin Hinshelwood
  description: Join Martin Hinshelwood as he unpacks the concept of story points velocity, enhancing your understanding of agile project management and team performance.
  captions: ""
- id: Tye_-FY7boo
  title: 'Vision, Value, and Validation: The Keys to Successful Product Management'
  description: "Unlock the secrets of successful product ownership! Discover Vision, Value, and Validation in our essential guide for aspiring product owners. \U0001F680✨"
  captions: |-
    One of the five things that I would teach a new product owner is about vision, value, and validation. One of the common things that happen in organizations as they start to move from focusing on project delivery to focusing on product management is that they take out all of the things that you think of as traditional project management, like the milestones and dates and Gantt charts and project plans. We take out those things because they're not agile, but then most organizations don't replace them with anything, and you end up with this vacuum in the middle where we're not going to do any planning, we're not going to do any forecasting, we're not going to really understand what it is we're doing. We're not going to explain to people what it is they need to do. Instead of giving them the plan, we're just going to say, "Here's the product, get on with it," and then we expect magic to happen. That is an absolute recipe for disaster. 

    Don't do that. What you need to do is fill that vacuum, and as a new product owner, this is the key part for you to understand, as well as for you to be able to engage and communicate to other people in the organization, up, down, sideways, whatever it is. Do you understand the vision of your product? Do you understand what it's trying to achieve? If you don't, that's step number one. Figure out what the value is in your product. What's the vision? What is it you're trying to achieve? Where are you going? What's your North Star? 

    Once you figured out that, and you can communicate it, you have to learn to speak in front of people and engage them in that story because you need to engage them in that story. Then you need to think about the value that you're going to deliver. Are the things that you're delivering in the product actually serving that vision? Are they working towards that vision? What is it that you're trying to achieve? 

    Then you need to think about validation. How are you going to check that you're actually making progress towards those key ideas? That you're actually making progress towards your vision with the value that you're delivering? Is the value you're delivering even value at all? You might think it's value, but do your customers, do your stakeholders, do the people who are using it think that it's value? 

    This is a key major thing that we talk about in the Professional Scrum Product Owner class. We dive even deeper in the Advanced Product Owner class, but ultimately that vision, value, and validation is what's supposed to fill that product management vacuum that occurs when we make that transition from project management towards product management. 

    That doesn't mean that there are no project managers anymore. That is absolutely not the case. Project management is not being deleted from our working. It just becomes one of the tools. The focus is the product. We want to deliver the most successful, most valuable product that maximises the value creation in our organisation, rather than focusing on the project, which you can be on time, on budget, with the features that we asked for, and still be unsuccessful. 

    From a project manager's perspective, from a project's perspective, we can still be successful and not have delivered any value. That's why that transition, that focus, and that's why when you take away those pillars that project management uses, you need to replace it with something else. The answer is vision, value, and validation. 

    If you find it hard to identify how you can enable vision, value, and validation within your organisation, my team at Naked Agility can help you or help you find somebody who can help you. Don't let these sorts of issues inhibit your ability to deliver value and maximise the value creation in your organisation. Use the links in the description to seek guidance as soon as you can.
- id: TYpgtgaOXv4
  title: The Importance of Product Backlog Management in Today's Agile Landscape
  description: Discover why Product Backlog Management is crucial in today's Agile landscape. Join Martin Hinshelwood as he explores its rising significance in Scrum.
  captions: |-
    Product backlog management is getting lots of attention right now because it is one of the most deficient things in organisations that I and my colleagues encounter. Most organisations do not have adequate backlogs; they do not have backlogs that represent transparency in the work that needs to be done, and they don't have enough information for people who, even within the context of that organisation, context of that product, to be able to explicitly understand what that thing is and what you're trying to do with it. That is hurting the ability of teams to deliver value. It's hurting the ability of organisations to understand what it is that, what the heck, the teams are doing at all anyway. 

    That's why product backlog management is the biggest critical focus for organisations right now. If you want to have a discussion about your unique needs or situation, then please book a call or visit us at nakedagility.com. We also have our immersive and traditional public classes on our website, and we'd love to hear from you.

