{
  "id": "8Fu6k2S1Iwo",
  "title": "Continuous Delivery",
  "description": "Join Martin and Simon as they explore Scrum and Continuous Delivery, sharing insights and practical tips to enhance your agile journey. ðŸ“˜ðŸ“ˆ",
  "captions": "Welcome to another episode of Agile Actually. Today we're going to talk about tools creating more of a problem than they solve. What do you think, Simon? That looks like it triggers you alreadyâ€”tools complicating the problem.\n\nI love the quote from Grady Booch: \"A fool with a tool is still a fool.\" Just, and then you've got the corollary: \"But now they're a tooled-up fool.\" I think it's very easy to fall into the tool trap. I think this is a massive thing. How much do you include predefined packaged processes or practices in that word \"tool\" as well? Because I kind of do, right?\n\nIs Scrum a tool? Yeah, that's a good one. It depends, I guess. It depends on your perspective, right? Scrum could be a tool from one perspective; it could be like a collection of tools that are put together into a technology. I tend to think of Scrum as a technology rather than specifically as a tool, but there's some synonymous nature between those two terminologies, right? Words are fun, right?\n\nBut for story points, it's a tool. Yeah, well, yeah, so it's a device or implement used to carry out a particular function. So if we say that's what a tool is, I really like the fact that Ken and Jeff called it a framework. So it's a collection of aspects that help you achieve a particular purpose.\n\nI think it'd be useful for this not to get into a framework methodology discussion. Sure, I think that's just Elmo those, right? So our little red friend can just jump out there. I think the idea behind the topic is that quite often tools should be there to help enable us to do the thing that we need to do. But quite often, they get in the way of doing the thing that we need to do because of some particular reason, perhaps because everybody in the organization is told to use the same tool. That could be a reason for it to get in the way, right? But it's not really a generic framework, right? It's a specific tool, and it's for a specific outcome. People have to use it for everything, and therefore you start having it used for jobs that it shouldn't be used for.\n\nAnd then we also have the boilerplating of tools, where a tool is configured or locked down or over-controlled. I've seen far too many people trying to work in an agile way, and the custodians of the tool, their job is the tool, and they lock the tool down so you have very little permissions to change it. So your team wants to innovate or try something differently, but you have to use this tool. Even selecting another tool is considered heresy. Varying the way the tool is used for whatever reason is considered a breach, and it then becomes an attack on someone's status to suggest a different configuration of the tool.\n\nSomeone will go off and read a blog article or something and then just put another bit of formula in it and lock it down and make this a mandatory field. Next thing you know, you're looking at a 700%â€”like that's a number, by the way. It was proven. I did this with a client. The tool we wanted to use versus the tool we mandated to use was a 700% increase in admin to the mandated tool as opposed to the preferred tool. The reason we wanted to use a preferred tool was it wasn't locked down.\n\nI've got another concrete example that I can even name. I can even name and shame the organization, and it's Microsoft. They had on the Windows team, in the old days, they used to have the Windows team's process. Your DevOps used to be up on GitHub, so you could go take a look at it. On the bug work item, there were 170-plus required fields in order to submit a required bug. You could not save a bug unless you'd filled out all of these 170 required fields. There would be some nonsense saved in that, right? Because not only some nonsense saved in that role, but there's the old adage that if you make something even a little bit difficult, you vastly reduce the instance of action, right? \n\nThat's why we have locks on our front doors. There's not a lock that anybody has on their front door that somebody who really wants to get in can't get in, right? But if you deter people enough and make it difficult enough, then most people don't bother doing it. And that's the same with anything you put in the way. The configurations, the complexities in the tool that you're usingâ€”anything that you put in the way vastly reduces the instance of people actually doing the thing you want them to do.\n\nWhich, perhaps, you don't want them to raise bugs, right? Maybe that's exactly why that ties into transparency. There's proven evidence that creating a culture that is more comfortable raising bugs, talking about incidents and near misses creates a culture of quality, which results in performance improvement and enhancement. But what we're talking about is putting the minimal sufficient obstacle in the road so that it just becomes too big. The activation energy is too great, so people don't do it.\n\nTypically, the way this has worked around in a lot of the enterprises I've seen is they then end up putting default information in these mandatory fields to get around that hurdle to make people use it. They'll just default fill it anyway, which means that you end up with more noise than signal. This is why in Azure DevOps there's a template option. I don't know if you've noticed on a work item you can click on the ellipse and create a template from the work item that you're viewing, and it will pre-populate a whole bunch of fields. Then you can just apply that template when you open a new work item.\n\nBut then you've got noise. Then you get noise, right? If that dataâ€”it's the same reason that I always have strong words when people want to template their work items, right? I've got whenever I add this type of backlog item, I want these 10 tasks to appear under it. But it has to be a user story, Martin. It has to be in user story syntax. That too has to be with story points. That's why you get backlog items in somebody's backlog that says, \"As a product owner, I want,\" or \"As a systems integrator, I want.\" Those square pegs in round holes, right? You're trying to fit something into a format, use a tool for a task that it was not meant to be used for, and then it ends up inhibiting value, reducing transparency because people can't really see what's going on.\n\nA good example that I hit recentlyâ€”same idea, that lack of reducing transparency. There's a little bitâ€”I know this is a tools conversation, so it's a little bit Azure DevOps, but when you put a work item in, you know how you've got the different levels in Azure DevOps? You've got backlog, and then you've got the feature level, and then you've got the epic level. You can call them whatever you want, and you can have up to seven levels, but that's effectively it. Out of the box, when you have a Kanban board, the board's viewâ€”it's not called a Kanban board, but board's viewâ€”there are boards and then task boards, right? Those are the two views on the board view.\n\nIf you default the columns to all of the states that are physically on the work item, right? So if the work item is new, approved, in progress, done, that will be the default column. Then teams can break them down and make them more columns if they want. In a team that I'm working with at the moment, and this is across an entire group, so there's about 13 teams working in this project, somebody's created a dependency work item, which is okay. This is like an external to this group of people's dependency that we want to monitor and track, but they've added it to the backlog level, and it has eight states that are completely different from the backlog item state, which means the default when you go to look at the boards is eight states. No, there's eight plus the back, right? So 13, 15, and it just effectively shits it all out, right? \n\nThen if you try and move a backlog item into a column that isn't a state on that backlog item, it zops back to the start because it doesn't know what to do with it because that state doesn't exist on that backlog item. But this is the infuâ€”that is a perfect example of a tool complicating already complex work. Yes, the tool is getting in the way, and there's two difficulties, right? There's somebody made a mistake; they didn't know it was a mistake, but somebody did something that reduced the effectiveness of the tool, made it harder to use the tool for the majority of people that are using it. They had good intentions, but they made it harder.\n\nAs soon as that is raised, it's a very easy physical fix, right? You just take that dependency and move it out of the backlog group, and you're done. It 100% fixes the problem instantly. But how do you get approval to do that? Well, this is an interesting thing that I'd like to call out a few aspects of that example. The first one is the whole lean approach of local optimization for a suboptimal whole, right? We're solving a very small problem in a big system, and we've just made it insurmountably worse for everyone else.\n\nThe second one is authorisation and the need for architecture, and this is something that is not discussed a lot. I know we talk about it in the PSD. My favourite course and my favourite version of it was the original version that you and I qualified under back in the dayâ€”five day one. We had a good at least day-long discussion about architecture and the \"ilities\" and the need for architecture and the fact that we start at a high level and we work down, and architecture is part of the planning process and how you do emergent architecture without ending up with that famous house, the Winchester House in America, right? \n\nBecause we've seen products like thatâ€”what you're describing as a Winchester House process. Just a quick pause hereâ€”anybody who hasn't heard of it, get on your favourite search engine and have a look at the Winchester House. A fascinating story, truly tragic. A wonderful collection of follies and architectural stupidities because there was no overall design or intent with it. And so with a tool, particularly enterprise tools, we need to have architecture in line with the organisational process. \n\nSo we have to have freedom at the team level, but it's done in such a way that one team changing something doesn't by default impact and roll out. It's trying to find that Goldilocks spot between some central body going, \"Everybody must do it exactly like thisâ€”no freedom, no flexibility,\" and each team coming up with some change that then ripples out and corrupts every other team. Yep, exactly. And I've worked in a lot of organisations where that's trueâ€”that there's some local optimisation, and sometimes it's founded in business need, right? \n\nThe example I'm thinking of is when I worked at Merrill Lynch. They have the people who make the real money for the business are the trading desk folks. Everybody else is supporting them. At some point, some tool that somebody wrote inside of the organisation got installed on a trading desk platform, and it disrupted the core trading desk software, right? Which is a big no-no because that's hundreds of millions every second it's not working. That thing's going to be a problem. \n\nSo they instituted a rule that every piece of software in the organisation has to be validated on that platform. But now you've created a bottleneck inside of the organisation. For example, I was building a small application that ran on call centre people's desktops that popped the calls for them. It connected to a database, listed all the customer data, allowed them to change and enter custom data, and then popped the tap interface to call that person so that they could do their sales stuff for selling, right? Completely different. But we had to go through that three-month process of getting our software validated on that environment. \n\nAll it needed was any software going on these machines needs to go through this process, right? Yes, to firewâ€”I remember a similar discussion when I was a software engineer at Nationwide Building Society. I got pinged a message from the security team that I was messing around with certain bits and pieces of the computer, which made sense given I was doing BizTalk development. If you've ever done BizTalk development, you will be familiar with this thing called the GACâ€”the Global Assembly Cacheâ€”where you put assemblies that you wanted BizTalk to consume. \n\nIf you're doing local development, you had to do some food, right? You had to do some dance, and of course, this flagged up and hit security like, \"This guy's messing with some really fundamental.\" It's like, \"That was a monitored folder.\" It's like, \"Yeah, yeah, I'm just doing what you're paying me for.\" But this can happen. So is a process or tool, Martin? This is where we're sort of heading towards. Do processes become tool-like in their manifestation? \n\nI think processes become tool-like, and I'm going to say this in a bad way if they're used like tools, right? A tool is something like a hammer. I don't alter the hammer in order to use it effectively in different circumstances. It's a hammer, right? The shape of the hammer is the way that the manufacturer intended it to be. Me modifying that hammer is not something I can't imagine 99.9% of people out there modifying their hammer in order to have a different outcome or to use it in a different circumstance. \n\nThere might be the odd occasion where tools have multi-purpose, and somebody's figured out some weird thing that you can use a tool for that works pretty well. But in general, the intended use for the tool is the use that you're going to use it for. If you treat practices like thatâ€”whether it's story points or planning poker, right? That's a practiceâ€”how to get story points. The three questions, whichever three questions you like, whether it's the daily scrum three questions or the sprint retro three questions, right? \n\nIf you treat that as a tool, i.e. this is how you're going to do things, this is the only way to get to this outcome, this is the only way to use this thing, then it becomes a tool and potentially inhibits. If you're using it in the wrong circumstances, the way you're saying that, I'm noticing a very strong parallel towards the process management tools that we were talking about earlier. Whenever we become too constrained in how we apply the tool, yep, when it becomes too locked in, it increases the complexity of the problem.\n\nI think this is one of the reasons we're both fond of Scrum. We're fond of the principles of agility because if you lean into the lightness of it, where we allow our teams to riff within the context and the boundaries of the framework, if we know what the constraints are and they can use the framework and they're allowed to experiment and play with that to find what works for them, when we start locking things in and over-mandating it, we then start limiting the capacity and capability of the teams to deliver, right? \n\nSo it's at that point, be it a business process, be it a tool, physical, virtual, whatever, we're then making the problem complex. The interesting thing is when you increase the magnitude of complexity, it very soon tends toward the boundary of chaos. If we're thinking of the Kanban framework, right? Because it becomes very, very unpredictable, and the manner in which we behave becomes unpredictable as well, right? \n\nIt's sometimes easy to do the same thing over and over again, and quite often the processes get codified in the tools as well, right? A good example of that for meâ€”again, I, your DevOps user, not a Jira user. My claim to fame is I've never actually touched a Jira instance ever in my life. I think that's a pretty good claim. But I do play with Azure DevOps, and there's a thing that I see teams doing in retros all the time. There's a plugin for Azure DevOps called the retrospectives plugin, and it has columns where you add cards for what went well, what didn't go well, what do you want to improve, what do you want to keep, right? \n\nSo there's those columns, and then it has a way for people to vote on those items to surface what items do we want to talk about, do we want to deal with, and then it has a \"What are you going to do about it?\" page. The idea of that is great, right? It sounds like it's something that you want to do, but if you've been using it for the past 20 sprints, suddenly perhaps it just becomes a mechanical thing. It becomes just a tool, and there's no emotion in a tool. There's no connection to the scrum values. \n\nYeah, that's what I was looking for. There's no connection to the scrum values, and scrum itself can become a tool for organisations. There's a reason it's called the Scrum Guide and not the Scrum Rule Book, right? It's notâ€”there is an organisation out there that sells their Scrum study book, and I think they've managed to get the four pages up to 208 and every something. Yeah, yeah, yeah. A massiveâ€”here's the Scrum Rule Book, right? Scrum body of knowledge, there you go. You want Scrum in a project-managed way.\n\nSo how do weâ€”so we're saying aâ€”let me stumble around and find the question here. We're suggesting that overly constraining means that business practices, tools, whatever, become more tool-like when they become mechanical in operation. We want to maintain empiricism and the ability to live the scrum values when we're doing stuff. What advice or what steps could you think of to help somebody if they find their organisation is becoming overly mechanical, like in Azure DevOps? \n\nThey've locked it down too far; you can't get this out, or they're usingâ€”they weaponised retrospectives, or everybody has to complete mandatory this or that, or even the reporting on retrospective output. I find a topic of concern because you might shut down openness if you know that the grand poobah of division X is then going to have a look at your retro output. \n\nWell, Iâ€”I, yeah, and a good example is also totally outside of the core agile space is procurement as well, right? Where companies have processes in place and treat everybody the same when not necessarily is that true, right? You end up withâ€”that's the reason I've fallen in love with lean agile procurement because it applies the values of lean and agile to the procurement process. \n\nIf we create a discussion space, we can get through a lot of which has become very structured and template. I think you and I have both completed bids for multinationals where it took you the better part of three working days to fill out a 700-pageâ€”that's a mild exaggeration, but not by much. \n\nOn my current engagement, I've probably spent a total of at least 10 days on admin stuff. We need admin, right? There is a need for it, but how do we create that space where we can focus on the value delivery and reduce the bureaucracy? This is where I feel like there's a word that's used a lot in the agile space that people misunderstand, and I feel like I used to misunderstand as well, and that's the word \"emergent.\" \n\nWe talk about the processes and practices that we need emerge over time, right? We talk about that in the case of Scrum. We talk about it for everything, whether it's procurement, whether it's anythingâ€”your processes in software development, your processes and practices, and the tools you need, the processes you needâ€”all emerge over time. I always used to think many moons ago that emerge means \"boop, now it's here,\" right? \n\nBut emerge also means the continuous shifting of that thing over time, that a process or practice might emerge and then go away, and that's part of that emerging. What you need emerges over time, and that idea of the constant shifting of processes, practices, and toolsâ€”what you need goes against that idea of we just have one thing, one way to do it, right? That's that imposed one way to do it. \n\nSo whether that's we're all going to use user stories, right? Or we're all going to use story points, or we're all going to use a hammer, and every problem is a nail, right? Or procurement, right? Everybody's the same. So when I'm filling out the vendor form, I have to fill out a delivery address even though I'm delivering it virtually. How does that make sense? \n\nOr, you know, whatever. I mean, that's a little thing, right? But that's part of that process. So how do you create those processes that are more dynamic, that take into account of that emergent nature of what you might need over time? But businesses are designed to codify the way you do things and then enshrine them and lock them in, right? \n\nYou've tightened up all the bolts, and now it can't move anymore. I think there's multiple parts in the way I would reflect back what you've said. I think the way you're describing the process is becoming locked in is very Taylorist. It's that whole concept of best practice that onceâ€”oh, hang on, that's just Homer telling me what time it is. \n\nSo it's Taylorist in the fact that we will achieve best practice, and this is the older predictive way of doing things. Because project management is an adaptive thing. Now, if we lock ourselves into a space of best practice or known way of doing things without allowing or tolerating processes to ebb and flow, it means our organisations are more robust. \n\nThis is the difference between robust, resilient, and antifragile. A robust organisation will be able to withstand the buffets of a turbulent world, whereas if we build resilient or antifragile organisations, they're more organic, and they will be able to adapt and change, responding to various stimuli. This means that they will have a process for deprecating processes, right? \n\nAs part of their adaptation, they can bin stuff; they can bring in a different process. They will be able to respond more quickly. I love the quote that the whole point of agile is to turn on a dime. For a dime, to be able to pivot, to be able to respondâ€”that ultimate essence. But because agile's 25 years old now, roughly, it's now mainstream. \n\nIt's only the late adopters that are coming around to it. You know, there's a few pockets of our organisation where it hasn't been. The early majority have already hopped on board with agile, and it's now getting into the late majority, right? \n\nBut how do we bring in this concept of resilience, the whole antifragility thing of that empiricism, living the values? In response to your question, how do we do that? I think it comes down to having clear principles. If we have a good business strategy and good principles, then we just let our people be awesome within the boundaries of business strategy and core principlesâ€”not rules, right? \n\nThat's principles, not policies. Anytime you have a policy, you're enshrining one way to do something. When you have a principle, you enable people to make choices within the bounds of those core principles. It's like if we're designing a well-engineered piece of software. Many moons ago, I was a software engineer, so I sort of lean back to that. \n\nThose principles of, for instance, SOLIDâ€”writing good code that aligned with the SOLID principlesâ€”allowed you the freedom to find the optimal solution within your context, within your constraints that aligned with those principles to make it more maintainable, durable, testable, etc. \n\nNow that we've moved out of that, some of the object-oriented space, we're moving on fromâ€”we're into the world of microservices and architecture like that and DevOps. The rise in DevOps means we need to lean into the principles of automation, of faster feedback loops, of zero touch, right? But its principles give you elbow room. \n\nThey give you room to experiment, to try different things, to see if a slightly different way is a better way to do something. For lots of organisations, I feel like it's thatâ€”and I do definitely agree with youâ€”is that Taylorist view, that turn-of-the-century Industrial Revolution thinking where businesses existed in very sparse markets, right? \n\nSo they could afford to say, \"Here's the one way we're going to do things,\" and build a business around that one way we're going to do things. But today, the markets are so competitive and so shifting thatâ€”there'sâ€”I can't remember what it's called. There's a name for when you've got too many species in an ecosystem all competing for the same niche, right? \n\nSome of those species are going to die out because they're not going to be able to adapt toâ€”somebody's going to be better at it. Same reason that modern humans out-evolved the Neanderthal, right? We probably killed them off because we were the more aggressive, maybe more thinky, solving problems. Well, evidence suggests we interbred with them, but sure. \n\nBut yeah, that whole emergence, that responsiveâ€”as you were talking, I just kept thinking of that buzz phrase that's been around for a while now of VUCAâ€”volatility, uncertainty, complexity. It also reminds me of back in the olden days, like when you're talking about this, the days of sail when the Dutch, French, Spanish, and English were chasing each other around the world's oceans, colonising and pillaging and destroying the world. \n\nThe British quote for Friday was, \"A willing foe and sea room.\" It's interesting that that style of leadership, where once they were out, if they were out in their ship, they decided there was a lot of freedom and latitude, but there were some core principles that guided it. If we can think of creating a space of autonomy based upon a direction and principles within our teams and enabling some clear boundaries, I think this is the thing most organisations really struggle with. \n\nWhat are the constraints and boundaries of your tooling, of your process, of your communication, of your problem space? If we can nail that, then we can do it. Because according to the Scrum Guide, the team has flexibility to choose tools that help them the most. So they should have a mechanism to choose a different tool. But that sounds hard, Simon. \n\nI think it was Teddy Roosevelt who said that nothing worthwhile in life is going to be easy. It's hard to come up with principles because you're thinking about what is the core thing that I'm trying to achieve. Whereas it's much easier to just say, \"Here's a set of rules that you have to follow,\" not why you have to follow it or what you're trying to achieve as the outcome. \n\nIt's also much harder to check against principles. It becomes very nuanced. It means you actually have to talk to people. I am concerned about your compliance, or I'm concerned about how you're enacting this particular principle. I don't think you are. Let's discuss this. It means that our leadership style must become more collaborative. It must become more intent-based.\n\nBecause you and I could both enact a core principleâ€”say we're talking about the principle of transparency. You and I could both enact it in slightly different ways, both honour it within terms of our context, but it would appear radically different. So it would require a conversation, right? Intent-based leadershipâ€”if anybody's confused by that term, have a read of a book called \"Turn This Ship Around\" by David Marquet. That would lead you in the right direction for what they mean. \n\nIf you can't be bothered reading the book because you're not a reader, there's also a 15-minute YouTube video that alsoâ€”yeah, and also, yeah. There's a hugeâ€”like US military created some good things thinking in this space. General Stanley McChrystal, \"Team of Teams.\" Jocko Willink and Leif Babin with \"Extreme Ownership\" and followed that up with \"The Dichotomy of Leadership.\" \n\nDavid Marquet, \"Turn Your Ship Around.\" You know, there's some good thinking in this space. More recently, there's also a bunch of stuff around red team thinking as well, which I think brings into that space too. Yeah, it's a lot of it is principle-based and the need for adaptation. When you're in the middle of nowhere with no ability to get help from anybody, rules don't help, right? \n\nYou need the principles to have the freedom to make decisions within the bounds of those principles so that you can be the most effective you can at whatever your mission objectives are. Be clear upon your mission and be willing to adapt. I do alwaysâ€”I have a thing that I say. I'm actually looking for you to correct my saying. I was always asked people, \"When did they believe that the military stopped believing in command and control?\" \n\nMy usual answer is when Napoleon defeated the Prussian army. Napoleon was the first military leader who pushed responsibility down the organisation. Whereas in the Prussian army that he was fighting against, the soldier on the battlefield had to ask a sergeant, who had to send a runner to the lieutenant, who had to send a runner to the major, who had to send a runner to the general, and then all the way back down the chain to get the answer to what should we do next. \n\nI would suggest there are many, many instances of that still being the predominant way of thinking a lot of the time. The Special Forces definitely have more freedom, you know, the elite units. But you have a look at the history. We got a big danger of digressing here. Sure, that's the whole reason that World War I turned into such a meat grinder is that it was the people hiding in Berlin and London putting some stuff around the map and not enabling free thought. \n\nThe whole reason that the disaster of the Gallipoli landings and the failure of that was because a general decided halfway up the hill that the ANZAC could have taken the top of the hill, fortified, and then pushed through. But some clown decided it was time for a tea break halfway up, which gave time for the Turks to reinforce. You've got immensely capable servicemen on both sides, but then just basically dug in. \n\nAll I'm thinking about when you're saying that is Blackadder, Simon. That's all I'm thinking aboutâ€”that arity of that going over the top in the trenches. Oh yes, you forgot your stick. Ah yes, I'd hate to face a German machine gun without my pointed stick. Thank you, Baldrick. Yes, exactly. \n\nLet's bring it back to the topic. Tools adding to the complexity. So basically what we're sayingâ€”and we went on a flight of fancy, as we tend to when we both start discussing. What we arrived at is it is possible to use a physical, virtual, or business process as a tool that increases the complexity, that boosts the amount of effort you and your team have to expend to be able to achieve sometimes even the most simple of tasks. \n\nBecause it's just unnecessary, unworldly, painful, etc. So people will either not use that process tool, and you'll then end up with stuff off the books. What we're saying from that is the more efficient and effective way of helping teams achieve greatness is by tapping into core principles. Much harder to do, but it enables more latitude and freedom within clear constraints. \n\nIf so, there's thenâ€”maybe this is a good segue into that idea of autonomy versus alignment, right? Generally, alignment is often fulfilled through tooling, right? People align through tools. If a practice is built, it becomes a tool, right? How do we tell the difference between alignment that might hinder the team a little bit at the lower level? \n\nThey've got something extra to do that is needed in order to be all going in the same direction versus the things that people come up with for us to do at that level that just hinder for little or no perceivable value or outcome, right? How do we tell the difference between those two things? \n\nI got to fall back to my natural Scrum Master stance and just ask the team, \"Is it helping?\" They don't make it harder than it has to be. This is what we're sayingâ€”don't overcomplicate an already messy and complex situation. Ask people if it's helping, and this is where alignment of a purpose is so important. \n\nYou know the apocryphal story of JFK visiting NASA, and he bumps into a chap mopping the floor, and he goes, \"What are you doing?\" And he goes, \"Me? I'm helping put a man on the moon.\" You know how many times have you worked with people in a team where they don't understand what the business strategy is? They don't know the guardrails of their technical strategy. \n\nTo quote Lewis Carroll, \"If you don't know where you're going, all roads will get you there.\" Yeah, or if you don't know where you're going, how will you ever get there? Well, yeah, and the thing is if we don't know where we're going, you've got different people. You've got explorers who just can't wait to get over the next hill. It doesn't matter whether it's in the right direction as long as it's a cool and interesting hill. \n\nThen you've got other people who will not do anything unless there's a clear direction, so they just set up camp and then dig in. So you end up with thisâ€”basically, you create a diaspora within your organisation where people are just going off doing random stuff because you haven't put that clear direction down. \n\nSo we need a purpose, we need a strategy, we need a direction, we need ruthlessness on value. This is where we should be using evidence-based management, good leadership principles to do the hard work and define and work with your people to say what the values of your organisation are, what your strategy is, and what principles you're going to use to get there. Because then people can find out whether they want to be in or out of the boat. \n\nWell, even not just the values of the organisation, but what does value mean to the organisation? What does it mean to the business? Yeah, I very rarely encounter an organisation that alreadyâ€”and we're probably jaded, Simon, in that companies that are doing awesome at this don't call us for help, right? \n\nWell, they've got it in spades, right? But the thing is that it's that great quote from Band of Brothers. They're going into Bastogne, the regular infantry going out, and the paratroopers going in. A chap coming out says, \"You're going to the Germans are coming from everywhere. You're going to be surrounded.\" He just looks at him and goes, \"Son, we're paratroopers. We're meant to be surrounded.\" \n\nIf you, as a consultant, as a coach, are not comfortable in going and helping a client who will need help, you've picked the wrong job. Yeah, absolutely right. So I know there's a lot of organisations out there that are smashing this. There's a lot of organisations out there that have really good principles that are making it easy for people to thrive. \n\nI'm reading \"A Year Without Pants,\" which is a story about WordPress. Great book, great read. WordPress were founded on this whole idea of just getting awesome people to be awesome, and virtually from the start, right? One of their core founding principles was open sourceâ€”that everything they did, people could copy and fork and spike and do whatever they wanted with that. That fundamental ethos of community-based development flipping it into a business enabled really super smart people to solve a very tough problem in an innovative and creative way. \n\nSo yeah, great call, great shout-out, great reminder, Martin, that there are some wonderful examples of this out there. But you and I quite often only see the companies that are not doing so well at this because they're the ones that call us that need help. So our view is a little bitâ€”if somebody asks us how many organisations do you see that are being successful, the answer is not many because the many that are are not the ones that need our help, right? \n\nWell, I've had some very short engagements where I've gone in and people have said, \"How are we doing?\" I go in and again, \"You're doing great. You don't need me.\" I always find if this was specifically a Scrum engagement many years ago, but if the customer says, \"We're doing awesome at Scrum. We don't know why we need your help,\" then you know it's going to be a total [___] show when you get there. \n\nBut if they say, \"Well, we're trying to do some stuff. We think we're doing okay. We're not really sure whether we're actually adding value. We need some extra help,\" then usually they're doing a lot better than they think they are because they've realised that they know less than they know. And yeah, there's a principle of learning that they're demonstrating, right? They're open to the understanding that they don't know everything. \n\nWhereas as soon as a company or people in the organisation are of the attitude, \"Why do we need to change? Why should we change?\" There's no interest in change because obviously the way we're doing it right now is the perfect way. And that's where the way we do things becomes a tool. So, \"Woody, woody,\" that's the way we've always done it. That's the way we've always done things, right? \n\nGet off my lawn is also a rightâ€”it's so easy to keep doing things the same way that we've always done things. It takes courage and openness and respect to do things in a different way where we might have friction, we might have difficulty. Things are not where we think they need to be in order for us to function at our best. But in doing that, in going through that journey, we discover a new way of doing things, a new way of working that can often be more valuable than what it was before. \n\nAnd I think you, on top of all the things you called out, it is going to require work. It's also going to require effort, and it's going to require some architectural thinking of where do you want to go and what are the boundaries that we need to emerge within together. \n\nSo we can apply the emerging principles of agility to our tooling, to our business processes, to the way we collaborate. But it's going to be a graft, right? Yeah, it's super hard. There's a lot ofâ€”it's a lot harder to do the right thing for the right reasons than to do the wrong thing for the wrong reasons, right? It's easy just to follow that, \"Well, this is the board we have. Everybody needs to use the same thing,\" or \"Everybody needs to do story points because then I can look at anybody's backlog and I know what it looks like.\" \n\nI know what it should look like. I know that pattern in my head. It should have, you know, as I want. So thatâ€”and as soon as it deviates from that, oh, my favourite oneâ€”my favourite one, Simon, this was from years ago. You'll like this one. This is Scrum becoming a tool or a thing becoming a tool. I worked with an organisation where the Scrum Master had just been fired when we got there. This was back when I was working in the US. \n\nWe went in, and we were trying to figure out what was going on. The Scrum Master had told the team that they're not doing Scrum, and he told them they weren't doing Scrum because they were not standing up during the daily. Let's put aside the fact that stand-up is not part of Scrum. Stand-up is an XP thing from 20 years before, right? But that's what the Scrum Master had said to this group. \n\nWhereas this group had decided as a groupâ€”the team had collaborated and decided that they didn't want to stand during the daily because they'd be towering over the disabled person in the wheelchair on their team, which makes perfect sense, right? And which, you know, is the very definition of self-organisation and fulfills the values of Scrum. But somebody coming in and thinking of Scrum as a tool, \"Thou shalt use it this way,\" cause thatâ€”and that's a really bad example, right? \n\nBut there's lots of smaller examples that have less overall impact, but it ends up being a death of a thousand cuts of makingâ€”we see these posts all the time at the moment, Simonâ€”that \"I hate Scrum because...\" or \"Scrum is a cancer,\" because posts that you see around at the moment. Usually, there's a list of, \"Here's why I think this,\" and none of it is Scrum, right? None of it is Scrum, right? None of it fulfills the values of Scrum. None of it even fills basic rules of Scrum, right? \n\nIt's withoutâ€”this is something I'm very fond of saying and shouting from the rooftops: \"Scrum without the values is a brutal tool of management and oppression.\" I would 100% agree with that, and that's the people hate mechanical Scrum for good reason. It's being weaponised and used to thump them with, whereas professional Scrum is founded in values, founded in empiricism. \n\nI think that's the pointâ€”that a tool used badly will wreak havoc, whereas a tool used well will help humans achieve greatness, right? If I use a chef's knife in the kitchen, there is a probability, depending on the day, that I might make a decent meal, right? It could be dodgy, just depending on what I'm fancying I'm following. But if I take that chef's knife away from the kitchen, it's very rare it'll find an appropriate use in the lounge room, right? \n\nYep, and it's that whole thing of using a knife as a screwdriver or, you know, a hammer toâ€”yeah, yeah, yeah. You know, it does not usually end well. Knife, no. So you might have bent the tip of the knife, and it'll only let you use flathead screws, not Phillips head. Or you're not jamming it in hard enough. Oh, okay, so probably I should go and get a sharper knife at that point, right? \n\nYeah, exactly, exactly. I wonder why I cut myâ€”how did you cut your hand? Well, you see, I put a screw in. What? Yeah, I think that's the overall essence of this topic, right? To toolsâ€”things that are tools and were designed as tools are often suited for a specific job in a specific circumstance. Using them out with that often has substandard or even negative results from using that tool, that capability. \n\nOften, we turn things that in other circumstances wouldn't be a tool into a tool by focusing only on the mechanics of the thing rather than focusing on the values and principles of the context within which we're working, right? So, yeah, thatâ€”to be agile, actually. See what I did there? Needs to be founded in values, and we need to really think about how we're living empiricism, being transparent, and inspecting and adapting. \n\nBecause there will be an edge case where we will take a tool of one context, apply it to another, and it'll be an innovation. Awesome, go! But also be willing to run it as a hypothesis and go, \"If we try this, this will happen.\" And if it doesn't, if we don't get the expected results, your hypothesis has been proven faulty. So just be it. So values, principles, mindful application, focus on valueâ€”let your paper flourish. \n\nYeah, that's absolutelyâ€”that's what folks should be doing. Cool. Well, I think we've done a nice little loop. I think there's a lot to think about in what we talked about. I think there's a lot to unpack for many folks. They might see tools in the practices that they're doing, but just think about the context. Bring in the context, bring in the values, bring in the principles, and see if it still suits the situation that you're using it in. And maybe you need to adjust the way you do things in order to be more effective. Be agile, actually."
}
