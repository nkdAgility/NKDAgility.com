[
  {
    "id": "KhP_e26OSKs",
    "title": " shorts 5 things you would teach a productowner apprentice. Part 3",
    "description": "Join Martin Hinshelwood in Part 3 as he shares essential lessons for aspiring product owners. Discover key insights to boost your agile journey! #shorts",
    "captions": "One of the key issues I see in organisations is the great difficulty that product owners, especially new product owners, find in getting your stakeholders to turn up for your Sprint reviews. Right? And oftentimes it's hard, even if they do turn up, to get them to provide you with feedback. Right? You ask them for feedback and all you can hear is tumbleweeds rolling through the desert. Right? You're trying to engage them and they're just not getting there. \n\nAnd that's, to me, a marketing issue. They don't understand the value of what you're showing them. They're not emotionally engaged in what you're showing them. If they were emotionally engaged, they'd be desperate to sneak into that discussion and provide that feedback, provide you with more information. And that is part of marketing."
  },
  {
    "id": "ki7fpThJiPw",
    "title": "Innovation does not need to cost a lot of money!",
    "description": "Discover how affordable innovation can thrive! Learn how Scrum enables rapid prototyping without breaking the bank in this insightful video.",
    "captions": ""
  },
  {
    "id": "KjSRjkK6OL0",
    "title": "What Does an Ineffective Scrum Master's Day Look Like?",
    "description": "Discover the pitfalls of an ineffective scrum master in this insightful short video by Martin Hinshelwood. Learn what to avoid for agile success! #scrum #agile",
    "captions": ""
  },
  {
    "id": "klBiNFvxuy0",
    "title": "What is the most common Aha moment people have in a scrum course?",
    "description": "Discover the common Aha moments in scrum courses that transform understanding and application of agile principles for effective teamwork and innovation.",
    "captions": ""
  },
  {
    "id": "kOgKt8w_hWY",
    "title": "Live Event - An Enterprise Evolution that Shows that You Can Too",
    "description": "Join us for a transformative live event showcasing enterprise evolution and inspiring you to embrace change in your own journey. Don't miss out!",
    "captions": ""
  },
  {
    "id": "kOj-O99mUZE",
    "title": "Overview of the 'scaling with portfolio Kanban' course",
    "description": "Unlock organisational efficiency with our \"Applying Scaling Portfolio Kanban\" course! Learn to manage project portfolios effectively and enhance value delivery.",
    "captions": "The applying scaling portfolio cbank class is really about how do we look at our system no longer at the team level but how do we look at our system at the organisation level at the programme level. Um, and what how how do we then understand, analyse the work and create effective strategies for enabling that flow of portfolio items through our system to increase the amount of value that we deliver for our products to increase predictability so that we can have a better understanding of which things are likely to be successful, which things we need to cut our losses on, um, which things need to be changed drastically in order to result in that value creation.\n\nAnd so it really focuses at for heads of departments, so agile coaches, project managers, development leads, high-level product owners, scrum masters and product managers that are trying to deliver lots of things, um, that may be competing things into production. Um, and they need to increase the flow through the system. Right, we want to deliver um more stuff more quickly. We want to get faster and more predictable um at delivery and those are all things that we're going to talk about in the applying scaled portfolio cbank class.\n\nSo this course will help um leaders in organisations understand the current flow through their system and ask more interesting questions about what they can do differently to improve the flow and predictability through the system. Um, so whatever your system is at that level, how do you understand what is going on in portfolio and increase that flow of delivery of work for the business and increased predictability?\n\nIf you want to have a discussion about your unique needs or situation, then please book a call or visit us at Naked Agility. Um, we also have our immersive and traditional public classes on our website and would love to hear from you."
  },
  {
    "id": "kORUKHu-64A",
    "title": "Scrum is like communism, it doesn't work. Myth 5.",
    "description": "Uncover the truth about Scrum governance! Join Martin as he debunks myths and reveals the balance between flexibility and compliance in product development. ðŸš€",
    "captions": ""
  },
  {
    "id": "KRC89A7RtrM",
    "title": "Some of the features of Team Web Access are not available to you in TFS 2013",
    "description": "Discover why some Team Web Access features are missing in TFS 2013 and learn how to unlock them in this informative video!",
    "captions": ""
  },
  {
    "id": "ks38bwDTVfM",
    "title": "What are 3 things you would recommend for a scrum team who are struggling to get work completed?",
    "description": "Master Sprint planning with expert tips on defining 'done', avoiding overload, and managing technical debt for a more agile team! ðŸš€ #Scrum #Agile",
    "captions": ""
  },
  {
    "id": "kT9sB1jIz0U",
    "title": "Why I love hierarchies of competence",
    "description": "Discover why Martin Hinshelwood prefers hierarchies of competence over control, empowering experts to drive success in agile environments. #shorts #agile",
    "captions": ""
  },
  {
    "id": "kTszGsXPLXY",
    "title": "Getting started with Kanban.",
    "description": "Discover how to effortlessly launch a Kanban pilot in your organisation, tackle common challenges, and leverage metrics for workflow improvement!",
    "captions": "So how easy is it to get started with Caman? To have a pilot, to try something, it's super easy. Pick a team, apply a Caman strategy. It's really that easy. Sometimes it's difficult to convince people. People behave how they're measured, so normally it's the traditional metrics and measures within the organisation that prevent you from doing some of these things. But there are tools out there that can help. Most folks today are probably using either JIRA or Azure DevOps to manage their work, since most of us work from home quite a lot of the time, right? So we don't have the boards on the wall anymore; we don't have the opportunity for that.\n\nUsing JIRA and Azure DevOps, get access to some of the data analytics, look at some of the data, look at the Caman data, look at the graphs, and see what's going on in your current system. That's see what's going on, and then get together and run a workshop. Run a workshop on defining your definition of workflow, defining how the way it is you work just now. Start to have those conversations, but don't thinkâ€”absolutely do not thinkâ€”you can have a two-hour workshop and then you're done. That two-hour workshop is just a start for starting people thinking about how they work because most people don't really understand how they work. They don't understand how they work because they just do it. They just do it the way they do it. They've never had to write it down; they've never had to discuss it with each other. \n\nYou start having very interesting conversations with the team. That arc of conversations kind of needs to play out, right, in order to get to consensus of this is the way we agree how we work. Once you've got that agreement, you're doing Caman. But you can just start with the metrics, right? Sometimes using metrics to kind of drive people's behaviours can be super valuable. So if you started recording the cycle time from when work starts to when it finishes in the system and just start looking at that dataâ€”how long does work take on average to go through the system? How long does an individual item take to go through the system? \n\nThen you can look at something like a cycle time scatter plot and look for outliers. This is something that you actually don't need any buy-in from anybody in the team or anybody in the organisation to do. Load the current data from Azure DevOps or JIRA into a tool that lets you visualise the Caman metrics and look at what's going on. Start asking more interesting questions during your meetings and events that you have with the team. When you see those outliers, that piece of work that took, you know, we do two-week sprints, and there's a piece of work that took 430 days to complete, right? Ask that question at the retro: why did this take 430 days? What could we have done differently? \n\nThat's asking more and using the data to ask more interesting questions. As you start asking those more interesting questions, hopefully somebody on your team or in your group or a leader will ask, \"How do you know? How did you see this? How did you spot these things?\" You can start introducing little pieces of Caman, saying, \"I'm using this cycle time scatter plot. It's showing that all of these items are above the 95th percentile; these are the outliers. So I'm asking questions about these and why are they like that, and how do they go together?\" \n\nOh, that's really cool! Is there any more data like that? Well, yes, there is. You can start having those conversations. So I think it's very easy to start using Caman in the organisation. All it takes is any individual on the team to start analysing the data and looking and suggesting optimisations for the team, trying to build some credibility so that you can start having discussions about the definition of workflow. You can do it ninja, right? You can say, \"Well, how do we pick?\" You know, doing the retrospective, \"I'm interested in how we all pick the next piece of work we're going to do.\" \n\nOh, well, I do this, and I do that, and I do the other thing. Start pulling on those threads. Just start pulling on the threads. So ultimately, how easy is it to create a Caman pilot in your organisation? Super easy. Just do it. It just needs one person to start looking at the data, one person to start asking more interesting questions. If your current system of work is failing you, then you would benefit from creating and applying a Caman strategy. Our professional Caman trainers and consultants are ready to help. Don't wait; the sooner you start, the sooner you'll improve. Get in touch below."
  },
  {
    "id": "kVt5KP9dg8Q",
    "title": "Detecting Agile BS: Lessons from the Department of Defense",
    "description": "Is your development ecosystem truly Agile? Discover insights from the DoD and learn to eliminate bottlenecks for seamless, innovative delivery! ðŸš€",
    "captions": "The final question for asking leadership within the organization is going to be a stickler. I see this in organization after organization being a difficult problem to discuss, and that is: is the full ecosystem of your project agile programming teams followed by linear bureaucratic deployment a failure? How many of you out there listening to this are working within organizations where you're able to continuously deliver to production, where there is no human intervention required between the developer submitting the pull request, being approved, and getting all the way to production? How many of you work in that sort of environment where there are no bureaucratic things in between you and production? There may be tests between you and production; it may take time for your product to roll out because it has to go through a set of automated, standardized checks, perhaps compliance things. \n\nI do work with a team that makes firmware for pacemakers, and you better believe they have a lot of compliance they have to meet. Their software, after they create their usable working item to ship, needs to run a gauntlet of external tests and validations, but they expect all of them to pass because they've done all the things to ensure that it does. So, it's unusual for anything in that story to be a failure that they have to have manual processes, right? That little bit of bureaucracy in their way, but only to protect people's lives. It's the absolute minimum needed to ensure that we protect people's lives. \n\nHowever, for most systems that we work with, we want to be delivering high enough quality to our business that we're able to remove a lot of those traditional bureaucratic points in that story. For example, user acceptance testing. If you have user acceptance testing in your business, it's because it's a value centre. If your customer insists on doing user acceptance testing when you give them product, it's because it's a value centre for them. You give them product, and they find problems. Therefore, UAT has added value for them. Why are they finding those problems? They're finding those problems because the quality of the product that you're giving them is not high enough to pass the bar that they're expecting and that they're paying you for. \n\nIf it was high enough, then their UAT wouldn't find anything and would become a cost centre, and then that's a conversation about eliminating cost. If it's never finding an issue with your product, it's of no value to them to do it because your product is high enough quality. You should all be striving to have a high enough quality product that you don't need additional checks and validations. If you need to have something that somebody else wants to see as part of your process, bake it into your definition of done. Bake it into the way you build software so quality is so high you don't even have to worry about it. You can continuously ship to production. \n\nIf your answer to any one of these questions, or the answer of your business to any one of these questions, is no, we're not doing that, then you would probablyâ€”I probably wouldn't consider that you're already in the agile space, right? You're not already agile. You might be working towards it, and you might have put in loads of effort, but unless you can mark every single one of these six questions as yes, we do this, this is how things work here, then we're still lacking. We're still trying. We're still working towards being agile. \n\nNow, this is just a litmus test dreamed up by the US Department of Defense, but they are probably the least likely place for you to expect something with this high a bar to have come from. I'm not going to go into a team and work with a team or a company, and if they're not doing these things, then I'm going to say, \"Well, you guys suck, you're not agile,\" because you're not doing this. That's not how we work towards success. \n\nBut I think it's hugely valuable from the perspective of self-reflection for you all to think about the processes and practices in your organization. How many of these six questions are you able to achieve, and what could you do to make it a little bit easier for the teams, for the people doing the work, to work towards this idea of not being agile BS?"
  },
  {
    "id": "KvZbBwzxSu4",
    "title": "The Strategic Imperative: Empowering Teams with Vision, Goals, and Direction",
    "description": "Unlock your team's potential! Discover how a shared vision and clear goals drive organisational success and empower informed decision-making. Watch now!",
    "captions": "Most organisations really struggle to enable the people that are doing the work in their organisation to understand where they're going and what they're trying to achieve. I remember working with an organisation in the US. This is just an example. Probably about 80% of the... no, must be more like 90%. This is anecdotal evidence from me consulting with organisations. Probably 90% plus of organisations, teams, groups that I work with have no idea what value means to their business. They have no idea what the strategic direction of their organisation is, and they have no idea what the current goal is for their organisation. \n\nCan you imagine that you're trying to do work, trying to decide what to build, trying to decide what direction to go, and you've no idea what that direction is? That's like being dropped in a field in the middle of nowhere and told to get to the nearest village, and you have no idea what direction that village is. You're just going to have to come up with a search pattern, and you're going to have to go try and search. Whereas what you really need is a map and a compass. That's what those things are, right? That is what this idea of vision and value is for an organisation. It's the map and the compass. Where are we going? How are we going to get there? Are we going in the right direction? How do we measure how we're going in the right direction? \n\nThat's why I talk about evidence-based management, right? How do we measure we're being more successful than before we made that decision? That's why I talk about hypothesis-driven engineering practices. How do we ensure that the ideas that we have actually have a valid story to them? Are we making the difference that we thought we were going to make with the investment we thought we were going to do? \n\nAnd that's why it's so important for senior management and leaders to grow their product management and product ownership capabilities in their organisation to understand how important that story is for organisations to have. Not just to have a goal and a vision, right, but for it to be articulated in a way that every single person in your organisation understands what that goal and what that vision is, and how the work they do every day contributes to it. Because if the work they do every day doesn't contribute to what it is your business is trying to achieve, then you probably shouldn't be doing it. \n\nAnd if we don't know what direction we're going, how do we know where even the big things that we're working on are supporting that goal and vision that we're trying to achieve? You need to have a North Star. You need to understand as a business what you are trying to achieve and be able to communicate that to everybody in your organisation in a way that makes sense to them. It doesn't matter if it makes sense to you, right? It has to make sense to them because they're the ones who are doing the work. They're the ones who are making the decisions. Every person in your organisation is making lots of little micro-decisions every day within the context of whatever it is they've been hired to do. \n\nRight? So software engineers are making engineering decisions. Architects are making architectural decisions. Project managers are making project decisions. Delivery managers are making delivery decisions. Every single day, they're not going to go ask you whether they're making the right decision or not. In order for them to be able to understand whether their decision is a good decision or not, right? Let's say they just have two options. You never have two options; you have like 50 options. But let's say you've got two options. And depending on the future, one is right and one is wrong. Maybe they're both right, but one could be right, one could be wrong. We don't know yet; it depends on the future. \n\nBut if I am making that decision and I understand more about the context, I understand more about the impact that this choice is going to make on the future, I can perhaps make a better choice. If I don't understand, I'm just going to randomly pick whichever one's my favourite, right? Because that's what people do. What do I think, based on the limited knowledge I have, is the best thing I can do? \n\nSo if you look at something like David Marquet's \"Turn the Ship Around,\" right? It talks about intent-based leadership. What do you intend as a business? How do you communicate that? Does everybody understand your intent? Because if they don't understand your intent, they're going to make bad decisions. You want them to make good decisions because they're going to make the decisions. Because in order for you to make the decisions, you have to understand everything that they understand. \n\nAnd you're hiring incredibly technical people these days, right? In the old days of big textile factories, management and leadership could make better decisions than the people on the shop floor because the people on the shop floor were largely an uneducated workforce. And you could maybe talk... even the foremen were probably not highly educated. They had anecdotal knowledge, right? They didn't understand the theory; they just understood the mechanisms of what's happening on the floor. \n\nYou needed to go up to management levels to get people to understand what it is we're actually trying to achieve as the business. What's the thing? So they didn't make any of the decisions at the bottom, but they weren't doing highly technical work that required lots of decisions. When you're doing simple things, when you're doing... let's say when you're doing complicated things, you can document them into simplicity, right? That's probably a good way... it's a terrible way to describe it, but anyway, you can take a complicated thing, you can write a bunch of documentation, create a bunch of rules, create a bunch of \"if this happens, then this happens,\" and you can provide standard operating procedures, right? \n\nSo you can provide those for people, and they can just follow them, and we're going to have good outcomes, right? Because by following that standard operating procedure, we're going to have the same outcomes every time. But in the world of complexity, when we are dealing with surprises, and surprises can be good or bad surprises and opportunities, right? Those vary too much, and we can't create a standard operating procedure because we will perhaps not be able to maximise the value that we create because we're just following the standard operating procedure. \n\nAnd lots of big organisations definitely fall into that trap of they have a SOP for everything. This is how we do things here. This is our bureaucracy, our red tape, or whatever you call it locally. And it inhibits the ability of the people in your organisation to make better decisions than the person who decided on the standard operating procedure, which may have been 10 years ago in a different market, in a different part of the business, for a different context. And now it's applied to everybody and everything equally across the organisation. \n\nAnd in some cases, it's a good decision; in other cases, it's a really bad decision. We want to make more right decisions and less wrong decisions, and that means everybody in your organisation has to understand what it is you're trying to achieve. And in order for them to do that, you as the business, you as leaders and management within that business, need to grow your understanding of how you communicate and engage with everybody in your organisation to ensure that they understand what you're trying to achieve and what direction they're going. \n\nAnd that means you can't just go install OKRs and have everything be perfect. You can't just write something in your vision statement and have everybody just follow it. They need to understand. Understanding is not a Boolean proposition. It's not something that you can standard operating bureaucrat your way into. It needs to be something that is personal, that is based on empathy, that is based on engagement with people. And for that, that's why we have a product owner. That's why we have product ownership capabilities. And in order to maximise the value that your organisation creates, you're going to have to help everybody understand what it is you're trying to achieve."
  },
  {
    "id": "KX1xViey_BA",
    "title": "Quotes: In the past the man has been first; in the future the system must be first. Frederick Winslow Taylor",
    "description": "Explore Frederick Taylor's insight on prioritising systems over individuals in management. Join Martin Hinshelwood as he unpacks this shift in thinking. #shorts",
    "captions": ""
  },
  {
    "id": "kXhJrisYofU",
    "title": "Agile Budgeting for Predictable Costs",
    "description": "Discover how Beyond Budgeting transforms financial management for agile teams, enabling flexibility and value-driven decisions in dynamic markets.",
    "captions": "In traditional budgeting, we take all, we spend a bunch of time once per year and have been a little bit factious but have a whole bunch of people in our organisation fight over how much money is going to be allocated to their pot, right? And then that's their pot for the year. They know that if they don't spend it, they lose it, right? If you allocate a million dollars to a particular project and they only use 500,000, next year you're going to be thinking of giving them 500,000, and it's going to be very hard for them to fight for a million, even if that's just the normal ebb and flow of what it is we're working on. \n\nIf something doesn't fit within, like we spend such a long time building the budget and balancing it, right? Like a, like a, like one I've seen, the budget that countries have, it's this massive, massive, massive book. We end up with not obviously as big as that because we don't have as many things, but a big book of here's what the budget is for the year. The problem is that five minutes after we've ratified the budget, that we put our stamp on it and said, \"Yep, that's our budget for the year,\" the market changes, the state of the product changes, ideas change. \n\nSo if somebody comes up with an idea that's not in the budget for this year, right? But the market opportunity is in a couple of weeks, we have enough time to build it, but we don't have any budget, right? That's maybe small enough that we can, there's discretionary funding, but let's say it was six months' worth of work, so it's a massive effort, massive endeavour, but huge, huge, huge payoffs. Then we'd probably do something, right? But where's that balance in your organisation? That level, that scale of the payoff versus the cost. We have the money; we have to go find where's that biting point and how much do we lose? How much value in the market do we lose because lots of things just don't quite hit that biting point because we're doing yearly budgets? \n\nSo there's a bunch of things around Beyond Budgeting, which is how do we re-do budgets in order to be more effective? But effectively, the result that you want for your organisation is that you can fund the things that make sense at the time they make sense, right? So in the agile world, we're getting working product in front of our customers as frequently as we can, right? So depending on what it is you're building, that timescale might change. The manifesto says from a few weeks to a few months, right? Scrum talks about 30 days. 30 days is the maximum amount of time between getting things in front of your customers. \n\nIf you look at the Detecting Agile BS paper from the US Department of Defense, they talk about every iteration, including the first, getting your product in front of real customers. So not just to UAT, not just merely test users, but to real production users. So you're going to production every iteration. If you're doing that, if you're getting to production every iteration, then that's your pivot point, right? It's not a yearly pivot point figuring out what we're going to do, but it's a much smaller pivot point. \n\nSo instead of allocating all the money at a single yearly point, we want to be ebbing and flowing. As you know, this project reaches a dead end, there's not much more value to be had, so we're not going to continue it. We're not going to do more sprints; we're not going to do more iterations at the moment. We're going to move it into maintenance mode, which changes its cost profile. And for other things, there's a new initiative. Some folks have come up with a great idea. Let's fund that. \n\nSo you're effectively looking at more of a venture capitalist or an entrepreneur-style budgeting model in that you're not allocating all the funding to projects upfront. You're allocating, you have a pool of finance available, like how much can we spend? You should know that on a regular basis. What's our capability? And then we want to spend as little as possible to get the maximum value, and that ebb and flow needs to happen. \n\nThe difficulty in the traditional model is I had a customer recently who were doing big things. It's manufacturing, and they're making big things, big expensive things. And they had a machine that was faulty. Well, okay, it wasn't faulty; it was just getting old. It was starting to make mistakes. It was creating less effective parts than the product needed, and they kept using it. The person who ran the machine wrote the business case for getting a new machine and started passing it up the chain. They did all the due diligence they needed to do, and it kept going up in the organisation because I think it was a 10 or 2 million spend. Therefore, it had to go fairly high in the organisation to get approval. \n\nIt got to somebody who looked at it and said, \"That's not on my budget for this year.\" No. And that, that's not in its budget for this year, no. It cost the company billions of dollars in recall calls to recall the product and resolve the issues that resulted from this machine that could have been replaced for 10 million dollars, and it cost billions. So that's why we need to do something different. \n\nThe bit that you don't see, like that's an obvious one, right? That's a catalyst for change because, oh my goodness me, we just had this huge cost. Why did we have it? Because of this 10 million dollars we didn't spend. Well, let's spend the 10 million. But the bit you don't see is your unrealised value. If you think of in evidence-based management at the top of the curve in your market value of your product, you've got unrealised value on one side and value on the other. \n\nSo you've got value that's in your product, your current increment, and then you've got unrealised value, which should be reflected in your backlog. But there's more unrealised value than is actually in your backlog, right? We want to be continually adapting that unrealised value as the market shifts, as opportunities arise, as things change in the world. And it's very difficult to do that within the bounds of a traditional yearly budget cycle. \n\nSo we need to adapt our yearly budget cycle into the context of we're not doing yearly projects anymore. We're building products, and a product has a budget, and they can allocate it however they like. Budgets for products tend to look like n number of people, right? The most, usually the most expensive thing, especially when we're building software, is the people. So this particular product has the budget to support 100 people a year on it. That's their budget cycle. And then within that budget cycle, they're deciding how they allocate it, what features they allocate to. \n\nWithin that context, that can be a kind of halfway where your organisation might still be doing yearly budgets, but you're able to adapt it to the product cycle. But there's more you can do. Take a look at Beyond Budgeting."
  }
]
