- id: hu80qqzaDx0
  title: Introduction to Evidence Based Management Excerpt 1
  description: 'Discover the fundamentals of Evidence-Based Management in this insightful excerpt, enhancing your agile leadership and project management skills. #EBM #Agile'
  captions: |-
    The way we measure people informs the way they behave. So whenever you're working within an organisation and you find somebody's working against you or somebody's not being as involved as you think they should be involved, and you're wondering why, there's probably some organisational measure or metric, something being levied against them, that enables that behaviour, that ensures or encourages that behaviour in that person. 

    So the best way to figure out why somebody is doing something in a particular way that maybe you feel has a negative impact on the way your things need to happen is to figure out how they're measured.
- id: hWyF6CbcbQ8
  title: DevOps Migration. Data Integrity Issues
  description: Explore data integrity in Azure DevOps migrations! Discover the trade-offs between full and selective data transfers for optimal results.
  captions: |-
    Here's what you need to know about data integrity and your DevOps migrations. You can't have everything depending on what it is you want to do. So there's a balance to be had between the fidelity of the data that you're migrating and the flexibility that you want as part of your migration process.

    As your DevOps on-prem was TFS, it has a database-based architecture. Right? So you have a whole database of data. If you're taking that whole database, the collection in TFS and Azure DevOps, if you're taking that up to Azure DevOps services in the cloud, as one thing, the whole thing, we're taking it together, then we have the highest fidelity possible. Right? We're effectively taking the entire database up with everything in it, in exactly the same format that it is just now.

    But for many organisations, that's not what they want to do. They have a couple of teams that want to go, or they have some teams that are able to go and other teams that aren't. So part of that migration process, we've built a bunch of tools that allow you to selectively slice out the data that you want to take. But it does mean lower fidelity because we're effectively replaying the story of the data against the new environment. Right? So we're not importing the database; we're replaying what happened with the data, and that means that there is a little bit of data loss. Things don't always go perfectly.

    But within that context of taking your choice of data, pick and mix from one place to another, it is the most flexible approach you can have.
- id: hXieCawt-XE
  title: 'Mastering Kanban: Creating a Pull-Based System for Workflow Efficiency'
  description: Unlock your team's potential with Kanban! Discover how pull-based principles enhance workflow efficiency, reduce waste, and boost productivity in this insightful video.
  captions: |-
    When you're implementing a Caman strategy, we're effectively creating a pool-based system of work. So, Caman kind of does this. There are three core practices to Caman: defining and visualizing your workflow, actively managing items in that workflow, and then improving that workflow. 

    Our ability to define and visualize that workflow as part of creating that Caman system means we need to decide what is the system that we're going to use Caman, a Caman strategy, to monitor. Right? So we define generally, and you'll see this a lot with teams, as they'll define columns. If they just stop there, it's probably not a Caman system yet. Right? It's not a Caman strategy if they just define the columns and then we're done. There's a little bit more to it than that. 

    Some of the minimum things that you kind of need at a minimum: you should have WIP limits. Right? At absolute minimum, you should have WIP limits. Those other things we should have, but definitely if you don't have WIP limits, definitely not a Caman system yet. 

    What we're able to do is decide what of the stages that our work flows through, but we also want to think about what are our wait states. Wait states are places where work stops because the next thing that needs to happen, the next activity, the next stage in the process is full. Right? There's no capacity. 

    If you think about, I'm trying to think of a good example. A good example is if you go to the hospital and you go to the waiting room and there are no seats left. Quite often, there'll be another overflow waiting room where people can go and wait to get into that situation. Then the people running that department in the hospital are going to be looking at how many people end up in this overflow. They're all waiting longer than we expect because everybody's waiting longer than we expect, and we don't want too many things in the system. Perhaps we need to reduce the number of people that we book on a particular schedule, right, in order to minimize the amount of time people wait and maximize the amount of people we get through the system. 

    That's more difficult for hospitals because they have to take into account people that cancel, people that don't turn up, all of those kinds of things. So, yeah, that's fun. But this idea of the wait state is really important. 

    So quite often for a stage, let's use a really simple visualization where you've got some kind of analysis, discovery happens, then some sort of development or doing happens, and then some kind of validation or testing happens, and then things are finished. You want to be able to indicate on your board, in your visualization, in your system, visualizing your system when things are complete from the perspective of analysis. Right? 

    But we've not yet started development, doing work on it. So if the analysis team just put it into the development team's backlog, and I'm using teams badly here, but the people doing analysis put it into the backlog of the people doing development, they're committing to that work on that other group's behalf. Right? They're putting it in their system inside of their view without permission. They're just dropping it in there. Even if they ask, they're kind of pushing that system. That's a push system. 

    If we want to create a pull system, then the folks in the stage before, so in this case analysis, they want to kind of have an analysis doing and an analysis done indication. That analysis done is a wait state for the next stage to look at that list of things that are done from the previous stage and then pull them in. But it still counts as time in that previous stage. 

    That way we can visually see when work piles up and see when we need to do something about it, like the overflow in the waiting room at the hospital. We want to be able to take action. Right? We want to actively manage the items in the workflow, which means we're going to be looking for those wait states. We're going to be looking for work piling up. 

    You might find if we're limiting work in process, which we should be in a Caman system, then if the development activity has four things that they can take and the analysis activity has four things, then perhaps the analysis work stops because they have four things in done, and the development activity has more things in progress/done, and we can't take on any more. 

    Analysis can't take any more because their WIP is four, and they then stop working. They say to the system, "We don't have anything left to do. We can't start new work because we don't have room in our system." Right? 

    You might think, "Well, surely they can just take on something else." But what if they keep doing that and don't stop and put up the flag and alert that we've stopped work? What if they just keep going? So they keep pulling work and dropping it into their done column, and their done column just gets bigger and bigger and bigger and bigger. 

    Perhaps the next stage can't pull from that list very quickly, and it means that the wait time, the amount of total time in the system for all of those things that are in that wait state is getting longer and longer and longer, and it's just waste. Wouldn't it be better if that group in analysis just put up the red flag and said, "We've stopped because we've got no more room in our system. The next stage has not filtered more down. What should we do?" 

    Right? In reality, if you're an engineering team working together, perhaps they go help the next stage down the line. Right? Maybe they can help out and help make that faster. Or perhaps we need to bring this up as a bigger thing for leadership and say, "We've got some kind of problem in the system, and we need to change the system in order to make it more effective so the things that we bring into the system flow through the system more quickly." 

    By creating a pull system, we actually create a system within which we can see, we can visually see when the system's not flowing properly, when the engine's not working properly. It will back up, and it will back up all the way to a point where we're like, "Okay, everybody in this line of all, every single activity is effectively blocked." Right? 

    It's not a blocked thing, but everything is constrained. And then, "Oh, this is where it's constrained because they're still working, and everybody after them has stopped." What's the problem? Do we not have enough people here to be able to process the amount of work that's going on? Are we taking on too much work into the system so it's flowing through too quickly for this? 

    Whatever the constraint is in this area, we need to figure out what it is and go fix it. 

    This dynamic applies both for a Caman strategy. Right? You want to be looking for those stages and thinking about how do we visualize them. But it also applies in the Scrum world as well. Scrum has a wait state built in because the developers select work during Sprint planning. Right? 

    So that's their moment for pulling work into the system, and then the system runs, and we see what comes out the other end. So we can apply a Caman strategy on top of that as well, in addition to the work-limited pool system that's implemented by Scrum, and add additional work-limited pool systems so that inside of the system that Scrum creates, we can break it up into other activities that allow us to see what's going on in those activities and where within the system that's implemented by Scrum where the actual activities are blocked, are stuck, are constrained, that we need to take action and we need to fulfil that final part of a Caman strategy, which is improving the workflow. 

    Not just actively managing it, but improving it. So we need to go take action and make a change. If you're struggling to create a pool-based system of work, then we can help you. We provide world-class Caman training from Pro Caman, as well as consulting and coaching for teams trying to implement a Caman strategy. If you're a Scrum team, then we always recommend bringing in flow metrics as a complementary practice and have Cang classes from Scrum.org as well.
- id: HZxho4-wvHc
  title: PAL In 2 minutes
  description: Discover the essence of PAL in just 2 minutes! Uncover its key features and benefits in a quick, engaging overview. Perfect for a fast-paced understanding!
  captions: ""
- id: i_DglXgaePM
  title: Slaying the dragons and how to successfully descale at scale with BCS & FoWS
  description: Discover how successful organisations are overcoming the challenges of scaling agile. Learn the secrets to effective software delivery and transformation!
  captions: ""
- id: I5YoOAai-m4
  title: Agile Coach Versus Professional Coach
  description: 'Discover the key differences between an Agile coach and a professional coach with Martin Hinshelwood in this insightful short video! #Agile #Coaching'
  captions: ""
- id: I9avUDYFw-E
  title: 'The Importance of Competence in Organizations: Building a Culture of Learning and Growth'
  description: "Discover why investing in team competence is vital for innovation. Happy, skilled people create great products. Let's foster growth and excellence! \U0001F331\U0001F680"
  captions: |-
    It's critical that we start investing in the competence of the people that we have, of hiring the right people, of keeping the people that we have that are competent, in supporting them in experimentation and learning and figuring things out. Because without them, we're not going to be able to create the value that we need. We're not going to be able to create the products that are going to lead to us being successful.

    The thing I always think about was an epiphany of mine many years ago, and that's that unhappy, sad people don't build great products; they build mediocre ones. Do you want to build mediocre products? If you want to build great products, you need to find great people. You need to find people that are happy. You need to create environments within which you encourage people to be happy. You encourage them to learn. You encourage them to care about what it is you're doing and the products that you're building.

    The first part of caring is self-care, and self-caring within the context of the work environment means caring about your knowledge and your capability and your competence and doing something about it. Just like if you care about your health, you eat well and you go to the gym. If you care about your competence, you learn and you practice. That's why it's so important that we have this focus on competence within organizations and stop hiring for a lack of it.
- id: iCDEX6oHy7A
  title: Ep 004 - Chat with Jim Sammons on professionalism and conflicting priorities
  description: Join us for a chat with Jim Sammons on professionalism and managing conflicting priorities in Agile. Tune in on 7th April 2020 at 20:00!
  captions: ""
- id: IcmNR--u-kg
  title: How will the immersive learning experience change the game in terms of entry level capabilities?
  description: "Explore how immersive learning revolutionises entry-level skills, enhancing practical application and problem-solving in workforce development. \U0001F31F\U0001F680"
  captions: ""

