- id: 7UZsdsD23rs
  title: What is empiricism and why is it so critical to great Agile?
  description: "Unlock lean-agile secrets with Martin! Enhance value delivery and team dynamics in fast-paced projects. Dive in for expert insights! \U0001F680 #Agile #Scrum"
  captions: |-
    What is empiricism and why is it so critical? 

    Yeah, I think in empiricism, so what is empiricism? That is a great question. So, empiricism is effectively inspecting and adapting. We hear that a lot in the agile space, and empiricism is we need to—something happens, we need to be able to see what happened, right? We will look at the data; that's the transparency piece, right? We can see what's going on—really what's going on, not vanity metrics, not all of that [ __ ], right? We can actually see what's going on.

    And then we're going to— we're actually going to look at it. So it's not good enough just to have the transparency; you have to go look, right? You have to go and analyse the data. You know, all those reports that you create that nobody ever looks at, they're all crap, right? You want to be actually—what data do you need in order to make different decisions? So we have the data, the transparency, right? Or what's going on—look at it, and then we change the way we do things. We change something, right? And that could be lots of different inspect and adapt loops. There's a bunch of inspecting and adapting loops, for example, baked into Scrum. That's why they call it an empirical process, right? It's implementing a number of different inspect and adapt loops.

    One of those loops is the daily, right? You've got a Sprint backlog; your Sprint backlog represents your transparency of the present—what's going on just now. And then every day, you're adapting, inspecting and adapting that backlog, continually adapting that plan towards completion of the Sprints. 

    You've also got the Sprint review, right? Continually adapting the product backlog and the product goal towards whatever direction you're going. That way, you're able to kind of steer in different directions as you close those feedback loops. 

    And then you get the Retro, which is the feedback loop for the process itself—our working agreement, right? Our definition of workflow. And every—at the end of every Sprint, we're going to get together and figure out what happened during the Sprint and how can we change this to make our lives in the next Sprint a little bit better, or my—our lives five Sprints down the line a little bit better.

    So there's three inspect and adapt loops just in that part of the process, and the entire Sprint is another inspect and adapt loop. Your customer, right? The stakeholders are engaging in that inspect and adapt process at the end of every single Sprint. They can see what you've done and can decide whether they want to invest in another Sprint, right? Do I—am I getting enough value, or is there enough potential value that it's worth me spending money for another Sprint, or are we done? 

    Right? Perhaps it was a bad idea, right? We're quite early in the process, and we had a cool idea, but it doesn't turn out it's very good. Or perhaps we're going in slightly the wrong direction and they need to twitch it over somewhere else—pivot, right? At the end of the Sprint, and figure out where we're going next. 

    That's the real power of inspect and adapt, and that's why organisations that have large hierarchies and the people that are making decisions are too far away from this actual work that's going on and aren't able to respond quickly enough to the market, right? Because either your market is either a commercial market, right? Your business is doing business with other people, or potentially for a product, your market is inside of the organisation, right? It's another part of the business that is delivering something. 

    And as their needs change or the market needs change, you need to continually adapt the features that you're creating, the direction that you're going, what you're supporting in order to best meet those needs because they're serving some other market as well that's constantly changing. So that's why we need those feedback loops. That's why we need empiricism, because we actually don't know where we're going. We might know what we want to—what we think up front we want to create for this product, right? 

    But what about who we're providing that product for? Is their capability, business direction stagnant, or is it constantly changing? What about what those people are creating their outputs for? Is that stagnant or constantly changing? And how quickly can we close those feedback loops? That's really what agile is all about.

    Thanks for watching the video. If you enjoyed it, please like, follow and subscribe. I always reply to comments, and if you want to have a chat about this or anything else—agile, Scrum or DevOps—then please book a coffee with me through Naked Agility.
- id: 7VBtGTlkAdM
  title: 1 thing that sinks a consulting engagement before it starts gaining traction?
  description: 'Discover the key factor that can derail your consulting engagement before it even begins. Join Martin Hinshelwood for essential insights! #agile #consulting #shorts'
  captions: |-
    The thing that will completely sink your consulting engagement before it gets started is the contract. If your contract states exactly what needs to be delivered, when, on what cadence, and how much it's going to cost, you're already screwed. That’s not the reality of the unpredictable nature of building products that don't exist yet. 

    If you sign up to those contracts, you're just gonna have a bad time. Make sure that you think about how you don't want anything in your contract that specifies exactly what you're going to deliver and when. You want to be talking about the outcome: what is it you're trying to achieve and what value are you going to deliver to the customer? Everything else is irrelevant.
- id: 7x7lsuwkcAs
  title: Bitrate for Joshua Partogi
  description: Explore the intricacies of bitrate with Joshua Partogi as he breaks down its impact on video quality and streaming performance in this insightful video.
  captions: ""
- id: 82_yTGt9pLM
  title: Agile Consulting Services overview
  description: Discover NKD Agility's Agile Consulting services in this video, where Martin Hinshelwood explains how we empower teams to thrive in agile environments.
  captions: |-
    Foreign. Consulting, that is a very nebulous term that people often have difficulty articulating what the heck that thing is. I have my approach to Agile Consulting. I have, there's a number of different parts to it. Probably the main part again is talking to people, helping people understand that there are other options to the way they do things. People kind of get a lot, quite often people get locked into one framework like Scrum or Kanban, and they don't realise that there's not really anything making them do that one thing. There's actually lots of choices in that story. What are the strategies that you need in order to be successful at building products, at delivering whatever it is that you're delivering as an organisation?

    And there's often quite a loose connection. People focus on delivery and they forget about the business as well, right? So a lot of Agile Consulting is helping them understand that this is not a tool for delivering stuff. Agile's just an idea that is a different way of working for your whole organisation, and how they can start bringing in some of those ideas into their organisation. So it's kind of filling that gap between that ideal world that training talks about and the realities of the organisation and where does the organisation currently sit on those Agile scales, and how do we start moving that needle so that they gain more ability, right? They get more, faster at being able to deliver stuff, tighter feedback loops, talking to their customers more, delivering more value, and ultimately making more revenue, right? That's the ultimate goal of most companies is to maximise the revenue for the effort that they put in. So being able to increase that.

    So having conversations at different levels in the organisations, whether I'm dealing with teams, right, and helping teams get better at building the product that they're building, or talking to people in middle or leadership teams who are orchestrating that across a much wider audience, either their whole organisation or in the professional services environment. So there's a lot of engaging in talking with people, running workshops, right? Helping them not just, there's almost two, there's two things that workshops are good for, right? Well-run workshops. One is that you get the outcome of the workshop, right? That's one, that's only one of the outcomes, but that's quite important. But the other outcome is, do the people that came to the workshop, did they learn anything that can make their work better, right? Did they learn how to run workshops better, how to engage with people better, how to converse with people better, and navigate that minefield that that's often called the grown zone, that battleground of people not agreeing, right? Which is very common. And how do you navigate that? So building up those skills in people that I work with, and that's a lot of Agile Consulting, is finding people in your organisation who are the people that need to be the ones that are doing the work, right? Because I can't do it. I'm outside of your company. I can't make changes to your company. That's not possible. It's not possible for a consultant to come and say, "Here, here's how you should run your business. Go do it," right? That's not how it works. The people in your organisation need to be the ones that make the changes, that understand the ideas, and the job of the consultant is to come in and effectively provoke change, help people think differently so they see what it is they need to do next. That's the hard part, right?

    But also, you know, a state of Agile reports, I've done those as well. Like, where's our organisation currently, right? Lots of organisations are quite large, and perhaps instead of just bringing somebody in to help them, they need to have a conversation first about what is the help we think we need, where are we right now, and where do we want to get to, right? That's an initial conversation. So I've done reports for organisations where I come in and I interview people at all levels in the organisation, create a report that talks about the current state of agility within your organisation, what are the opportunities for improvement, and what are the top three things that I see as the biggest problem.

    And then it's up to the organisation to have a conversation about whether they need more help or they think they can do all of that themselves, right? And quite often they do come back, but it can take a longer period of time, right? Because they go try things, they're trying to build momentum inside the organisation, and then a year later they come back around and say, "Can you come and help us with additional stuff or provide some training in a particular context?" Right?

    And telling those stories inside the organisation. So I think that's what I would quantify as Agile Consulting. You need lots of tools in your toolbox. I try and have as many tools as I can. I'm always learning and figuring out new tools and new ways of doing things, and then bringing that to the customer engagement, knowledge, experience, methods, theory, right, as well as tools and capability. What is it that what information is your organisation missing that I can provide you to help you move forward?

    Thanks for watching the video. If you enjoyed it, please like, follow, and subscribe. I always reply to comments, and if you want to have a chat about this or anything else Agile, Scrum, or DevOps, then please book a coffee with me through Naked Agility.
- id: 83JsLlE4Up4
  title: Ep 006 - Live Virtual Retrospective on PAL-e with Russell Miller
  description: Join Russell Miller for a live retrospective on PAL-e! Ask Martin, a Scrum Trainer and Azure DevOps MVP, your burning questions on DevOps and Agility.
  captions: ""
- id: 8aIUldVDtGw
  title: 'Stop Starting and Start Finishing: The Key to Team Success'
  description: Unlock Agile success! Learn to "stop starting and start finishing" for enhanced productivity and team effectiveness. Watch now for valuable insights!
  captions: |-
    There's a quote in Lean that says, "Stop starting and start finishing." It's been around for quite some time, and it's something that I use all the time with Scrum teams. While it is predominantly a Lean thing, there's no reason why you can't have Lean stuff in empirical stuff. There's no reason why those two things can't go together, and I think it's really important for teams that are doing anything. Whatever type of work that we're doing, we need to focus on finishing stuff, not on starting more stuff.

    The traditional idea is that the more work we have underway, the more that we're doing, which means that people and teams often juggle multiple things in what they do. When you're juggling multiple things, you tend to find that less stuff gets done because you spend a bunch of cognitive cycles context switching. If you think of the work that Gerald Weinberg did in his book "Systems Thinking," you might recall a graph that shows the number of projects underway and the amount of time that we lose to context switching. It's about 20% per thing. So, if you're doing two things at once, you're going to lose 20% of your time, and it's gone to context switching and your cognitive load.

    You're in the shower in the morning, and instead of the back of your brain solving the complex cognitive problems that will help your business be successful, the back of your brain is thinking about how to juggle these two or three projects. How do I keep these three projects' stakeholders happy? If the back of your brain is occupied with juggling those things, you're spending less time and focus on solving the actual problem that we're here to solve, which provides your business with value. There's no value to your business in juggling five things; all they care about is whether they are getting the value they expect.

    There is a big push, especially from leadership, but I think there's a little bit of a fallacy there. I don't think leadership pushes it; I think middle management pushes it because they are under pressure to get more stuff done. If you're sitting on a team and you have multiple masters, with multiple people telling you what to do, then you're the one who has to juggle those multiple things. One of the things we talk about in Scrum is having a single product owner. That single product owner is the focus for what we are going to do next, what we are working on.

    Depending on how your organisation is structured, this is not ideal. If you have multiple voices in your organisation, then the product owner becomes the funnel that allows the team to work on a single stream. The product owner has to deal with all the different stakeholders. I'm not saying the team won't help; the rest of the developers will help with that. But the product owner becomes that final say, that point of knitting together all those different ideas and threads into a single cohesive story so that the team has focus and can maximise the value.

    Lean talks about this as well, discussing having a definition of workflow. If you're thinking of a Kanban strategy, you're going to have that definition of your workflow. You decide what it's going to be, and you're effectively going to decide those things as well, like what things we work on. We're going to limit our work in process for sure, but then how do we decide which thing we pick? A lot of teams pick the oldest thing; whatever has been hanging around the longest is what we're going to pick. From the options, the stuff we haven't started yet, we might order that by whatever we decide as a team that maximises the value.

    You might order it by age, but I'm not sure that's the best idea. Ordering it by value would be best; have the highest value stuff we’re going to pick next, and then we pull things based on that value and need. Lean focuses on the idea of the virtual product owner for creating that loom, whereas Scrum talks about it as an individual, a person who is going to do that. But the outcome is the same: you have a much tighter, cohesive story and focus for the team, which is really important.

    That's why we need to stop starting work and start finishing work. Ultimately, the more work we have in progress, the longer it takes to deliver. You can see that if you've ever used a cumulative flow diagram. You can very clearly see when the lines of the amount of work you're starting and the amount of work you're finishing get further apart. The amount of things you have in progress is increasing. If you're getting further apart, then you're starting more work than you're finishing.

    If the lines are getting further apart, then the horizontal line is also getting further apart, and the horizontal line is your approximate average cycle time. As you start more things and haven't finished them, all of the things in the system take longer to deliver, and that's not what we want. We want to have as short a time as possible that we're working on things because that increases the throughput, the stuff delivered for the business. If we're focused on valuable stuff, it hopefully maximises the value that we're delivering to the business.

    We can go through that process really quickly, which means the business gets predictability because they know if they give us something important and we take it on immediately, they know roughly how long it's going to take to deliver it. It will be short because we're focusing on shortening that cycle time. I think that’s the idea behind stopping starting work and starting finishing work. It matters for Lean teams, it matters for Scrum teams, and it matters for all teams. Stop starting work and start finishing it.

    If you want to have a discussion about your unique needs or situation, then please book a call or visit us at Naked Agility. We also have our immersive and traditional public classes on our website, and we'd love to hear from you.
- id: 8F3SK4sPj3M
  title: Why Validate Your Advanced Product Ownership Skills with a PSPO-A
  description: 'Discover how the PSPO-A course empowers you to lead product ownership like a CEO. Elevate your skills and drive success in your organisation! #Agile #Scrum'
  captions: So the added value of the advanced product owner is that we really, we've already opened up the idea of the product owner and what they do in the product owner class. But the advanced product owner really pushes the bounds and brings in marketing and contracts and sales and finance and budgeting and all the other things that a true product owner, a true ideal leader, and a true mini CEO or entrepreneur is going to have to think about in order to be successful and have a successful product.

