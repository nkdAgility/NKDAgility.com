{
  "Collaboration Tools": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Collaboration Tools",
    "calculated_at": "2025-10-01T16:42:10",
    "ai_confidence": 16.25,
    "ai_mentions": 0.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.6,
    "ai_audience": 4.1,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "There are no explicit mentions of collaboration tools (by name or description), nor any discussion of their features, best practices, or comparative analysis. The content centers on process improvements via small experiments and iterative feature delivery, which concerns Agile practices but not the mechanisms for team coordination or communication via software. Conceptual overlap with 'Collaboration Tools' is minimal — the content references teamwork, feedback, and agility, but these are anchored in workflow and product management, not tooling. The intended audience (Agile/Lean practitioners) could align with collaboration tools discussions, but the topic itself is not focused on this. Most of the content is relevant to process and mindset shifts, not collaborative platforms or their use cases.",
    "reasoning_summary": "Content discusses Agile experimentation and iterative delivery, not collaboration tools. It does not mention or address tools, features, or practices relevant to facilitating team communication or coordination. Category fit is minimal.",
    "level": "Ignored"
  },
  "Strategy": {
    "category": "Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation of feature delivery through a strategic approach of small experiments, which aligns with Agile principles. It highlights the importance of customer feedback, risk reduction, and continuous learning, all of which are key themes in Agile strategy. The depth of discussion on how these practices lead to improved outcomes demonstrates a strong focus on strategic alignment and optimisation of delivery processes.",
    "level": "Secondary"
  },
  "Backlog Refinement": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Backlog Refinement",
    "calculated_at": "2025-10-01T17:00:54",
    "ai_confidence": 41.68,
    "ai_mentions": 1.0,
    "ai_alignment": 4.6,
    "ai_depth": 4.9,
    "ai_intent": 5.7,
    "ai_audience": 6.5,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content centers on experimentation, feature breakdown, reducing risk, and iterative learning, which conceptually touch on aspects of backlog refinement. However, there is no explicit mention of backlog refinement or discussion of specific practices (e.g., user story mapping, acceptance criteria, refinement sessions). The main intent is about experimentation and throughput, not refining backlog items or enhancing backlog clarity/prioritization. Audience and intent are loosely aligned with Agile practitioners, but the direct fit to the backlog refinement category is weak—these concepts are related but not the main focus. No penalties applied as content is contemporary and supportive.",
    "reasoning_summary": "Content discusses experimentation and smaller features, which relate to refinement principles, but lacks explicit reference or in-depth discussion of backlog refinement itself. Partial conceptual fit; category relevance is peripheral rather than central.",
    "level": "Tertiary"
  },
  "Working Software": {
    "category": "Working Software",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 15,
    "ai_alignment": 35,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 87.0,
    "reasoning": "The content primarily discusses the transformation in feature delivery through small experiments, which aligns closely with the principles of working software. It highlights the importance of customer feedback, iterative development, and the delivery of functional software that meets user needs. The depth of discussion on the benefits of smaller features and the emphasis on a customer-centric approach further supports its relevance to the category.",
    "level": "Primary"
  },
  "Pragmatic Thinking": {
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through practical experimentation, which aligns with pragmatic thinking in Agile contexts. It highlights the importance of adaptability and real-world application of strategies to improve product development. However, while it touches on key themes, it lacks detailed exploration of specific Agile or Scrum methodologies, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Market Share": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Market Share",
    "calculated_at": "2025-10-01T17:00:27",
    "ai_confidence": 17.95,
    "ai_mentions": 0.3,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 1.5,
    "ai_audience": 4.1,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content discusses software development process improvements and the impact of small experiments on feature delivery, customer feedback, and product quality. However, there is no direct mention of market share, competitive strategies, or expansion tactics. The focus remains on internal efficiency, delivery, and customer-centricity, without connecting these process changes to broader competitive positioning or market share growth. The audience is partially aligned (practitioners interested in improvement), but the discussion does not target market strategy or leadership readers. Minimal relevance to the 'Market Share' category definition.",
    "reasoning_summary": "This content focuses on improving feature delivery and customer feedback in software teams, not market share. No competitive or market presence analysis is present, so fit with 'Market Share' is poor, partial at best.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 10,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with evidence-based practices in terms of using feedback and iterative processes. However, it lacks direct references to leadership principles or empirical evidence guiding leadership decisions, focusing more on development practices than on leadership itself.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "category": "Ability to Innovate",
    "calculated_at": "2025-04-10T17:04:35",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content explicitly discusses the transformation in feature delivery through the adoption of smaller experiments, which aligns closely with the core themes of innovation. It highlights the importance of feedback, reduced risk, and enhanced learning cycles, all of which are critical for fostering a culture of innovation. The depth of discussion is significant, providing insights into how these practices can lead to improved product development and customer satisfaction. Overall, the content strongly focuses on innovative practices in software development, justifying a high confidence score.",
    "level": "Primary",
    "reasoning_summary": "This content clearly fits the innovation category, as it explores how adopting smaller experiments transforms feature delivery. By emphasising feedback, risk reduction, and accelerated learning, it demonstrates key innovative practices. The discussion offers meaningful insights into improving product development and customer outcomes, making it a strong example of innovation in software development."
  },
  "Scrum Master": {
    "category": "Scrum Master",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation in software development, which aligns with agile principles. However, it does not explicitly mention the role of a Scrum Master or delve into their responsibilities, techniques, or influence on team dynamics. The focus is more on general software development practices rather than the specific role of a Scrum Master.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Organisational Change",
    "calculated_at": "2025-10-01T16:59:51",
    "ai_confidence": 44.338,
    "ai_mentions": 2.4,
    "ai_alignment": 5.7,
    "ai_depth": 5.8,
    "ai_intent": 4.7,
    "ai_audience": 6.0,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content focuses on the team's shift from delivering 25 to 150 features per year through smaller experiments and iteration. While this describes a process change within a team, it doesn't explicitly mention organisational change, transformation models, or change management frameworks. The discussion is about team process improvements (breaking work into smaller chunks, continuous learning, and customer feedback loops), strongly aligned with agile product delivery but not explicitly organisational transformation. The audience seems to be practitioners interested in software delivery, not executives or change agents. The fit is partial; there are methods that could support organisational change, but organisational transformation is not the main theme, and direct references to change frameworks, leadership roles, or explicit culture shift are absent.",
    "reasoning_summary": "Content describes team-level process improvements (small experiments, iteration) increasing delivery, but lacks explicit discussion or framing around organisational change principles or frameworks. Partially related; intent is product delivery efficiency.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Sprint Review",
    "calculated_at": "2025-05-13T21:55:13",
    "ai_confidence": 7.5,
    "ai_mentions": 0.3,
    "ai_alignment": 0.8,
    "ai_depth": 0.4,
    "ai_intent": 0.9,
    "ai_audience": 1.5,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not mention 'Sprint Review' or discuss its process, roles, or best practices. Its main focus is on delivering features through small experiments, obtaining feedback, and continuous improvement, but these are general agile/product development concepts rather than specifics of Sprint Review in Scrum. While iterative improvement and feedback loops are mentioned, there is no explicit link to the Sprint Review event, participants, or Scrum artifacts. Audience (practitioners/teams) overlaps somewhat, but the discussion is generic. No obsolete or outdated material, nor negative tone, so no penalties were applied.",
    "reasoning_summary": "This piece centers on agile experimentation and incremental delivery but never addresses Sprint Review or its unique practices. Its focus and intent are broader and more generic, lacking alignment or depth regarding the Sprint Review event.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Continuous Integration",
    "calculated_at": "2025-10-01T17:00:08",
    "ai_confidence": 23.457,
    "ai_mentions": 0.8,
    "ai_alignment": 2.6,
    "ai_depth": 2.9,
    "ai_intent": 2.3,
    "ai_audience": 3.6,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on software feature delivery through small experiments and customer feedback, but does not explicitly discuss or reference Continuous Integration (CI), its tools, principles, or practices. Concepts like iterative improvement, rapid feedback, and reducing risk share some philosophical overlap with CI, but there is no direct alignment to processes such as automated code integration, testing pipelines, or collaboration mechanisms unique to CI. The discussion is more generally about agile product development and experimentation, with the target audience being software practitioners. No penalties were needed, as there are no outdated practices or negative framings present.",
    "reasoning_summary": "Content discusses iterative feature delivery and experimentation, not Continuous Integration. Lacks CI terminology, principles, tools, or processes. Only a minimal thematic overlap exists with CI, so category fit is weak and largely incidental.",
    "level": "Ignored"
  },
  "Change Management": {
    "category": "Change Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 25,
    "ai_depth": 20,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses a transformation in feature delivery through a mindset shift and the adoption of smaller experiments, which aligns with change management principles. However, it primarily focuses on the process of feature delivery rather than explicitly addressing change management strategies or practices. While it touches on adaptability and customer-centric development, it lacks depth in discussing leadership roles or stakeholder engagement, which are crucial aspects of change management.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Organisational Physics",
    "calculated_at": "2025-10-01T17:00:58",
    "ai_confidence": 57.93,
    "ai_mentions": 0.3,
    "ai_alignment": 7.7,
    "ai_depth": 5.9,
    "ai_intent": 7.1,
    "ai_audience": 8.0,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "Direct mentions of 'Organisational Physics' or explicit systems thinking terminology are almost absent—the content focuses on software delivery improvement via small experiments. Conceptually, the article aligns moderately with themes such as feedback loops, emergent behaviours, and learning cycles central to systems thinking, especially with discussion of iterative processes and rapid feedback. However, it lacks explicit depth in mapping or analysing organisational dynamics, structures, or holistic system interactions. The primary audience (development teams, product practitioners) is tangentially relevant, and the main intent is aligned with adaptive, whole-organisation improvement, but only by extension. Most of the discussion is relevant, but not deeply investigative of organisational systems. No penalties were necessary, as the content is current and not critical or satirical.",
    "reasoning_summary": "The content partially fits the category—its themes support adaptive processes, feedback, and learning, resembling systems thinking, but it does not explicitly address Organisational Physics or organisational dynamics in depth. The fit is moderate and not direct.",
    "level": "Tertiary"
  },
  "Scrum Values": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Scrum Values",
    "calculated_at": "2025-10-01T17:00:17",
    "ai_confidence": 18.62,
    "ai_mentions": 0.7,
    "ai_alignment": 2.1,
    "ai_depth": 2.4,
    "ai_intent": 1.8,
    "ai_audience": 5.2,
    "ai_signal": 5.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on the benefits of small experiments and iterative feature delivery, emphasizing flexibility, feedback, and customer-centric approaches. While these ideas are conceptually adjacent to Scrum and its values (e.g., openness, focus, continuous improvement), there are no explicit or even implicit references to the Scrum Values framework or the named values (commitment, courage, focus, openness, respect). The main topics are about experimentation, product delivery processes, and improvement, not about the principles governing behavior within a Scrum team. The intent, depth, and alignment are only loosely related—targeting practitioners but without much relevance to the explicit Scrum Values category.",
    "reasoning_summary": "Content centers on iterative, experiment-driven delivery, not on Scrum Values. No direct mention or substantial discussion of commitment, courage, focus, openness, or respect. Partial conceptual overlap, but the fit is weak and indirect.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "category": "Product Discovery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of conducting small experiments to identify which features resonate with customers, aligning with the core themes of understanding user needs and validating ideas. However, it lacks explicit mention of methodologies or frameworks for product discovery, and the depth of discussion is somewhat limited, focusing more on the outcomes rather than detailed processes.",
    "level": "Secondary"
  },
  "Agile Values and Principles": {
    "category": "Agile Values and Principles",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of small experiments and customer feedback, which aligns well with Agile principles of flexibility and customer-centricity. It highlights iterative processes and continuous improvement, key aspects of Agile methodologies. However, it does not explicitly mention the Agile Manifesto or its core values, which slightly lowers the confidence score.",
    "level": "Primary"
  },
  "Product Owner": {
    "category": "Product Owner",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development without a clear focus on the responsibilities or practices of a Product Owner.",
    "level": "Ignored"
  },
  "Throughput": {
    "category": "Throughput",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery rates, highlighting the increase from 25 to 150 features, which directly relates to throughput. It emphasises the importance of smaller experiments and iterative processes, aligning with the core themes of optimising work flow and enhancing delivery efficiency. However, while it touches on throughput, the focus is more on the benefits of experimentation and customer-centric development rather than a detailed exploration of throughput metrics or strategies for improvement.",
    "level": "Secondary",
    "reasoning_summary": "This content is relevant to the category as it explores how increasing feature delivery rates and adopting smaller, iterative experiments can optimise workflow and efficiency. While it references throughput, the main emphasis is on the advantages of experimentation and customer-focused development, rather than an in-depth analysis of throughput metrics or specific improvement strategies."
  },
  "Transparency": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Transparency",
    "calculated_at": "2025-10-01T17:00:31",
    "ai_confidence": 37.2,
    "ai_mentions": 1.1,
    "ai_alignment": 3.7,
    "ai_depth": 3.5,
    "ai_intent": 3.0,
    "ai_audience": 4.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content centers on using small experiments to deliver more features and improve feedback loops. While concepts like customer feedback, iteration, and learning are thematically adjacent to transparency, explicit mention or detailed exploration of openness, visibility, or practices that directly foster transparency in Agile or Scrum is absent. The narrative focuses on experimentation and incremental delivery rather than making work visible or communication practices that enhance transparency. Thus, alignment and depth are low, with minor, indirect links only in the context of rapid feedback (which can support transparency, but isn't explained as such). Audience and signal are moderate because it targets Agile practitioners but does not address transparency as its focus.",
    "reasoning_summary": "The content discusses experiments, feedback, and iterative delivery, but does not directly address transparency or related practices. Alignment with the 'Transparency' category is partial and mostly indirect, yielding a low-to-moderate confidence fit.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "category": "Lean Principles",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation in feature delivery through iterative learning and experimentation, which aligns with Lean principles of continuous improvement and waste reduction. However, it primarily focuses on Agile methodologies and customer-centric development rather than explicitly addressing Lean concepts or tools. The discussion on small experiments and feedback loops reflects Lean's emphasis on value maximisation, but it lacks depth in exploring core Lean tools or principles.",
    "level": "Secondary"
  },
  "Employee Engagement": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Employee Engagement",
    "calculated_at": "2025-10-01T17:00:13",
    "ai_confidence": 24.93,
    "ai_mentions": 0.5,
    "ai_alignment": 3.4,
    "ai_depth": 2.7,
    "ai_intent": 3.1,
    "ai_audience": 6.2,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on the transformation of software feature delivery through small experiments, boosting process efficiency, customer focus, and product quality. While it discusses team mindset, learning, flexibility, and a culture of experimentation, it does not explicitly address employee motivation, commitment, psychological factors, or best practices related to employee engagement. There are very minimal indirect links—a positive team mindset could theoretically support engagement, but this is not explored in depth, nor aligned with employee engagement theories, metrics, or leadership methods. Thus, fit to the Employee Engagement category is weak and largely incidental.",
    "reasoning_summary": "Main topic is software delivery improvement via small experiments, not employee engagement. Only minimal, indirect overlap with engagement themes; does not address motivation, commitment, or relevant strategies. Fit is weak and incidental.",
    "level": "Ignored"
  },
  "Product Strategy": {
    "category": "Product Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the importance of customer feedback and iterative processes, which align with customer-centric approaches in product strategy. It also highlights the significance of experimentation in product development, reflecting on methodologies that can inform product vision and roadmap. However, the focus is more on implementation and team dynamics rather than strategic planning or market analysis, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Team Performance": {
    "category": "Team Performance",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the impact of small experiments on feature delivery, which relates to team performance and productivity. However, it primarily focuses on the outcomes of these experiments rather than specific strategies or methodologies for enhancing team dynamics or collaboration.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "category": "Self Organisation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of teams in software development through the adoption of smaller experiments, which aligns with self-organisation principles by promoting autonomy and iterative learning. However, it lacks direct mentions of self-organisation and does not delve deeply into the specific practices or leadership roles that support it, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Planning Tools": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-10-01T17:01:03",
    "ai_confidence": 39.96,
    "ai_mentions": 0.8,
    "ai_alignment": 3.5,
    "ai_depth": 3.6,
    "ai_intent": 4.2,
    "ai_audience": 5.7,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content centers on using small experiments and iterative delivery in software development. While these are agile principles, there is no discussion of specific Agile Planning Tools, their methods, or functionalities (like Jira, Trello, backlog management, or sprint planning). The discussion is about mindsets and outcomes, not about planning tools, their integration, or supporting processes. The intended audience (software practitioners) aligns somewhat, and the signal-to-noise ratio is reasonably high since most of the content is focused, but the conceptual and direct category fit is weak.",
    "reasoning_summary": "Content focuses on agile experimentation and feature breakdown but lacks discussion of Agile Planning Tools. Only partial thematic overlap exists; tools, techniques, and practical planning aspects are not addressed.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Estimation",
    "calculated_at": "2025-10-01T16:59:55",
    "ai_confidence": 35.55,
    "ai_mentions": 0.6,
    "ai_alignment": 3.7,
    "ai_depth": 3.9,
    "ai_intent": 3.1,
    "ai_audience": 2.7,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses on breaking features into small experiments and the resulting improvement in delivery, risk reduction, and customer focus. However, it never directly references estimation practices, techniques, or empirical data-driven forecasting. While the concept of splitting work into smaller units tangentially touches on subjects relevant to estimation (such as managing risk and planning), it does not discuss estimation methods, collaborative techniques, or the relationship with velocity. The intent, audience, and examples are more closely aligned with agile delivery and experimentation than estimation. Signal is limited due to lack of specificity regarding estimation as defined in the category.",
    "reasoning_summary": "This content is centered on experimentation and feature delivery improvements, not estimation. There is only minimal conceptual overlap with estimation, and no direct discussion of estimation practices. The fit is partial and mainly incidental.",
    "level": "Ignored"
  },
  "Windows": {
    "category": "Windows",
    "calculated_at": "2025-02-13T19:54:11",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses software development practices and feature delivery, with no mention of Windows or related topics.",
    "level": "Ignored"
  },
  "Azure Repos": {
    "category": "Azure Repos",
    "calculated_at": "2025-02-13T19:54:12",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, with no direct reference to Azure Repos or its functionalities.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Definition of Done",
    "calculated_at": "2025-05-13T21:55:12",
    "ai_confidence": 30.9,
    "ai_mentions": 0.3,
    "ai_alignment": 3.7,
    "ai_depth": 2.9,
    "ai_intent": 3.2,
    "ai_audience": 7.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content never directly mentions the Definition of Done or its criteria. Instead, it discusses breaking features into small experiments, customer feedback, and agile mindset. While some concepts (like iterative releases and product quality) are tangentially related to Agile practices, there is no exploration of shared completion criteria, team alignment on quality, or mechanisms ensuring completeness. The focus is on process velocity, experimentation, and customer-centric delivery, not on what constitutes 'done' for a feature. There is little to no content targeting or referencing the Definition of Done as a Scrum/Agile artefact, and therefore, conceptual and depth scores are low. The audience overlaps with those who would be interested in DoD (software delivery professionals), which raises the audience alignment slightly.",
    "reasoning_summary": "This article focuses on experimentation and delivering small features, not on the Definition of Done itself. While it's Agile-related, it never discusses shared completion criteria, DoD frameworks, or team alignment on 'done,' making the fit with the category quite weak.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "category": "Trend Analysis",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses a transformation in feature delivery and the benefits of smaller experiments, which aligns with Agile methodologies. However, it lacks explicit references to trend analysis or shifts in Agile and DevOps practices. While it touches on concepts like iterative processes and customer-centric development, it does not provide a comprehensive analysis of trends or their implications for strategic decision-making.",
    "level": "Tertiary"
  },
  "Technical Mastery": {
    "category": "Technical Mastery",
    "calculated_at": "2025-02-13T19:54:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery, focusing on customer resonance rather than technical practices or software craftsmanship.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-13T21:55:13",
    "ai_confidence": 20.1,
    "ai_mentions": 0.3,
    "ai_alignment": 2.6,
    "ai_depth": 2.1,
    "ai_intent": 2.5,
    "ai_audience": 7.3,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content is focused on software development process improvements—specifically, using small experiments to increase feature delivery and embrace customer feedback. There is no direct mention or substantial exploration of Site Reliability Engineering (SRE), its principles, SLOs, SLIs, or any explicit SRE tooling or culture. While the general themes of experimentation and risk reduction are relevant to many modern software practices (including SRE), the discussion is anchored in product and feature delivery, not production reliability, incident management, or operations/development bridging. The audience overlap is moderate, as practitioners interested in process and product quality may overlap with SRE, but the target is not reliability engineers. Overall, the content is tangential to SRE, resulting in low confidence.",
    "reasoning_summary": "This content centers on improving feature delivery through small experiments in software development, not the principles or practices of Site Reliability Engineering. Any overlap is incidental, so category alignment and confidence are low.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "category": "Customer Satisfaction",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of customer feedback and customer-centric development, which aligns well with the principles of customer satisfaction. It highlights how smaller features allow for rapid feedback and better alignment with customer needs, demonstrating a clear understanding of customer satisfaction principles. However, while the content is focused on feature delivery and experimentation, it does not explicitly measure customer satisfaction or provide detailed methodologies for enhancing it, which slightly lowers the confidence score.",
    "level": "Secondary",
    "reasoning_summary": "This content is a good fit for the customer satisfaction category, as it emphasises the value of customer feedback and adapting development to meet user needs. While it clearly supports customer-centric practices, it doesn’t delve into specific ways to measure or systematically improve satisfaction, which means it only partially covers the full scope of the category."
  },
  "Empirical Process Control": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Empirical Process Control",
    "calculated_at": "2025-08-07T07:06:43",
    "ai_confidence": 81.2,
    "ai_mentions": 4.8,
    "ai_alignment": 8.9,
    "ai_depth": 8.7,
    "ai_intent": 8.2,
    "ai_audience": 8.8,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 81.0,
    "reasoning": "The content describes a transformation in software development practice by shifting toward breaking work into small experiments, emphasizing rapid feedback, adaptation, inspection, and continuous improvement—core elements of empirical process control. While the explicit term 'empirical process control' does not appear, key concepts such as transparency, iterative delivery, feedback loops, and adaptation are central. It addresses intended practitioners working in Agile/Scrum contexts and is focused, without notable off-topic distractions. The depth is strong, using an illustrative real-world narrative, though there is a lack of direct theoretical reference or named thought leaders. No outdated or contradictory stances are present.",
    "reasoning_summary": "This content strongly aligns with empirical process control by highlighting iterative delivery, feedback, and adaptation in Agile contexts, though it does not use the explicit terminology nor reference foundational theorists.",
    "level": "Primary"
  },
  "Deployment Frequency": {
    "category": "Deployment Frequency",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery and emphasises the importance of smaller, more frequent releases, which aligns with the core themes of deployment frequency. It highlights the benefits of rapid feedback loops and iterative processes, which are crucial in Agile and DevOps practices. However, while it touches on deployment frequency, it does not delve deeply into specific strategies or metrics for measuring deployment frequency, which slightly limits its depth of discussion.",
    "level": "Secondary",
    "reasoning_summary": "This content fits the category as it explores how shifting to smaller, more frequent releases supports deployment frequency—a key aspect of Agile and DevOps. It highlights the value of rapid feedback and iteration, though it doesn’t go into detail about specific deployment strategies or measurement metrics."
  },
  "Minimum Viable Product": {
    "category": "Minimum Viable Product",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of small experiments and iterative processes, which aligns well with MVP principles. It highlights the benefits of rapid feedback and learning, key aspects of MVP development. However, it does not explicitly mention 'Minimum Viable Product' or delve deeply into specific MVP strategies, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Modern Source Control": {
    "category": "Modern Source Control",
    "calculated_at": "2025-02-13T19:54:29",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on version control practices or methodologies.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "category": "Revenue per Employee",
    "calculated_at": "2025-02-13T19:54:30",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, with no clear focus on revenue per employee metrics or related financial efficiency analysis.",
    "level": "Ignored"
  },
  "Lead Time": {
    "category": "Lead Time",
    "calculated_at": "2025-04-11T08:57:31",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 10,
    "final_score": 32.0,
    "reasoning": "The content discusses the transformation in feature delivery and the benefits of smaller experiments, which indirectly relates to Lead Time by implying faster delivery and increased efficiency. However, it does not explicitly mention Lead Time or provide a detailed exploration of its measurement or optimisation strategies. The focus is more on the process of feature delivery rather than on Lead Time as a specific metric.",
    "level": "Ignored"
  },
  "Customer Feedback Loops": {
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of gathering customer feedback through smaller feature experiments, which aligns well with the core themes of customer feedback loops. It highlights how rapid feedback collection enhances product quality and informs development decisions. However, while the focus on feedback is strong, the content primarily revolves around the concept of experimentation rather than a comprehensive exploration of feedback integration processes, which slightly limits its depth in the context of the category.",
    "level": "Secondary",
    "reasoning_summary": "This content is a good fit for the category, as it emphasises the value of collecting customer feedback via small-scale experiments. It clearly connects rapid feedback to improved product decisions. However, its main focus is on experimentation rather than a thorough look at feedback integration, so it only partially covers the broader aspects of customer feedback loops."
  },
  "Sensemaking": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Sensemaking",
    "calculated_at": "2025-08-07T07:06:55",
    "ai_confidence": 41.4,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.6,
    "ai_intent": 3.6,
    "ai_audience": 4.1,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on how breaking down work into small experiments increases feature delivery, encourages feedback, and fosters learning within software teams. While it discusses adapting to customer needs and iterating in the face of uncertainty, it frames these practices primarily as tactics for improving product output, not as approaches to organizational sensemaking in complex or ambiguous situations. There's little explicit discussion of interpreting complexity, decision-making frameworks (like Cynefin), or sensemaking as a discipline. No direct mentions of 'sensemaking' or explicit exploration of the concept—the alignment is partial, as some aspects (learning, adaptation, response to feedback) touch on themes relevant to sensemaking, but the main intent and depth remain centered on software delivery processes, not on navigating organizational ambiguity or complexity.",
    "reasoning_summary": "The content partially overlaps with sensemaking (via experimentation, adaptation, and feedback) but mainly focuses on software delivery improvements, not interpreting complexity or making sense of organizational uncertainty. Fit is limited and indirect.",
    "level": "Tertiary"
  },
  "Scrum Team": {
    "category": "Scrum Team",
    "calculated_at": "2025-02-13T19:54:37",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting experiments in feature delivery, without a clear focus on Scrum roles, team dynamics, or collaboration practices.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "category": "Agile Leadership",
    "calculated_at": "2025-02-13T19:54:38",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development without a clear focus on Agile leadership roles or practices.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "category": "Automated Testing",
    "calculated_at": "2025-02-13T19:54:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a focus on automated testing principles or practices.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "category": "Technical Debt",
    "calculated_at": "2025-02-13T19:54:43",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without addressing technical debt or its management.",
    "level": "Ignored"
  },
  "Agile Planning": {
    "category": "Agile Planning",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with Agile principles of iterative development and customer feedback. However, it lacks explicit mentions of Agile Planning methodologies and does not delve deeply into specific Agile practices like sprints or backlogs, which limits its overall alignment with the category.",
    "level": "Secondary"
  },
  "Product Management": {
    "category": "Product Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the impact of small experiments on feature delivery, which aligns with product management principles such as iterative development and customer feedback. However, it lacks explicit references to product management frameworks or methodologies, and the discussion is somewhat anecdotal rather than deeply analytical.",
    "level": "Secondary"
  },
  "Agile Philosophy": {
    "category": "Agile Philosophy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 0,
    "final_score": 82.0,
    "reasoning": "The content discusses the importance of a mindset focused on experimentation, customer feedback, and continuous improvement, which aligns closely with Agile principles. It highlights the value of flexibility and customer-centric development, key themes in Agile philosophy. The depth of discussion on how smaller features and iterative processes enhance product quality further supports its alignment with Agile values.",
    "level": "Primary"
  },
  "Forecasting": {
    "category": "Forecasting",
    "calculated_at": "2025-02-13T19:54:50",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on forecasting methodologies or practices within Agile and Scrum.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "category": "Technical Leadership",
    "calculated_at": "2025-02-13T19:54:51",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on technical leadership principles or agile methodologies.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "category": "Digital Transformation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses a transformation in feature delivery within software development, highlighting the importance of adopting a new mindset and iterative processes. While it does not explicitly mention 'digital transformation', it aligns with the core themes of enhancing business agility and fostering innovation through the use of smaller experiments. The depth of discussion on how these practices lead to improved customer engagement and product quality supports a moderate confidence score, but the lack of direct references to digital technologies or broader organisational change limits the overall score.",
    "level": "Secondary",
    "reasoning_summary": "This content aligns with the category as it explores shifts in software development practices that promote agility and innovation—key aspects of digital transformation. However, since it doesn’t directly reference digital technologies or wider organisational change, its fit is moderate rather than strong. The focus on iterative delivery and customer impact supports its relevance, but more explicit links to digital transformation would strengthen the classification."
  },
  "Working Agreements": {
    "category": "Working Agreements",
    "calculated_at": "2025-02-13T19:54:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery and product development, without focusing on working agreements or team collaboration principles.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "category": "Portfolio Management",
    "calculated_at": "2025-02-13T19:54:58",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on portfolio management or strategic alignment of projects.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "category": "Organisational Culture",
    "calculated_at": "2025-02-13T19:55:00",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development, without a clear focus on organisational culture or its impact on agility and transformation.",
    "level": "Ignored"
  },
  "Test First Development": {
    "category": "Test First Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 20,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation, which indirectly relates to the principles of Test First Development. However, it lacks explicit mentions of Test First practices, success criteria, or detailed discussions on testing methodologies. The focus is more on feature delivery and customer feedback rather than the core concepts of Test First Development.",
    "level": "Ignored"
  },
  "Coaching": {
    "category": "Coaching",
    "calculated_at": "2025-02-13T19:55:03",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery and product development, rather than focusing on coaching practices or techniques.",
    "level": "Ignored"
  },
  "Cycle Time": {
    "category": "Cycle Time",
    "calculated_at": "2025-02-13T19:55:06",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than focusing on the measurement or implications of Cycle Time.",
    "level": "Ignored"
  },
  "Team Motivation": {
    "category": "Team Motivation",
    "calculated_at": "2025-02-13T19:55:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development, without a clear focus on team dynamics or motivation strategies.",
    "level": "Ignored"
  },
  "Value Stream Mapping": {
    "category": "Value Stream Mapping",
    "calculated_at": "2025-02-13T19:55:09",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in software development and feature delivery, without a clear focus on Value Stream Mapping or its principles.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "category": "Deployment Strategies",
    "calculated_at": "2025-02-13T19:55:10",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than specific deployment methodologies or strategies.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on Behaviour Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "category": "Definition of Ready",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on the criteria for backlog item readiness.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "category": "Lean Product Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 20,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with Lean principles of minimising waste and maximising learning. However, it lacks explicit references to Lean methodologies or tools, and the discussion is somewhat general, focusing more on experimentation than on structured Lean practices.",
    "level": "Secondary"
  },
  "Troubleshooting": {
    "category": "Troubleshooting",
    "calculated_at": "2025-02-13T19:55:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in software development and feature delivery, rather than focusing on the identification and resolution of technical issues.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "category": "Strategic Goals",
    "calculated_at": "2025-02-13T19:55:17",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than articulating long-term strategic objectives or alignment with Agile principles.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "category": "Asynchronous Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on asynchronous development principles or practices.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "category": "Professional Scrum",
    "calculated_at": "2025-02-13T19:55:23",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, lacking a clear focus on Scrum principles, roles, or practices.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "category": "Daily Scrum",
    "calculated_at": "2025-02-13T19:55:24",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, with no clear focus on Daily Scrum practices or discussions.",
    "level": "Ignored"
  },
  "Decision Making": {
    "category": "Decision Making",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which indirectly relates to decision-making processes in software development. However, it lacks explicit discussions on structured methodologies or evidence-based practices. While it touches on feedback and learning, it does not delve deeply into frameworks or empirical evidence that would strengthen its alignment with the Decision Making category.",
    "level": "Secondary"
  },
  "Azure Pipelines": {
    "category": "Azure Pipelines",
    "calculated_at": "2025-02-13T19:55:33",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content focuses on feature delivery and experimentation in software development without specific reference to Azure Pipelines or CI/CD practices.",
    "level": "Ignored"
  },
  "Product Validation": {
    "category": "Product Validation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 10,
    "final_score": 72.0,
    "reasoning": "The content discusses the concept of conducting small experiments to validate product features and their resonance with customers, which aligns with the core themes of product validation. However, it lacks explicit mentions of structured methodologies or detailed practices related to user testing or customer feedback loops, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Evidence Based Management": {
    "category": "Evidence Based Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments, which aligns with the principles of Evidence-Based Management, particularly in terms of empirical decision-making and customer-centric development. However, it lacks explicit references to specific EBM metrics or a structured approach to measuring current value or unrealised value, which limits its depth in the context of EBM.",
    "level": "Secondary"
  },
  "Experimentation": {
    "category": "Experimentation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through experimentation, highlighting the benefits of testing smaller features to better connect with customers. It explicitly mentions the concept of conducting 'lots of little experiments' to validate ideas and improve product capabilities, aligning well with the core themes of hypothesis-driven approaches in Agile workflows. However, while it touches on experimentation, it lacks detailed techniques or structured methodologies, which slightly lowers the depth score.",
    "level": "Secondary",
    "reasoning_summary": "This content is a good fit for the category as it explores how experimenting with smaller features can enhance customer engagement and product development. It clearly references the value of running multiple small experiments to validate ideas, which aligns with hypothesis-driven Agile practices. However, it doesn’t delve into specific methods or frameworks, so the depth of detail is somewhat limited."
  },
  "Azure Boards": {
    "category": "Azure Boards",
    "calculated_at": "2025-02-13T19:55:46",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on Azure Boards or Agile project management practices.",
    "level": "Ignored"
  },
  "Large Scale Agility": {
    "category": "Large Scale Agility",
    "calculated_at": "2025-02-13T19:55:48",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, focusing on individual practices rather than large-scale Agile principles or frameworks.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "category": "Agile Transformation",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with Agile principles of iterative development and responsiveness to customer feedback. However, it does not explicitly address Agile frameworks or transformation strategies, making it a secondary theme.",
    "level": "Tertiary"
  },
  "Increment": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Increment",
    "calculated_at": "2025-05-13T21:55:16",
    "ai_confidence": 73.675,
    "ai_mentions": 2.4,
    "ai_alignment": 7.8,
    "ai_depth": 7.6,
    "ai_intent": 8.2,
    "ai_audience": 8.0,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content strongly aligns with Increment concepts by promoting frequent, usable delivery through small experiments and iterative feedback. However, it never directly uses the term 'Increment' and instead frames delivery in terms of features and experiments. The discussion is thorough regarding the benefits and mindset of breaking down work, customer feedback, and iteration—core to Increment's value delivery in Agile. The piece targets practitioners and teams seeking Agile improvement, and maintains focus on relevant, substantive topics. Minor deductions stem from lack of explicit 'Increment' references or direct ties to Scrum artifacts or vocabulary.",
    "reasoning_summary": "This content effectively champions frequent, high-value delivery and feedback through small, incremental changes—closely reflecting Agile Increment principles—even though it doesn't use official Scrum terms. Its practical, iterative approach makes it highly relevant to Increment, with only modest alignment gaps.",
    "level": "Secondary"
  },
  "Accountability": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Accountability",
    "calculated_at": "2025-05-13T21:55:11",
    "ai_confidence": 30.58,
    "ai_mentions": 0.7,
    "ai_alignment": 3.1,
    "ai_depth": 2.8,
    "ai_intent": 3.2,
    "ai_audience": 4.1,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content highlights process transformation, experimentation, and feedback loops in software development, focusing on increasing feature delivery through small experiments. However, it does not directly address accountability as a structural mechanism or clarify who owns outcomes. There are no explicit or in-depth discussions of role accountability, outcome ownership, or organizational constructs, nor are distinctions between accountability, responsibility, or authority explored. The main intent is about process optimization and experimentation, with improvement attributed to team mindset and iterative practices, not explicit accountabilities. The audience (software/dev practitioners) has some overlap, and the discussion is mostly relevant for product development, but not specific to defined accountabilities. No penalties apply as the content is current and not oppositional.",
    "reasoning_summary": "This article focuses on experimentation and process improvement, not on accountability structures or outcome ownership. While it's relevant for software teams, it lacks explicit discussion of accountability and its foundational role, resulting in a low category fit.",
    "level": "Ignored"
  },
  "Release Management": {
    "category": "Release Management",
    "calculated_at": "2025-02-13T19:55:56",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on release management processes or strategies.",
    "level": "Ignored"
  },
  "System Configuration": {
    "category": "System Configuration",
    "calculated_at": "2025-04-10T13:40:34",
    "ai_confidence": 12.0,
    "ai_mentions": 10.0,
    "ai_alignment": 5.0,
    "ai_depth": 2.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software development practices and the benefits of smaller feature delivery, which does not directly relate to system configuration. While there are mentions of processes and methodologies, they are not focused on system setup, integration, or maintenance, which are key aspects of the System Configuration category.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "category": "Frequent Releases",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation in feature delivery and the benefits of smaller, more frequent releases, which aligns with the principles of Frequent Releases. It highlights the importance of feedback, reduced risk, and customer-centric development, all of which are key themes in the category. However, while it mentions the increase in feature delivery, it does not explicitly discuss continuous delivery or deployment practices, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Test Driven Development": {
    "category": "Test Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content focuses on feature delivery and experimentation in software development, without discussing TDD principles or practices.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "category": "Continuous Delivery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller, incremental improvements, which aligns well with Continuous Delivery principles. It emphasises the importance of rapid feedback, reduced risk, and continuous learning, all of which are key aspects of Continuous Delivery. However, while it touches on these themes, it does not explicitly mention Continuous Delivery as a practice, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Remote Working": {
    "category": "Remote Working",
    "calculated_at": "2025-02-13T19:56:05",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a focus on remote working practices or Agile methodologies.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "category": "Operational Practices",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through the use of smaller experiments, which aligns with operational practices aimed at improving efficiency and delivery. It highlights techniques such as iterative feedback, risk reduction, and customer-centric development, which are relevant to Agile methodologies. However, while it touches on these concepts, the discussion lacks depth in specific operational strategies or metrics, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "category": "Continuous Learning",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with the principles of Continuous Learning. It highlights the importance of experimentation and adapting based on customer feedback, reflecting a growth mindset. However, while it touches on key themes, it lacks explicit discussions on knowledge sharing, feedback loops, or team dynamics, which are crucial for a higher confidence score.",
    "level": "Secondary"
  },
  "Team Collaboration": {
    "category": "Team Collaboration",
    "calculated_at": "2025-02-13T19:56:15",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the impact of small experiments on feature delivery and product development, without a clear focus on team dynamics or collaboration principles.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "category": "Engineering Practices",
    "calculated_at": "2025-02-13T19:56:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on Agile engineering practices such as clean code, TDD, or CI/CD.",
    "level": "Ignored"
  },
  "Test Automation": {
    "category": "Test Automation",
    "calculated_at": "2025-02-13T19:56:18",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and the benefits of conducting small experiments in software development, without a focus on test automation principles or practices.",
    "level": "Ignored"
  },
  "Mentoring": {
    "category": "Mentoring",
    "calculated_at": "2025-02-13T19:56:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on mentoring or coaching in Agile environments.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "category": "Lean Thinking",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 65.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation in feature delivery through a focus on smaller experiments, which aligns with Lean principles of continuous improvement and customer-centric development. It mentions concepts like reducing waste and enhancing efficiency, which are core to Lean Thinking. However, it does not explicitly reference Lean terminology or tools, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Strategy": {
    "category": "Agile Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through small experiments, which aligns with Agile principles of iterative development and customer-centric approaches. It highlights the importance of feedback, flexibility, and continuous improvement, all of which are core themes in Agile strategy. However, while it touches on these concepts, it lacks a direct focus on broader organisational alignment and strategic planning, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Psychological Safety": {
    "category": "Psychological Safety",
    "calculated_at": "2025-02-13T19:56:28",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the process of feature delivery and experimentation in software development, without a clear focus on psychological safety or its related themes.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "category": "Customer Retention",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the importance of experimenting with features to better connect with customers, which aligns with customer engagement strategies. However, it primarily focuses on feature delivery and experimentation rather than direct customer retention strategies.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "category": "Agile Frameworks",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation in feature delivery through a mindset of experimentation, which aligns with Agile principles of iterative development and customer feedback. However, it does not explicitly mention Agile frameworks like Scrum or Kanban, which limits the direct mentions. The depth of discussion on continuous improvement and customer-centric development reflects Agile values, but the overall focus is more on practices rather than specific frameworks.",
    "level": "Secondary"
  },
  "Engineering Excellence": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Engineering Excellence",
    "calculated_at": "2025-08-07T07:06:53",
    "ai_confidence": 80.22,
    "ai_mentions": 2.1,
    "ai_alignment": 9.4,
    "ai_depth": 8.8,
    "ai_intent": 8.3,
    "ai_audience": 9.0,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content describes a transformation in software development by adopting small, experimental feature delivery, emphasizing continuous improvement, customer feedback, risk reduction, and learning. This concept aligns strongly with Engineering Excellence's focus on best practices, iterative delivery, and product quality. While 'engineering excellence' and terms like 'code' or 'automation' are not directly mentioned, the underlying themes—continuous learning, iterative improvement, quality focus, and customer-centered approach—are key aspects of engineering excellence. The discussion is in-depth and targets practitioners interested in elevating their development processes. The content stays focused on engineering practices, with little off-topic material, thus maintaining high signal. Minor deduction in mentions as the category is only implied rather than named.",
    "reasoning_summary": "Content aligns closely with Engineering Excellence, emphasizing process improvement, iterative delivery, and customer-focused outcomes. Lacks direct category mention, but the themes and intended audience make for a strong fit. Fit is substantial, not partial.",
    "level": "Secondary"
  },
  "Entrepreneurship": {
    "category": "Entrepreneurship",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery through a mindset of experimentation, which aligns with entrepreneurial principles of innovation and risk management. It highlights the importance of customer feedback and iterative processes, key aspects of entrepreneurship. However, while it touches on these themes, the primary focus is on software development practices rather than broader entrepreneurial strategies, leading to a moderately high confidence score.",
    "level": "Secondary"
  },
  "Software Development": {
    "category": "Software Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses software development practices, particularly focusing on the transformation of feature delivery through small experiments. It aligns well with key topics such as Agile methodologies and iterative processes, emphasising customer-centric development and continuous improvement. The depth of discussion is substantial, providing insights into the benefits of smaller features and the importance of feedback, which are critical aspects of effective software development.",
    "level": "Primary"
  },
  "Cross Functional Teams": {
    "category": "Cross Functional Teams",
    "calculated_at": "2025-02-13T19:56:40",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the increase in feature delivery through experimentation rather than focusing on cross-functional teams or their characteristics.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with the principles of hypothesis-driven development. It mentions the iterative process of testing ideas and adapting based on customer resonance, reflecting the core themes of experimentation and validated learning. However, it lacks explicit mentions of hypothesis formulation and structured experimentation methods, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "category": "Lean Startup",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 0,
    "final_score": 78.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with the Lean Startup principles of iterative testing and learning from customer feedback. However, it does not explicitly mention key terms like Minimum Viable Product (MVP) or the Build-Measure-Learn feedback loop, which limits the direct mentions score. The discussion is somewhat detailed but lacks a comprehensive exploration of Lean Startup methodologies, resulting in a moderate depth score.",
    "level": "Secondary",
    "reasoning_summary": "This content relates to Lean Startup principles by emphasising small-scale experiments and iterative improvement, which are core to the methodology. However, it doesn’t directly reference essential Lean Startup concepts like MVPs or the Build-Measure-Learn cycle, and its exploration of the topic isn’t deeply comprehensive. Therefore, while it fits the category, it does so in a general rather than explicit or in-depth manner."
  },
  "Acceptance Test Driven Development": {
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery rather than focusing on Acceptance Test Driven Development principles or practices.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Product Backlog",
    "calculated_at": "2025-05-13T21:55:14",
    "ai_confidence": 43.82,
    "ai_mentions": 0.4,
    "ai_alignment": 4.9,
    "ai_depth": 4.6,
    "ai_intent": 5.3,
    "ai_audience": 8.1,
    "ai_signal": 8.32,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "Direct mentions of 'Product Backlog' are absent; the content instead discusses general practices for delivering smaller features using experimentation. While these ideas conceptually relate to backlog refinement or agile thinking, the article never references backlog management itself, does not explore prioritization techniques, Product Owner roles, or backlog-specific processes. Therefore, alignment and depth are moderate at best. Intent does relate to agile improvement, and the audience is appropriate (practitioners in agile or product teams), with most of the content being on-topic for iterative delivery—but not backlog-specific. No text is outdated or contrary; thus, no penalty is applied. The overall score reflects weak direct evidence but some conceptual overlap.",
    "reasoning_summary": "While the article promotes agile thinking through small experiments and iterative delivery, it never explicitly addresses Product Backlog or its management. The relevance is tangential and indirect, so confidence in this category fit is low.",
    "level": "Tertiary"
  },
  "Business Agility": {
    "category": "Business Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery through experimentation, which aligns with the principles of business agility, particularly in terms of adapting to customer needs and fostering innovation. However, it lacks explicit mentions of business agility as a concept and does not delve deeply into strategies or frameworks that support it. The focus is more on the outcomes of experimentation rather than the broader principles of business agility.",
    "level": "Secondary"
  },
  "Personal": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Personal",
    "calculated_at": "2025-08-07T09:25:42",
    "ai_confidence": 86.36,
    "ai_mentions": 6.8,
    "ai_alignment": 9.2,
    "ai_depth": 9.5,
    "ai_intent": 8.8,
    "ai_audience": 8.9,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content begins with a clear personal framing ('In my journey through...'), discussing individual observations and interpretations on Agile-adjacent practices (experimentation, small features, continuous improvement). Examples and insights are personal and reflective rather than technical or theoretical. It elaborates how the author perceives the value of small experiments, linking this to learning, risk reduction, and customer value, which are aligned with the 'Personal' category's focus on experience and unique perspective. The discussion is deep (with structured arguments and anecdotal evidence), maintains focus on the individual's point of view, and targets practitioners interested in real-world, personal learnings. There are few direct mentions of 'Personal' outside the framing, but the tone and intent are both reflective and subjective, not strictly educational or technical; all content is on-topic and relevant to the intended audience.",
    "reasoning_summary": "This content fits the 'Personal' category as it centers on the author's reflections and insights derived from experience, not technical exposition. Its purpose, themes, and examples all align with the category definition and are clearly subjective.",
    "level": "Primary"
  },
  "Product Delivery": {
    "category": "Product Delivery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 32,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the transformation in feature delivery, focusing on methodologies such as iterative development and customer feedback, which are core to product delivery. It provides detailed insights into the benefits of smaller features and experimentation, aligning well with the category's themes. The depth of discussion on how these practices enhance product quality and customer satisfaction further supports a high confidence score.",
    "level": "Primary"
  },
  "Market Adaptability": {
    "category": "Market Adaptability",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 50,
    "non_ai_confidence": 0,
    "final_score": 50.0,
    "reasoning": "The content discusses the concept of conducting small experiments to enhance feature delivery and responsiveness to customer needs, which aligns with the principles of adaptability. However, it primarily focuses on the process of feature delivery rather than explicitly addressing broader market adaptability strategies.",
    "level": "Tertiary"
  },
  "Value Stream Management": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Value Stream Management",
    "calculated_at": "2025-08-07T09:25:42",
    "ai_confidence": 60.843,
    "ai_mentions": 1.2,
    "ai_alignment": 6.0,
    "ai_depth": 5.8,
    "ai_intent": 6.5,
    "ai_audience": 7.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content discusses improving software feature delivery via small experiments, continuous improvement, and customer feedback, which aligns conceptually with several Value Stream Management principles (flow, learning, customer value, reduced waste). However, there are no direct mentions of Value Stream Management, value streams, or explicit mapping or metric discussion. The depth is moderate, focusing on a specific case study and practice shift rather than VSM frameworks or tools. The intent is relevant but not squarely focused on VSM, as it centers on delivery tactics rather than end-to-end stream optimization. The audience appears to be practitioners interested in process improvements, moderately fitting VSM's target readers. The signal-to-noise ratio is strong—most content is on-topic for lean/agile flow, though not exclusively on VSM.",
    "reasoning_summary": "The content discusses principles like flow, experimentation, and customer focus central to Value Stream Management, but lacks explicit references, frameworks, or deep discussion, making VSM fit partial and mostly conceptual.",
    "level": "Secondary"
  },
  "Decision Theory": {
    "category": "Decision Theory",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the benefits of small experiments in software development, which indirectly relates to decision-making processes. However, it primarily focuses on Agile methodologies and feature delivery rather than explicitly addressing decision theory concepts such as heuristics, biases, or frameworks. The discussion on risk reduction and learning aligns somewhat with decision-making under uncertainty, but the overall emphasis is more on practical implementation than theoretical exploration.",
    "level": "Tertiary"
  },
  "Technical Excellence": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Technical Excellence",
    "calculated_at": "2025-08-07T09:25:42",
    "ai_confidence": 68.9,
    "ai_mentions": 3.7,
    "ai_alignment": 7.9,
    "ai_depth": 7.7,
    "ai_intent": 7.5,
    "ai_audience": 8.0,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content focuses on breaking features into small experiments, continuous improvement, risk reduction, and rapid delivery—closely related to Agile and lean product development. However, it does not mention core technical practices (TDD, CI/CD, modular architecture) or reference 'technical excellence' by name. Depth and alignment are high due to its reflection on process changes that improve quality and adaptability, but it focuses more on process/mindset than explicit engineering practices underpinning technical excellence, limiting direct fit. The target audience is practitioners in software, so audience alignment is strong, and most content is on-topic.",
    "reasoning_summary": "Content aligns with technical excellence via discussion of continuous improvement and adaptive delivery, but lacks explicit mention or deep exploration of engineering practices like TDD or CI/CD. Fit is partial; more process/mindset than direct technical excellence.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "category": "Install and Configuration",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 0,
    "non_ai_confidence": 10,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of small experiments in feature delivery and does not address installation or configuration processes.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-08-07T09:25:42",
    "ai_confidence": 56.9,
    "ai_mentions": 1.2,
    "ai_alignment": 5.7,
    "ai_depth": 5.3,
    "ai_intent": 7.2,
    "ai_audience": 7.5,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "Direct references to Application Lifecycle Management (ALM) are absent. The core subject—using experiments and smaller features to boost delivery and learning—strongly aligns with agile and iterative software development, focusing on process improvement and customer centricity. While these are indirect elements of ALM, the content discusses only a part of the lifecycle (feature delivery, experimentation, feedback) and not holistic governance, toolsets, ALM metrics, change/risk management, or full-stage oversight typical of ALM frameworks. Audience/focus is appropriate for practitioners involved in modern development practices, and the discussion is relevant, but the explicit scope is narrower than comprehensive ALM.",
    "reasoning_summary": "Content fits partially—focuses on iterative delivery and experimentation, which align with aspects of Application Lifecycle Management, but lacks direct mentions, overarching ALM processes, tools, governance, or full lifecycle coverage.",
    "level": "Tertiary"
  },
  "Value Delivery": {
    "category": "Value Delivery",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery through small experiments, which aligns with the principles of iterative development and incremental delivery. It highlights the importance of customer feedback and adapting to what resonates with users, reflecting a conceptual alignment with value delivery. However, the discussion lacks depth in terms of specific methodologies or frameworks like Agile or Lean, and it does not explicitly mention value delivery practices, which affects the overall confidence score.",
    "level": "Secondary",
    "reasoning_summary": "This content touches on iterative development and the value of adapting to user feedback, which are key aspects of value delivery. However, it doesn’t delve into specific methodologies or frameworks, nor does it explicitly reference value delivery practices. While the general approach aligns conceptually, the lack of detail and direct references means it only partially fits the category."
  },
  "Metrics and Learning": {
    "category": "Metrics and Learning",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 82.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 30,
    "non_ai_confidence": 20,
    "final_score": 82.0,
    "reasoning": "The content discusses the transformation in feature delivery through the lens of small experiments, which aligns well with the principles of continuous improvement and iterative learning. It explicitly mentions the importance of feedback loops and the role of customer-centric development, which are key themes in the Metrics and Learning category. The depth of discussion on how smaller features lead to increased feedback opportunities and reduced risk further supports its relevance. Overall, while the content is primarily focused on the benefits of experimentation, it effectively ties back to metrics and learning principles, justifying a high confidence score.",
    "level": "Primary",
    "reasoning_summary": "This content is a strong fit for the Metrics and Learning category, as it highlights how small-scale experiments and iterative delivery foster continuous improvement. By emphasising feedback loops and customer-focused development, it clearly connects experimentation with learning and measurement, making the classification highly appropriate."
  },
  "Organisational Agility": {
    "category": "Organisational Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery through experimentation, which aligns with the principles of agility and responsiveness to customer needs. However, it lacks explicit mentions of organisational agility frameworks or leadership roles, and the depth of discussion is limited to the outcomes of experimentation rather than broader organisational strategies.",
    "level": "Secondary"
  },
  "Lean": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Lean",
    "calculated_at": "2025-08-07T11:26:10",
    "ai_confidence": 69.15,
    "ai_mentions": 2.4,
    "ai_alignment": 7.4,
    "ai_depth": 7.1,
    "ai_intent": 7.2,
    "ai_audience": 8,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content explores process transformation by breaking down features into small experiments to boost software delivery, enhance learning, and reduce waste—concepts aligning with Lean principles such as continuous improvement and value creation. However, 'Lean' or its key methodologies (e.g., value stream mapping, 5S, JIT) are not directly mentioned. Continuous improvement and waste avoidance are implied but not explicitly named within a Lean framing. The depth is adequate for practitioners interested in process improvement, and the audience closely overlaps with Lean's target. Still, lack of explicit Lean terminology lowers 'mentions' and affects overall confidence.",
    "reasoning_summary": "Content strongly aligns with Lean themes like continuous improvement and waste reduction but lacks explicit Lean terminology or tools. Fit is reasonably strong for Lean, though indirect and more closely tied to general Agile experimentation.",
    "level": "Secondary"
  },
  "DevOps": {
    "category": "DevOps",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments and a culture of continuous improvement, which aligns with DevOps principles. It highlights the importance of feedback loops, reduced risk, and customer-centric development, all of which are key themes in DevOps. However, it does not explicitly mention DevOps or its practices, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Systems Thinking": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Systems Thinking",
    "calculated_at": "2025-08-07T11:26:01",
    "ai_confidence": 43.4,
    "ai_mentions": 0,
    "ai_alignment": 4.3,
    "ai_depth": 3.7,
    "ai_intent": 5.1,
    "ai_audience": 6.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content discusses improving feature delivery using small experiments, iterative approaches, and customer feedback cycles. While this hints at interconnectedness and dynamic adaptation, it never directly uses Systems Thinking terms or principles like causal loops or system mapping, nor does it reference frameworks such as the Cynefin Framework. The approach is more aligned with Lean/Agile experimentation than the holistic and multi-layered analysis core to Systems Thinking. Audience (software teams, product managers) is somewhat aligned, and the signal-to-noise is high due to clarity of topic focus. However, the main conceptual focus is on delivery process improvement rather than systemic complexity or feedback loops in the Systems Thinking sense.",
    "reasoning_summary": "Focuses on software delivery improvements by small experiments, which is tangentially related to Systems Thinking but lacks explicit concepts, frameworks, or holistic analysis. Partial fit; not a direct or deep exploration of Systems Thinking.",
    "level": "Tertiary"
  },
  "Azure DevOps": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Azure DevOps",
    "calculated_at": "2025-08-07T11:26:10",
    "ai_confidence": 15.74,
    "ai_mentions": 0.1,
    "ai_alignment": 2.9,
    "ai_depth": 2.7,
    "ai_intent": 2.5,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content thoroughly discusses small experiments, iterative development, and customer feedback in feature delivery—all broadly relevant to Agile and DevOps principles. However, at no point does it mention Azure DevOps by name or reference its tools, practices, or platform-specific methodologies. The alignment is partial due to the conceptual overlap with Agile and DevOps, but depth (while solid for generic process improvement) lacks any explicit focus on Azure DevOps, CI/CD pipelines, or even Microsoft-related tooling. The audience (engineering/leadership) fits, but the signal-to-noise ratio drifts since the discussion is entirely generic and never tailored to Azure DevOps itself.",
    "reasoning_summary": "The content focuses on generic Agile/DevOps practice improvement, with no explicit or implicit mention of Azure DevOps. There is only partial thematic alignment and no direct relevance to the category. Not a fit for the Azure DevOps classification.",
    "level": "Ignored"
  },
  "Enterprise Agility": {
    "category": "Enterprise Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development, focusing on the benefits of small experiments and iterative processes. While it touches on concepts like flexibility and customer-centric development, it primarily centres on team-level practices rather than broader organisational agility. The discussion lacks explicit references to enterprise-level frameworks or structures that support agility, which diminishes its alignment with the category.",
    "level": "Secondary"
  },
  "Sociotechnical Systems": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-08-07T11:26:10",
    "ai_confidence": 61.4,
    "ai_mentions": 1.2,
    "ai_alignment": 6.6,
    "ai_depth": 6.1,
    "ai_intent": 7.2,
    "ai_audience": 7.7,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content discusses improved software delivery through small experiments and cultural change, highlighting team mindset, customer-centricity, learning, and adaptability. However, it does not explicitly mention 'sociotechnical systems' or theoretical frameworks, nor does it deeply analyze the dynamic between technology and organizational structure. Some sociotechnical interplay is implied in the discussion of team approaches, learning culture, and process evolution. Nevertheless, the main focus is more practical (feature delivery) with only indirect alignment to the sociotechnical category. The audience (teams, leaders seeking improvement) aligns well, and much of the content is relevant, but theoretical or explicit sociotechnical analysis is lacking.",
    "reasoning_summary": "The content supports aspects of sociotechnical systems (team mindset, feedback, adaptation) but focuses mainly on practical delivery and process, with only indirect links to sociotechnical theories or explicit social-technical integration. Fit is partial but relevant.",
    "level": "Secondary"
  },
  "Flow Efficiency": {
    "category": "Flow Efficiency",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 72.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 22.0,
    "non_ai_confidence": 0,
    "final_score": 72.0,
    "reasoning": "The content discusses the transformation in feature delivery and the benefits of smaller experiments, which indirectly relates to flow efficiency by highlighting increased throughput and reduced risk. However, it lacks explicit mentions of flow efficiency principles, metrics, or techniques for eliminating bottlenecks. The focus is more on the mindset and approach rather than specific flow efficiency strategies, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Agile Product Management": {
    "category": "Agile Product Management",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 78.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 28.0,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the importance of small experiments and iterative processes in feature delivery, which aligns with Agile principles. It highlights customer feedback and a customer-centric approach, key aspects of Agile Product Management. However, it lacks direct mentions of specific Agile roles or frameworks, and while it touches on relevant concepts, it does not delve deeply into Agile methodologies or practices.",
    "level": "Secondary"
  },
  "Organisational Psychology": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Organisational Psychology",
    "calculated_at": "2025-09-05T03:28:50",
    "ai_confidence": 35.6625,
    "ai_mentions": 0.3,
    "ai_alignment": 3.7,
    "ai_depth": 2.9,
    "ai_intent": 3.8,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "Direct references to organisational psychology are virtually nonexistent; the content primarily discusses workflow changes, delivery throughput, and customer feedback loops in a software context. While some themes (like mindset shift, continuous learning, and adaptation) indirectly touch on motivational and behavioural concepts, they are not framed in psychological terms nor connected to organisational psychology theories. Depth focuses on process and productivity rather than psychological principles or theories about motivation, leadership, safety, or group behaviour. The audience could overlap with those interested in organisational psychology, but overall, the intent and content are not aligned with the category’s definition.",
    "reasoning_summary": "Fit is limited; content centers on process improvement and experimentation in software teams, not organisational psychology theories. Briefly touches on mindset and learning, but lacks psychological framing, depth, or direct intent.",
    "level": "Ignored"
  },
  "Complexity Thinking": {
    "category": "Complexity Thinking",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 62.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 12.0,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with the principles of complexity thinking, particularly in terms of iterative processes and customer feedback. However, it lacks direct references to complexity science frameworks or theories, and the depth of discussion on complexity concepts is limited. The focus is more on Agile practices rather than a thorough exploration of complexity dynamics.",
    "level": "Secondary"
  },
  "Miscellaneous": {
    "category": "Miscellaneous",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 5,
    "ai_alignment": 15,
    "ai_depth": 12,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the transformation in feature delivery through small experiments, which aligns with Agile principles but does not explicitly reference Agile, Scrum, or any specific methodologies. While it provides insights into a mindset shift and iterative processes, it lacks direct mentions of recognised frameworks, making it more of a general discussion on development practices rather than a focused exploration of Agile or related methodologies.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Kanban",
    "calculated_at": "2025-09-17T23:12:36",
    "ai_confidence": 22.85,
    "ai_mentions": 0.4,
    "ai_alignment": 1.6,
    "ai_depth": 1.9,
    "ai_intent": 2.2,
    "ai_audience": 4.5,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content describes the benefits of breaking features into small experiments, frequent delivery, and learning cycles. While these have conceptual overlap with Kanban principles (like continuous improvement and customer focus), nowhere is Kanban named or explicitly referenced. There is no mention of Kanban boards, WIP limits, flow management, or specific Kanban metrics. The themes are generic Agile/Lean and might loosely connect to Kanban, but the lack of direct mention and category-specific practices means the fit is tenuous at best. Higher signal and audience scores reflect some relevance for process-improving teams, but conceptual and intent fit are low for Kanban specifically.",
    "reasoning_summary": "The piece discusses experimentation, iterative delivery, and customer value—concepts adjacent to Kanban but without explicit reference or focus on Kanban principles or practices. Only a weak conceptual fit; not Kanban-specific content.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "category": "Platform Engineering",
    "calculated_at": "2025-02-17T12:02:16",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, without a clear focus on platform engineering principles or Internal Developer Platforms.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Beta Codex",
    "calculated_at": "2025-08-07T07:06:43",
    "ai_confidence": 41.18,
    "ai_mentions": 0.35,
    "ai_alignment": 4.1,
    "ai_depth": 4.3,
    "ai_intent": 4.1,
    "ai_audience": 5.25,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "There are no direct mentions of Beta Codex, nor explicit discussion of its theories or vocabulary. The content describes iterative, experimental, and customer-focused approaches—concepts that somewhat align with Beta Codex principles such as decentralisation and adaptiveness, but these are common agile/DevOps themes as well. The discussion lacks explicit references to decentralised organisational design, human-centric leadership, or deep contrasts with traditional hierarchy, and focuses on software teams' delivery practices rather than organisational structure or philosophy. The audience (software teams and product practitioners) marginally overlaps with Beta Codex’s, but the signal is moderate, with some indirect alignment in promoting experimentation and customer focus. Overall, the fit is partial and conceptual rather than explicit or deep.",
    "reasoning_summary": "Content suggests agile, experimental approaches and customer focus, which weakly relate to Beta Codex themes, but lacks explicit or deep discussion of Beta Codex principles. Fit is partial, with only modest conceptual overlap.",
    "level": "Tertiary"
  },
  "Agile Product Operating Model": {
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 10,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments and a customer-centric approach, which aligns with the principles of the Agile Product Operating Model. However, it lacks explicit references to the APOM framework and does not delve deeply into its specific components, such as governance or organisational structure.",
    "level": "Secondary"
  },
  "Leadership": {
    "category": "Leadership",
    "calculated_at": "2025-02-17T13:49:07",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development, lacking a clear focus on leadership practices.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Social Technologies",
    "calculated_at": "2025-08-07T06:10:42",
    "ai_confidence": 83.7,
    "ai_mentions": 2.4,
    "ai_alignment": 9.4,
    "ai_depth": 8.6,
    "ai_intent": 8.7,
    "ai_audience": 8.8,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "Direct mention of 'social technologies' is absent, accounting for the lower mentions score. However, the content is strongly aligned with the category: it discusses iterative experimentation, continuous improvement, customer-centric development, feedback loops, and a cultural shift—all key social technologies themes. The depth is robust, reflecting on mindset changes, risk reduction, and the impact on team collaboration. The main intent is to illustrate an adaptive, collaborative, and learning-driven approach to feature delivery, meant for practitioners and improvement-minded professionals. The signal is high, as most content directly supports the theme, with minimal off-topic material. No penalties were triggered, as the tone is positive and content is current.",
    "reasoning_summary": "Strong conceptual and thematic alignment with 'Social Technologies' via its focus on experimentation, team learning, feedback, adaptability, and continuous improvement, though lacking explicit mentions by name. Fit is clear and substantial.",
    "level": "Primary"
  },
  "Internal Developer Platform": {
    "category": "Internal Developer Platform",
    "calculated_at": "2025-02-24T13:33:20",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses the benefits of conducting small experiments in feature delivery, without a clear focus on Internal Developer Platforms or their role in streamlining development processes.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "category": "Artificial Intelligence",
    "calculated_at": "2025-02-24T13:33:21",
    "ai_confidence": 0,
    "non_ai_confidence": 0,
    "final_score": 0.0,
    "reasoning": "Content primarily discusses feature delivery and experimentation in software development without a clear focus on AI integration or its applications in Agile or DevOps.",
    "level": "Ignored"
  },
  "Scrum": {
    "category": "Scrum",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 30.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the concept of conducting small experiments to improve feature delivery, which aligns with Agile principles of iterative progress and responding to customer feedback. However, it does not explicitly mention Scrum roles, events, or artifacts, leading to a lower score in direct mentions. The depth of discussion is limited as it focuses more on the outcomes of experimentation rather than the Scrum framework itself.",
    "level": "Tertiary"
  },
  "Shift Left Strategy": {
    "category": "Shift Left Strategy",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller feature delivery and iterative processes, which align with the Shift-Left Strategy's emphasis on early feedback and quality. However, it does not explicitly mention testing, security, or compliance integration, nor does it focus on the Shift-Left concept as a primary theme, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "category": "Continuous Improvement",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 87.0,
    "ai_mentions": 80.0,
    "ai_alignment": 90.0,
    "ai_depth": 85.0,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses the transformation of feature delivery through a culture of experimentation, which aligns closely with the principles of Continuous Improvement. It highlights the importance of iterative processes, customer feedback, and learning from smaller experiments, all of which are core themes of Continuous Improvement. The depth of discussion is substantial, providing insights into how these practices lead to enhanced product quality and team effectiveness. Overall, the content strongly embodies the philosophy of Continuous Improvement.",
    "level": "Primary",
    "reasoning_summary": "This content is a great fit for the Continuous Improvement category, as it focuses on using experimentation and feedback to refine feature delivery. By emphasising iterative processes and learning from small-scale tests, it clearly demonstrates how ongoing adjustments can boost product quality and team performance—key aspects of Continuous Improvement."
  },
  "Common Goals": {
    "category": "Common Goals",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the transformation in feature delivery through smaller experiments, which indirectly relates to the concept of aligning team efforts with customer needs. However, it lacks explicit mentions of Common Goals, Agile, or DevOps principles. The focus is more on the process of experimentation rather than on shared objectives or strategic alignment, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Competence": {
    "category": "Competence",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 80.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the importance of continuous learning and experimentation in software development, which aligns with the core themes of competence. It highlights how smaller features and iterative processes enhance quality and customer satisfaction, reflecting a commitment to professional growth and effective delivery. However, while competence is a significant theme, the primary focus is more on the methodology of feature delivery rather than a deep exploration of competence itself.",
    "level": "Secondary"
  },
  "One Engineering System": {
    "category": "One Engineering System",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation in software development, but it does not explicitly mention the One Engineering System (1ES) or its principles. While there are elements of process improvement and efficiency, the focus is primarily on feature delivery rather than the integration and standardisation of engineering practices across teams, which is central to 1ES.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "category": "Agentic Agility",
    "calculated_at": "2025-04-10T13:40:02",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the transformation in software development through smaller features and experimentation, which aligns with the principles of adaptability and intentional shaping of outcomes. However, it lacks explicit mentions of Agentic Agility and does not differentiate between human and AI capabilities, focusing instead on general Agile practices.",
    "level": "Tertiary"
  },
  "Product Development": {
    "category": "Product Development",
    "calculated_at": "2025-04-10T13:40:05",
    "ai_confidence": 87.0,
    "ai_mentions": 18,
    "ai_alignment": 36,
    "ai_depth": 34,
    "non_ai_confidence": 20,
    "final_score": 87.0,
    "reasoning": "The content explicitly discusses methodologies for improving feature delivery through smaller experiments, which aligns closely with Agile principles and iterative development processes. It highlights the importance of customer feedback, risk reduction, and continuous improvement, all of which are core themes in product development. The depth of discussion is substantial, providing detailed insights into how these practices can transform product outcomes.",
    "level": "Primary"
  },
  "Time to Market": {
    "category": "Time to Market",
    "calculated_at": "2025-04-10T17:04:28",
    "ai_confidence": 78.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 28,
    "non_ai_confidence": 10,
    "final_score": 78.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development, focusing on the shift from delivering 25 to 150 features annually. It highlights the importance of smaller features and experimentation, which directly relates to improving Time to Market. The discussion includes aspects such as increased feedback opportunities, reduced risk, and customer-centric development, all of which align with the core themes of Time to Market. However, while the content is rich in examples and insights, it does not explicitly mention Time to Market as a term, which slightly lowers the confidence score.",
    "level": "Secondary",
    "reasoning_summary": "This content is a strong fit for the Time to Market category, as it explores how delivering smaller, more frequent features accelerates feedback and reduces risk—key aspects of improving Time to Market. While the term itself isn’t directly mentioned, the focus on faster, customer-driven development clearly aligns with the category’s core themes."
  },
  "Project Management": {
    "category": "Project Management",
    "calculated_at": "2025-04-10T13:40:12",
    "ai_confidence": 67.0,
    "ai_mentions": 3,
    "ai_alignment": 75.0,
    "ai_depth": 60.0,
    "non_ai_confidence": 0,
    "final_score": 67.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development, focusing on the benefits of smaller features and experimentation. While it does not explicitly mention project management methodologies or roles, it aligns with core project management principles such as risk management, iterative processes, and continuous improvement. The depth of discussion is moderate, providing insights into the benefits of this approach but lacking detailed exploration of project management tools or methodologies.",
    "level": "Secondary"
  },
  "Unrealised Value": {
    "category": "Unrealised Value",
    "calculated_at": "2025-04-10T17:04:46",
    "ai_confidence": 42.0,
    "ai_mentions": 10.0,
    "ai_alignment": 35.0,
    "ai_depth": 25.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the transformation in feature delivery through smaller experiments, which indirectly relates to the concept of Unrealised Value by highlighting the potential for increased delivery and customer satisfaction. However, it lacks explicit mentions of Unrealised Value or its indicators, and the focus is more on operational improvements rather than strategic insights into untapped opportunities. The depth of discussion on potential value is limited, primarily focusing on the benefits of experimentation rather than a comprehensive exploration of unrealised value in the context of Evidence-Based Management.",
    "level": "Tertiary"
  },
  "Hybrid Agile": {
    "category": "Hybrid Agile",
    "calculated_at": "2025-04-10T13:40:18",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation, which aligns with agile principles. However, it does not explicitly mention Hybrid Agile or critically examine the integration of traditional and agile methodologies. The focus is more on agile practices rather than the challenges of Hybrid Agile, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Current Value": {
    "category": "Current Value",
    "calculated_at": "2025-04-10T17:04:50",
    "ai_confidence": 62.0,
    "ai_mentions": 12,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": 0,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in feature delivery and the importance of customer feedback, which aligns with the concept of Current Value. It highlights metrics such as the number of features delivered and the quality of customer feedback, which are relevant indicators of value. However, while it touches on aspects of Current Value, it does not provide a comprehensive analysis or specific metrics typically associated with Current Value in Evidence-Based Management. The focus is more on the process of experimentation rather than a real-time assessment of value delivered, which slightly lowers the confidence score.",
    "level": "Secondary"
  },
  "Scaling": {
    "category": "Scaling",
    "calculated_at": "2025-04-10T13:40:25",
    "ai_confidence": 42.0,
    "ai_mentions": 15.0,
    "ai_alignment": 35.0,
    "ai_depth": 30.0,
    "non_ai_confidence": 0,
    "final_score": 42.0,
    "reasoning": "The content discusses the transformation of feature delivery through smaller experiments, which aligns with the principles of Agile and iterative development. However, it lacks explicit references to scaling frameworks or methodologies, and the focus is more on individual team practices rather than cross-team collaboration or enterprise-level scaling strategies. While it touches on concepts like customer feedback and flexibility, it does not delve deeply into the complexities of scaling Agile practices or managing dependencies across multiple teams.",
    "level": "Tertiary"
  },
  "GitHub": {
    "category": "GitHub",
    "calculated_at": "2025-04-10T13:40:28",
    "ai_confidence": 12.0,
    "ai_mentions": 0.0,
    "ai_alignment": 10.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content discusses software development practices and the benefits of smaller feature delivery but does not mention GitHub or its functionalities. While it touches on concepts relevant to Agile and iterative development, it lacks direct references to GitHub services, tools, or methodologies, resulting in a low confidence score for the GitHub category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "category": "Agnostic Agile",
    "calculated_at": "2025-04-10T17:04:32",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the importance of smaller features and a culture of experimentation, which aligns with the principles of Agnostic Agile, particularly the emphasis on adapting methods to context and focusing on value delivery. However, it lacks direct mentions of Agnostic Agile or its specific principles, and the discussion primarily revolves around feature delivery rather than a broader application of Agnostic Agile concepts. The depth of discussion is limited, focusing more on practical outcomes rather than theoretical underpinnings.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "category": "Company as a Product",
    "calculated_at": "2025-04-10T17:04:39",
    "ai_confidence": 62.0,
    "ai_mentions": 2,
    "ai_alignment": 3,
    "ai_depth": 3,
    "non_ai_confidence": 30,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation of feature delivery in software development through a culture of experimentation and customer feedback, which aligns with the principles of CaaP. It mentions the importance of customer-centric development and iterative processes, reflecting the core themes of treating the organisation as a product. However, it primarily focuses on software development practices rather than a broader organisational strategy, which limits its depth in the context of CaaP. The discussion is relevant but not exhaustive, leading to a moderate confidence score.",
    "level": "Secondary"
  },
  "Cell Structure Design": {
    "category": "Cell Structure Design",
    "calculated_at": "2025-04-10T17:04:42",
    "ai_confidence": 12.0,
    "ai_mentions": 0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": 0,
    "final_score": 12.0,
    "reasoning": "The content primarily discusses software development practices, particularly focusing on feature delivery and the benefits of smaller experiments. While it touches on themes of agility and customer-centric development, it does not explicitly mention or align with the principles of Cell Structure Design, such as decentralised structures or autonomous cells. The discussion lacks depth regarding the core concepts of the category, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-13T21:55:11",
    "ai_confidence": 6.38,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 0.8,
    "ai_intent": 1.1,
    "ai_audience": 1.5,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content never directly references Liberating Structures or any of its techniques (e.g., 1-2-4-All, Troika Consulting). Although it discusses small experiments, feedback, and iterative delivery—concepts that could relate to facilitation or collaborative improvement—it does so entirely in the context of general software development and product experimentation. There is no mention of team facilitation practices, structured group activities, or any specific methods from the Liberating Structures toolkit. The material targets product teams and developers, focusing on experimentation as a development process, not on structured facilitation methods or the practices characteristic of Liberating Structures. No penalties were applied because the content is not critical or outdated; it simply lacks any substantive connection to Liberating Structures, resulting in an extremely low fit for the evaluated category.",
    "reasoning_summary": "This content focuses solely on software experimentation and product delivery without referencing Liberating Structures or their facilitation methods. Its audience and purpose diverge from the category definition, resulting in a very low relevance score.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "category": "Open Space Agile",
    "calculated_at": "2025-04-10T17:04:53",
    "ai_confidence": 32.0,
    "ai_mentions": 10.0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": 0,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of smaller features and a culture of experimentation in software development, which aligns with Agile principles. However, it does not explicitly mention Open Space Agile or its specific practices, nor does it delve into the core themes of Open Space Technology, psychological safety, or co-creation. The focus is more on traditional Agile practices rather than the unique aspects of Open Space Agile, leading to a lower confidence score.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Principle",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 85.0,
    "ai_mentions": 15,
    "ai_alignment": 32,
    "ai_depth": 34,
    "non_ai_confidence": null,
    "final_score": 85.0,
    "reasoning": "The content focuses on the principle of 'Continuous Improvement' by discussing how a culture of experimentation and iterative feedback has led to increased feature delivery. It directly mentions smaller experiments and feedback loops, which are actionable principles in Agile methodologies. The emphasis on customer-centric development and flexibility aligns well with the guiding principles of Agile, further reinforcing its relevance to the category. The depth of discussion in how these practices lead to effective outcomes showcases a significant understanding of the principles involved.",
    "level": "Primary",
    "reasoning_summary": "This content clearly aligns with the Agile category, as it highlights the importance of continuous improvement, experimentation, and iterative feedback—core Agile principles. By emphasising customer focus and adaptability, it demonstrates a strong grasp of Agile methodologies and their practical benefits in driving effective, flexible development."
  },
  "Tool": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Tool",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 35.0,
    "ai_mentions": 0,
    "ai_alignment": 40.0,
    "ai_depth": 20.0,
    "non_ai_confidence": null,
    "final_score": 35.0,
    "reasoning": "The content discusses the concept of adopting smaller features and a culture of experimentation in software development. However, it does not mention specific tools or mechanisms that facilitate these practices, which is essential for it to align with the 'Tool' category. While there is a conceptual alignment with methodologies that could be enhanced through tools, it lacks direct reference to any specific tool or deep exploration of how tools might enable the described practices, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Philosophy": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Philosophy",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 32.0,
    "ai_mentions": 2,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content discusses the benefits of embracing a mindset of experimentation in software development, which hints at a philosophical approach. However, it primarily focuses on detailed descriptions of specific practices such as delivering smaller features and iterative processes, which are more procedural in nature. The depth of discussion relates to the outcomes of adopting this mindset but lacks a thorough exploration of the philosophical foundations behind these choices. Therefore, while it touches on aspects of the philosophy of agility and customer-centric development, it does not engage deeply enough with the 'why' and 'what' behind these practices.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Discipline",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 52.0,
    "ai_mentions": 100.0,
    "ai_alignment": 35.0,
    "ai_depth": 65.0,
    "non_ai_confidence": null,
    "final_score": 52.0,
    "reasoning": "The content briefly touches on principles of Agile and iterative processes, which relate to the discipline of software development. While it discusses the success of a team adopting a culture of experimentation, the focus is primarily on practical outcomes and experiences rather than the underlying principles and methodologies that define the discipline. The mention of transformation in feature delivery supports some alignment with discipline themes, but it lacks a comprehensive exploration of shared principles or governance structures, resulting in a moderate confidence score.",
    "level": "Tertiary"
  },
  "Artifact": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Artifact",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 25.0,
    "ai_mentions": 100.0,
    "ai_alignment": 20.0,
    "ai_depth": 10.0,
    "non_ai_confidence": null,
    "final_score": 25.0,
    "reasoning": "The content discusses the importance of small features and experiments within a software development process but does not explicitly mention Agile artifacts or their roles. It briefly touches on feedback and iterative processes, which align with the conceptual themes of transparency and adaptation, yet provides minimal depth specifically related to artifacts or their formal representations.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Observability",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 32.0,
    "ai_mentions": 0,
    "ai_alignment": 25.0,
    "ai_depth": 50.0,
    "non_ai_confidence": null,
    "final_score": 32.0,
    "reasoning": "The content primarily focuses on the benefits of implementing smaller features and a culture of experimentation in software development, with no explicit mention of observability. While it discusses concepts like feedback loops and continuous improvement that could touch on principles associated with observability, the core discussion is not centered around the measurement and understanding of internal system states or metrics, logs, and traces as defined in the category. Therefore, it has minimal alignment with the observability theme and lacks depth in discussing observability-related tools or practices.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Practice",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 72.0,
    "ai_mentions": 15,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 72.0,
    "reasoning": "The content primarily discusses the practice of utilizing smaller features and experimentation in software development to improve delivery effectiveness. It outlines actionable techniques such as gathering feedback quickly, reducing risk through small experiments, and fostering a culture of continuous improvement. While it touches on practices related to agile development, such as experimentation and iterative processes, it might not delve deeply into specific practices like TDD or pair programming, leading to a slightly lower confidence score. Overall, the content aligns well with the core themes of the 'Practice' category.",
    "level": "Secondary",
    "reasoning_summary": "This content fits the 'Practice' category as it explores practical approaches like using small features and experiments to enhance software delivery. It highlights methods for rapid feedback, risk reduction, and ongoing improvement, all of which are central to effective development practices. While it doesn’t cover every specific technique, its focus on actionable strategies makes it a strong match for this category."
  },
  "Method": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Method",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 63.0,
    "ai_mentions": 2,
    "ai_alignment": 75.0,
    "ai_depth": 55.0,
    "non_ai_confidence": null,
    "final_score": 63.0,
    "reasoning": "The content discusses a specific method of using smaller features and experimentation in software development to enhance feature delivery. It mentions increased feedback opportunities and reduced risk associated with this method, which shows alignment with structured procedural approaches. However, the focus is more on the benefits and mindset rather than a detailed step-by-step description of a defined method, resulting in a moderate confidence score.",
    "level": "Secondary"
  },
  "Model": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Model",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 62.0,
    "ai_mentions": 2,
    "ai_alignment": 50.0,
    "ai_depth": 75.0,
    "non_ai_confidence": null,
    "final_score": 62.0,
    "reasoning": "The content discusses the transformation in software development through the lens of experimentation and iterative processes, which loosely aligns with Agile principles. However, it does not explicitly reference or explore specific models or frameworks such as Lean Startup or the Cynefin Framework. While it mentions concepts relevant to models, like 'small experiments' and 'iterative feedback', the focus is more on the results and mindset rather than detailed analysis or comparison of established models. Thus, the confidence score reflects a moderate alignment with the category due to the focus on experimentation without deep engagement with specific models or frameworks.",
    "level": "Secondary"
  },
  "Framework": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Framework",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 45.0,
    "ai_mentions": 3,
    "ai_alignment": 25,
    "ai_depth": 15,
    "non_ai_confidence": null,
    "final_score": 45.0,
    "reasoning": "The content discusses a transformation in software development through experimentation and iterative processes, which resonates with Agile principles, particularly the notion of smaller, iterative features akin to Agile frameworks. However, it lacks explicit discussions about formal frameworks like Scrum or Kanban, which are central to the category. The focus is more on the concept of experimentation rather than a structured Agile framework itself, limiting its depth in this context.",
    "level": "Tertiary"
  },
  "Tenet": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Tenet",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 68.0,
    "ai_mentions": 10,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 68.0,
    "reasoning": "The content discusses the concept of embracing smaller features and a culture of experimentation. While it aligns with the core themes of Agile methodologies, particularly around feedback loops and continuous improvement, it does not explicitly mention guiding rules or tenets that shape decision-making. The content does offer actionable insights into enhancing delivery through iterative processes, which relates conceptually to Agile tenets, but lacks a precise framework or set of tenets that would strengthen the alignment. The depth of the discussion on the culture of experimentation also reflects an understanding of Agile principles but stops short of providing explicit tenets.",
    "level": "Secondary"
  },
  "Capability": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Capability",
    "calculated_at": "2025-05-01T14:06:26",
    "ai_confidence": 72.0,
    "ai_mentions": 10,
    "ai_alignment": 30,
    "ai_depth": 25,
    "non_ai_confidence": null,
    "final_score": 72.0,
    "reasoning": "The content focuses on how adopting smaller features and a culture of experimentation enhances software development, directly discussing capabilities such as flexibility, customer-centric development, and the iterative learning process. While it does mention practical approaches and examples of experimentation, it primarily revolves around a mindset shift rather than detailing enduring capabilities cultivated within an organization. It provides substantial depth regarding the benefits and impacts of these practices, aligning well with the themes of capability development but remains slightly more tactical than strategic.",
    "level": "Secondary",
    "reasoning_summary": "This content aligns with the category as it explores how embracing smaller features and experimentation can improve software development. It highlights the benefits of flexibility and customer focus, emphasising a shift in mindset. While it leans towards practical examples rather than long-term organisational capabilities, it still addresses key aspects of capability development, making it a good fit overall."
  },
  "Service Level Expectation": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-06T20:54:41",
    "ai_confidence": 18.85,
    "ai_mentions": 0.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.7,
    "ai_intent": 3.1,
    "ai_audience": 5.0,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content centers on improving software delivery by adopting small experiments and frequent feedback, but never directly references Service Level Expectation (SLE) as a concept. The ideas of smaller features, faster delivery, experimentation, and continuous learning are generally aligned with Agile and Kanban values, which relate peripherally to concepts underlying SLE, such as predictability and cycle time. However, at no point does the article mention SLE, its calculation, its probability/range basis, its specific connection to workflow predictability, or any authoritative Kanban/Scrum source material. There is modest conceptual overlap in that faster cycle times and smaller work items can influence SLEs, but none of these links are drawn or discussed — no SLE definitions, applications, or explicit advice. The audience (practitioners of software/product development) loosely matches the target for SLE guidance, but the focus is entirely on changing team attitudes and delivery cadence, not on establishing, using, or improving an SLE. The signal-to-noise ratio is adequate, but most of the signal is about product strategy and experimentation rather than explicit flow predictability or measurement. Thus, the overall confidence the content fits specifically under 'Service Level Expectation' is very low.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Ethos",
    "calculated_at": "2025-05-13T21:55:10",
    "ai_confidence": 54.87,
    "ai_mentions": 1.8,
    "ai_alignment": 5.7,
    "ai_depth": 5.4,
    "ai_intent": 6.2,
    "ai_audience": 7.0,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content discusses a shift in software development towards experimentation and small, frequent feature delivery, emphasizing customer value and adaptability. However, it primarily frames this as a 'mindset' change rather than deeply exploring or explicitly naming foundational convictions or systemic ethos behind Agile, Lean, or DevOps. While it hints at system evolution and delivery outcomes, there is limited direct reference to ethos, and most references are conceptual, not explicit. The depth is moderate; it mentions continuous learning and customer centricity but doesn't substantially analyze the values underpinning these practices. Audience targeting and signal-to-noise are stronger due to its relevance for practitioners. No penalties applied as content is contemporary and tone is aligned.",
    "reasoning_summary": "While the article embraces experimentation and customer focus, it does so at a mindset and practice level, not by deeply unpacking the underlying ethos. This gives it only modest alignment with the 'Ethos' category – informative for practitioners, but not a deep exploration of systemic beliefs or convictions.",
    "level": "Tertiary"
  },
  "Customer Focus": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Customer Focus",
    "calculated_at": "2025-05-13T21:55:09",
    "ai_confidence": 87.67,
    "ai_mentions": 7.1,
    "ai_alignment": 9.3,
    "ai_depth": 8.9,
    "ai_intent": 9.0,
    "ai_audience": 8.2,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content clearly and repeatedly references customer focus both explicitly ('customer feedback', 'customer-centric development', 'prioritises customer needs') and thematically by advocating for iterative experimentation driven by user response. Depth is high: it moves beyond platitudes, explaining how breaking features into experiments enables rapid feedback loops, faster pivots, and building value in alignment with real customer needs—key ideas in the definition. There is clear intent to align software development practices with delivering customer value, and the guidance closely matches agile, lean, and DevOps philosophies. The audience is software teams and leaders, directly relevant to the category. No penalties were needed: the discussion is current, positive, and focused. Score differentiation among dimensions reflects that while mentions are not constant, the alignment and purpose fit are very strong.",
    "reasoning_summary": "This article exemplifies Customer Focus by showing how feature experiments, rapid feedback, and iterative learning guide teams to deliver customer value. It's practical, aligned with agile and DevOps mindsets, and intentionally targets practitioners committed to customer-oriented product success.",
    "level": "Primary"
  },
  "First Principal": {
    "resourceId": "WEYf9jWG9wk",
    "category": "First Principal",
    "calculated_at": "2025-05-13T21:55:11",
    "ai_confidence": 35.19,
    "ai_mentions": 0.2,
    "ai_alignment": 4.8,
    "ai_depth": 4.4,
    "ai_intent": 3.7,
    "ai_audience": 8.1,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content illustrates valuable Lean/Agile ideas (experimentation, feedback cycles, risk reduction) but never explicitly identifies, explains, or applies first principles as non-negotiable, foundational constraints. All principles are presented as beneficial heuristics or mindsets rather than immutable truths. There’s no reference to first principles in Lean, Agile, Scrum, or DevOps per the strict definition. The target audience is aligned, and the signal is high, but the discussion is not anchored in the required first principles framework.",
    "reasoning_summary": "While the article supports Lean/Agile practices, it doesn't define or discuss true first principles. It focuses on experimentation as an effective approach, not as an immutable foundation. The content is audience-appropriate and on-topic, but lacks the depth and focus on first principles the category demands.",
    "level": "Ignored"
  },
  "Definition of Workflow": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:16",
    "ai_confidence": 33.75,
    "ai_mentions": 0.8,
    "ai_alignment": 3.1,
    "ai_depth": 3.6,
    "ai_intent": 3.9,
    "ai_audience": 5.7,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on the practice of breaking down features and experimenting with smaller increments in software development. While it aligns somewhat with agile and continuous improvement themes, there are no direct or implicit references to the 'Definition of Workflow' as explicit agreements, workflow policies, WIP limits, or Kanban-specific practices. Key elements like entry/exit criteria or workflow policies are absent. The discussion is more about mindsets (experimentation, customer focus) and does not outline procedural rules or workflow definitions per Kanban or agile theory. Thus, scores for mentions, alignment, and depth are low, with some moderate relevance on audience and intent given the agile context.",
    "reasoning_summary": "This content discusses agile experimentation and feature delivery but does not address the Definition of Workflow as specified. There are no explicit or implicit references to workflow policies or Kanban agreements, making its fit with the category limited.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:04:45",
    "ai_confidence": 41.12,
    "ai_mentions": 1.3,
    "ai_alignment": 4.7,
    "ai_depth": 4.8,
    "ai_intent": 5.0,
    "ai_audience": 6.2,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content emphasizes experimentation, small feature delivery, customer feedback, and continuous improvement—ideas that align broadly with modern product development frameworks. However, it never directly or specifically discusses the 'Product Developer' role/accountability, nor does it cover their cross-functional responsibilities, collective accountability, or distinctions between human and automated developers. The closest it comes is referencing 'teams' and 'mindset' related to agile delivery, but with no explicit tie to the Product Developer role as formally defined. Audience alignment is moderate, as practitioners may benefit from the advice, but there's little focus on formal Product Developer-specific responsibilities or behaviors. Nearly all the discussion is relevant, resulting in a high signal-to-noise ratio, but there is a lack of depth relating to Product Developer accountability.",
    "reasoning_summary": "The content aligns with agile product development and emphasizes experimentation and incremental delivery, but does not address Product Developer roles or accountabilities directly. Its relevance to the Product Developer category is limited to general principles rather than role-specific responsibilities.",
    "level": "Tertiary"
  },
  "Collective Intelligence": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:04:45",
    "ai_confidence": 13.72,
    "ai_mentions": 0.2,
    "ai_alignment": 2.9,
    "ai_depth": 2.5,
    "ai_intent": 1.7,
    "ai_audience": 4.8,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on agile experimentation, breaking down features, and iterative team learning in software delivery. However, it exclusively discusses human collaboration—teams, feedback, learning cycles, and product focus. There are no explicit mentions or implied involvement of AI agents, human-AI partnerships, or the emergence of collective intelligence arising from human-AI collaboration. While some elements tangentially relate to distributed learning, these are situated purely within human teamwork, with no references to socio-technical, decision-making frameworks incorporating AI, or hybrid cognition. Audience and signal scores are slightly higher since product and Agile teams could find some relevance, but direct and deep alignment with the Collective Intelligence category's definition are weak to negligible.",
    "reasoning_summary": "This content centers on agile human team practices, emphasizing experimentation and customer-centric development, but lacks any reference to human-AI collaboration or collective intelligence concepts. Its relevance to the Collective Intelligence category is minimal.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-23T09:04:47",
    "ai_confidence": 18.45,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 2.4,
    "ai_intent": 2.0,
    "ai_audience": 5.2,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on using small experiments and frequent delivery to improve product outcomes, emphasizing iterative improvement, customer feedback, and risk reduction. However, there are no direct mentions or explicit discussions of OKRs, their framework, alignment, or measurement concepts per John Doerr's foundational work. While it touches on themes relevant to agile and outcome-based approaches—such as iteration, learning, and customer-centricity—it does not tie these ideas to Objective Key Results specifically, nor does it reference OKR principles or practices like stretch goals, transparency, or outcome measurement through key results. The main intent is about the benefits of experimentation for feature delivery, not OKR implementation, strategy, or theory.",
    "reasoning_summary": "While the content champions iterative improvement, experimentation, and customer value in software development, it does not reference or substantively align with Objective Key Results. There are no direct or indirect connections to OKR frameworks, measurement, or strategic alignment principles.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:06:03",
    "ai_confidence": 67.45,
    "ai_mentions": 0.85,
    "ai_alignment": 8.15,
    "ai_depth": 7.85,
    "ai_intent": 8.6,
    "ai_audience": 8.05,
    "ai_signal": 7.75,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "Direct mentions are very limited, as 'Agentic Engineering' is never named or referenced, resulting in a low 'mentions' score. However, the content's themes of breaking work into small experiments, rapid feedback, risk reduction, and customer-centric iteration are conceptually adjacent to Agentic Engineering. The main intent aligns with maximizing developer (team) agency and empirical adaptation—core to the category. Depth is good but the discussion remains practical rather than philosophical; it doesn't explicitly address systemic observability, AI augmentation, or autonomy across both human and intelligent systems. The audience is technical practitioners, which is a fair match. The signal-to-noise ratio is high—nearly all content is on-topic—but lacks explicit focus on agentic principles or terminology.",
    "reasoning_summary": "The content strongly supports iterative, feedback-driven development and increased team agency, which aligns with Agentic Engineering themes. However, it lacks explicit discussion of agentic philosophy, autonomy, or AI integration, making it well-aligned but not a perfect fit for the category.",
    "level": "Secondary"
  },
  "Agentic Software Delivery": {
    "resourceId": "WEYf9jWG9wk",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:41",
    "ai_confidence": 28.682,
    "ai_mentions": 0.4,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 3.5,
    "ai_audience": 4.1,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "There are no direct mentions of Agentic Software Delivery or autonomous AI agents. The content centers on iterative delivery and continuous improvement via small experiments, aligning with modern agile thinking, but lacks substantive discussion on agentic integration, contextual intelligence, or AI agency. The audience is practitioners in software delivery, which somewhat aligns, and the intent is about bettering delivery practices. However, signal-to-noise is modest since the discussion never touches on autonomous agents, agentic design, or the enabling technology/core principles of Agentic Software Delivery. No outdated or critical tone is present, so no penalties apply.",
    "reasoning_summary": "Content discusses agile/iterative delivery but never addresses AI agents, agency, or agentic software delivery principles. Thematic overlap on experimentation and improvement is partial, so fit with Agentic Software Delivery is low.",
    "level": "Ignored"
  }
}