{
  "Large Scale Agility": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Large Scale Agility",
    "calculated_at": "2025-08-07T06:10:18",
    "ai_confidence": 33.46,
    "ai_mentions": 1.3,
    "ai_alignment": 3.6,
    "ai_depth": 3.9,
    "ai_intent": 3.1,
    "ai_audience": 4.4,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses software quality as a leadership responsibility and suggests such decisions should not be left to individual teams. It alludes to organizational decision-making but never directly addresses large-scale agile frameworks, enterprise transformations, or scaling practices. The focus remains at the intersection of leadership and team practices, with only light implications for scaling. There is no mention of SAFe, LeSS, cross-team collaboration, or other enterprise-level considerations specified by the category definition. The audience may include executives, but the core messaging is about accountability, not about large-scale agility principles. Thus, only partial conceptual overlap occurs, mainly through the leadership lens.",
    "reasoning_summary": "Mainly focuses on leadership accountability for software quality, with minor implications for organization-wide decisions, but lacks direct discussion of large-scale agile frameworks or scaling practices. Partial, indirect fit to the category.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Tenet",
    "calculated_at": "2025-08-07T11:24:02",
    "ai_confidence": 53.8,
    "ai_mentions": 3.2,
    "ai_alignment": 6.9,
    "ai_depth": 6.7,
    "ai_intent": 6.0,
    "ai_audience": 7.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content emphasizes maintaining high software quality and argues that lowering standards is a leadership decision, referencing the 'Definition of Done.' While this aligns conceptually with tenets about quality and professionalism in Agile and Scrum, it does not directly cite or thoroughly explore specific tenets (e.g., 'quality is a non-negotiable tenet'). The tone is prescriptive and targets leaders and Scrum teams, matching the expected audience and intent. However, it lacks explicit language around 'tenets' and does not methodically discuss concrete guiding rules or doctrines, making the fit partial rather than definitive.",
    "reasoning_summary": "The content partially fits the 'Tenet' category by advocating for uncompromising quality as a guiding rule but lacks explicit tenet terminology and deep exploration of tenets in established frameworks; overall alignment is moderate.",
    "level": "Tertiary"
  },
  "Collaboration Tools": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Collaboration Tools",
    "calculated_at": "2025-10-01T16:59:05",
    "ai_confidence": 6.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 0.3,
    "ai_intent": 1.1,
    "ai_audience": 2.6,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on leadership responsibility regarding software quality standards, using the Definition of Done as an example. There are no direct or indirect mentions of collaboration tools or how teams coordinate through such platforms. The main theme is decision-making about quality, not communication or coordination technology. Thus, conceptual and direct alignment with \"Collaboration Tools\" is extremely weak, as is depth. The target audience of leaders and Agile practitioners has minimal overlap but is not focused on team collaboration tooling. No penalty applies as content is recent and not antithetical to the category; it is simply unrelated.",
    "reasoning_summary": "This content addresses leadership responsibility for quality in Agile, without mentioning or discussing collaboration tools. The topic, intent, and examples are unrelated to platforms that enhance team coordination or communication.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Revenue per Employee",
    "calculated_at": "2025-10-01T16:58:57",
    "ai_confidence": 9.45,
    "ai_mentions": 0.1,
    "ai_alignment": 0.8,
    "ai_depth": 0.6,
    "ai_intent": 0.7,
    "ai_audience": 1.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content critiques leadership decisions about software quality but does not mention, discuss, or analyze Revenue per Employee as a metric. There are no direct or indirect links to workforce efficiency measurement, systemic financial observability, or metric-based data. The theme focuses on responsibility for quality standards and risk but doesn't address financial throughput or empirical effectiveness using any observability metric. Audience may overlap slightly if readers seek org-level financial implications, but overall, content is wholly unrelated to the classification intent.",
    "reasoning_summary": "Content centers on leadership responsibility for software quality, not Revenue per Employee. No metric-based, empirical, or financial observability discussion is present. Fit for the assigned category is extremely low and only partial at best.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Continuous Delivery",
    "calculated_at": "2025-05-16T14:27:58",
    "ai_confidence": 32.7,
    "ai_mentions": 0.7,
    "ai_alignment": 3.5,
    "ai_depth": 3.2,
    "ai_intent": 4.0,
    "ai_audience": 6.0,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on responsibility for software quality as a leadership decision, using metaphors and calling out the importance of standards such as Definition of Done. While this topic is adjacent to Continuous Delivery—since quality and leadership buy-in are relevant—it never mentions Continuous Delivery, automation, incremental deployment, or related practices. The primary concern is accountability and decision rights in quality, not delivery methods or tooling. The audience (leadership, teams) may overlap with Continuous Delivery discussions, but the article lacks direct alignment with the core principles and practices of Continuous Delivery as defined, and there is minimal exploration of delivery systems, automation, or rapid release cycles.",
    "reasoning_summary": "This content discusses the leadership responsibility for software quality but does not address Continuous Delivery principles or practices. It is adjacent, not core, to the category, touching on quality standards rather than delivery techniques, so confidence is low.",
    "level": "Ignored"
  },
  "Scaling": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Scaling",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 7.78,
    "ai_mentions": 0.1,
    "ai_alignment": 1.7,
    "ai_depth": 1.9,
    "ai_intent": 2.2,
    "ai_audience": 1.8,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on leadership accountability around software quality and the decision to compromise standards. It draws attention to leadership's role in quality decisions instead of placing this burden on teams. However, there are no direct mentions or clear discussions about scaling Agile, coordinating multiple teams, or handling enterprise delivery complexities. There are no frameworks or techniques for cross-team collaboration or scaling addressed. It targets leadership and team interactions rather than scaling methodologies or principles, resulting in low conceptual and depth scores. No penalties were necessary as there are no outdated or undermining elements present.",
    "reasoning_summary": "The content dwells on leadership's responsibility in quality decisions within Agile, without touching on scaling methodologies, multi-team coordination, or frameworks. As such, it offers little alignment with the Scaling category definition.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "3YDTlhSlU4A",
    "category": "System Configuration",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 13.7,
    "ai_mentions": 0.3,
    "ai_alignment": 1.4,
    "ai_depth": 1.0,
    "ai_intent": 2.3,
    "ai_audience": 6.6,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content critiques decision-making around software quality and leadership accountability, focusing on project standards and risk. No direct references to system configuration concepts, practices, tools, or audience are present. While there is some tangential relevance (quality standards may affect configuration), the core themes are management of software quality, not configuration management or technical setup. The audience is general leadership/decision-makers, not system practitioners.",
    "reasoning_summary": "This content centers on leadership choices in software quality, not system configuration. While tangentially relevant, it lacks references to configuration, tools, or technical maintenance. The focus is business risk, not best practices for system setup, so category fit is low.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Definition of Done",
    "calculated_at": "2025-08-07T07:06:16",
    "ai_confidence": 83.2,
    "ai_mentions": 8.6,
    "ai_alignment": 8.9,
    "ai_depth": 7.8,
    "ai_intent": 8.4,
    "ai_audience": 8.2,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content explicitly references the Definition of Done (DoD), emphasizing its critical role in ensuring software quality and standards. It contrasts DoD with leadership decisions, using a direct example to illustrate its importance. The thematic focus aligns with core DoD topics—preventing compromise, maintaining criteria, and clarifying responsibilities. The depth is moderate: while it strongly advocates for DoD's role, it primarily centers on leadership vs. team responsibilities and does not deeply explore best practices or nuanced criteria-building. Signal is high, but the piece is also partly a call to action for leaders rather than in-depth operational guidance. Audience alignment fits practitioners and leaders responsible for enforcing quality via DoD. There are no outdated concepts or antagonistic tones. Overall, this post is a solid but not exhaustive fit for the Definition of Done category.",
    "reasoning_summary": "The content uses Definition of Done to frame the software quality discussion, arguing it’s a leadership decision to compromise. It is aligned, relevant, and appropriately targeted, though more an advocacy piece than a detailed DoD guide. Fit is strong, but partial.",
    "level": "Primary"
  },
  "Strategy": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Strategy",
    "calculated_at": "2025-08-07T07:06:13",
    "ai_confidence": 74.75,
    "ai_mentions": 4.3,
    "ai_alignment": 8.9,
    "ai_depth": 7.8,
    "ai_intent": 8.2,
    "ai_audience": 8.7,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 75.0,
    "reasoning": "The content strongly aligns with the Strategy category by framing software quality decisions as leadership responsibilities tied to organisational risk and business objectives, rather than technical or team-level issues. While it does not explicitly use the term 'strategy,' it emphasizes leadership accountability for aligning quality trade-offs with organizational goals and risk tolerance, a fundamentally strategic concern. The depth is moderate: the content moves beyond surface critique by invoking executive decision-making, boardroom-level discussions, and business risk, but does not discuss broader strategic frameworks or multi-dimensional planning. Audience and intent are highly aligned, targeting decision-makers rather than practitioners, and purposefully advocating for top-level engagement on strategic quality trade-offs. The signal-to-noise ratio is strong, with a clear, focused argument. There are no penalties as the material is current, on-topic, and serious in tone.",
    "reasoning_summary": "Firmly addresses strategy by positioning software quality as a leadership/board-level decision connected to organizational risk and objectives. Fit is strong though not exhaustive; lacks explicit strategy vocabulary but intent and themes are closely aligned.",
    "level": "Secondary"
  },
  "Customer Focus": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Customer Focus",
    "calculated_at": "2025-08-07T07:06:16",
    "ai_confidence": 21.96,
    "ai_mentions": 0.2,
    "ai_alignment": 2.9,
    "ai_depth": 2.1,
    "ai_intent": 2.4,
    "ai_audience": 6.3,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on leadership responsibility for software quality and the risks of lowering standards. While high quality can indirectly benefit customers, the content does not discuss customer outcomes, customer value measurement, or feedback loops. It neither defines nor prioritizes customer-centric perspectives, value, nor does it reference customer-focused evidence or outcomes. The main theme is about accountability for quality decisions, not about aligning product development with customer value. Only a faint, indirect connection can be made between quality and customer impact, which is not expanded upon. Audience is practitioners and leaders, which generally overlaps, but the lack of direct or in-depth reference to Customer Focus restricts alignment. There are no penalties since the content is current and not critical of the category itself.",
    "reasoning_summary": "Content centers on leadership's ownership of software quality decisions, with only an indirect link to customer value. It lacks explicit or thorough discussion of customer outcomes, feedback, or value measurement, and only partially aligns to the category.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Technical Debt",
    "calculated_at": "2025-08-07T11:24:02",
    "ai_confidence": 49.15,
    "ai_mentions": 1.7,
    "ai_alignment": 5.6,
    "ai_depth": 4.1,
    "ai_intent": 5.9,
    "ai_audience": 6.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content focuses on leadership responsibility for decisions that impact software quality, referencing lowered standards and risk acceptance. While these can result in technical debt, the article does not mention technical debt explicitly, nor does it discuss its identification, management, or remediation in depth. It instead frames the discussion primarily around responsibility and quality bar-setting, with only implied connections to technical debt. The intended audience (leadership and teams) and relevance are somewhat aligned, but the piece is only indirectly relevant to the technical debt category.",
    "reasoning_summary": "The article discusses leadership's role in software quality decisions, which may cause technical debt, but does not directly address or deeply explore technical debt itself. The fit is partial and mostly conceptual, not explicit.",
    "level": "Tertiary"
  },
  "Agentic Agility": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agentic Agility",
    "calculated_at": "2025-10-01T16:58:20",
    "ai_confidence": 34.1,
    "ai_mentions": 0.3,
    "ai_alignment": 3.9,
    "ai_depth": 3.6,
    "ai_intent": 3.7,
    "ai_audience": 7.5,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content centers on the ownership of software quality decisions, emphasizing that leadership, not teams, should be accountable for lowering standards. Although it references agency (control) in decision-making, it does not explicitly discuss agency as defined in the Agentic Agility category. There are implicit links to agency and accountability, but the focus is on leadership responsibility and risk in quality compromise rather than on reflective, adaptive action or developing agentic capacity within teams or AI. There is no mention of mechanisms or concepts (e.g., intentionality, double-loop learning) outlined in Agentic Agility's key topics. The audience (leaders, Scrum practitioners) partially overlaps, and the discussion does not contain significant off-topic noise.",
    "reasoning_summary": "Content touches on accountability in Agile but does not address agency or adaptivity per Agentic Agility's definition; the fit is partial and mostly indirect.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Backlog",
    "calculated_at": "2025-10-01T16:58:52",
    "ai_confidence": 8.3,
    "ai_mentions": 0.7,
    "ai_alignment": 1.8,
    "ai_depth": 1.2,
    "ai_intent": 1.1,
    "ai_audience": 1.5,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on leadership decisions regarding software quality and the enforcement of the Definition of Done in Agile, with no direct mention of the Product Backlog or backlog-related practices. Its discussion is centered on quality ownership, risk, and organizational responsibility, rather than on backlog management, prioritization, user stories, or backlog refinement. While it indirectly references the Scrum framework (via Definition of Done and team roles), there is virtually no content relating to the Product Backlog’s management, purpose, prioritization, or any key topic from the classification definition.",
    "reasoning_summary": "The content does not discuss the Product Backlog in any meaningful way. Its focus is on software quality decisions and leadership accountability, not backlog management, prioritization, or Scrum backlog practices.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Personal",
    "calculated_at": "2025-05-16T14:27:58",
    "ai_confidence": 31.213,
    "ai_mentions": 2.004,
    "ai_alignment": 3.805,
    "ai_depth": 3.439,
    "ai_intent": 4.076,
    "ai_audience": 4.153,
    "ai_signal": 3.352,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content discusses the responsibility for software quality resting with leadership, using analogies and critiquing organizational choices. There is some subjective framing (e.g., rhetorical questions, 'the real conversation should be happening in the boardroom') but no substantial personal experience, anecdote, or unique personal insight is shared. The main thrust is prescriptive/critical policy advice rather than a personal story; audience alignment is moderate (executive/leadership). Thus, alignment and depth are middling, with only a slight relevance to the 'Personal' category.",
    "reasoning_summary": "This piece critiques leadership choices on software quality, using strong rhetoric but offering little personal narrative or individual reflection. While relevant to business agility themes, it lacks the personal experience and anecdotal depth required for the Personal category.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Method",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 41.31,
    "ai_mentions": 2.4,
    "ai_alignment": 4.7,
    "ai_depth": 3.8,
    "ai_intent": 5.3,
    "ai_audience": 7.2,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content references the 'Definition of Done' in Scrum, which is a method-related artifact enforcing consistent delivery standards. However, the primary focus is on leadership accountability and the consequences of compromising quality, not on detailed procedural steps or method application. There are few direct method mentions and little exploration of how methods achieve results. The focus is more decision-oriented than method-specific.",
    "reasoning_summary": "While the content mentions Scrum’s Definition of Done, its main emphasis is leadership responsibility in quality decisions—not on method procedures. Method is referenced, but not explored in detail, resulting in moderate-low confidence for this category.",
    "level": "Tertiary"
  },
  "Enterprise Agility": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 36.52,
    "ai_mentions": 1.7,
    "ai_alignment": 4.4,
    "ai_depth": 3.9,
    "ai_intent": 4.6,
    "ai_audience": 5.5,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content discusses the role of leadership in software quality decisions, highlighting how compromising on quality is a business-level, not a team-level, issue. While there are subtle implications for enterprise agility—leadership's role in setting standards and acknowledging business risks—the focus is more on accountability for quality rather than fostering adaptability or organisational responsiveness. There is a passing critical mention of 'Agile,' but the overall treatment does not address agility at the enterprise level, nor does it discuss frameworks, culture change, or broad organisational implications. The intended audience includes leaders, which aligns somewhat with enterprise concerns, but most of the content targets decision-making authority and risk acceptance around quality. As such, most scores are moderate, reflecting limited direct relevancy to the enterprise agility category.",
    "reasoning_summary": "This content spotlights leadership's accountability in software quality decisions, with a nod to organisational responsibility. However, it doesn't deeply address enterprise agility principles, such as adaptable structures or cultural transformation, making its fit in the category quite limited.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-05-16T14:28:01",
    "ai_confidence": 14.4,
    "ai_mentions": 0.5,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 2.2,
    "ai_audience": 5.5,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on the topic of software quality as a leadership decision, using analogies with financial and legal standards and emphasizing accountability in quality decisions. It does mention Agile and Scrum, but there is no discussion, explicit or implicit, of hypotheses, experimentation, data-driven decisions, or validated learning. The main ideas center on ownership and standards, not on hypothesis-driven product development. Therefore, it only marginally touches the target audience (product leaders may overlap), and any alignment with the category is minimal and coincidental.",
    "reasoning_summary": "This piece argues that software quality compromises rest with leadership, not with teams. While relevant to product quality and decision-making, it doesn't touch on hypothesis-driven development, experimentation, or validated learning, so fit with the category is minimal.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Discipline",
    "calculated_at": "2025-08-07T09:25:34",
    "ai_confidence": 52.76,
    "ai_mentions": 1.7,
    "ai_alignment": 6.9,
    "ai_depth": 5.2,
    "ai_intent": 7.1,
    "ai_audience": 6.7,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 53.0,
    "reasoning": "The content discusses the importance of consistent standards (e.g., Definition of Done) and leadership accountability for software quality, touching on core elements of discipline such as governance, professional standards, and ethical responsibility. However, it does not explicitly refer to 'discipline' as a field of study or practice, nor does it deeply explore the systemic maturation of frameworks like Agile or DevOps. The focus remains at the intersection of leadership choices and team standards, making the primary intent informational for leaders and practitioners but not wholly about the evolution or application of 'Discipline' as defined. The discussion of quality standards and governance aligns with the category but stays relatively superficial, lacking broader analysis of discipline as a systemic, evolving field.",
    "reasoning_summary": "The content partially fits: it discusses standards, governance, and accountability—components of discipline—but lacks explicit, in-depth discussion of discipline as a structured field or evolution of methodologies. Fit is partial, not primary.",
    "level": "Tertiary"
  },
  "Agile Planning Tools": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-08-07T07:21:31",
    "ai_confidence": 8.1,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.3,
    "ai_intent": 0.4,
    "ai_audience": 1.2,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses software quality decisions within Agile, mentioning the Definition of Done and Scrum teams but does not focus on Agile Planning Tools. There are no direct references or in-depth discussion of tools, methodologies, or backlog management. While the topic is related to Agile practices, especially process rigor, it does not explore or even tangentially refer to planning tools, features, or their functionalities, nor does it address their benefits, metrics, or integration in Agile planning. The main intent is to discuss leadership responsibility for quality, rather than planning capabilities or tools.",
    "reasoning_summary": "This content focuses on leadership and software quality within Agile but does not discuss Agile Planning Tools, their functionalities, or planning strategies. Fit is minimal and primarily associative to Agile, not the category.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Coaching",
    "calculated_at": "2025-08-07T09:25:35",
    "ai_confidence": 12.3,
    "ai_mentions": 0.6,
    "ai_alignment": 1.1,
    "ai_depth": 1.4,
    "ai_intent": 1.7,
    "ai_audience": 3.0,
    "ai_signal": 1.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on leadership accountability for software quality rather than on facilitating growth, guidance, or skill development in teams. Coaching is not directly mentioned or explored. Themes are leadership, standards, and risk, not supportive team development.",
    "reasoning_summary": "The content critiques leadership decisions on software quality, not team coaching. It lacks direct or conceptual alignment with coaching, offering no guidance, feedback, or developmental focus emblematic of the category.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-08-07T11:24:02",
    "ai_confidence": 5.4,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 0.8,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content discusses software quality decisions as a leadership issue, using Scrum and Definition of Done as examples. It does not mention or discuss Internal Developer Platforms, their purposes, components, or roles. The intent, audience, and main ideas are focused on quality, process, and accountability, not on IDPs. There is no alignment beyond a loose connection to development practices and process quality. Therefore, confidence is extremely low.",
    "reasoning_summary": "The content is not about Internal Developer Platforms; it focuses on leadership's responsibility regarding software quality in Agile/Scrum contexts. No direct or conceptual link to the IDP category exists.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-10-01T16:58:29",
    "ai_confidence": 45.5,
    "ai_mentions": 0.5,
    "ai_alignment": 5.1,
    "ai_depth": 4.7,
    "ai_intent": 5.5,
    "ai_audience": 7.3,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content discusses leadership's role in determining software quality standards, emphasizing that lowering quality is an organizational (not team-level) decision. While this touches on interactions between organizational decisions (social) and technical outcomes, there is no explicit mention of sociotechnical systems or their theoretical frameworks. The focus is mostly on responsibility and risk, rather than the interplay or integration between social and technical elements. The main themes only partially align; thus, the confidence score is moderate.",
    "reasoning_summary": "The content partially fits: it considers how leadership decisions (social) impact software quality (technical) but does not deeply explore sociotechnical systems or their integration. Limited explicit alignment or depth.",
    "level": "Tertiary"
  },
  "Continuous Improvement": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Continuous Improvement",
    "calculated_at": "2025-10-01T16:58:41",
    "ai_confidence": 43.4,
    "ai_mentions": 2.1,
    "ai_alignment": 4.6,
    "ai_depth": 4.2,
    "ai_intent": 3.9,
    "ai_audience": 4.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content focuses on the leadership responsibility for software quality and the risks of lowering standards but does not mention Continuous Improvement nor engage with its practices, cycles, or philosophy. The emphasis is on accountability and quality ownership, with a tangential reference to the Definition of Done in Scrum. No empirical, incremental, or improvement-focused mechanisms are discussed. There is also no coverage of experimentation, learning, frameworks for improvement, or data-driven processes. Thus, the fit with 'Continuous Improvement' is limited and indirect.",
    "reasoning_summary": "The content highlights leadership’s role in upholding software quality but does not discuss ongoing improvement, learning, or adaptation processes. Its alignment with Continuous Improvement is limited and mostly indirect.",
    "level": "Tertiary"
  },
  "Transparency": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Transparency",
    "calculated_at": "2025-10-01T16:58:33",
    "ai_confidence": 44.65,
    "ai_mentions": 2.6,
    "ai_alignment": 6.8,
    "ai_depth": 6.4,
    "ai_intent": 5.3,
    "ai_audience": 7.1,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content discusses the decision to compromise on software quality as a leadership action and stresses the need for such choices to be openly addressed. While there is some conceptual proximity to transparency—in advocating for visibility and honesty from leadership—transparency itself is not directly mentioned nor deeply explored. The main focus is quality responsibility and decision-making, not fostering openness or explicit visibility in Agile processes. Some relevance exists as the argument opposes covert reductions of standards; however, the article does not address transparency practices, tools, or techniques in detail. It targets both practitioners and leaders but is only partially aligned with the category's intent.",
    "reasoning_summary": "Content partially fits: it relates to openness about quality decisions but focuses more on leadership responsibility than explicit transparency practices or Agile visibility.",
    "level": "Tertiary"
  },
  "Common Goals": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Common Goals",
    "calculated_at": "2025-10-01T16:59:01",
    "ai_confidence": 38.2,
    "ai_mentions": 1.3,
    "ai_alignment": 3.6,
    "ai_depth": 3.7,
    "ai_intent": 3.9,
    "ai_audience": 3.8,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content critiques leadership choices about software quality and who owns the associated risk. While it references aspects relevant to alignment between leadership and teams, it doesn't explicitly mention Common Goals or explore their role in Agile/DevOps contexts. There is a slight indirect alignment in highlighting that goals (in this case, quality standards) should be clearly set and openly owned by leadership. However, it lacks a focused discussion of how shared goals drive alignment or collaboration across teams, as per the category definition.",
    "reasoning_summary": "Content discusses leadership and quality standards but does not explicitly address Common Goals, their definition, or team alignment. Any overlap is indirect and limited; thus, only a partial and weak fit for the category.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Company as a Product",
    "calculated_at": "2025-10-01T16:58:37",
    "ai_confidence": 28.7,
    "ai_mentions": 0.2,
    "ai_alignment": 3.3,
    "ai_depth": 2.5,
    "ai_intent": 3.1,
    "ai_audience": 6.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses on leadership responsibility in software quality decisions, emphasizing that reducing quality is a strategic, not a team, choice. While it touches on organisational decision-making and value delivery, it does not mention or explicitly align with 'Company as a Product' concepts (such as company-wide continuous evolution, cross-functional org-level agility, or customer-centric organisational design). No direct reference to CaaP, its principles, or framework is present; the primary focus is on software quality and leadership, not on treating the company as a dynamic product. The discussion remains at the software/team-leadership interface rather than broader CaaP themes.",
    "reasoning_summary": "The content covers leadership and software quality decisions, not company-wide evolution or CaaP principles. Lacks direct or substantive alignment with 'Company as a Product'; only tangentially related through organisational decision-making.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Scrum Master",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 25.75,
    "ai_mentions": 1.2,
    "ai_alignment": 3.9,
    "ai_depth": 2.7,
    "ai_intent": 3.3,
    "ai_audience": 3.2,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content addresses leadership’s responsibility in software quality decisions, referencing how Scrum teams should not compromise the Definition of Done. The Scrum Master is not directly mentioned, and the discussion is not focused on the Scrum Master’s accountability or role. It aligns loosely with system-level concerns in Scrum, but lacks depth, intent, and direct relevance to the Scrum Master accountability itself, instead centering on broader organizational decision-making regarding quality. The audience is general leadership, not specifically Scrum Masters.",
    "reasoning_summary": "This content focuses on leadership’s role in software quality decisions, mainly discussing the Definition of Done, with only indirect connections to Scrum roles. It is not specifically about the Scrum Master’s accountability or responsibilities under Scrum, resulting in a low confidence score for the category.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Discovery",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 17.16,
    "ai_mentions": 0.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.6,
    "ai_intent": 2.2,
    "ai_audience": 6.0,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content critiques organizational decisions to lower software quality, framing it as a leadership responsibility. While it discusses decision-making in product release, it does not address methodologies, user research, feature discovery, or validation—all key to 'Product Discovery.' No direct or conceptual focus aligns with the category topics, and depth on discovery is minimal. Audience partially overlaps (leaders, product teams), but most content is only tangentially related.",
    "reasoning_summary": "This piece focuses on leadership's role in software quality decisions, not on uncovering customer needs or defining features. It only tangentially connects to 'Product Discovery,' resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 17.519,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 1.9,
    "ai_intent": 2.0,
    "ai_audience": 6.2,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses primarily on leadership responsibility for software quality and challenges in maintaining standards. While it discusses software quality and professional standards, there are no direct mentions of Continuous Integration, nor does it address CI principles, practices, tools, or automated testing. The conceptual alignment and depth are weak, as the article centers on organizational decision-making and not on CI workflows or practices. The intent is to spark a leadership-level discussion about accountability for software quality, targeting leaders as its audience, which only partially overlaps with CI practitioners. Little content is structurally relevant to the CI category, resulting in a low confidence score.",
    "reasoning_summary": "The post centers on leadership's role in software quality decisions, not on Continuous Integration principles or practices. It lacks direct CI references or in-depth discussion, making its relevance to the CI category minimal.",
    "level": "Ignored"
  },
  "Metrics and Learning": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 32.78,
    "ai_mentions": 1.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.9,
    "ai_intent": 3.2,
    "ai_audience": 6.8,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content strongly focuses on leadership accountability for software quality but does not explicitly discuss metrics, data, or feedback loops as mechanisms for learning or improvement. While it hints at standards (Definition of Done), it lacks explicit mention or depth on metrics, analytics, or continuous improvement frameworks, thus only loosely aligns with the 'Metrics and Learning' category.",
    "reasoning_summary": "This content is about leadership responsibility for software quality, not about metrics or learning cycles. It includes some indirect references to standards but doesn't align with the measurement or feedback focus of the category.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "resourceId": "3YDTlhSlU4A",
    "category": "One Engineering System",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 13.6,
    "ai_mentions": 0.0,
    "ai_alignment": 2.5,
    "ai_depth": 1.8,
    "ai_intent": 1.6,
    "ai_audience": 5.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content focuses on leadership accountability for software quality and the dangers of lowering standards as a business choice. There are no direct mentions of One Engineering System (1ES) or its principles, components, or methodology. The themes discussed—Definition of Done, leadership decisions, Scrum teams, and risk acceptance—are generally relevant to software quality, but do not address system integration, unification of tools, or standardized practices that define 1ES. Depth is limited, with only high-level arguments and no discussion of engineering system frameworks, implementation strategies, or comparative analysis. The intent is to highlight leadership responsibility, not to inform about, advocate for, or discuss 1ES practices. The audience is somewhat aligned with technical and managerial readers, but the focus is not specialized toward 1ES practitioners. Overall, the content is tangential and does not belong in the 1ES category.",
    "reasoning_summary": "This content critiques leadership's role in software quality but doesn't discuss One Engineering System or its unifying practices. Lacking direct references and framework discussion, it doesn't fit the category and scores very low for 1ES relevance.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Team Collaboration",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 25.25,
    "ai_mentions": 0.5,
    "ai_alignment": 3.7,
    "ai_depth": 2.6,
    "ai_intent": 2.3,
    "ai_audience": 7.6,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on leadership decisions impacting software quality rather than team communication, collaboration, or shared ownership in Agile/Scrum/DevOps. While it references Scrum teams and indirectly alludes to team roles, its central argument is that compromising quality is beyond the team's responsibility. Core themes like team dynamics, psychological safety, or collaborative practices are not explored. Audience overlap is moderate, as Agile practitioners may read this, but its main viewpoint is directed at leadership accountability.",
    "reasoning_summary": "This content centers on leadership responsibility in software quality, not on improving team collaboration or dynamics. While teams are mentioned, the primary focus isn’t on teamwork or Agile collaboration but rather on decision-making authority.",
    "level": "Ignored"
  },
  "Artificial Intelligence": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 6.25,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.3,
    "ai_audience": 2.2,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content is entirely focused on software quality leadership and risk, mainly in Agile contexts, with no mention of Artificial Intelligence. There are no implicit or explicit touches on AI integrations, automation, or decision-support systems—merely process and responsibility. As such, the scores are nearly all zero with a slight raise for addressing an audience that may overlap with tech/leadership. No penalty points are applied as the tone is not outdated or unduly critical of the category; its mismatch is due to topical irrelevance rather than antagonism.",
    "reasoning_summary": "This content discusses leadership decisions about software quality in Agile teams but makes no reference to Artificial Intelligence. It doesn't fit the AI category's focus on AI's role in Agile or DevOps, and the confidence score reflects this near-total lack of alignment.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Modern Source Control",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 4.25,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.7,
    "ai_audience": 1.3,
    "ai_signal": 1.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content centers on the leadership responsibility for ensuring software quality standards, using analogies from finance and law. It references 'Definition of Done' and decision-making but never mentions source control, versioning systems, or related modern practices. Its themes—quality standards, leadership, risk—are tangential to source control and do not discuss branching, collaboration workflows, code review, or versioning. The primary audience is leadership, not practitioners focused on source control. There is negligible signal relevant to the category, and thus, only token alignment. No penalties were needed since it is not outdated or actively oppositional, but it’s almost entirely off-topic.",
    "reasoning_summary": "This content addresses leadership's role in software quality, lacking any discussion of modern source control practices, tools, or methods. It doesn't target the source control audience and offers no relevant concepts, yielding very low confidence for the 'Modern Source Control' category.",
    "level": "Ignored"
  },
  "Team Performance": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Team Performance",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 29.86,
    "ai_mentions": 2.2,
    "ai_alignment": 3.0,
    "ai_depth": 2.6,
    "ai_intent": 4.1,
    "ai_audience": 3.4,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content centers on leadership responsibility for software quality rather than team delivery capability or evaluating team performance metrics. It explicitly states quality compromises are a leadership, not a team, decision. While teams are referenced (Scrum teams, Definition of Done), the focus is not on how teams perform, adjust, or deliver, but rather on business-level risk and systemic accountability. There is only peripheral alignment with the key topics of the category. The main intent is to shift responsibility away from teams to leadership regarding quality decisions, not to interpret or improve team performance, metrics, or system behaviors. Audience is general business/leadership, not practitioners focused on team-level delivery, and content is only tangentially relevant for team performance discussions.",
    "reasoning_summary": "This content mainly discusses leadership's role in setting software quality standards, not team delivery capability. While teams are mentioned, the focus is on business risk and decision-making, making the fit for Team Performance low.",
    "level": "Ignored"
  },
  "First Principal": {
    "resourceId": "3YDTlhSlU4A",
    "category": "First Principal",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 36.55,
    "ai_mentions": 1.5,
    "ai_alignment": 3.7,
    "ai_depth": 2.9,
    "ai_intent": 3.2,
    "ai_audience": 6.6,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content discusses uncompromising software quality as a professional standard, referencing the Definition of Done and leadership responsibility. However, it does not explicitly identify or analyze first principles, nor does it distinguish these from derived or context-dependent standards. The discussion is focused and relevant for agile/Scrum practitioners and leaders, but lacks direct exploration or definition of immutable, non-negotiable first principles as defined by the category. The main thrust is an ethical and procedural stance tied to roles rather than foundational constraints.",
    "reasoning_summary": "This piece argues that quality standards should be a leadership-level decision, not a flexible team-level compromise. While it highlights professional rigor and responsibility, it doesn’t explicitly examine or define first principles, so it only partially aligns with the category.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 13.9,
    "ai_mentions": 1.8,
    "ai_alignment": 2.3,
    "ai_depth": 2.5,
    "ai_intent": 2.2,
    "ai_audience": 2.1,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content centers on leadership responsibility in determining software quality standards and makes broad references to Scrum teams, but does not explicitly discuss cross-functional teams, their structure, or unique benefits. There is no in-depth exploration of cross-functional collaboration, skill diversity, or end-to-end value delivery. The audience and intent are only marginally related—Agile practitioners may read this, but the primary focus is not on cross-functional teamwork. The overall fit with the defined category is therefore quite weak.",
    "reasoning_summary": "This piece critiques leadership's role in software quality decisions, referencing Scrum teams but not discussing cross-functional teams, their dynamics, or collaboration. As the focus is leadership accountability, relevance to the 'Cross Functional Teams' category is minimal.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Backlog Refinement",
    "calculated_at": "2025-05-16T14:28:01",
    "ai_confidence": 21.8,
    "ai_mentions": 0.2,
    "ai_alignment": 2.9,
    "ai_depth": 2.7,
    "ai_intent": 4.2,
    "ai_audience": 6.1,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content does not directly mention backlog refinement or its key topics. It focuses on leadership accountability in quality decisions, referencing Definition of Done in Scrum, but never discusses backlog refinement activities, prioritisation, or collaboration techniques. While it references Agile principles and Scrum teams, the main idea centers on quality standards and leadership, not on refining the backlog. Minimal alignment, audience match is moderate due to Agile context.",
    "reasoning_summary": "This content centers on software quality and leadership, not backlog refinement—there’s little direct relevance despite some Agile context. It lacks substantive connection to backlog refinement themes and practices.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Miscellaneous",
    "calculated_at": "2025-08-07T11:24:02",
    "ai_confidence": 19.05,
    "ai_mentions": 2.1,
    "ai_alignment": 2.2,
    "ai_depth": 1.9,
    "ai_intent": 2.5,
    "ai_audience": 5.5,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content references Scrum teams, Definitions of Done, Agile, and quality standards. These are core concepts from Agile/Scrum, directly excluding it from the Miscellaneous category. Purpose and themes align more with established Agile discussions, not general or unaligned topics. The audience seems mixed (leadership vs. practitioners), with only slight surface-level tangential fit as a “Miscellaneous” discussion via the leadership framing, but the direct reference to Agile/Scrum concepts prevents a strong fit.",
    "reasoning_summary": "Does not fit Miscellaneous; direct references to Scrum, Agile, and quality management tie it closely to established frameworks, contrary to this category’s definition.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Technical Mastery",
    "calculated_at": "2025-08-07T09:25:34",
    "ai_confidence": 66.8,
    "ai_mentions": 3.6,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 7.0,
    "ai_audience": 8.3,
    "ai_signal": 9.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 67.0,
    "reasoning": "The content directly discusses the importance of maintaining high software quality standards and the consequences of compromising them, which are central to Technical Mastery. It references the Definition of Done (best practices in Agile/engineering) and ties quality to risk. However, there are only limited direct mentions of core practices; the focus is somewhat shared with leadership accountability, not technical methods. The intended audience aligns with practitioners and leaders responsible for technical excellence. There is substantial alignment and depth regarding the reasoning behind technical standards but less focus on how to achieve Technical Mastery, resulting in moderate–high confidence.",
    "reasoning_summary": "The post emphasizes the significance of software quality standards and policies, aligning well with Technical Mastery, though focus leans toward leadership responsibility rather than technical methods. Fit is strong but does not deeply explore engineering practices.",
    "level": "Secondary"
  },
  "Scrum Values": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Scrum Values",
    "calculated_at": "2025-08-07T09:25:35",
    "ai_confidence": 24.832,
    "ai_mentions": 1.2,
    "ai_alignment": 2.7,
    "ai_depth": 3.3,
    "ai_intent": 2.5,
    "ai_audience": 8.7,
    "ai_signal": 8.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "The content focuses on software quality as a leadership responsibility, referencing Definition of Done and leadership accountability. While it briefly mentions Scrum teams, there are no explicit or sustained discussions of the Scrum Values (commitment, courage, focus, openness, or respect), nor is the content framed as a discussion of these principles. It does not elaborate on how the Scrum Values influence quality decisions; instead, it emphasizes structural accountability and decision rights. Thus, alignment and depth regarding Scrum Values are low, with only tangential relevance performed, as Scrum is invoked primarily to clarify responsibility rather than value orientation.",
    "reasoning_summary": "This content only mentions Scrum teams in relation to quality responsibility, not Scrum Values or their impact. It is not thematically aligned and lacks discussion of the five Scrum Values—fit is minimal and indirect.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-10-01T16:42:41",
    "ai_confidence": 32.45,
    "ai_mentions": 1.3,
    "ai_alignment": 3.9,
    "ai_depth": 3.7,
    "ai_intent": 3.5,
    "ai_audience": 8.2,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content primarily focuses on software quality ownership as a leadership responsibility, referencing Scrum teams and the concept of Definition of Done. While relevant to Agile practice and mildly related to product quality governance, it does not discuss Agile Product Operating Model principles, transitioning from project to product, or product-centric organisational restructuring. The article is more a commentary on risk accountability in Agile quality decisions than an exploration of APOM frameworks or practices. Its intent is tangential to the category, and conceptual alignment is partial at best. There are indirect audience overlaps (leaders, decision-makers), but strong APOM themes are missing.",
    "reasoning_summary": "The topic focuses on leadership's role in software quality within Agile but does not directly address principles or structures of the Agile Product Operating Model. Only partial alignment with the category; the fit is weak and tangential.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-10-01T16:58:24",
    "ai_confidence": 28.267,
    "ai_mentions": 0.5,
    "ai_alignment": 2.7,
    "ai_depth": 3.4,
    "ai_intent": 4.5,
    "ai_audience": 8.2,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on leadership accountability for software quality and upholding the Definition of Done. While it emphasizes not compromising quality and draws comparisons with other standards, there is no direct mention of Shift-Left Strategy or practices like early testing, security, or compliance integration. The discussion is generalized and pertains to high-level quality control and decision-making, not specifically about integrating quality earlier in the lifecycle or the principles and techniques laid out in the category definition. Audience alignment and relevance are stronger, as it's addressed to decision-makers in a software development context, but overall alignment with 'Shift-Left Strategy' is partial and mostly indirect.",
    "reasoning_summary": "Content addresses software quality as a leadership decision and upholding standards but does not reference or discuss Shift-Left Strategy or its practices. Only partial, tangential fit with the category. Direct mentions and conceptual overlap are minimal.",
    "level": "Ignored"
  },
  "Working Software": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Working Software",
    "calculated_at": "2025-09-05T03:28:05",
    "ai_confidence": 61.7,
    "ai_mentions": 3.8,
    "ai_alignment": 7.2,
    "ai_depth": 6.9,
    "ai_intent": 6.4,
    "ai_audience": 7.6,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content discusses the importance of software quality and leadership responsibility in upholding or compromising it, particularly via the Definition of Done and Scrum practices. While it references concepts (e.g., increment, quality, shipped software) related to working software as an artifact, it focuses more on the decision-making and quality bar rather than in-depth, direct discussion of working software itself. Mentions are indirect, since the phrase 'working software' is not used, but related concepts are; alignment is reasonably strong as the themes point to how increments are evaluated for quality—a core concern of working software. The discussion provides moderate depth about the relationship between quality, standards, and leadership decisions, with some practical implications. The intent aligns partially (advocacy and raising awareness) but is not primarily about how to produce or deliver working software itself. The audience (leadership and Scrum practitioners) matches, and the signal is mostly focused on the topic, with little tangential content.",
    "reasoning_summary": "Content aligns in theme (quality, Definition of Done, increments) but rarely mentions or explores working software directly. Fit is partial: addresses aspects that affect working software but chiefly focuses on leadership decisions about quality.",
    "level": "Secondary"
  },
  "Digital Transformation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Digital Transformation",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 26.92,
    "ai_mentions": 0.5,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 3.8,
    "ai_audience": 7.0,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content discusses leadership responsibility in maintaining software quality and the financial implications of lowering standards, framed within agile practices. There is some thematic overlap with digital transformation (leadership choices, organisational agility, risk management), but it does not explicitly reference or delve into strategic adoption of digital technologies for transformation, nor does it address broader topics like leveraging technology for business agility or cultural change. Depth and alignment are limited to quality and decision-making, not holistic digital transformation. Mentions are minimal, with only indirect connections to the category.",
    "reasoning_summary": "This content primarily addresses leadership and quality decisions in software development, with only slight overlap with digital transformation themes. It doesn't directly discuss or explore how digital strategies drive business transformation, leading to a low category fit.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Trend Analysis",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 17.183,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 1.6,
    "ai_intent": 2.2,
    "ai_audience": 5.1,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on leadership's responsibility in software quality decisions, using rhetorical questions to highlight risk and accountability. While it references Agile practices, it doesn't mention or analyze trends, provide data, discuss emerging frameworks, or systematically explore shifts in Agile/DevOps. There's no substantial exploration of trend analysis tools, cases, or methodologies; nor is the primary intent to engage in strategic trend exploration. The tone is advisory for leaders but only loosely connects with the audience typically interested in trend analysis, with some relevance due to the mention of Agile team practices.",
    "reasoning_summary": "This piece critiques leadership's role in software quality in Agile, but it lacks analysis of patterns, shifts, or data typical of trend analysis. It doesn't deeply engage with the strategic exploration of trends, so its fit in the 'Trend Analysis' category is low.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Organisational Psychology",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 44.4,
    "ai_mentions": 1.9,
    "ai_alignment": 5.3,
    "ai_depth": 4.6,
    "ai_intent": 6.4,
    "ai_audience": 6.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 44.0,
    "reasoning": "The content references leadership decisions and team roles in quality standards, which touches tangentially on responsibility, authority, and organisational decision-making—concepts within organisational psychology. However, it does not mention core psychological theories, group dynamics, or motivational frameworks. The focus remains primarily on quality ownership and process accountability rather than exploring underlying psychological mechanisms or theories. There are no penalties applied, as the content refrains from outdated or undermining tones. Its primary audience is closer to organisational leaders and software teams who would benefit from discussions of responsibility and governance, but the psychological depth and conceptual alignment are moderate at best.",
    "reasoning_summary": "While the article discusses leadership and team dynamics in decision-making, it only lightly touches on psychological principles and does not explore organisational psychology in depth, resulting in limited alignment with the category.",
    "level": "Tertiary"
  },
  "Hybrid Agile": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Hybrid Agile",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 26.984,
    "ai_mentions": 1.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.4,
    "ai_intent": 2.8,
    "ai_audience": 8.9,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content focuses on the issue of software quality being a leadership decision, highlighting accountability at higher organizational levels. While it touches on the misapplication of agile principles by leadership ('sneak it past teams under the banner of “Agile”'), there is no direct or repeated mention of Hybrid Agile, and the discussion does not explicitly address challenges of integrating traditional project management and agile practices. It is tangentially related through its critique of misplaced accountability, but does not analyze the Hybrid Agile phenomenon or its dysfunctions. Content is relevant to leaders and practitioners, signal is moderately high, but the piece lacks conceptual alignment and depth for this specific category.",
    "reasoning_summary": "This piece critiques leadership's role in setting software quality but doesn't delve into Hybrid Agile's core challenges or integration issues, so it weakly fits the category despite some tangential relevance to agile dysfunctions.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 23.12,
    "ai_mentions": 0.3,
    "ai_alignment": 2.0,
    "ai_depth": 2.4,
    "ai_intent": 2.5,
    "ai_audience": 7.1,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content addresses leadership's role in decisions on software quality but focuses on risk management and accountability, not on employee motivation, engagement, or psychological factors. It does not reference or deeply explore employee engagement concepts, nor best practices for fostering motivation or commitment. The piece targets leaders but does not align with the purpose or key topics of the Employee Engagement category beyond a tangential overlap in leadership responsibility. Thus, relevance and depth are minimal.",
    "reasoning_summary": "The content focuses on leadership's accountability for software quality decisions, not on enhancing employee engagement, motivation, or satisfaction. It lacks explicit connections to engagement and barely addresses relevant topics.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 11.75,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.0,
    "ai_intent": 2.0,
    "ai_audience": 2.5,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on leadership's responsibility for software quality, using analogies for acceptable standards. There is no direct mention of Test Driven Development or specific TDD principles, cycles, practices, or tools. The concept of a Definition of Done is discussed, aligning only broadly with quality assurance, not TDD. The intent is to provoke leadership accountability for quality, not to inform or discuss TDD concepts, methodologies, or its audience. No penalties apply, as the content is not outdated or satirical.",
    "reasoning_summary": "This content is about leadership accountability for software quality, not Test Driven Development. There are no explicit references to TDD, nor any substantive discussion of TDD methods or practices. Its focus is on decision-making and quality standards, making it only marginally relevant to the TDD category.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 6.37,
    "ai_mentions": 0.3,
    "ai_alignment": 0.7,
    "ai_depth": 0.7,
    "ai_intent": 1.0,
    "ai_audience": 2.2,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content discusses software quality as a leadership responsibility and decision but never mentions or relates to platform engineering, Internal Developer Platforms, or automation intended to enhance developer productivity. The central focus is on organizational standards, leadership, and quality in a broad sense, referencing Agile and Scrum, but with no connection to platform engineering practices, tools, or solutions. While the audience might overlap partially with engineering leaders, there is negligible alignment with the category definition.",
    "reasoning_summary": "This content focuses on leadership and software quality decisions, not platform engineering. It lacks direct references, concepts, or practices related to internal platforms or developer productivity tools, so confidence in this category is very low.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 34.5,
    "ai_mentions": 0.7,
    "ai_alignment": 3.6,
    "ai_depth": 3.4,
    "ai_intent": 5.3,
    "ai_audience": 7.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on software quality as a matter for leadership and risk governance, not team process. It does not mention Lean Thinking, Lean principles, tools, or waste elimination. While there's some conceptual overlap (emphasis on standards, leadership responsibility), there are no direct or nuanced references to Lean Thinking. The main intent is critique and leadership accountability, not Lean application. Therefore, only a minor alignment is observed.",
    "reasoning_summary": "This post centers on leadership accountability in software quality, not Lean Thinking. It shares some relevance by addressing standards and process clarity but lacks explicit Lean references or principles, leading to low confidence for this category.",
    "level": "Ignored"
  },
  "Self Organisation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 34.165,
    "ai_mentions": 1.7,
    "ai_alignment": 3.2,
    "ai_depth": 3.7,
    "ai_intent": 2.9,
    "ai_audience": 7.1,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on the responsibility of leadership regarding software quality, arguing that teams do not decide to compromise quality; leadership does. While the piece references Scrum teams and the 'Definition of Done,' it uses self-organisation chiefly as a contrast—indicating teams are not empowered to make these compromises. It does not directly discuss principles, techniques, or case studies of self-organisation, nor does it support or examine how teams self-organise to maintain quality. The target audience (leaders, practitioners) slightly overlaps, but the content's purpose and depth do not centrally serve the self-organisation category.",
    "reasoning_summary": "This piece examines leadership's responsibility for software quality, highlighting that such compromises should not fall to Agile teams. Self-organisation is referenced only briefly and not as a central theme, resulting in a low fit for this category.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Competence",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 47.05,
    "ai_mentions": 1.9,
    "ai_alignment": 5.3,
    "ai_depth": 4.7,
    "ai_intent": 5.4,
    "ai_audience": 7.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content emphasizes leadership's responsibility in maintaining or compromising software quality. While it references professionalism and standards, it doesn't mention competence directly or discuss strategies for skill development, learning, or capability. Its focus is on decision accountability rather than exploring how competence underpins quality, trust, or continuous improvement within teams. Concepts are related but discussion lacks depth on competence itself, and only lightly aligns with the classification's intent.",
    "reasoning_summary": "This piece spotlights leadership choices around software quality but only indirectly links to competence—mainly through discussion of professionalism and standards. While relevant for quality and responsibility, it lacks direct or deep engagement with competence concepts, leading to a moderate confidence score.",
    "level": "Tertiary"
  },
  "Decision Making": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T14:28:05",
    "ai_confidence": 71.4,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.5,
    "ai_intent": 7.1,
    "ai_audience": 7.6,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "The content directly references leadership’s responsibility for quality decisions and frames the lowering of standards as a conscious business risk choice. It questions who should make such calls (leadership vs. teams) and emphasizes that these are decisions with strategic impact. It also refers to tools like a Definition of Done. However, while decision-making is central, the discussion is not deeply technical or methodical regarding evidence-based frameworks, analytics, or structured processes; it's more normative, arguing where the decision authority should sit. There's solid alignment and substantial intent, but the depth doesn't exhaustively cover empirical analysis or frameworks. No penalties were needed as the tone is not outdated or dismissive; it's critical but within appropriate bounds.",
    "reasoning_summary": "This content fits 'Decision Making' well, focusing on leadership’s responsibility and the business impact of quality choices. While it stresses who should decide and the risks involved, it doesn't fully delve into evidence-based or structured methodologies, so confidence is high but not maximal.",
    "level": "Secondary"
  },
  "Install and Configuration": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Install and Configuration",
    "calculated_at": "2025-09-17T23:12:27",
    "ai_confidence": 2.1,
    "ai_mentions": 0.1,
    "ai_alignment": 0.5,
    "ai_depth": 0.2,
    "ai_intent": 0.3,
    "ai_audience": 1.0,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content discusses leadership responsibility regarding software quality standards and decision-making. There are no explicit mentions or step-by-step discussions relating to installation or configuration of tools, platforms, or environments. The focus is entirely on organizational decision-making and the Definition of Done rather than any actionable technical setup, configuration, or guide. The audience is general but oriented slightly towards practitioners, though the message is mostly directed at organizational leaders. Overall, the content is off-topic for the 'Install and Configuration' category.",
    "reasoning_summary": "The content is unrelated to installation or configuration topics and focuses on leadership decisions and software quality. It does not fit the intended category in topic, theme, or purpose.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Current Value",
    "calculated_at": "2025-05-16T14:28:01",
    "ai_confidence": 23.5,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.9,
    "ai_intent": 2.2,
    "ai_audience": 8.2,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content centers on leadership responsibility in maintaining software quality, comparing it to business-critical standards in finance and legal. It references the Definition of Done and highlights the business risk of compromised quality but does not mention Current Value, Evidence-Based Management, or related metrics. The focus is on decision authority and standards, not on measuring real-time value delivery, customer satisfaction, or feedback loops. Some relevance exists if inferred (quality affecting delivered value), but the piece lacks explicit alignment or depth on Current Value as defined by the category.",
    "reasoning_summary": "While discussing leadership’s accountability for software quality and its business implications, the content lacks direct or deep references to Current Value or its metrics. Its link to value delivery is indirect, so it has low confidence for fitting the 'Current Value' category.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T14:28:01",
    "ai_confidence": 39.55,
    "ai_mentions": 0.65,
    "ai_alignment": 4.95,
    "ai_depth": 3.9,
    "ai_intent": 4.1,
    "ai_audience": 6.05,
    "ai_signal": 6.35,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content centers on leadership responsibility in maintaining software quality and the risks of compromising standards, positioning this as a board-level decision. While quality is indirectly related to customer satisfaction, the article does not discuss customer happiness, feedback, satisfaction metrics, or any direct strategies for measuring or improving customer satisfaction. The focus is on internal process, standards, and leadership accountability. There are no explicit references to Agile/DevOps customer satisfaction practices or established customer-focused methodologies, but the audience is somewhat aligned as it addresses leaders and practitioners in Agile contexts. Overall, the fit is indirect and thematic but not substantial.",
    "reasoning_summary": "This content discusses leadership’s role in software quality decisions but doesn’t address customer satisfaction directly or reference relevant metrics or Agile/DevOps practices on satisfaction. It’s mainly about internal accountability, so confidence in the category fit is low.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Project Management",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 49.45,
    "ai_mentions": 3.2,
    "ai_alignment": 6.6,
    "ai_depth": 5.9,
    "ai_intent": 5.5,
    "ai_audience": 6.0,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "Direct category references are minimal—'Agile' and 'Scrum teams' are mentioned, but not 'project management' explicitly. The content aligns conceptually with leadership decision-making and software quality, both relevant to project management but not exclusive to it. The discussion is moderately deep, highlighting quality as a business risk and the role of leadership; however, it doesn't cover project management practices, lifecycle, or methodologies in depth. The intent is tangential: the content critiques organizations shifting quality responsibility from leadership to teams, which touches governance and risk but frames quality as a leadership, not a core project management, issue. The primary audience is leadership and possibly teams experiencing such pressure, overlapping with project management but not precisely targeting it. The signal is mostly focused, though leans to advocacy/awareness rather than operational PM techniques.",
    "reasoning_summary": "While leadership decisions on software quality touch on governance and risk—important in project management—the content doesn't explicitly explore project management principles or tools. It sparks a relevant conversation, but its focus stays on leadership responsibility rather than project management processes.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 41.6,
    "ai_mentions": 2.3,
    "ai_alignment": 5.2,
    "ai_depth": 3.9,
    "ai_intent": 5.1,
    "ai_audience": 6.2,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content briefly references Agile concepts by discussing Scrum teams and the Definition of Done, but its primary focus is leadership responsibility for software quality, not deep analysis or exploration of Agile frameworks. There is only a passing mention of 'Agile,' and the bulk of the discussion centers on decision-making and risk at the leadership level rather than examining Agile frameworks' principles, comparative applications, or transformative impacts. The piece is relevant to Agile practitioners but does not thoroughly align with this category’s intended scope.",
    "reasoning_summary": "While touching on Agile terms like Scrum and Definition of Done, this content focuses more on leadership and quality ownership than on exploring Agile frameworks themselves. Its relevance to 'Agile Frameworks' is limited and mostly indirect.",
    "level": "Tertiary"
  },
  "Social Technologies": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T14:27:58",
    "ai_confidence": 63.1,
    "ai_mentions": 2.7,
    "ai_alignment": 7.5,
    "ai_depth": 6.6,
    "ai_intent": 6.8,
    "ai_audience": 7.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content indirectly relates to Social Technologies by discussing organisational roles, team autonomy, and transparency in decision-making. It references Scrum and alludes to Agile practices, touching on value delivery responsibility. However, it doesn't deeply explore frameworks or methods for collaboration, collective intelligence, or continuous improvement. The main thrust critiques leadership’s decisions rather than offering social technology frameworks, making alignment and depth moderate, with few direct mentions. Audience and signal are moderately strong, as the post targets leaders and practitioners in Agile/DevOps-adjacent spaces.",
    "reasoning_summary": "This content highlights leadership's role in quality decisions and briefly references Agile/Scrum principles, aligning moderately with Social Technologies. It suits a professional audience in tech but doesn’t deeply explore frameworks, making confidence reasonable but not high.",
    "level": "Secondary"
  },
  "Product Strategy": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 40.05,
    "ai_mentions": 1.0,
    "ai_alignment": 4.4,
    "ai_depth": 3.9,
    "ai_intent": 3.8,
    "ai_audience": 6.3,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content critiques leadership decisions to compromise on software quality, emphasizing risk ownership and professional standards. However, it primarily addresses quality assurance and leadership accountability, not core topics like vision formulation, roadmapping, or market positioning. The discussion is only tangentially related to Product Strategy, lacking depth in methodologies or frameworks that define product direction or sustain competitiveness.",
    "reasoning_summary": "This content focuses on leadership accountability for software quality, but touches Product Strategy only peripherally. It highlights decision-making and risk, yet doesn't explore strategic vision, market analysis, or product roadmapping—key aspects of the category's core definition.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Development",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 73.25,
    "ai_mentions": 4.5,
    "ai_alignment": 8.8,
    "ai_depth": 7.7,
    "ai_intent": 8.3,
    "ai_audience": 8.0,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content discusses software quality as a leadership decision, referencing standards like 'Definition of Done' and highlighting Scrum team responsibilities—clearly aligning with incremental development and risk management topics fundamental to product development. It targets decision-makers and practitioners, engaging with process and ownership rather than surface technicalities. There is moderate depth, though certain key PD methodologies (like continuous improvement) are only implied, not explicit. Quality and risk are framed as product leadership issues, reinforcing alignment, but the focus narrowly emphasizes quality trade-offs rather than broader product strategies or feedback loops.",
    "reasoning_summary": "The content fits Product Development by linking software quality, risk, and leadership responsibility, emphasizing standard practices like Definition of Done. It targets relevant audiences and explores decision-making in product delivery, though its focus on quality slightly limits depth on other PD methodologies.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 22.55,
    "ai_mentions": 0.25,
    "ai_alignment": 2.35,
    "ai_depth": 2.65,
    "ai_intent": 2.85,
    "ai_audience": 5.4,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content does not explicitly mention 'sensemaking' or its frameworks. Its main focus is on leadership's role in software quality decisions, holding leaders accountable rather than exploring how organizations interpret complexity. Some conceptual overlap exists in the mention of decision-making in ambiguous contexts, but the depth is limited, and there is no substantive discussion of sensemaking principles, tools, or collective interpretation of complexity. The relevance is tangential, and the target audience partially overlaps with the category, but most content is focused on responsibility for quality, not the cognitive or organizational processes that define sensemaking.",
    "reasoning_summary": "This piece centers on leadership accountability for software quality rather than organizational sensemaking. While it touches on decision-making under uncertainty, it lacks explicit or deep engagement with sensemaking principles, frameworks, or collective interpretation of complexity. Its relevance to the category is mostly peripheral.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T14:28:04",
    "ai_confidence": 10.3,
    "ai_mentions": 0.5,
    "ai_alignment": 1.2,
    "ai_depth": 1.1,
    "ai_intent": 1.4,
    "ai_audience": 3.0,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses on leadership responsibility in software quality and decision-making, with references to Agile and Scrum teams. There is no mention of Cell Structure Design or the Beta Codex, nor does it engage with the decentralised, autonomous, networked organisational structures fundamental to the category. Thematically, it's about traditional management choices regarding quality in software delivery. While it briefly questions hierarchical decision-making, it is not advocating alternatives rooted in Cell Structure Design or complexity theory, nor does it discuss cells, decentralisation, or self-organisation. The intended audience is leaders and teams dealing with software quality, not specifically those interested in new organisational models. Nearly all of the content is off-topic for the category definition.",
    "reasoning_summary": "This content is about leadership responsibility for software quality, not Cell Structure Design. It doesn’t discuss Beta Codex, autonomous cells, or decentralised organisational models, and its alignment with the category is minimal.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Artifact",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 67.92,
    "ai_mentions": 5.2,
    "ai_alignment": 7.7,
    "ai_depth": 6.8,
    "ai_intent": 7.5,
    "ai_audience": 8.3,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content references a specific artifact—Definition of Done—and discusses its role in upholding quality and transparency. However, the main focus is on leadership's responsibility for quality decisions rather than a deep exploration of artifact structure or best practices. Frequent mention of Definition of Done shows moderate direct mention. The conceptual link to artifacts is clear but takes a secondary role to broader leadership themes. No penalties apply as the content is current and consistent with the category's framing.",
    "reasoning_summary": "This content meaningfully references the Definition of Done as a Scrum artifact, connecting it to quality and leadership decisions. While artifact discussion isn't its primary focus, it's substantially relevant and aligns with the audience and purpose.",
    "level": "Secondary"
  },
  "Agile Strategy": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 60.42,
    "ai_mentions": 2.8,
    "ai_alignment": 6.5,
    "ai_depth": 6.2,
    "ai_intent": 6.8,
    "ai_audience": 7.6,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content centers on leadership responsibility in maintaining software quality, positioning it as an organizational decision rather than a team-level compromise. It references Agile-adjacent concepts like Definition of Done and Scrum teams, but only indirectly connects to broader Agile strategic themes. While quality is vital in Agile, the main focus is on risk delegation and leadership, not on integrating Agile principles into strategic planning. The discussion is moderately deep and targets decision-makers (leadership/executive audience), but has limited explicit Agile strategy framing and lacks clear, direct exploration of the full breadth of Agile strategic concerns.",
    "reasoning_summary": "This post ties leadership choices about software quality to overall business risk and culture, loosely connecting to Agile Strategy via references to teams and Definition of Done. While relevant for leaders, it doesn't deeply discuss strategic Agile adoption, resulting in only moderate confidence for this category.",
    "level": "Tertiary"
  },
  "GitHub": {
    "resourceId": "3YDTlhSlU4A",
    "category": "GitHub",
    "calculated_at": "2025-05-16T14:27:59",
    "ai_confidence": 7.3,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 0.8,
    "ai_intent": 2.4,
    "ai_audience": 5.7,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content does not reference GitHub at all, nor does it discuss any tools or practices specific to GitHub. Its focus is on leadership decisions regarding software quality and team accountability, framed generically and tied loosely to Agile/Scrum. There are no mentions of version control, GitHub features, or developmental workflows specific to GitHub, and its primary audience is broader than GitHub practitioners. The overall confidence is extremely low because the content lacks both direct and indirect alignment with the GitHub category, offers no depth on relevant GitHub topics, and fails across all major category indicators.",
    "reasoning_summary": "This content doesn't discuss GitHub or its features, focusing instead on leadership and quality standards in software development. As a result, it doesn't fit the GitHub category and receives a very low confidence score.",
    "level": "Ignored"
  },
  "Azure Pipelines": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T14:28:01",
    "ai_confidence": 7.45,
    "ai_mentions": 0.1,
    "ai_alignment": 0.4,
    "ai_depth": 0.5,
    "ai_intent": 0.6,
    "ai_audience": 2.1,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is a leadership commentary on software quality and risk-taking. There is no mention of Azure Pipelines, DevOps, CI/CD, YAML, or any Azure-specific services. The discussion centers on decision-making structures, not technical practices or build/deployment automation. It targets organizational leaders rather than practitioners running pipelines. Minimal relevance and no direct or implicit link to Azure Pipelines.",
    "reasoning_summary": "This content does not fit the Azure Pipelines category. It focuses on leadership decisions about software quality, with no references to Azure Pipelines or CI/CD practices, and is aimed at executives rather than technical audiences.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Leadership",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 85.9,
    "ai_mentions": 7.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.8,
    "ai_intent": 8.5,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content places leadership squarely at the center of the discussion, explicitly calling out the role of leaders in decisions regarding software quality. Leadership is both directly named and held accountable for organizational standards, aligning well with the definition. There is considerable depth, including examples and analogies that contrast leadership responsibility with that of teams. The primary audience is leaders and decision-makers, with the aim of prompting reflection and action. Minor deductions reflect that some paragraphs use analogies rather than deep, new frameworks, and about 10–15% of content frames the issue through financial/legal analogies rather than substantive leadership strategies. No penalties apply.",
    "reasoning_summary": "This content directly addresses leadership accountability in software quality decisions, making a strong case that such choices belong to leaders, not teams. The discussion aligns closely with leadership in Agile and business settings, offering thoughtful analogies and prompting executive reflection.",
    "level": "Primary"
  },
  "Customer Retention": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 14.68,
    "ai_mentions": 0.6,
    "ai_alignment": 1.8,
    "ai_depth": 2.3,
    "ai_intent": 2.4,
    "ai_audience": 3.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on leadership's responsibility in maintaining software quality, highlighting business risks of lowering standards. It primarily discusses quality as a leadership decision and references Agile practices, but never mentions customer retention, loyalty, engagement, or related strategies. There is only an implicit link—poor software quality could hypothetically affect retention, yet this is never discussed or explored. There is no examination of retention strategies, measurement of satisfaction, or feedback mechanisms. Thus, the content poorly aligns with the Customer Retention category.",
    "reasoning_summary": "While the content stresses the importance of maintaining software quality and leadership accountability, it does not discuss strategies or concepts directly related to customer retention. Its connection to the category is only implicit and indirect.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Ethos",
    "calculated_at": "2025-05-16T14:28:04",
    "ai_confidence": 60.35,
    "ai_mentions": 2.7,
    "ai_alignment": 7.4,
    "ai_depth": 6.7,
    "ai_intent": 7.1,
    "ai_audience": 7.3,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content implicitly addresses system-level beliefs about responsibility and standards in Agile and Scrum contexts, framing leadership's choices on quality as foundational decisions with systemic impact. However, it does not explicitly discuss 'ethos,' nor delve deeply into philosophical convictions or explicit underpinnings that sustain transformative delivery. The focus is on accountability and standards, aligning partly with Ethos, but the main thrust is on leadership responsibility rather than an exploration of demonstrable organizational beliefs or evidence in system behaviors. Audience targeting is appropriate, aiming at decision-makers and teams interested in effective Agile delivery, but the discussion remains more on the level of practice and accountability than on core ethos themes.",
    "reasoning_summary": "The content touches on the systemic roots of quality decisions in Agile, highlighting leadership's responsibility. While it aligns with Ethos by implying underlying convictions, it lacks direct, deep exploration of foundational beliefs, placing it in a moderate confidence range for this classification.",
    "level": "Tertiary"
  },
  "Windows": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Windows",
    "calculated_at": "2025-05-16T14:28:05",
    "ai_confidence": 1.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.1,
    "ai_intent": 0.3,
    "ai_audience": 2.1,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content discusses the importance of software quality from a leadership perspective, using analogies from finance and legal. It references agile practices and team responsibility, but never mentions Windows or discusses anything unique to the Windows operating system. The main discussion is about general software quality processes and leadership decision-making, which is unrelated to Windows management, configuration, installation, or troubleshooting.",
    "reasoning_summary": "This content focuses on leadership and software quality practices generically, with no mention or focus on Windows. It is not relevant to the Windows category and does not address Windows-specific topics or audiences.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T14:28:05",
    "ai_confidence": 71.6,
    "ai_mentions": 4.6,
    "ai_alignment": 8.2,
    "ai_depth": 7.8,
    "ai_intent": 8.1,
    "ai_audience": 7.2,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content discusses leadership's responsibility in software quality and its impact at the organisational level, referencing standards, risk acceptance, and cultural norms around quality. While the primary focus is on leadership decision-making, cultural expectations and risk-taking are central themes, closely aligned with organisational culture’s influence on Agile practices. However, it stops short of a deep exploration of culture as a system or its transformation, and includes practical decisions more than a broad cultural critique. Audience is likely managers/leaders in Agile environments, which aligns well, and the content stays focused on the leadership-culture nexus but could go deeper into structural or systemic cultural change.",
    "reasoning_summary": "This content examines how leadership choices on quality set cultural standards within teams. While explicit mentions of 'culture' are limited, the discussion inherently reflects leadership's influence on organisational norms—a core aspect of organisational culture.",
    "level": "Secondary"
  },
  "Ability to Innovate": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T14:28:06",
    "ai_confidence": 18.2,
    "ai_mentions": 1.3,
    "ai_alignment": 2.7,
    "ai_depth": 2.6,
    "ai_intent": 2.7,
    "ai_audience": 4.3,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on leadership's responsibility regarding software quality, not directly on innovation or the organisational mechanisms for fostering it. There's no explicit discussion of innovation, relevant metrics, or practices that enhance innovation in Agile/DevOps. While quality has an indirect relationship with innovation, this piece is mainly about accountability for quality standards—not about the ability to innovate.",
    "reasoning_summary": "This content is primarily about leadership choices and software quality, not about the ability to innovate. Since it does not touch on innovation processes, metrics, or fostering innovation in Agile/DevOps, it only weakly fits the category.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Practice",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 46.75,
    "ai_mentions": 3.2,
    "ai_alignment": 5.6,
    "ai_depth": 4.2,
    "ai_intent": 5.0,
    "ai_audience": 6.1,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content discusses software quality and decision ownership, touching on the 'Definition of Done'—a practice in Scrum. However, it primarily centers on leadership responsibility for quality decisions rather than detailing techniques, habits, or repeatable practices. While the Definition of Done is mentioned as enforcing standards, it is not explored in actionable depth, and there is limited focus on continuous improvement or practical guidance, lowering conceptual alignment and depth scores.",
    "reasoning_summary": "This content mentions a Scrum practice but primarily spotlights leadership responsibility in quality decisions, not actionable techniques. Its focus drifts from practical how-tos or continuous improvement, so confidence is moderate for the Practice category.",
    "level": "Tertiary"
  },
  "Increment": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Increment",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 70.81,
    "ai_mentions": 3.7,
    "ai_alignment": 8.4,
    "ai_depth": 7.8,
    "ai_intent": 8.1,
    "ai_audience": 8.8,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 71.0,
    "reasoning": "The content centers on maintaining software quality and the Definition of Done—both key to Increment in Scrum—emphasizing that every Increment must meet consistent standards. It references 'increment' directly when discussing quality standards, and uses analogies to highlight risks of subpar Increments. While not a deep technical discussion of Increment, the main argument is that only leadership should decide on lowering the bar for completed Increments. Audience is primarily leaders and teams involved in Agile software delivery. Signal is strong, though focus is on leadership decisions rather than a thorough breakdown of Increment itself.",
    "reasoning_summary": "The content ties tightly to Increment by underscoring the importance of consistent quality and adherence to Definition of Done for every software delivery. It appeals to leadership responsibility, making it a substantial—if not deeply technical—fit for the Increment category.",
    "level": "Secondary"
  },
  "Lean Startup": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 7.671,
    "ai_mentions": 0.3,
    "ai_alignment": 0.4,
    "ai_depth": 0.3,
    "ai_intent": 0.5,
    "ai_audience": 0.8,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "This content focuses on leadership responsibility for software quality, contrasting expectations for software with those for finance and legal standards. While it references Agile and Scrum, it does not discuss Lean Startup principles like MVPs, iterative validation, or the Build-Measure-Learn loop. The primary themes are quality, risk, and decision ownership, not Lean Startup methodology or its key topics.",
    "reasoning_summary": "The content centers on software quality and leadership accountability, with no direct or conceptual discussion of Lean Startup principles. It addresses standards, risks, and decision-making in software but lacks alignment with iterative validation or MVP concepts fundamental to Lean Startup.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Throughput",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 8.2,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.5,
    "ai_audience": 1.2,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on leadership responsibility in maintaining software quality, arguing against lowering standards for delivery speed. There are no direct or indirect references to throughput as a metric, nor are flow, delivery rates, cumulative flow diagrams, or empirical forecasting discussed. The discussion centers entirely on quality, decision making, and risk, without quantitative delivery performance or throughput data.",
    "reasoning_summary": "This content addresses software quality as a leadership decision, offering no substantial discussion or metrics relating to throughput. Its focus is on standards, not delivery flow or measurement.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T14:28:00",
    "ai_confidence": 7.7,
    "ai_mentions": 0.1,
    "ai_alignment": 0.5,
    "ai_depth": 0.2,
    "ai_intent": 0.4,
    "ai_audience": 5.2,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not mention or discuss asynchronous development. Its focus is exclusively on leadership decisions regarding software quality, organizational risk, and the role of Scrum teams. There is no reference to time zones, distributed teams, asynchronous practices, tools, or methodologies aligned with the category. Even indirect overlap is absent; themes are traditional and leadership-focused, not process-oriented about asynchronous workflow.",
    "reasoning_summary": "This content zeroes in on leadership's responsibility for software quality, without referencing or aligning with asynchronous development topics like remote teams or asynchronous workflows, making it a highly unlikely fit for this category.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 13.073,
    "ai_mentions": 0.5,
    "ai_alignment": 1.6,
    "ai_depth": 1.9,
    "ai_intent": 1.2,
    "ai_audience": 2.1,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses leadership responsibility when compromising on software quality, drawing analogies to other business decisions and emphasizing the importance of consistent standards. It does not directly mention, nor clearly imply, topics such as frequent releases, continuous delivery, release automation, or related DevOps principles. The focus is on ownership of quality and decision-making authority, not on release cadence or techniques. Thus, only minimal alignment to the 'Frequent Releases' category exists, largely through tangential reference to increments and standards, but these do not specifically connect to release frequency or practices.",
    "reasoning_summary": "This content is about leadership accountability for software quality, not about frequent releases or software delivery practices. It offers only minor conceptual overlap, so confidence in it fitting the 'Frequent Releases' category is very low.",
    "level": "Ignored"
  },
  "Philosophy": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T14:28:04",
    "ai_confidence": 41.3,
    "ai_mentions": 1.3,
    "ai_alignment": 4.7,
    "ai_depth": 4.3,
    "ai_intent": 5.8,
    "ai_audience": 6.4,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content raises questions about leadership responsibility, risk, and decision-making around software quality, aligning partly with the philosophical angle of who should be accountable (the 'why'). However, it largely frames the issue through comparisons, rhetorical questions, and references to standards and processes (e.g., Definition of Done, Scrum teams). It lacks an in-depth discussion of foundational beliefs or philosophical frameworks guiding quality or leadership. The intent appears to prompt leaders to own their decisions, but the discussion is surface-level and practice-anchored, not exploring broader philosophical underpinnings. The audience (leadership) is somewhat aligned with philosophical discussion, but the focus remains narrow and action-oriented. No penalties applied.",
    "reasoning_summary": "While the content questions who should own software quality decisions and challenges organizational norms, it doesn't fully engage with the deeper philosophies behind these choices. Its argument is practical and rhetorical, offering only a partial fit for the Philosophy category.",
    "level": "Tertiary"
  },
  "Tool": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Tool",
    "calculated_at": "2025-05-16T14:28:04",
    "ai_confidence": 6.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 0.8,
    "ai_intent": 1.1,
    "ai_audience": 2.2,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses on leadership responsibility regarding software quality and decision-making. While 'Definition of Done' is briefly mentioned as a mechanism to uphold standards, there is no discussion of specific tools, software applications, or tool-driven practices. The primary intent and audience are decision-makers and leaders rather than practitioners using tools. There is almost no direct mention of tools, minimal conceptual overlap, and no substantial exploration of tool use in Agile, Lean, or DevOps contexts.",
    "reasoning_summary": "This content addresses leadership decisions on software quality, not tools. Aside from a passing reference to 'Definition of Done,' there’s no meaningful discussion of mechanisms, software, or tool-based practices, so confidence for the 'Tool' category is very low.",
    "level": "Ignored"
  },
  "Technical Leadership": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 71.75,
    "ai_mentions": 3.1,
    "ai_alignment": 8.4,
    "ai_depth": 7.8,
    "ai_intent": 7.9,
    "ai_audience": 8.2,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content strongly aligns with technical leadership by framing software quality as a leadership responsibility, challenging leaders to own quality risks and not delegate them downward. It references agile practices (Definition of Done, Scrum), discusses leadership's duty to uphold standards, and targets leaders influencing product quality. While the term 'technical leadership' is not named directly, the core ideas and intent focus on the decision-making role leaders play in quality. Some areas are not deeply elaborated (e.g., only surface agile references, lacks detailed techniques), but the piece is focused, aimed at practitioners/leaders, and highly relevant.",
    "reasoning_summary": "This content frames software quality as a leadership issue, highlighting leaders' responsibilities, especially in agile settings. It clearly targets technical leaders, aligns with agile best practices, and keeps discussion relevant and substantial—though not exhaustive. A strong fit for 'Technical Leadership.'",
    "level": "Secondary"
  },
  "Continuous Learning": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 33.7,
    "ai_mentions": 0.7,
    "ai_alignment": 2.8,
    "ai_depth": 2.3,
    "ai_intent": 3.1,
    "ai_audience": 4.8,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on software quality as a leadership decision, using analogies (finance, legal) to argue that quality should not be compromised. It emphasizes decision-making accountability and the role of Definition of Done, but does not mention or deeply explore growth mindset, knowledge sharing, feedback loops, or continuous improvement practices. The main theme is leadership responsibility, not fostering continuous learning environments. Audience fit is partial (leaders, decision-makers) but not explicitly targeting practitioners of Continuous Learning frameworks.",
    "reasoning_summary": "While the content addresses leadership's role in quality, it doesn't discuss principles like growth mindset, feedback, or team learning central to Continuous Learning. The emphasis is on accountability and standards—not on fostering ongoing improvement or learning within teams.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T14:28:04",
    "ai_confidence": 39.13,
    "ai_mentions": 1.6,
    "ai_alignment": 3.9,
    "ai_depth": 3.3,
    "ai_intent": 4.5,
    "ai_audience": 5.0,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "Direct mentions of Agile-related terms are minimal: the only explicit reference is 'the banner of \"Agile.\"' The main focus is on leadership responsibility for software quality, critiquing the practice of sacrificing quality for deadlines and highlighting Definition of Done and Scrum teams. While Scrum, Definition of Done, and software quality are relevant to Agile environments, the content does not discuss Agile transformation, cultural change, transformation frameworks, or organizational agility, which are central to this category. Its depth and conceptual alignment are moderate—there is some implied critique of how Agile can be misused, but no discussion of transformative practices, case studies, change management, or broader organizational principles. The audience overlaps partially with Agile leaders, but the focus is specifically leadership in the context of quality—not Agile transformation per se. Content is relatively relevant, but not tightly centered on the classification's intent.",
    "reasoning_summary": "The content raises issues about leadership's responsibility for software quality in Scrum contexts, but barely touches on Agile transformation itself. There's minimal direct mention of Agile and no exploration of transformation frameworks or practices, so confidence in this as 'Agile Transformation' content is low.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Management",
    "calculated_at": "2025-05-16T14:28:04",
    "ai_confidence": 62.23,
    "ai_mentions": 3.6,
    "ai_alignment": 7.25,
    "ai_depth": 6.8,
    "ai_intent": 6.5,
    "ai_audience": 7.1,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content discusses the interplay between leadership decisions, business risk, and software quality, referencing the Definition of Done and the relationship with Agile and Scrum teams. This touches on product management's strategic aspects, especially regarding quality standards as a business lever and decision-making authority. However, product management itself isn't mentioned explicitly, and the content leans more toward leadership responsibility than explicit product methodologies, frameworks, or customer alignment. The intent and audience are close but not directly product manager-focused; the discussion could serve both leadership and strategic technologist readers. Some areas are more argument-oriented rather than providing deep product management methodology insights, limiting the depth and conceptual fit to upper-moderate scores.",
    "reasoning_summary": "The content addresses leadership decisions about software quality within Agile frameworks, touching on strategic themes relevant to product management. However, it does not directly reference product management roles, methods, or frameworks, resulting in a moderate confidence fit with the category.",
    "level": "Secondary"
  },
  "Operational Practices": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T14:28:06",
    "ai_confidence": 51.914,
    "ai_mentions": 2.8,
    "ai_alignment": 6.4,
    "ai_depth": 4.3,
    "ai_intent": 5.9,
    "ai_audience": 6.1,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "The content questions the decision to compromise software quality, situating it as a leadership, not team, issue. While it references Agile concepts like “Definition of Done” and implicitly critiques misuses of Agile terminology, it does not delve into concrete operational practices, techniques, or methodologies. Its focus is on leadership responsibility and risk, with only brief operational framing. Therefore, it aligns partially with the category, but lacks thorough practical discussion or direct guidance related to operational improvement practices.",
    "reasoning_summary": "This content discusses the risks of compromising software quality, highlighting leadership responsibility more than practical operational techniques. While it touches on Agile concepts like Definition of Done, it does not deeply explore operational practice improvements, resulting in a moderate fit for the category.",
    "level": "Tertiary"
  },
  "Complexity Thinking": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T14:28:07",
    "ai_confidence": 16.25,
    "ai_mentions": 0.8,
    "ai_alignment": 2.8,
    "ai_depth": 1.9,
    "ai_intent": 2.5,
    "ai_audience": 5.0,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on accountability for software quality, arguing leadership should be responsible for quality trade-offs. It discusses organisational decision-making but does not reference or discuss complexity science, emergent behaviour, non-linearity, or frameworks like Cynefin. Its approach aligns more with traditional management and quality practices rather than complexity thinking. The only tangential connection is the mention of 'Agile', but without any complexity perspective. Audience and signal scores are higher since the content is relevant and well-focused for organisational leaders, but the overall alignment with the 'Complexity Thinking' category is minimal.",
    "reasoning_summary": "This content addresses leadership accountability in software quality but does not reference or engage with complexity science, non-linear systems, or frameworks relevant to 'Complexity Thinking.' It's mainly about traditional management responsibility, not complexity.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T14:28:08",
    "ai_confidence": 7.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.7,
    "ai_intent": 2.1,
    "ai_audience": 1.3,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses software quality as a leadership decision, using general Agile and Scrum references and industry analogies. There is no mention of Azure DevOps or its tools, and discussion does not align with the category definition, which requires explicit focus on Azure DevOps practices, services, or methodologies. The audience is broadly organizational leaders, not Azure DevOps practitioners, and while the topic is adjacent (software quality, Agile), there is no clear signal or depth on Azure DevOps specifics.",
    "reasoning_summary": "This content focuses on leadership's role in software quality, with generic Agile and Scrum references. It does not mention or explore Azure DevOps tools, practices, or context, making its alignment with the Azure DevOps category extremely low.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T14:28:08",
    "ai_confidence": 15.43,
    "ai_mentions": 0.4,
    "ai_alignment": 2.1,
    "ai_depth": 1.9,
    "ai_intent": 2.0,
    "ai_audience": 5.03,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content centers on leadership responsibility in software quality decisions, emphasizing organizational risk and the Definition of Done. There are no direct or explicit mentions of flow efficiency, value stream optimization, or Lean/Agile throughput concepts. The alignment is marginal as process discipline indirectly supports flow, but the depth and signal remain low since the discussion is focused strictly on decision authority and quality policies rather than optimizing work throughput or eliminating bottlenecks. The target audience partially overlaps, as leaders in Agile/Lean are relevant, but the main intent and examples do not address flow efficiency or its metrics/tools.",
    "reasoning_summary": "This content focuses on who owns quality decisions in software delivery, not on optimizing throughput or value stream flow. While relevant leaders may be in the audience, there’s minimal overlap with core Flow Efficiency topics, resulting in a low confidence for categorization.",
    "level": "Ignored"
  },
  "Strategic Goals": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T14:28:09",
    "ai_confidence": 34.56,
    "ai_mentions": 1.7,
    "ai_alignment": 3.9,
    "ai_depth": 3.2,
    "ai_intent": 4.7,
    "ai_audience": 6.8,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on leadership responsibility in software quality decisions, presenting the issue as a leadership (not team) prerogative. While it references decision-making at the leadership/board level—a topic adjacent to strategic goals—it does not explicitly discuss long-term objectives, business agility, or alignment with agile principles as required by the category definition. The argument is more operational (quality standards, risk sign-off) than strategic, lacking depth on frameworks, measurement, or impact on business agility. The audience is partly aligned (leaders, decision-makers), but there is little evidence of a sustained, strategic or agile-linked discussion. No penalties were required as the tone is appropriate and content is current.",
    "reasoning_summary": "This content addresses leadership's role in deciding software quality but stops short of linking these decisions to long-term strategic goals, business agility, or agile principles. While relevant to decision-makers, it is more operational than truly strategic, resulting in a modest confidence score.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T14:28:09",
    "ai_confidence": 1.55,
    "ai_mentions": 0.0,
    "ai_alignment": 0.8,
    "ai_depth": 0.8,
    "ai_intent": 2.1,
    "ai_audience": 2.4,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content discusses decision-making about software quality and channels the conversation toward leadership accountability. There are no direct mentions of Liberating Structures, specific facilitation methods, or use cases relevant to the category. Its focus is on leadership and quality standards within Agile/Scrum, not on facilitation techniques, team engagement frameworks, or participatory structures central to Liberating Structures. The intended audience is more executive/leadership than facilitation practitioners. No penalties for outdatedness or tone are warranted.",
    "reasoning_summary": "This content focuses on leadership and accountability in software quality, with no mention of Liberating Structures or facilitation techniques. Its intent and audience do not overlap meaningfully with the category, resulting in minimal confidence of a match.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T14:28:09",
    "ai_confidence": 74.3,
    "ai_mentions": 3.4,
    "ai_alignment": 7.9,
    "ai_depth": 6.7,
    "ai_intent": 8.2,
    "ai_audience": 8.4,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 74.0,
    "reasoning": "The content addresses the risks and implications of compromising software quality, emphasizing leadership responsibility and the importance of a strong Definition of Done. This aligns with 'Value Delivery' principles—ensuring delivered increments meet standards, supporting customer value, and highlighting business agility. While terms like 'value delivery' aren't explicitly mentioned, the focus on preventing shortcuts and maintaining quality aligns conceptually. The depth is moderate, referencing Scrum practices and organizational decision-making. The audience is Agile leaders and practitioners, and the discussion is focused. No outdated practices or contradictions were present; thus, no penalties were applied.",
    "reasoning_summary": "This content centers on leadership's role in upholding quality standards within Agile teams. It relates strongly to value delivery by stressing that true customer value is safeguarded through consistent, uncompromised software quality. The message aligns well with practitioners focused on effective value management.",
    "level": "Secondary"
  },
  "Organisational Physics": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T14:28:09",
    "ai_confidence": 41.7,
    "ai_mentions": 0.5,
    "ai_alignment": 5.6,
    "ai_depth": 3.3,
    "ai_intent": 6.3,
    "ai_audience": 8.8,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content does not directly mention 'Organisational Physics' or systems thinking, thus mentions are very low. The main focus is on leadership's responsibility for software quality, which partially touches on organisational decision dynamics, but does not explicitly discuss systemic behaviours, feedback loops, or systems theory. There is minimal exploration of how the elements within an organisation interact in a systems sense, making conceptual alignment and depth moderate. The content does suit an executive/leadership audience and stays on topic regarding organisational choices. No penalties were needed, as tone and context are appropriate.",
    "reasoning_summary": "While the post discusses leadership decisions and organisational responsibility regarding software quality, it only indirectly fits 'Organisational Physics.' It lacks explicit systems thinking or discussion of organisational dynamics, resulting in low to moderate confidence.",
    "level": "Tertiary"
  },
  "Psychological Safety": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 15.85,
    "ai_mentions": 0.5,
    "ai_alignment": 2.1,
    "ai_depth": 2.7,
    "ai_intent": 2.4,
    "ai_audience": 4.0,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on leadership responsibility in software quality and decision-making authority, highlighting that quality compromises are business rather than team decisions. It does not reference psychological safety—neither directly nor conceptually. There is no emphasis on creating environments where teams feel safe to speak up, take risks, or innovate; nor are any relevant strategies, case studies, or techniques discussed. Audiences of both topics could overlap (leaders, practitioners), but the content is only tangentially adjacent, since undermining team autonomy may affect team trust or safety. Still, the primary theme is quality accountability, not psychological safety.",
    "reasoning_summary": "This content centers on leadership and software quality decisions, not psychological safety. It doesn’t discuss team risk-taking, open communication, or fostering a safe environment. Thus, its fit with the 'Psychological Safety' category is minimal.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T14:28:02",
    "ai_confidence": 26.0,
    "ai_mentions": 0.4,
    "ai_alignment": 2.4,
    "ai_depth": 2.8,
    "ai_intent": 3.1,
    "ai_audience": 4.1,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 26.0,
    "reasoning": "The content centers around leadership decisions related to software quality, risk, and accountability in organizational settings. While these are relevant to business leadership, there are only indirect connections to entrepreneurship—such as risk management at a strategic level. There is no direct mention of entrepreneurship or its core principles (innovation, value creation, entrepreneurial mindset, or venture building). The depth focuses on software delivery quality rather than starting or scaling ventures or entrepreneurial thinking. The intended audience is mainly business or technical leaders rather than entrepreneurs per se. While risk and leadership are discussed, they're framed from a general business quality/technology management standpoint, not the context of entrepreneurial practices.",
    "reasoning_summary": "This content primarily addresses leadership responsibility for software quality—a general business and technology management topic. While risk and decision-making are discussed, entrepreneurial principles are not a central focus, leading to a low confidence match for the Entrepreneurship category.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Framework",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 19.15,
    "ai_mentions": 2.7,
    "ai_alignment": 2.9,
    "ai_depth": 2.6,
    "ai_intent": 2.7,
    "ai_audience": 4.4,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content mentions Scrum and Definition of Done, which are associated with frameworks, but its main focus is on leadership responsibility for software quality decisions, not on frameworks themselves. Discussion of the Definition of Done is used as an example (and not deeply explored as a framework element). There is no substantial exploration of agile frameworks, their implementation, comparison, or adaptability. The audience could include leaders and agile teams, but the alignment with the 'Framework' category is weak and indirect. No penalties are required since the article is current, not critical of frameworks directly, and does not reference obsolete practices.",
    "reasoning_summary": "While this piece references Scrum and Definition of Done, its main thrust is about leadership choices in software quality, not about frameworks or their application. There's minimal framework content, so the confidence for the 'Framework' category is low.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T14:28:05",
    "ai_confidence": 21.75,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.7,
    "ai_intent": 2.2,
    "ai_audience": 6.1,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content does not explicitly mention Lean or any Lean tools, principles, or vocabulary. It focuses on leadership responsibility for software quality, referencing concepts like 'Definition of Done' and the importance of not cutting corners, which can tangentially relate to quality and waste avoidance but without direct conceptual alignment with Lean thinking. There is minimal depth on process optimization, waste reduction, or continuous improvement. The primary intent is to address decision rights and accountability in software quality, not Lean Principles. Audience and signal are higher since the message targets decision-makers in tech and business, which can overlap with the Lean audience, but overall the content is not aligned closely enough for a high confidence classification.",
    "reasoning_summary": "While the content highlights leadership responsibility for software quality and mentions standards, it does not reference Lean thinking or principles. Its main focus is accountability and team roles, so it only loosely connects to Lean, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Scrum": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Scrum",
    "calculated_at": "2025-05-16T14:28:05",
    "ai_confidence": 80.225,
    "ai_mentions": 5.7,
    "ai_alignment": 8.2,
    "ai_depth": 7.8,
    "ai_intent": 8.0,
    "ai_audience": 8.3,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content references Scrum directly and discusses the Definition of Done—an official artifact of the Scrum framework—highlighting its role in upholding quality. The main argument about leadership responsibility in quality decisions fits Scrum’s principle of transparency and shared accountability. It primarily targets leaders and teams working within Scrum or Agile, emphasizing the proper implementation of Scrum principles. The discussion touches on leadership, standards, and team authority, and while the content is concise, it offers a substantive perspective relevant to the Scrum category. No penalties applied as the tone is aligned and references are up-to-date.",
    "reasoning_summary": "This content directly discusses a Scrum artifact and addresses quality ownership, linking leadership decisions to Scrum’s intent. It is concise but conceptually aligned, offering useful guidance for both leadership and Scrum teams without straying off-topic.",
    "level": "Secondary"
  },
  "Principle": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Principle",
    "calculated_at": "2025-05-16T14:28:06",
    "ai_confidence": 64.2,
    "ai_mentions": 4.4,
    "ai_alignment": 7.6,
    "ai_depth": 7.3,
    "ai_intent": 6.7,
    "ai_audience": 7.2,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content aligns with the 'Principle' category by challenging leadership decisions around software quality, emphasizing the actionable 'Definition of Done' and responsibility for risk. However, it doesn't directly name Agile/Lean principles or delve deeply into their frameworks, nor does it fully articulate core guiding principles like empiricism or continuous improvement. The audience fit is strong (leaders, teams), and the article is focused, but scores are lowered due to lack of explicit direct mentions and only moderate depth on principles versus decision-making.",
    "reasoning_summary": "This piece addresses actionable choices about software quality and highlights leadership responsibility, aligning well with principles around accountability and professional standards. While its fit is strong, it doesn’t explicitly enumerate Agile or Lean principles and focuses more on decision context than thorough principle discussion.",
    "level": "Secondary"
  },
  "Product Owner": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T14:28:08",
    "ai_confidence": 34.91,
    "ai_mentions": 1.2,
    "ai_alignment": 3.0,
    "ai_depth": 2.6,
    "ai_intent": 3.1,
    "ai_audience": 4.8,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 35.0,
    "reasoning": "The content focuses on the leadership responsibility around software quality decisions. While it references Scrum teams and agile practices, there is no explicit or implicit discussion about the Product Owner's accountability for backlog prioritisation, value maximisation, or stakeholder management. The topic targets leadership and quality decision-makers rather than Product Owners. The few Scrum mentions are about team empowerment, not Product Owner responsibilities. Thus, direct relevance and conceptual alignment to Product Owner accountability are low.",
    "reasoning_summary": "This content targets software quality as a leadership responsibility, not the Product Owner's accountability. It makes only brief Scrum mentions and does not discuss Product Owner duties, so confidence in this category fit is quite low.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T14:28:08",
    "ai_confidence": 11.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.8,
    "ai_intent": 2.0,
    "ai_audience": 3.6,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content discusses the importance of maintaining software quality and frames leadership’s responsibility in setting standards. It references Agile practices but does not mention MVP explicitly or discuss rapid iteration, minimal features, validation, or product-market fit. The only peripheral alignment is in discussing decision-making and quality in Agile, which may affect MVP if quality is compromised to speed up releases, but core MVP themes are absent.",
    "reasoning_summary": "This content is focused on leadership, accountability, and software quality standards within Agile teams. It does not reference MVP concepts such as minimal feature sets, validation experiments, or Lean Startup practices, and thus is not a fit for the Minimum Viable Product category.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Observability",
    "calculated_at": "2025-05-16T14:28:09",
    "ai_confidence": 12.35,
    "ai_mentions": 0.3,
    "ai_alignment": 1.5,
    "ai_depth": 1.0,
    "ai_intent": 1.2,
    "ai_audience": 4.0,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on leadership responsibility in software quality decisions and the distinction between team and executive authority. Observability, as defined here, is not mentioned or discussed in principle or practice. No references to logs, metrics, traces, or systems measurement are present. While there is a tangential nod to standards and transparency, these are not developed in the context of observability or technical system insight. The audience could include technical and leadership roles, but the central topic remains policy and accountability. No penalties were warranted.",
    "reasoning_summary": "This content addresses leadership responsibility for software quality, not observability. It lacks explicit or conceptual ties to measuring or understanding internal system states. There are no references to observability practices, tools, or principles.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T14:28:10",
    "ai_confidence": 30.18,
    "ai_mentions": 1.2,
    "ai_alignment": 3.8,
    "ai_depth": 2.9,
    "ai_intent": 5.3,
    "ai_audience": 4.5,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content frames compromising on software quality as a leadership decision involving risk but does not explicitly discuss decision theory principles, models, or core concepts beyond referencing risk acceptance. There are no direct mentions of Decision Theory, heuristics, probability, or related frameworks. While there is mild conceptual alignment through the lens of risk-taking in uncertainty, the piece is primarily an advocacy for leadership responsibility, not an exploration of decision-making processes under uncertainty. Any decision theory connection is indirect; the content lacks depth, specificity, or technical engagement with the discipline. The audience is organizational leaders with a focus on governance rather than theoretical decision science. The signal-to-noise ratio is moderate due to the content's focus being only tangentially relevant to Decision Theory.",
    "reasoning_summary": "This content frames leadership choices about software quality as risk decisions but doesn't explicitly discuss Decision Theory. Its main focus is accountability, not the study of decision-making under uncertainty, resulting in only modest relevance to the category.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 54.55,
    "ai_mentions": 2.1,
    "ai_alignment": 6.3,
    "ai_depth": 3.8,
    "ai_intent": 6.2,
    "ai_audience": 7.4,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content challenges leadership decisions around software quality, emphasizing standards and the consequences of lowering them. It resonates in concept with technical excellence, especially by referencing 'Definition of Done' and the risks of sacrificing quality, but does not explicitly engage with core engineering practices or principles like TDD, CI/CD, or modularity. No direct or frequent mention of 'Technical Excellence' or its signature practices diminishes directness and depth. The intent is allied with the theme by advocating for maintaining high standards, but the main argument is organizational rather than exploring engineering practices. Audience targeting (leaders and practitioners) aligns moderately. The article stays quite focused, hence a strong signal score, but since it doesn’t dive deep into the technical aspects that define technical excellence, the overall score is limited.",
    "reasoning_summary": "This content links software quality to leadership choices, advocating against lowering standards, which conceptually aligns with technical excellence. However, it lacks in-depth discussion of specific technical practices and offers limited direct references, resulting in a moderate confidence rating.",
    "level": "Tertiary"
  },
  "Software Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Software Development",
    "calculated_at": "2025-05-16T14:28:03",
    "ai_confidence": 82.03,
    "ai_mentions": 6.7,
    "ai_alignment": 9.3,
    "ai_depth": 7.9,
    "ai_intent": 8.5,
    "ai_audience": 8.0,
    "ai_signal": 8.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content strongly aligns with the Software Development category by squarely focusing on software quality, leadership's role in maintaining standards, and professional practices like the Definition of Done and Scrum teams' responsibilities. Core themes like software quality assurance, Agile frameworks, and decision accountability are explored. Intent is aligned toward practitioners and leaders in software, though the discussion is slightly more leadership-focused. There are clear references to specific software development methodologies and quality control practices. The content is focused, relevant, and avoids tangential or business-only discussion, though it embeds a leadership perspective into software quality debates.",
    "reasoning_summary": "This content fits the Software Development category well: it discusses quality, Agile practices, and leadership's responsibility for standards. The focus on SDLC concepts and professional development practices provides a strong fit, even as it emphasizes leadership decision-making.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T14:28:04",
    "ai_confidence": 14.812,
    "ai_mentions": 0.7,
    "ai_alignment": 1.3,
    "ai_depth": 1.6,
    "ai_intent": 2.3,
    "ai_audience": 5.4,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on leadership responsibility regarding software quality decisions rather than identifying or resolving technical issues. There are no explicit mentions or substantial discussion of troubleshooting or its methods. Discussion is conceptual, around standards and accountability, not on diagnosing or solving problems. The intended audience includes leaders, not technical troubleshooters. Little of the content is relevant to the troubleshooting category.",
    "reasoning_summary": "This content centers on leadership's role in software quality decisions, not on diagnosing or resolving technical issues. It lacks alignment with the core meaning of troubleshooting, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T14:28:05",
    "ai_confidence": 8.3,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.0,
    "ai_audience": 2.1,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not mention or reference experimentation or its core principles. It discusses leadership responsibility around software quality decisions in Agile, focusing on standards, risk, and accountability, not on hypothesis-driven approaches, testing, or validating assumptions. The discussion lacks any treatment of experiments, learning cycles, experimentation techniques, or their implementation in Agile. There is no alignment with the audience or outcomes anticipated by the Experimentation category.",
    "reasoning_summary": "This piece centers on leadership decisions about software quality, not experimentation. It doesn't discuss hypothesis-driven work, testing, or learning cycles within Agile. As such, it fits very poorly under the Experimentation category.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T14:28:06",
    "ai_confidence": 29.57,
    "ai_mentions": 1.6,
    "ai_alignment": 3.9,
    "ai_depth": 3.1,
    "ai_intent": 2.8,
    "ai_audience": 5.0,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content centers on leadership accountability for software quality but does not mention Evidence Based Management or use any empirical metrics, data-driven decision-making, or EBM vocabulary. The focus is on responsibility and risk rather than data-informed management. While it is business-focused and somewhat relevant, there is no discussion of Current Value, Time to Market, or EBM's empirical practices. The absence of evidence-based concepts or outcome metrics keeps alignment and depth scores low.",
    "reasoning_summary": "This content emphasizes leadership's role in software quality but lacks empirical evidence or references to Evidence Based Management, resulting in low confidence that it fits the category.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Estimation",
    "calculated_at": "2025-05-16T14:28:07",
    "ai_confidence": 8.8,
    "ai_mentions": 0.4,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.1,
    "ai_audience": 2.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content primarily discusses software quality, not estimation. No estimation techniques, practices, or empirical data are mentioned. The focus is on leadership responsibility for quality and risk, not on Agile estimation practices or planning. While the content addresses Agile and Scrum concepts (e.g., Definition of Done, team authority), there is no conceptual or surface-level reference to estimation. All scores are low, as there is no substantive or tangential connection to the Estimation category.",
    "reasoning_summary": "This content is about leadership choices and software quality in Agile, not estimation. It doesn’t discuss Agile estimation techniques, data, or processes, so it doesn’t align with the Estimation category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T14:28:08",
    "ai_confidence": 7.44,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.8,
    "ai_intent": 0.2,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content does not mention the Daily Scrum event, nor does it discuss any aspect related to its structure, purpose, or best practices. Its focus is on software quality as a leadership decision and the importance of the Definition of Done in Scrum. While Scrum is referenced, the content does not explicitly address, even by implication, any key topics associated with the Daily Scrum event. Its intent and audience are not tailored to Daily Scrum participants but instead address leadership responsibility in maintaining quality. No penalty was applied as the tone and practices aren’t outdated or critical of Daily Scrum itself.",
    "reasoning_summary": "This content focuses on leadership decisions around software quality and touches on Scrum, but contains no substantive connection to Daily Scrum. It’s neither direct nor aligned, resulting in very low confidence for this category.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T14:28:09",
    "ai_confidence": 21.785,
    "ai_mentions": 1.1,
    "ai_alignment": 2.3,
    "ai_depth": 2.4,
    "ai_intent": 3.0,
    "ai_audience": 4.1,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on leadership decisions regarding software quality and risk acceptance but does not relate directly to portfolio management practices, value stream optimisation, or strategic alignment of projects. There are no direct references to methodology, portfolio prioritisation, or portfolio-level metrics. Its main intent appears to be raising awareness about ownership of quality decisions rather than discussing portfolio management mechanics. The audience is leadership, which loosely overlaps but the content lacks specificity on portfolio issues. Minimal alignment and depth keep the confidence low.",
    "reasoning_summary": "This content addresses leadership accountability for software quality but lacks focus on portfolio management topics such as prioritisation, strategic alignment, or value delivery. It’s relevant for leaders, but not for portfolio management specifically.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T14:28:10",
    "ai_confidence": 59.9,
    "ai_mentions": 3.5,
    "ai_alignment": 7.6,
    "ai_depth": 5.4,
    "ai_intent": 6.2,
    "ai_audience": 8.8,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 60.0,
    "reasoning": "The content explicitly addresses software quality and references practices such as 'Definition of Done,' which connects to Agile engineering standards. However, it reframes the discussion as a leadership and decision-making issue rather than diving into concrete engineering practices or technical methodologies like clean code or TDD. While the audience seems technical (Scrum teams), the main theme is more about accountability and responsibility for quality at the leadership level, not an in-depth treatment of Agile engineering methods. This skews the alignment and depth somewhat below maximum, and limited technical detail reduces mentions and depth. No penalties were applied, as the perspective was not outdated or critical; rather, it underscored the importance of maintaining engineering standards.",
    "reasoning_summary": "The content emphasizes the importance of not lowering software quality but focuses more on leadership responsibility than detailed engineering practices. While it values high standards and mentions Agile concepts, it lacks depth and explicit technical discussion, resulting in moderate confidence.",
    "level": "Tertiary"
  },
  "Lean": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Lean",
    "calculated_at": "2025-05-16T14:28:11",
    "ai_confidence": 14.32,
    "ai_mentions": 1.2,
    "ai_alignment": 1.4,
    "ai_depth": 1.1,
    "ai_intent": 2.0,
    "ai_audience": 4.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content does not mention Lean or its core concepts. It focuses on leadership decision-making around software quality, especially within Agile/Scrum practices, without discussing value creation, waste minimization, Lean tools, or continuous improvement. The audience is marginally related as practitioners might apply Lean, but the main themes and depth are unrelated, resulting in very low category fit.",
    "reasoning_summary": "This content deals with leadership and software quality decisions within Agile/Scrum, not Lean. It neither mentions Lean nor aligns with its principles, tools, or methodologies, so it scores low for relevance to the Lean category.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T14:28:06",
    "ai_confidence": 48.8,
    "ai_mentions": 2.7,
    "ai_alignment": 4.5,
    "ai_depth": 4.0,
    "ai_intent": 5.5,
    "ai_audience": 6.8,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 49.0,
    "reasoning": "The content addresses software quality as a leadership and organizational accountability issue, referencing Agile via 'Definition of Done' and Scrum teams. It questions superficial implementations of 'Agile' and contrasts leadership responsibility versus team decision-making. However, it does not deeply cover frameworks, continuous improvement, flexible structures, or wider strategies for agility, instead focusing on a specific facet (quality standards) and the role of leadership in this context. There is minimal explicit discussion of agile principles or broader organizational agility practices, which limits conceptual alignment and depth. No penalties were needed, as the post is current and not contrary in tone.",
    "reasoning_summary": "The content links leadership choices on quality with Agile contexts, urging clarity and leadership accountability. However, it only moderately covers key 'Organisational Agility' topics, focusing more on responsibility for software quality than on agility strategies or frameworks.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T14:28:06",
    "ai_confidence": 7.9,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 1.0,
    "ai_intent": 2.4,
    "ai_audience": 1.1,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "This content discusses the leadership responsibility in making decisions about software quality and the importance of holding accountability at the right level. It references concepts like 'Definition of Done,' team standards, and business risk, but does not mention or discuss customer feedback, feedback loops, or mechanisms that collect or use such feedback. The focus is entirely internal, on leadership and decision making regarding quality, without any direct or indirect discussion of integrating customer insights. Virtually none of the key topics for 'Customer Feedback Loops' are covered, and there is no discussion of techniques, processes, or tools for gathering or utilizing customer feedback. Thus, alignment, depth, and relevance scores are very low.",
    "reasoning_summary": "This content is focused on leadership accountability for software quality, not on gathering or integrating customer feedback. It doesn’t touch on feedback loops or relevant practices, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T14:28:08",
    "ai_confidence": 61.97,
    "ai_mentions": 3.2,
    "ai_alignment": 7.6,
    "ai_depth": 6.8,
    "ai_intent": 7.4,
    "ai_audience": 6.7,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 62.0,
    "reasoning": "The content indirectly addresses Agile Product Management via Scrum practices, team responsibility, and leadership in product delivery decisions—especially around quality standards and Definition of Done. However, it doesn't delve deeply into product ownership, backlog prioritization, or customer value mechanisms. Its primary emphasis is on leadership responsibility for quality, not a broad discourse on Agile product management practices. Audience is mostly leaders, not classic product managers, but there is overlap. Slight lack of direct terminology and specificity (few mentions of 'Agile') reduces mentions and depth scores.",
    "reasoning_summary": "The content spotlights leadership's role in quality decisions within an Agile context, referencing Scrum and Definition of Done. It aligns conceptually but doesn't explore core Agile Product Management practices in depth, focusing more on quality leadership than product agility specifics.",
    "level": "Secondary"
  },
  "Agile Planning": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T14:28:08",
    "ai_confidence": 33.85,
    "ai_mentions": 1.1,
    "ai_alignment": 3.3,
    "ai_depth": 2.7,
    "ai_intent": 3.9,
    "ai_audience": 6.2,
    "ai_signal": 4.3,
    "ai_penalties_applied": true,
    "ai_penalty_points": 1,
    "ai_penalty_details": "Alignment penalized by 1 point for direct criticism of Agile practices and possible misrepresentation ('sneak it past teams under the banner of Agile'), which slightly undermines the positive framing of Agile Planning.",
    "final_score": 34.0,
    "reasoning": "The content references Scrum teams and Definition of Done, both related to Agile, but the central focus is on software quality as a leadership responsibility, not Agile Planning specifically. Though it cautions against misusing 'Agile' to justify lowering standards, its main argument centers on decision-making authority and risk, rather than exploring Agile Planning principles, methods, or team alignment. The single, indirect mention of 'Agile' is in a critical context. Target audience overlaps somewhat (leaders and teams), but planning frameworks or iterative techniques are not explored. A penalty is applied for tone contradicting the category's framing.",
    "reasoning_summary": "Although the post touches on concepts like Scrum and references Agile, its main message is about leadership accountability for software quality, not Agile Planning practices. The mention of Agile is critical, resulting in low alignment and confidence for this category.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T14:28:09",
    "ai_confidence": 45.75,
    "ai_mentions": 2.1,
    "ai_alignment": 5.4,
    "ai_depth": 4.7,
    "ai_intent": 5.5,
    "ai_audience": 6.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "Direct references to evidence-based concepts are minimal—the content critiques leadership’s responsibility in software quality decisions but lacks explicit mention or application of empirical evidence, data, or measurement. The argument is value-driven, using analogy and rhetorical questions to urge leaders to formally own consequences, but it doesn’t present techniques, data analysis, or explicit evidence-based frameworks. Its intent is to push leadership accountability, aiming at executive audiences, but discussion is surface-level on evidence principles. This reduces confidence that the classification fully fits, though there is conceptual overlap as accountability and decision making are important aspects of Evidence Based Leadership.",
    "reasoning_summary": "This content spotlights leadership responsibility for software quality, yet fails to anchor its points in data or evidence-based methods. While moderately aligned in message and audience, it lacks explicit evidence-driven discussion, so only partially fits the category.",
    "level": "Tertiary"
  },
  "Agile Values and Principles": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T14:28:11",
    "ai_confidence": 38.9,
    "ai_mentions": 2.8,
    "ai_alignment": 4.7,
    "ai_depth": 4.9,
    "ai_intent": 5.2,
    "ai_audience": 7.1,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 39.0,
    "reasoning": "The content addresses quality as a leadership decision, referencing the “Definition of Done” and the idea that lowering standards shouldn’t be a team choice. While it briefly mentions Agile (in the phrase 'under the banner of “Agile”') and touches on accountability, it does not directly discuss Agile Values or Principles as defined in the category. There are no explicit references to the four core values, twelve principles, or themes such as responding to change, customer collaboration, or team self-organization. Its main focus is on leadership accountability in quality decisions, not on fostering understanding of Agile philosophy, resulting in low direct mention and only partial conceptual alignment.",
    "reasoning_summary": "While the content briefly references Agile in context, its main focus is on leadership's role in software quality—not discussing Agile values or principles directly. Minimal explicit overlap and a peripheral connection yield a low confidence score.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Change Management",
    "calculated_at": "2025-05-16T14:28:11",
    "ai_confidence": 28.14,
    "ai_mentions": 1.2,
    "ai_alignment": 2.9,
    "ai_depth": 2.5,
    "ai_intent": 2.4,
    "ai_audience": 5.3,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content is primarily a commentary on leadership responsibility regarding software quality decisions, emphasizing that compromise on quality is a leadership, not team, matter. While there is an indirect reference to organisational decision-making and leadership accountability, the text lacks direct mention of Change Management or explicit discussion of its principles, strategies, or best practices. The focus is not on facilitating meaningful transitions or fostering a culture of change but instead on highlighting the importance of maintaining professional standards and clarifying accountability. The article does not explore Agile Change Management frameworks, resistance to change, or methods for organizational adaptation. It provides a relevant example of leadership’s role in setting standards, but this connection to Change Management is tangential and not thorough.",
    "reasoning_summary": "The content centers on leadership accountability for software quality, not on Change Management principles or practices. While it touches on organizational decision-making, it doesn't cover strategies, frameworks, or depth needed for the Change Management category.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Kanban",
    "calculated_at": "2025-05-16T14:28:12",
    "ai_confidence": 7.1,
    "ai_mentions": 0.2,
    "ai_alignment": 0.4,
    "ai_depth": 0.5,
    "ai_intent": 0.3,
    "ai_audience": 0.4,
    "ai_signal": 0.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on software quality as a leadership responsibility and references the Definition of Done and Scrum teams. Kanban is neither mentioned nor conceptually discussed. No Kanban-specific practices (visualisation, WIP, flow) or metrics are addressed. The audience is leaders/teams, but not in a Kanban context. Overall, there’s a lack of relevance to Kanban.",
    "reasoning_summary": "This content centers on leadership and software quality, referencing Scrum, but it does not mention Kanban or address its principles. As such, it has almost no direct or conceptual fit with the Kanban category.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Market Share",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 7.2,
    "ai_mentions": 0.0,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.4,
    "ai_audience": 2.1,
    "ai_signal": 1.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on the implications of leadership decisions regarding software quality, arguing that compromising quality is a business risk that leaders should own. There are no direct mentions of market share, nor does the discussion address strategies, metrics, competition, or customer engagement tied to market share. The main idea is about governance and risk, not about increasing market presence. The audience is technical leaders and executives, but the core theme is not market share expansion or related methodologies.",
    "reasoning_summary": "This content is about leadership responsibility for software quality, not about market share. It doesn't discuss market share strategies, metrics, or competitive positioning, resulting in a low confidence for fit under this category.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T14:28:14",
    "ai_confidence": 12.8,
    "ai_mentions": 0.2,
    "ai_alignment": 1.8,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 2.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on the importance of software quality and leadership’s responsibility, with analogies to other business functions. While it briefly mentions Definition of Done and quality standards, there is no direct mention, discussion, or exploration of Acceptance Test Driven Development, acceptance criteria, or related collaboration. The main intent and message are about decision-making and quality, not ATDD. The audience is broad (leadership and teams), not specifically stakeholders, developers, or testers concerned with ATDD. Minimal signal aligns with ATDD and there is significant thematic distance from the classification.",
    "reasoning_summary": "This content discusses leadership responsibility for software quality, not ATDD. It lacks direct references or meaningful discussion relevant to Acceptance Test Driven Development, acceptance tests, or collaborative practices specific to the category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T14:28:10",
    "ai_confidence": 7.8,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 2.0,
    "ai_audience": 2.5,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "There are no direct mentions of Open Space Agile or its core principles. The content focuses on leadership accountability for software quality and draws analogies to financial/legal decisions. While it lightly references Agile terminology (e.g., Scrum, Definition of Done), it does not address emergent collective participation, co-creation, or shared ownership via Open Space Technology. It is more about organizational responsibility and does not target facilitators or advocates of Open Space Agile transformation.",
    "reasoning_summary": "This content addresses leadership’s role in software quality decisions but does not discuss Open Space Agile, its principles, or practices. There’s no alignment with the category’s collaborative, emergent focus, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T14:28:10",
    "ai_confidence": 12.4,
    "ai_mentions": 0.3,
    "ai_alignment": 1.9,
    "ai_depth": 1.4,
    "ai_intent": 2.2,
    "ai_audience": 3.0,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content addresses leadership responsibility for software quality decisions, arguing such compromises are business-level choices, not team-level ones. However, it does not mention Beta Codex directly, nor does it discuss decentralisation, adaptive or human-centric design, or any BetaCodex theories. Its approach remains within a traditional leadership/team dynamic and references Scrum, aligning more with established Agile practice critiques than with Beta Codex frameworks. There is minimal thematic overlap or audience targeting for Beta Codex, and the key category concepts are absent.",
    "reasoning_summary": "This post critiques how leaders handle software quality decisions but doesn't refer to Beta Codex or its principles. Its focus is on responsibility in Agile settings rather than decentralised, adaptive organisation design. Thus, it's a poor fit for the Beta Codex category.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T14:28:12",
    "ai_confidence": 16.62,
    "ai_mentions": 0.4,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.3,
    "ai_audience": 3.7,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on leadership responsibility in maintaining software quality standards and cautions against compromising quality for deadlines, likening it to poor practices in finance and law. While there are indirect references to risks of bad deployments (e.g., reducing quality standards), it does not discuss specific methodologies, practices, or strategies for software deployment. Key topics such as blue-green deployments, canary releases, or risk management strategies in deployment are absent. The article targets leaders and decision-makers involved in software delivery but lacks substantive exploration of deployment tactics. The result is only loose, conceptual relevance to deployment strategies.",
    "reasoning_summary": "This content centers on the leadership decision to maintain or lower software quality, not on deployment strategies. It references risk but lacks any direct or substantial discussion of deployment methods, making its fit for the category low.",
    "level": "Ignored"
  },
  "DevOps": {
    "resourceId": "3YDTlhSlU4A",
    "category": "DevOps",
    "calculated_at": "2025-05-16T14:28:12",
    "ai_confidence": 41.5,
    "ai_mentions": 1.7,
    "ai_alignment": 4.4,
    "ai_depth": 3.6,
    "ai_intent": 3.6,
    "ai_audience": 4.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "DevOps is not explicitly mentioned; instead, the discussion focuses on software quality as a leadership decision, with emphasis on standards, financial risk, and team accountability. While these concepts are adjacent to DevOps values (e.g., shared accountability, quality practices), the core discussion revolves around leadership, quality standards, and Scrum, not DevOps principles or culture. There's some audience overlap and light thematic alignment (quality, decision-making), but little direct or in-depth DevOps exploration.",
    "reasoning_summary": "The content centers on leadership responsibility for software quality, not on DevOps philosophy or practices. While overlapping themes exist—like quality and shared accountability—they’re not framed within a DevOps context, resulting in only modest confidence for this category.",
    "level": "Tertiary"
  },
  "Team Motivation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T14:28:12",
    "ai_confidence": 23.3,
    "ai_mentions": 0.7,
    "ai_alignment": 2.3,
    "ai_depth": 2.7,
    "ai_intent": 2.2,
    "ai_audience": 3.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on leadership responsibility for software quality, emphasizing that compromising quality is a leadership decision. While it mentions Scrum teams and the risk of lowering quality under deadlines, its main theme is not about motivating teams or fostering engagement, but about business risk and decision rights. There is minimal discussion of team motivation dynamics or strategies, with only indirect relevance to the empowerment (or lack thereof) of teams. The intent is primarily to critique leadership approaches to quality, not to delve into motivational concepts. Hence, scores are low across mentions, alignment, depth, and signal, with no direct exploration of team motivation or related practices.",
    "reasoning_summary": "This content discusses the responsibility for software quality decisions, focusing on leadership and business risks rather than team motivation. It only tangentially touches on team autonomy, offering little on team engagement or motivational strategies, so its fit to the 'Team Motivation' category is weak.",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 42.2,
    "ai_mentions": 2.3,
    "ai_alignment": 4.2,
    "ai_depth": 4.0,
    "ai_intent": 3.8,
    "ai_audience": 4.5,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content mentions 'Scrum teams' and briefly references the Definition of Done, touching on the responsibility of teams around quality standards. However, the main focus is on leadership accountability in decision-making about quality, not on the formal definition, purpose, or structure of the Scrum Team as accountability per the Scrum Guide. There are no deep discussions on team composition, self-management, or cross-functionality. Thus, the alignment with the Scrum Team category is partial: Scrum Teams are mentioned contextually but not explored in depth or as a central theme.",
    "reasoning_summary": "While Scrum Teams are referenced, the content mainly discusses leadership's role in quality decisions rather than the formal Scrum Team accountability. It briefly connects to Scrum Team responsibilities but doesn't deeply address the category's specific focus areas.",
    "level": "Tertiary"
  },
  "Systems Thinking": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 24.2,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.9,
    "ai_intent": 3.2,
    "ai_audience": 6.1,
    "ai_signal": 6.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on leadership responsibility for software quality, using analogies and emphasizing the need for open discussion of business risks. There is no direct mention of 'Systems Thinking' or related frameworks, nor does it explicitly discuss principles like interdependencies, feedback loops, or holistic analysis. Audience alignment is moderate, as leaders are part of the intended audience for Systems Thinking. Some faint alignment exists in that quality decisions affect systemic outcomes, but discussion lacks depth regarding broader organizational system dynamics or mapping. The intent is to challenge leadership practices rather than to promote or explain Systems Thinking principles.",
    "reasoning_summary": "This content critiques leadership choices about software quality, with little direct or conceptual engagement with Systems Thinking. It doesn't cover systems dynamics, interdependencies, or holistic analysis, so the confidence in matching this category is low.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T14:28:14",
    "ai_confidence": 24.15,
    "ai_mentions": 0.5,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.2,
    "ai_audience": 6.4,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content addresses leadership responsibility for software quality and references 'Definition of Done', which is related to but distinct from working agreements. There is no explicit mention of working agreements, and the focus is on quality standards versus collaboration norms. While it may resonate with Agile practitioners who discuss team agreements, the material does not directly or deeply explore the principles, creation, or maintenance of working agreements themselves.",
    "reasoning_summary": "This content focuses on leadership decisions about quality, not team-based working agreements. While it references standards like 'Definition of Done', it does not address the creation or function of working agreements, making it only loosely aligned with the category.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T14:28:15",
    "ai_confidence": 41.255,
    "ai_mentions": 2.1,
    "ai_alignment": 5.2,
    "ai_depth": 3.6,
    "ai_intent": 4.8,
    "ai_audience": 6.1,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content discusses leadership's responsibility in software quality decisions, emphasizing standard enforcement and business risks when lowering quality. While it alludes to key ALM concepts like governance, risk, and quality standards, it never explicitly references Application Lifecycle Management or related ALM processes, tools, or holistic lifecycle topics. The discussion primarily focuses on quality and organizational responsibility, which only partially aligns with ALM principles. It doesn't sufficiently cover the stages, best practices, or frameworks central to ALM. No penalties applied since the content is current, serious, and not critical of ALM itself.",
    "reasoning_summary": "The post emphasizes leadership accountability in software quality but doesn't directly address ALM holistically. Its alignment with ALM is partial—touching on governance and standards—resulting in moderate confidence for strict ALM categorization.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T14:28:15",
    "ai_confidence": 7.2,
    "ai_mentions": 0.3,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.8,
    "ai_audience": 0.2,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on leadership accountability for software quality and the Definition of Done, referencing Scrum teams but never mentioning Sprint Review or its unique objectives. There's no substantive discussion about Sprint Reviews, their process, or stakeholder involvement. Alignment and relevance are low since the topic is quality assurance within Scrum, not inspection and adaptation as framed by Sprint Review.",
    "reasoning_summary": "This content is about leadership making software quality decisions—not Sprint Reviews. It talks generally about Scrum standards, not about reviewing increments or gathering feedback. Very little relevance to Sprint Review as defined.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 81.7,
    "ai_mentions": 6.3,
    "ai_alignment": 8.4,
    "ai_depth": 7.8,
    "ai_intent": 8.0,
    "ai_audience": 8.5,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 82.0,
    "reasoning": "The content directly frames the issue of software quality as a leadership decision, not a team-level one. It challenges leaders to take responsibility for compromised quality and highlights the importance of open dialogue at the leadership level. The reference to the 'Definition of Done' firmly grounds the discussion in Agile contexts, while the call for leadership accountability and decision-making aligns well with core Agile Leadership themes. While Agile is referenced implicitly rather than by name, the tone and direction target Agile leaders or those influencing quality standards. The discussion is focused and well-aligned, though depth is limited as it's a brief post, and explicit mentions of 'Agile Leadership' are indirect. No outdated or undermining tone is present.",
    "reasoning_summary": "This content positions software quality as a leadership responsibility, urging leaders to fully own decisions that impact risk and standards. While it doesn't directly use the term 'Agile Leadership', its focus and examples clearly align with Agile Leadership values like accountability, empowerment, and cultural transparency.",
    "level": "Primary"
  },
  "Test Automation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 15.5,
    "ai_mentions": 0.2,
    "ai_alignment": 1.3,
    "ai_depth": 1.1,
    "ai_intent": 2.7,
    "ai_audience": 7.0,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content centers on quality standards as a leadership decision, with no direct mentions or discussion of test automation principles, tools, frameworks, or practices. The focus is philosophical and organizational, not technical, with no substantive detail about testing methods or automation. Audience partially aligns, as it targets decision-makers adjacent to automation. The confidence score reflects minimal topical overlap and significant off-topic characteristics.",
    "reasoning_summary": "This content addresses leadership’s responsibility for software quality but does not mention or discuss test automation. It focuses on accountability and decision-making, making it only loosely relevant to the Test Automation category.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T14:28:17",
    "ai_confidence": 8.75,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 0.7,
    "ai_intent": 2.1,
    "ai_audience": 3.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content focuses on leadership responsibility in maintaining software quality, comparing it with financial/legal standards. There is no direct mention or substantial discussion of deployment frequency, release intervals, feedback loops, CI/CD, or improving delivery cadence. While it references Agile and increments, its core argument is about decision ownership—not the frequency or strategy of deployments. Minimal audience overlap exists, as both target leadership/decision-makers. No content is outdated or actively contradictory. Scores are low across all dimensions with no penalties; the confidence reflects weak, at-best tangential relevance.",
    "reasoning_summary": "This content addresses leadership's role in software quality decisions—not deployment frequency. There's no discussion of release cadence or CI/CD, so it's only weakly relevant. Its focus is on responsibility for quality, not optimizing deployment intervals.",
    "level": "Ignored"
  },
  "Site Reliability Engineering": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T14:28:18",
    "ai_confidence": 16.425,
    "ai_mentions": 0.6,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 2.7,
    "ai_audience": 5.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on leadership decisions impacting software quality and accountability, using analogies to finance and law. It discusses the Definition of Done and criticizes reducing quality for deadlines, critiquing Agile misuse. However, it does not mention SRE or related concepts such as SLOs, incident response, or reliability in production systems. The target audience is broader, likely business or agile practitioners, and the material lacks substance directly aligned with SRE principles or practices.",
    "reasoning_summary": "This piece discusses software quality and leadership responsibility but doesn't address site reliability, SRE principles, or production system reliability. Its focus is managerial and process-oriented rather than engineering for reliability, so it only loosely fits the SRE category.",
    "level": "Ignored"
  },
  "Forecasting": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T14:28:18",
    "ai_confidence": 8.32,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 0.7,
    "ai_intent": 1.1,
    "ai_audience": 2.3,
    "ai_signal": 0.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "This content is focused on the implications of compromising software quality and leadership responsibility for such decisions rather than forecasting in Agile/Scrum. There are no explicit references or discussions about using empirical data, prediction, delivery timelines, or methods to enhance forecasting practices. The discussion centers around standards, risk, and leadership accountability, not prediction, planning, or metrics. While risk is acknowledged, it is in the financial or strategic sense, not in the predictive practice of risk management through Agile forecasting. The intended audience somewhat overlaps with Agile/Scrum stakeholders, but the absence of forecasting-centric topics keeps all scores very low, appropriately reflecting the lack of category relevance.",
    "reasoning_summary": "The content addresses leadership responsibility in software quality decisions, lacking focus on methods or practices specific to Agile forecasting. There are no explicit mentions of forecasting or related empirical practices, resulting in a low confidence score for this category.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T14:28:19",
    "ai_confidence": 10.0,
    "ai_mentions": 0.0,
    "ai_alignment": 1.5,
    "ai_depth": 1.0,
    "ai_intent": 1.3,
    "ai_audience": 2.0,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content discusses software quality as a leadership decision in Agile contexts, but there is no direct or indirect mention of Azure Boards or its features. While 'Definition of Done' and Scrum are referenced, these are generic Agile concepts, not specifically tied to Azure Boards. No depth is given regarding the product, its tools, or team collaboration practices within Azure Boards. The audience is leadership and general Agile teams, not users of Azure Boards. Content is mostly off-topic by the category definition.",
    "reasoning_summary": "This content focuses on leadership choices in software quality within Agile, not Azure Boards. It doesn't mention or discuss Azure Boards' tools, practices, or features, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T14:28:19",
    "ai_confidence": 63.7,
    "ai_mentions": 2.6,
    "ai_alignment": 7.2,
    "ai_depth": 6.8,
    "ai_intent": 6.0,
    "ai_audience": 6.5,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 64.0,
    "reasoning": "The content addresses leadership responsibility in software quality decisions, referencing Agile in the context of avoiding misuse and misattribution of quality compromises to Agile practices. However, it does not directly discuss Agile philosophy, principles, or values extensively. The mention of 'the banner of Agile' suggests some relevance to Agile Philosophy, particularly in protecting its values from being misunderstood. The main thrust, though, is an argument about where responsibility for quality lies, which aligns tangentially with Agile's principle of technical excellence and transparency but does not explicitly delve into Agile Philosophy's core themes or values such as the Agile Manifesto, adaptability, or customer collaboration. The discussion of Definition of Done and team empowerment echoes agile environments but is not developed through philosophical reflection. No penalties applied.",
    "reasoning_summary": "While the content touches on Agile values and the misuse of Agile as an excuse for poor quality, its primary focus is on leadership accountability, not the broader Agile Philosophy. Thus, it partially fits the category but lacks direct depth.",
    "level": "Secondary"
  },
  "Azure Repos": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 1.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.0,
    "ai_depth": 1.4,
    "ai_intent": 1.0,
    "ai_audience": 2.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses entirely on leadership decisions and organizational attitudes toward software quality, without any direct or indirect mention of Azure Repos or its core functionalities (source control, branching, code reviews, etc). There is no discussion of repository management, version control tools, or deployment/integration practices. The audience is broadly decision-makers and software professionals, not specifically Azure Repos users. As such, there is almost zero alignment or relevance to the specified category.",
    "reasoning_summary": "This content critiques leadership decisions about software quality but never addresses or references Azure Repos or its key concepts. There’s no discussion of source control, repositories, or related practices, so confidence for this category is extremely low.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 18.43,
    "ai_mentions": 0.5,
    "ai_alignment": 2.7,
    "ai_depth": 1.9,
    "ai_intent": 2.0,
    "ai_audience": 5.1,
    "ai_signal": 2.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on leadership decisions around software quality and organisational risk, drawing analogies to financial and legal standards. There are no explicit mentions or concepts tied directly to Value Stream Management such as value flow, waste reduction, or mapping. The piece centers on accountability rather than process optimization, offering only incidental overlap (leadership impact on software outcomes). Thus, alignment and depth are low.",
    "reasoning_summary": "This content addresses leadership responsibility for software quality but doesn't discuss Value Stream Management principles or practices. It lacks reference to value flow, process optimization, or aligning organizational goals with customer value, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Release Management",
    "calculated_at": "2025-05-16T14:28:12",
    "ai_confidence": 24.45,
    "ai_mentions": 0.6,
    "ai_alignment": 2.0,
    "ai_depth": 2.1,
    "ai_intent": 2.5,
    "ai_audience": 7.5,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on leadership responsibility for software quality decisions and risk, arguing such choices should be deliberate and transparent. However, it does not reference release management explicitly, nor does it meaningfully address release processes, planning, or tools. The indirect relevance is that quality compromises can affect release outcomes, but the piece is not about releasing software; it's about accountability for software quality. Audience alignment is moderately high (leaders involved in delivery), and the signal-to-noise is also relatively high since the message is clear, but the other dimensions are weak on fit.",
    "reasoning_summary": "This content centers on leadership decisions around software quality, but only refers to release management indirectly—by implication of risk and accountability—rather than discussing release practices or processes. It's tangential to Release Management, resulting in low confidence.",
    "level": "Ignored"
  },
  "Business Agility": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T14:28:12",
    "ai_confidence": 57.25,
    "ai_mentions": 2.4,
    "ai_alignment": 6.9,
    "ai_depth": 6.4,
    "ai_intent": 5.8,
    "ai_audience": 7.2,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 57.0,
    "reasoning": "The content focuses on software quality decisions as a leadership issue, which touches on principles of accountability and decision-making relevant to business agility, especially at the leadership and governance level. However, it centers more on the consequences of lowering software quality than on broader agility principles, strategies, or frameworks. Direct mentions of 'Agile' occur, but not 'business agility' specifically, and the discussion reframes Agile as a contrast. There's discussion of leadership roles in decision-making and implications for business value and risk, fitting the audience and intent partially, but with less depth in exploring wider business agility practices or transformations. Overall, the connection to business agility is moderate and indirect.",
    "reasoning_summary": "The post connects leadership decisions on software quality to risk and standards, which partly aligns with business agility themes. However, it doesn't deeply explore how organisations achieve agility or adaptiveness, so it only moderately fits the category.",
    "level": "Tertiary"
  },
  "Product Delivery": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T14:28:12",
    "ai_confidence": 67.83,
    "ai_mentions": 1.6,
    "ai_alignment": 7.9,
    "ai_depth": 6.1,
    "ai_intent": 7.3,
    "ai_audience": 7.0,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 68.0,
    "reasoning": "The content focuses on the role of leadership in decisions around software quality, making the case that quality compromises are a business decision, not a delivery team decision. While concepts like Definition of Done and Agile are referenced, and there is a strong alignment with quality standards in product delivery, the coverage doesn’t deeply explore methodologies for delivery or the mechanics of delivering software. Audience and signal are moderately high, targeting leadership and delivery-interested professionals, but direct category mentions are minimal. No obsolete practices were referenced and the tone is not at odds with the category.",
    "reasoning_summary": "This content highlights how leadership decisions affect software quality, connecting with risk management and standards in product delivery. While it aligns with aspects of product delivery, its focus is leadership accountability, not delivery methods themselves, resulting in moderate confidence.",
    "level": "Secondary"
  },
  "Cycle Time": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T14:28:15",
    "ai_confidence": 2.05,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.5,
    "ai_intent": 1.0,
    "ai_audience": 3.5,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content focuses entirely on decision-making authority around software quality and the risks of compromising standards. Cycle Time is neither mentioned nor implied, and there are no discussions of workflow efficiency, measurement, or lead/delivery time. While aimed at Agile/DevOps audiences, there's no substantive conceptual or thematic overlap with the Cycle Time metric.",
    "reasoning_summary": "This content centers on decision-making and accountability for software quality, not the measurement or optimization of Cycle Time. It lacks direct relevance and does not address Cycle Time concepts, making it a poor fit for this category.",
    "level": "Ignored"
  },
  "Pragmatic Thinking": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 65.5,
    "ai_mentions": 1.4,
    "ai_alignment": 7.0,
    "ai_depth": 6.6,
    "ai_intent": 7.9,
    "ai_audience": 8.3,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 66.0,
    "reasoning": "The content directly discusses leadership’s role in software quality decisions within Agile/Scrum contexts, emphasizing practical consequences and real-world standards (Definition of Done). While it aligns with pragmatic problem-solving by tying quality choices to risk management and leadership accountability, explicit references to methodologies and detailed case strategies are absent. The discussion is practical, but not deep in pragmatic techniques or iterative decision-making processes—more focused on responsibility framing than hands-on solutions. Its intended audience (leaders, practitioners) aligns with the category. No penalties are needed as the discussion is current, focused, and not satirical or critical of the concept itself.",
    "reasoning_summary": "This content is a pragmatic reminder to leaders that software quality compromises are business choices carrying tangible risks, not just technical decisions. While not deeply technical, it firmly ties Agile/Scrum practices to real-world leadership accountability, making it a reasonable fit for the category.",
    "level": "Secondary"
  },
  "Unrealised Value": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 16.6,
    "ai_mentions": 0.4,
    "ai_alignment": 2.9,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 5.0,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on leadership responsibility regarding software quality and the risks of lowering standards. While business risk and value are mentioned, there are no direct references or substantive discussions of Unrealised Value, potential opportunities, or EBM concepts. Instead, the piece critiques decision-making processes about quality. The main focus is risk and accountability in quality decisions rather than analyzing untapped value, opportunity backlogs, or unrealized market potential. The content partially aligns with value protection but does not meet depth or conceptual requirements for this category.",
    "reasoning_summary": "This piece centers on leadership choices regarding software quality, highlighting risk and accountability. It doesn't directly address Unrealised Value or untapped opportunities, so the fit with the category is weak and mostly incidental rather than intentional.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 33.445,
    "ai_mentions": 1.2,
    "ai_alignment": 3.9,
    "ai_depth": 4.2,
    "ai_intent": 3.7,
    "ai_audience": 4.9,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content strongly discusses leadership responsibility for software quality, emphasizing decision-making and accountability when lowering standards. However, it does not explicitly mention Lean Product Development, Lean principles, or related frameworks. There are implicit references to value (risk of lowering quality), but no direct discussion of waste elimination, continuous learning, or Lean tools. The audience (leaders/decision-makers) aligns modestly with Lean Product Development topics, and the discussion's focus on Definition of Done and risk management is tangential to Lean's core. No scores are penalized as the content isn't outdated or satirical, but it lacks direct relevance and depth focused on Lean Product Development.",
    "reasoning_summary": "While this content addresses leadership's role in software quality decisions, it doesn't directly engage with Lean Product Development principles or practices. Its focus is on accountability and standards, not Lean topics like waste reduction or value streams. Thus, its fit for the category is limited and confidence is low.",
    "level": "Ignored"
  },
  "Behaviour Driven Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 10.72,
    "ai_mentions": 0.1,
    "ai_alignment": 1.0,
    "ai_depth": 0.8,
    "ai_intent": 1.2,
    "ai_audience": 2.5,
    "ai_signal": 1.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses on leadership's responsibility for software quality decisions, with references to Agile and Scrum, but does not mention Behaviour Driven Development or discuss its core principles or practices. There is no discussion of BDD tools, collaboration techniques, or requirements alignment, which are central to the category definition. The audience is general leadership/management in tech, not practitioners of BDD.",
    "reasoning_summary": "This content discusses leadership's role in software quality decisions, referencing Agile and Scrum, but does not address Behaviour Driven Development concepts, practices, or tools. There is almost no alignment with the category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 10.9,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.3,
    "ai_intent": 1.8,
    "ai_audience": 3.1,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content never refers to 'Definition of Ready' (DoR), only to 'Definition of Done' (DoD) and software quality. Its main theme centers on leadership responsibility for quality standards and decision-making in software delivery. There is zero direct mention relevance, and the conceptual alignment and discussion depth are very weak — the only shared foundation is an Agile context, but the focus is not on readiness criteria or preparation of backlog items. The audience (Agile-adjacent professionals/leaders) somewhat overlays with the DoR target, but that’s minor. No outdated or undermining tone is present, so no penalties are necessary.",
    "reasoning_summary": "This content focuses entirely on Definition of Done and leadership decisions around software quality, never addressing Definition of Ready. It lacks direct relevance, depth, or alignment to the category, resulting in a very low confidence score for fit.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 86.0,
    "ai_mentions": 6.2,
    "ai_alignment": 9.3,
    "ai_depth": 8.5,
    "ai_intent": 8.8,
    "ai_audience": 8.0,
    "ai_signal": 9.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "Direct mentions of Scrum are present—specifically referencing the Definition of Done, Scrum teams, and quality standards. The central argument sharply aligns with Professional Scrum ethos: quality as accountability, adherence to professional standards, and leadership's responsibility for risk. The discussion is thoughtful, using analogies (CFO, legal) to emphasize high standards, which resonates with technical excellence and empiricism. The article doesn't delve deeply into all key topics (such as empiricism or the broader spectrum of Scrum values), but it squarely addresses the professional responsibility and accountability at the heart of Professional Scrum. Audience fit is strong, targeting organizational leaders, Scrum practitioners, and those in governance roles. The content signal is high; nearly every sentence is relevant. There are no signs of outdated practices, satire, or off-topic filler, and the tone supports—not undercuts—the category.",
    "reasoning_summary": "This content spotlights Scrum’s professional standards, emphasizing uncompromising quality and leadership accountability—core to Professional Scrum’s ethos. It connects responsibility for quality to business risk, aligning well with the category’s intended audience and focus.",
    "level": "Primary"
  },
  "Accountability": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Accountability",
    "calculated_at": "2025-05-16T14:28:13",
    "ai_confidence": 61.15,
    "ai_mentions": 2.7,
    "ai_alignment": 7.9,
    "ai_depth": 6.4,
    "ai_intent": 7.2,
    "ai_audience": 7.7,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 61.0,
    "reasoning": "The content highlights that decisions compromising software quality should be owned by leadership, not teams, emphasizing outcome responsibility. It aligns conceptually with accountability in work systems and distinguishes decision ownership. However, it never explicitly names 'accountability' and only moderately discusses structural mechanisms or formal accountabilities. The primary audience is leadership and practitioners concerned with quality decisions. No outdated references or contradictions.\n",
    "reasoning_summary": "This content fits the Accountability category fairly well: it stresses that quality compromises are not team decisions but should be owned by leadership, showing outcome ownership. It doesn’t explicitly mention 'accountability,' but its intent and alignment are strong.",
    "level": "Secondary"
  },
  "Agnostic Agile": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T14:28:15",
    "ai_confidence": 44.9,
    "ai_mentions": 0.2,
    "ai_alignment": 5.5,
    "ai_depth": 4.7,
    "ai_intent": 5.1,
    "ai_audience": 7.5,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content does not directly mention Agnostic Agile or its principles. While it addresses software quality as a leadership issue and emphasizes professionalism and ethical decision-making—concepts aligned with Agnostic Agile—it frames them within Scrum. There is no explicit discussion of context-driven agility, comparison to other frameworks, or the broader philosophy of Agnostic Agile. The primary focus is on leadership accountability for quality, not the philosophy of method tailoring or principles over process. The audience (leaders and practitioners concerned with quality and decision-making) somewhat aligns, and the content is signal-heavy, but the connection to Agnostic Agile is mostly indirect.",
    "reasoning_summary": "The content argues that software quality is a leadership responsibility and touches on ethics and professionalism, which superficially aligns with Agnostic Agile values. However, it lacks direct reference to Agnostic Agile principles or philosophy and centers on Scrum, so its fit is weak.",
    "level": "Tertiary"
  },
  "Lead Time": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 7.45,
    "ai_mentions": 0.5,
    "ai_alignment": 1.1,
    "ai_depth": 0.8,
    "ai_intent": 0.9,
    "ai_audience": 1.5,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses on software quality as a leadership decision, referencing the definition of done and risk, but never mentions Lead Time or related metrics. There is no discussion of measuring or optimizing delivery intervals, nor any conceptual alignment with Lead Time’s purpose as an observability metric. The target audience (leadership and software professionals) has slight overlap with the intended Lead Time audience, but the signal is low and content is off-topic regarding Lead Time.",
    "reasoning_summary": "This content centers on leadership responsibility for software quality, not Lead Time or its metrics. It lacks direct mention, conceptual focus, or depth on delivery timing, making it only faintly aligned with the Lead Time category audience and intent.",
    "level": "Ignored"
  },
  "Model": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Model",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 22.6,
    "ai_mentions": 1.7,
    "ai_alignment": 2.4,
    "ai_depth": 2.0,
    "ai_intent": 2.2,
    "ai_audience": 9.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses primarily on the leadership responsibility for software quality, using the Definition of Done as a control mechanism. While the Definition of Done is a concept in Agile, the post doesn't present it as a conceptual model but rather as a process standard. There are no references to models, frameworks, or tools used for systems thinking or decision-making within Agile, DevOps, or Lean. The discussion lacks depth on model-related themes and instead centers on accountability and process ownership, targeting a leadership audience but only referencing concepts (like Scrum or DoD) in passing without model analysis.",
    "reasoning_summary": "This content calls out leadership's role in software quality and references the Definition of Done, but it doesn't explore conceptual models or frameworks as defined for this category. Its fit is weak because the focus is on responsibility and process, not models as organisational tools.",
    "level": "Ignored"
  },
  "Organisational Change": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T14:28:16",
    "ai_confidence": 37.35,
    "ai_mentions": 2.7,
    "ai_alignment": 4.9,
    "ai_depth": 5.4,
    "ai_intent": 5.5,
    "ai_audience": 4.1,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content addresses decision-making at a leadership level regarding software quality but focuses primarily on the accountability of leaders in maintaining standards. While it touches on themes like leadership responsibility and references 'Agile', it does not explicitly discuss organisational change, transformation frameworks, change management methodologies, or strategies for agility. The alignment is moderate due to some overlap regarding culture and policy decisions, but the main discussion is about quality choices and risk ownership, not change management nor transformation. There is a mild nod to the impact of leadership decisions on organisational practices, yet depth on change strategies is limited. Audience is mostly technical with an appeal to leaders, but not tailored to change managers. No explicit or frequent mention of 'organisational change' or transformation models.",
    "reasoning_summary": "This content ties leadership decisions to software quality and accountability, with a tangential nod to agile culture but lacks clear discussion of organisational change processes, strategies, or transformation frameworks. It fits the category only loosely.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T14:28:18",
    "ai_confidence": 3.7,
    "ai_mentions": 0.3,
    "ai_alignment": 1.3,
    "ai_depth": 2.4,
    "ai_intent": 1.0,
    "ai_audience": 5.1,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content critiques leadership decisions affecting software quality, using Agile and Scrum as context, but does not mention or discuss remote working, distributed teams, or remote-related Agile practices. There are no references to challenges, solutions, or tools tied to remote work. Main ideas focus on governance and quality, not remote collaboration or processes, resulting in low category fit.",
    "reasoning_summary": "This content is centered on software quality and leadership decisions within Agile, not on remote working. It lacks any discussion or mention of remote-specific challenges, tools, or practices, so it is an extremely poor fit for the Remote Working category.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Capability",
    "calculated_at": "2025-05-16T14:28:19",
    "ai_confidence": 28.103,
    "ai_mentions": 1.2,
    "ai_alignment": 3.4,
    "ai_depth": 2.7,
    "ai_intent": 3.1,
    "ai_audience": 4.5,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content discusses leadership responsibility in software quality but does not explicitly address organisational capabilities or how they are cultivated. 'Definition of Done' is referenced as a quality safeguard, but its discussion focuses on standards, risk, and decision rights—not on building enduring capabilities. The piece is directed at decision-makers, aligning partially with typical capability audiences but lacks conceptual and practical depth on capability development or assessment. There is little direct discussion of capability as defined in the classification; thus, the confidence score is low.",
    "reasoning_summary": "This content centers on leadership's role in software quality decisions, highlighting standards and responsibility, but offers minimal exploration of capability concepts or development. Its fit with the 'Capability' category is limited and indirect, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Time to Market": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T14:28:20",
    "ai_confidence": 15.326,
    "ai_mentions": 1.2,
    "ai_alignment": 2.3,
    "ai_depth": 1.8,
    "ai_intent": 2.5,
    "ai_audience": 4.8,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on leadership responsibility for software quality decisions and the risks of compromising standards, but it does not directly discuss Time to Market. It briefly references meeting deadlines, implying a possible time tradeoff, but makes no explicit or sustained exploration of Time to Market metrics, strategies, or improvement. The main intent is to argue about quality ownership, not speed of delivery, resulting in low alignment and depth. Audience loosely fits as leaders, but relevance to Time to Market is marginal.",
    "reasoning_summary": "This content centers on leadership’s role in software quality and barely touches on deadline pressures. It doesn’t directly discuss, define, or analyze Time to Market, so fit is minimal and confidence is low.",
    "level": "Ignored"
  },
  "Service Level Expectation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T14:28:21",
    "ai_confidence": 1.6,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.2,
    "ai_intent": 0.4,
    "ai_audience": 0.3,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content centers on leadership responsibility for software quality decisions, challenging organizations that compromise quality standards in software development. It doesn't directly or indirectly mention Service Level Expectation (SLE), nor does it connect to the SLE concept, its calculation, application, or relevance within Agile, Scrum, or Kanban. The only tangentially related idea is the mention of 'Definition of Done,' which is a separate concept. There is no alignment or overlap with SLE, either in terminology or intent; the discussion is anchored solely on quality as a leadership concern.",
    "reasoning_summary": "This content discusses leadership and software quality—never mentioning or relating to Service Level Expectation. There’s no conceptual, topical, or audience alignment with SLE, so it should not be classified in this category.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T14:28:22",
    "ai_confidence": 30.85,
    "ai_mentions": 1.6,
    "ai_alignment": 4.4,
    "ai_depth": 3.7,
    "ai_intent": 4.2,
    "ai_audience": 6.2,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content discusses leadership accountability in software quality decisions, referencing Agile terminology like Definition of Done and Scrum. However, it doesn't explicitly address transparency, inspection, or adaptation—the core empiricism elements. There's a thematic overlap (team empowerment, standards), but little on empirical process control practices, evidence-based adjustment, or real-world application of those principles to decision-making. The message is tangential: it's about responsibility, not empiricism.",
    "reasoning_summary": "While the content references Agile quality practices and touches on team vs. leadership decision-making, it lacks substantial discussion of empirical process control principles, such as transparency, inspection, or adaptation. Its main focus is accountability, making the fit only weakly aligned.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T14:28:14",
    "ai_confidence": 17.6,
    "ai_mentions": 0.0,
    "ai_alignment": 2.4,
    "ai_depth": 2.8,
    "ai_intent": 4.2,
    "ai_audience": 4.6,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content discusses the role of leadership in software quality decisions, drawing analogies to finance and legal domains and emphasizing the importance of maintaining standards (Definition of Done). However, it never directly references Test First Development or its principles. The focus is on accountability and professional standards, not on setting success criteria before implementation or specific test-first practices (manual or automated). Audience is general but leans managerial, not practitioners of Test First. There is some slight alignment due to references to quality gates, but no substantive exploration of Test First Development.",
    "reasoning_summary": "This content addresses quality and leadership accountability, but does not mention or deeply engage with Test First Development, success criteria definition, or related practices. It is only tangentially relevant, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T14:28:14",
    "ai_confidence": 33.16,
    "ai_mentions": 0.4,
    "ai_alignment": 3.2,
    "ai_depth": 2.9,
    "ai_intent": 3.7,
    "ai_audience": 4.4,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content centers on organizational responsibility for software quality and leadership's role in risk. There are no direct mentions or in-depth discussions on product validation practices such as user testing, market fit, or customer feedback loops. The conceptual overlap is minimal: while high quality is important for validated products, this post is focused on decision-making and accountability, rather than validation processes. The intended audience (leaders and teams) and relevance are only loosely matched, yielding low confidence.",
    "reasoning_summary": "This content discusses leadership's responsibility for software quality decisions, not product validation methods or testing. While maintaining quality is important, the article doesn't address user feedback, customer testing, or validation practices central to this category.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T14:28:14",
    "ai_confidence": 41.03,
    "ai_mentions": 1.5,
    "ai_alignment": 4.9,
    "ai_depth": 4.7,
    "ai_intent": 5.8,
    "ai_audience": 7.2,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content addresses leadership's responsibility for software quality, mainly focusing on risk, standards, and decision ownership. While it briefly references Agile (e.g., Scrum, Definition of Done), it doesn't substantially discuss strategies for enhancing market adaptability—such as Agile or DevOps-driven responsiveness to change—nor continuous feedback, Lean, or market positioning. The primary theme is about accountability, not adaptive capability. There's moderate audience alignment (leadership and teams), but the discussion remains more about governance and quality trade-offs than adaptability in dynamic markets.",
    "reasoning_summary": "The content discusses leadership and software quality decisions with some Agile references, but doesn't focus on strategies or methodologies for market adaptability. Its main intent is on governance and risk, not organizational agility. Confidence for the Market Adaptability category is therefore modest.",
    "level": "Tertiary"
  },
  "Value Stream Mapping": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T14:28:17",
    "ai_confidence": 6.35,
    "ai_mentions": 0.1,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.3,
    "ai_audience": 2.0,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content does not mention Value Stream Mapping, nor does it discuss mapping workflows, visualising processes, or Lean concepts. Its focus is on leadership responsibility and standards for software quality, not on analysing or optimising value delivery via VSM or Lean. There is no substantive conceptual or thematic overlap, textual evidence, or intent aligning with the defined category. The only minor alignment is that VSM can be loosely related to overall quality, but this is neither explicit nor developed.",
    "reasoning_summary": "This content is focused on leadership's role in software quality decisions. It does not mention or discuss Value Stream Mapping or related Lean process visualisation. Its scope and purpose are not aligned with the category, making it a poor fit.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T14:28:18",
    "ai_confidence": 19.4,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 2.4,
    "ai_intent": 2.9,
    "ai_audience": 5.7,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content discusses the importance of maintaining software quality and the leadership responsibility behind it, using references like 'Definition of Done.' However, it never explicitly mentions automated testing, nor does it discuss methodologies, tools, or principles specific to automated testing. The audience is somewhat relevant (tech leaders, decision-makers), but the article is about quality governance rather than automated testing practice. Minimal alignment; confidence is low.",
    "reasoning_summary": "This content centers on leadership's role in software quality decision-making and standards but doesn't reference automated testing or its methodologies. While it targets tech leaders and mentions practices like Definition of Done, it doesn't fit Automated Testing as defined.",
    "level": "Ignored"
  },
  "Mentoring": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T14:28:19",
    "ai_confidence": 23.65,
    "ai_mentions": 1.3,
    "ai_alignment": 2.2,
    "ai_depth": 2.6,
    "ai_intent": 2.0,
    "ai_audience": 4.5,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on leadership responsibility for software quality, using rhetorical questions to highlight decision ownership. While it addresses leadership choices and intent, there is no direct discussion of mentoring, coaching, skill development, or agile growth strategies. No mentoring processes, techniques, or relationships are discussed. It targets leadership audiences, but the scope is more ethical decision-making than professional development or mentoring.",
    "reasoning_summary": "This content centers on leadership responsibility in quality decisions rather than mentoring or coaching practices. Lacking discussion on mentorship methods, team support, or agile growth, it doesn't align strongly with the Mentoring category.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T14:28:19",
    "ai_confidence": 72.75,
    "ai_mentions": 5.4,
    "ai_alignment": 8.8,
    "ai_depth": 7.5,
    "ai_intent": 8.1,
    "ai_audience": 7.8,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content explicitly discusses the importance of software quality standards and how compromising on them is a leadership, not a team, decision. It references concepts like Definition of Done and the consequences of lowering quality, aligning conceptually with Engineering Excellence. However, it focuses more on accountability and decision-making, offering moderate depth and practical relevance, but does not provide detailed best practices or technical guidance. The primary audience is technical leaders and teams. No obvious penalties apply as the content is current and not undermining the category.",
    "reasoning_summary": "This content frames software quality as a leadership responsibility and warns against lowering standards, strongly aligning with Engineering Excellence by advocating for sustained quality practices and organizational transparency, though it doesn't get deeply technical.",
    "level": "Secondary"
  },
  "Definition of Workflow": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:15",
    "ai_confidence": 9.75,
    "ai_mentions": 0.5,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 1.2,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content does not explicitly discuss the Definition of Workflow, nor does it address Kanban or agile workflow models. Its central focus is the Definition of Done and quality standards as a leadership decision, emphasizing leadership responsibility over software quality standards. There is a passing mention of Scrum teams, but workflow agreements, entry/exit criteria, WIP limits, or Kanban practices are not discussed. All key examples and arguments focus on quality criteria, not on making workflow explicit or adaptable per the scope. There are no outdated, critical, or satirical tones that would require penalties.",
    "reasoning_summary": "This content centers on leadership's role in software quality, focusing on the Definition of Done. There are no explicit or implicit discussions of workflow agreements, Kanban, or agile definitions of workflow, making alignment with the category minimal.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:28:58",
    "ai_confidence": 4.5,
    "ai_mentions": 0.1,
    "ai_alignment": 1.8,
    "ai_depth": 1.2,
    "ai_intent": 1.5,
    "ai_audience": 0.7,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses solely on leadership's role in software quality decisions, emphasizing accountability and risk but does not mention OKRs, goal-setting, measurable outcomes, or related frameworks. No explicit or implicit discussion ties the material to Objective Key Results' theory, practices, or strategic alignment. There is no reference to measurement, outcomes, alignment, or inspection/adaptation cycles related to OKRs, nor does the audience targeting indicate an OKR-focused readership. All dimensions score near the bottom range due to the absence of direct connection.",
    "reasoning_summary": "This content is about leadership accountability for software quality and does not discuss, reference, or align with OKRs or their principles. It has minimal to no relevance to the Objective Key Results category.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:02:38",
    "ai_confidence": 42.9,
    "ai_mentions": 2.9,
    "ai_alignment": 4.7,
    "ai_depth": 4.2,
    "ai_intent": 5.1,
    "ai_audience": 5.7,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 43.0,
    "reasoning": "The content focuses on software quality and the role of leadership in decisions about quality standards. It references the 'Definition of Done'—a concept highly relevant to Product Developers in Scrum and Agile contexts—as the mechanism ensuring quality, but does not explicitly discuss Product Developer accountability, structure, or role beyond implying teams shouldn't lower quality. There is no direct mention of 'Product Developer' or its defined accountability. Some concepts (quality, Definition of Done, decision authority) intersect with Product Developer responsibilities in modern frameworks, but the main thrust is about leadership owning the business risk of compromising quality, not about Product Developers' collective accountability or their unique behaviors, skills, or structure. The audience is mostly practitioners and leaders, not narrowly Product Developers. The post is on-point for quality practices but only indirectly touching the Product Developer category.",
    "reasoning_summary": "This content primarily addresses leadership's role in setting and approving software quality standards, touching on Definition of Done as a safeguard. It only indirectly references Product Developer responsibilities, making it tangential rather than directly relevant to the defined category.",
    "level": "Tertiary"
  },
  "Collective Intelligence": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:02:44",
    "ai_confidence": 7.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.8,
    "ai_depth": 0.9,
    "ai_intent": 1.0,
    "ai_audience": 2.1,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses strictly on leadership responsibility for software quality and the role of a Definition of Done in Scrum. There is no mention—direct or conceptual—of human-AI partnerships, distributed cognition, or emergent capabilities from human-AI collaboration. The main ideas remain entirely about human-driven decision-making regarding software quality, with no reference whatsoever to AI agents, collaboration between humans and AI, or the enhancement of outcomes through such means. Audience is likely Agile or software leaders, yet the topic fits quality/leadership within Scrum, not collective intelligence. The signal is high for its own topic but nearly absent for the given category.",
    "reasoning_summary": "The content strictly discusses leadership decisions in managing software quality within Scrum teams, focusing solely on human roles and standards, and does not address collective intelligence or human-AI collaboration in any way.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:19",
    "ai_confidence": 41.57,
    "ai_mentions": 0.8,
    "ai_alignment": 4.4,
    "ai_depth": 3.7,
    "ai_intent": 4.2,
    "ai_audience": 6.8,
    "ai_signal": 7.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content revolves around quality ownership in software delivery, highlighting that setting or lowering standards is a leadership—not team—decision. However, it does not directly mention 'Agentic Engineering,' nor does it explicitly discuss maximising developer or AI agency, system observability, or the philosophical aspects central to the category. There is some alignment: it touches on team autonomy (by advocating for teams not reducing quality themselves) and ethical leadership in decision-making. Depth is limited as it mainly critiques current practices rather than proposing agentic or systemically observant approaches. The target audience (leadership, teams) fits adjacent to those interested in Agentic Engineering, and the focus remains on quality and decision accountability. Overall, the fit is moderate, with the content brushing up against agentic concepts but lacking explicit, in-depth treatment.",
    "reasoning_summary": "This content discusses quality ownership as a leadership decision and critiques lowering standards but does not directly engage with Agentic Engineering’s core themes of autonomous agency or systemic practices. Its relevance is moderate due to only partial conceptual overlap.",
    "level": "Tertiary"
  },
  "Agentic Software Delivery": {
    "resourceId": "3YDTlhSlU4A",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:14",
    "ai_confidence": 13.05,
    "ai_mentions": 0.2,
    "ai_alignment": 2.15,
    "ai_depth": 1.75,
    "ai_intent": 2.2,
    "ai_audience": 3.1,
    "ai_signal": 3.65,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on leadership responsibility for software quality and the Definition of Done. It does not discuss agentic software delivery, autonomous AI agents, or contextual intelligence. There is no mention or exploration of agentic concepts, only a general emphasis on accountability and process. Thus, the fit is minimal and confidence is low.",
    "reasoning_summary": "The content centers on leadership, quality, and Scrum roles, but has no discussion of agentic software delivery or autonomous AI agents. Fit with the category is minimal and indirect.",
    "level": "Ignored"
  }
}