{
  "Large Scale Agility": {
    "resourceId": "qwciWeifRRf",
    "category": "Large Scale Agility",
    "calculated_at": "2025-08-07T06:10:23",
    "ai_confidence": 22.45,
    "ai_mentions": 0.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.3,
    "ai_intent": 2.7,
    "ai_audience": 7.4,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content discusses simplifying branching strategies (e.g., GitHub Flow, Release Flow) to improve delivery speed and reduce risk, but focuses entirely on team-level engineering practices in version control, not on scaling Agile across an organization. There is no explicit or implicit discussion of large-scale frameworks (SAFe, LeSS, Nexus), enterprise Agile transformation, cross-team or business alignment, or leadership. The core concepts revolve around operational team workflow, making only a tangential connection to topics relevant to Large Scale Agility. The audience is software engineering teams seeking efficiency, not strategists or enterprise-level leadership. Thus, fit with the Large Scale Agility category is poor.",
    "reasoning_summary": "Content focuses on team-level branching strategies, not on scaling Agile across organizations. Lacks enterprise or cross-team agility themes. Does not fit the 'Large Scale Agility' category except in indirect, marginal ways.",
    "level": "Ignored"
  },
  "Tenet": {
    "resourceId": "qwciWeifRRf",
    "category": "Tenet",
    "calculated_at": "2025-08-07T07:06:26",
    "ai_confidence": 76.09,
    "ai_mentions": 6.4,
    "ai_alignment": 8.2,
    "ai_depth": 7.8,
    "ai_intent": 8.1,
    "ai_audience": 7.6,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content advocates for simple branching strategies with a focus on flow efficiency (e.g., 'focus on flow, not friction'; 'eliminate unnecessary complexity'), which is a recognized tenet in Lean/DevOps. It prescribes actionable rules (short-lived branches, continuous deployment) aligned with the tenet definition. Discussion is moderately deep, explaining principles and contrasting good/bad practices. Direct mention of 'tenet' is absent, but the prescriptive guidance meets the tenet criteria. No penalties apply; topics, audience, and clarity are well aligned.",
    "reasoning_summary": "Content is a strong fit: it prescribes actionable, flow-centric rules for version control, matching Lean/DevOps tenets. Explicit ‘tenet’ mention is absent but alignment and depth are strong. Focus and intent match the category well.",
    "level": "Secondary"
  },
  "Collaboration Tools": {
    "resourceId": "qwciWeifRRf",
    "category": "Collaboration Tools",
    "calculated_at": "2025-08-07T07:06:14",
    "ai_confidence": 15.95,
    "ai_mentions": 0.7,
    "ai_alignment": 2.8,
    "ai_depth": 2.3,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 3.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content centers on branching strategies (GitHub Flow, Release Flow), emphasizing simplicity to improve delivery and reduce risk. While such strategies affect how teams coordinate, the discussion does not address collaboration tools, platforms, or features as defined (e.g., Slack, Jira). There is no mention or substantial exploration of tools for communication/coordination; rather, version control workflow procedures are discussed. The intended audience (Agile teams) partially aligns, but the subject matter is about process, not support tools for collaboration. Signal is moderate due to focus, but overall fit is minimal.",
    "reasoning_summary": "Content discusses branch strategy process, not collaboration tools/platforms. No mention of communication/coordination tools. Intent and topic do not align with the category—fit is minimal and mostly tangential.",
    "level": "Ignored"
  },
  "Revenue per Employee": {
    "resourceId": "qwciWeifRRf",
    "category": "Revenue per Employee",
    "calculated_at": "2025-08-07T11:25:43",
    "ai_confidence": 7.9,
    "ai_mentions": 0.1,
    "ai_alignment": 1.5,
    "ai_depth": 0.9,
    "ai_intent": 0.8,
    "ai_audience": 2.2,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content exclusively discusses engineering branching strategies (e.g., GitHub Flow, Release Flow) and their impact on delivery speed and risk. There is no direct or indirect mention of Revenue per Employee as a metric, nor is there analysis of workforce efficiency or financial performance via empirical data. Audience is technical (engineering teams), not financial or executive. No outdated or critical tone justifying penalty.",
    "reasoning_summary": "The content focuses on branching strategy simplicity for engineering flow, not on Revenue per Employee or related metrics. No alignment with the category’s definition; fit is extremely weak to none.",
    "level": "Ignored"
  },
  "Continuous Delivery": {
    "resourceId": "qwciWeifRRf",
    "category": "Continuous Delivery",
    "calculated_at": "2025-09-17T23:12:35",
    "ai_confidence": 83.8,
    "ai_mentions": 6.0,
    "ai_alignment": 9.2,
    "ai_depth": 8.9,
    "ai_intent": 9.4,
    "ai_audience": 8.6,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content emphasizes simplified branching strategies (GitHub Flow, Release Flow) with explicit references to continuous deployment and delivering faster. It ties branching to enabling flow, reducing risk, and consistent delivery—themes closely aligned with Continuous Delivery. Although 'Continuous Delivery' is not named directly, related concepts (continuous deployment, flow, fast delivery) are central. Discussion covers the rationale, key practices (short-lived branches, main merges), and consequences for delivery frequency and risk. Audience is technical (teams, engineering leads) and content is tightly focused with little off-topic noise. No outdated practices or contradicting tone is present.",
    "reasoning_summary": "Content strongly fits Continuous Delivery: it explores how simple branching enables fast, reliable software shipping, references continuous deployment, and targets practitioners. Fit is clear but not maximally explicit.",
    "level": "Primary"
  },
  "Scaling": {
    "resourceId": "qwciWeifRRf",
    "category": "Scaling",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 18.85,
    "ai_mentions": 1.2,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 2.6,
    "ai_audience": 5.6,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses primarily on branching strategies (GitHub Flow, Release Flow) for version control, emphasizing simplicity to improve delivery speed and reduce risk. While it mentions flow—a relevant scaling concept—the discussion is narrowly targeted at team-level engineering practices rather than coordinating multiple teams or addressing organizational scaling complexities. There is no reference to scaling frameworks (SAFe, LeSS, etc.), cross-team strategies, or enterprise-level challenges. The intended audience seems to be software engineers rather than large-scale agile practitioners or strategists. Therefore, alignment and depth with the Scaling category are low.",
    "reasoning_summary": "This content addresses branching simplicity and engineering flow for individual teams, not the broader methodologies or complexity involved in scaling Agile across multiple teams or enterprises. It lacks sufficient alignment with the scaling category.",
    "level": "Ignored"
  },
  "System Configuration": {
    "resourceId": "qwciWeifRRf",
    "category": "System Configuration",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 12.85,
    "ai_mentions": 0.6,
    "ai_alignment": 1.7,
    "ai_depth": 1.8,
    "ai_intent": 2.0,
    "ai_audience": 3.5,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses exclusively on branching strategies in version control systems (specifically GitHub Flow and Release Flow), aiming to improve software delivery velocity. While it involves technical practices, it does not address the core topics of system configuration, such as setup and integration of systems, configuration management, automation, or related best practices. It never mentions 'system configuration' directly, nor discusses hardware/software integration, and the alignment is low. The intended audience is technical, but the discussion is strictly software development process-related rather than configuration-focused.",
    "reasoning_summary": "This post centers on simplifying Git branching models for software delivery, not on system configuration topics like setup, integration, or automation. The relevance to system configuration is minimal, resulting in a very low confidence fit for the category.",
    "level": "Ignored"
  },
  "Definition of Done": {
    "resourceId": "qwciWeifRRf",
    "category": "Definition of Done",
    "calculated_at": "2025-05-16T20:29:43",
    "ai_confidence": 10.7,
    "ai_mentions": 0.1,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 2.0,
    "ai_audience": 2.6,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses exclusively on simplifying branching strategies for faster software delivery, advocating for GitHub Flow and Release Flow. There is no direct or indirect reference to Definition of Done (DoD), nor does it discuss criteria for completion, team alignment around quality, or practices foundational to DoD. The audience may overlap with DoD (engineering teams), but the topic is distinctly about version control and delivery flow, not DoD principles, intent, or artifacts.",
    "reasoning_summary": "This content discusses simplifying version control branching strategies, not the Definition of Done. It does not reference DoD concepts or themes; thus, its relevance to the category is extremely low.",
    "level": "Ignored"
  },
  "Strategy": {
    "resourceId": "qwciWeifRRf",
    "category": "Strategy",
    "calculated_at": "2025-08-07T07:06:14",
    "ai_confidence": 22.36,
    "ai_mentions": 1.1,
    "ai_alignment": 2.5,
    "ai_depth": 2.2,
    "ai_intent": 2.0,
    "ai_audience": 6.0,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content discusses branching strategies, but focuses on operational tactics for engineering teams (GitHub Flow, Release Flow), emphasizing simplicity for delivery and reduced risk. There is no meaningful discussion of organizational strategy, alignment, or high-level planning. While 'strategy' is referenced, it refers to version control techniques, not organizational direction or strategic decision-making. The intent is to promote workflow best practices, not connect to greater strategic objectives. The audience is practitioners, not strategic planners.",
    "reasoning_summary": "This content is operational, discussing practical branching approaches for software teams rather than high-level organizational strategy. The mention of 'strategy' is technical, not strategic in nature, so fit with the category is weak.",
    "level": "Ignored"
  },
  "Customer Focus": {
    "resourceId": "qwciWeifRRf",
    "category": "Customer Focus",
    "calculated_at": "2025-08-07T09:25:39",
    "ai_confidence": 29.16,
    "ai_mentions": 1.8,
    "ai_alignment": 3.7,
    "ai_depth": 2.5,
    "ai_intent": 3.2,
    "ai_audience": 6.4,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content primarily discusses the simplification of branching strategies to improve delivery speed and reduce risk. While it states that this helps teams 'deliver value consistently,' it lacks direct references to customers, customer outcomes, or leveraging customer feedback or data. Its focus is on engineering best practices and internal delivery optimization with only passing, implicit relevance to customer value. Therefore, it marginally fits the 'Customer Focus' category, with low scores for direct mention, conceptual alignment, and depth.",
    "reasoning_summary": "The content centers on engineering flow and delivery, not explicit customer value, outcomes, or feedback. It only weakly aligns with Customer Focus, mentioning 'deliver value' but without substantial evidence or customer-centric depth.",
    "level": "Ignored"
  },
  "Technical Debt": {
    "resourceId": "qwciWeifRRf",
    "category": "Technical Debt",
    "calculated_at": "2025-08-07T11:25:43",
    "ai_confidence": 20.9,
    "ai_mentions": 0.3,
    "ai_alignment": 2.6,
    "ai_depth": 2.0,
    "ai_intent": 2.0,
    "ai_audience": 7.2,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content centers on simplifying branching strategies to boost delivery speed and reduce risk, but it does not directly mention or discuss technical debt. While reducing complexity may indirectly reduce technical debt, the main focus is version control workflow efficiency. There is minimal discussion of long-term code maintainability, trade-offs, or debt remediation strategies. The audience (engineering teams) partly overlaps with those interested in technical debt, and the content is focused on practical workflow advice rather than debt management.",
    "reasoning_summary": "The content does not directly discuss technical debt and instead focuses on workflow simplicity. Any alignment is indirect and limited, so the fit to 'Technical Debt' is weak and mostly incidental.",
    "level": "Ignored"
  },
  "Agentic Agility": {
    "resourceId": "qwciWeifRRf",
    "category": "Agentic Agility",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 28.83,
    "ai_mentions": 0.3,
    "ai_alignment": 3.2,
    "ai_depth": 2.8,
    "ai_intent": 3.6,
    "ai_audience": 7.1,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content discusses branching strategies in software engineering, emphasizing simplicity and value delivery. While this tangentially relates to agility (faster delivery, reduced risk), it does not explicitly discuss agency, intentionality, or adaptive action within Agile or socio-technical environments. There are no direct mentions of agency, and the main concepts fall outside the specific domain of agentic agility. The focus is technical process optimization, not the human/AI capacity for agentic action.",
    "reasoning_summary": "This content focuses on simplifying branching strategies for better delivery speed and risk reduction. Although aligned with Agile principles, it does not address agency, intentionality, or adaptive capacity central to Agentic Agility. Thus, confidence is low.",
    "level": "Ignored"
  },
  "Product Backlog": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Backlog",
    "calculated_at": "2025-05-16T20:29:43",
    "ai_confidence": 7.8,
    "ai_mentions": 0.1,
    "ai_alignment": 0.8,
    "ai_depth": 0.5,
    "ai_intent": 1.0,
    "ai_audience": 2.5,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on branching strategies, version control, and practices such as GitHub Flow and Release Flow, with no mention or indirect reference to the Product Backlog or backlog management. There is no alignment with the category’s definition, topics, or its intended Agile audience. All dimensions score very low since the content is off-topic—no terminology, conceptual overlap, or relevance to Product Backlog processes or responsibilities.",
    "reasoning_summary": "This content addresses version control strategies, not product backlog topics. It neither references nor relates to backlog concepts, making it a poor fit for the Product Backlog category.",
    "level": "Ignored"
  },
  "Personal": {
    "resourceId": "qwciWeifRRf",
    "category": "Personal",
    "calculated_at": "2025-05-16T20:29:43",
    "ai_confidence": 18.9,
    "ai_mentions": 1.0,
    "ai_alignment": 2.2,
    "ai_depth": 2.8,
    "ai_intent": 2.5,
    "ai_audience": 5.8,
    "ai_signal": 3.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content critically discusses branching strategies, advocating for simplicity with GitHub Flow and Release Flow. It does not include personal anecdotes, reflections, or unique subjective experiences within Agile, Scrum, or DevOps. Instead, it provides generalized advice aimed at technical teams and is analytical rather than personal. Minimal direct reference to the 'Personal' category is present. As such, the content does not fit the scope for personal classification.",
    "reasoning_summary": "This content is a technical, opinion-driven piece lacking personal stories or reflections, focusing instead on best practices in branching. It does not fit the 'Personal' category, as it offers general advice rather than individual insight or experience.",
    "level": "Ignored"
  },
  "Method": {
    "resourceId": "qwciWeifRRf",
    "category": "Method",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 62.85,
    "ai_mentions": 4.2,
    "ai_alignment": 7.8,
    "ai_depth": 6.7,
    "ai_intent": 8.1,
    "ai_audience": 7.3,
    "ai_signal": 6.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content directly discusses specific branching models (GitHub Flow, Release Flow) as step-by-step approaches for version control, matching the method-oriented focus—especially for Agile/DevOps practice. It gives concrete procedural advice, though it's not deeply technical, and avoids tool/implementation specifics. It doesn't directly reference 'method' terminology, thus relatively low on explicit mentions. The primary audience is technical teams and practitioners. No outdated practices or contradictory tone detected.",
    "reasoning_summary": "This content gives practical, stepwise guidance on using specific branching strategies. While it doesn't use 'method' terminology directly, the focus on procedural best practices fits the Method category, especially for Agile teams aiming for fast delivery.",
    "level": "Secondary"
  },
  "Enterprise Agility": {
    "resourceId": "qwciWeifRRf",
    "category": "Enterprise Agility",
    "calculated_at": "2025-05-16T20:29:45",
    "ai_confidence": 23.625,
    "ai_mentions": 0.7,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 6.1,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content is focused entirely on team-level branching strategies (GitHub Flow, Release Flow), with no references to enterprise-wide agility, organisational structures, or leadership. There are no direct mentions of enterprise agility concepts or frameworks. The core message is about simplifying developer workflows, addressing team execution rather than organisational transformation or agility. Audience is likely technical teams rather than executives or organisational leaders. Slightly higher signal and audience score due to relevance to technical practices, but otherwise, the fit is weak.",
    "reasoning_summary": "This piece is aimed at technical teams, emphasizing simpler branching strategies to improve delivery speed. While useful for agile teams, it doesn't address organisation-wide agility, leadership, or transformation, resulting in low category confidence.",
    "level": "Ignored"
  },
  "Hypothesis Driven Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Hypothesis Driven Development",
    "calculated_at": "2025-08-07T09:25:37",
    "ai_confidence": 8.05,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.5,
    "ai_audience": 2.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses branching strategies (GitHub Flow, Release Flow) focused on delivery speed and minimizing complexity. It does not mention or imply hypothesis formulation, experimentation, validated learning, or data-driven product decisions central to Hypothesis Driven Development. There is no discussion of experiments, hypotheses, or insights from empirical testing. Instead, the article gives prescriptive advice. The closest alignment is that it alludes to delivery and iteration, but omits experimentation, data, or validated learning. Thus, the fit with Hypothesis Driven Development is extremely tenuous.",
    "reasoning_summary": "This content is about version control and delivery flow, not Hypothesis Driven Development. It lacks hypotheses, experimentation, or validated learning themes. Any category fit is slight and incidental at best.",
    "level": "Ignored"
  },
  "Discipline": {
    "resourceId": "qwciWeifRRf",
    "category": "Discipline",
    "calculated_at": "2025-08-07T07:06:14",
    "ai_confidence": 36.22,
    "ai_mentions": 1.1,
    "ai_alignment": 3.7,
    "ai_depth": 3.3,
    "ai_intent": 3.9,
    "ai_audience": 7.4,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses primarily on branching strategies and the advantages of simplicity (e.g., GitHub Flow, Release Flow). While it suggests principles (simplicity, flow over friction) relevant to disciplined engineering practice, it does not explicitly discuss the systemic, principled, or evolutionary aspects of 'Discipline' as defined—such as governance, codified knowledge, or multi-disciplinary evolution. There is no direct mention or exploration of 'discipline' as a field or code of practice in the sense described in the category. The main intent is guidance on practical branching strategies, not an exploration of the maturation or structure of a discipline. The audience (engineering teams) has some overlap with discipline topics, and the advice is focused, but the match is only partial.",
    "reasoning_summary": "The content offers practical advice on version control strategy and hints at underlying principles, but does not explicitly discuss or deeply explore 'Discipline' as a structured field or systemic application. Only a partial fit for the category.",
    "level": "Ignored"
  },
  "Agile Planning Tools": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Planning Tools",
    "calculated_at": "2025-08-07T11:25:43",
    "ai_confidence": 18.02,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 2.3,
    "ai_intent": 2.7,
    "ai_audience": 4.2,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses entirely on branching strategies for version control (e.g., GitHub Flow, Release Flow), emphasizing simplicity and speed. While these practices can indirectly affect Agile workflows, the main topic is not Agile Planning Tools or their features. There are no explicit mentions of Agile Planning Tools or related methodologies, no discussion on backlog or sprint planning, and no references to tools like Jira, Trello, or Asana. The audience may overlap with Agile practitioners, but the subject matter does not align with the category's defined scope.",
    "reasoning_summary": "The content is about version control branching strategies, not Agile Planning Tools. It does not discuss planning, backlog management, or relevant tooling, so fit to the assigned category is minimal and indirect.",
    "level": "Ignored"
  },
  "Coaching": {
    "resourceId": "qwciWeifRRf",
    "category": "Coaching",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 12.95,
    "ai_mentions": 0.2,
    "ai_alignment": 1.0,
    "ai_depth": 1.2,
    "ai_intent": 2.0,
    "ai_audience": 5.0,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on simplifying branching strategies (GitHub Flow, Release Flow) for better engineering outcomes. There is no explicit or implicit mention of coaching, facilitation, or related practices. The primary intent is technical guidance about branching, not team development or coaching. While it targets engineering teams (some overlap with coaching audiences), all other dimensions show very weak alignment with the Coaching classification. No penalties needed as there are no outdated practices or contrarian tone.",
    "reasoning_summary": "This piece is technical advice on branching strategy, not coaching. It doesn’t mention or explore coaching concepts, and its main focus is practical workflow improvement, not personal or team development. Thus, it’s a poor fit for the Coaching category.",
    "level": "Ignored"
  },
  "Internal Developer Platform": {
    "resourceId": "qwciWeifRRf",
    "category": "Internal Developer Platform",
    "calculated_at": "2025-08-07T11:25:43",
    "ai_confidence": 21.05,
    "ai_mentions": 0.2,
    "ai_alignment": 2.3,
    "ai_depth": 1.7,
    "ai_intent": 2.7,
    "ai_audience": 5.8,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content discusses branching strategies such as GitHub Flow and Release Flow, focusing exclusively on version control best practices and delivery speed. While it targets a technical/dev audience (partial alignment), it neither mentions Internal Developer Platforms nor discusses their architecture, purpose, or implementation. The discussion stays on branching, which is just one aspect (often a tool-level concern), without engaging with IDP concepts. There is no exploration of automation, empowerment, consistency, or broader streamlining of the SDLC as called for in the category definition. Minimal off-topic noise, but low depth and little conceptual overlap.",
    "reasoning_summary": "Content focuses on branching strategies, not Internal Developer Platforms. No direct mention or substantial thematic alignment with IDP concepts; only partial audience fit. Coverage is tool-specific, not platform or process-focused.",
    "level": "Ignored"
  },
  "Sociotechnical Systems": {
    "resourceId": "qwciWeifRRf",
    "category": "Sociotechnical Systems",
    "calculated_at": "2025-05-16T20:29:43",
    "ai_confidence": 38.15,
    "ai_mentions": 0.4,
    "ai_alignment": 3.9,
    "ai_depth": 3.5,
    "ai_intent": 5.2,
    "ai_audience": 7.7,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on branching strategies in software teams, recommending simplicity for faster delivery and lower risk. While it refers to teams and delivery flow—both relevant sociotechnical factors—it does not explicitly discuss the sociotechnical interplay, organisational structure, culture, or collaborative frameworks. There is no mention or exploration of core sociotechnical systems concepts such as organisational alignment, team dynamics, or frameworks. Its primary focus is on technical practices (branching models), with only brief nods to their relation to delivery speed and risk. Thus, the alignment and depth with the Sociotechnical Systems category are partial and indirect, led mainly by reference to engineering teams as agents of process change.",
    "reasoning_summary": "This content discusses technical practices—branching strategies—with some reference to team outcomes but lacks explicit exploration of sociotechnical concepts or interplay. Its fit with the Sociotechnical Systems category is tangential and primarily technical, so classification confidence is low.",
    "level": "Ignored"
  },
  "Continuous Improvement": {
    "resourceId": "qwciWeifRRf",
    "category": "Continuous Improvement",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 47.658,
    "ai_mentions": 1.2,
    "ai_alignment": 5.7,
    "ai_depth": 4.9,
    "ai_intent": 5.8,
    "ai_audience": 7.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 48.0,
    "reasoning": "The content discusses optimizing branching strategies for software teams, emphasizing the value of simplicity (GitHub Flow, Release Flow) to increase delivery speed and reduce risk. While this indirectly supports principles aligned with Continuous Improvement—such as reducing waste and enhancing effectiveness—continuous improvement is not directly referenced or deeply discussed. The focus is more on practical advice for engineering processes rather than ongoing reflection, adaptation, or organizational learning. Audiences interested in workflows and deployment efficiency will find relevance, but the lack of explicit mention and deeper exploration of continuous improvement practices limits confidence for this category.",
    "reasoning_summary": "The content argues for simpler branching to help teams move faster but doesn’t explicitly discuss continuous improvement or its core practices. While the message aligns partially with process enhancement, it lacks direct mention or deep exploration of continuous improvement, so relevance is moderate.",
    "level": "Tertiary"
  },
  "Transparency": {
    "resourceId": "qwciWeifRRf",
    "category": "Transparency",
    "calculated_at": "2025-08-07T09:25:43",
    "ai_confidence": 19.7,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 1.9,
    "ai_intent": 1.3,
    "ai_audience": 7.2,
    "ai_signal": 6.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on simplifying branching strategies for faster delivery and reduced risk. While clear workflows can indirectly support transparency, the article does not directly address transparency, its mechanisms, or its importance in Agile. Topics like information visibility or collaboration practices are absent. The target audience (practitioners/engineers) aligns somewhat with transparency topics, but the primary theme is workflow efficiency, not open communication or work visibility.",
    "reasoning_summary": "Content centers on branching strategies to improve delivery speed and reduce risk, not on transparency. Relates only tangentially insofar as simple workflow aids visibility, but transparency is neither a focus nor explicitly discussed.",
    "level": "Ignored"
  },
  "Common Goals": {
    "resourceId": "qwciWeifRRf",
    "category": "Common Goals",
    "calculated_at": "2025-08-07T09:25:37",
    "ai_confidence": 28.08,
    "ai_mentions": 0.5,
    "ai_alignment": 3.9,
    "ai_depth": 2.2,
    "ai_intent": 3.4,
    "ai_audience": 7.3,
    "ai_signal": 5.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on simplifying branching strategies (GitHub Flow, Release Flow) to improve team performance. While these practices can enable alignment and delivery, there is no direct or in-depth connection to the concept of Common Goals, nor explicit references to strategic alignment, shared objectives, or frameworks like OKRs. The primary audience (technical teams/engineers) partially aligns, but the content remains narrowly focused on version control tactics rather than organisational goal alignment. No penalties apply as it's up-to-date, not critical or satirical.",
    "reasoning_summary": "The content mainly discusses branching strategies, with only an implicit link to team alignment and value delivery. It does not directly address common goals or organisational alignment, making its connection to the category weak and mostly tangential.",
    "level": "Ignored"
  },
  "Company as a Product": {
    "resourceId": "qwciWeifRRf",
    "category": "Company as a Product",
    "calculated_at": "2025-10-01T16:59:37",
    "ai_confidence": 12.85,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 3.5,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content strictly discusses version control branching strategies (GitHub Flow, Release Flow) at the team/engineering process level, with no reference to Company as a Product concepts. There are no mentions of organisational design, customer-centricity, or company-wide continuous improvement. The audience is likely engineering practitioners rather than company leaders or strategists. No penalties applied, as the content is not outdated or satirical. The alignment and relevance to the category are very low; any conceptual overlap is indirect (e.g., reducing complexity may help teams deliver value, but this is not framed as CaaP).",
    "reasoning_summary": "This content focuses on team-level source control strategies, not organisational design or treating a company as a product. No substantive fit with the CaaP category. Only minor, indirect relevance.",
    "level": "Ignored"
  },
  "Scrum Master": {
    "resourceId": "qwciWeifRRf",
    "category": "Scrum Master",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 7.55,
    "ai_mentions": 0.0,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.6,
    "ai_audience": 2.1,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses exclusively on branching strategies and version control in engineering teams, with no mention of Scrum, the Scrum Master, or related accountabilities. There is no discussion of responsibilities, systemic impact, or organizational change related to the Scrum Master role. The main audience appears to be technical practitioners (developers/engineers) rather than Scrum Masters or those interested in the Scrum Master accountability. As such, the content does not align with the intent, themes, or required depth for the 'Scrum Master' category.",
    "reasoning_summary": "This content is about simplifying branching strategies for engineering teams and does not reference or align with the Scrum Master role or accountability. It is focused on version control practices, not Scrum team effectiveness or responsibilities. This makes it a poor fit for the category.",
    "level": "Ignored"
  },
  "Product Discovery": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Discovery",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 11.65,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 1.6,
    "ai_audience": 3.2,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content discusses branching strategies (GitHub Flow, Release Flow), focusing on delivery speed, minimizing risk, and engineering best practices. It does not reference or engage with product discovery concepts: no mention of customer needs, user research, idea validation, MVPs, or methodology frameworks central to discovery. The audience is engineers, not product strategy or discovery roles. While it mentions 'deliver value' conceptually, the depth and focus remain entirely on technical workflow optimization, not discovery.",
    "reasoning_summary": "This content centers on source control practices for engineers, not on exploring or validating customer needs or features; it's about workflow efficiency, not product discovery.",
    "level": "Ignored"
  },
  "Continuous Integration": {
    "resourceId": "qwciWeifRRf",
    "category": "Continuous Integration",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 64.85,
    "ai_mentions": 2.4,
    "ai_alignment": 7.6,
    "ai_depth": 6.8,
    "ai_intent": 6.5,
    "ai_audience": 7.2,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 65.0,
    "reasoning": "The content focuses on simplifying branching strategies and promotes flows (GitHub Flow, Release Flow) aligned with CI principles: short-lived branches, fast merges, immediate deployment, and reducing integration risk. However, it doesn't directly reference 'Continuous Integration' or provide details about its processes, tools, or automated testing, leading to low direct mention and moderate depth scores. The intent and audience fit practitioners interested in streamlining code integration and delivery, though discussion of CI is implicit, not explicit.",
    "reasoning_summary": "This content advocates best practices around branching, which supports Continuous Integration by promoting rapid integration and delivery. While it doesn't explicitly mention CI or cover technical processes in depth, its guidance is conceptually aligned and of practical relevance to teams focused on CI principles.",
    "level": "Secondary"
  },
  "Metrics and Learning": {
    "resourceId": "qwciWeifRRf",
    "category": "Metrics and Learning",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 31.8,
    "ai_mentions": 0.9,
    "ai_alignment": 3.6,
    "ai_depth": 3.1,
    "ai_intent": 3.4,
    "ai_audience": 6.2,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 32.0,
    "reasoning": "The content centers on branching strategies for teams, especially promoting simplified approaches like GitHub Flow and Release Flow. While these concepts are adjacent to Agile and DevOps, the focus is on workflow efficiency rather than the collection, analysis, or use of metrics or structured feedback loops. There are no explicit mentions of metrics, data-driven improvement methods, or learning frameworks. The intent is to advocate for operational simplicity, not evidence-based improvement, which is at the heart of the 'Metrics and Learning' category. The audience (engineering teams) has some alignment, and the content is on topic for those concerned with workflow, but it does not discuss measurement, learning cycles, or continuous improvement using data.",
    "reasoning_summary": "This content promotes streamlined branching for faster delivery, focusing on operational efficiency—not on measurement, learning, or data-driven improvement. It’s relevant to DevOps teams but doesn’t address metrics or feedback cycles, so alignment to 'Metrics and Learning' is limited.",
    "level": "Ignored"
  },
  "One Engineering System": {
    "resourceId": "qwciWeifRRf",
    "category": "One Engineering System",
    "calculated_at": "2025-09-05T03:28:53",
    "ai_confidence": 34.42,
    "ai_mentions": 0.0,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 4.2,
    "ai_audience": 8.6,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on simplifying branching strategies with GitHub Flow and Release Flow. While this topic is relevant to engineering efficiency and best practices, there are no direct mentions of One Engineering System (1ES), and there is no discussion of general system standardisation, integration, or 1ES-specific principles, components, or adoption challenges. The ideas are conceptually adjacent but do not clearly align with the comprehensive integration and unification goals of 1ES. The audience (engineering teams) does align, but the overall fit is partial and at best tangential.",
    "reasoning_summary": "Discusses streamlined branching (GitHub Flow, Release Flow)—adjacent to 1ES themes but never mentions or substantially aligns with 1ES integration or unification. Fit is partial and mostly out-of-category.",
    "level": "Ignored"
  },
  "Team Collaboration": {
    "resourceId": "qwciWeifRRf",
    "category": "Team Collaboration",
    "calculated_at": "2025-10-01T16:59:39",
    "ai_confidence": 47.35,
    "ai_mentions": 3.2,
    "ai_alignment": 5.7,
    "ai_depth": 4.6,
    "ai_intent": 5.8,
    "ai_audience": 8.0,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 47.0,
    "reasoning": "The content addresses how teams can simplify branching strategies to improve delivery speed and reduce risk. While 'teams' are mentioned, the primary focus is on technical version control practices rather than collaboration dynamics, communication, or shared ownership per Agile/DevOps definitions. It does not deeply discuss team dynamics or interaction but assumes process simplicity benefits team outcomes. No outdated practices or negative tone are present. The target audience is engineering teams, aligning moderately, but the conceptual fit with 'Team Collaboration' is only partial.",
    "reasoning_summary": "The content is about teams adopting simple branching strategies, which indirectly supports collaboration, but doesn't explicitly address team communication, trust, or Agile dynamics. The fit to 'Team Collaboration' is partial and primarily implied.",
    "level": "Tertiary"
  },
  "Artificial Intelligence": {
    "resourceId": "qwciWeifRRf",
    "category": "Artificial Intelligence",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 4.9,
    "ai_mentions": 0.1,
    "ai_alignment": 0.2,
    "ai_depth": 0.3,
    "ai_intent": 0.2,
    "ai_audience": 4.8,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 5.0,
    "reasoning": "The content discusses branching strategies in version control systems, highlighting GitHub Flow and Release Flow. There is no mention of Artificial Intelligence, nor any reference to its application in Agile, DevOps, or software development practices as per the category definition. Its focus is process simplicity and workflow efficiency, not AI integration or enhancement. Audience and relevance scores are slightly higher only because the target audience overlaps marginally with those who might also be interested in AI topics, but there is no substantive overlap, mention, or use case relating to AI.",
    "reasoning_summary": "This content does not discuss AI or its application in Agile, DevOps, or software development. It strictly focuses on branching strategies, so it barely fits the AI category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Modern Source Control": {
    "resourceId": "qwciWeifRRf",
    "category": "Modern Source Control",
    "calculated_at": "2025-10-01T16:59:44",
    "ai_confidence": 93.21,
    "ai_mentions": 7.9,
    "ai_alignment": 9.7,
    "ai_depth": 8.4,
    "ai_intent": 9.5,
    "ai_audience": 9.1,
    "ai_signal": 9.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content directly addresses modern source control by discussing branching strategies (GitHub Flow, Release Flow), emphasizing simplicity for faster delivery. It aligns strongly with best practices, collaboration, and version control methodology. The write-up includes actionable recommendations against complex models, with detailed comments on practical approaches, audience fit (engineering teams), and high focus with minimal off-topic noise. No outdated or contradictory references detected.",
    "reasoning_summary": "Content fits the category well: it focuses on modern version control branching strategies, discusses best practices, and targets practitioners. The topic, purpose, and audience align closely with 'Modern Source Control'.",
    "level": "Primary"
  },
  "Team Performance": {
    "resourceId": "qwciWeifRRf",
    "category": "Team Performance",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 84.74,
    "ai_mentions": 7.6,
    "ai_alignment": 9.4,
    "ai_depth": 8.6,
    "ai_intent": 8.3,
    "ai_audience": 8.0,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 85.0,
    "reasoning": "The content explicitly references 'teams' and positions effective branching strategies as a way for teams to improve delivery speed, risk, and consistency—key components of team performance as defined. Mentions of 'flow,' 'fast delivery,' and avoiding complexity directly align with systemic metrics and delivery outcomes. The discussion is specific and thorough about how branching practices affect a team's ability to produce results. The primary audience is engineering teams and technical leads, matching the audience for team performance guidance. There is minimal off-topic material, maintaining high relevance and focus throughout. There are no signs of outdated practices or negative tone; best practices cited are current. No penalties applied.",
    "reasoning_summary": "This content directly addresses how branching strategies impact team delivery and performance. It aligns with the category by focusing on systems and delivery outcomes, provides actionable insights, and targets technical team audiences. Its focus and practical advice make it a strong fit for 'Team Performance.'",
    "level": "Primary"
  },
  "First Principal": {
    "resourceId": "qwciWeifRRf",
    "category": "First Principal",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 23.68,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 3.8,
    "ai_audience": 7.1,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on advocating for simple branching strategies (like GitHub Flow and Release Flow) to improve team delivery speed and risk reduction. However, it does not mention first principles directly or discuss immutable, foundational truths underlying the recommended practices. The arguments are contextual and advisory, not articulated as non-negotiable constraints. The depth is significantly limited to best practices, not first principles identification or analysis. While the audience and focus on software delivery are in-scope for Lean-Agile practitioners, the absence of explicit or implicit framing in terms of first principles results in low marks for direct mentions, conceptual alignment, and depth. No penalties are warranted, as the content is current and not critical or satirical in tone.",
    "reasoning_summary": "This piece offers practical advice on branching strategy but doesn't discuss or identify first principles. Its focus is on best practices rather than foundational, immutable truths, resulting in a low fit for the 'First Principal' category.",
    "level": "Ignored"
  },
  "Cross Functional Teams": {
    "resourceId": "qwciWeifRRf",
    "category": "Cross Functional Teams",
    "calculated_at": "2025-05-16T20:29:45",
    "ai_confidence": 24.43,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 1.7,
    "ai_intent": 2.1,
    "ai_audience": 8.4,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content focuses on branching strategies (GitHub Flow, Release Flow) and their impact on team delivery speed and risk. There is no direct mention of cross-functional teams or discussion of their structure, collaboration, or value delivery. The intent is to streamline technical practices, not to explore Agile team design. The audience (engineering teams) marginally overlaps, but the core concepts and discussion depth do not align with the cross-functional teams category.",
    "reasoning_summary": "This content centers on version control strategies for engineering teams and does not discuss cross-functional collaboration, structure, or dynamics. It lacks alignment with the core definition of cross-functional teams and only tangentially touches topics relevant to the category.",
    "level": "Ignored"
  },
  "Backlog Refinement": {
    "resourceId": "qwciWeifRRf",
    "category": "Backlog Refinement",
    "calculated_at": "2025-10-01T16:59:26",
    "ai_confidence": 9.7,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.0,
    "ai_intent": 2.1,
    "ai_audience": 2.5,
    "ai_signal": 2.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses exclusively on branching strategies within version control and software delivery pipelines, not backlog refinement. It uses engineering and DevOps terminology, discusses GitHub Flow, Release Flow, and only alludes to delivery efficiency—not backlog clarity, prioritization, or refinement. No direct mention of backlog, refinement, user stories, estimation, or roles within Scrum or Agile. This serves a software engineering/devops audience, but does not intentionally overlap with the backlog refinement category's purpose or themes.",
    "reasoning_summary": "The content centers on branching strategies and delivery flow, not backlog refinement. No overlap with key topics, intent, or principles of backlog refinement as defined.",
    "level": "Ignored"
  },
  "Miscellaneous": {
    "resourceId": "qwciWeifRRf",
    "category": "Miscellaneous",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 21.775,
    "ai_mentions": 0.3,
    "ai_alignment": 2.8,
    "ai_depth": 2.2,
    "ai_intent": 3.1,
    "ai_audience": 5.2,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content focuses on technical guidance for version control branching strategies, explicitly referencing GitHub Flow and Release Flow, which are established practices. It does not reference Agile, Scrum, DevOps, Lean, or EBM but does offer actionable insight aligned with technical best practices and delivery principles. This means it does not fit the 'Miscellaneous' category, which excludes actionable technical advice tied to recognized practices. Low scores for mentions, alignment, and depth reflect the disconnect from category intent.",
    "reasoning_summary": "This content centers around specific, actionable technical advice—GitHub Flow and Release Flow—making it a poor fit for the Miscellaneous category, which excludes recognized practices and technical guidance. Its purpose, depth, and alignment remain outside this catch-all designation.",
    "level": "Ignored"
  },
  "Technical Mastery": {
    "resourceId": "qwciWeifRRf",
    "category": "Technical Mastery",
    "calculated_at": "2025-10-01T16:59:35",
    "ai_confidence": 85.68,
    "ai_mentions": 4.6,
    "ai_alignment": 9.1,
    "ai_depth": 8.4,
    "ai_intent": 8.7,
    "ai_audience": 8.5,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content is centrally focused on best practices in version control—a key aspect of technical mastery. Explicit techniques (GitHub Flow, Release Flow) are discussed, with clear rationale connecting these to delivery speed, risk reduction, and software quality. There are few surface-level mentions; instead, the concepts are articulated (e.g., avoiding long-lived branches, continuous deployment) to underscore engineering excellence and codebase health. While 'technical mastery' isn't named, the advice directly aligns with the principles of software craftsmanship and engineering practice improvement. The target audience is engineers/technical teams. Some minor generalities prevent a perfect depth score, as there could be more exploration of edge cases or advanced examples, but the focus is high throughout with almost no unrelated filler.",
    "reasoning_summary": "The content strongly fits Technical Mastery, focusing on best engineering practices in branching for code quality and delivery. Intent, alignment, and audience are a strong match. Some surface simplicity limits depth, but the core fit is clear.",
    "level": "Primary"
  },
  "Scrum Values": {
    "resourceId": "qwciWeifRRf",
    "category": "Scrum Values",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 7.1,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 0.8,
    "ai_intent": 1.0,
    "ai_audience": 2.1,
    "ai_signal": 1.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content centers entirely on software branching strategies, specifically promoting simpler practices like GitHub Flow and Release Flow. There are no explicit or implicit references to the five Scrum Values, nor does the text discuss team dynamics, cultural values, or the guiding principles of Scrum. Although it mentions 'focus' simplistically, this is in the context of engineering workflow, not as a Scrum Value or cultural enabler. The audience is technical practitioners, but the discussion does not address values-based collaboration, commitment, courage, openness, or respect. Thus, the confidence score is extremely low as direct relevance to 'Scrum Values' is virtually absent.",
    "reasoning_summary": "The text discusses technical branching strategies, not Scrum Values. It lacks references to Scrum principles or team culture and is aimed at engineering practices, making it a poor fit for the Scrum Values category.",
    "level": "Ignored"
  },
  "Agile Product Operating Model": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Product Operating Model",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 36.7,
    "ai_mentions": 0.3,
    "ai_alignment": 3.7,
    "ai_depth": 3.5,
    "ai_intent": 4.5,
    "ai_audience": 6.0,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content discusses the value of simple branching strategies like GitHub Flow and Release Flow for improving delivery speed and reducing risk. While it aligns with agile principles such as flow, simplicity, and rapid delivery, it does not directly mention or deeply explore the Agile Product Operating Model (APOM), its broader organizational context, nor product management integration, governance, or structure. The focus is on engineering practices (branching strategies) rather than the product-operating framework. The intent and primary audience (engineering teams) differ from APOM's strategic, organizational perspective. There are minimal direct references, modest conceptual overlap, and limited depth specific to APOM.",
    "reasoning_summary": "While the content advocates for simplicity and fast delivery—values matching agile thinking—its focus is engineering practices (branching strategies), not the Agile Product Operating Model. It doesn't deeply discuss product-centric frameworks or organizational governance, making its alignment with APOM modest at best.",
    "level": "Ignored"
  },
  "Shift Left Strategy": {
    "resourceId": "qwciWeifRRf",
    "category": "Shift Left Strategy",
    "calculated_at": "2025-10-01T16:42:13",
    "ai_confidence": 12.65,
    "ai_mentions": 0.3,
    "ai_alignment": 1.2,
    "ai_depth": 1.5,
    "ai_intent": 1.6,
    "ai_audience": 5.2,
    "ai_signal": 5.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content discusses simplifying branching strategies to improve delivery speed and reduce risk, but does not directly reference Shift Left concepts (early testing, security, or compliance integration). The alignment is minimal, as the focus is on version control process simplification rather than proactive defect prevention or early lifecycle interventions. There are no explicit mentions or deep exploration of Shift Left Strategy techniques or principles. The audience is partially aligned (technical/practitioner), and the topic is focused, but it's not relevant to Shift Left as defined.",
    "reasoning_summary": "Content focuses on simplifying branching strategies for delivery speed, not shift-left practices. There is no discussion of early testing or proactive integration in the SDLC. Only a very marginal fit to the Shift Left Strategy category.",
    "level": "Ignored"
  },
  "Working Software": {
    "resourceId": "qwciWeifRRf",
    "category": "Working Software",
    "calculated_at": "2025-10-01T16:59:42",
    "ai_confidence": 37.65,
    "ai_mentions": 1.2,
    "ai_alignment": 3.6,
    "ai_depth": 2.9,
    "ai_intent": 3.3,
    "ai_audience": 4.1,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content focuses on simplifying branching strategies (e.g., GitHub Flow and Release Flow) to increase delivery speed and reduce risk, which is tangentially related to producing working software in Agile, but does not directly discuss working software as an artifact or its core characteristics. There are no explicit mentions of 'working software,' nor in-depth exploration of its definition, measurement, or alignment with customer needs. Instead, it focuses almost entirely on process (branching models), only inferring that they help deliver value faster—without describing the nature of the delivered software or how it qualifies as working software in Scrum/Agile contexts. Thus, there is weak alignment and shallow depth.",
    "reasoning_summary": "Content focuses on branching strategies to accelerate delivery, which is only indirectly related to working software as an artifact. It does not discuss working software directly or in depth, leading to a weak category fit.",
    "level": "Ignored"
  },
  "Digital Transformation": {
    "resourceId": "qwciWeifRRf",
    "category": "Digital Transformation",
    "calculated_at": "2025-10-01T16:59:33",
    "ai_confidence": 29.49,
    "ai_mentions": 0.3,
    "ai_alignment": 3.8,
    "ai_depth": 2.7,
    "ai_intent": 3.1,
    "ai_audience": 8.9,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 29.0,
    "reasoning": "The content focuses on optimizing branching strategies (GitHub Flow, Release Flow) to streamline software delivery. While this promotes operational efficiency and flow—core goals of digital transformation—the discussion is narrowly technical and tool-focused, without addressing organizational culture, strategic technology adoption, or broader digital transformation initiatives. No explicit mention of digital transformation or its frameworks is present, and the main thrust is on team-level engineering practices. The audience (engineering teams) partially overlaps, but the depth on transformation themes is minimal.",
    "reasoning_summary": "The content emphasizes efficient branching strategies in software teams, indirectly supporting agility, but lacks explicit or strategic discussion of digital transformation, making it only a partial fit for this category.",
    "level": "Ignored"
  },
  "Trend Analysis": {
    "resourceId": "qwciWeifRRf",
    "category": "Trend Analysis",
    "calculated_at": "2025-10-01T16:59:31",
    "ai_confidence": 15.75,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 1.9,
    "ai_intent": 2.1,
    "ai_audience": 4.1,
    "ai_signal": 4.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on the advantages of simple branching strategies (GitHub Flow, Release Flow) but does not discuss trend identification, emerging patterns, or data-driven shifts in Agile, DevOps, or business agility. No mention of trend analysis tools, case studies, or strategic decision-making informed by shifting practices. The audience (engineering teams) partially overlaps, but the primary message is 'best practices' advocacy, not trend analysis.",
    "reasoning_summary": "The content advocates for simple branching models in DevOps but does not analyze trends, patterns, or strategic impacts as defined by 'Trend Analysis'. Fit is weak—focus is on practical advice, not trend identification or evaluation.",
    "level": "Ignored"
  },
  "Organisational Psychology": {
    "resourceId": "qwciWeifRRf",
    "category": "Organisational Psychology",
    "calculated_at": "2025-10-01T16:59:46",
    "ai_confidence": 7.6,
    "ai_mentions": 0.0,
    "ai_alignment": 1.2,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 2.1,
    "ai_signal": 2.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content strictly discusses branching strategies (GitHub Flow, Release Flow), which are software engineering and DevOps practices, not psychological or behavioural principles. There is no explicit or implicit reference to motivation, leadership, group dynamics, or any other organisational psychology concept. The main purpose is technical process optimisation, targeting engineering practitioners interested in best practices for version control. No mention or alignment with psychological theories or organisational behaviour. Thus, the confidence for this category is extremely low.",
    "reasoning_summary": "This content focuses only on technical branching practices and process flow, without any discussion of organisational psychology principles, themes, or audiences. It does not fit the category.",
    "level": "Ignored"
  },
  "Hybrid Agile": {
    "resourceId": "qwciWeifRRf",
    "category": "Hybrid Agile",
    "calculated_at": "2025-10-01T16:59:48",
    "ai_confidence": 11.46,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.8,
    "ai_intent": 1.3,
    "ai_audience": 2.9,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content is focused on branching strategies (GitHub Flow, Release Flow) and the value of simplicity in version control to support fast delivery. There is no mention or critical examination of Hybrid Agile, nor does it discuss blending of traditional and agile methods, their pitfalls, or hybrid dysfunctions. The target audience—technical practitioners working with version control—may overlap partially with those interested in Hybrid Agile, but the topic and intent are outside the category scope.",
    "reasoning_summary": "This content does not meaningfully relate to Hybrid Agile; it focuses on simple git branching, not on traditional/agile method integration or their dysfunctional blends.",
    "level": "Ignored"
  },
  "Employee Engagement": {
    "resourceId": "qwciWeifRRf",
    "category": "Employee Engagement",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 12.25,
    "ai_mentions": 0.4,
    "ai_alignment": 1.5,
    "ai_depth": 1.7,
    "ai_intent": 1.1,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on software branching strategies like GitHub Flow and Release Flow, explaining how simpler approaches improve delivery speed and reduce risk. There is no direct or explicit mention of employee engagement, nor are employee motivation, commitment, or team satisfaction discussed. Any indirect connection to engagement is minimal—improved delivery might contribute to satisfaction, but this is not the article's focus. The target audience is technical (engineers), not HR or leadership concerned with engagement. Most of the content is technical process-centric and off the core topic of the category definition.",
    "reasoning_summary": "This content centers on technical software branching practices with no direct link to employee engagement. It provides process advice for engineering efficiency, not strategies for motivation or commitment, so it fits poorly in the 'Employee Engagement' category.",
    "level": "Ignored"
  },
  "Test Driven Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Test Driven Development",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 8.38,
    "ai_mentions": 0.2,
    "ai_alignment": 1.6,
    "ai_depth": 1.4,
    "ai_intent": 1.2,
    "ai_audience": 2.6,
    "ai_signal": 1.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content discusses branching strategies (GitHub Flow, Release Flow) to optimize team velocity and reduce version control risk. There is no mention of Test Driven Development (TDD), nor any exploration of TDD principles, cycles, or tools. Its main focus is on source control practices, not test-first design. The content is tangentially related to developer workflow efficiency but has no substantive link to TDD. Scores reflect minimal overlap with the TDD category.",
    "reasoning_summary": "This content is about streamlining branching strategies in version control, not about Test Driven Development. It doesn't mention TDD concepts or practices and doesn't address the target audience or intent of the TDD category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Platform Engineering": {
    "resourceId": "qwciWeifRRf",
    "category": "Platform Engineering",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 17.65,
    "ai_mentions": 0.6,
    "ai_alignment": 1.3,
    "ai_depth": 0.9,
    "ai_intent": 1.1,
    "ai_audience": 7.7,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content discusses branching strategies for version control, highlighting the benefits of keeping Git flow simple. While relevant to general engineering productivity, it does not mention platform engineering, internal developer platforms, or the creation of self-service tools. Neither concepts nor intent align with core principles of platform engineering, as it lacks discussion of automation or platform-focused infrastructure. The audience and signal are moderately relevant, since engineers (including platform engineers) care about workflow, but overall relevance is peripheral.",
    "reasoning_summary": "This content focuses on version control strategies, not platform engineering principles or platforms. It doesn't mention or explore platform engineering concepts, so its confidence for the category is low—even though it speaks to technical audiences.",
    "level": "Ignored"
  },
  "Lean Thinking": {
    "resourceId": "qwciWeifRRf",
    "category": "Lean Thinking",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 57.58,
    "ai_mentions": 1.4,
    "ai_alignment": 6.9,
    "ai_depth": 5.8,
    "ai_intent": 6.4,
    "ai_audience": 8.2,
    "ai_signal": 8.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "Direct mentions of 'Lean Thinking' or Lean principles are absent, resulting in a low mentions score. The conceptual alignment score is moderate because the focus on 'flow,' reduction of waste (unnecessary branching), and delivering value echoes Lean principles, particularly the focus on 'flow' and value delivery. However, it does not explicitly reference core Lean terminology (e.g., Muda, Kaizen, Value Stream Mapping) or tools. Depth is moderate; the content explains why simplicity matters but does not explore wider Lean frameworks. Intent is generally in line with Lean Thinking, supporting efficiency and waste reduction. Audience and signal-to-noise scores are high, as it is directly useful for technical teams interested in delivery optimization. No penalties are applied since there are no outdated practices or contradictory tones.",
    "reasoning_summary": "The content encourages simplicity, aiming for fast delivery and value, which resonates with Lean Thinking. However, it lacks explicit references to Lean and covers related concepts only at a moderate depth. Its practical tips align with Lean goals, resulting in a somewhat confident but not high classification.",
    "level": "Tertiary"
  },
  "Self Organisation": {
    "resourceId": "qwciWeifRRf",
    "category": "Self Organisation",
    "calculated_at": "2025-05-16T20:29:45",
    "ai_confidence": 28.37,
    "ai_mentions": 0.2,
    "ai_alignment": 2.4,
    "ai_depth": 2.1,
    "ai_intent": 3.3,
    "ai_audience": 7.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content centers on simplifying branching strategies (GitHub Flow, Release Flow) to deliver software faster. While this can enable autonomous team workflows, it doesn't mention or deeply explore self-organisation, its principles, or practices. There is minimal direct connection to the core themes of empowerment, accountability, or leadership in self-organising teams. The intent is purely about technical workflow efficiency, not self-organisation theory or practice.",
    "reasoning_summary": "This piece focuses on technical workflow rather than self-organisation. It lacks direct mentions or depth about self-organising teams, so its alignment with the category is weak. The connection is only tangential, through improved team efficiency, but not through discussion or principles of self-organisation.",
    "level": "Ignored"
  },
  "Competence": {
    "resourceId": "qwciWeifRRf",
    "category": "Competence",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 34.445,
    "ai_mentions": 0.2,
    "ai_alignment": 3.7,
    "ai_depth": 3.5,
    "ai_intent": 3.9,
    "ai_audience": 8.5,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content centers on the benefits of simple branching strategies (GitHub Flow, Release Flow) for speed, risk reduction, and value delivery. It highlights process simplicity and flow, but never references competence, skill-building, or capability development explicitly. The primary focus is process/tooling, not professional development or expertise. While the audience is technical (teams, engineering), competence as a category is not directly addressed beyond implication of good practices. No penalties were warranted.",
    "reasoning_summary": "This content emphasizes streamlined branching for delivery, not growth in team competence. While efficiency is supported, it lacks explicit discussion of skill, capability, or continuous learning central to the competence category.",
    "level": "Ignored"
  },
  "Decision Making": {
    "resourceId": "qwciWeifRRf",
    "category": "Decision Making",
    "calculated_at": "2025-05-16T20:29:43",
    "ai_confidence": 36.84,
    "ai_mentions": 1.3,
    "ai_alignment": 4.9,
    "ai_depth": 3.8,
    "ai_intent": 4.7,
    "ai_audience": 7.3,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 37.0,
    "reasoning": "The content advocates for simple branching strategies like GitHub Flow and Release Flow, focusing primarily on delivery speed and risk reduction. It implicitly references making process choices, but lacks direct mention of decision making, evidence-based frameworks, or deep analysis of decision methodologies. There is some conceptual overlap, as choosing branching strategy relates to team decisions, but the content is mainly operational rather than analytical or structured in an evidence-based way. The intended audience (engineering teams) may overlap with decision makers, boosting audience fit. However, depth and explicit alignment with structured decision-making are limited.",
    "reasoning_summary": "While the content advises on choosing simpler branching strategies, it only lightly touches on decision-making themes and lacks structured, evidence-based methods or frameworks specific to the category.",
    "level": "Ignored"
  },
  "Install and Configuration": {
    "resourceId": "qwciWeifRRf",
    "category": "Install and Configuration",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 14.95,
    "ai_mentions": 0.5,
    "ai_alignment": 2.2,
    "ai_depth": 1.7,
    "ai_intent": 1.9,
    "ai_audience": 5.9,
    "ai_signal": 3.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content discusses branching strategies, focusing on workflow simplicity and performance for engineering teams. It references GitHub Flow and Release Flow, but doesn't address installation, setup, environment configuration, or technical integration procedures, which are core to the Install and Configuration category. There are no direct mentions of installation or configuration. The alignment and depth scores are low, as the main theme concerns software delivery practices, not implementation specifics. The intent is informative but not within the target scope, and only moderately aligns with a technical practitioner audience.",
    "reasoning_summary": "This content focuses on branching practices and workflow efficiency rather than the technical setup or configuration of tools, offering little relevance to installation and configuration guidance. It doesn't fit the required category, so confidence is appropriately very low.",
    "level": "Ignored"
  },
  "Current Value": {
    "resourceId": "qwciWeifRRf",
    "category": "Current Value",
    "calculated_at": "2025-05-16T20:29:41",
    "ai_confidence": 34.29,
    "ai_mentions": 1.2,
    "ai_alignment": 4.4,
    "ai_depth": 2.1,
    "ai_intent": 4.5,
    "ai_audience": 6.0,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content focuses on optimizing branching strategies for software teams, arguing that simplicity increases delivery speed and consistency. While it mentions delivering value, it does so in the context of workflow efficiency, not in the explicit Evidence-Based Management sense of Current Value. It does not discuss measurement, customer satisfaction, or real-time value assessment key to Current Value. No penalties applied, as the content is current and the tone is constructive.",
    "reasoning_summary": "This content emphasizes simplified branching strategies for faster, lower-risk delivery, linking to consistent value delivery but not explicitly to Evidence-Based Management’s Current Value concepts. There’s minimal discussion of actual value measurement, so confidence in the fit is moderate to low.",
    "level": "Ignored"
  },
  "Customer Satisfaction": {
    "resourceId": "qwciWeifRRf",
    "category": "Customer Satisfaction",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 19.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.5,
    "ai_depth": 1.7,
    "ai_intent": 2.5,
    "ai_audience": 6.4,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "Direct mentions of customer satisfaction are absent; the focus is on version control best practices (branching). While improved delivery could indirectly affect customer happiness, the content doesn't discuss customer feedback, measurement, engagement strategies, or relevant Agile/DevOps frameworks. Its main audience is technical (engineers), and though the message is crisp and relevant to its topic, it doesn't explore or align with customer satisfaction as defined.",
    "reasoning_summary": "This content focuses on simplifying branching strategies to enhance engineering flow, not on measuring or enhancing customer satisfaction. It lacks relevant discussion or terminology aligned with customer satisfaction practices, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Project Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Project Management",
    "calculated_at": "2025-05-16T20:29:45",
    "ai_confidence": 50.05,
    "ai_mentions": 1.15,
    "ai_alignment": 5.8,
    "ai_depth": 3.2,
    "ai_intent": 4.5,
    "ai_audience": 6.1,
    "ai_signal": 5.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 50.0,
    "reasoning": "The content focuses on version control strategies, particularly branching (GitHub Flow, Release Flow), emphasizing simplicity for faster delivery and reduced risk. While efficient DevOps processes impact project outcomes, the discussion does not mention project management directly, nor does it address foundational principles, methodologies, or phases. It targets engineering teams, not project managers, with practical technical advice related to workflow optimization, not classical or agile project management concepts.",
    "reasoning_summary": "This content addresses workflow and version control for engineering teams, not broader project management practices or methodologies. Its relevance is only tangential, as process efficiency may affect delivery but doesn't encompass core project management topics.",
    "level": "Tertiary"
  },
  "Agile Frameworks": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Frameworks",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 20.37,
    "ai_mentions": 0.8,
    "ai_alignment": 2.7,
    "ai_depth": 2.8,
    "ai_intent": 2.9,
    "ai_audience": 6.2,
    "ai_signal": 4.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses exclusively on branching strategies in version control, highlighting simpler models (GitHub Flow, Release Flow) for improved delivery and risk reduction. While this aligns with some Agile principles (flow, value delivery), it does not explicitly mention, analyze, or explore Agile frameworks themselves, their implementation, or their comparative role. There are no direct references to Scrum, Kanban, XP, Lean, or the Agile Manifesto. The content targets engineering teams interested in development practices, which can overlap with an Agile audience, but it lacks the depth, explicit linkage, or intent expected for inclusion under the 'Agile Frameworks' category. Scores are low but not zero due to indirect conceptual overlap regarding continuous delivery and reducing waste.",
    "reasoning_summary": "This content critiques branching complexity and promotes delivery flow, aligning loosely with Agile values but without direct reference to Agile frameworks or their principles. It targets development teams but lacks explicit discussion of the frameworks themselves—offering only indirect relevance.",
    "level": "Ignored"
  },
  "Social Technologies": {
    "resourceId": "qwciWeifRRf",
    "category": "Social Technologies",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 51.05,
    "ai_mentions": 1.2,
    "ai_alignment": 6.9,
    "ai_depth": 5.8,
    "ai_intent": 6.3,
    "ai_audience": 7.4,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 51.0,
    "reasoning": "This content focuses mainly on technical practices (branching strategies), emphasizing simplicity for value delivery and reduced risk. While it touches on outcomes like team speed, value, and reduced friction (indirectly referencing social/organizational benefits), it does not explicitly engage with social technologies’ frameworks such as self-organisation, collaboration techniques, or emergent problem-solving. The main audience aligns with practitioners, and there is little off-topic content. However, depth and explicit connection to Social Technologies are limited.",
    "reasoning_summary": "The content advocates simplified branching for faster delivery and less risk, with clear practitioner relevance, but offers minimal explicit connection to Social Technologies frameworks. It’s moderately aligned but doesn’t deeply explore social or collaborative dimensions, yielding a mid-level confidence score.",
    "level": "Tertiary"
  },
  "Product Strategy": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Strategy",
    "calculated_at": "2025-05-16T20:29:42",
    "ai_confidence": 14.28,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 1.4,
    "ai_intent": 1.2,
    "ai_audience": 6.0,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content directly addresses technical branching strategies and workflow optimization, with a focus on delivery speed and risk reduction through Git workflow simplicity. While it provides useful advice for engineering teams, it does not mention or engage with product strategy topics such as vision, roadmapping, strategic planning, or market alignment. Its alignment, depth, and intent are concentrated on engineering efficiency and workflow rather than strategic product direction. Audience fit is moderate as practitioners who design workflows may be involved in broader strategy decisions, but the overall noise-to-signal favors engineering practice over product strategy.",
    "reasoning_summary": "This content is centered on efficient engineering practices, specifically Git branching strategies for faster delivery, rather than on product vision, roadmaps, or market strategy. It does not meaningfully address product strategy topics and only tangentially overlaps with broader strategic concerns.",
    "level": "Ignored"
  },
  "Product Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Development",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 75.62,
    "ai_mentions": 2.9,
    "ai_alignment": 8.2,
    "ai_depth": 7.3,
    "ai_intent": 8.5,
    "ai_audience": 6.8,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 76.0,
    "reasoning": "The content addresses how simplifying branching strategies aids faster delivery, risk reduction, and consistent value—aligning with principles of product development such as flow, continuous improvement, and delivery optimization. While it doesn't explicitly mention 'Product Development,' its themes (risk management, delivery velocity, iterative release) match category objectives. The discussion is focused but technical, with modest direct references and some assumptions about engineering practices rather than wider product strategy.",
    "reasoning_summary": "This piece focuses on how branching strategies can impact delivery speed and risk, relating to core product development practices. It's tailored for engineering teams, supporting iterative release and faster value delivery, but doesn't fully engage with the broader strategic or discovery aspects of product development.",
    "level": "Secondary"
  },
  "Sensemaking": {
    "resourceId": "qwciWeifRRf",
    "category": "Sensemaking",
    "calculated_at": "2025-05-16T20:29:44",
    "ai_confidence": 17.44,
    "ai_mentions": 0.45,
    "ai_alignment": 2.2,
    "ai_depth": 2.5,
    "ai_intent": 2.75,
    "ai_audience": 4.05,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on simplifying technical branching strategies to improve software delivery. There is no direct mention of sensemaking or exploration of interpreting complex environments for decision-making. While simplicity and complexity are briefly touched upon, they refer only to version control practices and not conceptual or organisational sensemaking. The audience is more technical, and the content is concise, with little to support organisational complexity interpretation, frameworks, or leadership in sensemaking.",
    "reasoning_summary": "This content addresses the complexity of version control practices but doesn’t engage with organisational sensemaking or decision-making frameworks. Its focus remains technical and process-oriented rather than aligned with the broader sensemaking category.",
    "level": "Ignored"
  },
  "Cell Structure Design": {
    "resourceId": "qwciWeifRRf",
    "category": "Cell Structure Design",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 10.24,
    "ai_mentions": 0.1,
    "ai_alignment": 0.8,
    "ai_depth": 0.7,
    "ai_intent": 0.8,
    "ai_audience": 1.3,
    "ai_signal": 0.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content focuses solely on software branching strategies (GitHub Flow, Release Flow) to improve engineering team delivery speed and reduce risk. No direct or indirect mention of Cell Structure Design, nor of Beta Codex, decentralisation, autonomous cells, or relevant organisational design models. There is a minor, implicit theme of simplicity and team autonomy in process, but none of the structural, conceptual, or intent-level elements match the Cell Structure Design category.",
    "reasoning_summary": "This content is exclusively about software branching strategies, lacking any discussion of Cell Structure Design or related organisational principles. It does not fit the category, as it neither references nor aligns with Beta Codex or cell-based decentralised structures.",
    "level": "Ignored"
  },
  "Artifact": {
    "resourceId": "qwciWeifRRf",
    "category": "Artifact",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 10.85,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.4,
    "ai_intent": 0.3,
    "ai_audience": 5.2,
    "ai_signal": 4.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses on branching strategies in version control, advocating for simpler flows like GitHub Flow and Release Flow. There is no explicit mention or discussion of artifacts, their structure, or their role in Agile/Scrum/Lean contexts. The themes revolve around delivery and code management, not formal representations of work, and do not align with the definition or key topics of the Artifact category. The audience may overlap with practitioners who use artifacts, but artifact-related content is not addressed.",
    "reasoning_summary": "This content discusses version control strategies, not artifacts or their management. It lacks direct references to Agile/Scrum artifacts or relevant concepts, so it does not fit the 'Artifact' category.",
    "level": "Ignored"
  },
  "Agile Strategy": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Strategy",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 45.66,
    "ai_mentions": 0.6,
    "ai_alignment": 4.0,
    "ai_depth": 3.9,
    "ai_intent": 5.4,
    "ai_audience": 6.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content critiques complex branching strategies and advocates for simpler ones like GitHub Flow and Release Flow to enhance delivery speed and consistency. While it implicitly references Agile principles like continuous delivery and value, it never explicitly discusses Agile strategy, organizational alignment, or integration into business strategy. The focus is on specific engineering practices, relevant to teams interested in delivery efficiency, but not at the strategic planning or leadership level. The audience is more technical than strategic. No outdated or contradictory statements were identified. Overall, the content partially overlaps with Agile themes but stays at a technical-process level, making the alignment with 'Agile Strategy' only moderate.",
    "reasoning_summary": "The content discusses efficient branching strategies that help teams deliver value quickly—a core Agile value—but lacks explicit strategy-level discussion or organizational focus. Its alignment with 'Agile Strategy' is moderate, as it mainly targets technical practices rather than strategic integration.",
    "level": "Tertiary"
  },
  "GitHub": {
    "resourceId": "qwciWeifRRf",
    "category": "GitHub",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 86.25,
    "ai_mentions": 8.7,
    "ai_alignment": 9.2,
    "ai_depth": 8.9,
    "ai_intent": 9.4,
    "ai_audience": 8.3,
    "ai_signal": 7.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content explicitly names 'GitHub Flow' and contrasts it with 'Release Flow,' discussing them as models for effective branching, an essential GitHub practice. The main ideas—streamlining branching and reducing risk through GitHub-aligned methodologies—closely match the category. Depth is substantial, providing actionable advice (e.g., using short-lived branches, continuous deployment). The intent is educative and clearly targets engineers and teams adopting GitHub best practices. Minor points lost in signal/noise as some references to 'the best teams' are more motivational than technical. There are no penalties, as content is relevant, positive, and up-to-date.",
    "reasoning_summary": "The content is a strong fit for the 'GitHub' category. It highlights practical GitHub branching strategies, explains their benefits, and targets an audience seeking actionable, up-to-date GitHub practices. Advice is concrete, relevant, and clearly geared to teams working within the GitHub ecosystem.",
    "level": "Primary"
  },
  "Azure Pipelines": {
    "resourceId": "qwciWeifRRf",
    "category": "Azure Pipelines",
    "calculated_at": "2025-05-16T20:29:45",
    "ai_confidence": 19.76,
    "ai_mentions": 0.2,
    "ai_alignment": 2.85,
    "ai_depth": 2.6,
    "ai_intent": 4.35,
    "ai_audience": 5.9,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content discusses version control, branching strategies (GitHub Flow, Release Flow), and emphasizes simplicity for faster delivery and reduced risk. However, there is no direct mention of Azure Pipelines or explicit reference to build, test, or deployment automation, nor to CI/CD practices using Azure Pipelines. While concepts like continuous deployment and simple flows are indirectly relevant, the main focus is on branching, not pipelines. The target audience overlaps with Azure Pipelines users (DevOps practitioners), but the content fails to explore any pipeline-related configuration, best practices, or Azure-specific implementations.",
    "reasoning_summary": "This content focuses on branching strategy best practices but does not mention or explore Azure Pipelines or related CI/CD automation. Its alignment with the Azure Pipelines category is weak, as it centers on version control, not pipeline automation.",
    "level": "Ignored"
  },
  "Leadership": {
    "resourceId": "qwciWeifRRf",
    "category": "Leadership",
    "calculated_at": "2025-05-16T20:29:45",
    "ai_confidence": 13.15,
    "ai_mentions": 1.0,
    "ai_alignment": 1.2,
    "ai_depth": 1.0,
    "ai_intent": 2.0,
    "ai_audience": 4.1,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on technical branching strategies such as GitHub Flow and Release Flow. While it refers to 'the best engineering teams', there is no meaningful discussion of leadership or leader roles in fostering agility or any transformational leadership practices. Direct mentions, alignment, and depth scores are low; the audience leans practitioner/engineer, not leaders. No penalties applied since the tone and topicality are current and straightforward.",
    "reasoning_summary": "This content addresses technical workflow improvements, not leadership. Its focus is on practical advice for branching strategies, lacking any exploration of leadership roles, principles, or frameworks relevant to Agile or business agility.",
    "level": "Ignored"
  },
  "Customer Retention": {
    "resourceId": "qwciWeifRRf",
    "category": "Customer Retention",
    "calculated_at": "2025-05-16T20:29:47",
    "ai_confidence": 21.99,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.2,
    "ai_intent": 2.3,
    "ai_audience": 6.1,
    "ai_signal": 3.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content exclusively focuses on engineering best practices for branching strategies (GitHub Flow, Release Flow) and emphasizes faster delivery, reduced risk, and consistent value delivery from an internal process standpoint. There is no direct or indirect discussion of retaining customers, understanding their needs, using feedback, or implementing retention strategies. Any value delivered here is described in engineering efficiency terms, with no focus on customer engagement, user experience, or churn reduction. As such, alignment and depth are minimal, and mentions of retention concepts are absent. Audience alignment is somewhat present (teams/leadership), but the subject matter is misaligned with customer retention.",
    "reasoning_summary": "This content is about simplifying version control workflows for developers and makes no mention of customer retention or related strategies. While its advice might indirectly improve delivery, it does not address retention, engagement, or user-centric topics, making it a poor categorical fit.",
    "level": "Ignored"
  },
  "Ethos": {
    "resourceId": "qwciWeifRRf",
    "category": "Ethos",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 27.45,
    "ai_mentions": 0.6,
    "ai_alignment": 2.1,
    "ai_depth": 2.8,
    "ai_intent": 3.6,
    "ai_audience": 7.4,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "The content emphasizes simplicity in branching strategies (GitHub Flow and Release Flow) for faster delivery and reduced risk. However, it does not directly discuss foundational beliefs, system-level convictions, or evidence of ethos as defined. Core ideas center on practical advice rather than exploring ethos' role beneath principles or system behaviors. No explicit ethos references, but the value placed on flow hints at an underlying belief. The audience fit and signal are high, but conceptual and depth scores are low, as content focuses on tools/practices, not demonstrable ethos.",
    "reasoning_summary": "While the article values simplicity and flow, it provides practical guidance on branching models rather than exploring the foundational beliefs or system evidence that constitute ethos. It's more process-focused, lacking the depth and alignment needed for strong classification under 'Ethos'.",
    "level": "Ignored"
  },
  "Windows": {
    "resourceId": "qwciWeifRRf",
    "category": "Windows",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 6.2,
    "ai_mentions": 0.1,
    "ai_alignment": 0.9,
    "ai_depth": 0.7,
    "ai_intent": 0.9,
    "ai_audience": 2.1,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content exclusively discusses software development branching strategies, mentioning GitHub Flow and Release Flow, but makes no reference to Windows OS, its installation, configuration, or management. The concepts are general to software engineering and version control, not specific to the Windows environment. There is no targeting of Windows users, nor is any content relevant to managing or utilising Windows described. Thus, the content is off-topic for this category.",
    "reasoning_summary": "This content covers general software branching strategies and does not address Windows OS concepts, configurations, or audiences. It falls outside the scope of the 'Windows' category.",
    "level": "Ignored"
  },
  "Organisational Culture": {
    "resourceId": "qwciWeifRRf",
    "category": "Organisational Culture",
    "calculated_at": "2025-05-16T20:29:45",
    "ai_confidence": 15.43,
    "ai_mentions": 0.7,
    "ai_alignment": 2.2,
    "ai_depth": 1.9,
    "ai_intent": 2.8,
    "ai_audience": 4.2,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on technical branching strategies (GitHub Flow, Release Flow), emphasizing simplicity for faster delivery and less risk. While it implies that team practices impact outcomes, it does not explicitly discuss organisational culture, leadership, collaboration, or cultural transformation. It is directed at engineering teams but lacks cultural depth or explicit ties to organisational culture elements. Only tangential alignment at best.",
    "reasoning_summary": "This content centers on technical guidance for branching strategies without meaningful discussion of organisational culture, leadership, or cultural impact. It only loosely aligns with the category via implied team practices, leading to a very low confidence fit.",
    "level": "Ignored"
  },
  "Ability to Innovate": {
    "resourceId": "qwciWeifRRf",
    "category": "Ability to Innovate",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 27.5,
    "ai_mentions": 1.0,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 3.0,
    "ai_audience": 7.0,
    "ai_signal": 6.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses on simplifying branching strategies to improve delivery speed and reduce risk, but does not directly mention or discuss the Ability to Innovate or its frameworks. While streamlined processes may indirectly support innovation, the discussion centers on version control best practices, not innovation metrics, learning cycles, or innovation culture. Thus, the content scores low on direct mentions, conceptual alignment, and relevant depth, with medium scores for audience and signal.",
    "reasoning_summary": "This content addresses branching strategy simplicity for improved team delivery speed, but it offers minimal linkage to innovation capacity or relevant EBM innovation metrics. Its relevance to 'Ability to Innovate' is limited and mostly indirect.",
    "level": "Ignored"
  },
  "Practice": {
    "resourceId": "qwciWeifRRf",
    "category": "Practice",
    "calculated_at": "2025-05-16T20:29:47",
    "ai_confidence": 85.72,
    "ai_mentions": 6.3,
    "ai_alignment": 9.6,
    "ai_depth": 9.0,
    "ai_intent": 9.1,
    "ai_audience": 8.6,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 86.0,
    "reasoning": "The content is directly focused on actionable branching practices (GitHub Flow and Release Flow) and their impact on delivery, risk, and efficiency. It avoids tool-centric or philosophical digressions while providing clear practical guidance (e.g., 'short-lived feature branches, immediate merges to main'). The discussion addresses technique, intent, and practical outcomes relevant to practitioners. Examples and prescriptive guidance reinforce depth and alignment.",
    "reasoning_summary": "This content emphasizes actionable branching techniques that streamline delivery and reduce risk, aligning closely with the 'Practice' category. Its focus on specific habits, practical advice, and relevant audience yields a high confidence score.",
    "level": "Primary"
  },
  "Increment": {
    "resourceId": "qwciWeifRRf",
    "category": "Increment",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 23.62,
    "ai_mentions": 0.7,
    "ai_alignment": 2.6,
    "ai_depth": 2.2,
    "ai_intent": 2.5,
    "ai_audience": 4.4,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content discusses version control branching strategies (GitHub Flow, Release Flow) and how they simplify delivery, improve speed, and reduce risk. There are indirect references to delivering value and shipping, which are thematically adjacent to the Increment concept. However, there are no direct mentions of Increment or specific Agile/Scrum terms. The focus is on engineering practices to enable delivery, not the definition or mechanics of Increments in Scrum. The discussion is surface-level, lacking depth about Increment as an Agile artifact or its significance. The intended audience overlaps somewhat (delivery teams, possibly Agile practitioners) but is broader. Most of the content is relevant to version control, not Increments specifically.",
    "reasoning_summary": "This content focuses on simplifying branching strategies to increase delivery speed, touching on continuous delivery but not specifically discussing Agile Increments. It’s adjacent to the Increment concept but lacks the direct focus, depth, and key themes required for a strong category match.",
    "level": "Ignored"
  },
  "Lean Startup": {
    "resourceId": "qwciWeifRRf",
    "category": "Lean Startup",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 19.534,
    "ai_mentions": 1.6,
    "ai_alignment": 2.3,
    "ai_depth": 2.4,
    "ai_intent": 2.1,
    "ai_audience": 6.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on the benefits of simple branching strategies (e.g., GitHub Flow, Release Flow) for engineering teams, emphasizing speed, reduced risk, and fast delivery. However, it does not mention Lean Startup or its core themes (MVP, Build-Measure-Learn, validated learning, customer development, rapid experimentation). There is only a peripheral alignment with efficiency and iteration, but no explicit connection to Lean Startup methodology, principles, or audience. No outdated advice or critical tone is present, so no penalties are applied. The confidence is low since nearly all discussion is strictly about software version control, not Lean Startup.",
    "reasoning_summary": "This content discusses version control practices for engineering teams, highlighting simplicity and speed—but lacks direct or substantive ties to Lean Startup principles such as MVPs or iterative learning. As such, its fit with the Lean Startup category is minimal.",
    "level": "Ignored"
  },
  "Throughput": {
    "resourceId": "qwciWeifRRf",
    "category": "Throughput",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 26.97,
    "ai_mentions": 1.1,
    "ai_alignment": 3.8,
    "ai_depth": 2.7,
    "ai_intent": 3.2,
    "ai_audience": 6.2,
    "ai_signal": 5.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 27.0,
    "reasoning": "While the content focuses on efficient delivery and fast flow via simple branching strategies, it never directly discusses throughput as a delivery metric, nor does it analyze or measure completed work items over time. There are no explicit references to throughput calculations, diagrams, trends, or analyses. The piece targets practitioners interested in engineering best practices, loosely aligned with the throughput audience, but the main theme is about branching simplicity rather than throughput metrics. The depth is modest, focusing on high-level guidance rather than substantial metric-driven insight. No penalties were needed since it is timely and earnest in tone, but does not fit a strict throughput classification.",
    "reasoning_summary": "This content stresses faster delivery via simple branching, but doesn't discuss throughput as a metric. It offers advice on process, not analysis or measurement of system delivery, so alignment with the Throughput category is low.",
    "level": "Ignored"
  },
  "Asynchronous Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Asynchronous Development",
    "calculated_at": "2025-05-16T20:29:52",
    "ai_confidence": 19.3,
    "ai_mentions": 0.4,
    "ai_alignment": 2.6,
    "ai_depth": 2.1,
    "ai_intent": 2.7,
    "ai_audience": 6.2,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content focuses on simplifying branching strategies (e.g., GitHub Flow, Release Flow) to help engineering teams deliver faster. There is no explicit mention of asynchronous development or direct reference to asynchronous or distributed collaboration. While simplifying branching may indirectly support async collaboration, the main emphasis is on code integration flow, not on asynchronously managing teams or workflows. No examples, tools, or practices specific to asynchronous development are present, so conceptual alignment and depth are low. Audience and signal scores are higher, as the content targets engineering teams and stays mostly on topic.",
    "reasoning_summary": "Though the content discusses efficient branching and delivery, it doesn't align with asynchronous development's principles or practices. There are no mentions or in-depth discussions about async workflows or team collaboration. Confidence is low due to minimal relevance.",
    "level": "Ignored"
  },
  "Frequent Releases": {
    "resourceId": "qwciWeifRRf",
    "category": "Frequent Releases",
    "calculated_at": "2025-05-16T20:29:53",
    "ai_confidence": 83.66,
    "ai_mentions": 6.9,
    "ai_alignment": 9.3,
    "ai_depth": 8.6,
    "ai_intent": 8.2,
    "ai_audience": 8.4,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 84.0,
    "reasoning": "The content advocates for simple branching strategies (GitHub Flow, Release Flow) that enable continuous deployment and fast delivery. It emphasizes minimizing friction and complexity to allow for frequent, risk-reduced releases—core principles of Frequent Releases. Main ideas align with CI/CD and DevOps practices, with depth shown in discussing why certain models matter. No outdated or oppositional tone. Audience is technical teams, matching the category. Overall, focus is sharply relevant.",
    "reasoning_summary": "The content clearly recommends branching strategies (like GitHub Flow) to accelerate delivery and reduce risk, closely aligning with Frequent Releases principles. Its clear focus and actionable advice for technical teams contribute to a strong fit with the category's intent.",
    "level": "Primary"
  },
  "Philosophy": {
    "resourceId": "qwciWeifRRf",
    "category": "Philosophy",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 24.2,
    "ai_mentions": 1.2,
    "ai_alignment": 2.8,
    "ai_depth": 2.4,
    "ai_intent": 3.1,
    "ai_audience": 6.3,
    "ai_signal": 4.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 24.0,
    "reasoning": "The content primarily discusses the advantages of simple branching strategies such as GitHub Flow and Release Flow, focusing on practical implementation and efficiency. It briefly touches on the idea of reducing complexity for better results—a nod to Lean thinking—but does not explore foundational beliefs, theoretical frameworks, or philosophical constructs in detail. No explicit mention of underlying philosophies is present; most of the content is 'how-to' advice rather than 'why' or 'what'. The audience is technical teams seeking practical improvements, rather than decision-makers or strategists interested in foundational belief systems. No penalties were applied, as the tone is not satirical or obsolete, but the content lacks philosophical depth and direct conceptual alignment.",
    "reasoning_summary": "This content is focused on practical branching strategies rather than foundational beliefs or philosophical frameworks. While it briefly alludes to reducing complexity—a philosophical value—it mostly offers technical advice, so it only marginally fits the category.",
    "level": "Ignored"
  },
  "Tool": {
    "resourceId": "qwciWeifRRf",
    "category": "Tool",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 58.6,
    "ai_mentions": 3.8,
    "ai_alignment": 6.7,
    "ai_depth": 6.3,
    "ai_intent": 7.3,
    "ai_audience": 7.5,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 59.0,
    "reasoning": "The content discusses specific branching strategies (GitHub Flow, Release Flow) used in modern version control tools like Git, which align with Agile and DevOps team practices. It explores practical ways these tools support better delivery and risk reduction — fitting the 'Tool' category. However, tool references are implicit (branching strategies within tools) rather than explicit deep dives into applications, integrations, or features. The depth favors practical advice over feature-specific exploration. No penalties apply as the content is current and not critical of tooling itself.",
    "reasoning_summary": "This content focuses on branching strategies like GitHub Flow within modern source control tools, showing their practical benefits for Agile/DevOps teams. While not a deep technical dive into specific platforms, it effectively frames tools as enablers of better delivery—reasonably fitting the 'Tool' category.",
    "level": "Tertiary"
  },
  "Technical Leadership": {
    "resourceId": "qwciWeifRRf",
    "category": "Technical Leadership",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 55.55,
    "ai_mentions": 1.8,
    "ai_alignment": 5.7,
    "ai_depth": 5.1,
    "ai_intent": 4.8,
    "ai_audience": 7.5,
    "ai_signal": 6.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 56.0,
    "reasoning": "The content offers practical advice (simplifying branching for faster delivery) relevant to agile and engineering teams, indirectly aligning with technical leadership concepts like enabling team productivity and reducing process friction. However, it doesn't explicitly reference technical leadership or its subtopics (mentoring, team dynamics, agile ceremonies, etc.), nor does it deeply discuss leadership responsibilities. The audience appears to be practitioners or tech leads but could apply to any developer. The main theme fits under process best practices rather than overall team leadership.",
    "reasoning_summary": "This content provides useful, process-focused advice for development teams, with tangential relevance to technical leadership in its emphasis on flow, simplicity, and team productivity—but lacks explicit leadership focus or depth.",
    "level": "Tertiary"
  },
  "Continuous Learning": {
    "resourceId": "qwciWeifRRf",
    "category": "Continuous Learning",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 33.3,
    "ai_mentions": 0.7,
    "ai_alignment": 3.1,
    "ai_depth": 2.8,
    "ai_intent": 3.5,
    "ai_audience": 8.3,
    "ai_signal": 8.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on simplifying branching strategies to improve delivery speed and reduce risk, emphasizing practices like GitHub Flow and Release Flow. It targets engineering teams and process improvement (audience/signal high), but does not directly reference continuous learning, growth mindset, or knowledge sharing. The alignment and depth remain moderate—these practices support adaptability but aren't framed as learning. Intent aligns somewhat, as it suggests improvement, but continuous learning as a theme is not explored.",
    "reasoning_summary": "While the advice supports efficiency and improvement, it doesn’t address continuous learning or growth mindset. The focus is on process simplification, not on fostering sustained adaptability, feedback, or team learning, so confidence in the classification is low.",
    "level": "Ignored"
  },
  "Agile Transformation": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Transformation",
    "calculated_at": "2025-05-16T20:29:52",
    "ai_confidence": 35.68,
    "ai_mentions": 0.8,
    "ai_alignment": 3.1,
    "ai_depth": 2.7,
    "ai_intent": 3.2,
    "ai_audience": 6.0,
    "ai_signal": 7.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 36.0,
    "reasoning": "The content focuses primarily on code branching strategies (GitHub Flow, Release Flow) to support delivery speed and reduce risk. While these may align with Agile technical practices, there is no explicit mention of Agile transformation, its frameworks, leadership, or cultural change dimensions. The advice is tactical, targeting engineering teams and delivery, with slight conceptual overlap in fostering responsiveness and value delivery. However, the main thrust is not Agile transformation as a process but specific version control tactics. Depth and alignment are thus limited, and direct mentions are absent.",
    "reasoning_summary": "This content targets developers seeking efficient branching strategies, with only marginal overlap with Agile Transformation's themes of organizational change and mindset. It’s highly tactical, not transformational, so category fit and confidence are low.",
    "level": "Ignored"
  },
  "Product Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Management",
    "calculated_at": "2025-05-16T20:29:54",
    "ai_confidence": 33.44,
    "ai_mentions": 1.2,
    "ai_alignment": 3.6,
    "ai_depth": 2.8,
    "ai_intent": 4.1,
    "ai_audience": 5.2,
    "ai_signal": 3.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content focuses on branching strategies and the value of simplicity in version control, which are technical practices relevant to development teams. While it discusses delivering value and reducing risk (concepts that matter to product management), there are no direct mentions of product management or its frameworks, nor does it engage with the broader strategic or cross-functional aspects outlined in the category definition. The audience seems to be engineering teams, not product managers specifically, and the discussion remains tactical, not strategic. Thus, conceptual and intent alignment are low, with the most substantial parallels being indirect (e.g., delivery speed as a product goal).",
    "reasoning_summary": "This content addresses the technical details of branching strategies and efficient code delivery. While delivering value aligns loosely with product goals, the content lacks the strategic perspective, frameworks, and direct audience focus essential to Product Management. Thus, its fit is limited.",
    "level": "Ignored"
  },
  "Operational Practices": {
    "resourceId": "qwciWeifRRf",
    "category": "Operational Practices",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 87.8,
    "ai_mentions": 6.8,
    "ai_alignment": 9.3,
    "ai_depth": 8.7,
    "ai_intent": 9.1,
    "ai_audience": 8.5,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 88.0,
    "reasoning": "The content directly discusses operational approaches to branching strategies, explicitly referencing GitHub Flow and Release Flow, both foundational practices in efficient delivery. It emphasizes simplicity, flow, and delivery speed, echoing Lean and DevOps principles. While 'operational practices' is not directly named, the discussion illustrates practical, actionable advice that aligns with optimizing workflows and reducing unnecessary complexity—central to this category. The audience is engineers and delivery teams, closely matching the category's target. The discussion is focused and relevant throughout, with little off-topic material. No penalties applied as content is current and positively framed.",
    "reasoning_summary": "This content offers practical, actionable advice for engineering teams on optimizing branching strategies, emphasizing flow, delivery speed, and reducing complexity—all of which strongly align with operational practices in Agile and DevOps settings.",
    "level": "Primary"
  },
  "Complexity Thinking": {
    "resourceId": "qwciWeifRRf",
    "category": "Complexity Thinking",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 20.54,
    "ai_mentions": 0.5,
    "ai_alignment": 2.0,
    "ai_depth": 1.8,
    "ai_intent": 3.0,
    "ai_audience": 5.3,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content does not explicitly mention Complexity Thinking or reference complexity science principles. Its core theme is about simplifying branching strategies in software engineering, which is more about operational simplicity than engaging with non-linear dynamics, emergence, or organizational uncertainty in the complexity science sense. The main idea is to reduce unnecessary process complexity—not to apply or discuss complexity frameworks like Cynefin or Stacey's work. While the audience (engineering teams) could overlap with those interested in complexity, the intent is tangential, focusing on efficiency and simplicity rather than managing inherent complexity. Signal-to-noise is high—content is on-topic for version-control strategy—but it's not actually relevant for this category.",
    "reasoning_summary": "This content focuses on practical software branching simplification, not the application of complexity science or frameworks. There's minimal alignment with Complexity Thinking, resulting in low overall confidence for this classification.",
    "level": "Ignored"
  },
  "Azure DevOps": {
    "resourceId": "qwciWeifRRf",
    "category": "Azure DevOps",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 13.45,
    "ai_mentions": 0.25,
    "ai_alignment": 1.15,
    "ai_depth": 1.5,
    "ai_intent": 2.0,
    "ai_audience": 5.7,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses on promoting simple branching strategies—primarily GitHub Flow and Release Flow—for improved team efficiency. There is no mention or reference to Azure DevOps, its tools, or its practices. Conceptual alignment is weak, as Azure DevOps’s branching and CI/CD support aren’t discussed or implied beyond general best practices; the guidance could fit GitHub, GitLab, Bitbucket, or others. The audience (engineering teams and developers) partially overlaps with Azure DevOps’s target group, but the discussion is platform-agnostic and entirely abstracted away from Azure DevOps specifics.",
    "reasoning_summary": "Although aimed at developers, the content discusses general branching strategies without mentioning Azure DevOps. It never references Azure DevOps tools or workflows, so confidence that it fits this category is very low.",
    "level": "Ignored"
  },
  "Flow Efficiency": {
    "resourceId": "qwciWeifRRf",
    "category": "Flow Efficiency",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 71.59,
    "ai_mentions": 5.5,
    "ai_alignment": 8.4,
    "ai_depth": 6.8,
    "ai_intent": 7.2,
    "ai_audience": 8.0,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content emphasizes the importance of simplifying branching strategies (GitHub Flow, Release Flow) to support fast delivery and reduce friction, directly referencing the concept of 'flow.' While it does not use the phrase 'flow efficiency,' the core message aligns with optimizing throughput and minimizing bottlenecks—a key tenet of flow efficiency. However, it does not elaborate on standard flow efficiency metrics (cycle/lead time) or Lean/Agile principles in detail, limiting its depth. The audience is practitioners interested in engineering process improvement, which matches the category. The content is focused and avoids off-topic tangents but remains at a high level, lacking in deep methodology or tool discussion.",
    "reasoning_summary": "This content closely aligns with flow efficiency by advocating for simpler branching to boost delivery speed and reduce friction, but it stops short of a deep dive into Lean/Agile methods or detailed metrics. It's focused, practical, and targets practitioners, yielding a strong—though not perfect—fit for the category.",
    "level": "Secondary"
  },
  "Strategic Goals": {
    "resourceId": "qwciWeifRRf",
    "category": "Strategic Goals",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 20.466,
    "ai_mentions": 0.7,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 1.9,
    "ai_audience": 7.0,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content is focused entirely on engineering branching strategies aimed at operational efficiency. While it touches on improving flow and reducing risk, it does not articulate or engage with long-term objectives, strategic frameworks, or business agility through strategic goals. There is no explicit mention, and the conceptual alignment and depth in relation to 'Strategic Goals' is minimal. The primary audience is practitioners rather than strategists, though there is high signal for engineering teams.",
    "reasoning_summary": "This content emphasizes streamlined branching practices for engineering teams. While promoting efficiency and reduced risk, it lacks explicit connection to long-term strategic objectives or business agility, so it has low confidence for the 'Strategic Goals' category.",
    "level": "Ignored"
  },
  "Liberating Structures": {
    "resourceId": "qwciWeifRRf",
    "category": "Liberating Structures",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 1.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.4,
    "ai_intent": 0.7,
    "ai_audience": 2.1,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content exclusively discusses version control branching strategies, specifically GitHub Flow and Release Flow. There are no mentions or references to Liberating Structures, facilitation techniques, or collaborative methods. The main audience is software engineers concerned with delivery flow, not facilitators or Agile coaches. No penalty is applied since the tone is neutral and current, but the lack of relevance to Liberating Structures results in very low scores across all dimensions.",
    "reasoning_summary": "This content centers on version control practices and does not mention or align with Liberating Structures. It targets engineering teams, not facilitators, and lacks any discussion of collaborative methods, resulting in a very low confidence score for this category.",
    "level": "Ignored"
  },
  "Value Delivery": {
    "resourceId": "qwciWeifRRf",
    "category": "Value Delivery",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 83.032,
    "ai_mentions": 6.2,
    "ai_alignment": 8.6,
    "ai_depth": 8.9,
    "ai_intent": 7.7,
    "ai_audience": 8.1,
    "ai_signal": 9.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "The content directly links simple branching strategies to consistent, fast value delivery—a clear fit for the category. It discusses how GitHub Flow and Release Flow encourage continuous deployment (an Agile/DevOps practice) and reduce risk. Key phrases like 'deliver value consistently' and 'enable fast delivery' closely align with the Value Delivery definition. The depth goes beyond surface mentions by recommending actionable models and highlighting the consequences of complex flows. The content targets engineering teams (practitioners in Agile/DevOps), remaining on-topic throughout. Slightly fewer direct category mentions keep the 'mentions' score moderate, but the overall focus is highly relevant.",
    "reasoning_summary": "This content thoroughly explains how simple branching supports rapid, consistent value delivery—a core theme in Agile and DevOps. The advice is practical, audience-aligned, and deeply integrated with recognized value delivery principles, earning a high confidence score.",
    "level": "Primary"
  },
  "Organisational Physics": {
    "resourceId": "qwciWeifRRf",
    "category": "Organisational Physics",
    "calculated_at": "2025-05-16T20:29:47",
    "ai_confidence": 14.725,
    "ai_mentions": 0.1,
    "ai_alignment": 1.5,
    "ai_depth": 1.2,
    "ai_intent": 2.7,
    "ai_audience": 4.0,
    "ai_signal": 4.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content discusses the merits of simple branching strategies for software teams, focusing on practical workflow optimization. Direct mention of 'Organisational Physics' or systems thinking concepts is absent. While there's a loose nod to reducing organisational complexity, the main thrust is technical process improvement, not systems analysis. The audience is technical practitioners rather than organisational theorists. Depth and conceptual alignment with Organisational Physics are minimal.",
    "reasoning_summary": "This content emphasizes pragmatic engineering processes, not systems thinking or organisational dynamics. Its focus is far removed from Organisational Physics, making it a poor fit for the category.",
    "level": "Ignored"
  },
  "Psychological Safety": {
    "resourceId": "qwciWeifRRf",
    "category": "Psychological Safety",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 10.6,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.7,
    "ai_intent": 1.2,
    "ai_audience": 2.0,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses entirely on branching strategies and streamlining version control for team efficiency. There is no mention or substantive discussion of psychological safety, risk-taking culture, or team dynamics beyond technical efficiency. Aside from being aimed at engineering teams (a potentially overlapping audience), there is no direct or indirect conceptual alignment. No penalties were applied, as the content is not outdated nor contradictory; it is simply outside scope.",
    "reasoning_summary": "This content centers around simplifying branching strategies for engineering teams, with no discussion or evidence of psychological safety concepts. It falls well outside the intent and main topics of the category.",
    "level": "Ignored"
  },
  "Entrepreneurship": {
    "resourceId": "qwciWeifRRf",
    "category": "Entrepreneurship",
    "calculated_at": "2025-05-16T20:29:47",
    "ai_confidence": 16.42,
    "ai_mentions": 0.1,
    "ai_alignment": 2.2,
    "ai_depth": 2.4,
    "ai_intent": 2.6,
    "ai_audience": 5.0,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content is technical and specifically addresses software engineering workflow optimizations via branching strategies in version control. While it touches on risk reduction and value delivery, these are not framed in an entrepreneurial context but rather as engineering best practices. There are no direct mentions of entrepreneurship, its mindset, or strategies relevant to entrepreneurial ventures, and the intended audience is technical teams, not entrepreneurs. Thus, the content does not directly fit the entrepreneurship category.",
    "reasoning_summary": "This content focuses on streamlining software development practices and is intended for engineering teams, not entrepreneurs. There's minimal overlap with entrepreneurial topics, so the fit for 'Entrepreneurship' is very low.",
    "level": "Ignored"
  },
  "Framework": {
    "resourceId": "qwciWeifRRf",
    "category": "Framework",
    "calculated_at": "2025-05-16T20:29:46",
    "ai_confidence": 29.97,
    "ai_mentions": 1.1,
    "ai_alignment": 4.8,
    "ai_depth": 3.7,
    "ai_intent": 2.2,
    "ai_audience": 6.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "While the content discusses best practices for branching strategies using GitHub Flow and Release Flow, it doesn't explicitly discuss frameworks as defined (structured methodologies for Agile, DevOps, Lean). It focuses on workflow and delivery acceleration but lacks meaningful discussion of frameworks, adaptation, or principles. The target audience (engineering/DevOps teams) partially overlaps, but the core ideas are centered on branching models, not holistic frameworks.",
    "reasoning_summary": "The content centers on branching strategy best practices—not on frameworks themselves—resulting in weak alignment and depth for the Framework category. While it’s useful for engineering teams, it lacks direct discussion of structured methodologies or their adaptation.",
    "level": "Ignored"
  },
  "Lean Principles": {
    "resourceId": "qwciWeifRRf",
    "category": "Lean Principles",
    "calculated_at": "2025-05-16T20:29:47",
    "ai_confidence": 78.2,
    "ai_mentions": 2.8,
    "ai_alignment": 9.0,
    "ai_depth": 7.7,
    "ai_intent": 8.7,
    "ai_audience": 7.9,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content champions simplification of branching strategies to optimize software delivery flow and reduce waste—directly supporting core Lean Principles such as removing non-value-adding activities and focusing on value. It aligns with Lean’s accent on flow (named explicitly), minimizing waste, and continuous improvement. However, there’s no explicit mention of Lean terms or detailed Lean tools, slightly reducing the mentions and depth score. The advice is practical, targets engineering teams (Lean's likely implementers), and is focused and relevant throughout.",
    "reasoning_summary": "This content strongly embodies Lean Principles by advocating for process simplification and flow in software delivery. While it doesn’t explicitly name Lean, its core message of reducing waste and optimizing value is well-aligned, making it a good fit for the category.",
    "level": "Secondary"
  },
  "Scrum": {
    "resourceId": "qwciWeifRRf",
    "category": "Scrum",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 14.35,
    "ai_mentions": 0.2,
    "ai_alignment": 1.9,
    "ai_depth": 1.3,
    "ai_intent": 2.5,
    "ai_audience": 5.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses version control strategies such as GitHub Flow and Release Flow, promoting workflow simplicity for faster delivery. While it indirectly aligns with Scrum in its focus on delivery cadence and simplicity, it never explicitly mentions Scrum principles, frameworks, or roles. The substantial focus on engineering workflow excludes explicit Scrum artifacts, events, or roles, resulting in very low alignment and depth scores. The audience may partially overlap with Scrum practitioners but the piece targets general engineering teams. No penalties applied as the content is modern and fairly neutral.",
    "reasoning_summary": "This content focuses on simplifying version control strategies, not Scrum. While principles like fast delivery loosely align, there's no direct or substantial Scrum discussion, yielding a very low confidence score for the Scrum category.",
    "level": "Ignored"
  },
  "Principle": {
    "resourceId": "qwciWeifRRf",
    "category": "Principle",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 72.54,
    "ai_mentions": 3.4,
    "ai_alignment": 8.5,
    "ai_depth": 6.8,
    "ai_intent": 7.8,
    "ai_audience": 8.2,
    "ai_signal": 9.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content mainly advocates for simple branching strategies to enable flow, fast delivery, and value delivery—directly referencing actionable principles central to Agile/Lean. While 'principle' and related terms aren’t explicitly named, the text’s guidance on how to work (focus on flow, avoid complexity, value delivery) aligns with the principle category. The depth is moderate, focused on branching strategies without exploring broader principles, but intent and audience fit are strong, and the content is concise and highly relevant.",
    "reasoning_summary": "This content exemplifies actionable principles by encouraging simplicity in workflow, enabling fast delivery and value. Although not stating 'principles,' its guidance is well-aligned with Agile/Lean concepts, making it a relevant and focused fit for the category.",
    "level": "Secondary"
  },
  "Product Owner": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Owner",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 12.15,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 1.2,
    "ai_audience": 7.2,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on software engineering practices regarding source control branching strategies and does not mention the Product Owner or their accountability. There is minimal conceptual overlap, as the content is aimed at engineering teams optimizing workflow, not at Product Owners or their responsibility for value delivery, prioritization, or stakeholder management. The audience is technical, not strategic/PO-focused. No penalty is needed since the content is not outdated or contrary, but it simply does not fit the Product Owner category.",
    "reasoning_summary": "This article is about development teams optimizing branching strategies—not about the Product Owner role or accountability. While it's relevant to teams, it doesn't address Product Owner responsibilities, decision-making, or stakeholder alignment, so confidence is very low.",
    "level": "Ignored"
  },
  "Minimum Viable Product": {
    "resourceId": "qwciWeifRRf",
    "category": "Minimum Viable Product",
    "calculated_at": "2025-05-16T20:29:47",
    "ai_confidence": 18.34,
    "ai_mentions": 0.15,
    "ai_alignment": 2.1,
    "ai_depth": 1.85,
    "ai_intent": 2.18,
    "ai_audience": 5.37,
    "ai_signal": 2.35,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content is focused on development workflow efficiency via simple branching strategies like GitHub Flow and Release Flow, aiming to improve delivery speed and reduce risk. However, it does not mention MVP concepts, testing hypotheses, or market validation. Its themes overlap somewhat with Agile ideas but stay strictly at the level of source control practices, never discussing MVP as defined. The primary audience is engineering teams, partially overlapping with MVP practitioners, but the scope is too narrow and technical for strong category fit. No penalties are applied since the content is current and constructive.",
    "reasoning_summary": "While the content encourages faster delivery by simplifying branching, it lacks any reference to Minimum Viable Product principles or practices, focusing instead on code management tactics. Thus, it only weakly aligns with the MVP category.",
    "level": "Ignored"
  },
  "Observability": {
    "resourceId": "qwciWeifRRf",
    "category": "Observability",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 12.917,
    "ai_mentions": 0.3,
    "ai_alignment": 1.5,
    "ai_depth": 1.3,
    "ai_intent": 1.0,
    "ai_audience": 4.2,
    "ai_signal": 2.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content focuses purely on branching strategies for version control and advocates for simplicity for better team flow and delivery speed. There are no direct or implied references to observability, system insights, metrics, logs, or associated tooling. The conceptual overlap with observability is minimal, as the subject centers on software process optimization, not monitoring, understanding internal system states, or enhancing visibility across teams or products. The audience may have some overlap as technical practitioners, but the piece offers no depth, alignment, or signal relating to observability practices, tooling, or outcomes.",
    "reasoning_summary": "This content is about simplifying Git branching strategies to improve team delivery, with no discussion of observability concepts or practices. It's off-topic for the observability category and does not fit the core classification criteria.",
    "level": "Ignored"
  },
  "Decision Theory": {
    "resourceId": "qwciWeifRRf",
    "category": "Decision Theory",
    "calculated_at": "2025-05-16T20:29:48",
    "ai_confidence": 15.05,
    "ai_mentions": 0.1,
    "ai_alignment": 2.8,
    "ai_depth": 1.3,
    "ai_intent": 2.9,
    "ai_audience": 3.2,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 15.0,
    "reasoning": "The content focuses on the technical simplification of branching strategies rather than the process of decision-making under uncertainty, heuristics, biases, or models central to Decision Theory. No explicit or implicit reference to decision theory concepts or frameworks is made; any risk reduction is practical/operational, not theoretical or behavioral. Hence, only incidental alignment with decision quality concepts and minimal audience overlap, leading to a low confidence score.",
    "reasoning_summary": "This content mainly discusses best practices in branching strategies with a practical, operational focus, and lacks meaningful reference or exploration of decision theory concepts. Its relevance to Decision Theory is incidental at best, resulting in a low confidence score.",
    "level": "Ignored"
  },
  "Technical Excellence": {
    "resourceId": "qwciWeifRRf",
    "category": "Technical Excellence",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 51.49,
    "ai_mentions": 1.2,
    "ai_alignment": 5.6,
    "ai_depth": 5.8,
    "ai_intent": 6.7,
    "ai_audience": 7.3,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 51.0,
    "reasoning": "The content debates simplicity in branching strategies and their impact on delivery speed and risk reduction—important to engineering, but only partially overlaps with Technical Excellence as defined. It touches on efficient practices and good workflows (aligning with CI/CD principles), but does not explore TDD, modularity, or emergent design in any depth. There are no explicit mentions of 'technical excellence.' The discussion is relevant for practitioners, but mostly stays surface-level and narrowly scoped to version control best practices.",
    "reasoning_summary": "The content offers practical advice on branching strategy, linking simplicity to better delivery and risk reduction. While this nods toward technical excellence, it doesn’t directly or deeply engage with core principles like TDD or modular design, so confidence in this classification is moderate.",
    "level": "Tertiary"
  },
  "Software Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Software Development",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 91.35,
    "ai_mentions": 8.8,
    "ai_alignment": 9.5,
    "ai_depth": 9.3,
    "ai_intent": 9.2,
    "ai_audience": 9.0,
    "ai_signal": 9.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 91.0,
    "reasoning": "The content directly discusses version control branching strategies (GitHub Flow, Release Flow), core practices in software development. It evaluates their impact on delivery speed and risk, emphasizes best practices, and targets software engineering teams. The depth includes arguments against complex strategies with supporting rationale. No penalties apply—there are no outdated or critical tones. All major classification dimensions are thoroughly addressed.",
    "reasoning_summary": "This content tackles software development branching strategies with clear examples and rationale, directly targeting engineering practitioners. It offers best-practice insights and practical advice, aligning deeply with software development methodologies and audiences.",
    "level": "Primary"
  },
  "Troubleshooting": {
    "resourceId": "qwciWeifRRf",
    "category": "Troubleshooting",
    "calculated_at": "2025-05-16T20:29:53",
    "ai_confidence": 21.9,
    "ai_mentions": 0.5,
    "ai_alignment": 3.1,
    "ai_depth": 2.7,
    "ai_intent": 2.8,
    "ai_audience": 6.3,
    "ai_signal": 3.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 22.0,
    "reasoning": "The content advocates for simplifying branching strategies to increase delivery speed and reduce risk, referencing GitHub Flow and Release Flow. However, it does not explicitly discuss the identification or resolution of technical problems, nor does it offer hands-on troubleshooting methods, tools, or illustrative case studies. The audience is technical, but the signal is limited to best-practice strategy rather than systematic problem-solving, resulting in low alignment and depth with the Troubleshooting category.",
    "reasoning_summary": "While the content is technical and targets engineers, it focuses on promoting simpler branching strategies rather than identifying or resolving issues. It lacks specific troubleshooting advice or methodologies, so confidence in classifying it under Troubleshooting is low.",
    "level": "Ignored"
  },
  "Experimentation": {
    "resourceId": "qwciWeifRRf",
    "category": "Experimentation",
    "calculated_at": "2025-05-16T20:29:54",
    "ai_confidence": 11.3,
    "ai_mentions": 0.1,
    "ai_alignment": 1.5,
    "ai_depth": 1.7,
    "ai_intent": 1.8,
    "ai_audience": 2.0,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses entirely on advocating for simpler branching strategies (GitHub Flow, Release Flow) to boost team velocity and reduce risk. It does not mention or discuss experimentation, hypothesis-driven approaches, or testing ideas within an Agile workflow. The advice is practical but falls under workflow optimization, not experimentation per the category definition. There is no substantive alignment or conceptual depth related to experimentation.",
    "reasoning_summary": "This content centers on simplifying branching strategies, not on experimentation, hypothesis testing, or Agile validation. Its relevance to experimentation is minimal, so the confidence level is very low.",
    "level": "Ignored"
  },
  "Evidence Based Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Evidence Based Management",
    "calculated_at": "2025-05-16T20:29:55",
    "ai_confidence": 24.55,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 2.4,
    "ai_intent": 2.0,
    "ai_audience": 8.1,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 25.0,
    "reasoning": "There is no direct mention of Evidence Based Management or its core concepts. While the content supports faster delivery and value consistency—ideas adjacent to 'Time to Market' or 'Current Value'—it does not use empirical evidence, discuss actual metrics, or advocate for data-driven decision-making beyond qualitative claims. The primary focus is on branching strategies, not organizational management using evidence. The audience overlaps with technical teams (which could include EBM practitioners), and the content stays on-topic for engineering flow but lacks depth, specific alignment, and direct relevance to Evidence Based Management principles. No penalties were necessary.",
    "reasoning_summary": "This content centers on branching simplicity for faster delivery, but lacks evidence-based discussion, metrics, or alignment with Evidence Based Management themes. It's relevant to technical teams but doesn't meet the depth or conceptual focus required for strong EBM classification.",
    "level": "Ignored"
  },
  "Estimation": {
    "resourceId": "qwciWeifRRf",
    "category": "Estimation",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 6.6,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.4,
    "ai_intent": 1.3,
    "ai_audience": 2.7,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is entirely focused on branching strategies in version control (e.g., GitHub Flow, Release Flow) and their impact on delivery speed and risk. There are no direct mentions, concepts, or practices related to Agile or Scrum estimation, such as Planning Poker, empirical forecasting, or collaborative sizing. The audience is engineering-oriented, not Agile estimation practitioners. All dimension scores remain low as there is virtually no overlap with the Estimation category definition.",
    "reasoning_summary": "This content does not address estimation. It discusses version control branching strategies for efficient software delivery, not methods, concepts, or practices of estimating within Agile/Scrum. As such, there is minimal alignment and relevance to the Estimation category.",
    "level": "Ignored"
  },
  "Daily Scrum": {
    "resourceId": "qwciWeifRRf",
    "category": "Daily Scrum",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 3.54,
    "ai_mentions": 0.1,
    "ai_alignment": 0.3,
    "ai_depth": 0.15,
    "ai_intent": 0.35,
    "ai_audience": 1.6,
    "ai_signal": 0.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content exclusively discusses branching strategies (like GitHub Flow and Release Flow) to optimize value delivery and minimize risk in version control. There is no mention, explicit or implicit, of Scrum or the Daily Scrum event, its structure, or its core concepts. The main ideas are loosely related to team practices, but not to Scrum ceremonies or daily inspection/adaptation. Audience overlap is slightly possible (technical teams), but overall, the content does not fit the Daily Scrum category.",
    "reasoning_summary": "This content is all about simplifying version control branching strategies and does not discuss the Daily Scrum or any related Scrum practices. There’s virtually no direct or conceptual alignment, so the confidence score for this category is appropriately extremely low.",
    "level": "Ignored"
  },
  "Portfolio Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Portfolio Management",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 13.58,
    "ai_mentions": 0.5,
    "ai_alignment": 1.4,
    "ai_depth": 1.2,
    "ai_intent": 2.7,
    "ai_audience": 2.9,
    "ai_signal": 2.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses branching strategies for engineering teams—primarily GitHub Flow and Release Flow—and advocates for simplicity in version control to improve delivery speed and reduce risk. There is no explicit or implicit mention of project portfolios, strategic alignment, value streams, or executive-level prioritization. The focus is at the team and code-delivery level, not at the management of initiatives or portfolios. Therefore, alignment and relevance to Portfolio Management are minimal.",
    "reasoning_summary": "This content centers on team-level git practices, not on the strategic alignment or management aspects required for Portfolio Management. Its value is for engineering teams, with minimal connection to portfolio concerns.",
    "level": "Ignored"
  },
  "Engineering Practices": {
    "resourceId": "qwciWeifRRf",
    "category": "Engineering Practices",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 78.3,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.0,
    "ai_audience": 7.4,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 78.0,
    "reasoning": "The content directly addresses engineering practices by advocating for simple branching strategies and connecting them to delivery speed, risk reduction, and value delivery. It mentions specific methodologies like GitHub Flow and Release Flow. While it doesn't delve deeply into the mechanics or cover multiple key topics like TDD or automation, it provides a focused, actionable argument targeting engineering teams. The audience alignment is strong, but it's more guidance/opinion than in-depth methodology. No outdated or counter-aligned elements were found.",
    "reasoning_summary": "The content clearly promotes modern engineering practices with practical advice for branching strategies, aligning well with the category. While it focuses on version control rather than the full range of agile engineering topics, its intent and audience fit are strong, supporting a high confidence score.",
    "level": "Secondary"
  },
  "Lean": {
    "resourceId": "qwciWeifRRf",
    "category": "Lean",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 38.34,
    "ai_mentions": 0.8,
    "ai_alignment": 4.6,
    "ai_depth": 2.3,
    "ai_intent": 4.4,
    "ai_audience": 6.8,
    "ai_signal": 7.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 38.0,
    "reasoning": "The content discusses branching strategy simplification in version control. While it mentions concepts like 'flow' and 'delivering value', these are not explicitly tied to Lean principles or terminology. There is no use of terms like Lean, waste reduction, value stream mapping, or Kaizen. The alignment is moderate: some Lean-adjacent themes (simplicity, focus on value), but no deep exploration of Lean frameworks or methods. The depth is low as the discussion remains at the tooling/practices level and doesn't contextualize within process improvement or the Toyota Production System. Intent is somewhat aligned, helping teams be more efficient, but not with a Lean methodological lens. Audience fit and signal are higher, as the piece targets technical practitioners who would overlap with Lean's audience.",
    "reasoning_summary": "This content promotes simplicity and flow in branching strategies, concepts somewhat related to Lean. However, it doesn't reference Lean principles or methodologies, resulting in only partial alignment. The focus is on agile engineering practices rather than Lean process improvement.",
    "level": "Ignored"
  },
  "Organisational Agility": {
    "resourceId": "qwciWeifRRf",
    "category": "Organisational Agility",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 53.825,
    "ai_mentions": 1.3,
    "ai_alignment": 6.9,
    "ai_depth": 4.7,
    "ai_intent": 5.6,
    "ai_audience": 8.2,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content discusses branching strategies to enable fast delivery, aligning partially with organisational agility principles of reducing friction and increasing responsiveness. However, it is focused on technical team workflow rather than broader organisational agility themes like leadership, structural change, or continuous learning. There are clear links to agility in advocating simplicity and fast value delivery, but little discussion of cultural or structural shifts, and no direct mention of the category itself. The depth is moderate; the target audience of engineering teams is tangential to typical organisational agility stakeholders, but still relevant since dev practices can impact agility at the team level.",
    "reasoning_summary": "This content emphasizes simple branching strategies for faster delivery, resonating with organisational agility concepts. However, its focus remains technical and doesn't deeply engage with broad organisational culture or structural shifts, resulting in moderate alignment and confidence.",
    "level": "Tertiary"
  },
  "Customer Feedback Loops": {
    "resourceId": "qwciWeifRRf",
    "category": "Customer Feedback Loops",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 7.4,
    "ai_mentions": 0.2,
    "ai_alignment": 1.2,
    "ai_depth": 0.6,
    "ai_intent": 0.8,
    "ai_audience": 2.0,
    "ai_signal": 0.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content focuses exclusively on simplifying branching strategies (GitHub Flow, Release Flow) to improve software delivery speed and reduce risk. There are no direct or indirect references to customer feedback mechanisms, collection, integration, or analysis. The discussion is centered on engineering workflow efficiency, not feedback loops, so there is minimal alignment or relevance to the designated category. No penalties were applied because the tone and recency are appropriate.",
    "reasoning_summary": "This content is about optimizing engineering branching strategies for speed and simplicity, not about customer feedback or feedback loops. It lacks direct relevance and alignment to the 'Customer Feedback Loops' category.",
    "level": "Ignored"
  },
  "Agile Product Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Product Management",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 49.6,
    "ai_mentions": 0.4,
    "ai_alignment": 5.3,
    "ai_depth": 4.7,
    "ai_intent": 6.1,
    "ai_audience": 7.2,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 50.0,
    "reasoning": "The content focuses primarily on simplifying branching strategies (GitHub Flow, Release Flow) to improve engineering delivery speed and reduce risk. While delivery speed and value are related to Agile, the discussion remains at a technical workflow level rather than explicitly engaging with Agile Product Management practices such as backlog prioritization, stakeholder collaboration, or evidence-based product decision-making. There are almost no direct mentions of Agile or product management concepts; instead, the focus is on engineering team behaviors and DevOps best practices. The intent is moderately relevant as efficient delivery aids value maximization, but substantial depth and alignment with Agile Product Management topics are lacking.",
    "reasoning_summary": "This content centers on efficient branching strategies to streamline engineering delivery. While related to value delivery, it lacks direct connection to Agile Product Management practices, making its fit to the category moderate at best.",
    "level": "Tertiary"
  },
  "Agile Planning": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Planning",
    "calculated_at": "2025-05-16T20:29:49",
    "ai_confidence": 40.2,
    "ai_mentions": 0.7,
    "ai_alignment": 4.5,
    "ai_depth": 3.7,
    "ai_intent": 6.4,
    "ai_audience": 6.6,
    "ai_signal": 4.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 40.0,
    "reasoning": "The content is focused on simplifying branching strategies in software engineering teams. While this aligns with principles of fast delivery and minimizing process friction (which are consistent with Agile values), it does not explicitly address Agile Planning topics such as planning methods, backlog refinement, or iterative delivery frameworks like Scrum. There are no direct references to Agile Planning or related ceremonies or practices. The main intent is process improvement at a technical workflow level, appealing to practitioners but not centered on planning methodologies, which limits alignment and depth.",
    "reasoning_summary": "This article emphasizes workflow simplification for software teams, paralleling Agile values but lacking direct engagement with Agile Planning practices. It doesn't cover planning sessions, tools, or frameworks central to Agile Planning, resulting in low alignment and confidence for that category.",
    "level": "Ignored"
  },
  "Evidence Based Leadership": {
    "resourceId": "qwciWeifRRf",
    "category": "Evidence Based Leadership",
    "calculated_at": "2025-05-16T20:29:52",
    "ai_confidence": 17.75,
    "ai_mentions": 0.1,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 2.5,
    "ai_audience": 5.0,
    "ai_signal": 5.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on version control strategies (GitHub Flow, Release Flow), emphasizing simplicity in branching for faster delivery. There is no explicit discussion or mention of evidence-based leadership, empirical data, or metrics. The intent is to advocate for best engineering practices, not leadership decision-making or evidence-driven approaches. The audience is technical teams, not leaders evaluating evidence-based strategies, and minimal alignment exists with the specified category.",
    "reasoning_summary": "This content addresses branching and delivery strategies for engineering teams, with no focus on evidence-based leadership principles or data-driven decision-making, resulting in a low confidence rating for this category.",
    "level": "Ignored"
  },
  "Agile Values and Principles": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Values and Principles",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 22.65,
    "ai_mentions": 0.35,
    "ai_alignment": 2.5,
    "ai_depth": 2.2,
    "ai_intent": 2.6,
    "ai_audience": 6.0,
    "ai_signal": 9.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "While the content advocates for simplicity, faster delivery, and delivering value—concepts resonant with Agile—it never explicitly mentions Agile values, the Manifesto, or principles. Its focus is entirely on practical branching models (GitHub Flow/Release Flow), not the philosophy behind them. The argument for simplicity is technical/pragmatic rather than discussing the underlying Agile mindset. There's some implicit alignment (value delivery, reducing risk), but it lacks depth or conceptual engagement with Agile values or principles. The audience (engineering teams) overlaps somewhat with Agile audiences, and the content is mostly focused without much off-topic noise.",
    "reasoning_summary": "This content emphasizes practical simplification of workflow practices for faster, safer delivery but doesn’t reference Agile values, principles, or philosophy. It’s technically relevant yet falls short of deep conceptual alignment with Agile Values and Principles.",
    "level": "Ignored"
  },
  "Change Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Change Management",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 32.8,
    "ai_mentions": 0.2,
    "ai_alignment": 3.5,
    "ai_depth": 2.9,
    "ai_intent": 3.1,
    "ai_audience": 5.1,
    "ai_signal": 6.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 33.0,
    "reasoning": "The content discusses the value of simple branching strategies, focusing on reducing complexity in version control. While it hints at enabling faster delivery and minimizing risk, it does not explicitly or thoroughly discuss organizational change management, stakeholder engagement, leadership, or culture—core topics for this category. Its primary audience is technical teams rather than change management practitioners or organizational leaders. There are almost no direct mentions, and all alignment with Change Management is incidental rather than intentional.",
    "reasoning_summary": "This content centers on practical version control tips for technical teams, not Change Management principles. While streamlined branching may facilitate better flow and delivery, the discussion remains tactical, with little connection to organizational transformation, culture, or Agile change practices.",
    "level": "Ignored"
  },
  "Kanban": {
    "resourceId": "qwciWeifRRf",
    "category": "Kanban",
    "calculated_at": "2025-05-16T20:29:52",
    "ai_confidence": 11.6,
    "ai_mentions": 0.5,
    "ai_alignment": 0.7,
    "ai_depth": 0.8,
    "ai_intent": 1.2,
    "ai_audience": 3.9,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content focuses on version control branching strategies and discusses delivery flow. While 'flow' is a theme in Kanban, the discussion is tailored to Git branching models rather than Kanban's principles like Kanban boards, WIP limits, or flow management in a Kanban sense. There are neither explicit mentions of Kanban nor substantial discussion of its methodology or practices.",
    "reasoning_summary": "This piece covers streamlined branching strategies for better delivery but doesn't reference or delve into Kanban principles. Its focus on engineering workflow slightly overlaps with Kanban's interest in flow, but lacks direct or substantial Kanban alignment.",
    "level": "Ignored"
  },
  "Market Share": {
    "resourceId": "qwciWeifRRf",
    "category": "Market Share",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 6.2,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 1.2,
    "ai_audience": 2.3,
    "ai_signal": 1.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 6.0,
    "reasoning": "The content focuses on branching strategies for engineering teams, emphasizing simplicity, delivery speed, and risk reduction. There is no direct or indirect reference to market share, competitive positioning, or strategies to increase market presence. While practitioners seeking improved engineering practices may incidentally contribute to business outcomes, the guidance is purely operational and not geared toward increasing market share. The audience is technical, not market/competitive strategy, and the intent is process improvement, not competition.",
    "reasoning_summary": "This content is about software delivery efficiency through simplified branching, not about market share. It doesn't discuss competitive strategy, market positioning, or business growth, so fit with the 'Market Share' category is extremely low.",
    "level": "Ignored"
  },
  "Acceptance Test Driven Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Acceptance Test Driven Development",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 4.15,
    "ai_mentions": 0.0,
    "ai_alignment": 1.1,
    "ai_depth": 0.4,
    "ai_intent": 0.8,
    "ai_audience": 0.9,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content is entirely focused on branching strategies, specifically advocating for GitHub Flow and Release Flow to reduce complexity and increase productivity. There are zero mentions of Acceptance Test Driven Development, its principles, acceptance criteria, collaboration with stakeholders, or any ATDD-related tools or practices. The content is targeted to engineering teams, but not in a testing or acceptance criteria context. No penalties applied as the content is neither outdated nor actively critical of ATDD, but it has negligible alignment or relevance to the ATDD category.",
    "reasoning_summary": "This content is focused exclusively on branching and version control strategies, with no mention of ATDD concepts or practices, making it a poor fit for the Acceptance Test Driven Development category.",
    "level": "Ignored"
  },
  "Open Space Agile": {
    "resourceId": "qwciWeifRRf",
    "category": "Open Space Agile",
    "calculated_at": "2025-05-16T20:29:51",
    "ai_confidence": 7.6,
    "ai_mentions": 0.1,
    "ai_alignment": 1.2,
    "ai_depth": 0.8,
    "ai_intent": 1.3,
    "ai_audience": 2.2,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content focuses on branching strategies in software engineering, specifically recommending GitHub Flow and Release Flow to reduce complexity. There are no mentions or conceptual links to Open Space Agile principles, practices, or philosophy. The content is targeted at software engineering teams, not organizational change agents or Agile practitioners seeking to implement Open Space Agile. The intent is to optimize version control practices, not collaborative transformation or organizational agility. None of the key topics for the category are addressed.",
    "reasoning_summary": "This content is about streamlining branching strategies in software engineering, not about Open Space Agile or its organizational change principles, resulting in very low category relevance.",
    "level": "Ignored"
  },
  "Beta Codex": {
    "resourceId": "qwciWeifRRf",
    "category": "Beta Codex",
    "calculated_at": "2025-05-16T20:29:50",
    "ai_confidence": 18.08,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.3,
    "ai_intent": 3.1,
    "ai_audience": 5.8,
    "ai_signal": 5.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses narrowly on version control branching strategies, emphasizing simplicity and continuous delivery. There are indirect allusions to flow and reducing friction, which are valued in adaptive organizations, but there is no explicit discussion of BetaCodex principles such as decentralization, human-centric leadership, or organizational design. No direct mention of Beta Codex or its foundational theories is present, nor does the content explore deep organizational or cultural aspects. The intended audience is practitioners seeking practical engineering process advice, not strategists or change agents interested in organizational design per Beta Codex.",
    "reasoning_summary": "This content is about simplifying branching in software development, not about Beta Codex or organizational design. While the theme of reducing complexity aligns slightly with adaptive thinking, it doesn't discuss Beta Codex principles, intent, or audience, leading to a low confidence score.",
    "level": "Ignored"
  },
  "Deployment Strategies": {
    "resourceId": "qwciWeifRRf",
    "category": "Deployment Strategies",
    "calculated_at": "2025-05-16T20:29:52",
    "ai_confidence": 57.6,
    "ai_mentions": 2.6,
    "ai_alignment": 6.7,
    "ai_depth": 5.9,
    "ai_intent": 5.8,
    "ai_audience": 9.1,
    "ai_signal": 8.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content discusses the value of simple branching strategies (GitHub Flow, Release Flow) and relates them to speed, risk reduction, and consistent delivery. It mentions 'continuous deployment' but largely focuses on version control models rather than specific deployment methodologies such as blue-green deployments, canary releases, or feature toggles. The intent aims at improving delivery via branching, closely touching on deployment best practices, especially in relation to continuous deployment and risk management. However, the core discussion remains at the source control level, making the connection to deployment strategies indirect. Most of the content is highly relevant for technical practitioner audiences, with strong signal and actionable recommendations. No penalties were applied as there is no outdatedness or contradictory tone.",
    "reasoning_summary": "The content ties branching simplicity to delivery speed and risk reduction, with nods to continuous deployment, but remains focused on source control rather than deployment methodologies. It's relevant for practitioners but only partially covers deployment strategies, warranting a moderate confidence score.",
    "level": "Tertiary"
  },
  "DevOps": {
    "resourceId": "qwciWeifRRf",
    "category": "DevOps",
    "calculated_at": "2025-05-16T20:29:53",
    "ai_confidence": 63.45,
    "ai_mentions": 1.3,
    "ai_alignment": 7.6,
    "ai_depth": 6.6,
    "ai_intent": 7.2,
    "ai_audience": 7.1,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 63.0,
    "reasoning": "The content never uses the term 'DevOps' or refers to its philosophy, resulting in a low Direct Mentions score. However, its strong focus on optimizing branching to improve delivery speed and reduce risk strongly aligns with DevOps principles of flow efficiency, simplicity, and minimizing waste. The discussion is moderately deep, citing concrete strategies like GitHub Flow and Release Flow, and directly connects the approach to core DevOps outcomes (fast delivery, reduced risk, continuous value). The main intent is practical, aimed at technical practitioners—matching the typical DevOps audience. Signal-to-noise is high as the content is focused and succinct, with little unrelated information. No penalties are applied, as the practices are current and the tone is constructive.",
    "reasoning_summary": "Though 'DevOps' isn't directly named, this content aligns well with DevOps values by advocating for simplified branching that increases flow and reduces risk. The advice is practical, moderately explored, and well-suited for an engineering audience focused on continuous delivery.",
    "level": "Secondary"
  },
  "Team Motivation": {
    "resourceId": "qwciWeifRRf",
    "category": "Team Motivation",
    "calculated_at": "2025-05-16T20:29:54",
    "ai_confidence": 30.2,
    "ai_mentions": 0.5,
    "ai_alignment": 3.9,
    "ai_depth": 2.5,
    "ai_intent": 2.8,
    "ai_audience": 6.5,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 30.0,
    "reasoning": "The content focuses on technical aspects of branching strategy, not directly on motivating agile teams. While better workflows may indirectly affect team morale or performance, there is almost no explicit discussion, depth, or alignment with psychological or social motivators. The intended audience is practitioners but the topic is primarily about process efficiency. Minimal mention, alignment, and intent around actual team motivation.",
    "reasoning_summary": "This content mainly addresses technical practices around branching, offering only an indirect link to team performance. It doesn't meaningfully explore motivation, engagement, or team dynamics, so fits poorly under 'Team Motivation.'",
    "level": "Ignored"
  },
  "Scrum Team": {
    "resourceId": "qwciWeifRRf",
    "category": "Scrum Team",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 11.16,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.6,
    "ai_intent": 0.8,
    "ai_audience": 6.4,
    "ai_signal": 6.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content does not mention 'Scrum Team' or related accountabilities. It talks about code branching strategies in software teams generally and focuses on engineering workflow efficiency. There is no discussion of the Scrum Team's structure, roles, responsibilities, or accountability as defined in Scrum. The relevant audience is software practitioners, overlapping with Scrum teams, but the topic is not exclusive or tailored to Scrum Team accountability, and the main themes fall outside the provided classification definition.",
    "reasoning_summary": "This content focuses on engineering team branching strategies and workflow, not the purpose, structure, or accountability of a Scrum Team. There's no direct reference or deep alignment with the Scrum Team category.",
    "level": "Ignored"
  },
  "Systems Thinking": {
    "resourceId": "qwciWeifRRf",
    "category": "Systems Thinking",
    "calculated_at": "2025-05-16T20:29:57",
    "ai_confidence": 17.9,
    "ai_mentions": 0.2,
    "ai_alignment": 2.4,
    "ai_depth": 2.0,
    "ai_intent": 2.8,
    "ai_audience": 5.0,
    "ai_signal": 4.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content is focused on branching strategies and optimizing for flow in software delivery. There are no explicit mentions of Systems Thinking, nor are foundational principles, frameworks, or holistic analysis of systems discussed. While the idea of simplifying processes to reduce risk may tangentially relate to systems optimization, the content falls short of conceptual alignment or depth regarding Systems Thinking. Its main audience may overlap (technical teams), and it's generally on-topic for dev practices, but not for Systems Thinking.",
    "reasoning_summary": "This content centers on streamlining branching strategies for software teams, with no direct mention or in-depth discussion of Systems Thinking principles. Its purpose and depth don't align with the category, so confidence is very low.",
    "level": "Ignored"
  },
  "Working Agreements": {
    "resourceId": "qwciWeifRRf",
    "category": "Working Agreements",
    "calculated_at": "2025-05-16T20:29:57",
    "ai_confidence": 20.65,
    "ai_mentions": 0.8,
    "ai_alignment": 2.2,
    "ai_depth": 1.9,
    "ai_intent": 3.0,
    "ai_audience": 7.3,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 21.0,
    "reasoning": "The content focuses on branching strategies in version control, highlighting simplicity over complexity. While it addresses norms around collaboration within engineering teams, it neither directly mentions 'working agreements' nor delves into creating or adapting such agreements. The primary theme is engineering best practices, not establishing team norms or explicit agreements. The audience—technical teams—is partially aligned, but the content lacks depth and explicit relevance to the 'Working Agreements' category.",
    "reasoning_summary": "This content advises engineering teams to simplify branching strategies but doesn't directly address working agreements or team norms. It targets a technical audience and touches on collaboration, yet isn't a true fit for the 'Working Agreements' category.",
    "level": "Ignored"
  },
  "Application Lifecycle Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Application Lifecycle Management",
    "calculated_at": "2025-05-16T20:29:55",
    "ai_confidence": 54.74,
    "ai_mentions": 1.2,
    "ai_alignment": 7.3,
    "ai_depth": 5.35,
    "ai_intent": 7.1,
    "ai_audience": 8.3,
    "ai_signal": 7.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content focuses specifically on version control branching strategies such as GitHub Flow and Release Flow and advocates for simplicity to accelerate delivery and reduce risk. While these practices relate to development productivity—a part of ALM—they focus narrowly on a technical workflow and do not broadly address governance, lifecycle stages, or holistic ALM practices. Still, they have indirect connection through risk mitigation and faster releases, which are relevant to ALM outcomes and metrics. There are no direct mentions of ALM, and discussion remains tactical, not conceptual. The audience (engineering teams) overlaps with ALM stakeholders, but the piece does not cover the broad lifecycle, change management, or governance. Thus, conceptual alignment and audience alignment score higher, but depth and mentions remain modest.",
    "reasoning_summary": "This content is most relevant to engineering practices, focusing on simplifying branching strategies for delivery speed and risk reduction. While these themes are tangentially related to ALM objectives, the discussion does not holistically address the broader lifecycle or governance aspects key to Application Lifecycle Management.",
    "level": "Tertiary"
  },
  "Sprint Review": {
    "resourceId": "qwciWeifRRf",
    "category": "Sprint Review",
    "calculated_at": "2025-05-16T20:30:00",
    "ai_confidence": 2.1,
    "ai_mentions": 0.2,
    "ai_alignment": 0.5,
    "ai_depth": 0.5,
    "ai_intent": 0.5,
    "ai_audience": 0.3,
    "ai_signal": 0.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 2.0,
    "reasoning": "The content discusses branching strategies and promotes simpler approaches like GitHub Flow and Release Flow to improve delivery speed and reduce risk. There are no direct or indirect references to Sprint Review or its associated concepts. The content is focused on engineering practices regarding version control, and does not align with the event, intent, participants, or processes of a Sprint Review in Scrum. The audience is software engineers interested in version control, not specifically Scrum practitioners or stakeholders involved in Sprint Reviews.",
    "reasoning_summary": "This content is about branching strategies in version control and does not pertain to Sprint Review events or practices. It lacks relevance, explicit mentions, or conceptual ties to the category, resulting in a very low confidence score.",
    "level": "Ignored"
  },
  "Agile Leadership": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Leadership",
    "calculated_at": "2025-05-16T20:30:02",
    "ai_confidence": 15.536,
    "ai_mentions": 0.2,
    "ai_alignment": 1.7,
    "ai_depth": 2.0,
    "ai_intent": 2.1,
    "ai_audience": 4.6,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on technical branching strategies and advocates for simplicity in workflow, with no reference to leadership roles, empowerment, or cultural transformation. Alignment to Agile Leadership is incidental at best; while valuing flow is an Agile theme, there is no explicit or implied discussion on leadership responsibilities, team empowerment, or organizational culture. The intended audience appears to be practitioners or engineers, rather than leaders. Mention of Agile leadership is entirely absent. No penalties applied; content is current and on-topic for technical guidance, but not for leadership.",
    "reasoning_summary": "This piece is about simplifying branching strategies for better workflow but doesn't discuss leadership roles, empowerment, or Agile cultural change. Its relevance to Agile Leadership is minimal, focusing on developer practices rather than leadership themes.",
    "level": "Ignored"
  },
  "Test Automation": {
    "resourceId": "qwciWeifRRf",
    "category": "Test Automation",
    "calculated_at": "2025-05-16T20:29:53",
    "ai_confidence": 10.06,
    "ai_mentions": 0.0,
    "ai_alignment": 1.0,
    "ai_depth": 1.1,
    "ai_intent": 1.2,
    "ai_audience": 3.7,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 10.0,
    "reasoning": "The content exclusively concerns branching strategies in version control systems, focusing on concepts like GitHub Flow and Release Flow for software delivery. There is no mention of test automation, its tools, its frameworks, or its principles. The conceptual alignment with test automation is minimal, as the closest potential overlap is that simpler branching may indirectly support automation pipelines, but this is neither explicit nor discussed. Audience is technical, but not specifically targeting test automation practitioners, further lowering fit. No outdated or contradictory elements were found.",
    "reasoning_summary": "This content focuses on version control and branching simplification, not test automation. It lacks direct mentions, thematic alignment, or practical discussion of automated testing, thus it fits the 'Test Automation' category very poorly.",
    "level": "Ignored"
  },
  "Deployment Frequency": {
    "resourceId": "qwciWeifRRf",
    "category": "Deployment Frequency",
    "calculated_at": "2025-05-16T20:29:55",
    "ai_confidence": 68.65,
    "ai_mentions": 3.1,
    "ai_alignment": 7.7,
    "ai_depth": 6.2,
    "ai_intent": 7.2,
    "ai_audience": 8.3,
    "ai_signal": 7.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 69.0,
    "reasoning": "The content discusses how simpler branching strategies (like GitHub Flow and Release Flow) remove friction, enabling faster and more consistent delivery. While 'deployment frequency' is not named directly, it is strongly implied through phrases like 'focus on flow,' 'deliver faster,' and 'start shipping.' The depth is moderate, as the piece focuses on principles and best practices but stops short of deep exploration or metrics. Audience fit is strong—it targets engineering teams and DevOps practitioners. The signal is high, though the focus is slightly more on delivery flow than explicit deployment intervals. No elements are outdated or critical of the category's framing, so no penalties are applied.",
    "reasoning_summary": "This content encourages simplified branching to boost delivery speed and reduce friction, aligning with deployment frequency goals. While it doesn't name the category outright, its advice and examples support more frequent releases, making it a mostly strong but not perfect fit.",
    "level": "Secondary"
  },
  "Site Reliability Engineering": {
    "resourceId": "qwciWeifRRf",
    "category": "Site Reliability Engineering",
    "calculated_at": "2025-05-16T20:29:55",
    "ai_confidence": 17.35,
    "ai_mentions": 0.2,
    "ai_alignment": 2.6,
    "ai_depth": 2.3,
    "ai_intent": 2.2,
    "ai_audience": 6.2,
    "ai_signal": 2.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 17.0,
    "reasoning": "The content focuses on branching strategies and version control, specifically advocating simplicity (GitHub Flow/Release Flow) to enhance delivery speed and reduce risk. While there is some thematic overlap (risk reduction, streamlined delivery), it doesn't directly address the principles, practices, or terminology of Site Reliability Engineering (SRE), such as monitoring, automation for reliability, SLOs, SLIs, or incident response. No explicit references to SRE or core SRE concerns are present, with content primarily relevant to general software development and DevOps. Thus, the alignment and depth scores are low; audience is moderately aligned (software engineers), but overall, the content is not strongly relevant to SRE.",
    "reasoning_summary": "This content emphasizes simplifying branching strategies for better delivery but does not discuss Site Reliability Engineering principles or practices. Its focus is on software development process, not reliability engineering, leading to a low confidence fit.",
    "level": "Ignored"
  },
  "Forecasting": {
    "resourceId": "qwciWeifRRf",
    "category": "Forecasting",
    "calculated_at": "2025-05-16T20:29:57",
    "ai_confidence": 16.13,
    "ai_mentions": 0.2,
    "ai_alignment": 2.7,
    "ai_depth": 1.9,
    "ai_intent": 2.8,
    "ai_audience": 4.2,
    "ai_signal": 2.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 16.0,
    "reasoning": "The content focuses on branching strategies for version control, advocating for simplicity to enable faster delivery and reduced risk. While there are implicit references to delivery speed and risk reduction, it does not discuss forecasting methods, the use of empirical data for prediction, or specific forecasting practices within Agile or Scrum. There are no direct mentions of forecasting, nor are key topics such as velocity, burn-down charts, or metrics discussed. Thus, alignment and depth are both very limited.",
    "reasoning_summary": "This content centers on simplifying branching strategies in development, not on forecasting. While it touches on delivery and risk, it lacks any discussion of forecasting methodologies, data-driven planning, or related Agile forecasting practices. Confidence in this fit is very low.",
    "level": "Ignored"
  },
  "Azure Boards": {
    "resourceId": "qwciWeifRRf",
    "category": "Azure Boards",
    "calculated_at": "2025-05-16T20:29:59",
    "ai_confidence": 7.7,
    "ai_mentions": 0.2,
    "ai_alignment": 0.9,
    "ai_depth": 0.5,
    "ai_intent": 1.1,
    "ai_audience": 2.7,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content does not directly mention Azure Boards or discuss any of its core features, best practices, or integration into Agile project management. Instead, it focuses entirely on source control branching strategies (GitHub Flow, Release Flow), which are related to version control, not to Agile project planning, tracking, or board management. There’s no discussion of work items, sprints, team collaboration on boards, or any reporting/analytics topics relevant to Azure Boards. The target audience—engineering teams—could overlap but the topic is not aligned with the intended function or discussion for Azure Boards. The entire content is off-topic for the category, leading to extremely low scores across all dimensions except for a mild audience overlap. No penalties were necessary as it isn't outdated or undermining, just unrelated.",
    "reasoning_summary": "This content is about version control and branching strategy, not Azure Boards or Agile project tracking. It lacks relevant mentions or alignment with Azure Boards, making it an extremely poor fit for the category.",
    "level": "Ignored"
  },
  "Agile Philosophy": {
    "resourceId": "qwciWeifRRf",
    "category": "Agile Philosophy",
    "calculated_at": "2025-05-16T20:29:59",
    "ai_confidence": 45.68,
    "ai_mentions": 0.8,
    "ai_alignment": 4.6,
    "ai_depth": 3.7,
    "ai_intent": 5.1,
    "ai_audience": 7.6,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 46.0,
    "reasoning": "The content focuses chiefly on keeping branching strategies simple and efficient, referencing delivery of value, risk reduction, and increased flow. These concepts partly align with Agile principles, such as valuing simplicity, fast delivery, and adaptability, but there is no explicit mention of the Agile Philosophy, its principles, or values. The discussion centers on practical engineering practices (GitHub Flow, Release Flow) without contextualizing them in terms of Agile as a mindset or organizational cultural shift. While some Agile-aligned outcomes (value delivery, fast feedback) are touched upon, the depth is limited and audience is technical/engineering teams. No penalties are warranted, as the tone and framing do not contradict the category.",
    "reasoning_summary": "This content discusses simplifying branching strategies for better delivery, indirectly reflecting Agile values like simplicity and value delivery. However, it doesn't directly explore Agile Philosophy or its foundational principles, so alignment and depth are moderate.",
    "level": "Tertiary"
  },
  "Azure Repos": {
    "resourceId": "qwciWeifRRf",
    "category": "Azure Repos",
    "calculated_at": "2025-05-16T20:29:54",
    "ai_confidence": 23.275,
    "ai_mentions": 1.2,
    "ai_alignment": 2.6,
    "ai_depth": 1.8,
    "ai_intent": 2.2,
    "ai_audience": 7.1,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content discusses general branching strategies—GitHub Flow and Release Flow—without directly referencing Azure Repos or any of its platform-specific features. While branching is a relevant concept in Azure Repos, the discussion is wholly platform-agnostic and omits mention of Repos, Git, or TFVC within Azure DevOps. The audience is technical (software teams), but the message applies equally to any version control. There is no depth into Azure Repos best practices, policies, or integrations. As such, the content has low alignment and relevance for the 'Azure Repos' category.",
    "reasoning_summary": "This content focuses on general branching strategies like GitHub Flow and Release Flow, without directly referencing or delving into Azure Repos. While related conceptually, it's too generic and lacks platform-specific insight, resulting in low category fit.",
    "level": "Ignored"
  },
  "Value Stream Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Value Stream Management",
    "calculated_at": "2025-05-16T20:29:55",
    "ai_confidence": 33.85,
    "ai_mentions": 1.2,
    "ai_alignment": 3.9,
    "ai_depth": 3.5,
    "ai_intent": 4.2,
    "ai_audience": 6.1,
    "ai_signal": 5.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 34.0,
    "reasoning": "The content discusses simplifying branching strategies (GitHub Flow, Release Flow) to improve delivery speed and reduce risk, tying these outcomes loosely to value delivery. However, it never directly mentions Value Stream Management or its unique frameworks, principles, or metrics. Alignment is partial, as it focusses on technical practices that could support value streams but does not discuss value stream mapping, waste identification, or organizational alignment. The depth is superficial, focused mainly on branching, with minor references to 'flow' and 'delivery of value.' Audience is software engineering-heavy, not explicitly value stream managers, strategists, or executives. Intent is to advocate for best engineering practices, which is adjacent but not central to Value Stream Management. Signal-to-noise ratio is moderate—the advice is clear but only tangential to the classification.",
    "reasoning_summary": "While the content encourages practices that could support better flow, it stays focused on version control rather than Value Stream Management principles or frameworks. The direct fit is peripheral, resulting in low confidence for classification under this category.",
    "level": "Ignored"
  },
  "Release Management": {
    "resourceId": "qwciWeifRRf",
    "category": "Release Management",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 78.75,
    "ai_mentions": 6.2,
    "ai_alignment": 8.7,
    "ai_depth": 7.9,
    "ai_intent": 8.3,
    "ai_audience": 7.1,
    "ai_signal": 8.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 79.0,
    "reasoning": "The content centers on simplifying branching strategies such as GitHub Flow and Release Flow, explicitly naming 'Release Flow' and discussing practices that enhance reliable, efficient software delivery. It strongly connects to version control and release scheduling, both pivotal to Release Management. The advice is pragmatic and aimed at engineering and technical teams, reinforcing intent and audience fit. The post, though concise, offers concrete best practices and highlights risk reduction—critical to the category—without drifting off-topic or relying on outdated concepts.",
    "reasoning_summary": "This content ties closely to Release Management by directly addressing branching strategies like Release Flow that influence risk, speed, and reliability in software releases. Its advice is relevant, focused, and useful for technical teams looking to streamline their release process.",
    "level": "Secondary"
  },
  "Business Agility": {
    "resourceId": "qwciWeifRRf",
    "category": "Business Agility",
    "calculated_at": "2025-05-16T20:29:57",
    "ai_confidence": 51.95,
    "ai_mentions": 1.7,
    "ai_alignment": 4.9,
    "ai_depth": 3.7,
    "ai_intent": 4.3,
    "ai_audience": 6.6,
    "ai_signal": 5.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 52.0,
    "reasoning": "The content discusses simplifying branching strategies (GitHub Flow, Release Flow) to enhance team delivery speed and reduce risks, which can support aspects of business agility. However, there are no direct mentions of 'business agility', agile methodologies, or related principles. The primary focus is technical (version control practices), only tangentially aligned with business agility. Depth is limited to best practices advice rather than broader agile principles or organisational transformation. The audience appears to be engineering teams that could benefit indirectly from agility, but content isn’t tailored to business agility practitioners or strategists.",
    "reasoning_summary": "This content gives practical advice on branching strategies to boost delivery speed, which aligns to some extent with business agility principles. However, it lacks direct references to business agility and focuses more on technical practices than broader agile strategies. Only an indirect fit for the category.",
    "level": "Tertiary"
  },
  "Product Delivery": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Delivery",
    "calculated_at": "2025-05-16T20:29:59",
    "ai_confidence": 80.05,
    "ai_mentions": 6.3,
    "ai_alignment": 8.6,
    "ai_depth": 7.9,
    "ai_intent": 8.2,
    "ai_audience": 7.6,
    "ai_signal": 8.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 80.0,
    "reasoning": "The content directly connects branching strategies to the speed and consistency of product delivery, referencing concepts such as GitHub Flow and Release Flow. It describes tangible practices (short-lived branches, CI/CD style merging, main-branch first fixes) and their impact on delivery, but the discussion focuses on one aspect (version control) rather than the entire delivery lifecycle. The audience is technical teams who are decision-makers for delivery process. No outdated info or negative tone required a penalty.",
    "reasoning_summary": "This content closely ties streamlined branching strategies to more effective product delivery, providing practical recommendations for engineering teams. While focused primarily on version control, its alignment with delivery performance and targeted advice makes it a strong fit for the category.",
    "level": "Secondary"
  },
  "Cycle Time": {
    "resourceId": "qwciWeifRRf",
    "category": "Cycle Time",
    "calculated_at": "2025-05-16T20:30:02",
    "ai_confidence": 55.17,
    "ai_mentions": 1.7,
    "ai_alignment": 6.6,
    "ai_depth": 5.8,
    "ai_intent": 7.3,
    "ai_audience": 7.1,
    "ai_signal": 7.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 55.0,
    "reasoning": "The content does not directly mention 'Cycle Time' but conceptually aligns by advocating for simpler branching strategies to enable faster delivery, reduce risk, and prevent workflow friction. The emphasis on flow and speed of delivery maps to cycle time's core meaning, yet details on measurement, analysis, or direct discussion of Cycle Time are absent. Intent is strong and relevant, targeting practitioners interested in workflow efficiency. Overall, while not explicit, the focus on practices supporting shorter times from work start to finish situates this as moderately aligned.",
    "reasoning_summary": "While Cycle Time isn’t named, the piece connects through ideas on speeding delivery and reducing branching complexity, which support faster workflow completion. It targets relevant practitioners and sticks mostly to efficiency, but lacks depth or technical Cycle Time specifics, resulting in moderate confidence.",
    "level": "Tertiary"
  },
  "Pragmatic Thinking": {
    "resourceId": "qwciWeifRRf",
    "category": "Pragmatic Thinking",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 93.15,
    "ai_mentions": 7.6,
    "ai_alignment": 9.4,
    "ai_depth": 8.9,
    "ai_intent": 9.3,
    "ai_audience": 9.2,
    "ai_signal": 9.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 93.0,
    "reasoning": "The content directly addresses pragmatic, experience-based approaches to version control, advocating for practical, proven branching models over unnecessary complexity. It emphasizes real-world decision-making, adaptability, and outcomes, aligning strongly with the principles of Pragmatic Thinking, especially within DevOps and Agile. The focus is on methods for efficiency, risk reduction, and value delivery, and the intended audience is clearly practitioners in Agile/DevOps contexts, maximizing relevance and signal.",
    "reasoning_summary": "This content exemplifies Pragmatic Thinking by promoting simple, proven version control strategies that enhance delivery and minimize risk. It's highly practical, directly relevant to Agile and DevOps practitioners, and rooted in real-world effectiveness—not theory.",
    "level": "Primary"
  },
  "Unrealised Value": {
    "resourceId": "qwciWeifRRf",
    "category": "Unrealised Value",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 8.97,
    "ai_mentions": 0.3,
    "ai_alignment": 1.8,
    "ai_depth": 1.0,
    "ai_intent": 1.2,
    "ai_audience": 2.7,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 9.0,
    "reasoning": "The content discusses branching strategies in software engineering, focusing on simplicity to enable faster delivery and reduce risks. There is no explicit mention of 'Unrealised Value,' nor does it analyze untapped potential or innovation opportunities within Evidence-Based Management. The main focus is operational (best practices in source control) rather than on identifying or measuring unrealised value. While delivering faster can lead to capturing value efficiently, the content does not assess or explore Unrealised Value concepts, frameworks, or strategic considerations per the category's definition.",
    "reasoning_summary": "This content is about optimizing branching strategies for efficiency, not about identifying or measuring unrealised value. It lacks alignment with the 'Unrealised Value' category, with only a minor indirect connection through its focus on delivery improvements.",
    "level": "Ignored"
  },
  "Lean Product Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Lean Product Development",
    "calculated_at": "2025-05-16T20:29:58",
    "ai_confidence": 53.59,
    "ai_mentions": 1.3,
    "ai_alignment": 6.8,
    "ai_depth": 3.7,
    "ai_intent": 5.9,
    "ai_audience": 7.4,
    "ai_signal": 8.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 54.0,
    "reasoning": "The content focuses on simplifying branching strategies (e.g., GitHub Flow, Release Flow) to improve software delivery. While it emphasizes reducing complexity and increasing value delivery—ideas that overlap with Lean principles—it never explicitly mentions Lean Product Development or its core concepts (waste, continuous learning, value streams). The main theme is software engineering process efficiency rather than Lean Product Development as a whole. Discussion depth is moderate but does not explore Lean tools or frameworks. The target audience is practitioners who might benefit from Lean thinking, and relevance stays strong throughout, but the absence of direct Lean connection and lack of deeper discussion on Lean-specific practices limit the confidence.",
    "reasoning_summary": "The piece encourages process simplification and faster value delivery, echoing Lean ideas, but doesn't mention or deeply explore Lean Product Development. While relevant and efficient, it's mainly about engineering workflow, so the fit is moderate rather than strong.",
    "level": "Tertiary"
  },
  "Behaviour Driven Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Behaviour Driven Development",
    "calculated_at": "2025-05-16T20:30:00",
    "ai_confidence": 7.2,
    "ai_mentions": 0.2,
    "ai_alignment": 0.7,
    "ai_depth": 0.5,
    "ai_intent": 1.0,
    "ai_audience": 2.6,
    "ai_signal": 0.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 7.0,
    "reasoning": "The content is entirely about simplification of branching strategies, specifically advocating for GitHub Flow and Release Flow, and focuses on software delivery speed and risk reduction. There is no direct or indirect reference to Behaviour Driven Development (BDD), nor is there discussion of collaboration, user stories, acceptance criteria, or BDD tools. The audience is technical, but not in the context of BDD. Signal to noise is low for BDD. No penalties applied as content is recent and not critical of BDD.",
    "reasoning_summary": "This piece centers on branching strategies and efficient version control—not BDD principles. It lacks both direct references and conceptual overlap with BDD, making its relevance to the category virtually nonexistent.",
    "level": "Ignored"
  },
  "Definition of Ready": {
    "resourceId": "qwciWeifRRf",
    "category": "Definition of Ready",
    "calculated_at": "2025-05-16T20:30:03",
    "ai_confidence": 3.5,
    "ai_mentions": 0.1,
    "ai_alignment": 0.7,
    "ai_depth": 0.7,
    "ai_intent": 1.1,
    "ai_audience": 0.7,
    "ai_signal": 0.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 4.0,
    "reasoning": "The content focuses exclusively on branching strategies and the benefits of simpler version control practices such as GitHub Flow and Release Flow. There is no mention of Definition of Ready, its criteria, its impact on backlog refinement, sprint planning, or any associated Agile practices. None of the key concepts of DoR are addressed or even hinted at. The content’s target audience (engineering/DevOps) is somewhat adjacent but not directly aligned with those seeking information on backlog readiness in Agile. Given all evaluated dimensions, this content is almost entirely off-category, resulting in a very low confidence score.",
    "reasoning_summary": "This content centers on branching strategy best practices, not readiness criteria or backlog refinement. It doesn't reference Definition of Ready or associated Agile processes, so its fit for that category is extremely low.",
    "level": "Ignored"
  },
  "Professional Scrum": {
    "resourceId": "qwciWeifRRf",
    "category": "Professional Scrum",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 41.35,
    "ai_mentions": 0.2,
    "ai_alignment": 5.6,
    "ai_depth": 4.7,
    "ai_intent": 5.1,
    "ai_audience": 4.3,
    "ai_signal": 6.3,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 41.0,
    "reasoning": "The content focuses on simplifying branching strategies for faster delivery and consistent value—themes somewhat aligned with Professional Scrum’s emphasis on removing impediments and prioritizing value. However, it never explicitly discusses Professional Scrum, its values, or its ethos. The advice targets engineering teams broadly, not Scrum practitioners specifically, and does not engage in empiricism, Scrum roles, or accountability. It lacks depth on Professional Scrum principles, leading to moderate scores for alignment, depth, and intent.",
    "reasoning_summary": "This piece gives practical advice on branching simplification for value delivery, lightly touching themes compatible with Professional Scrum but never naming or engaging its ethos, professionalism, or core principles explicitly. Its relevance is moderate but non-specific.",
    "level": "Tertiary"
  },
  "Accountability": {
    "resourceId": "qwciWeifRRf",
    "category": "Accountability",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 18.44,
    "ai_mentions": 0.4,
    "ai_alignment": 2.3,
    "ai_depth": 2.8,
    "ai_intent": 2.1,
    "ai_audience": 5.5,
    "ai_signal": 4.55,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses on branching strategies and their impact on delivery speed and risk reduction, highlighting engineering team practices like GitHub Flow. There are no direct mentions of accountability, nor does the content explore outcome ownership, role-based accountabilities, or structural organizational constructs related to accountability. The alignment and depth relative to the 'Accountability' category are weak, with minimal overlap: the emphasis here is on process optimization, not on clarifying or delineating ownership of outcomes or addressing explicit accountability structures. The audience aligns moderately, as technical practitioners may be interested in both workflow processes and accountability, but nothing directly connects these strategies to the core definition or key topics outlined for the 'Accountability' category.",
    "reasoning_summary": "This content is mainly about process improvement in branching strategies, lacking explicit discussion or core themes of accountability. While relevant to engineers, it doesn't address outcome ownership or structural accountabilities, resulting in low confidence for this category.",
    "level": "Ignored"
  },
  "Agnostic Agile": {
    "resourceId": "qwciWeifRRf",
    "category": "Agnostic Agile",
    "calculated_at": "2025-05-16T20:29:58",
    "ai_confidence": 19.4,
    "ai_mentions": 0.0,
    "ai_alignment": 2.3,
    "ai_depth": 2.0,
    "ai_intent": 3.1,
    "ai_audience": 6.4,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 19.0,
    "reasoning": "The content is focused exclusively on branching strategy and version control simplification, advocating GitHub Flow and Release Flow. There are no direct mentions of Agnostic Agile, nor is there discussion of its principles, ethics, context-driven adaptation, or critical comparisons with frameworks. While the message aligns in spirit with valuing delivery over bureaucracy, it does not substantively address Agnostic Agile-specific concepts, philosophy, or audience. The audience may partially overlap with agile practitioners, but core category themes are missing.",
    "reasoning_summary": "This content argues for simpler branching strategies and faster delivery but doesn’t reference or discuss Agnostic Agile principles, thought leaders, or ethical agility. It’s relevant to agile teams, but not to the Agnostic Agile category specifically.",
    "level": "Ignored"
  },
  "Lead Time": {
    "resourceId": "qwciWeifRRf",
    "category": "Lead Time",
    "calculated_at": "2025-05-16T20:29:59",
    "ai_confidence": 44.834,
    "ai_mentions": 1.2,
    "ai_alignment": 4.7,
    "ai_depth": 4.4,
    "ai_intent": 5.2,
    "ai_audience": 5.9,
    "ai_signal": 4.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 45.0,
    "reasoning": "The content emphasizes reducing workflow friction via simpler branching strategies, highlighting faster delivery as a benefit. However, 'Lead Time' is never directly mentioned; the link to it is indirect, as faster delivery is a desired outcome of low Lead Time. There is no depth on defining, measuring, or optimizing Lead Time specifically, nor references to metrics, dashboards, or Cycle Time. The main focus is practical version control advice rather than a deep Lead Time discussion.",
    "reasoning_summary": "While the article advocates for efficiency that could lower Lead Time, it never names or details the metric. Its strong focus is on branching simplicity, not observability or direct Lead Time measurement, so the fit with the category is moderate.",
    "level": "Tertiary"
  },
  "Model": {
    "resourceId": "qwciWeifRRf",
    "category": "Model",
    "calculated_at": "2025-05-16T20:30:00",
    "ai_confidence": 57.95,
    "ai_mentions": 6.6,
    "ai_alignment": 7.3,
    "ai_depth": 5.9,
    "ai_intent": 7.1,
    "ai_audience": 6.7,
    "ai_signal": 6.4,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 58.0,
    "reasoning": "The content explicitly references 'branching models' and contrasts GitHub Flow and Release Flow, two recognized version control models. It briefly explains their principles and advocates for simplicity, aligning with the category's focus on how models guide decision-making and enable agility. However, the discussion is somewhat surface-level and lacks deep analysis of models' systemic impact or theoretical underpinnings, thus limiting depth. The primary audience (developers and engineering leaders) matches the category, and the tone avoids filler or tangents. No penalties applied, as the content is current and not critical or satirical.",
    "reasoning_summary": "This content discusses branching models like GitHub Flow and Release Flow, encouraging simplicity for faster delivery. While it aligns with the 'Model' category by addressing how models affect team performance, its analysis is surface-level rather than deeply conceptual, supporting a moderate confidence score.",
    "level": "Tertiary"
  },
  "Organisational Change": {
    "resourceId": "qwciWeifRRf",
    "category": "Organisational Change",
    "calculated_at": "2025-05-16T20:30:02",
    "ai_confidence": 23.321,
    "ai_mentions": 0.3,
    "ai_alignment": 2.5,
    "ai_depth": 2.8,
    "ai_intent": 2.7,
    "ai_audience": 7.3,
    "ai_signal": 3.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 23.0,
    "reasoning": "The content focuses on best practices for software branching strategies (GitHub Flow, Release Flow), with an emphasis on simplicity and faster delivery. While it hints at reducing complexity and improving team performance, it does not discuss organisational change frameworks, methodologies, or leadership. No explicit or frequent mention of organisational change or agile transformation. The depth is low given it only explores technical workflow, not broader organisational processes.",
    "reasoning_summary": "This content primarily discusses technical branching strategies for software teams, lacking substantial focus on organisational change principles or frameworks. It is targeted at practitioners, not strategists, and offers little alignment or depth regarding agility or change management.",
    "level": "Ignored"
  },
  "Remote Working": {
    "resourceId": "qwciWeifRRf",
    "category": "Remote Working",
    "calculated_at": "2025-05-16T20:30:03",
    "ai_confidence": 7.85,
    "ai_mentions": 0.2,
    "ai_alignment": 0.9,
    "ai_depth": 0.6,
    "ai_intent": 1.0,
    "ai_audience": 2.0,
    "ai_signal": 2.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 8.0,
    "reasoning": "The content is about simplifying branching strategies in software development, specifically referencing GitHub Flow and Release Flow. There is no explicit mention or discussion of remote working, distributed teams, or Agile remote practices. The main focus is version control and workflow efficiency, not remote work challenges or solutions. Thus, alignment, depth, and audience scores are very low, and there is almost no direct mention or purposeful fit for the Remote Working category. Confidence is extremely low accordingly.",
    "reasoning_summary": "This piece discusses code branching strategies, not remote working. It doesn't address remote Agile practices, tools, or challenges, making it a poor fit for the Remote Working category.",
    "level": "Ignored"
  },
  "Capability": {
    "resourceId": "qwciWeifRRf",
    "category": "Capability",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 31.15,
    "ai_mentions": 0.3,
    "ai_alignment": 3.7,
    "ai_depth": 2.9,
    "ai_intent": 4.4,
    "ai_audience": 7.5,
    "ai_signal": 3.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 31.0,
    "reasoning": "The content centers on simplifying branching strategies and highlights the benefits of GitHub Flow and Release Flow. These are specific version control techniques rather than enduring organisational capabilities. While there’s a nod to enabling value delivery and reducing risk, the discussion is about tools and tactics, not about cultivating lasting competencies or cross-cutting organisational capability. No direct mentions are present, conceptual alignment is partial, and depth on Capability as defined is limited.",
    "reasoning_summary": "While the topic promotes efficient delivery, its focus is on branching tactics, not enduring capabilities. It aligns only partially with the Capability category, earning a low-moderate confidence.",
    "level": "Ignored"
  },
  "Time to Market": {
    "resourceId": "qwciWeifRRf",
    "category": "Time to Market",
    "calculated_at": "2025-05-16T20:29:57",
    "ai_confidence": 72.35,
    "ai_mentions": 3.9,
    "ai_alignment": 7.7,
    "ai_depth": 7.3,
    "ai_intent": 7.9,
    "ai_audience": 8.0,
    "ai_signal": 7.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 72.0,
    "reasoning": "The content discusses how simplifying branching strategies fosters faster delivery, reduced risk, and consistent value, directly supporting Time to Market goals. It focuses on practical approaches (GitHub Flow, Release Flow) that enhance speed of delivery and reduce friction—key themes under the category. However, 'Time to Market' isn’t named directly, and measurement/metrics are not discussed in detail. The main intent and audience strongly align with practitioners aiming for faster, more frequent releases.",
    "reasoning_summary": "This content is highly relevant to Time to Market due to its focus on speeding up delivery by simplifying branching, even though it does not explicitly mention the category or provide metric details. Its practical guidance directly supports faster value delivery.",
    "level": "Secondary"
  },
  "Service Level Expectation": {
    "resourceId": "qwciWeifRRf",
    "category": "Service Level Expectation",
    "calculated_at": "2025-05-16T20:29:59",
    "ai_confidence": 3.2,
    "ai_mentions": 0.0,
    "ai_alignment": 1.3,
    "ai_depth": 1.6,
    "ai_intent": 1.7,
    "ai_audience": 4.1,
    "ai_signal": 5.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content focuses on simple branching strategies (GitHub Flow, Release Flow) and reducing complexity in version control. It emphasizes delivery speed and reducing risk but does not mention or discuss Service Level Expectation (SLE) or its concepts, calculation, or Agile/Kanban/Scrum relevance. The only tangential relevance is the emphasis on flow and delivery, which may have indirect implications for SLE, but no explicit or conceptual alignment. The intended audience is engineering teams, which can overlap with those concerned with SLE, but the topic is exclusively about branching strategy, not SLE. No penalties applied, as content is current and not adversarial.",
    "reasoning_summary": "This content focuses on simplifying branching strategies for better delivery, without addressing Service Level Expectation (SLE) concepts directly or indirectly. Its audience could overlap with SLE users but the message and details are unrelated to SLE, resulting in very low alignment and confidence.",
    "level": "Ignored"
  },
  "Empirical Process Control": {
    "resourceId": "qwciWeifRRf",
    "category": "Empirical Process Control",
    "calculated_at": "2025-05-16T20:30:01",
    "ai_confidence": 27.6,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 2.7,
    "ai_audience": 8.2,
    "ai_signal": 7.8,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 28.0,
    "reasoning": "The content focuses sharply on branching strategies in software development, emphasizing simplicity in version control workflows (GitHub Flow, Release Flow). It does not directly mention empirical process control or its key principles (transparency, inspection, adaptation), nor does it discuss decision-making based on evidence or empirical feedback. Its intent, depth, and conceptual alignment with empirical process control are marginal; the audience match and focus are high, but this is incidental. There are no satirical or obsolete elements, so no penalties applied. Confidence is low because the content centers on specific version control best practices, not empirical process control as defined.",
    "reasoning_summary": "While the article is clear and practical about branching strategies, it barely touches on empirical process control. Its focus is on workflow simplification, not evidence-based decision-making or Agile principles, so its fit for the category is low.",
    "level": "Ignored"
  },
  "Test First Development": {
    "resourceId": "qwciWeifRRf",
    "category": "Test First Development",
    "calculated_at": "2025-05-16T20:30:02",
    "ai_confidence": 14.1,
    "ai_mentions": 0.2,
    "ai_alignment": 2.0,
    "ai_depth": 2.0,
    "ai_intent": 1.9,
    "ai_audience": 4.0,
    "ai_signal": 3.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content exclusively discusses branching strategies, specifically GitHub Flow and Release Flow, with no direct or implied reference to Test First Development principles such as defining success criteria, test automation, or collaborative test-first practices. There are no explicit or indirect mentions of testing, and the alignment with the category is weak. The depth is limited to branching and flow optimization, not test-first concepts. The intended audience of engineering teams somewhat overlaps, but overall, the content is not relevant to Test First Development.",
    "reasoning_summary": "This content is about branching strategies—not Test First Development. It focuses on optimizing workflow in version control rather than on defining tests or criteria before coding. There are no relevant references to test practices, so confidence is very low.",
    "level": "Ignored"
  },
  "Product Validation": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Validation",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 11.83,
    "ai_mentions": 0.3,
    "ai_alignment": 1.1,
    "ai_depth": 1.2,
    "ai_intent": 1.3,
    "ai_audience": 1.4,
    "ai_signal": 1.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content centers on software branching strategies, emphasizing practices like GitHub Flow to increase delivery speed and reduce risk. While these practices can indirectly support faster delivery and thereby enable more rapid feedback, there is no direct or substantial discussion of Product Validation as defined. There is no mention or in-depth treatment of methodologies for validating product ideas with real users, nor are feedback loops, user testing, market fit, or related topics discussed. The audience is technical (teams/engineers), but the focus is on process efficiency and risk reduction rather than validation with users or market alignment.",
    "reasoning_summary": "This content focuses on simplifying branching strategies to increase engineering efficiency. While helpful for teams, it does not address product validation topics such as user testing or market fit. Its lack of alignment and depth in relation to the Product Validation category leads to a very low confidence score.",
    "level": "Ignored"
  },
  "Market Adaptability": {
    "resourceId": "qwciWeifRRf",
    "category": "Market Adaptability",
    "calculated_at": "2025-05-16T20:29:56",
    "ai_confidence": 73.32,
    "ai_mentions": 3.8,
    "ai_alignment": 7.6,
    "ai_depth": 6.4,
    "ai_intent": 7.2,
    "ai_audience": 8.0,
    "ai_signal": 8.2,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 73.0,
    "reasoning": "The content directly discusses how simplifying branching strategies like GitHub Flow and Release Flow enable teams to deliver faster and reduce risk—key aspects of market responsiveness. However, it does not explicitly mention 'market adaptability', Agile, DevOps, or Lean, and it treats the topic at a practical, not strategic, level. The alignment and intent are strong, since reducing branching complexity improves agility, but the discussion remains mostly at the technical technique level rather than deeply engaging with broader adaptability frameworks or principles. No penalties apply as it is current, supportive, and relevant.",
    "reasoning_summary": "This content emphasizes how streamlined branching accelerates delivery and reduces risk—hallmarks of adaptability. While not labeling itself as 'Market Adaptability,' its techniques promote agility and responsiveness. It's well aligned, practical, and targets relevant practitioners, supporting a moderately high confidence score.",
    "level": "Secondary"
  },
  "Value Stream Mapping": {
    "resourceId": "qwciWeifRRf",
    "category": "Value Stream Mapping",
    "calculated_at": "2025-05-16T20:29:59",
    "ai_confidence": 14.16,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.7,
    "ai_intent": 1.5,
    "ai_audience": 4.6,
    "ai_signal": 2.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 14.0,
    "reasoning": "The content discusses simplifying branching strategies for better software delivery, with references to flow and reducing friction in engineering teams. However, there are no direct mentions or exploration of Value Stream Mapping (VSM). The main theme is version control practices (GitHub Flow, Release Flow), not VSM or workflow visualization. Only a minor conceptual overlap exists in discussing 'flow,' which is too general and not specifically aligned with VSM. The audience is engineers/devs who could use VSM, but the content does not target VSM education or tools.",
    "reasoning_summary": "This content focuses on simplifying branching in version control, without discussing Value Stream Mapping concepts or techniques. There's minimal alignment beyond a generic emphasis on flow, so confidence in its fit for the category is very low.",
    "level": "Ignored"
  },
  "Automated Testing": {
    "resourceId": "qwciWeifRRf",
    "category": "Automated Testing",
    "calculated_at": "2025-05-16T20:30:00",
    "ai_confidence": 17.65,
    "ai_mentions": 0.2,
    "ai_alignment": 2.1,
    "ai_depth": 1.8,
    "ai_intent": 3.0,
    "ai_audience": 6.8,
    "ai_signal": 2.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 18.0,
    "reasoning": "The content focuses entirely on branching strategies and version control (GitHub Flow, Release Flow), not on automated testing concepts. It does mention continuous deployment, which can involve automated testing, but there is no explicit or substantial discussion of test automation, tools, frameworks, methodologies, or philosophies specified in the category. The audience may overlap with those interested in automated testing but the fit is very weak, as the main intent is about simplifying source control flow. There is almost no signal relevant to automated testing best practices.",
    "reasoning_summary": "This content centers on simplifying branching strategies in version control, not automated testing. While it briefly mentions continuous deployment, there’s no meaningful coverage of test automation, making it a weak fit for this category.",
    "level": "Ignored"
  },
  "Mentoring": {
    "resourceId": "qwciWeifRRf",
    "category": "Mentoring",
    "calculated_at": "2025-05-16T20:30:02",
    "ai_confidence": 11.01,
    "ai_mentions": 0.1,
    "ai_alignment": 0.5,
    "ai_depth": 0.7,
    "ai_intent": 0.6,
    "ai_audience": 4.3,
    "ai_signal": 4.9,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 11.0,
    "reasoning": "The content focuses on technical branching strategies, advocating for simplicity in Git workflows for faster delivery. There is no explicit mention of mentoring or related concepts like coaching, feedback, leadership development, or fostering learning. The advice is technical (process and tooling-focused), not developmental, with minimal alignment to the mentoring category or its audience, except that it might inform engineering team leads. There is no depth or intent connected to mentoring practices.",
    "reasoning_summary": "This content focuses on simplifying version control practices and offers technical workflow advice, not mentoring. It lacks direct reference to coaching, leadership development, or professional growth, making it a poor fit for the Mentoring category.",
    "level": "Ignored"
  },
  "Engineering Excellence": {
    "resourceId": "qwciWeifRRf",
    "category": "Engineering Excellence",
    "calculated_at": "2025-05-16T20:30:03",
    "ai_confidence": 83.19,
    "ai_mentions": 3.5,
    "ai_alignment": 9.4,
    "ai_depth": 8.7,
    "ai_intent": 8.1,
    "ai_audience": 8.9,
    "ai_signal": 8.6,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 83.0,
    "reasoning": "While the content does not explicitly mention 'Engineering Excellence,' it substantially addresses one of its core topics: streamlining branching strategies for better software delivery practice. The discussion emphasizes simplicity in workflow (GitHub Flow, Release Flow), fast delivery, and risk reduction—directly aligning with goals of code quality, CI/CD, and delivery efficacy found in this category. Although discussion is focused tightly on branching and not wider aspects like code reviews or metrics, it demonstrates depth in this specific area. The clear audience is engineering practitioners, and the signal-to-noise ratio stays high with focused, practical advice.",
    "reasoning_summary": "This content solidly fits 'Engineering Excellence' by advocating for simple, effective branching strategies that foster better delivery and engineering outcomes. It's practical, relevant, and aimed at developers, with a clear focus on improving engineering practices.",
    "level": "Primary"
  },
  "Definition of Workflow": {
    "resourceId": "qwciWeifRRf",
    "category": "Definition of Workflow",
    "calculated_at": "2025-05-23T22:06:20",
    "ai_confidence": 13.2,
    "ai_mentions": 0.2,
    "ai_alignment": 2.4,
    "ai_depth": 0.9,
    "ai_intent": 1.3,
    "ai_audience": 5.2,
    "ai_signal": 1.5,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 13.0,
    "reasoning": "The content centers on simplifying software branching strategies, emphasizing delivery speed and risk reduction via GitHub Flow and Release Flow. There is no explicit mention or discussion of the Definition of Workflow as articulated in Kanban/agile contexts. The focus is on source control and engineering flow, not on defining policies or agreements governing workflow in a Kanban sense. Main ideas, depth, and intent are not aligned with the strict Definition of Workflow category and there's minimal overlap with the intended audience and signal. No penalties were necessary.",
    "reasoning_summary": "This content addresses software branching strategies, not the Definition of Workflow as specified for Kanban/agile. While it mentions 'flow' in delivery, it lacks explicit ties to workflow policies or agreements, and does not fit the category's specialized scope.",
    "level": "Ignored"
  },
  "Objective Key Results": {
    "resourceId": "qwciWeifRRf",
    "category": "Objective Key Results",
    "calculated_at": "2025-06-17T16:29:18",
    "ai_confidence": 2.8,
    "ai_mentions": 0.2,
    "ai_alignment": 0.4,
    "ai_depth": 0.6,
    "ai_intent": 0.4,
    "ai_audience": 0.8,
    "ai_signal": 1.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 3.0,
    "reasoning": "The content discusses branching strategies and emphasizes simplicity and flow in version control (GitHub Flow, Release Flow), but it does not mention or discuss Objective Key Results (OKRs) or their principles. There are no direct or implied OKR concepts, goals, or frameworks present. The content is focused entirely on practical DevOps branching and delivery methods. Although the audience might overlap with those interested in OKRs (as both can be relevant for agile/DevOps teams), there is no substantive or conceptual alignment with the OKR framework, nor discussion of objectives, key results, measurement, or outcome-based planning.",
    "reasoning_summary": "The content addresses branching strategies for software delivery and does not discuss Objectives and Key Results (OKRs) at any level. Concepts, intent, and terminology do not align with the OKR framework or its key principles.",
    "level": "Ignored"
  },
  "Product Developer": {
    "resourceId": "qwciWeifRRf",
    "category": "Product Developer",
    "calculated_at": "2025-06-23T09:03:54",
    "ai_confidence": 20.42,
    "ai_mentions": 0.3,
    "ai_alignment": 2.1,
    "ai_depth": 1.5,
    "ai_intent": 3.7,
    "ai_audience": 5.2,
    "ai_signal": 7.0,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content focuses on branching strategies and advocates for simplicity in version control, specifically discussing GitHub Flow and Release Flow. There is no direct mention or exploration of the 'Product Developer' role, accountability, or associated behaviors as defined by the category. The advice targets engineering teams in general and does not delve into product development frameworks or collective accountability. While the practices may be relevant for Product Developers, the intent and framing do not align closely, resulting in low scores for mentions, alignment, depth, and intent. The audience is somewhat aligned (engineering teams), and the content is focused (high signal), but it does not address the key topics or formal accountability detailed in the Product Developer tag.",
    "reasoning_summary": "This content discusses effective branching strategies for software delivery but does not address Product Developer accountability, role definitions, or responsibilities. It targets engineering teams, not Product Developers explicitly or in the context required by the category.",
    "level": "Ignored"
  },
  "Collective Intelligence": {
    "resourceId": "qwciWeifRRf",
    "category": "Collective Intelligence",
    "calculated_at": "2025-06-23T09:03:53",
    "ai_confidence": 11.93,
    "ai_mentions": 0.2,
    "ai_alignment": 1.1,
    "ai_depth": 0.9,
    "ai_intent": 1.0,
    "ai_audience": 6.3,
    "ai_signal": 4.7,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 12.0,
    "reasoning": "The content exclusively discusses branching strategies in software development, focusing on team productivity through simplicity (GitHub Flow, Release Flow). There is no explicit or implicit discussion of human-AI collaboration, agency, or emergent collective intelligence. The audience partially overlaps (engineering teams), but no points align with the core category definition, resulting in extremely low confidence.",
    "reasoning_summary": "This content is strictly about human team workflow optimization in code management and does not touch on human-AI collaboration, agency, or any aspect of Collective Intelligence as defined. Alignment and relevance are minimal.",
    "level": "Ignored"
  },
  "Agentic Engineering": {
    "resourceId": "qwciWeifRRf",
    "category": "Agentic Engineering",
    "calculated_at": "2025-07-23T12:05:39",
    "ai_confidence": 41.55,
    "ai_mentions": 0.2,
    "ai_alignment": 4.2,
    "ai_depth": 3.9,
    "ai_intent": 4.6,
    "ai_audience": 4.3,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 42.0,
    "reasoning": "The content centers on simplifying branching strategies for better flow, speed, and risk reduction. While these are adjacent to agentic principles—such as enabling continuous value delivery and reducing process friction—they are not discussed from a deliberate, agency-maximizing engineering or philosophical stance. There is no direct use of 'Agentic Engineering' or explicit mention of systemic observability, autonomy, or AI augmentation. The focus is practical (branching practice), targeting engineering teams, and largely free of off-topic content. There's reasonable alignment on empowering teams to work with greater autonomy and deliver continously, which slightly supports the agentic engineering concept, but the content does not substantially explore deeper aspects like decentralised decision-making or AI/human agency.",
    "reasoning_summary": "This content advocates for simplified branching to accelerate delivery and reduce friction, which aligns partially with agentic engineering ideals like team autonomy and continuous value delivery, but lacks explicit focus on agency-maximizing practices or philosophical depth.",
    "level": "Tertiary"
  },
  "Agentic Software Delivery": {
    "resourceId": "qwciWeifRRf",
    "category": "Agentic Software Delivery",
    "calculated_at": "2025-08-07T06:10:22",
    "ai_confidence": 19.86,
    "ai_mentions": 0.0,
    "ai_alignment": 2.4,
    "ai_depth": 1.6,
    "ai_intent": 2.1,
    "ai_audience": 9.4,
    "ai_signal": 6.1,
    "ai_penalties_applied": false,
    "ai_penalty_points": 0,
    "ai_penalty_details": "none",
    "final_score": 20.0,
    "reasoning": "The content discusses simplifying branching strategies (GitHub Flow, Release Flow) to improve software delivery speed. There is no mention or exploration of agentic principles, AI agents, contextual intelligence, or human-agent collaboration. While relevant to modern DevOps and engineering teams, the topic is traditional and omits elements that define Agentic Software Delivery. The audience is aligned (engineers, delivery teams) and the piece is focused, but overall, alignment, depth, and intent toward the category are weak.",
    "reasoning_summary": "The content clearly addresses modern software delivery flow but makes no reference to agentic practices, autonomous agents, or the integration of AI and human expertise. Its fit for 'Agentic Software Delivery' is low and purely incidental.",
    "level": "Ignored"
  }
}